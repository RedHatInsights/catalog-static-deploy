{"version":3,"sources":["webpack:///./src/smart-components/order/order-detail/order-details.tsx","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextList.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextListItem.js"],"names":["formatMessage","order","platform","progressMessages","portfolio","orderItem","hasGutter","md","lg","xl","className","component","h2","orderDetails","dl","dt","orderID","dd","id","ordered","date","created_at","variant","name","undefined","orderParameters","service_parameters","src","orderProgressMessages","data","TextListVariants","TextList","_a","children","ul","props","Component","Object","assign","displayName","TextListItemVariants","TextListItem","li"],"mappings":"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","file":"js/order-details~31ecd969.9a255604127505e83041.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  TextContent,\n  Text,\n  TextVariants,\n  TextList,\n  TextListVariants,\n  TextListItem,\n  TextListItemVariants,\n  Grid,\n  Card,\n  CardBody,\n  GridItem,\n  Stack,\n  StackItem\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\n\nimport ReactJsonView from 'react-json-view';\nimport statesMessages from '../../../messages/states.messages';\nimport labelMessages from '../../../messages/labels.messages';\nimport ordersMessages from '../../../messages/orders.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport { OrderDetail } from '../../../redux/reducers/order-reducer';\nimport { CatalogRootState } from '../../../types/redux';\n\nconst OrderDetails: React.ComponentType = () => {\n  const formatMessage = useFormatMessage();\n  const {\n    order,\n    platform,\n    progressMessages,\n    portfolio,\n    orderItem\n  } = useSelector<CatalogRootState, OrderDetail>(\n    ({ orderReducer: { orderDetail } }) => orderDetail\n  );\n\n  return (\n    <Grid hasGutter>\n      <GridItem md={12} lg={6} xl={4}>\n        <Stack hasGutter>\n          <StackItem>\n            <Card>\n              <CardBody>\n                <TextContent>\n                  <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n                    {formatMessage(ordersMessages.orderDetails)}\n                  </Text>\n                  <TextList component={TextListVariants.dl}>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      {formatMessage(ordersMessages.orderID)}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {order.id}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      {formatMessage(statesMessages.ordered)}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      <DateFormat date={order.created_at} variant=\"relative\" />\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      {formatMessage(labelMessages.portfolio)}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {portfolio?.name}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      {formatMessage(labelMessages.platform)}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {platform?.name || undefined}\n                    </TextListItem>\n                  </TextList>\n                </TextContent>\n              </CardBody>\n            </Card>\n          </StackItem>\n          <StackItem>\n            <Card>\n              <CardBody>\n                <TextContent>\n                  <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n                    {formatMessage(ordersMessages.orderParameters)}\n                  </Text>\n                </TextContent>\n                {orderItem?.service_parameters && (\n                  <ReactJsonView src={orderItem.service_parameters} />\n                )}\n              </CardBody>\n            </Card>\n          </StackItem>\n        </Stack>\n      </GridItem>\n      <GridItem md={12} lg={6} xl={8}>\n        <Card>\n          <CardBody>\n            <TextContent>\n              <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n                {formatMessage(ordersMessages.orderProgressMessages)}\n              </Text>\n            </TextContent>\n            {progressMessages?.data && (\n              <ReactJsonView src={progressMessages.data} />\n            )}\n          </CardBody>\n        </Card>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default OrderDetails;\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nexport var TextListVariants;\n(function (TextListVariants) {\n    TextListVariants[\"ul\"] = \"ul\";\n    TextListVariants[\"ol\"] = \"ol\";\n    TextListVariants[\"dl\"] = \"dl\";\n})(TextListVariants || (TextListVariants = {}));\nexport const TextList = (_a) => {\n    var { children = null, className = '', component = TextListVariants.ul } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { \"data-pf-content\": true, className: css(className) }), children));\n};\nTextList.displayName = 'TextList';\n//# sourceMappingURL=TextList.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nexport var TextListItemVariants;\n(function (TextListItemVariants) {\n    TextListItemVariants[\"li\"] = \"li\";\n    TextListItemVariants[\"dt\"] = \"dt\";\n    TextListItemVariants[\"dd\"] = \"dd\";\n})(TextListItemVariants || (TextListItemVariants = {}));\nexport const TextListItem = (_a) => {\n    var { children = null, className = '', component = TextListItemVariants.li } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { \"data-pf-content\": true, className: css(className) }), children));\n};\nTextListItem.displayName = 'TextListItem';\n//# sourceMappingURL=TextListItem.js.map"],"sourceRoot":""}