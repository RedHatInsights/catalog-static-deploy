{"version":3,"sources":["webpack:///./src/utilities/async-form-validator.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/helpers/platform/platform-helper.js","webpack:///./src/redux/actions/platform-actions.js","webpack:///./src/presentational-components/shared/content-gallery-empty-state.js","webpack:///./src/presentational-components/shared/card-common.js","webpack:///./src/presentational-components/styled-components/ellipsis-text-container.js","webpack:///./src/presentational-components/styled-components/card.js","webpack:///./src/presentational-components/styled-components/styled-gallery.js","webpack:///./src/smart-components/content-gallery/content-gallery.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/presentational-components/shared/card-checkbox.js","webpack:///./src/presentational-components/shared/service-offering-body.js","webpack:///./src/toolbar/helpers.js","webpack:///./src/smart-components/portfolio/portfolio-item.js","webpack:///./src/toolbar/schemas/products-toolbar.schema.js","webpack:///./src/smart-components/products/products.js"],"names":["asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","getNewPage","request","debouncePromise","direction","propTypes","PropTypes","shape","isRequired","func","any","string","bool","defaultProps","axiosInstance","getAxiosInstance","graphqlInstance","getGraphqlInstance","getPlatforms","post","SOURCES_API_BASE","query","then","data","application_types","sources","getPlatform","platformId","get","getPlatformItems","filter","filterQuery","TOPOLOGICAL_INVENTORY_API_BASE","getPlatformInventories","defaultSettings","getServiceOffering","serviceOfferingId","sourceId","Promise","all","source","source_type_id","icon_url","service","fetchPlatforms","dispatch","type","ActionTypes","PlatformHelper","payload","error","fetchPlatformItems","fetchSelectedPlatform","id","fetchPlatformInventories","fetchServiceOffering","ContentGalleryEmptyState","title","Icon","description","PrimaryAction","renderDescription","icon","component","TextVariants","h1","EmptyStatePrimaryAction","url","label","hasPermission","pathname","preserveSearch","variant","CardPropText","styled","div","ItemDetails","toDisplay","item","map","prop","key","arrayOf","oneOfType","node","EllipsisTextContainer","StyledCardBody","CardBody","StyledCard","Card","StyledGalleryItem","isDisabled","NoItems","ContentGallery","isLoading","items","renderEmptyState","length","hasGutter","array","BottomPaginationContainer","children","CardCheckbox","handleCheck","isChecked","onClick","event","stopPropagation","onChange","aria-label","ServiceOfferingCardBody","name","distributor","display_name","searchParams","portfolioName","h3","small","long_description","createSingleItemGroup","groupName","hidden","toolbarComponentTypes","TOOLBAR_GROUP","fields","TOOLBAR_ITEM","createLinkButton","LINK","BUTTON","StyledLevel","Level","PortfolioItem","removeInProgress","isSelected","src","CATALOG_API_BASE","service_offering_source_ref","isSelectable","onSelect","orderUrl","portfolio_id","metadata","user_capabilities","destroy","createPortfolioToolbarSchema","fetchProducts","filterProps","searchValue","onFilterChange","placeholder","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","noData","LEVEL","TOOLBAR","FILTER_TOOLBAR_ITEM","isClearable","LEVEL_ITEM","debouncedFilter","asyncFormValidator","value","filteringCallback","fetchPortfolioItems","initialState","filterValue","isOpen","isFetching","isFiltering","productsState","state","action","Products","viewState","useInitialUriHash","release","useContext","AppContext","useReducer","products","stateDispatch","is_org_admin","UserContext","userIdentity","identity","user","useDispatch","useSelector","portfolioReducer","portfolioItems","useEffect","scrollToTop","insights","chrome","appNavClick","secondaryNav","handleFilterItems","galleryItems","PORTFOLIO_ITEM_ROUTE","portfolio","emptyStateProps","href","Button","TextContent","Text","p","document","baseURI","WrenchIcon","SearchIcon","schema","createProductsToolbarSchema","dropDirection","_e"],"mappings":"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","file":"js/products~91f4305a.f18118c41b3f7975cbcc.js","sourcesContent":["import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport {\n  TOPOLOGICAL_INVENTORY_API_BASE,\n  SOURCES_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nexport const getPlatforms = () => {\n  return graphqlInstance\n    .post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n    .then(({ data: { application_types } }) => application_types)\n    .then(([{ sources }]) => sources);\n};\n\nexport const getPlatform = (platformId) => {\n  return axiosInstance.get(`${SOURCES_API_BASE}/sources/${platformId}`);\n};\n\nexport const getPlatformItems = (platformId, filter, options) => {\n  const filterQuery = filter ? `&filter[name][contains_i]=${filter}` : '';\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_offerings?filter[archived_at][nil]${filterQuery}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings`\n    );\n  }\n};\n\nexport const getPlatformInventories = (\n  platformId,\n  filter = '',\n  options = defaultSettings\n) => {\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_inventories?filter[name][contains_i]=${filter}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_inventories?limit=${options.limit}&offset=${options.offset}`\n    );\n  }\n};\n\nexport const getServiceOffering = (serviceOfferingId, sourceId) =>\n  Promise.all([\n    axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings/${serviceOfferingId}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${sourceId}`)\n      .then((source) => {\n        return axiosInstance\n          .get(`${SOURCES_API_BASE}/source_types/${source.source_type_id}`)\n          .then(({ icon_url }) => ({\n            ...source,\n            icon_url\n          }));\n      })\n  ]).then(([service, source]) => ({\n    service,\n    source\n  }));\n","import * as ActionTypes from '../action-types';\nimport * as PlatformHelper from '../../helpers/platform/platform-helper';\n\nexport const fetchPlatforms = () => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_PLATFORMS}_PENDING` });\n  return PlatformHelper.getPlatforms()\n    .then((data) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_FULFILLED`,\n        payload: data\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchPlatformItems = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_ITEMS,\n  payload: PlatformHelper.getPlatformItems(platformId, filter, options),\n  meta: {\n    platformId,\n    filter,\n    ...options\n  }\n});\n\nexport const fetchMultiplePlatformItems = (platformsId) => {\n  const platformPromisses = platformsId.map((platformId) =>\n    PlatformHelper.getPlatformItems(platformId).then((data) => ({\n      [platformId]: data\n    }))\n  );\n  return {\n    type: ActionTypes.FETCH_MULTIPLE_PLATFORM_ITEMS,\n    payload: Promise.all(platformPromisses).then((data) =>\n      data.reduce(\n        (acc, curr) => ({\n          ...acc,\n          ...curr\n        }),\n        {}\n      )\n    )\n  };\n};\n\nexport const fetchSelectedPlatform = (id) => ({\n  type: ActionTypes.FETCH_PLATFORM,\n  payload: PlatformHelper.getPlatform(id)\n});\n\nexport const searchPlatformItems = (value) => ({\n  type: ActionTypes.FILTER_PLATFORM_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const fetchPlatformInventories = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_INVENTORIES,\n  payload: PlatformHelper.getPlatformInventories(platformId, filter, options)\n});\n\nexport const fetchServiceOffering = (...args) => ({\n  type: ActionTypes.FETCH_SERVICE_OFFERING,\n  payload: PlatformHelper.getServiceOffering(...args)\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ContentGalleryEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <div className=\"pf-u-mt-xl\">\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={Icon} />\n      <TextContent>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </TextContent>\n      <EmptyStateBody>\n        {description}\n        {renderDescription()}\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        {PrimaryAction && <PrimaryAction />}\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </div>\n);\n\nContentGalleryEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nContentGalleryEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default ContentGalleryEmptyState;\n\nexport const EmptyStatePrimaryAction = ({\n  url,\n  label,\n  hasPermission = false,\n  id\n}) =>\n  hasPermission && (\n    <CatalogLink id={id} pathname={url} preserveSearch>\n      <Button variant=\"primary\">{label}</Button>\n    </CatalogLink>\n  );\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  hasPermission: PropTypes.bool\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst CardPropText = styled.div`\n  overflow: hidden;\n`;\n\nconst ItemDetails = ({ toDisplay = [], ...item }) =>\n  toDisplay.map((prop) => (\n    <CardPropText key={`card-prop-${prop}`}>{item[prop]}</CardPropText>\n  ));\n\nItemDetails.propTypes = {\n  toDisplay: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.arrayOf(PropTypes.node)\n    ])\n  )\n};\n\nItemDetails.defaultProps = {\n  toDisplay: []\n};\n\nexport default ItemDetails;\n","import styled from 'styled-components';\n\nconst EllipsisTextContainer = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nexport default EllipsisTextContainer;\n","import styled from 'styled-components';\nimport { CardBody } from '@patternfly/react-core';\n\nexport const StyledCardBody = styled(CardBody)`\n  height: 230px;\n  overflow: hidden;\n  padding: 0 !important;\n  margin: 0 24px 24px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Card, GalleryItem } from '@patternfly/react-core';\n\nexport const StyledCard = styled(Card)`\n  height: 330px;\n  position: relative;\n`;\n\nexport const StyledGalleryItem = styled(({ isDisabled, ...props }) => (\n  <GalleryItem {...props} />\n))`\n  position: relative;\n  ::after {\n    display: ${({ isDisabled }) => (isDisabled ? 'block' : 'none')};\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    content: '';\n    background-color: rgba(210, 210, 210, 0.5);\n    z-index: 1;\n    cursor: progress;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport { Text, TextVariants, Gallery } from '@patternfly/react-core';\n\nimport { CardLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst NoItems = () => (\n  <div>\n    <Text component={TextVariants.h1}>No items found</Text>\n  </div>\n);\n\nconst ContentGallery = ({ isLoading, items, renderEmptyState }) =>\n  isLoading ? (\n    <CardLoader />\n  ) : items.length === 0 ? (\n    renderEmptyState ? (\n      renderEmptyState()\n    ) : (\n      <NoItems />\n    )\n  ) : (\n    <Section type=\"content\">\n      <Gallery hasGutter className=\"content-gallery\">\n        {items}\n      </Gallery>\n    </Section>\n  );\n\nContentGallery.propTypes = {\n  isLoading: PropTypes.bool,\n  items: PropTypes.array,\n  renderEmptyState: PropTypes.func\n};\nexport default ContentGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    {children}\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CardCheckbox = ({ handleCheck, isChecked, id }) => (\n  <Checkbox\n    onClick={(event) => event.stopPropagation()}\n    isChecked={isChecked}\n    onChange={handleCheck}\n    aria-label=\"card checkbox\"\n    id={id}\n  />\n);\n\nCardCheckbox.propTypes = {\n  handleCheck: propTypes.func,\n  isChecked: propTypes.bool,\n  id: propTypes.string\n};\n\nexport default CardCheckbox;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ItemDetails from './card-common';\nimport ConditionalLink from './conditional-link';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { StyledCardBody } from '../styled-components/card';\n\nconst ServiceOfferingCardBody = ({\n  name,\n  display_name,\n  distributor,\n  pathname,\n  searchParams,\n  preserveSearch,\n  portfolioName,\n  ...props\n}) => (\n  <StyledCardBody>\n    <TextContent>\n      <ConditionalLink\n        pathname={pathname}\n        searchParams={searchParams}\n        preserveSearch={preserveSearch}\n      >\n        <Text component={TextVariants.h3} title={name}>\n          <EllipsisTextContainer>{name}</EllipsisTextContainer>\n        </Text>\n      </ConditionalLink>\n      {distributor && <Text component={TextVariants.small}>{distributor}</Text>}\n      {portfolioName && (\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component=\"small\">\n            Portfolio\n          </Text>\n          <Text>{portfolioName}</Text>\n        </Fragment>\n      )}\n    </TextContent>\n    <ItemDetails\n      toDisplay={[props.description ? 'description' : 'long_description']}\n      {...props}\n    />\n  </StyledCardBody>\n);\n\nServiceOfferingCardBody.propTypes = {\n  name: PropTypes.string,\n  display_name: PropTypes.string,\n  distributor: PropTypes.string,\n  long_description: PropTypes.string,\n  description: PropTypes.string,\n  pathname: PropTypes.string,\n  preserveSearch: PropTypes.bool,\n  searchParams: PropTypes.shape({ [PropTypes.string]: PropTypes.string }),\n  portfolioName: PropTypes.string\n};\n\nexport default ServiceOfferingCardBody;\n","import { toolbarComponentTypes } from './toolbar-mapper';\n\nexport const createSingleItemGroup = ({\n  groupName,\n  hidden = false,\n  ...item\n}) => ({\n  component: toolbarComponentTypes.TOOLBAR_GROUP,\n  key: `${groupName}/single-toolbar-item-group`,\n  fields: hidden\n    ? []\n    : [\n        {\n          component: toolbarComponentTypes.TOOLBAR_ITEM,\n          key: `${groupName}/single-toolbar-item`,\n          fields: [item]\n        }\n      ]\n});\n\nexport const createLinkButton = ({ pathname, preserveSearch, ...item }) => ({\n  component: toolbarComponentTypes.LINK,\n  pathname,\n  preserveSearch,\n  key: `${item.key}/button-link`,\n  isDisabled: item.isDisabled,\n  fields: [\n    {\n      component: toolbarComponentTypes.BUTTON,\n      ...item\n    }\n  ]\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level } from '@patternfly/react-core';\n\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport CardCheckbox from '../../presentational-components/shared/card-checkbox';\nimport ServiceOfferingCardBody from '../../presentational-components/shared/service-offering-body';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../../presentational-components/styled-components/styled-gallery';\nimport styled from 'styled-components';\n\nconst StyledLevel = styled(Level)`\n  flex: 1;\n`;\n\nconst PortfolioItem = (props) => (\n  <StyledGalleryItem isDisabled={props.removeInProgress && props.isSelected}>\n    <StyledCard>\n      <CardHeader>\n        <StyledLevel>\n          <CardIcon\n            src={`${CATALOG_API_BASE}/portfolio_items/${props.id}/icon`}\n            sourceId={props.service_offering_source_ref}\n          />\n          {props.isSelectable && (\n            <CardCheckbox\n              handleCheck={() => props.onSelect(props.id)}\n              isChecked={props.isSelected}\n              id={props.id}\n            />\n          )}\n        </StyledLevel>\n      </CardHeader>\n      <ServiceOfferingCardBody {...props} />\n      <CardFooter></CardFooter>\n    </StyledCard>\n  </StyledGalleryItem>\n);\n\nPortfolioItem.propTypes = {\n  id: PropTypes.string,\n  platformId: PropTypes.string,\n  service_offering_source_ref: PropTypes.string,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  orderUrl: PropTypes.string,\n  removeInProgress: PropTypes.bool,\n  portfolio_id: PropTypes.string,\n  metadata: PropTypes.shape({\n    user_capabilities: PropTypes.shape({ destroy: PropTypes.bool }).isRequired\n  }).isRequired\n};\n\nexport default PortfolioItem;\n","import { toolbarComponentTypes } from '../toolbar-mapper';\nimport { createSingleItemGroup } from '../helpers';\n\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nconst createPortfolioToolbarSchema = ({\n  meta,\n  fetchProducts,\n  isLoading,\n  filterProps: { searchValue, onFilterChange, placeholder }\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'products-top-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'products-toolbar-title',\n          title: 'Products',\n          description: 'All products collected from your portfolios',\n          noData: meta.noData\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'Products-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'main-portfolio-toolbar',\n                  fields: [\n                    createSingleItemGroup({\n                      groupName: 'filter-group',\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      key: 'filter-input',\n                      searchValue,\n                      onFilterChange,\n                      placeholder,\n                      isClearable: true\n                    })\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            key: 'products-pagination',\n                            meta,\n                            apiProps: searchValue,\n                            apiRequest: fetchProducts,\n                            isDisabled: isLoading,\n                            isCompact: true\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","import React, { useContext, useEffect, useReducer, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { WrenchIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport { fetchPortfolioItems } from '../../redux/actions/portfolio-actions';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport PortfolioItem from '../portfolio/portfolio-item';\nimport createProductsToolbarSchema from '../../toolbar/schemas/products-toolbar.schema';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport {\n  Button,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport AppContext from '../../app-context';\nimport AsyncPagination from '../common/async-pagination';\nimport { PORTFOLIO_ITEM_ROUTE } from '../../constants/routes';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport UserContext from '../../user-context';\n\nconst debouncedFilter = asyncFormValidator(\n  (value, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(fetchPortfolioItems(value, defaultSettings)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst buildItemLink = ({ portfolio_id, id, service_offering_source_ref }) => {\n  if (portfolio_id && id && service_offering_source_ref) {\n    return {\n      pathname: portfolio_id && PORTFOLIO_ITEM_ROUTE,\n      searchParams: {\n        portfolio: portfolio_id,\n        'portfolio-item': id,\n        source: service_offering_source_ref\n      }\n    };\n  }\n\n  return {};\n};\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst productsState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n  }\n\n  return state;\n};\n\nconst Products = () => {\n  const viewState = useInitialUriHash();\n  const { release } = useContext(AppContext);\n  const [{ isFetching, filterValue, isFiltering }, stateDispatch] = useReducer(\n    productsState,\n    {\n      ...initialState,\n      filterValue: viewState?.products?.filter || ''\n    }\n  );\n  const {\n    userIdentity: {\n      identity: {\n        user: { is_org_admin }\n      }\n    }\n  } = useContext(UserContext);\n  const dispatch = useDispatch();\n  const { data, meta } = useSelector(\n    ({ portfolioReducer: { portfolioItems } }) => portfolioItems\n  );\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(\n        fetchPortfolioItems(viewState?.products?.filter, viewState?.products)\n      ),\n      dispatch(fetchPlatforms())\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n    insights.chrome.appNavClick({ id: 'products', secondaryNav: true });\n  }, []);\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(value, dispatch, (isFiltering) =>\n      stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  const galleryItems = data.map((item) => (\n    <PortfolioItem\n      key={item.id}\n      pathname={item.portfolio_id && PORTFOLIO_ITEM_ROUTE}\n      {...buildItemLink(item)}\n      {...item}\n      toDisplay={[]}\n    />\n  ));\n\n  const SourcesAction = () =>\n    is_org_admin && (\n      <a href={`${release}settings/sources/new`}>\n        <Button variant=\"primary\">Add source</Button>\n      </a>\n    );\n\n  const FilterAction = () => (\n    <Button variant=\"link\" onClick={() => handleFilterItems('')}>\n      Clear all filters\n    </Button>\n  );\n\n  const renderEmptyStateDescription = () => (\n    <Fragment>\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {meta.noData\n            ? 'Configure a source and add products into portfolios.'\n            : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'}\n        </Text>\n        {is_org_admin ? (\n          <Text component={TextVariants.p}>\n            To connect to a source, go to{' '}\n            <a href={`${document.baseURI}settings/sources`}>Sources</a>\n            &nbsp;under Settings.\n          </Text>\n        ) : (\n          <Text>\n            Contact your organization administrator to setup sources for\n            Catalog.\n          </Text>\n        )}\n      </TextContent>\n    </Fragment>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? SourcesAction : FilterAction,\n    title: meta.noData ? 'No products yet' : 'No results found',\n    renderDescription: renderEmptyStateDescription,\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createProductsToolbarSchema({\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterItems,\n            placeholder: 'Filter by product'\n          },\n          title: 'Products',\n          isLoading: isFiltering || isFetching,\n          meta,\n          fetchProducts: (...args) => dispatch(fetchPortfolioItems(...args))\n        })}\n      />\n      <ContentGallery\n        isLoading={isFiltering || isFetching}\n        items={galleryItems}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState {...emptyStateProps} />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiRequest={(_e, options) =>\n              dispatch(\n                fetchPortfolioItems(viewState?.products?.filter, options)\n              )\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Products;\n"],"sourceRoot":""}