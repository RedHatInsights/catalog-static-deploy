{"version":3,"file":"js/order-detail.7d42cf623737ce0ae438.js","mappings":"8OAoBA,QAbmE,SAAC,G,IAClEA,EAAO,UAEDC,GAAgB,SACtB,OACE,kBAAC,EAAAC,MAAK,CAACC,aAAa,KAAKC,KAAK,OAC3BH,EAAc,gBAA4B,CACzCI,GAAIL,M,eC6CZ,QA9CgE,SAAC,G,IAC/DM,EAAI,OACJC,EAAW,cACXC,EAAO,UACPC,EAAM,SAEAR,GAAgB,SACtB,OACE,kBAAC,EAAAS,MAAK,CACJD,OAAQA,EACRD,QAASA,EACTG,MAAM,IAAG,kBACO,eAChBC,OACE,kBAAC,EAAAV,MAAK,CAACE,KAAK,MAAMD,aAAa,MAC7B,kBAAC,EAAAU,wBAAuB,CAACC,MAAO,CAAEC,KAAM,aAAgB,IACvDd,EAAc,kBAGnBe,QAAQ,QACRC,QAAS,CACP,kBAAC,EAAAC,OAAM,CACLC,QAASZ,EACTa,OAAQ,eACRC,IAAI,eACJhB,GAAG,eACHW,QAAQ,UAEPf,EAAc,kBAEjB,kBAAC,EAAAiB,OAAM,CACLC,QAASX,EACTY,OAAQ,aACRC,IAAI,aACJhB,GAAG,aACHW,QAAQ,QAEPf,EAAc,kBAIlBA,EAAc,sBAAkC,CAAEK,KAAI,M,0BC1CvDgB,EAAoB,CAAC,oBACrBC,EAAmB,CAAC,aAEpBC,EAAY,SAACC,GAAe,YAAf,IAAAA,IAAAA,EAAA,IAAeH,EAAkBI,SAASD,IA+E7D,QApEsE,SAAC,G,IACrEA,EAAK,QACLzB,EAAO,UACP2B,EAAiB,oBACjBC,EAAe,kBACfC,EAAW,cACXC,EAAQ,WACR,IAAAC,UAAAA,OAAS,IAAG,GAAK,EAEX9B,GAAgB,SAChB+B,GAAW,UACX,GAAwC,IAAAC,WAAS,GAAhDC,EAAe,KAAEC,EAAkB,KACpCC,GAAU,SACVC,EAAa,WACjB,OAAAN,GAAaN,GAASF,EAAiBG,SAASD,IAalD,OACE,kBAAC,EAAAa,SAAQ,KACP,kBAAC,EAAgB,CACf9B,QAAS,WAAM,OAAA2B,GAAmB,IAClC1B,OAAQyB,EACR3B,YAAa,WACX4B,GAAmB,GACnBH,GAAS,QAAYhC,KAEvBM,KAAMqB,IAER,kBAAC,EAAAY,YAAW,KACTf,EAAUC,IACT,kBAAC,EAAAP,OAAM,CACLC,QAAS,WAAM,OAAAgB,GAAmB,IAClCK,YAAahB,EAAUC,GACvBgB,KAAK,SACLC,UAAU,aACVrC,GAAG,sBACHe,OAAO,uBAENnB,EAAc,kBAGlBoC,KACC,kBAAC,EAAAnB,OAAM,CACLC,QAAS,WAAM,OArCP,SAChBU,EACAD,EACAE,GAEAM,EAAQO,KAAK,CACXC,SAAU,KACVC,OAAQ,cAAchB,EAAW,mBAAmBD,EAAe,WAAWE,IA8BzDgB,CAAUjB,EAAaD,EAAiBE,IACvDU,YAAaH,IACbI,KAAK,SACLC,UAAU,aACVrC,GAAG,uBACHe,OAAO,wBAENnB,EAAc,iB,0QC5B3B,QAtCiF,SAAC,G,IAChF4B,EAAW,cACXkB,EAAO,UACPnB,EAAe,kBACfE,EAAQ,WACRL,EAAK,QAECxB,GAAgB,SACtB,OACE,kBAAC,EAAA+C,MAAK,CAACN,UAAU,aAAaO,WAAS,GACrC,kBAAC,EAAAD,MAAK,CAACC,WAAS,GACd,kBAAC,IAAQ,CACPnB,SAAUA,EACVoB,OAAQ,GACRC,IAAQ,KAAgB,oBAAoBvB,EAAe,UAE7D,kBAAC,EAAA1B,MAAK,CAACC,aAAa,KAAKC,KAAK,MAC5B,kBAAC,IAAW,CACVwC,SAAS,uCACTQ,aAAc,CACZC,UAAWxB,EACXyB,OAAQxB,EACR,iBAAkBF,IAGnBmB,KAIP,kBAAC,EAAAQ,UAAS,KACR,kBAAC,EAAAC,MAAK,KAAK,IAAkB/B,GAAM,CAAET,QAAQ,YAC1Cf,EAAc,KAAe,OAAqBwB,S,iqBC/BvDgC,GAAoB,QAAO,IAAP,CAAmB,+JAKvCC,GAAkB,SAAO,SAAC,GAAY,aAAV,IAAeC,EAAK,IAAtB,gBAA6B,OAC3D,gCAAYA,MADU,CAEtB,+DACuE,UAArD,SAAC,GAAmB,OAAP,aAAqB,OAAS,aAGzDC,GAAgB,SAAO,SAAC,GAAY,aAAV,IAAeD,EAAK,IAAtB,gBAA6B,mCAAQA,MAA7C,CAAuD,+CACL,UAA5D,SAAC,GAAmB,OAAP,aAAqB,cAAgB,aAsF9D,QAvDmE,SAAC,G,IAClEE,EAAO,UACPC,EAAU,aAEJ7D,GAAgB,SACd0C,GAAS,SAAoB,KAC/BoB,GAAkB,SACtB,SAAC,GAAsC,OAAT,4BAAwB,MAElD,GAAuB,IAAAC,eAArBpB,EAAQ,WAAEC,EAAM,SAElBoB,EAvCY,SAClB,EACAhE,G,IADEwB,QAAF,MAAwC,GAAE,GAAnC,MAEJ,OACH,CACEyC,KAAM,GACNvD,MAAOV,EAAc,mBAEvB,CACEiE,KAAM,YACNvD,MAAOV,EAAc,mBAEvB,CACEiE,KAAM,aACNvD,MAAOV,EAAc,oBAEvB,CACEiE,KAAM,aACNvD,MAAOV,EAAc,mBACrBuC,YAAY,QAAef,KAoBZ0C,CADCJ,EAAe,MACG9D,GAChCmE,EAAYH,EAASI,WACvB,SAAC,G,IAAEH,EAAI,OAAO,OAAAtB,EAAS0B,MAAM,KAAKC,QAAUL,EAAKM,QAAQ,IAAK,OAMhE,OAJAJ,EAAYA,EAAY,EAAIA,EAAY,EAKtC,yBAAK1B,UAAU,mCACb,wBAAIA,UAAU,mBACXuB,EAASQ,KAAI,SAAC,EAA6BC,G,IAA3BR,EAAI,OAAEvD,EAAK,QAAE6B,EAAU,aAAc,OACpD,kBAACoB,EAAa,CACZlB,UAAW,mBACTgC,IAAUN,EAAY,gBAAkB,IAE1C5B,WAAYA,GAAcsB,EAC1BzC,IAAK6C,GAAQQ,GAEb,kBAAChB,EAAe,GACdhB,UAAU,kBACVF,WAAYA,GAAcsB,GACrBtB,GAAcsB,EAAa,CAAEa,UAAW,GAAM,GAAG,CACtDxD,QAAS,WAAM,OAjBzBwB,EAAK,CAAEC,SAAU,GAAGiB,EAAUI,EAiBUS,GAjBSR,KAAQrB,OAAM,OAmBrD,kBAACY,EAAiB,GAChBmB,OAAK,EACLC,KAAG,EACHrC,WAAYA,GAAcsB,EAC1BlB,SAAU,GAAGiB,EAAUK,EACvBY,gBAAc,EACdC,gBAAgB,eACXvC,GAAcsB,EAAa,CAAEa,UAAW,GAAM,IAElDhE,W,gEClGjB,QARkC,SAAU,I,EAAA,iG,EAAA,iG,uEAAA,E,cC+BtCqE,GAAmB,IAAAC,OAAK,WAC5B,6EAEIC,GAAiB,IAAAD,OAAK,WAC1B,mEAEIE,GAAiB,IAAAF,OAAK,WAC1B,uFAEIG,GAAe,IAAAH,OAAK,WACxB,mEAEII,GAAiB,CACrB,aACA,iBACA,WACA,YACA,SA+IF,SA5IyC,W,MACjCpF,GAAgB,SAChB,GAA8B,IAAAgC,WAAS,GAAtC6B,EAAU,KAAEwB,EAAa,KACzBC,GAAe,OAA+BF,IAAe,GAC9DtB,GAAkB,SACtB,SAAC,GAAsC,OAAT,8BAE1B/B,GAAW,UACXwD,GAAmB,OAAe,CAACzB,KACzC,IAAA0B,YAAU,W,MAQR,OAPAH,GAAc,GACdI,QAAQC,IAAI,CACV3D,GACgB,QAAd,EAAA4D,OAAOC,eAAO,eAAEC,aAAa,WAAoB,WAEnD9D,GAAS,QAAkBuD,MAC1BQ,MAAK,WAAM,OAAAT,GAAc,MACrB,WAC2B,mBAArBE,GACTA,OAGH,IAEK,IAAAQ,EAA8CjC,EAAe,MAAtDkC,EAAuClC,EAAe,cAAvCmC,EAAwBnC,EAAe,SAA7BV,EAAcU,EAAe,UA8B/DoC,EA5Bc,WAClB,IAAMC,EAAW,CAACH,EAAeC,EAAU7C,GAAa,IAAIgD,QAC1D,SAAC,GAAiB,OAAP,cAEb,GAAwB,IAApBD,EAASE,OACX,OAAO,KAGT,IAAIC,EAAkB,GAOtB,OANIN,EAAcG,SAChBG,EAAgB5D,KAAKsD,EAAcO,QAEnCD,EAAkBH,EAAS3B,KAAI,SAAC,GAAe,OAAP,YAIxC,kBAAC,EAAAgC,MAAK,CACJpF,IAAI,uBACJL,QAAQ,UACR0F,UAAQ,EACR/F,MAAOV,EAAc,oBAAgC,CACnD0G,QAASJ,EAAgBK,KAAK,MAC9BC,MAAON,EAAgBD,WAMHQ,GAC5B,OACE,kBAAC,EAAAC,MAAK,KACJ,kBAAC,EAAAC,UAAS,CAACtE,UAAU,uCAClBoB,EACC,kBAAC,KAA6B,MAE9B,kBAAC,EAAAxB,SAAQ,KACP,kBAAC,EAAAU,MAAK,CAACN,UAAU,cACf,kBAAC,EAAAa,UAAS,KACR,kBAAC,KAAa,CAACb,UAAU,eACzB,kBAAC,IAAW,CAACE,SAAS,WACnB3C,EAAc,qBAIrB,kBAAC,EAAA+C,MAAK,CAACN,UAAU,gBACdyD,EACC,kBAAC,EAAyB,KACvBA,GAGH,kBAAC,EAAA7D,SAAQ,KACP,kBAAC,EAAAiB,UAAS,KACR,kBAAC,EAAgB,CAACvD,QAASgG,EAAM3F,MAEnC,kBAAC,EAAAkD,UAAS,KACR,kBAAC,EAAmB,CAClB5B,kBAAmBsE,EAAc3F,KACjCN,QAASgG,EAAM3F,GACfoB,MAAOuE,EAAMvE,MACbG,gBAAiBqE,EAAc5F,GAC/BwB,YAAawB,EAAUhD,GACvByB,SAAUoE,EAAS7F,GACnB0B,WAAiC,QAAtB,EAAAkE,EAAcgB,gBAAQ,eAAElF,aAAa,QAMxDoE,GACA,kBAAC,EAAsB,CACrBvE,gBAAiBqE,EAAc5F,GAC/BwB,YAAawB,EAAUhD,GACvByB,SAAUoE,EAAS7F,GACnB0C,QAASkD,EAAc3F,KACvBmB,MAAOuE,EAAMvE,UAMvB,kBAAC,EAAAuF,UAAS,KACR,kBAAC,EAAAD,MAAK,CAAC9D,WAAS,GACd,kBAAC,EAAA+D,UAAS,CAACtE,UAAU,6BACnB,kBAAC,EAAe,CAACoB,WAAYA,EAAYD,QAAS,QAEpD,kBAAC,EAAAmD,UAAS,CAACtE,UAAU,oCAClBoB,EACC,kBAAC,EAAAoD,SAAQ,KACP,kBAACC,EAAAA,QAAO,OAGV,kBAAC,EAAAC,SAAQ,CAACC,SAAU,+BAClB,kBAAC,EAAAC,OAAM,KACL,kBAAC,EAAAC,MAAK,CACJC,KAAS,KAAW,YACpBC,UAAWzC,IAEb,kBAAC,EAAAuC,MAAK,CAACC,KAAS,KAAW,cACzB,kBAACrC,EAAc,OAEjB,kBAAC,EAAAoC,MAAK,CAACC,KAAS,KAAW,cACzB,kBAACtC,EAAc,OAEjB,kBAAC,EAAAqC,MAAK,CAACC,KAAM,KAAaC,UAAWrC,Y","sources":["webpack:///./src/smart-components/order/order-detail/order-detail-title.tsx","webpack:///./src/smart-components/order/cancel-order-modal.tsx","webpack:///./src/smart-components/order/order-detail/order-toolbar-actions.tsx","webpack:///./src/smart-components/order/order-detail/order-detail-information.tsx","webpack:///./src/smart-components/order/order-detail/order-detail-menu.tsx","webpack:///./src/presentational-components/styled-components/unavailable-alert-container.ts","webpack:///./src/smart-components/order/order-detail/order-detail.tsx"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { Title } from '@patternfly/react-core';\nimport ordersMessages from '../../../messages/orders.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\n\nconst OrderDetailTitle: React.ComponentType<{ orderId: string }> = ({\n  orderId\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Title headingLevel=\"h1\" size=\"3xl\">\n      {formatMessage(ordersMessages.detailTitle, {\n        id: orderId\n      })}\n    </Title>\n  );\n};\n\nexport default OrderDetailTitle;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Button, Modal, Title } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport ordersMessages from '../../messages/orders.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nexport interface CancelOrderModal {\n  name: string;\n  cancelOrder: () => void;\n  onClose: () => void;\n  isOpen?: boolean;\n}\nconst CancelOrderModal: React.ComponentType<CancelOrderModal> = ({\n  name,\n  cancelOrder,\n  onClose,\n  isOpen\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\" \"\n      aria-labelledby=\"cancel-order\"\n      header={\n        <Title size=\"2xl\" headingLevel=\"h2\">\n          <ExclamationTriangleIcon style={{ fill: '#F0AB00' }} />{' '}\n          {formatMessage(ordersMessages.cancelOrder)}\n        </Title>\n      }\n      variant=\"small\"\n      actions={[\n        <Button\n          onClick={cancelOrder}\n          ouiaId={'cancel-order'}\n          key=\"cancel-order\"\n          id=\"cancel-order\"\n          variant=\"danger\"\n        >\n          {formatMessage(ordersMessages.cancelOrder)}\n        </Button>,\n        <Button\n          onClick={onClose}\n          ouiaId={'keep-order'}\n          key=\"keep-order\"\n          id=\"keep-order\"\n          variant=\"link\"\n        >\n          {formatMessage(ordersMessages.keepOrder)}\n        </Button>\n      ]}\n    >\n      {formatMessage(ordersMessages.cancelDescription, { name })}\n    </Modal>\n  );\n};\n\nexport default CancelOrderModal;\n","/* eslint-disable react/prop-types */\nimport React, { useState, Fragment } from 'react';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useDispatch } from 'react-redux';\n\nimport { cancelOrder } from '../../../redux/actions/order-actions';\nimport CancelOrderModal from '../cancel-order-modal';\nimport ordersMessages from '../../../messages/orders.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport { PORTFOLIO_ITEM_ORDER_ROUTE } from '../../../constants/routes';\nimport useEnhancedHistory from '../../../utilities/use-enhanced-history';\n\nconst CANCELABLE_STATES = ['Approval Pending'];\nconst ORDERABLE_STATES = ['Completed'];\n\nconst canCancel = (state = '') => CANCELABLE_STATES.includes(state);\n\nexport interface OrderToolbarActions {\n  state?: string;\n  orderId: string;\n  portfolioItemName: string;\n  portfolioItemId: string;\n  portfolioId: string;\n  sourceId: string;\n  orderable: boolean;\n}\nconst OrderToolbarActions: React.ComponentType<OrderToolbarActions> = ({\n  state,\n  orderId,\n  portfolioItemName,\n  portfolioItemId,\n  portfolioId,\n  sourceId,\n  orderable = false\n}) => {\n  const formatMessage = useFormatMessage();\n  const dispatch = useDispatch();\n  const [cancelModalOpen, setCancelModalOpen] = useState(false);\n  const history = useEnhancedHistory();\n  const canReorder = () =>\n    orderable && state && ORDERABLE_STATES.includes(state);\n\n  const onReorder = (\n    portfolioId: string,\n    portfolioItemId: string,\n    sourceId: string\n  ) => {\n    history.push({\n      pathname: PORTFOLIO_ITEM_ORDER_ROUTE,\n      search: `?portfolio=${portfolioId}&portfolio-item=${portfolioItemId}&source=${sourceId}`\n    });\n  };\n\n  return (\n    <Fragment>\n      <CancelOrderModal\n        onClose={() => setCancelModalOpen(false)}\n        isOpen={cancelModalOpen}\n        cancelOrder={() => {\n          setCancelModalOpen(false);\n          dispatch(cancelOrder(orderId));\n        }}\n        name={portfolioItemName}\n      />\n      <ActionGroup>\n        {canCancel(state) && (\n          <Button\n            onClick={() => setCancelModalOpen(true)}\n            isDisabled={!canCancel(state)}\n            type=\"button\"\n            className=\"pf-u-mr-md\"\n            id=\"cancel-order-action\"\n            ouiaId=\"cancel-order-action\"\n          >\n            {formatMessage(ordersMessages.cancelOrder)}\n          </Button>\n        )}\n        {canReorder() && (\n          <Button\n            onClick={() => onReorder(portfolioId, portfolioItemId, sourceId)}\n            isDisabled={!canReorder()}\n            type=\"button\"\n            className=\"pf-u-mr-md\"\n            id=\"reorder-order-action\"\n            ouiaId=\"reorder-order-action\"\n          >\n            {formatMessage(ordersMessages.reOrder)}\n          </Button>\n        )}\n      </ActionGroup>\n    </Fragment>\n  );\n};\n\nexport default OrderToolbarActions;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { LevelItem, Level, Title, Label } from '@patternfly/react-core';\n\nimport CardIcon from '../../../presentational-components/shared/card-icon';\nimport { CATALOG_API_BASE } from '../../../utilities/constants';\nimport CatalogLink from '../../common/catalog-link';\nimport statesMessages, {\n  getTranslatableState\n} from '../../../messages/states.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport orderStatusMapper from '../order-status-mapper';\n\nexport interface OrderDetailInformationProps {\n  portfolioItemId: string;\n  sourceId: string;\n  jobName: string;\n  portfolioId: string;\n  state: keyof typeof orderStatusMapper;\n}\nconst OrderDetailInformation: React.ComponentType<OrderDetailInformationProps> = ({\n  portfolioId,\n  jobName,\n  portfolioItemId,\n  sourceId,\n  state\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Level className=\"pf-u-mt-sm\" hasGutter>\n      <Level hasGutter>\n        <CardIcon\n          sourceId={sourceId}\n          height={60}\n          src={`${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}/icon`}\n        />\n        <Title headingLevel=\"h2\" size=\"lg\">\n          <CatalogLink\n            pathname=\"/portfolios/portfolio/portfolio-item\"\n            searchParams={{\n              portfolio: portfolioId,\n              source: sourceId,\n              'portfolio-item': portfolioItemId\n            }}\n          >\n            {jobName}\n          </CatalogLink>\n        </Title>\n      </Level>\n      <LevelItem>\n        <Label {...orderStatusMapper[state]} variant=\"outline\">\n          {formatMessage(statesMessages[getTranslatableState(state)])}\n        </Label>\n      </LevelItem>\n    </Level>\n  );\n};\n\nexport default OrderDetailInformation;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport useEnhancedHistory from '../../../utilities/use-enhanced-history';\nimport CatalogLink from '../../common/catalog-link';\nimport ordersMessages from '../../../messages/orders.messages';\nimport { stateToDisplay } from '../../../helpers/shared/helpers';\n\n/**\n * Make sure to import correct Tabs styles\n */\nimport '@patternfly/react-styles/css/components/Tabs/tabs.css';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport { OrderStateEnum } from '@redhat-cloud-services/catalog-client';\nimport { FormatMessage } from '../../../types/common-types';\nimport { CatalogRootState } from '../../../types/redux';\nimport { OrderDetail } from '../../../redux/reducers/order-reducer';\n\nconst StyledCatalogLink = styled(CatalogLink)`\n  color: var(--pf-c-tabs__link--Color);\n  text-decoration: none;\n`;\n\nconst StyledTabButton = styled(({ isDisabled, ...props }) => (\n  <button {...props} />\n))`\n  pointer-events: ${({ isDisabled }) => (isDisabled ? 'none' : 'initial')};\n`;\n\nconst StyledTabItem = styled(({ isDisabled, ...props }) => <li {...props} />)`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n`;\n\nconst useNavItems = (\n  { state }: { state?: OrderStateEnum } = {},\n  formatMessage: FormatMessage\n) => [\n  {\n    link: '',\n    title: formatMessage(ordersMessages.orderDetails)\n  },\n  {\n    link: '/approval',\n    title: formatMessage(ordersMessages.menuApproval)\n  },\n  {\n    link: '/provision',\n    title: formatMessage(ordersMessages.menuProvision)\n  },\n  {\n    link: '/lifecycle',\n    title: formatMessage(ordersMessages.menuLifecycle),\n    isDisabled: stateToDisplay(state)\n  }\n];\n\nexport interface OrderDetailMenuProps {\n  baseUrl: string;\n  isFetching?: boolean;\n}\n\nconst OrderDetailMenu: React.ComponentType<OrderDetailMenuProps> = ({\n  baseUrl,\n  isFetching\n}) => {\n  const formatMessage = useFormatMessage();\n  const { push } = useEnhancedHistory();\n  const orderDetailData = useSelector<CatalogRootState, OrderDetail>(\n    ({ orderReducer: { orderDetail } }) => orderDetail || {}\n  );\n  const { pathname, search } = useLocation();\n  const { order } = orderDetailData;\n  const navItems = useNavItems(order, formatMessage);\n  let activeKey = navItems.findIndex(\n    ({ link }) => pathname.split('/').pop() === link.replace('/', '')\n  );\n  activeKey = activeKey > 0 ? activeKey : 0;\n  const handleTabClick = (tabIndex: number) =>\n    push({ pathname: `${baseUrl}${navItems[tabIndex].link}`, search });\n\n  return (\n    <div className=\"pf-c-tabs pf-u-pl-md pf-u-pr-md\">\n      <ul className=\"pf-c-tabs__list\">\n        {navItems.map(({ link, title, isDisabled }, index) => (\n          <StyledTabItem\n            className={`pf-c-tabs__item${\n              index === activeKey ? ' pf-m-current' : ''\n            }`}\n            isDisabled={isDisabled || isFetching}\n            key={link || index}\n          >\n            <StyledTabButton\n              className=\"pf-c-tabs__link\"\n              isDisabled={isDisabled || isFetching}\n              {...(isDisabled || isFetching ? { tabIndex: -1 } : {})}\n              onClick={() => handleTabClick(index)}\n            >\n              <StyledCatalogLink\n                exact\n                nav\n                isDisabled={isDisabled || isFetching}\n                pathname={`${baseUrl}${link}`}\n                preserveSearch\n                activeClassName=\"pf-m-active\"\n                {...(isDisabled || isFetching ? { tabIndex: -1 } : {})}\n              >\n                {title}\n              </StyledCatalogLink>\n            </StyledTabButton>\n          </StyledTabItem>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default OrderDetailMenu;\n","import styled from 'styled-components';\n\nconst UnAvailableAlertContainer = styled.div`\n  width: 100%;\n  > *:not(:last-child) {\n    margin-bottom: 4px;\n    width: 100%;\n  }\n`;\n\nexport default UnAvailableAlertContainer;\n","import React, { useEffect, useState, Fragment, Suspense, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Level,\n  LevelItem,\n  Stack,\n  StackItem,\n  Bullseye,\n  Alert\n} from '@patternfly/react-core';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchOrderDetails } from '../../../redux/actions/order-actions';\nimport OrderDetailTitle from './order-detail-title';\nimport OrderToolbarActions from './order-toolbar-actions';\nimport OrderDetailInformation from './order-detail-information';\nimport OrderDetailMenu from './order-detail-menu';\nimport { OrderDetailToolbarPlaceholder } from '../../../presentational-components/shared/loader-placeholders';\nimport useQuery from '../../../utilities/use-query';\nimport useBreadcrumbs from '../../../utilities/use-breadcrumbs';\nimport { fetchPlatforms } from '../../../redux/actions/platform-actions';\nimport { fetchPlatforms as fetchPlatformsS } from '../../../redux/actions/platform-actions-s';\nimport UnAvailableAlertContainer from '../../../presentational-components/styled-components/unavailable-alert-container';\nimport ordersMessages from '../../../messages/orders.messages';\nimport CatalogLink from '../../common/catalog-link';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport { CatalogRootState } from '../../../types/redux';\nimport { OrderDetail as OrderDetailType } from '../../../redux/reducers/order-reducer';\nimport { GetOrderDetailParams } from '../../../helpers/order/order-helper';\nimport { ORDER_ROUTE } from '../../../constants/routes';\n\nconst ApprovalRequests = lazy(() =>\n  import(/* webpackChunkName: \"approval-request\" */ './approval-request')\n);\nconst OrderLifecycle = lazy(() =>\n  import(/* webpackChunkName: \"order-lifecycle\" */ './order-lifecycle')\n);\nconst OrderProvision = lazy(() =>\n  import(/* webpackChunkName: \"order-provision\" */ './order-provision')\n);\nconst OrderDetails = lazy(() =>\n  import(/* webpackChunkName: \"order-details\" */ './order-details')\n);\nconst requiredParams = [\n  'order-item',\n  'portfolio-item',\n  'platform',\n  'portfolio',\n  'order'\n];\n\nconst OrderDetail: React.ComponentType = () => {\n  const formatMessage = useFormatMessage();\n  const [isFetching, setIsFetching] = useState(true);\n  const [queryValues] = useQuery<GetOrderDetailParams>(requiredParams);\n  const orderDetailData = useSelector<CatalogRootState, OrderDetailType>(\n    ({ orderReducer: { orderDetail } }) => orderDetail\n  );\n  const dispatch = useDispatch();\n  const resetBreadcrumbs = useBreadcrumbs([orderDetailData]);\n  useEffect(() => {\n    setIsFetching(true);\n    Promise.all([\n      dispatch(\n        window.catalog?.standalone ? fetchPlatformsS() : fetchPlatforms()\n      ),\n      dispatch(fetchOrderDetails(queryValues))\n    ]).then(() => setIsFetching(false));\n    return () => {\n      if (typeof resetBreadcrumbs === 'function') {\n        resetBreadcrumbs();\n      }\n    };\n  }, []);\n\n  const { order, portfolioItem, platform, portfolio } = orderDetailData;\n\n  const unAvailable = () => {\n    const notFound = [portfolioItem, platform, portfolio || {}].filter(\n      ({ notFound }) => notFound\n    );\n    if (notFound.length === 0) {\n      return null;\n    }\n\n    let notFoundObjects = [];\n    if (portfolioItem.notFound) {\n      notFoundObjects.push(portfolioItem.object);\n    } else {\n      notFoundObjects = notFound.map(({ object }) => object);\n    }\n\n    return (\n      <Alert\n        key=\"order-object-missing\"\n        variant=\"warning\"\n        isInline\n        title={formatMessage(ordersMessages.objectsNotFound, {\n          objects: notFoundObjects.join(', '),\n          count: notFoundObjects.length\n        })}\n      />\n    );\n  };\n\n  const unavailableMessages = unAvailable();\n  return (\n    <Stack>\n      <StackItem className=\"pf-u-p-lg global-primary-background\">\n        {isFetching ? (\n          <OrderDetailToolbarPlaceholder />\n        ) : (\n          <Fragment>\n            <Level className=\"pf-u-mb-md\">\n              <LevelItem>\n                <AngleLeftIcon className=\"pf-u-mr-md\" />\n                <CatalogLink pathname=\"/orders\">\n                  {formatMessage(ordersMessages.backToOrders)}\n                </CatalogLink>\n              </LevelItem>\n            </Level>\n            <Level className=\"flex-no-wrap\">\n              {unavailableMessages ? (\n                <UnAvailableAlertContainer>\n                  {unavailableMessages}\n                </UnAvailableAlertContainer>\n              ) : (\n                <Fragment>\n                  <LevelItem>\n                    <OrderDetailTitle orderId={order.id} />\n                  </LevelItem>\n                  <LevelItem>\n                    <OrderToolbarActions\n                      portfolioItemName={portfolioItem.name}\n                      orderId={order.id}\n                      state={order.state}\n                      portfolioItemId={portfolioItem.id}\n                      portfolioId={portfolio.id}\n                      sourceId={platform.id}\n                      orderable={portfolioItem.metadata?.orderable || false}\n                    />\n                  </LevelItem>\n                </Fragment>\n              )}\n            </Level>\n            {!unavailableMessages && (\n              <OrderDetailInformation\n                portfolioItemId={portfolioItem.id}\n                portfolioId={portfolio.id}\n                sourceId={platform.id}\n                jobName={portfolioItem.name}\n                state={order.state}\n              />\n            )}\n          </Fragment>\n        )}\n      </StackItem>\n      <StackItem>\n        <Stack hasGutter>\n          <StackItem className=\"global-primary-background\">\n            <OrderDetailMenu isFetching={isFetching} baseUrl={ORDER_ROUTE} />\n          </StackItem>\n          <StackItem className=\"pf-u-pl-lg pf-u-pr-lg pf-u-mb-lg\">\n            {isFetching ? (\n              <Bullseye>\n                <Spinner />\n              </Bullseye>\n            ) : (\n              <Suspense fallback={<div></div>}>\n                <Switch>\n                  <Route\n                    path={`${ORDER_ROUTE}/approval`}\n                    component={ApprovalRequests}\n                  />\n                  <Route path={`${ORDER_ROUTE}/provision`}>\n                    <OrderProvision />\n                  </Route>\n                  <Route path={`${ORDER_ROUTE}/lifecycle`}>\n                    <OrderLifecycle />\n                  </Route>\n                  <Route path={ORDER_ROUTE} component={OrderDetails} />\n                </Switch>\n              </Suspense>\n            )}\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default OrderDetail;\n"],"names":["orderId","formatMessage","Title","headingLevel","size","id","name","cancelOrder","onClose","isOpen","Modal","title","header","ExclamationTriangleIcon","style","fill","variant","actions","Button","onClick","ouiaId","key","CANCELABLE_STATES","ORDERABLE_STATES","canCancel","state","includes","portfolioItemName","portfolioItemId","portfolioId","sourceId","orderable","dispatch","useState","cancelModalOpen","setCancelModalOpen","history","canReorder","Fragment","ActionGroup","isDisabled","type","className","push","pathname","search","onReorder","jobName","Level","hasGutter","height","src","searchParams","portfolio","source","LevelItem","Label","StyledCatalogLink","StyledTabButton","props","StyledTabItem","baseUrl","isFetching","orderDetailData","useLocation","navItems","link","useNavItems","activeKey","findIndex","split","pop","replace","map","index","tabIndex","exact","nav","preserveSearch","activeClassName","ApprovalRequests","lazy","OrderLifecycle","OrderProvision","OrderDetails","requiredParams","setIsFetching","queryValues","resetBreadcrumbs","useEffect","Promise","all","window","catalog","standalone","then","order","portfolioItem","platform","unavailableMessages","notFound","filter","length","notFoundObjects","object","Alert","isInline","objects","join","count","unAvailable","Stack","StackItem","metadata","Bullseye","Spinner","Suspense","fallback","Switch","Route","path","component"],"sourceRoot":""}