{"version":3,"file":"js/9797.af73d348cdfbe8accc8e.js","mappings":"iTAgBMA,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,oCAIXE,EAAgB,SAACC,GAAU,UACzBC,GAAgBC,EAAAA,EAAAA,KACtB,OACE,kBAAC,IAAD,CAAmBC,WAAYH,EAAMI,kBAAoBJ,EAAMK,YAC7D,kBAAC,IAAD,CAAYC,OAAM,yBAAoBN,EAAMO,KAC1C,kBAAC,IAAD,KACE,kBAACX,EAAD,KACE,kBAAC,IAAD,CACEY,IACE,UAAAC,OAAOC,eAAP,SAAgBC,WACZX,MAAAA,OADJ,EACIA,EAAOY,SADX,UAEOC,EAAAA,GAFP,4BAE2Cb,EAAMO,GAFjD,SAIFO,SAAUd,EAAMe,8BAEjBf,EAAMgB,cACL,kBAAC,IAAD,CACEC,YAAa,kBAAMjB,EAAMkB,SAASlB,EAAMO,KACxCY,UAAWnB,EAAMK,WACjBE,GAAIP,EAAMO,OAKlB,kBAAC,IAA4BP,GAC7B,kBAAC,IAAD,MACG,UAAAA,EAAMoB,gBAAN,mBAAgBC,kBAAhB,eAA4BC,oBAAqB,EAChD,kBAAC,IAAD,CAAOC,QAAQ,SAASC,MAAM,QAC3BvB,EAAcwB,EAAAA,EAAAA,qBAGjB,OAQZ1B,EAAc2B,UAAY,CACxBnB,GAAIoB,IAAAA,OACJC,WAAYD,IAAAA,OACZZ,4BAA6BY,IAAAA,OAC7BX,aAAcW,IAAAA,KACdtB,WAAYsB,IAAAA,KACZT,SAAUS,IAAAA,KACVE,SAAUF,IAAAA,OACVvB,iBAAkBuB,IAAAA,KAClBG,aAAcH,IAAAA,OACdf,SAAUe,IAAAA,OACVP,SAAUO,IAAAA,MAAgB,CACxBI,kBAAmBJ,IAAAA,MAAgB,CAAEK,QAASL,IAAAA,OAAkBM,aAC/DA,YAGL","sources":["webpack:///./src/smart-components/portfolio/portfolio-item.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level, Label } from '@patternfly/react-core';\n\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport CardCheckbox from '../../presentational-components/shared/card-checkbox';\nimport ServiceOfferingCardBody from '../../presentational-components/shared/service-offering-body';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../../presentational-components/styled-components/styled-gallery';\nimport styled from 'styled-components';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport labelMessages from '../../messages/labels.messages';\n\nconst StyledLevel = styled(Level)`\n  flex: 1;\n`;\n\nconst PortfolioItem = (props) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <StyledGalleryItem isDisabled={props.removeInProgress && props.isSelected}>\n      <StyledCard ouiaId={`portfolio-item-${props.id}`}>\n        <CardHeader>\n          <StyledLevel>\n            <CardIcon\n              src={\n                window.catalog?.standalone\n                  ? props?.icon_url\n                  : `${CATALOG_API_BASE}/portfolio_items/${props.id}/icon`\n              }\n              sourceId={props.service_offering_source_ref}\n            />\n            {props.isSelectable && (\n              <CardCheckbox\n                handleCheck={() => props.onSelect(props.id)}\n                isChecked={props.isSelected}\n                id={props.id}\n              />\n            )}\n          </StyledLevel>\n        </CardHeader>\n        <ServiceOfferingCardBody {...props} />\n        <CardFooter>\n          {props.metadata?.statistics?.approval_processes > 0 ? (\n            <Label variant=\"filled\" color=\"grey\">\n              {formatMessage(labelMessages.approvalProcessSet)}\n            </Label>\n          ) : (\n            ''\n          )}\n        </CardFooter>\n      </StyledCard>\n    </StyledGalleryItem>\n  );\n};\n\nPortfolioItem.propTypes = {\n  id: PropTypes.number,\n  platformId: PropTypes.string,\n  service_offering_source_ref: PropTypes.string,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  orderUrl: PropTypes.string,\n  removeInProgress: PropTypes.bool,\n  portfolio_id: PropTypes.string,\n  icon_url: PropTypes.string,\n  metadata: PropTypes.shape({\n    user_capabilities: PropTypes.shape({ destroy: PropTypes.bool }).isRequired\n  }).isRequired\n};\n\nexport default PortfolioItem;\n"],"names":["StyledLevel","styled","Level","PortfolioItem","props","formatMessage","useFormatMessage","isDisabled","removeInProgress","isSelected","ouiaId","id","src","window","catalog","standalone","icon_url","CATALOG_API_BASE","sourceId","service_offering_source_ref","isSelectable","handleCheck","onSelect","isChecked","metadata","statistics","approval_processes","variant","color","labelMessages","propTypes","PropTypes","platformId","orderUrl","portfolio_id","user_capabilities","destroy","isRequired"],"sourceRoot":""}