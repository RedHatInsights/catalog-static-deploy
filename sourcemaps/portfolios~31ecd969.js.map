{"version":3,"sources":["webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/wrench-icon.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Label/Label.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Label/label.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Label/label.css?87a7","webpack:///./node_modules/@patternfly/react-styles/css/components/Label/label.css","webpack:///./src/utilities/use-is-mounted.js","webpack:///./src/presentational-components/portfolio/portfolio-card-header.js","webpack:///./src/presentational-components/portfolio/porfolio-card.js","webpack:///./src/smart-components/portfolio/toolbars/portfolios-primary-toolbar.js","webpack:///./src/smart-components/portfolio/portfolios.js"],"names":["AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","options","getNewPage","request","debouncePromise","direction","propTypes","PropTypes","shape","isRequired","func","any","string","bool","defaultProps","BottomPaginationContainer","children","oneOfType","node","arrayOf","exports","__esModule","WrenchIconConfig","name","height","width","svgPath","yOffset","xOffset","transform","WrenchIcon","createIcon","Object","defineProperty","value","tslib_1","React","__importStar","label_1","__importDefault","Button_1","react_styles_1","times_icon_1","colorStyles","blue","default","modifiers","cyan","green","orange","purple","red","grey","Label","_a","color","variant","icon","onClose","closeBtn","closeBtnProps","href","__rest","Component","button","createElement","Button","assign","type","onClick","css","label","outline","labelContent","labelIcon","displayName","api","content","module","i","locals","___CSS_LOADER_API_IMPORT___","push","useIsMounted","isMounted","useRef","useEffect","current","HeaderTitle","styled","LevelItem","HeaderLevel","Level","PortfolioCardHeader","id","to","portfolioName","portfolio_items","headerActions","TextContent","Text","title","component","TextVariants","h3","Badge","isRead","event","preventDefault","pathname","search","TO_DISPLAY","HeaderActions","portfolioId","handleCopyPortfolio","userCapabilities","share","copy","unshare","update","destroy","set_approval","formatMessage","useFormatMessage","useState","isOpen","setOpen","dropdownItems","DropdownItem","key","searchParams","portfolio","SHARE_PORTFOLIO_ROUTE","preserveHash","actionMessages","EDIT_PORTFOLIO_WORKFLOW_ROUTE","setApproval","window","insights","chrome","isBeta","orderProcessAction","orderProcessesMessages","setOrderProcess","aria-label","preserveSearch","EDIT_ORDER_PROCESS_ROUTE","role","EDIT_PORTFOLIO_ROUTE","edit","REMOVE_PORTFOLIO_ROUTE","length","Dropdown","isPlain","onSelect","position","DropdownPosition","right","toggle","KebabToggle","onToggle","PortfolioCard","imageUrl","isDisabled","metadata","user_capabilities","statistics","shared_groups","PORTFOLIO_ROUTE","CardHeader","small","DateFormat","date","updated_at","created_at","owner","toDisplay","CardFooter","labelMessages","shared","history","object","chipCategories","sort_by","sortBy","sortByMapping","updated","created","PortfoliosPrimaryToolbar","filters","stateDispatch","debouncedFilter","initialState","filterType","handleFilterItems","sortDirection","handleSort","fetchPortfoliosWithState","isFetching","isFiltering","dispatch","useDispatch","noData","PrimaryToolbar","dedicatedAction","create","activeFiltersConfig","entries","filter","map","category","chips","Array","isArray","onDelete","_e","clearAll","chip","payload","newFilters","filterConfig","onChange","items","filterValues","placeholder","sortByConfig","onSortChange","pagination","_","undefined","asyncFormValidator","defaultSettings","filteringCallback","then","SortByDirection","asc","portfoliosState","state","action","Portfolios","viewState","useInitialUriHash","useReducer","useSelector","portfolioReducer","portfolios","data","userPermissions","useContext","UserContext","permissions","useHistory","scrollToTop","appNavClick","secondaryNav","copyPortfolio","emptyStateProps","PrimaryAction","url","ADD_PORTFOLIO_ROUTE","hasPermission","filteringMessages","clearFilters","portfolioMessages","portfoliosNoData","noResults","description","portfoliosNoDataDescription","noResultsDescription","Icon","SearchIcon","galleryItems","item","portfoliosTitle","isLoading","renderEmptyState","dropDirection"],"mappings":"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","file":"js/portfolios~31ecd969.fff52aa1f0bc957a2ae1.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    {children}\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","\"use strict\"\nexports.__esModule = true;\nexports.WrenchIconConfig = {\n  name: 'WrenchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.WrenchIcon = require('../createIcon').createIcon(exports.WrenchIconConfig);\nexports[\"default\"] = exports.WrenchIcon;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst label_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Label/label\"));\nconst Button_1 = require(\"../Button\");\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst times_icon_1 = tslib_1.__importDefault(require(\"@patternfly/react-icons/dist/js/icons/times-icon\"));\nconst colorStyles = {\n    blue: label_1.default.modifiers.blue,\n    cyan: label_1.default.modifiers.cyan,\n    green: label_1.default.modifiers.green,\n    orange: label_1.default.modifiers.orange,\n    purple: label_1.default.modifiers.purple,\n    red: label_1.default.modifiers.red,\n    grey: ''\n};\nexports.Label = (_a) => {\n    var { children, className = '', color = 'grey', variant = 'filled', icon, onClose, closeBtn, closeBtnProps, href } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"color\", \"variant\", \"icon\", \"onClose\", \"closeBtn\", \"closeBtnProps\", \"href\"]);\n    const Component = href ? 'a' : 'span';\n    const button = closeBtn ? (closeBtn) : (React.createElement(Button_1.Button, Object.assign({ type: \"button\", variant: \"plain\", onClick: onClose }, Object.assign({ 'aria-label': 'label-close-button' }, closeBtnProps)),\n        React.createElement(times_icon_1.default, null)));\n    return (React.createElement(\"span\", Object.assign({}, props, { className: react_styles_1.css(label_1.default.label, colorStyles[color], variant === 'outline' && label_1.default.modifiers.outline, className) }),\n        React.createElement(Component, Object.assign({ className: react_styles_1.css(label_1.default.labelContent) }, (href && { href })),\n            icon && React.createElement(\"span\", { className: react_styles_1.css(label_1.default.labelIcon) }, icon),\n            children),\n        onClose && button));\n};\nexports.Label.displayName = 'Label';\n//# sourceMappingURL=Label.js.map","\"use strict\";\nexports.__esModule = true;\nrequire('./label.css');\nexports.default = {\n  \"button\": \"pf-c-button\",\n  \"label\": \"pf-c-label\",\n  \"labelContent\": \"pf-c-label__content\",\n  \"labelIcon\": \"pf-c-label__icon\",\n  \"labelText\": \"pf-c-label__text\",\n  \"modifiers\": {\n    \"blue\": \"pf-m-blue\",\n    \"green\": \"pf-m-green\",\n    \"orange\": \"pf-m-orange\",\n    \"red\": \"pf-m-red\",\n    \"purple\": \"pf-m-purple\",\n    \"cyan\": \"pf-m-cyan\",\n    \"outline\": \"pf-m-outline\"\n  }\n};","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../css-loader/dist/cjs.js!./label.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".pf-c-label {\\n  --pf-c-label--PaddingTop: var(--pf-global--spacer--xs);\\n  --pf-c-label--PaddingRight: var(--pf-global--spacer--sm);\\n  --pf-c-label--PaddingBottom: var(--pf-global--spacer--xs);\\n  --pf-c-label--PaddingLeft: var(--pf-global--spacer--sm);\\n  --pf-c-label--BorderRadius: var(--pf-global--BorderRadius--lg);\\n  --pf-c-label--BackgroundColor: var(--pf-global--BackgroundColor--200);\\n  --pf-c-label--Color: var(--pf-global--Color--100);\\n  --pf-c-label--FontSize: var(--pf-global--FontSize--sm);\\n  --pf-c-label__content--before--BorderWidth: 0;\\n  --pf-c-label__content--before--BorderColor: transparent;\\n  --pf-c-label--m-outline--BackgroundColor: var(--pf-global--BackgroundColor--100);\\n  --pf-c-label--m-outline__content--before--BorderWidth: var(--pf-global--BorderWidth--sm);\\n  --pf-c-label--m-outline__content--before--BorderColor: var(--pf-global--BorderColor--100);\\n  --pf-c-label__content--link--hover--before--BorderWidth: var(--pf-global--BorderWidth--sm);\\n  --pf-c-label__content--link--focus--before--BorderWidth: var(--pf-global--BorderWidth--sm);\\n  --pf-c-label__content--link--hover--before--BorderColor: var(--pf-global--BorderColor--200);\\n  --pf-c-label__content--link--focus--before--BorderColor: var(--pf-global--BorderColor--200);\\n  --pf-c-label--m-outline__content--link--hover--before--BorderWidth: var(--pf-global--BorderWidth--md);\\n  --pf-c-label--m-outline__content--link--focus--before--BorderWidth: var(--pf-global--BorderWidth--md);\\n  --pf-c-label--m-outline__content--link--hover--before--BorderColor: var(--pf-global--BorderColor--100);\\n  --pf-c-label--m-outline__content--link--focus--before--BorderColor: var(--pf-global--BorderColor--100);\\n  --pf-c-label--m-blue--BackgroundColor: var(--pf-global--palette--blue-50);\\n  --pf-c-label--m-blue__content--Color: var(--pf-global--info-color--200);\\n  --pf-c-label--m-blue__icon--Color: var(--pf-global--primary-color--100);\\n  --pf-c-label--m-blue__content--link--hover--before--BorderColor: var(--pf-global--primary-color--100);\\n  --pf-c-label--m-blue__content--link--focus--before--BorderColor: var(--pf-global--primary-color--100);\\n  --pf-c-label--m-outline--m-blue__content--before--BorderColor: var(--pf-global--active-color--200);\\n  --pf-c-label--m-outline--m-blue__content--link--hover--before--BorderColor: var(--pf-global--active-color--200);\\n  --pf-c-label--m-outline--m-blue__content--link--focus--before--BorderColor: var(--pf-global--active-color--200);\\n  --pf-c-label--m-green--BackgroundColor: var(--pf-global--palette--green-50);\\n  --pf-c-label--m-green__content--Color: var(--pf-global--success-color--200);\\n  --pf-c-label--m-green__icon--Color: var(--pf-global--success-color--100);\\n  --pf-c-label--m-green__content--link--hover--before--BorderColor: var(--pf-global--success-color--100);\\n  --pf-c-label--m-green__content--link--focus--before--BorderColor: var(--pf-global--success-color--100);\\n  --pf-c-label--m-outline--m-green__content--before--BorderColor: var(--pf-global--palette--green-100);\\n  --pf-c-label--m-outline--m-green__content--link--hover--before--BorderColor: var(--pf-global--palette--green-100);\\n  --pf-c-label--m-outline--m-green__content--link--focus--before--BorderColor: var(--pf-global--palette--green-100);\\n  --pf-c-label--m-orange--BackgroundColor: var(--pf-global--palette--gold-50);\\n  --pf-c-label--m-orange__content--Color: var(--pf-global--palette--gold-700);\\n  --pf-c-label--m-orange__icon--Color: var(--pf-global--palette--orange-300);\\n  --pf-c-label--m-orange__content--link--hover--before--BorderColor: var(--pf-global--palette--orange-300);\\n  --pf-c-label--m-orange__content--link--focus--before--BorderColor: var(--pf-global--palette--orange-300);\\n  --pf-c-label--m-outline--m-orange__content--before--BorderColor: var(--pf-global--palette--gold-100);\\n  --pf-c-label--m-outline--m-orange__content--link--hover--before--BorderColor: var(--pf-global--palette--gold-100);\\n  --pf-c-label--m-outline--m-orange__content--link--focus--before--BorderColor: var(--pf-global--palette--gold-100);\\n  --pf-c-label--m-red--BackgroundColor: var(--pf-global--palette--red-50);\\n  --pf-c-label--m-red__content--Color: var(--pf-global--palette--red-300);\\n  --pf-c-label--m-red__icon--Color: var(--pf-global--danger-color--100);\\n  --pf-c-label--m-red__content--link--hover--before--BorderColor: var(--pf-global--danger-color--100);\\n  --pf-c-label--m-red__content--link--focus--before--BorderColor: var(--pf-global--danger-color--100);\\n  --pf-c-label--m-outline--m-red__content--before--BorderColor: var(--pf-global--danger-color--100);\\n  --pf-c-label--m-outline--m-red__content--link--hover--before--BorderColor: var(--pf-global--danger-color--100);\\n  --pf-c-label--m-outline--m-red__content--link--focus--before--BorderColor: var(--pf-global--danger-color--100);\\n  --pf-c-label--m-purple--BackgroundColor: var(--pf-global--palette--purple-50);\\n  --pf-c-label--m-purple__content--Color: var(--pf-global--palette--purple-700);\\n  --pf-c-label--m-purple__icon--Color: var(--pf-global--palette--purple-500);\\n  --pf-c-label--m-purple__content--link--hover--before--BorderColor: var(--pf-global--palette--purple-500);\\n  --pf-c-label--m-purple__content--link--focus--before--BorderColor: var(--pf-global--palette--purple-500);\\n  --pf-c-label--m-outline--m-purple__content--before--BorderColor: var(--pf-global--palette--purple-100);\\n  --pf-c-label--m-outline--m-purple__content--link--hover--before--BorderColor: var(--pf-global--palette--purple-100);\\n  --pf-c-label--m-outline--m-purple__content--link--focus--before--BorderColor: var(--pf-global--palette--purple-100);\\n  --pf-c-label--m-cyan--BackgroundColor: var(--pf-global--palette--cyan-50);\\n  --pf-c-label--m-cyan__content--Color: var(--pf-global--default-color--300);\\n  --pf-c-label--m-cyan__icon--Color: var(--pf-global--default-color--200);\\n  --pf-c-label--m-cyan__content--link--hover--before--BorderColor: var(--pf-global--default-color--200);\\n  --pf-c-label--m-cyan__content--link--focus--before--BorderColor: var(--pf-global--default-color--200);\\n  --pf-c-label--m-outline--m-cyan__content--before--BorderColor: var(--pf-global--palette--cyan-100);\\n  --pf-c-label--m-outline--m-cyan__content--link--hover--before--BorderColor: var(--pf-global--palette--cyan-100);\\n  --pf-c-label--m-outline--m-cyan__content--link--focus--before--BorderColor: var(--pf-global--palette--cyan-100);\\n  --pf-c-label__content--Color: var(--pf-global--Color--100);\\n  --pf-c-label__text--MaxWidth: 16ch;\\n  --pf-c-label__icon--Color: var(--pf-global--Color--100);\\n  --pf-c-label__icon--MarginRight: var(--pf-global--spacer--xs);\\n  --pf-c-label__c-button--FontSize: var(--pf-global--FontSize--xs);\\n  --pf-c-label__c-button--MarginTop: calc(var(--pf-global--spacer--form-element) * -1);\\n  --pf-c-label__c-button--MarginRight: calc(var(--pf-global--spacer--form-element) * -1);\\n  --pf-c-label__c-button--MarginBottom: calc(var(--pf-global--spacer--form-element) * -1);\\n  --pf-c-label__c-button--MarginLeft: var(--pf-global--spacer--xs);\\n  --pf-c-label__c-button--PaddingTop: var(--pf-global--spacer--xs);\\n  --pf-c-label__c-button--PaddingRight: var(--pf-global--spacer--sm);\\n  --pf-c-label__c-button--PaddingBottom: var(--pf-global--spacer--xs);\\n  --pf-c-label__c-button--PaddingLeft: var(--pf-global--spacer--sm);\\n  position: relative;\\n  padding: var(--pf-c-label--PaddingTop) var(--pf-c-label--PaddingRight) var(--pf-c-label--PaddingBottom) var(--pf-c-label--PaddingLeft);\\n  font-size: var(--pf-c-label--FontSize);\\n  color: var(--pf-c-label--Color);\\n  white-space: nowrap;\\n  background-color: var(--pf-c-label--BackgroundColor);\\n  border-radius: var(--pf-c-label--BorderRadius); }\\n  .pf-c-label.pf-m-blue {\\n    --pf-c-label--BackgroundColor: var(--pf-c-label--m-blue--BackgroundColor);\\n    --pf-c-label__content--Color: var(--pf-c-label--m-blue__content--Color);\\n    --pf-c-label__icon--Color: var(--pf-c-label--m-blue__icon--Color);\\n    --pf-c-label--m-outline__content--before--BorderColor: var(--pf-c-label--m-outline--m-blue__content--before--BorderColor);\\n    --pf-c-label__content--link--hover--before--BorderColor: var(--pf-c-label--m-blue__content--link--hover--before--BorderColor);\\n    --pf-c-label__content--link--focus--before--BorderColor: var(--pf-c-label--m-blue__content--link--focus--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--hover--before--BorderColor: var(--pf-c-label--m-outline--m-blue__content--link--hover--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--focus--before--BorderColor: var(--pf-c-label--m-outline--m-blue__content--link--focus--before--BorderColor); }\\n  .pf-c-label.pf-m-green {\\n    --pf-c-label--BackgroundColor: var(--pf-c-label--m-green--BackgroundColor);\\n    --pf-c-label__content--Color: var(--pf-c-label--m-green__content--Color);\\n    --pf-c-label__icon--Color: var(--pf-c-label--m-green__icon--Color);\\n    --pf-c-label--m-outline__content--before--BorderColor: var(--pf-c-label--m-outline--m-green__content--before--BorderColor);\\n    --pf-c-label__content--link--hover--before--BorderColor: var(--pf-c-label--m-green__content--link--hover--before--BorderColor);\\n    --pf-c-label__content--link--focus--before--BorderColor: var(--pf-c-label--m-green__content--link--focus--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--hover--before--BorderColor: var(--pf-c-label--m-outline--m-green__content--link--hover--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--focus--before--BorderColor: var(--pf-c-label--m-outline--m-green__content--link--focus--before--BorderColor); }\\n  .pf-c-label.pf-m-orange {\\n    --pf-c-label--BackgroundColor: var(--pf-c-label--m-orange--BackgroundColor);\\n    --pf-c-label__content--Color: var(--pf-c-label--m-orange__content--Color);\\n    --pf-c-label__icon--Color: var(--pf-c-label--m-orange__icon--Color);\\n    --pf-c-label--m-outline__content--before--BorderColor: var(--pf-c-label--m-outline--m-orange__content--before--BorderColor);\\n    --pf-c-label__content--link--hover--before--BorderColor: var(--pf-c-label--m-orange__content--link--hover--before--BorderColor);\\n    --pf-c-label__content--link--focus--before--BorderColor: var(--pf-c-label--m-orange__content--link--focus--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--hover--before--BorderColor: var(--pf-c-label--m-outline--m-orange__content--link--hover--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--focus--before--BorderColor: var(--pf-c-label--m-outline--m-orange__content--link--focus--before--BorderColor); }\\n  .pf-c-label.pf-m-red {\\n    --pf-c-label--BackgroundColor: var(--pf-c-label--m-red--BackgroundColor);\\n    --pf-c-label__content--Color: var(--pf-c-label--m-red__content--Color);\\n    --pf-c-label__icon--Color: var(--pf-c-label--m-red__icon--Color);\\n    --pf-c-label--m-outline__content--before--BorderColor: var(--pf-c-label--m-outline--m-red__content--before--BorderColor);\\n    --pf-c-label__content--link--hover--before--BorderColor: var(--pf-c-label--m-red__content--link--hover--before--BorderColor);\\n    --pf-c-label__content--link--focus--before--BorderColor: var(--pf-c-label--m-red__content--link--focus--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--hover--before--BorderColor: var(--pf-c-label--m-outline--m-red__content--link--hover--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--focus--before--BorderColor: var(--pf-c-label--m-outline--m-red__content--link--focus--before--BorderColor); }\\n  .pf-c-label.pf-m-purple {\\n    --pf-c-label--BackgroundColor: var(--pf-c-label--m-purple--BackgroundColor);\\n    --pf-c-label__content--Color: var(--pf-c-label--m-purple__content--Color);\\n    --pf-c-label__icon--Color: var(--pf-c-label--m-purple__icon--Color);\\n    --pf-c-label--m-outline__content--before--BorderColor: var(--pf-c-label--m-outline--m-purple__content--before--BorderColor);\\n    --pf-c-label__content--link--hover--before--BorderColor: var(--pf-c-label--m-purple__content--link--hover--before--BorderColor);\\n    --pf-c-label__content--link--focus--before--BorderColor: var(--pf-c-label--m-purple__content--link--focus--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--hover--before--BorderColor: var(--pf-c-label--m-outline--m-purple__content--link--hover--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--focus--before--BorderColor: var(--pf-c-label--m-outline--m-purple__content--link--focus--before--BorderColor); }\\n  .pf-c-label.pf-m-cyan {\\n    --pf-c-label--BackgroundColor: var(--pf-c-label--m-cyan--BackgroundColor);\\n    --pf-c-label__content--Color: var(--pf-c-label--m-cyan__content--Color);\\n    --pf-c-label__icon--Color: var(--pf-c-label--m-cyan__icon--Color);\\n    --pf-c-label--m-outline__content--before--BorderColor: var(--pf-c-label--m-outline--m-cyan__content--before--BorderColor);\\n    --pf-c-label__content--link--hover--before--BorderColor: var(--pf-c-label--m-cyan__content--link--hover--before--BorderColor);\\n    --pf-c-label__content--link--focus--before--BorderColor: var(--pf-c-label--m-cyan__content--link--focus--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--hover--before--BorderColor: var(--pf-c-label--m-outline--m-cyan__content--link--hover--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--focus--before--BorderColor: var(--pf-c-label--m-outline--m-cyan__content--link--focus--before--BorderColor); }\\n  .pf-c-label.pf-m-outline {\\n    --pf-c-label__content--before--BorderWidth: var(--pf-c-label--m-outline__content--before--BorderWidth);\\n    --pf-c-label__content--before--BorderColor: var(--pf-c-label--m-outline__content--before--BorderColor);\\n    --pf-c-label--BackgroundColor: var(--pf-c-label--m-outline--BackgroundColor); }\\n    .pf-c-label.pf-m-outline a.pf-c-label__content:hover {\\n      --pf-c-label__content--before--BorderWidth: var(--pf-c-label--m-outline__content--link--hover--before--BorderWidth);\\n      --pf-c-label__content--before--BorderColor: var(--pf-c-label--m-outline__content--link--hover--before--BorderColor); }\\n    .pf-c-label.pf-m-outline a.pf-c-label__content:focus {\\n      --pf-c-label__content--before--BorderWidth: var(--pf-c-label--m-outline__content--link--focus--before--BorderWidth);\\n      --pf-c-label__content--before--BorderColor: var(--pf-c-label--m-outline__content--link--focus--before--BorderColor); }\\n  .pf-c-label .pf-c-button {\\n    --pf-c-button--FontSize: var(--pf-c-label__c-button--FontSize);\\n    --pf-c-button--PaddingTop: var(--pf-c-label__c-button--PaddingTop);\\n    --pf-c-button--PaddingRight: var(--pf-c-label__c-button--PaddingRight);\\n    --pf-c-button--PaddingBottom: var(--pf-c-label__c-button--PaddingBottom);\\n    --pf-c-button--PaddingLeft: var(--pf-c-label__c-button--PaddingLeft);\\n    margin-top: var(--pf-c-label__c-button--MarginTop);\\n    margin-right: var(--pf-c-label__c-button--MarginRight);\\n    margin-bottom: var(--pf-c-label__c-button--MarginBottom);\\n    margin-left: var(--pf-c-label__c-button--MarginLeft); }\\n\\n.pf-c-label,\\n.pf-c-label__content {\\n  display: inline-flex;\\n  align-items: center; }\\n\\n.pf-c-label__text {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  max-width: var(--pf-c-label__text--MaxWidth); }\\n\\n.pf-c-label__content {\\n  color: var(--pf-c-label__content--Color); }\\n  .pf-c-label__content::before {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    content: \\\"\\\";\\n    border: var(--pf-c-label__content--before--BorderWidth) solid var(--pf-c-label__content--before--BorderColor);\\n    border-radius: var(--pf-c-label--BorderRadius); }\\n  a.pf-c-label__content {\\n    cursor: pointer;\\n    border: none; }\\n    a.pf-c-label__content, a.pf-c-label__content:hover, a.pf-c-label__content:focus {\\n      text-decoration: none; }\\n    a.pf-c-label__content:hover {\\n      --pf-c-label__content--before--BorderWidth: var(--pf-c-label__content--link--hover--before--BorderWidth);\\n      --pf-c-label__content--before--BorderColor: var(--pf-c-label__content--link--hover--before--BorderColor); }\\n    a.pf-c-label__content:focus {\\n      --pf-c-label__content--before--BorderWidth: var(--pf-c-label__content--link--focus--before--BorderWidth);\\n      --pf-c-label__content--before--BorderColor: var(--pf-c-label__content--link--focus--before--BorderColor); }\\n\\n.pf-c-label__icon {\\n  margin-right: var(--pf-c-label__icon--MarginRight);\\n  color: var(--pf-c-label__icon--Color); }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { useRef, useEffect } from 'react';\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => (isMounted.current = false);\n  }, []);\n  return isMounted;\n};\n\nexport default useIsMounted;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n  Badge,\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport styled from 'styled-components';\n\nconst HeaderTitle = styled(LevelItem)`\n  max-width: calc(100% - 80px);\n  width: calc(100% - 80px);\n`;\n\nconst HeaderLevel = styled(Level)`\n  width: 100%;\n`;\n\nconst PortfolioCardHeader = ({\n  id,\n  to,\n  portfolioName,\n  portfolio_items,\n  headerActions\n}) => (\n  <HeaderLevel>\n    <HeaderTitle>\n      <TextContent>\n        <Link to={to} id={`portfolio-link-${id}`}>\n          <Text\n            title={portfolioName}\n            className=\"pf-u-mb-0\"\n            component={TextVariants.h3}\n          >\n            <EllipsisTextContainer>{portfolioName}</EllipsisTextContainer>\n          </Text>\n        </Link>\n      </TextContent>\n    </HeaderTitle>\n    <Badge isRead>{portfolio_items}</Badge>\n    <div onClick={(event) => event.preventDefault()}>{headerActions}</div>\n  </HeaderLevel>\n);\n\nPortfolioCardHeader.propTypes = {\n  portfolioName: PropTypes.string.isRequired,\n  portfolio_items: PropTypes.number,\n  headerActions: PropTypes.node,\n  id: PropTypes.string,\n  to: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string.isRequired\n  }).isRequired\n};\n\nPortfolioCardHeader.defaultProps = {\n  headerActions: []\n};\n\nexport default PortfolioCardHeader;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ItemDetails from '../shared/card-common';\nimport {\n  CardHeader,\n  CardFooter,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  Text,\n  TextContent,\n  TextVariants,\n  Label\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\nimport PortfolioCardHeader from './portfolio-card-header';\n\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport {\n  SHARE_PORTFOLIO_ROUTE,\n  EDIT_PORTFOLIO_WORKFLOW_ROUTE,\n  EDIT_PORTFOLIO_ROUTE,\n  REMOVE_PORTFOLIO_ROUTE,\n  PORTFOLIO_ROUTE,\n  EDIT_ORDER_PROCESS_ROUTE\n} from '../../constants/routes';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../styled-components/styled-gallery';\nimport { StyledCardBody } from '../styled-components/card';\nimport actionMessages from '../../messages/actions.messages';\nimport labelMessages from '../../messages/labels.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\n\nconst TO_DISPLAY = ['description'];\n\nconst HeaderActions = ({\n  portfolioId,\n  handleCopyPortfolio,\n  userCapabilities: { share, copy, unshare, update, destroy, set_approval }\n}) => {\n  const formatMessage = useFormatMessage();\n  const [isOpen, setOpen] = useState(false);\n  const dropdownItems = [];\n  if (share || unshare) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"share-portfolio-action\"\n        id=\"share-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={SHARE_PORTFOLIO_ROUTE}\n            preserveHash\n          >\n            {formatMessage(actionMessages.share)}\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  if (copy) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"copy-portfolio-action\"\n        id=\"copy-portfolio-action\"\n        onClick={() => handleCopyPortfolio(portfolioId)}\n      >\n        {formatMessage(actionMessages.copy)}\n      </DropdownItem>\n    );\n  }\n\n  if (set_approval) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"workflow-portfolio-action\"\n        id=\"workflow-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={EDIT_PORTFOLIO_WORKFLOW_ROUTE}\n            preserveHash\n          >\n            {formatMessage(actionMessages.setApproval)}\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  if (window.insights.chrome.isBeta() && update) {\n    const orderProcessAction = formatMessage(\n      orderProcessesMessages.setOrderProcess\n    );\n    dropdownItems.push(\n      <DropdownItem\n        aria-label={orderProcessAction}\n        key=\"attach-order-processes\"\n        id=\"attach-order-processes\"\n        component={\n          <CatalogLink\n            preserveSearch\n            pathname={EDIT_ORDER_PROCESS_ROUTE}\n            searchParams={{ portfolio: portfolioId }}\n          >\n            {orderProcessAction}\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"edit-portfolio-action\"\n        id=\"edit-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={EDIT_PORTFOLIO_ROUTE}\n            preserveHash\n          >\n            {formatMessage(actionMessages.edit)}\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  if (destroy) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"remove-portfolio-action\"\n        id=\"remove-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={REMOVE_PORTFOLIO_ROUTE}\n            preserveHash\n          >\n            {formatMessage(actionMessages.delete)}\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  return dropdownItems.length === 0 ? null : (\n    <Dropdown\n      key=\"portfolio-dropdown\"\n      id={`portfolio-${portfolioId}-dropdown`}\n      isOpen={isOpen}\n      isPlain\n      onSelect={() => setOpen(false)}\n      position={DropdownPosition.right}\n      toggle={\n        <KebabToggle\n          id={`portfolio-${portfolioId}-toggle`}\n          onToggle={(isOpen) => setOpen(isOpen)}\n        />\n      }\n      dropdownItems={dropdownItems}\n    />\n  );\n};\n\nHeaderActions.propTypes = {\n  portfolioId: PropTypes.string.isRequired,\n  userCapabilities: PropTypes.shape({\n    destroy: PropTypes.bool,\n    update: PropTypes.bool,\n    share: PropTypes.bool,\n    unshare: PropTypes.bool,\n    set_approval: PropTypes.bool,\n    copy: PropTypes.bool\n  }).isRequired,\n  handleCopyPortfolio: PropTypes.func.isRequired\n};\n\nconst PortfolioCard = ({\n  imageUrl,\n  isDisabled,\n  name,\n  id,\n  handleCopyPortfolio,\n  metadata: {\n    user_capabilities,\n    statistics: { shared_groups, portfolio_items }\n  },\n  ...props\n}) => {\n  const formatMessage = useFormatMessage();\n  const to = {\n    pathname: PORTFOLIO_ROUTE,\n    search: `?portfolio=${id}`\n  };\n  return (\n    <StyledGalleryItem isDisabled={isDisabled}>\n      <StyledCard>\n        <CardHeader>\n          <PortfolioCardHeader\n            id={id}\n            to={to}\n            portfolioName={name}\n            portfolio_items={portfolio_items || 0}\n            headerActions={\n              <HeaderActions\n                portfolioId={id}\n                userCapabilities={user_capabilities}\n                handleCopyPortfolio={handleCopyPortfolio}\n              />\n            }\n          />\n        </CardHeader>\n        <StyledCardBody>\n          <TextContent className=\"pf-u-mb-md\">\n            <Text component={TextVariants.small} className=\"pf-i-mb-sm\">\n              Last updated&nbsp;\n              <DateFormat\n                date={props.updated_at || props.created_at}\n                type=\"relative\"\n              />\n            </Text>\n            <Text component={TextVariants.small}>{props.owner}</Text>\n          </TextContent>\n          <ItemDetails\n            {...{ name, imageUrl, ...props }}\n            toDisplay={TO_DISPLAY}\n          />\n        </StyledCardBody>\n        <CardFooter>\n          {shared_groups > 0 && (\n            <Label variant=\"filled\" color=\"blue\">\n              {formatMessage(labelMessages.shared)}\n            </Label>\n          )}\n        </CardFooter>\n      </StyledCard>\n    </StyledGalleryItem>\n  );\n};\n\nPortfolioCard.propTypes = {\n  history: PropTypes.object,\n  imageUrl: PropTypes.string,\n  name: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  updated_at: PropTypes.string,\n  created_at: PropTypes.string.isRequired,\n  owner: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  metadata: PropTypes.shape({\n    user_capabilities: PropTypes.object.isRequired,\n    statistics: PropTypes.shape({\n      shared_groups: PropTypes.number,\n      portfolio_items: PropTypes.number\n    }).isRequired\n  }).isRequired,\n  handleCopyPortfolio: PropTypes.func.isRequired\n};\n\nexport default PortfolioCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/PrimaryToolbar';\n\nimport AsyncPagination from '../../common/async-pagination';\nimport CatalogLink from '../../common/catalog-link';\nimport { Button } from '@patternfly/react-core';\nimport labelMessages from '../../../messages/labels.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\n\nconst chipCategories = {\n  name: labelMessages.name,\n  owner: labelMessages.owner,\n  sort_by: labelMessages.sortBy\n};\n\nconst sortByMapping = {\n  name: labelMessages.name,\n  owner: labelMessages.owner,\n  updated_at: labelMessages.updated,\n  created_at: labelMessages.created\n};\n\nconst PortfoliosPrimaryToolbar = ({\n  filters,\n  stateDispatch,\n  debouncedFilter,\n  initialState,\n  meta,\n  filterType,\n  handleFilterItems,\n  sortDirection,\n  handleSort,\n  fetchPortfoliosWithState,\n  isFetching,\n  isFiltering\n}) => {\n  const dispatch = useDispatch();\n  const formatMessage = useFormatMessage();\n  if (meta.noData) {\n    return null;\n  }\n\n  return (\n    <PrimaryToolbar\n      dedicatedAction={\n        <CatalogLink pathname=\"/portfolios/add-portfolio\">\n          <Button variant=\"primary\" type=\"button\">\n            {formatMessage(labelMessages.create)}\n          </Button>\n        </CatalogLink>\n      }\n      activeFiltersConfig={{\n        filters: Object.entries(filters)\n          .filter(([, value]) => value && value.length > 0)\n          .map(([key, value]) => {\n            return {\n              category: formatMessage(chipCategories[key]),\n              type: key,\n              chips: Array.isArray(value)\n                ? value.map((name) => ({\n                    name\n                  }))\n                : [\n                    {\n                      name:\n                        key === 'sort_by'\n                          ? formatMessage(sortByMapping[value])\n                          : value\n                    }\n                  ]\n            };\n          }),\n        onDelete: (_e, [chip], clearAll) => {\n          if (clearAll) {\n            stateDispatch({\n              type: 'replaceFilterChip',\n              payload: initialState.filters\n            });\n            return debouncedFilter(\n              initialState.filters,\n              meta,\n              dispatch,\n              (isFiltering) =>\n                stateDispatch({\n                  type: 'setFilteringFlag',\n                  payload: isFiltering\n                })\n            );\n          }\n\n          const newFilters = { ...filters };\n          if (chip.type === 'state') {\n            newFilters[chip.type] = newFilters[chip.type].filter(\n              (value) => value !== chip.chips[0].name\n            );\n          } else {\n            newFilters[chip.type] = '';\n          }\n\n          stateDispatch({\n            type: 'replaceFilterChip',\n            payload: newFilters\n          });\n          debouncedFilter(newFilters, meta, dispatch, (isFiltering) =>\n            stateDispatch({\n              type: 'setFilteringFlag',\n              payload: isFiltering\n            })\n          );\n        }\n      }}\n      filterConfig={{\n        onChange: (_e, value) =>\n          stateDispatch({ type: 'setFilterType', payload: value }),\n        value: filterType,\n        items: [\n          {\n            filterValues: {\n              value: filters.name,\n              onChange: (_e, value) => handleFilterItems(value)\n            },\n            label: formatMessage(labelMessages.name),\n            value: 'name'\n          },\n          {\n            filterValues: {\n              value: filters.owner,\n              onChange: (_e, value) => handleFilterItems(value)\n            },\n            label: formatMessage(labelMessages.owner),\n            value: 'owner'\n          },\n          {\n            filterValues: {\n              value: filters.sort_by || 'name',\n              onChange: (_e, value) => handleFilterItems(value),\n              items: [\n                {\n                  label: formatMessage(labelMessages.name),\n                  value: 'name'\n                },\n                {\n                  label: formatMessage(labelMessages.owner),\n                  value: 'owner'\n                },\n                {\n                  label: formatMessage(labelMessages.created),\n                  value: 'created_at'\n                },\n                {\n                  label: formatMessage(labelMessages.updated),\n                  value: 'updated_at'\n                }\n              ]\n            },\n            placeholder: filters.sort_by\n              ? formatMessage(sortByMapping[filters.sort_by])\n              : formatMessage(labelMessages.name),\n            label: formatMessage(labelMessages.sortBy),\n            value: 'sort_by',\n            type: 'radio'\n          }\n        ]\n      }}\n      sortByConfig={{\n        direction: sortDirection,\n        onSortChange: (_event, direction) => handleSort(direction)\n      }}\n      pagination={\n        meta.count > 0 ? (\n          <AsyncPagination\n            isDisabled={isFetching || isFiltering}\n            meta={meta}\n            apiRequest={(_, options) =>\n              dispatch(fetchPortfoliosWithState(filters, options))\n            }\n            isCompact\n          />\n        ) : (\n          undefined\n        )\n      }\n    />\n  );\n};\n\nPortfoliosPrimaryToolbar.propTypes = {\n  filters: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    owner: PropTypes.string.isRequired,\n    sort_by: PropTypes.string\n  }).isRequired,\n  stateDispatch: PropTypes.func.isRequired,\n  debouncedFilter: PropTypes.func.isRequired,\n  initialState: PropTypes.shape({\n    filters: PropTypes.shape({ [PropTypes.string]: PropTypes.any }).isRequired\n  }).isRequired,\n  meta: PropTypes.object.isRequired,\n  filterType: PropTypes.string.isRequired,\n  handleFilterItems: PropTypes.func.isRequired,\n  sortDirection: PropTypes.string.isRequired,\n  handleSort: PropTypes.func.isRequired,\n  fetchPortfoliosWithState: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  isFiltering: PropTypes.bool.isRequired\n};\n\nexport default PortfoliosPrimaryToolbar;\n","import React, { Fragment, useEffect, useReducer, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { SearchIcon, WrenchIcon } from '@patternfly/react-icons';\nimport { Button } from '@patternfly/react-core';\n\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport {\n  fetchPortfoliosWithState,\n  copyPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport PortfolioCard from '../../presentational-components/portfolio/porfolio-card';\nimport ContentGalleryEmptyState, {\n  EmptyStatePrimaryAction\n} from '../../presentational-components/shared/content-gallery-empty-state';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport { ADD_PORTFOLIO_ROUTE, PORTFOLIO_ROUTE } from '../../constants/routes';\nimport UserContext from '../../user-context';\nimport { hasPermission } from '../../helpers/shared/helpers';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport filteringMessages from '../../messages/filtering.messages';\nimport portfolioMessages from '../../messages/portfolio.messages';\n\nimport { SortByDirection } from '@patternfly/react-table';\nimport useIsMounted from '../../utilities/use-is-mounted';\nimport PortfoliosPrimaryToolbar from './toolbars/portfolios-primary-toolbar';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../../presentational-components/shared/top-toolbar';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst debouncedFilter = asyncFormValidator(\n  (filters, meta = defaultSettings, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(fetchPortfoliosWithState(filters, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst initialState = {\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false,\n  filterType: 'name',\n  filters: {\n    name: '',\n    owner: '',\n    sort_by: undefined\n  },\n  sortDirection: SortByDirection.asc\n};\n\nconst changeFilters = (value, type, filters) => ({\n  ...filters,\n  [type]: value\n});\n\nconst portfoliosState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return {\n        ...state,\n        filters: changeFilters(action.payload, state.filterType, state.filters)\n      };\n    case 'replaceFilterChip':\n      return { ...state, filters: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    case 'setFilterType':\n      return { ...state, filterType: action.payload };\n    case 'setSortBy':\n      return {\n        ...state,\n        sortDirection: action.payload,\n        filters: !state.filters.sort_by\n          ? { ...state.filters, sort_by: 'name' }\n          : state.filters\n      };\n  }\n\n  return state;\n};\n\nconst Portfolios = () => {\n  const formatMessage = useFormatMessage();\n  const viewState = useInitialUriHash();\n  const isMounted = useIsMounted();\n  const [\n    { isFetching, isFiltering, filters, filterType, sortDirection },\n    stateDispatch\n  ] = useReducer(portfoliosState, {\n    ...initialState,\n    ...viewState?.portfolio\n  });\n  const { data, meta } = useSelector(\n    ({ portfolioReducer: { portfolios } }) => portfolios\n  );\n  const dispatch = useDispatch();\n  const { permissions: userPermissions } = useContext(UserContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(\n      fetchPortfoliosWithState(filters, { ...meta, sortDirection })\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n    insights.chrome.appNavClick({ id: 'portfolios', secondaryNav: true });\n  }, []);\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      { ...filters, [filterType]: value },\n      { ...meta, offset: 0, sortDirection },\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  useEffect(() => {\n    if (isMounted && (!isFiltering || !isFetching)) {\n      handleFilterItems(filters[filterType]);\n    }\n  }, [sortDirection]);\n\n  const handleSort = (direction) =>\n    stateDispatch({ type: 'setSortBy', payload: direction });\n\n  const handleCopyPortfolio = (id) =>\n    dispatch(copyPortfolio(id)).then(({ id }) =>\n      history.push({\n        pathname: PORTFOLIO_ROUTE,\n        search: `?portfolio=${id}`\n      })\n    );\n\n  const NoDataAction = () => (\n    <EmptyStatePrimaryAction\n      url={ADD_PORTFOLIO_ROUTE}\n      id=\"create-portfolio\"\n      label=\"Create portfolio\"\n      hasPermission={hasPermission(userPermissions, [\n        'catalog:portfolios:create'\n      ])}\n    />\n  );\n\n  const FilterAction = () => (\n    <Button variant=\"link\" onClick={() => handleFilterItems('')}>\n      {formatMessage(filteringMessages.clearFilters)}\n    </Button>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? NoDataAction : FilterAction,\n    title: meta.noData\n      ? formatMessage(portfolioMessages.portfoliosNoData)\n      : formatMessage(filteringMessages.noResults),\n    description: meta.noData\n      ? formatMessage(portfolioMessages.portfoliosNoDataDescription)\n      : formatMessage(filteringMessages.noResultsDescription),\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n\n  const galleryItems = data.map((item) => (\n    <PortfolioCard\n      key={item.id}\n      {...item}\n      handleCopyPortfolio={handleCopyPortfolio}\n    />\n  ));\n\n  return (\n    <Fragment>\n      <TopToolbar>\n        <TopToolbarTitle\n          title={formatMessage(portfolioMessages.portfoliosTitle)}\n        />\n        <PortfoliosPrimaryToolbar\n          filters={filters}\n          stateDispatch={stateDispatch}\n          debouncedFilter={debouncedFilter}\n          initialState={initialState}\n          meta={meta}\n          filterType={filterType}\n          handleFilterItems={handleFilterItems}\n          sortDirection={sortDirection}\n          handleSort={handleSort}\n          fetchPortfoliosWithState={fetchPortfoliosWithState}\n          isFetching={isFetching}\n          isFiltering={isFiltering}\n        />\n      </TopToolbar>\n      <ContentGallery\n        items={galleryItems}\n        isLoading={isFetching || isFiltering}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState {...emptyStateProps} />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            meta={meta}\n            apiRequest={(_, options) =>\n              dispatch(fetchPortfoliosWithState(filters, options))\n            }\n            dropDirection=\"up\"\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Portfolios;\n"],"sourceRoot":""}