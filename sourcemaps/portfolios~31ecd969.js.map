{"version":3,"sources":["webpack:///./src/utilities/async-form-validator.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/wrench-icon.js","webpack:///./src/presentational-components/portfolio/portfolio-card-header.js","webpack:///./src/presentational-components/portfolio/porfolio-card.js","webpack:///./src/toolbar/schemas/portfolios-toolbar.schema.js","webpack:///./src/smart-components/portfolio/portfolios.js"],"names":["asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","exports","__esModule","WrenchIconConfig","name","height","width","svgPath","yOffset","xOffset","transform","WrenchIcon","createIcon","HeaderTitle","styled","LevelItem","HeaderLevel","Level","PortfolioCardHeader","id","to","portfolioName","headerActions","className","TextContent","Text","title","component","TextVariants","h3","onClick","event","preventDefault","propTypes","PropTypes","string","isRequired","node","shape","pathname","search","defaultProps","TO_DISPLAY","HeaderActions","portfolioId","handleCopyPortfolio","userCapabilities","share","copy","unshare","update","destroy","set_approval","useState","isOpen","setOpen","dropdownItems","push","DropdownItem","key","searchParams","portfolio","SHARE_PORTFOLIO_ROUTE","preserveHash","EDIT_PORTFOLIO_WORKFLOW_ROUTE","EDIT_PORTFOLIO_ROUTE","REMOVE_PORTFOLIO_ROUTE","length","Dropdown","isPlain","onSelect","position","DropdownPosition","right","toggle","KebabToggle","onToggle","bool","func","PortfolioCard","imageUrl","isDisabled","user_capabilities","metadata","props","PORTFOLIO_ROUTE","CardHeader","small","DateFormat","date","updated_at","created_at","type","owner","toDisplay","CardFooter","history","object","createPortfolioToolbarSchema","meta","fetchPortfolios","userPermissions","filterProps","searchValue","onFilterChange","placeholder","fields","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","noData","LEVEL","TOOLBAR","createSingleItemGroup","groupName","FILTER_TOOLBAR_ITEM","isClearable","hidden","count","hasPermission","createLinkButton","variant","LEVEL_ITEM","AsyncPagination","isCompact","apiRequest","debouncedFilter","asyncFormValidator","filter","dispatch","filteringCallback","defaultSettings","fetchPortfoliosWithState","then","initialState","filterValue","isFetching","isFiltering","portfoliosState","state","action","payload","Portfolios","viewState","useInitialUriHash","useReducer","stateDispatch","useSelector","portfolioReducer","portfolios","data","useDispatch","useContext","UserContext","permissions","useHistory","useEffect","scrollToTop","insights","chrome","appNavClick","secondaryNav","handleFilterItems","value","offset","copyPortfolio","emptyStateProps","PrimaryAction","url","ADD_PORTFOLIO_ROUTE","label","Button","description","Icon","SearchIcon","galleryItems","map","item","schema","_","items","isLoading","renderEmptyState","dropDirection"],"mappings":"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","file":"js/portfolios~31ecd969.000adc0b1fff123cff52.js","sourcesContent":["import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","\"use strict\"\nexports.__esModule = true;\nexports.WrenchIconConfig = {\n  name: 'WrenchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.WrenchIcon = require('../createIcon').createIcon(exports.WrenchIconConfig);\nexports[\"default\"] = exports.WrenchIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport styled from 'styled-components';\n\nconst HeaderTitle = styled(LevelItem)`\n  max-width: calc(100% - 44px);\n`;\n\nconst HeaderLevel = styled(Level)`\n  width: 100%;\n`;\n\nconst PortfolioCardHeader = ({ id, to, portfolioName, headerActions }) => (\n  <HeaderLevel>\n    <HeaderTitle className=\"pf-m-grow\">\n      <TextContent>\n        <Link to={to} id={`portfolio-link-${id}`}>\n          <Text\n            title={portfolioName}\n            className=\"pf-u-mb-0\"\n            component={TextVariants.h3}\n          >\n            <EllipsisTextContainer>{portfolioName}</EllipsisTextContainer>\n          </Text>\n        </Link>\n      </TextContent>\n    </HeaderTitle>\n    <LevelItem onClick={(event) => event.preventDefault()}>\n      {headerActions}\n    </LevelItem>\n  </HeaderLevel>\n);\n\nPortfolioCardHeader.propTypes = {\n  portfolioName: PropTypes.string.isRequired,\n  headerActions: PropTypes.node,\n  id: PropTypes.string,\n  to: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string.isRequired\n  }).isRequired\n};\n\nPortfolioCardHeader.defaultProps = {\n  headerActions: []\n};\n\nexport default PortfolioCardHeader;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ItemDetails from '../shared/card-common';\nimport {\n  CardHeader,\n  CardFooter,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\nimport PortfolioCardHeader from './portfolio-card-header';\n\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport {\n  SHARE_PORTFOLIO_ROUTE,\n  EDIT_PORTFOLIO_WORKFLOW_ROUTE,\n  EDIT_PORTFOLIO_ROUTE,\n  REMOVE_PORTFOLIO_ROUTE,\n  PORTFOLIO_ROUTE\n} from '../../constants/routes';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../styled-components/styled-gallery';\nimport { StyledCardBody } from '../styled-components/card';\n\nconst TO_DISPLAY = ['description'];\n\nconst HeaderActions = ({\n  portfolioId,\n  handleCopyPortfolio,\n  userCapabilities: { share, copy, unshare, update, destroy, set_approval }\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const dropdownItems = [];\n  if (share || unshare) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"share-portfolio-action\"\n        id=\"share-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={SHARE_PORTFOLIO_ROUTE}\n            preserveHash\n          >\n            Share\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  if (copy) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"copy-portfolio-action\"\n        id=\"copy-portfolio-action\"\n        onClick={() => handleCopyPortfolio(portfolioId)}\n      >\n        Copy\n      </DropdownItem>\n    );\n  }\n\n  if (set_approval) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"workflow-portfolio-action\"\n        id=\"workflow-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={EDIT_PORTFOLIO_WORKFLOW_ROUTE}\n            preserveHash\n          >\n            Set approval\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"edit-portfolio-action\"\n        id=\"edit-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={EDIT_PORTFOLIO_ROUTE}\n            preserveHash\n          >\n            Edit\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  if (destroy) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"remove-portfolio-action\"\n        id=\"remove-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={REMOVE_PORTFOLIO_ROUTE}\n            preserveHash\n          >\n            Delete\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  return dropdownItems.length === 0 ? null : (\n    <Dropdown\n      key=\"portfolio-dropdown\"\n      id={`portfolio-${portfolioId}-dropdown`}\n      isOpen={isOpen}\n      isPlain\n      onSelect={() => setOpen(false)}\n      position={DropdownPosition.right}\n      toggle={\n        <KebabToggle\n          id={`portfolio-${portfolioId}-toggle`}\n          onToggle={(isOpen) => setOpen(isOpen)}\n        />\n      }\n      dropdownItems={dropdownItems}\n    />\n  );\n};\n\nHeaderActions.propTypes = {\n  portfolioId: PropTypes.string.isRequired,\n  userCapabilities: PropTypes.shape({\n    destroy: PropTypes.bool,\n    update: PropTypes.bool,\n    share: PropTypes.bool,\n    unshare: PropTypes.bool,\n    set_approval: PropTypes.bool,\n    copy: PropTypes.bool\n  }).isRequired,\n  handleCopyPortfolio: PropTypes.func.isRequired\n};\n\nconst PortfolioCard = ({\n  imageUrl,\n  isDisabled,\n  name,\n  id,\n  handleCopyPortfolio,\n  metadata: { user_capabilities },\n  ...props\n}) => {\n  const to = {\n    pathname: PORTFOLIO_ROUTE,\n    search: `?portfolio=${id}`\n  };\n  return (\n    <StyledGalleryItem isDisabled={isDisabled}>\n      <StyledCard>\n        <CardHeader>\n          <PortfolioCardHeader\n            id={id}\n            to={to}\n            portfolioName={name}\n            headerActions={\n              <HeaderActions\n                portfolioId={id}\n                userCapabilities={user_capabilities}\n                handleCopyPortfolio={handleCopyPortfolio}\n              />\n            }\n          />\n        </CardHeader>\n        <StyledCardBody>\n          <TextContent className=\"pf-u-mb-md\">\n            <Text component={TextVariants.small} className=\"pf-i-mb-sm\">\n              Last updated&nbsp;\n              <DateFormat\n                date={props.updated_at || props.created_at}\n                type=\"relative\"\n              />\n            </Text>\n            <Text component={TextVariants.small}>{props.owner}</Text>\n          </TextContent>\n          <ItemDetails\n            {...{ name, imageUrl, ...props }}\n            toDisplay={TO_DISPLAY}\n          />\n        </StyledCardBody>\n        <CardFooter />\n      </StyledCard>\n    </StyledGalleryItem>\n  );\n};\n\nPortfolioCard.propTypes = {\n  history: PropTypes.object,\n  imageUrl: PropTypes.string,\n  name: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  updated_at: PropTypes.string,\n  created_at: PropTypes.string.isRequired,\n  owner: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  metadata: PropTypes.shape({ user_capabilities: PropTypes.object.isRequired })\n    .isRequired,\n  handleCopyPortfolio: PropTypes.func.isRequired\n};\n\nexport default PortfolioCard;\n","import { toolbarComponentTypes } from '../toolbar-mapper';\nimport { createSingleItemGroup, createLinkButton } from '../helpers';\nimport { hasPermission } from '../../helpers/shared/helpers';\n\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nconst createPortfolioToolbarSchema = ({\n  meta,\n  fetchPortfolios,\n  userPermissions,\n  filterProps: { searchValue, onFilterChange, placeholder }\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'portfolios-top-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'portfolios-toolbar-title',\n          title: 'Portfolios',\n          noData: meta.noData\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'portfolios-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'main-portfolio-toolbar',\n                  fields: [\n                    createSingleItemGroup({\n                      groupName: 'filter-group',\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      key: 'filter-input',\n                      searchValue,\n                      onFilterChange,\n                      placeholder,\n                      isClearable: true\n                    }),\n                    createSingleItemGroup({\n                      hidden:\n                        meta.count === 0 ||\n                        !hasPermission(userPermissions, [\n                          'catalog:portfolios:create'\n                        ]),\n                      groupName: 'portfolio-button-group',\n                      key: 'create-portfolio',\n                      ...createLinkButton({\n                        pathname: '/portfolios/add-portfolio',\n                        variant: 'primary',\n                        key: 'create-portfolio-button',\n                        'aria-label': 'Create portfolio',\n                        title: 'Create'\n                      })\n                    })\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            isCompact: true,\n                            key: 'portfolios-pagination',\n                            meta,\n                            apiRequest: fetchPortfolios\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","import React, { Fragment, useEffect, useReducer, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { SearchIcon, WrenchIcon } from '@patternfly/react-icons';\nimport { Button } from '@patternfly/react-core';\n\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport {\n  fetchPortfoliosWithState,\n  copyPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport PortfolioCard from '../../presentational-components/portfolio/porfolio-card';\nimport createPortfolioToolbarSchema from '../../toolbar/schemas/portfolios-toolbar.schema';\nimport ContentGalleryEmptyState, {\n  EmptyStatePrimaryAction\n} from '../../presentational-components/shared/content-gallery-empty-state';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport { ADD_PORTFOLIO_ROUTE, PORTFOLIO_ROUTE } from '../../constants/routes';\nimport UserContext from '../../user-context';\nimport { hasPermission } from '../../helpers/shared/helpers';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\n\nconst debouncedFilter = asyncFormValidator(\n  (filter, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(fetchPortfoliosWithState({ ...meta, filter })).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst portfoliosState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n  }\n\n  return state;\n};\n\nconst Portfolios = () => {\n  const viewState = useInitialUriHash();\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch] = useReducer(\n    portfoliosState,\n    {\n      ...initialState,\n      filterValue: viewState?.portfolio?.filter || ''\n    }\n  );\n  const { data, meta } = useSelector(\n    ({ portfolioReducer: { portfolios } }) => portfolios\n  );\n  const dispatch = useDispatch();\n  const { permissions: userPermissions } = useContext(UserContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(fetchPortfoliosWithState(viewState?.portfolio)).then(() =>\n      stateDispatch({ type: 'setFetching', payload: false })\n    );\n    scrollToTop();\n    insights.chrome.appNavClick({ id: 'portfolios', secondaryNav: true });\n  }, []);\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const handleCopyPortfolio = (id) =>\n    dispatch(copyPortfolio(id)).then(({ id }) =>\n      history.push({\n        pathname: PORTFOLIO_ROUTE,\n        search: `?portfolio=${id}`\n      })\n    );\n\n  const NoDataAction = () => (\n    <EmptyStatePrimaryAction\n      url={ADD_PORTFOLIO_ROUTE}\n      id=\"create-portfolio\"\n      label=\"Create portfolio\"\n      hasPermission={hasPermission(userPermissions, [\n        'catalog:portfolios:create'\n      ])}\n    />\n  );\n\n  const FilterAction = () => (\n    <Button variant=\"link\" onClick={() => handleFilterItems('')}>\n      Clear all filters\n    </Button>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? NoDataAction : FilterAction,\n    title: meta.noData ? 'No portfolios' : 'No results found',\n    description: meta.noData\n      ? 'No portfolios match your filter criteria.'\n      : 'No results match the filter criteria. Remove all filters or clear all filters to show results.',\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n\n  const galleryItems = data.map((item) => (\n    <PortfolioCard\n      key={item.id}\n      {...item}\n      handleCopyPortfolio={handleCopyPortfolio}\n    />\n  ));\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPortfolioToolbarSchema({\n          meta,\n          userPermissions,\n          fetchPortfolios: (_, options) =>\n            dispatch(\n              fetchPortfoliosWithState({ filter: filterValue, ...options })\n            ),\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterItems,\n            placeholder: 'Filter by portfolio'\n          }\n        })}\n      />\n      <ContentGallery\n        items={galleryItems}\n        isLoading={isFetching || isFiltering}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState {...emptyStateProps} />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            meta={meta}\n            apiRequest={(_, options) =>\n              dispatch(\n                fetchPortfoliosWithState({ filter: filterValue, ...options })\n              )\n            }\n            dropDirection=\"up\"\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Portfolios;\n"],"sourceRoot":""}