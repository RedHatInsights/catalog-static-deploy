{"version":3,"sources":["webpack:///./src/utilities/async-form-validator.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/wrench-icon.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Label/Label.js","webpack:///./node_modules/@patternfly/react-core/node_modules/@patternfly/react-styles/css/components/Label/label.js","webpack:///./node_modules/@patternfly/react-core/node_modules/@patternfly/react-styles/css/components/Label/label.css?1eca","webpack:///./node_modules/@patternfly/react-core/node_modules/@patternfly/react-styles/css/components/Label/label.css","webpack:///./src/presentational-components/portfolio/portfolio-card-header.js","webpack:///./src/presentational-components/portfolio/porfolio-card.js","webpack:///./src/toolbar/schemas/portfolios-toolbar.schema.js","webpack:///./src/smart-components/portfolio/portfolios.js"],"names":["asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","exports","__esModule","WrenchIconConfig","name","height","width","svgPath","yOffset","xOffset","transform","WrenchIcon","createIcon","Object","defineProperty","value","tslib_1","React","__importStar","label_1","__importDefault","Button_1","react_styles_1","times_icon_1","colorStyles","blue","default","modifiers","cyan","green","orange","purple","red","grey","Label","_a","children","className","color","variant","icon","onClose","closeBtn","closeBtnProps","href","props","__rest","Component","button","createElement","Button","assign","type","onClick","css","label","outline","labelContent","labelIcon","displayName","api","content","module","i","locals","___CSS_LOADER_API_IMPORT___","push","HeaderTitle","styled","LevelItem","HeaderLevel","Level","PortfolioCardHeader","id","to","portfolioName","headerActions","TextContent","Text","title","component","TextVariants","h3","event","preventDefault","propTypes","PropTypes","string","isRequired","node","shape","pathname","search","defaultProps","TO_DISPLAY","HeaderActions","portfolioId","handleCopyPortfolio","userCapabilities","share","copy","unshare","update","destroy","set_approval","useState","isOpen","setOpen","dropdownItems","DropdownItem","key","searchParams","portfolio","SHARE_PORTFOLIO_ROUTE","preserveHash","EDIT_PORTFOLIO_WORKFLOW_ROUTE","EDIT_PORTFOLIO_ROUTE","REMOVE_PORTFOLIO_ROUTE","length","Dropdown","isPlain","onSelect","position","DropdownPosition","right","toggle","KebabToggle","onToggle","bool","func","PortfolioCard","imageUrl","isDisabled","metadata","user_capabilities","shared_groups","statistics","PORTFOLIO_ROUTE","CardHeader","small","DateFormat","date","updated_at","created_at","owner","toDisplay","CardFooter","history","object","number","createPortfolioToolbarSchema","meta","fetchPortfolios","userPermissions","filterProps","searchValue","onFilterChange","placeholder","fields","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","noData","LEVEL","TOOLBAR","TOOLBAR_GROUP","FILTER_TOOLBAR_ITEM","isClearable","hidden","count","hasPermission","createLinkButton","LEVEL_ITEM","AsyncPagination","isCompact","apiRequest","debouncedFilter","asyncFormValidator","filter","dispatch","filteringCallback","defaultSettings","fetchPortfoliosWithState","then","initialState","filterValue","isFetching","isFiltering","portfoliosState","state","action","payload","Portfolios","viewState","useInitialUriHash","useReducer","stateDispatch","useSelector","portfolioReducer","portfolios","data","useDispatch","useContext","UserContext","permissions","useHistory","useEffect","scrollToTop","insights","chrome","appNavClick","secondaryNav","handleFilterItems","offset","copyPortfolio","emptyStateProps","PrimaryAction","url","ADD_PORTFOLIO_ROUTE","description","Icon","SearchIcon","galleryItems","map","item","schema","_","items","isLoading","renderEmptyState","dropDirection"],"mappings":"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","file":"js/portfolios~31ecd969.15db22a5eaad014014e7.js","sourcesContent":["import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","\"use strict\"\nexports.__esModule = true;\nexports.WrenchIconConfig = {\n  name: 'WrenchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.WrenchIcon = require('../createIcon').createIcon(exports.WrenchIconConfig);\nexports[\"default\"] = exports.WrenchIcon;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst label_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Label/label\"));\nconst Button_1 = require(\"../Button\");\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst times_icon_1 = tslib_1.__importDefault(require(\"@patternfly/react-icons/dist/js/icons/times-icon\"));\nconst colorStyles = {\n    blue: label_1.default.modifiers.blue,\n    cyan: label_1.default.modifiers.cyan,\n    green: label_1.default.modifiers.green,\n    orange: label_1.default.modifiers.orange,\n    purple: label_1.default.modifiers.purple,\n    red: label_1.default.modifiers.red,\n    grey: ''\n};\nexports.Label = (_a) => {\n    var { children, className = '', color = 'grey', variant = 'filled', icon, onClose, closeBtn, closeBtnProps, href } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"color\", \"variant\", \"icon\", \"onClose\", \"closeBtn\", \"closeBtnProps\", \"href\"]);\n    const Component = href ? 'a' : 'span';\n    const button = closeBtn ? (closeBtn) : (React.createElement(Button_1.Button, Object.assign({ type: \"button\", variant: \"plain\", onClick: onClose }, Object.assign({ 'aria-label': 'label-close-button' }, closeBtnProps)),\n        React.createElement(times_icon_1.default, null)));\n    return (React.createElement(\"span\", Object.assign({}, props, { className: react_styles_1.css(label_1.default.label, colorStyles[color], variant === 'outline' && label_1.default.modifiers.outline, className) }),\n        React.createElement(Component, Object.assign({ className: react_styles_1.css(label_1.default.labelContent) }, (href && { href })),\n            icon && React.createElement(\"span\", { className: react_styles_1.css(label_1.default.labelIcon) }, icon),\n            children),\n        onClose && button));\n};\nexports.Label.displayName = 'Label';\n//# sourceMappingURL=Label.js.map","\"use strict\";\nexports.__esModule = true;\nrequire('./label.css');\nexports.default = {\n  \"button\": \"pf-c-button\",\n  \"label\": \"pf-c-label\",\n  \"labelContent\": \"pf-c-label__content\",\n  \"labelIcon\": \"pf-c-label__icon\",\n  \"modifiers\": {\n    \"blue\": \"pf-m-blue\",\n    \"green\": \"pf-m-green\",\n    \"orange\": \"pf-m-orange\",\n    \"red\": \"pf-m-red\",\n    \"purple\": \"pf-m-purple\",\n    \"cyan\": \"pf-m-cyan\",\n    \"outline\": \"pf-m-outline\"\n  }\n};","var api = require(\"!../../../../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../css-loader/dist/cjs.js!./label.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".pf-c-label {\\n  --pf-c-label--PaddingTop: var(--pf-global--spacer--xs);\\n  --pf-c-label--PaddingRight: var(--pf-global--spacer--sm);\\n  --pf-c-label--PaddingBottom: var(--pf-global--spacer--xs);\\n  --pf-c-label--PaddingLeft: var(--pf-global--spacer--sm);\\n  --pf-c-label--BorderRadius: var(--pf-global--BorderRadius--lg);\\n  --pf-c-label--BackgroundColor: var(--pf-global--BackgroundColor--200);\\n  --pf-c-label--Color: var(--pf-global--Color--100);\\n  --pf-c-label--FontSize: var(--pf-global--FontSize--sm);\\n  --pf-c-label__content--before--BorderWidth: 0;\\n  --pf-c-label__content--before--BorderColor: transparent;\\n  --pf-c-label--m-outline--BackgroundColor: var(--pf-global--BackgroundColor--100);\\n  --pf-c-label--m-outline__content--before--BorderWidth: var(--pf-global--BorderWidth--sm);\\n  --pf-c-label--m-outline__content--before--BorderColor: var(--pf-global--BorderColor--100);\\n  --pf-c-label__content--link--hover--before--BorderWidth: var(--pf-global--BorderWidth--sm);\\n  --pf-c-label__content--link--focus--before--BorderWidth: var(--pf-global--BorderWidth--sm);\\n  --pf-c-label__content--link--hover--before--BorderColor: var(--pf-global--BorderColor--200);\\n  --pf-c-label__content--link--focus--before--BorderColor: var(--pf-global--BorderColor--200);\\n  --pf-c-label--m-outline__content--link--hover--before--BorderWidth: var(--pf-global--BorderWidth--md);\\n  --pf-c-label--m-outline__content--link--focus--before--BorderWidth: var(--pf-global--BorderWidth--md);\\n  --pf-c-label--m-outline__content--link--hover--before--BorderColor: var(--pf-global--BorderColor--100);\\n  --pf-c-label--m-outline__content--link--focus--before--BorderColor: var(--pf-global--BorderColor--100);\\n  --pf-c-label--m-blue--BackgroundColor: var(--pf-global--palette--blue-50);\\n  --pf-c-label--m-blue__content--Color: var(--pf-global--info-color--200);\\n  --pf-c-label--m-blue__icon--Color: var(--pf-global--primary-color--100);\\n  --pf-c-label--m-blue__content--link--hover--before--BorderColor: var(--pf-global--primary-color--100);\\n  --pf-c-label--m-blue__content--link--focus--before--BorderColor: var(--pf-global--primary-color--100);\\n  --pf-c-label--m-outline--m-blue__content--before--BorderColor: var(--pf-global--active-color--200);\\n  --pf-c-label--m-outline--m-blue__content--link--hover--before--BorderColor: var(--pf-global--active-color--200);\\n  --pf-c-label--m-outline--m-blue__content--link--focus--before--BorderColor: var(--pf-global--active-color--200);\\n  --pf-c-label--m-green--BackgroundColor: var(--pf-global--palette--green-50);\\n  --pf-c-label--m-green__content--Color: var(--pf-global--success-color--200);\\n  --pf-c-label--m-green__icon--Color: var(--pf-global--success-color--100);\\n  --pf-c-label--m-green__content--link--hover--before--BorderColor: var(--pf-global--success-color--100);\\n  --pf-c-label--m-green__content--link--focus--before--BorderColor: var(--pf-global--success-color--100);\\n  --pf-c-label--m-outline--m-green__content--before--BorderColor: var(--pf-global--palette--green-100);\\n  --pf-c-label--m-outline--m-green__content--link--hover--before--BorderColor: var(--pf-global--palette--green-100);\\n  --pf-c-label--m-outline--m-green__content--link--focus--before--BorderColor: var(--pf-global--palette--green-100);\\n  --pf-c-label--m-orange--BackgroundColor: var(--pf-global--palette--gold-50);\\n  --pf-c-label--m-orange__content--Color: var(--pf-global--palette--gold-700);\\n  --pf-c-label--m-orange__icon--Color: var(--pf-global--palette--orange-300);\\n  --pf-c-label--m-orange__content--link--hover--before--BorderColor: var(--pf-global--palette--orange-300);\\n  --pf-c-label--m-orange__content--link--focus--before--BorderColor: var(--pf-global--palette--orange-300);\\n  --pf-c-label--m-outline--m-orange__content--before--BorderColor: var(--pf-global--palette--gold-100);\\n  --pf-c-label--m-outline--m-orange__content--link--hover--before--BorderColor: var(--pf-global--palette--gold-100);\\n  --pf-c-label--m-outline--m-orange__content--link--focus--before--BorderColor: var(--pf-global--palette--gold-100);\\n  --pf-c-label--m-red--BackgroundColor: var(--pf-global--palette--red-50);\\n  --pf-c-label--m-red__content--Color: var(--pf-global--palette--red-300);\\n  --pf-c-label--m-red__icon--Color: var(--pf-global--danger-color--100);\\n  --pf-c-label--m-red__content--link--hover--before--BorderColor: var(--pf-global--danger-color--100);\\n  --pf-c-label--m-red__content--link--focus--before--BorderColor: var(--pf-global--danger-color--100);\\n  --pf-c-label--m-outline--m-red__content--before--BorderColor: var(--pf-global--danger-color--100);\\n  --pf-c-label--m-outline--m-red__content--link--hover--before--BorderColor: var(--pf-global--danger-color--100);\\n  --pf-c-label--m-outline--m-red__content--link--focus--before--BorderColor: var(--pf-global--danger-color--100);\\n  --pf-c-label--m-purple--BackgroundColor: var(--pf-global--palette--purple-50);\\n  --pf-c-label--m-purple__content--Color: var(--pf-global--palette--purple-700);\\n  --pf-c-label--m-purple__icon--Color: var(--pf-global--palette--purple-500);\\n  --pf-c-label--m-purple__content--link--hover--before--BorderColor: var(--pf-global--palette--purple-500);\\n  --pf-c-label--m-purple__content--link--focus--before--BorderColor: var(--pf-global--palette--purple-500);\\n  --pf-c-label--m-outline--m-purple__content--before--BorderColor: var(--pf-global--palette--purple-100);\\n  --pf-c-label--m-outline--m-purple__content--link--hover--before--BorderColor: var(--pf-global--palette--purple-100);\\n  --pf-c-label--m-outline--m-purple__content--link--focus--before--BorderColor: var(--pf-global--palette--purple-100);\\n  --pf-c-label--m-cyan--BackgroundColor: var(--pf-global--palette--cyan-50);\\n  --pf-c-label--m-cyan__content--Color: var(--pf-global--default-color--300);\\n  --pf-c-label--m-cyan__icon--Color: var(--pf-global--default-color--200);\\n  --pf-c-label--m-cyan__content--link--hover--before--BorderColor: var(--pf-global--default-color--200);\\n  --pf-c-label--m-cyan__content--link--focus--before--BorderColor: var(--pf-global--default-color--200);\\n  --pf-c-label--m-outline--m-cyan__content--before--BorderColor: var(--pf-global--palette--cyan-100);\\n  --pf-c-label--m-outline--m-cyan__content--link--hover--before--BorderColor: var(--pf-global--palette--cyan-100);\\n  --pf-c-label--m-outline--m-cyan__content--link--focus--before--BorderColor: var(--pf-global--palette--cyan-100);\\n  --pf-c-label__content--Color: var(--pf-global--Color--100);\\n  --pf-c-label__icon--Color: var(--pf-global--Color--100);\\n  --pf-c-label__icon--MarginRight: var(--pf-global--spacer--xs);\\n  --pf-c-label__c-button--FontSize: var(--pf-global--FontSize--xs);\\n  --pf-c-label__c-button--MarginTop: calc(var(--pf-global--spacer--form-element) * -1);\\n  --pf-c-label__c-button--MarginRight: calc(var(--pf-global--spacer--form-element) * -1);\\n  --pf-c-label__c-button--MarginBottom: calc(var(--pf-global--spacer--form-element) * -1);\\n  --pf-c-label__c-button--MarginLeft: var(--pf-global--spacer--xs);\\n  --pf-c-label__c-button--PaddingTop: var(--pf-global--spacer--xs);\\n  --pf-c-label__c-button--PaddingRight: var(--pf-global--spacer--sm);\\n  --pf-c-label__c-button--PaddingBottom: var(--pf-global--spacer--xs);\\n  --pf-c-label__c-button--PaddingLeft: var(--pf-global--spacer--sm);\\n  position: relative;\\n  padding: var(--pf-c-label--PaddingTop) var(--pf-c-label--PaddingRight) var(--pf-c-label--PaddingBottom) var(--pf-c-label--PaddingLeft);\\n  font-size: var(--pf-c-label--FontSize);\\n  color: var(--pf-c-label--Color);\\n  white-space: nowrap;\\n  background-color: var(--pf-c-label--BackgroundColor);\\n  border-radius: var(--pf-c-label--BorderRadius); }\\n  .pf-c-label.pf-m-blue {\\n    --pf-c-label--BackgroundColor: var(--pf-c-label--m-blue--BackgroundColor);\\n    --pf-c-label__content--Color: var(--pf-c-label--m-blue__content--Color);\\n    --pf-c-label__icon--Color: var(--pf-c-label--m-blue__icon--Color);\\n    --pf-c-label--m-outline__content--before--BorderColor: var(--pf-c-label--m-outline--m-blue__content--before--BorderColor);\\n    --pf-c-label__content--link--hover--before--BorderColor: var(--pf-c-label--m-blue__content--link--hover--before--BorderColor);\\n    --pf-c-label__content--link--focus--before--BorderColor: var(--pf-c-label--m-blue__content--link--focus--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--hover--before--BorderColor: var(--pf-c-label--m-outline--m-blue__content--link--hover--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--focus--before--BorderColor: var(--pf-c-label--m-outline--m-blue__content--link--focus--before--BorderColor); }\\n  .pf-c-label.pf-m-green {\\n    --pf-c-label--BackgroundColor: var(--pf-c-label--m-green--BackgroundColor);\\n    --pf-c-label__content--Color: var(--pf-c-label--m-green__content--Color);\\n    --pf-c-label__icon--Color: var(--pf-c-label--m-green__icon--Color);\\n    --pf-c-label--m-outline__content--before--BorderColor: var(--pf-c-label--m-outline--m-green__content--before--BorderColor);\\n    --pf-c-label__content--link--hover--before--BorderColor: var(--pf-c-label--m-green__content--link--hover--before--BorderColor);\\n    --pf-c-label__content--link--focus--before--BorderColor: var(--pf-c-label--m-green__content--link--focus--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--hover--before--BorderColor: var(--pf-c-label--m-outline--m-green__content--link--hover--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--focus--before--BorderColor: var(--pf-c-label--m-outline--m-green__content--link--focus--before--BorderColor); }\\n  .pf-c-label.pf-m-orange {\\n    --pf-c-label--BackgroundColor: var(--pf-c-label--m-orange--BackgroundColor);\\n    --pf-c-label__content--Color: var(--pf-c-label--m-orange__content--Color);\\n    --pf-c-label__icon--Color: var(--pf-c-label--m-orange__icon--Color);\\n    --pf-c-label--m-outline__content--before--BorderColor: var(--pf-c-label--m-outline--m-orange__content--before--BorderColor);\\n    --pf-c-label__content--link--hover--before--BorderColor: var(--pf-c-label--m-orange__content--link--hover--before--BorderColor);\\n    --pf-c-label__content--link--focus--before--BorderColor: var(--pf-c-label--m-orange__content--link--focus--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--hover--before--BorderColor: var(--pf-c-label--m-outline--m-orange__content--link--hover--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--focus--before--BorderColor: var(--pf-c-label--m-outline--m-orange__content--link--focus--before--BorderColor); }\\n  .pf-c-label.pf-m-red {\\n    --pf-c-label--BackgroundColor: var(--pf-c-label--m-red--BackgroundColor);\\n    --pf-c-label__content--Color: var(--pf-c-label--m-red__content--Color);\\n    --pf-c-label__icon--Color: var(--pf-c-label--m-red__icon--Color);\\n    --pf-c-label--m-outline__content--before--BorderColor: var(--pf-c-label--m-outline--m-red__content--before--BorderColor);\\n    --pf-c-label__content--link--hover--before--BorderColor: var(--pf-c-label--m-red__content--link--hover--before--BorderColor);\\n    --pf-c-label__content--link--focus--before--BorderColor: var(--pf-c-label--m-red__content--link--focus--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--hover--before--BorderColor: var(--pf-c-label--m-outline--m-red__content--link--hover--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--focus--before--BorderColor: var(--pf-c-label--m-outline--m-red__content--link--focus--before--BorderColor); }\\n  .pf-c-label.pf-m-purple {\\n    --pf-c-label--BackgroundColor: var(--pf-c-label--m-purple--BackgroundColor);\\n    --pf-c-label__content--Color: var(--pf-c-label--m-purple__content--Color);\\n    --pf-c-label__icon--Color: var(--pf-c-label--m-purple__icon--Color);\\n    --pf-c-label--m-outline__content--before--BorderColor: var(--pf-c-label--m-outline--m-purple__content--before--BorderColor);\\n    --pf-c-label__content--link--hover--before--BorderColor: var(--pf-c-label--m-purple__content--link--hover--before--BorderColor);\\n    --pf-c-label__content--link--focus--before--BorderColor: var(--pf-c-label--m-purple__content--link--focus--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--hover--before--BorderColor: var(--pf-c-label--m-outline--m-purple__content--link--hover--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--focus--before--BorderColor: var(--pf-c-label--m-outline--m-purple__content--link--focus--before--BorderColor); }\\n  .pf-c-label.pf-m-cyan {\\n    --pf-c-label--BackgroundColor: var(--pf-c-label--m-cyan--BackgroundColor);\\n    --pf-c-label__content--Color: var(--pf-c-label--m-cyan__content--Color);\\n    --pf-c-label__icon--Color: var(--pf-c-label--m-cyan__icon--Color);\\n    --pf-c-label--m-outline__content--before--BorderColor: var(--pf-c-label--m-outline--m-cyan__content--before--BorderColor);\\n    --pf-c-label__content--link--hover--before--BorderColor: var(--pf-c-label--m-cyan__content--link--hover--before--BorderColor);\\n    --pf-c-label__content--link--focus--before--BorderColor: var(--pf-c-label--m-cyan__content--link--focus--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--hover--before--BorderColor: var(--pf-c-label--m-outline--m-cyan__content--link--hover--before--BorderColor);\\n    --pf-c-label--m-outline__content--link--focus--before--BorderColor: var(--pf-c-label--m-outline--m-cyan__content--link--focus--before--BorderColor); }\\n  .pf-c-label.pf-m-outline {\\n    --pf-c-label__content--before--BorderWidth: var(--pf-c-label--m-outline__content--before--BorderWidth);\\n    --pf-c-label__content--before--BorderColor: var(--pf-c-label--m-outline__content--before--BorderColor);\\n    --pf-c-label--BackgroundColor: var(--pf-c-label--m-outline--BackgroundColor); }\\n    .pf-c-label.pf-m-outline a.pf-c-label__content:hover {\\n      --pf-c-label__content--before--BorderWidth: var(--pf-c-label--m-outline__content--link--hover--before--BorderWidth);\\n      --pf-c-label__content--before--BorderColor: var(--pf-c-label--m-outline__content--link--hover--before--BorderColor); }\\n    .pf-c-label.pf-m-outline a.pf-c-label__content:focus {\\n      --pf-c-label__content--before--BorderWidth: var(--pf-c-label--m-outline__content--link--focus--before--BorderWidth);\\n      --pf-c-label__content--before--BorderColor: var(--pf-c-label--m-outline__content--link--focus--before--BorderColor); }\\n  .pf-c-label .pf-c-button {\\n    --pf-c-button--FontSize: var(--pf-c-label__c-button--FontSize);\\n    --pf-c-button--PaddingTop: var(--pf-c-label__c-button--PaddingTop);\\n    --pf-c-button--PaddingRight: var(--pf-c-label__c-button--PaddingRight);\\n    --pf-c-button--PaddingBottom: var(--pf-c-label__c-button--PaddingBottom);\\n    --pf-c-button--PaddingLeft: var(--pf-c-label__c-button--PaddingLeft);\\n    margin-top: var(--pf-c-label__c-button--MarginTop);\\n    margin-right: var(--pf-c-label__c-button--MarginRight);\\n    margin-bottom: var(--pf-c-label__c-button--MarginBottom);\\n    margin-left: var(--pf-c-label__c-button--MarginLeft); }\\n\\n.pf-c-label,\\n.pf-c-label__content {\\n  display: inline-flex;\\n  align-items: center; }\\n\\n.pf-c-label__content {\\n  color: var(--pf-c-label__content--Color); }\\n  .pf-c-label__content::before {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    content: \\\"\\\";\\n    border: var(--pf-c-label__content--before--BorderWidth) solid var(--pf-c-label__content--before--BorderColor);\\n    border-radius: var(--pf-c-label--BorderRadius); }\\n  a.pf-c-label__content {\\n    cursor: pointer;\\n    border: none; }\\n    a.pf-c-label__content, a.pf-c-label__content:hover, a.pf-c-label__content:focus {\\n      text-decoration: none; }\\n    a.pf-c-label__content:hover {\\n      --pf-c-label__content--before--BorderWidth: var(--pf-c-label__content--link--hover--before--BorderWidth);\\n      --pf-c-label__content--before--BorderColor: var(--pf-c-label__content--link--hover--before--BorderColor); }\\n    a.pf-c-label__content:focus {\\n      --pf-c-label__content--before--BorderWidth: var(--pf-c-label__content--link--focus--before--BorderWidth);\\n      --pf-c-label__content--before--BorderColor: var(--pf-c-label__content--link--focus--before--BorderColor); }\\n\\n.pf-c-label__icon {\\n  margin-right: var(--pf-c-label__icon--MarginRight);\\n  color: var(--pf-c-label__icon--Color); }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport styled from 'styled-components';\n\nconst HeaderTitle = styled(LevelItem)`\n  max-width: calc(100% - 44px);\n`;\n\nconst HeaderLevel = styled(Level)`\n  width: 100%;\n`;\n\nconst PortfolioCardHeader = ({ id, to, portfolioName, headerActions }) => (\n  <HeaderLevel>\n    <HeaderTitle className=\"pf-m-grow\">\n      <TextContent>\n        <Link to={to} id={`portfolio-link-${id}`}>\n          <Text\n            title={portfolioName}\n            className=\"pf-u-mb-0\"\n            component={TextVariants.h3}\n          >\n            <EllipsisTextContainer>{portfolioName}</EllipsisTextContainer>\n          </Text>\n        </Link>\n      </TextContent>\n    </HeaderTitle>\n    <LevelItem onClick={(event) => event.preventDefault()}>\n      {headerActions}\n    </LevelItem>\n  </HeaderLevel>\n);\n\nPortfolioCardHeader.propTypes = {\n  portfolioName: PropTypes.string.isRequired,\n  headerActions: PropTypes.node,\n  id: PropTypes.string,\n  to: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string.isRequired\n  }).isRequired\n};\n\nPortfolioCardHeader.defaultProps = {\n  headerActions: []\n};\n\nexport default PortfolioCardHeader;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ItemDetails from '../shared/card-common';\nimport {\n  CardHeader,\n  CardFooter,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  Text,\n  TextContent,\n  TextVariants,\n  Label\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\nimport PortfolioCardHeader from './portfolio-card-header';\n\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport {\n  SHARE_PORTFOLIO_ROUTE,\n  EDIT_PORTFOLIO_WORKFLOW_ROUTE,\n  EDIT_PORTFOLIO_ROUTE,\n  REMOVE_PORTFOLIO_ROUTE,\n  PORTFOLIO_ROUTE\n} from '../../constants/routes';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../styled-components/styled-gallery';\nimport { StyledCardBody } from '../styled-components/card';\n\nconst TO_DISPLAY = ['description'];\n\nconst HeaderActions = ({\n  portfolioId,\n  handleCopyPortfolio,\n  userCapabilities: { share, copy, unshare, update, destroy, set_approval }\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const dropdownItems = [];\n  if (share || unshare) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"share-portfolio-action\"\n        id=\"share-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={SHARE_PORTFOLIO_ROUTE}\n            preserveHash\n          >\n            Share\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  if (copy) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"copy-portfolio-action\"\n        id=\"copy-portfolio-action\"\n        onClick={() => handleCopyPortfolio(portfolioId)}\n      >\n        Copy\n      </DropdownItem>\n    );\n  }\n\n  if (set_approval) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"workflow-portfolio-action\"\n        id=\"workflow-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={EDIT_PORTFOLIO_WORKFLOW_ROUTE}\n            preserveHash\n          >\n            Set approval\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"edit-portfolio-action\"\n        id=\"edit-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={EDIT_PORTFOLIO_ROUTE}\n            preserveHash\n          >\n            Edit\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  if (destroy) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"remove-portfolio-action\"\n        id=\"remove-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={REMOVE_PORTFOLIO_ROUTE}\n            preserveHash\n          >\n            Delete\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  return dropdownItems.length === 0 ? null : (\n    <Dropdown\n      key=\"portfolio-dropdown\"\n      id={`portfolio-${portfolioId}-dropdown`}\n      isOpen={isOpen}\n      isPlain\n      onSelect={() => setOpen(false)}\n      position={DropdownPosition.right}\n      toggle={\n        <KebabToggle\n          id={`portfolio-${portfolioId}-toggle`}\n          onToggle={(isOpen) => setOpen(isOpen)}\n        />\n      }\n      dropdownItems={dropdownItems}\n    />\n  );\n};\n\nHeaderActions.propTypes = {\n  portfolioId: PropTypes.string.isRequired,\n  userCapabilities: PropTypes.shape({\n    destroy: PropTypes.bool,\n    update: PropTypes.bool,\n    share: PropTypes.bool,\n    unshare: PropTypes.bool,\n    set_approval: PropTypes.bool,\n    copy: PropTypes.bool\n  }).isRequired,\n  handleCopyPortfolio: PropTypes.func.isRequired\n};\n\nconst PortfolioCard = ({\n  imageUrl,\n  isDisabled,\n  name,\n  id,\n  handleCopyPortfolio,\n  metadata: {\n    user_capabilities,\n    statistics: { shared_groups }\n  },\n  ...props\n}) => {\n  const to = {\n    pathname: PORTFOLIO_ROUTE,\n    search: `?portfolio=${id}`\n  };\n  return (\n    <StyledGalleryItem isDisabled={isDisabled}>\n      <StyledCard>\n        <CardHeader>\n          <PortfolioCardHeader\n            id={id}\n            to={to}\n            portfolioName={name}\n            headerActions={\n              <HeaderActions\n                portfolioId={id}\n                userCapabilities={user_capabilities}\n                handleCopyPortfolio={handleCopyPortfolio}\n              />\n            }\n          />\n        </CardHeader>\n        <StyledCardBody>\n          <TextContent className=\"pf-u-mb-md\">\n            <Text component={TextVariants.small} className=\"pf-i-mb-sm\">\n              Last updated&nbsp;\n              <DateFormat\n                date={props.updated_at || props.created_at}\n                type=\"relative\"\n              />\n            </Text>\n            <Text component={TextVariants.small}>{props.owner}</Text>\n          </TextContent>\n          <ItemDetails\n            {...{ name, imageUrl, ...props }}\n            toDisplay={TO_DISPLAY}\n          />\n        </StyledCardBody>\n        <CardFooter>\n          {shared_groups > 0 && (\n            <Label variant=\"filled\" color=\"blue\">\n              Shared\n            </Label>\n          )}\n        </CardFooter>\n      </StyledCard>\n    </StyledGalleryItem>\n  );\n};\n\nPortfolioCard.propTypes = {\n  history: PropTypes.object,\n  imageUrl: PropTypes.string,\n  name: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  updated_at: PropTypes.string,\n  created_at: PropTypes.string.isRequired,\n  owner: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  metadata: PropTypes.shape({\n    user_capabilities: PropTypes.object.isRequired,\n    statistics: PropTypes.shape({ shared_groups: PropTypes.number }).isRequired\n  }).isRequired,\n  handleCopyPortfolio: PropTypes.func.isRequired\n};\n\nexport default PortfolioCard;\n","import { toolbarComponentTypes } from '../toolbar-mapper';\nimport { createLinkButton } from '../helpers';\nimport { hasPermission } from '../../helpers/shared/helpers';\n\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nconst createPortfolioToolbarSchema = ({\n  meta,\n  fetchPortfolios,\n  userPermissions,\n  filterProps: { searchValue, onFilterChange, placeholder }\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'portfolios-top-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'portfolios-toolbar-title',\n          title: 'Portfolios',\n          noData: meta.noData\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'portfolios-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'main-portfolio-toolbar',\n                  fields: [\n                    {\n                      key: 'portfolio-actions-group',\n                      component: toolbarComponentTypes.TOOLBAR_GROUP,\n                      fields: [\n                        {\n                          component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                          key: 'filter-input',\n                          searchValue,\n                          onFilterChange,\n                          placeholder,\n                          isClearable: true\n                        },\n                        {\n                          hidden:\n                            meta.count === 0 ||\n                            !hasPermission(userPermissions, [\n                              'catalog:portfolios:create'\n                            ]),\n                          key: 'create-portfolio',\n                          ...createLinkButton({\n                            pathname: '/portfolios/add-portfolio',\n                            variant: 'primary',\n                            key: 'create-portfolio-button',\n                            'aria-label': 'Create portfolio',\n                            title: 'Create'\n                          })\n                        }\n                      ]\n                    }\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            isCompact: true,\n                            key: 'portfolios-pagination',\n                            meta,\n                            apiRequest: fetchPortfolios\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","import React, { Fragment, useEffect, useReducer, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { SearchIcon, WrenchIcon } from '@patternfly/react-icons';\nimport { Button } from '@patternfly/react-core';\n\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport {\n  fetchPortfoliosWithState,\n  copyPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport PortfolioCard from '../../presentational-components/portfolio/porfolio-card';\nimport createPortfolioToolbarSchema from '../../toolbar/schemas/portfolios-toolbar.schema';\nimport ContentGalleryEmptyState, {\n  EmptyStatePrimaryAction\n} from '../../presentational-components/shared/content-gallery-empty-state';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport { ADD_PORTFOLIO_ROUTE, PORTFOLIO_ROUTE } from '../../constants/routes';\nimport UserContext from '../../user-context';\nimport { hasPermission } from '../../helpers/shared/helpers';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\n\nconst debouncedFilter = asyncFormValidator(\n  (filter, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(fetchPortfoliosWithState({ ...meta, filter })).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst portfoliosState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n  }\n\n  return state;\n};\n\nconst Portfolios = () => {\n  const viewState = useInitialUriHash();\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch] = useReducer(\n    portfoliosState,\n    {\n      ...initialState,\n      filterValue: viewState?.portfolio?.filter || ''\n    }\n  );\n  const { data, meta } = useSelector(\n    ({ portfolioReducer: { portfolios } }) => portfolios\n  );\n  const dispatch = useDispatch();\n  const { permissions: userPermissions } = useContext(UserContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(fetchPortfoliosWithState(viewState?.portfolio)).then(() =>\n      stateDispatch({ type: 'setFetching', payload: false })\n    );\n    scrollToTop();\n    insights.chrome.appNavClick({ id: 'portfolios', secondaryNav: true });\n  }, []);\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const handleCopyPortfolio = (id) =>\n    dispatch(copyPortfolio(id)).then(({ id }) =>\n      history.push({\n        pathname: PORTFOLIO_ROUTE,\n        search: `?portfolio=${id}`\n      })\n    );\n\n  const NoDataAction = () => (\n    <EmptyStatePrimaryAction\n      url={ADD_PORTFOLIO_ROUTE}\n      id=\"create-portfolio\"\n      label=\"Create portfolio\"\n      hasPermission={hasPermission(userPermissions, [\n        'catalog:portfolios:create'\n      ])}\n    />\n  );\n\n  const FilterAction = () => (\n    <Button variant=\"link\" onClick={() => handleFilterItems('')}>\n      Clear all filters\n    </Button>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? NoDataAction : FilterAction,\n    title: meta.noData ? 'No portfolios' : 'No results found',\n    description: meta.noData\n      ? 'No portfolios match your filter criteria.'\n      : 'No results match the filter criteria. Remove all filters or clear all filters to show results.',\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n\n  const galleryItems = data.map((item) => (\n    <PortfolioCard\n      key={item.id}\n      {...item}\n      handleCopyPortfolio={handleCopyPortfolio}\n    />\n  ));\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPortfolioToolbarSchema({\n          meta,\n          userPermissions,\n          fetchPortfolios: (_, options) =>\n            dispatch(\n              fetchPortfoliosWithState({ filter: filterValue, ...options })\n            ),\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterItems,\n            placeholder: 'Filter by portfolio'\n          }\n        })}\n      />\n      <ContentGallery\n        items={galleryItems}\n        isLoading={isFetching || isFiltering}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState {...emptyStateProps} />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            meta={meta}\n            apiRequest={(_, options) =>\n              dispatch(\n                fetchPortfoliosWithState({ filter: filterValue, ...options })\n              )\n            }\n            dropDirection=\"up\"\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Portfolios;\n"],"sourceRoot":""}