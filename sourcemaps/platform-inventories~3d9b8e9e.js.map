{"version":3,"sources":["webpack:///./src/presentational-components/shared/content-gallery-empty-state.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/presentational-components/shared/content-list.js","webpack:///./src/smart-components/platform/platform-inventories.js","webpack:///./src/smart-components/platform/platform-table-helpers.js"],"names":["ContentGalleryEmptyState","title","Icon","description","PrimaryAction","renderDescription","className","icon","component","TextVariants","h1","defaultProps","propTypes","PropTypes","string","isRequired","any","func","EmptyStatePrimaryAction","url","label","hasPermission","id","pathname","preserveSearch","variant","bool","BottomPaginationContainer","children","oneOfType","node","arrayOf","NoItems","Text","ContentList","data","columns","isCompact","isLoading","actionResolver","areActionsDisabled","borders","routes","titlePlural","renderEmptyState","useState","rows","setRows","useEffect","length","Table","aria-label","TableVariant","compact","cells","array","pagination","shape","limit","number","offset","count","titleSingular","requests","items","initialState","filterValue","isOpen","isFetching","isFiltering","debouncedFilter","asyncFormValidator","value","dispatch","filteringCallback","meta","defaultSettings","fetchPlatformInventories","then","platformInventoriesState","state","action","type","payload","PlatformInventories","useReducer","stateDispatch","useSelector","platformReducer","platformInventories","platform","selectedPlatform","useDispatch","useQuery","history","useHistory","scrollToTop","inventoryRows","reduce","acc","key","name","created_at","workflow","timeAgo","createRows","schema","createPlatformsFilterToolbarSchema","onFilterChange","searchValue","filterPlaceholder","apiRequest","_","options","Section","inventoryData","onClick","push","search","SearchIcon","dropDirection"],"mappings":"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","file":"js/platform-inventories~3d9b8e9e.238826b2bed976309f3f.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ContentGalleryEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <div className=\"pf-u-mt-xl\">\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={Icon} />\n      <TextContent>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </TextContent>\n      <EmptyStateBody>\n        {description}\n        {renderDescription()}\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        {PrimaryAction && <PrimaryAction />}\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </div>\n);\n\nContentGalleryEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nContentGalleryEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default ContentGalleryEmptyState;\n\nexport const EmptyStatePrimaryAction = ({\n  url,\n  label,\n  hasPermission = false,\n  id\n}) =>\n  hasPermission && (\n    <CatalogLink id={id} pathname={url} preserveSearch>\n      <Button variant=\"primary\">{label}</Button>\n    </CatalogLink>\n  );\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  hasPermission: PropTypes.bool\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    {children}\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableVariant\n} from '@patternfly/react-table';\n\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst NoItems = () => <Text component={TextVariants.h1}>No items found</Text>;\n\nconst ContentList = ({\n  data,\n  columns,\n  isCompact,\n  isLoading,\n  actionResolver,\n  areActionsDisabled,\n  borders,\n  routes,\n  titlePlural,\n  renderEmptyState\n}) => {\n  const [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    setRows(data);\n  }, [data]);\n\n  const renderEmptyContent = () =>\n    renderEmptyState ? renderEmptyState() : <NoItems />;\n\n  const renderContent = () =>\n    rows.length === 0 ? (\n      renderEmptyContent()\n    ) : (\n      <Fragment>\n        {routes()}\n        <Table\n          aria-label={`${titlePlural} table`}\n          variant={isCompact ? TableVariant.compact : null}\n          borders={borders}\n          rows={rows}\n          cells={columns}\n          actionResolver={actionResolver}\n          areActionsDisabled={areActionsDisabled}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      </Fragment>\n    );\n\n  return isLoading ? <ListLoader /> : renderContent();\n};\n\nContentList.propTypes = {\n  borders: PropTypes.bool,\n  isCompact: PropTypes.bool,\n  columns: PropTypes.array.isRequired,\n  renderEmptyState: PropTypes.func.isRequired,\n  data: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number\n  }),\n  titlePlural: PropTypes.string,\n  titleSingular: PropTypes.string,\n  routes: PropTypes.func,\n  actionResolver: PropTypes.func,\n  areActionsDisabled: PropTypes.func,\n  isLoading: PropTypes.bool\n};\n\nContentList.defaultProps = {\n  requests: [],\n  isLoading: false,\n  isCompact: false,\n  borders: true,\n  routes: () => null,\n  items: PropTypes.array,\n  renderEmptyState: PropTypes.func\n};\n\nexport default ContentList;\n","import React, { Fragment, useEffect, useReducer } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { fetchPlatformInventories } from '../../redux/actions/platform-actions';\nimport { createPlatformsFilterToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport ContentGaleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport ContentList from '../../presentational-components/shared/content-list';\nimport { createRows } from './platform-table-helpers.js';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useQuery from '../../utilities/use-query';\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (id, value, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(fetchPlatformInventories(id, value, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst platformInventoriesState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst columns = ['Name', 'Description', 'Created', 'Workflow'];\n\nconst PlatformInventories = () => {\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch] = useReducer(\n    platformInventoriesState,\n    initialState\n  );\n  const { data, meta } = useSelector(\n    ({ platformReducer: { platformInventories } }) => platformInventories\n  );\n  const platform = useSelector(\n    ({ platformReducer: { selectedPlatform } }) => selectedPlatform\n  );\n  const dispatch = useDispatch();\n  const [{ platform: id }] = useQuery(['platform']);\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(\n      fetchPlatformInventories(id, filterValue, defaultSettings)\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n  }, []);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      id,\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const actionResolver = (inventoryData) => {\n    return [\n      {\n        title: 'Set approval',\n        onClick: () =>\n          history.push({\n            pathname: '/platform/platform-inventories/edit-workflow',\n            search: `?platform=${id}&inventory=${inventoryData.id}`\n          })\n      }\n    ];\n  };\n\n  const inventoryRows = data ? createRows(data, filterValue) : [];\n  const title = platform ? platform.name : '';\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPlatformsFilterToolbarSchema({\n          onFilterChange: handleFilterChange,\n          searchValue: filterValue,\n          filterPlaceholder: 'Filter by inventory',\n          meta,\n          apiRequest: (_, options) =>\n            dispatch(fetchPlatformInventories(id, filterValue, options))\n        })}\n      />\n      <Section type=\"content\">\n        <ContentList\n          title={title}\n          data={inventoryRows}\n          columns={columns}\n          isLoading={isFetching || isFiltering}\n          actionResolver={actionResolver}\n          renderEmptyState={() => (\n            <ContentGaleryEmptyState\n              title=\"No inventories\"\n              Icon={SearchIcon}\n              description={\n                filterValue === ''\n                  ? 'No inventories found.'\n                  : 'No inventories match your filter criteria.'\n              }\n            />\n          )}\n        />\n      </Section>\n\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiRequest={(_, options) =>\n              dispatch(fetchPlatformInventories(id, filterValue, options))\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PlatformInventories;\n","import { timeAgo } from '../../helpers/shared/helpers';\n\nexport const createRows = (data) =>\n  data.reduce(\n    (acc, { id, name, description, created_at, workflow }, key) => [\n      ...acc,\n      {\n        id,\n        key,\n        isOpen: false,\n        cells: [name, description, timeAgo(created_at), workflow]\n      }\n    ],\n    []\n  );\n"],"sourceRoot":""}