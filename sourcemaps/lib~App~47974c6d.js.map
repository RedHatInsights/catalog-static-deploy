{"version":3,"sources":["webpack:///./node_modules/@redhat-cloud-services/catalog-client/dist/api.js"],"names":["extendStatics","__extends","this","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","push","defineProperty","exports","globalImportUrl","axios_1","base_1","ApprovalRequestStateEnum","OrderStateEnum","OrderItemStateEnum","OrderProcessAssociationsToRemoveAssociationsToRemoveEnum","ProgressMessageLevelEnum","ShareInfoPermissionsEnum","SharePolicyPermissionsEnum","UnsharePolicyPermissionsEnum","DefaultApiAxiosParamCreator","configuration","_this","getDocumentation","options","localVarUrlObj","baseOptions","localVarRequestOptions","localVarHeaderParameter","localVarQueryParameter","headersFromBaseOptions","_a","parse","method","username","password","query","search","headers","url","format","postGraphQL","graphQLRequest","needsSerialization","RequiredError","data","JSON","stringify","undefined","DefaultApiFp","localVarAxiosArgs","axios","basePath","default","BASE_PATH","axiosRequestArgs","request","DefaultApiFactory","DefaultApi","_super","BaseAPI","IconApiAxiosParamCreator","createIcon","content","portfolioId","portfolioItemId","localVarFormParams","FormData","append","destroyIcon","id","localVarPath","replace","encodeURIComponent","String","IconApiFp","IconApiFactory","IconApi","OrderApiAxiosParamCreator","addToOrder","orderId","orderItem","cancelOrder","createOrder","destroyOrder","listOrderItemsFromOrder","limit","offset","filter","sortBy","listOrderProgressMessages","listOrders","restoreOrder","restoreKey","showOrder","showOrderItemFromOrder","submitOrder","OrderApiFp","OrderApiFactory","OrderApi","OrderItemApiAxiosParamCreator","destroyOrderItem","listApprovalRequests","orderItemId","listOrderItemProgressMessages","listOrderItems","restoreOrderItem","showOrderItem","OrderItemApiFp","OrderItemApiFactory","OrderItemApi","OrderProcessApiAxiosParamCreator","addOrderProcessAfterItem","orderProcessPortfolioItemId","addOrderProcessBeforeItem","createOrderProcess","orderProcess","destroyOrderProcess","linkTagToOrderProcess","resourceObject","listOrderProcesses","appName","objectId","objectType","removeOrderProcessAssociation","orderProcessAssociationsToRemove","showOrderProcess","unlinkTagFromOrderProcess","updateOrderProcess","OrderProcessApiFp","OrderProcessApiFactory","OrderProcessApi","PortfolioApiAxiosParamCreator","addPortfolioTag","tag","createPortfolio","portfolio","destroyPortfolio","fetchPortfolioItemsWithPortfolio","listPortfolioTags","listPortfolios","postCopyPortfolio","removePortfolioTags","shareInfo","sharePortfolio","sharePolicy","showPortfolio","showPortfolioIcon","cacheId","unDeletePortfolio","unsharePortfolio","unsharePolicy","updatePortfolio","PortfolioApiFp","PortfolioApiFactory","PortfolioApi","PortfolioItemApiAxiosParamCreator","addPortfolioItemTag","createPortfolioItem","destroyPortfolioItem","getPortfolioItemNextName","destinationPortfolioId","listPortfolioItemTags","listPortfolioItems","listProviderControlParameters","listServicePlans","postCopyPortfolioItem","copyPortfolioItem","removePortfolioItemTags","showPortfolioItem","showDiscarded","showPortfolioItemIcon","unDeletePortfolioItem","updatePortfolioItem","portfolioItem","PortfolioItemApiFp","PortfolioItemApiFactory","PortfolioItemApi","ServicePlansApiAxiosParamCreator","createServicePlan","importServicePlan","patchServicePlanModified","patchModifiedServicePlan","resetServicePlanModified","showServicePlan","showServicePlanBase","showServicePlanModified","ServicePlansApiFp","ServicePlansApiFactory","ServicePlansApi","SettingsApiAxiosParamCreator","createSetting","setting","destroySetting","name","listSettings","showSetting","updateSetting","SettingsApiFp","SettingsApiFactory","SettingsApi","TagsApiAxiosParamCreator","listTags","TagsApiFp","TagsApiFactory","TagsApi","TenantApiAxiosParamCreator","listTenants","showTenant","tenantId","tenantSeed","TenantApiFp","TenantApiFactory","TenantApi"],"mappings":"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","file":"js/lib~App~47974c6d.c3c782105d2d3460f28e.js","sourcesContent":["\"use strict\";\n// tslint:disable\n/**\n * Catalog API\n * This API gets and orders catalog items from different cloud sources.\n *\n * The version of the OpenAPI document: 1.3.0\n * Contact: support@redhat.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar globalImportUrl = require(\"url\");\nvar axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nvar base_1 = require(\"./base\");\n/**\n    * @export\n    * @enum {string}\n    */\nvar ApprovalRequestStateEnum;\n(function (ApprovalRequestStateEnum) {\n    ApprovalRequestStateEnum[\"Undecided\"] = \"undecided\";\n    ApprovalRequestStateEnum[\"Approved\"] = \"approved\";\n    ApprovalRequestStateEnum[\"Denied\"] = \"denied\";\n    ApprovalRequestStateEnum[\"Canceled\"] = \"canceled\";\n    ApprovalRequestStateEnum[\"Error\"] = \"error\";\n})(ApprovalRequestStateEnum = exports.ApprovalRequestStateEnum || (exports.ApprovalRequestStateEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar OrderStateEnum;\n(function (OrderStateEnum) {\n    OrderStateEnum[\"Created\"] = \"Created\";\n    OrderStateEnum[\"ApprovalPending\"] = \"Approval Pending\";\n    OrderStateEnum[\"Ordered\"] = \"Ordered\";\n    OrderStateEnum[\"Failed\"] = \"Failed\";\n    OrderStateEnum[\"Completed\"] = \"Completed\";\n    OrderStateEnum[\"Canceled\"] = \"Canceled\";\n})(OrderStateEnum = exports.OrderStateEnum || (exports.OrderStateEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar OrderItemStateEnum;\n(function (OrderItemStateEnum) {\n    OrderItemStateEnum[\"Created\"] = \"Created\";\n    OrderItemStateEnum[\"ApprovalPending\"] = \"Approval Pending\";\n    OrderItemStateEnum[\"Ordered\"] = \"Ordered\";\n    OrderItemStateEnum[\"Failed\"] = \"Failed\";\n    OrderItemStateEnum[\"Completed\"] = \"Completed\";\n    OrderItemStateEnum[\"Approved\"] = \"Approved\";\n    OrderItemStateEnum[\"Denied\"] = \"Denied\";\n    OrderItemStateEnum[\"Canceled\"] = \"Canceled\";\n})(OrderItemStateEnum = exports.OrderItemStateEnum || (exports.OrderItemStateEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar OrderProcessAssociationsToRemoveAssociationsToRemoveEnum;\n(function (OrderProcessAssociationsToRemoveAssociationsToRemoveEnum) {\n    OrderProcessAssociationsToRemoveAssociationsToRemoveEnum[\"Before\"] = \"before\";\n    OrderProcessAssociationsToRemoveAssociationsToRemoveEnum[\"After\"] = \"after\";\n})(OrderProcessAssociationsToRemoveAssociationsToRemoveEnum = exports.OrderProcessAssociationsToRemoveAssociationsToRemoveEnum || (exports.OrderProcessAssociationsToRemoveAssociationsToRemoveEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar ProgressMessageLevelEnum;\n(function (ProgressMessageLevelEnum) {\n    ProgressMessageLevelEnum[\"Info\"] = \"info\";\n    ProgressMessageLevelEnum[\"Error\"] = \"error\";\n    ProgressMessageLevelEnum[\"Warning\"] = \"warning\";\n    ProgressMessageLevelEnum[\"Debug\"] = \"debug\";\n})(ProgressMessageLevelEnum = exports.ProgressMessageLevelEnum || (exports.ProgressMessageLevelEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar ShareInfoPermissionsEnum;\n(function (ShareInfoPermissionsEnum) {\n    ShareInfoPermissionsEnum[\"Read\"] = \"read\";\n    ShareInfoPermissionsEnum[\"Update\"] = \"update\";\n    ShareInfoPermissionsEnum[\"Delete\"] = \"delete\";\n    ShareInfoPermissionsEnum[\"Order\"] = \"order\";\n})(ShareInfoPermissionsEnum = exports.ShareInfoPermissionsEnum || (exports.ShareInfoPermissionsEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar SharePolicyPermissionsEnum;\n(function (SharePolicyPermissionsEnum) {\n    SharePolicyPermissionsEnum[\"Read\"] = \"read\";\n    SharePolicyPermissionsEnum[\"Update\"] = \"update\";\n    SharePolicyPermissionsEnum[\"Delete\"] = \"delete\";\n    SharePolicyPermissionsEnum[\"Order\"] = \"order\";\n})(SharePolicyPermissionsEnum = exports.SharePolicyPermissionsEnum || (exports.SharePolicyPermissionsEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar UnsharePolicyPermissionsEnum;\n(function (UnsharePolicyPermissionsEnum) {\n    UnsharePolicyPermissionsEnum[\"Read\"] = \"read\";\n    UnsharePolicyPermissionsEnum[\"Update\"] = \"update\";\n    UnsharePolicyPermissionsEnum[\"Delete\"] = \"delete\";\n    UnsharePolicyPermissionsEnum[\"Order\"] = \"order\";\n})(UnsharePolicyPermissionsEnum = exports.UnsharePolicyPermissionsEnum || (exports.UnsharePolicyPermissionsEnum = {}));\n/**\n * DefaultApi - axios parameter creator\n * @export\n */\nexports.DefaultApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         *\n         * @summary Return this API document in JSON format\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getDocumentation: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/openapi.json\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Performs a GraphQL Query\n         * @summary Perform a GraphQL Query\n         * @param {GraphQLRequest} graphQLRequest GraphQL Query Request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postGraphQL: function (graphQLRequest, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'graphQLRequest' is not null or undefined\n                    if (graphQLRequest === null || graphQLRequest === undefined) {\n                        throw new base_1.RequiredError('graphQLRequest', 'Required parameter graphQLRequest was null or undefined when calling postGraphQL.');\n                    }\n                    localVarPath = \"/graphql\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof graphQLRequest !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(graphQLRequest !== undefined ? graphQLRequest : {}) : (graphQLRequest || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * DefaultApi - functional programming interface\n * @export\n */\nexports.DefaultApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Return this API document in JSON format\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getDocumentation: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.DefaultApiAxiosParamCreator(configuration).getDocumentation(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Performs a GraphQL Query\n         * @summary Perform a GraphQL Query\n         * @param {GraphQLRequest} graphQLRequest GraphQL Query Request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postGraphQL: function (graphQLRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.DefaultApiAxiosParamCreator(configuration).postGraphQL(graphQLRequest, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * DefaultApi - factory interface\n * @export\n */\nexports.DefaultApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Return this API document in JSON format\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getDocumentation: function (options) {\n            return exports.DefaultApiFp(configuration).getDocumentation(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Performs a GraphQL Query\n         * @summary Perform a GraphQL Query\n         * @param {GraphQLRequest} graphQLRequest GraphQL Query Request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postGraphQL: function (graphQLRequest, options) {\n            return exports.DefaultApiFp(configuration).postGraphQL(graphQLRequest, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * DefaultApi - object-oriented interface\n * @export\n * @class DefaultApi\n * @extends {BaseAPI}\n */\nvar DefaultApi = /** @class */ (function (_super) {\n    __extends(DefaultApi, _super);\n    function DefaultApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Return this API document in JSON format\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    DefaultApi.prototype.getDocumentation = function (options) {\n        var _this = this;\n        return exports.DefaultApiFp(this.configuration).getDocumentation(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Performs a GraphQL Query\n     * @summary Perform a GraphQL Query\n     * @param {GraphQLRequest} graphQLRequest GraphQL Query Request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    DefaultApi.prototype.postGraphQL = function (graphQLRequest, options) {\n        var _this = this;\n        return exports.DefaultApiFp(this.configuration).postGraphQL(graphQLRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return DefaultApi;\n}(base_1.BaseAPI));\nexports.DefaultApi = DefaultApi;\n/**\n * IconApi - axios parameter creator\n * @export\n */\nexports.IconApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Creates an Icon from the specified parameters\n         * @summary Create an Icon\n         * @param {any} [content] The binary image contents, maximum size is 250KB\n         * @param {string} [portfolioId] The Portfolio this Icon belongs to\n         * @param {string} [portfolioItemId] The Portfolio Item this Icon belongs to\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createIcon: function (content, portfolioId, portfolioItemId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarFormParams, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/icons\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarFormParams = new FormData();\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (content !== undefined) {\n                        localVarFormParams.append('content', content);\n                    }\n                    if (portfolioId !== undefined) {\n                        localVarFormParams.append('portfolio_id', portfolioId);\n                    }\n                    if (portfolioItemId !== undefined) {\n                        localVarFormParams.append('portfolio_item_id', portfolioItemId);\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'multipart/form-data';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = localVarFormParams;\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Deletes the icon based on the icon ID passed\n         * @summary Delete an existing Icon\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyIcon: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling destroyIcon.');\n                    }\n                    localVarPath = \"/icons/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * IconApi - functional programming interface\n * @export\n */\nexports.IconApiFp = function (configuration) {\n    return {\n        /**\n         * Creates an Icon from the specified parameters\n         * @summary Create an Icon\n         * @param {any} [content] The binary image contents, maximum size is 250KB\n         * @param {string} [portfolioId] The Portfolio this Icon belongs to\n         * @param {string} [portfolioItemId] The Portfolio Item this Icon belongs to\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createIcon: function (content, portfolioId, portfolioItemId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.IconApiAxiosParamCreator(configuration).createIcon(content, portfolioId, portfolioItemId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Deletes the icon based on the icon ID passed\n         * @summary Delete an existing Icon\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyIcon: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.IconApiAxiosParamCreator(configuration).destroyIcon(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * IconApi - factory interface\n * @export\n */\nexports.IconApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Creates an Icon from the specified parameters\n         * @summary Create an Icon\n         * @param {any} [content] The binary image contents, maximum size is 250KB\n         * @param {string} [portfolioId] The Portfolio this Icon belongs to\n         * @param {string} [portfolioItemId] The Portfolio Item this Icon belongs to\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createIcon: function (content, portfolioId, portfolioItemId, options) {\n            return exports.IconApiFp(configuration).createIcon(content, portfolioId, portfolioItemId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Deletes the icon based on the icon ID passed\n         * @summary Delete an existing Icon\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyIcon: function (id, options) {\n            return exports.IconApiFp(configuration).destroyIcon(id, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * IconApi - object-oriented interface\n * @export\n * @class IconApi\n * @extends {BaseAPI}\n */\nvar IconApi = /** @class */ (function (_super) {\n    __extends(IconApi, _super);\n    function IconApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates an Icon from the specified parameters\n     * @summary Create an Icon\n     * @param {any} [content] The binary image contents, maximum size is 250KB\n     * @param {string} [portfolioId] The Portfolio this Icon belongs to\n     * @param {string} [portfolioItemId] The Portfolio Item this Icon belongs to\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof IconApi\n     */\n    IconApi.prototype.createIcon = function (content, portfolioId, portfolioItemId, options) {\n        var _this = this;\n        return exports.IconApiFp(this.configuration).createIcon(content, portfolioId, portfolioItemId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Deletes the icon based on the icon ID passed\n     * @summary Delete an existing Icon\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof IconApi\n     */\n    IconApi.prototype.destroyIcon = function (id, options) {\n        var _this = this;\n        return exports.IconApiFp(this.configuration).destroyIcon(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return IconApi;\n}(base_1.BaseAPI));\nexports.IconApi = IconApi;\n/**\n * OrderApi - axios parameter creator\n * @export\n */\nexports.OrderApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Adds an order item to an order in pending state\n         * @summary Add an order item to an order in pending state\n         * @param {string} orderId The Order ID\n         * @param {OrderItem} orderItem\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addToOrder: function (orderId, orderItem, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderId' is not null or undefined\n                    if (orderId === null || orderId === undefined) {\n                        throw new base_1.RequiredError('orderId', 'Required parameter orderId was null or undefined when calling addToOrder.');\n                    }\n                    // verify required parameter 'orderItem' is not null or undefined\n                    if (orderItem === null || orderItem === undefined) {\n                        throw new base_1.RequiredError('orderItem', 'Required parameter orderItem was null or undefined when calling addToOrder.');\n                    }\n                    localVarPath = \"/orders/{order_id}/order_items\"\n                        .replace(\"{\" + \"order_id\" + \"}\", encodeURIComponent(String(orderId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof orderItem !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(orderItem !== undefined ? orderItem : {}) : (orderItem || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns an updated order.\n         * @summary Cancels a given order\n         * @param {string} orderId The Order ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        cancelOrder: function (orderId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderId' is not null or undefined\n                    if (orderId === null || orderId === undefined) {\n                        throw new base_1.RequiredError('orderId', 'Required parameter orderId was null or undefined when calling cancelOrder.');\n                    }\n                    localVarPath = \"/orders/{order_id}/cancel\"\n                        .replace(\"{\" + \"order_id\" + \"}\", encodeURIComponent(String(orderId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Creates a new order.\n         * @summary Create a new order\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createOrder: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/orders\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Deletes the Order based on order ID passed\n         * @summary Delete an existing Order\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrder: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling destroyOrder.');\n                    }\n                    localVarPath = \"/orders/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of items associated with an order.\n         * @summary Gets a list of items in a given order\n         * @param {string} orderId The Order ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItemsFromOrder: function (orderId, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderId' is not null or undefined\n                    if (orderId === null || orderId === undefined) {\n                        throw new base_1.RequiredError('orderId', 'Required parameter orderId was null or undefined when calling listOrderItemsFromOrder.');\n                    }\n                    localVarPath = \"/orders/{order_id}/order_items\"\n                        .replace(\"{\" + \"order_id\" + \"}\", encodeURIComponent(String(orderId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of progress messages associated with an order. As the order is being processed the provider can update the progress messages.\n         * @summary Gets a list of progress messages in an order\n         * @param {string} orderId The Order ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderProgressMessages: function (orderId, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderId' is not null or undefined\n                    if (orderId === null || orderId === undefined) {\n                        throw new base_1.RequiredError('orderId', 'Required parameter orderId was null or undefined when calling listOrderProgressMessages.');\n                    }\n                    localVarPath = \"/orders/{order_id}/progress_messages\"\n                        .replace(\"{\" + \"order_id\" + \"}\", encodeURIComponent(String(orderId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of orders associated with the logged in user.\n         * @summary Get a list of orders\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrders: function (limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/orders\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Restores the order specified by the order ID.\n         * @summary Restore specific Order\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        restoreOrder: function (id, restoreKey, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling restoreOrder.');\n                    }\n                    // verify required parameter 'restoreKey' is not null or undefined\n                    if (restoreKey === null || restoreKey === undefined) {\n                        throw new base_1.RequiredError('restoreKey', 'Required parameter restoreKey was null or undefined when calling restoreOrder.');\n                    }\n                    localVarPath = \"/orders/{id}/restore\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof restoreKey !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(restoreKey !== undefined ? restoreKey : {}) : (restoreKey || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Get a specific order based on the order ID\n         * @summary Get a specific order\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrder: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showOrder.');\n                    }\n                    localVarPath = \"/orders/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets an order item associated with an order.\n         * @summary Gets an individual order item from a given order\n         * @param {string} orderId The Order ID\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderItemFromOrder: function (orderId, id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderId' is not null or undefined\n                    if (orderId === null || orderId === undefined) {\n                        throw new base_1.RequiredError('orderId', 'Required parameter orderId was null or undefined when calling showOrderItemFromOrder.');\n                    }\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showOrderItemFromOrder.');\n                    }\n                    localVarPath = \"/orders/{order_id}/order_items/{id}\"\n                        .replace(\"{\" + \"order_id\" + \"}\", encodeURIComponent(String(orderId)))\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns an updated order.\n         * @summary Submit a given order\n         * @param {string} orderId The Order ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        submitOrder: function (orderId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderId' is not null or undefined\n                    if (orderId === null || orderId === undefined) {\n                        throw new base_1.RequiredError('orderId', 'Required parameter orderId was null or undefined when calling submitOrder.');\n                    }\n                    localVarPath = \"/orders/{order_id}/submit_order\"\n                        .replace(\"{\" + \"order_id\" + \"}\", encodeURIComponent(String(orderId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * OrderApi - functional programming interface\n * @export\n */\nexports.OrderApiFp = function (configuration) {\n    return {\n        /**\n         * Adds an order item to an order in pending state\n         * @summary Add an order item to an order in pending state\n         * @param {string} orderId The Order ID\n         * @param {OrderItem} orderItem\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addToOrder: function (orderId, orderItem, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).addToOrder(orderId, orderItem, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns an updated order.\n         * @summary Cancels a given order\n         * @param {string} orderId The Order ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        cancelOrder: function (orderId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).cancelOrder(orderId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Creates a new order.\n         * @summary Create a new order\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createOrder: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).createOrder(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Deletes the Order based on order ID passed\n         * @summary Delete an existing Order\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrder: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).destroyOrder(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of items associated with an order.\n         * @summary Gets a list of items in a given order\n         * @param {string} orderId The Order ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItemsFromOrder: function (orderId, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).listOrderItemsFromOrder(orderId, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of progress messages associated with an order. As the order is being processed the provider can update the progress messages.\n         * @summary Gets a list of progress messages in an order\n         * @param {string} orderId The Order ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderProgressMessages: function (orderId, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).listOrderProgressMessages(orderId, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of orders associated with the logged in user.\n         * @summary Get a list of orders\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrders: function (limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).listOrders(limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Restores the order specified by the order ID.\n         * @summary Restore specific Order\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        restoreOrder: function (id, restoreKey, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).restoreOrder(id, restoreKey, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Get a specific order based on the order ID\n         * @summary Get a specific order\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrder: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).showOrder(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets an order item associated with an order.\n         * @summary Gets an individual order item from a given order\n         * @param {string} orderId The Order ID\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderItemFromOrder: function (orderId, id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).showOrderItemFromOrder(orderId, id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns an updated order.\n         * @summary Submit a given order\n         * @param {string} orderId The Order ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        submitOrder: function (orderId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).submitOrder(orderId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * OrderApi - factory interface\n * @export\n */\nexports.OrderApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Adds an order item to an order in pending state\n         * @summary Add an order item to an order in pending state\n         * @param {string} orderId The Order ID\n         * @param {OrderItem} orderItem\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addToOrder: function (orderId, orderItem, options) {\n            return exports.OrderApiFp(configuration).addToOrder(orderId, orderItem, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns an updated order.\n         * @summary Cancels a given order\n         * @param {string} orderId The Order ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        cancelOrder: function (orderId, options) {\n            return exports.OrderApiFp(configuration).cancelOrder(orderId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Creates a new order.\n         * @summary Create a new order\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createOrder: function (options) {\n            return exports.OrderApiFp(configuration).createOrder(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Deletes the Order based on order ID passed\n         * @summary Delete an existing Order\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrder: function (id, options) {\n            return exports.OrderApiFp(configuration).destroyOrder(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of items associated with an order.\n         * @summary Gets a list of items in a given order\n         * @param {string} orderId The Order ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItemsFromOrder: function (orderId, limit, offset, filter, sortBy, options) {\n            return exports.OrderApiFp(configuration).listOrderItemsFromOrder(orderId, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of progress messages associated with an order. As the order is being processed the provider can update the progress messages.\n         * @summary Gets a list of progress messages in an order\n         * @param {string} orderId The Order ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderProgressMessages: function (orderId, limit, offset, filter, sortBy, options) {\n            return exports.OrderApiFp(configuration).listOrderProgressMessages(orderId, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of orders associated with the logged in user.\n         * @summary Get a list of orders\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrders: function (limit, offset, filter, sortBy, options) {\n            return exports.OrderApiFp(configuration).listOrders(limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Restores the order specified by the order ID.\n         * @summary Restore specific Order\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        restoreOrder: function (id, restoreKey, options) {\n            return exports.OrderApiFp(configuration).restoreOrder(id, restoreKey, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Get a specific order based on the order ID\n         * @summary Get a specific order\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrder: function (id, options) {\n            return exports.OrderApiFp(configuration).showOrder(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets an order item associated with an order.\n         * @summary Gets an individual order item from a given order\n         * @param {string} orderId The Order ID\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderItemFromOrder: function (orderId, id, options) {\n            return exports.OrderApiFp(configuration).showOrderItemFromOrder(orderId, id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns an updated order.\n         * @summary Submit a given order\n         * @param {string} orderId The Order ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        submitOrder: function (orderId, options) {\n            return exports.OrderApiFp(configuration).submitOrder(orderId, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * OrderApi - object-oriented interface\n * @export\n * @class OrderApi\n * @extends {BaseAPI}\n */\nvar OrderApi = /** @class */ (function (_super) {\n    __extends(OrderApi, _super);\n    function OrderApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Adds an order item to an order in pending state\n     * @summary Add an order item to an order in pending state\n     * @param {string} orderId The Order ID\n     * @param {OrderItem} orderItem\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.addToOrder = function (orderId, orderItem, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).addToOrder(orderId, orderItem, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns an updated order.\n     * @summary Cancels a given order\n     * @param {string} orderId The Order ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.cancelOrder = function (orderId, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).cancelOrder(orderId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Creates a new order.\n     * @summary Create a new order\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.createOrder = function (options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).createOrder(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Deletes the Order based on order ID passed\n     * @summary Delete an existing Order\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.destroyOrder = function (id, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).destroyOrder(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of items associated with an order.\n     * @summary Gets a list of items in a given order\n     * @param {string} orderId The Order ID\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.listOrderItemsFromOrder = function (orderId, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).listOrderItemsFromOrder(orderId, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of progress messages associated with an order. As the order is being processed the provider can update the progress messages.\n     * @summary Gets a list of progress messages in an order\n     * @param {string} orderId The Order ID\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.listOrderProgressMessages = function (orderId, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).listOrderProgressMessages(orderId, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of orders associated with the logged in user.\n     * @summary Get a list of orders\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.listOrders = function (limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).listOrders(limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Restores the order specified by the order ID.\n     * @summary Restore specific Order\n     * @param {string} id ID of the resource\n     * @param {RestoreKey} restoreKey\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.restoreOrder = function (id, restoreKey, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).restoreOrder(id, restoreKey, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Get a specific order based on the order ID\n     * @summary Get a specific order\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.showOrder = function (id, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).showOrder(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets an order item associated with an order.\n     * @summary Gets an individual order item from a given order\n     * @param {string} orderId The Order ID\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.showOrderItemFromOrder = function (orderId, id, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).showOrderItemFromOrder(orderId, id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns an updated order.\n     * @summary Submit a given order\n     * @param {string} orderId The Order ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.submitOrder = function (orderId, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).submitOrder(orderId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return OrderApi;\n}(base_1.BaseAPI));\nexports.OrderApi = OrderApi;\n/**\n * OrderItemApi - axios parameter creator\n * @export\n */\nexports.OrderItemApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Deletes the order item  based on order item ID passed\n         * @summary Delete an existing OrderItem\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrderItem: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling destroyOrderItem.');\n                    }\n                    localVarPath = \"/order_items/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of approval request associated with an order item. As the item is being approved one can check the status of the approvals.\n         * @summary Gets a list of approval requests for an item\n         * @param {string} orderItemId The Order Item ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listApprovalRequests: function (orderItemId, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderItemId' is not null or undefined\n                    if (orderItemId === null || orderItemId === undefined) {\n                        throw new base_1.RequiredError('orderItemId', 'Required parameter orderItemId was null or undefined when calling listApprovalRequests.');\n                    }\n                    localVarPath = \"/order_items/{order_item_id}/approval_requests\"\n                        .replace(\"{\" + \"order_item_id\" + \"}\", encodeURIComponent(String(orderItemId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of progress messages associated with an order item. As the item is being processed the provider can update the progress messages.\n         * @summary Gets a list of progress messages in an item\n         * @param {string} orderItemId The Order Item ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItemProgressMessages: function (orderItemId, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderItemId' is not null or undefined\n                    if (orderItemId === null || orderItemId === undefined) {\n                        throw new base_1.RequiredError('orderItemId', 'Required parameter orderItemId was null or undefined when calling listOrderItemProgressMessages.');\n                    }\n                    localVarPath = \"/order_items/{order_item_id}/progress_messages\"\n                        .replace(\"{\" + \"order_item_id\" + \"}\", encodeURIComponent(String(orderItemId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of order items.\n         * @summary List Order Items\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItems: function (limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/order_items\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Restores the order item specified by the order item ID.\n         * @summary Restore specific Order item\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        restoreOrderItem: function (id, restoreKey, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling restoreOrderItem.');\n                    }\n                    // verify required parameter 'restoreKey' is not null or undefined\n                    if (restoreKey === null || restoreKey === undefined) {\n                        throw new base_1.RequiredError('restoreKey', 'Required parameter restoreKey was null or undefined when calling restoreOrderItem.');\n                    }\n                    localVarPath = \"/order_items/{id}/restore\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof restoreKey !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(restoreKey !== undefined ? restoreKey : {}) : (restoreKey || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a specific order item based on the order item ID passed\n         * @summary Gets a specific order item\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderItem: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showOrderItem.');\n                    }\n                    localVarPath = \"/order_items/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * OrderItemApi - functional programming interface\n * @export\n */\nexports.OrderItemApiFp = function (configuration) {\n    return {\n        /**\n         * Deletes the order item  based on order item ID passed\n         * @summary Delete an existing OrderItem\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrderItem: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderItemApiAxiosParamCreator(configuration).destroyOrderItem(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of approval request associated with an order item. As the item is being approved one can check the status of the approvals.\n         * @summary Gets a list of approval requests for an item\n         * @param {string} orderItemId The Order Item ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listApprovalRequests: function (orderItemId, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderItemApiAxiosParamCreator(configuration).listApprovalRequests(orderItemId, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of progress messages associated with an order item. As the item is being processed the provider can update the progress messages.\n         * @summary Gets a list of progress messages in an item\n         * @param {string} orderItemId The Order Item ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItemProgressMessages: function (orderItemId, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderItemApiAxiosParamCreator(configuration).listOrderItemProgressMessages(orderItemId, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of order items.\n         * @summary List Order Items\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItems: function (limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderItemApiAxiosParamCreator(configuration).listOrderItems(limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Restores the order item specified by the order item ID.\n         * @summary Restore specific Order item\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        restoreOrderItem: function (id, restoreKey, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderItemApiAxiosParamCreator(configuration).restoreOrderItem(id, restoreKey, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a specific order item based on the order item ID passed\n         * @summary Gets a specific order item\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderItem: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderItemApiAxiosParamCreator(configuration).showOrderItem(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * OrderItemApi - factory interface\n * @export\n */\nexports.OrderItemApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Deletes the order item  based on order item ID passed\n         * @summary Delete an existing OrderItem\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrderItem: function (id, options) {\n            return exports.OrderItemApiFp(configuration).destroyOrderItem(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of approval request associated with an order item. As the item is being approved one can check the status of the approvals.\n         * @summary Gets a list of approval requests for an item\n         * @param {string} orderItemId The Order Item ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listApprovalRequests: function (orderItemId, limit, offset, filter, sortBy, options) {\n            return exports.OrderItemApiFp(configuration).listApprovalRequests(orderItemId, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of progress messages associated with an order item. As the item is being processed the provider can update the progress messages.\n         * @summary Gets a list of progress messages in an item\n         * @param {string} orderItemId The Order Item ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItemProgressMessages: function (orderItemId, limit, offset, filter, sortBy, options) {\n            return exports.OrderItemApiFp(configuration).listOrderItemProgressMessages(orderItemId, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of order items.\n         * @summary List Order Items\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItems: function (limit, offset, filter, sortBy, options) {\n            return exports.OrderItemApiFp(configuration).listOrderItems(limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Restores the order item specified by the order item ID.\n         * @summary Restore specific Order item\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        restoreOrderItem: function (id, restoreKey, options) {\n            return exports.OrderItemApiFp(configuration).restoreOrderItem(id, restoreKey, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a specific order item based on the order item ID passed\n         * @summary Gets a specific order item\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderItem: function (id, options) {\n            return exports.OrderItemApiFp(configuration).showOrderItem(id, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * OrderItemApi - object-oriented interface\n * @export\n * @class OrderItemApi\n * @extends {BaseAPI}\n */\nvar OrderItemApi = /** @class */ (function (_super) {\n    __extends(OrderItemApi, _super);\n    function OrderItemApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Deletes the order item  based on order item ID passed\n     * @summary Delete an existing OrderItem\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderItemApi\n     */\n    OrderItemApi.prototype.destroyOrderItem = function (id, options) {\n        var _this = this;\n        return exports.OrderItemApiFp(this.configuration).destroyOrderItem(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of approval request associated with an order item. As the item is being approved one can check the status of the approvals.\n     * @summary Gets a list of approval requests for an item\n     * @param {string} orderItemId The Order Item ID\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderItemApi\n     */\n    OrderItemApi.prototype.listApprovalRequests = function (orderItemId, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.OrderItemApiFp(this.configuration).listApprovalRequests(orderItemId, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of progress messages associated with an order item. As the item is being processed the provider can update the progress messages.\n     * @summary Gets a list of progress messages in an item\n     * @param {string} orderItemId The Order Item ID\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderItemApi\n     */\n    OrderItemApi.prototype.listOrderItemProgressMessages = function (orderItemId, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.OrderItemApiFp(this.configuration).listOrderItemProgressMessages(orderItemId, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of order items.\n     * @summary List Order Items\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderItemApi\n     */\n    OrderItemApi.prototype.listOrderItems = function (limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.OrderItemApiFp(this.configuration).listOrderItems(limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Restores the order item specified by the order item ID.\n     * @summary Restore specific Order item\n     * @param {string} id ID of the resource\n     * @param {RestoreKey} restoreKey\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderItemApi\n     */\n    OrderItemApi.prototype.restoreOrderItem = function (id, restoreKey, options) {\n        var _this = this;\n        return exports.OrderItemApiFp(this.configuration).restoreOrderItem(id, restoreKey, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a specific order item based on the order item ID passed\n     * @summary Gets a specific order item\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderItemApi\n     */\n    OrderItemApi.prototype.showOrderItem = function (id, options) {\n        var _this = this;\n        return exports.OrderItemApiFp(this.configuration).showOrderItem(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return OrderItemApi;\n}(base_1.BaseAPI));\nexports.OrderItemApi = OrderItemApi;\n/**\n * OrderProcessApi - axios parameter creator\n * @export\n */\nexports.OrderProcessApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Defines the product that will be executed after ordering when using this Order Process\n         * @summary Adds an \\'after\\' product for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOrderProcessAfterItem: function (id, orderProcessPortfolioItemId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling addOrderProcessAfterItem.');\n                    }\n                    // verify required parameter 'orderProcessPortfolioItemId' is not null or undefined\n                    if (orderProcessPortfolioItemId === null || orderProcessPortfolioItemId === undefined) {\n                        throw new base_1.RequiredError('orderProcessPortfolioItemId', 'Required parameter orderProcessPortfolioItemId was null or undefined when calling addOrderProcessAfterItem.');\n                    }\n                    localVarPath = \"/order_processes/{id}/after_portfolio_item\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof orderProcessPortfolioItemId !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(orderProcessPortfolioItemId !== undefined ? orderProcessPortfolioItemId : {}) : (orderProcessPortfolioItemId || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Defines the product that will be executed before ordering when using this Order Process\n         * @summary Adds a \\'before\\' product for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOrderProcessBeforeItem: function (id, orderProcessPortfolioItemId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling addOrderProcessBeforeItem.');\n                    }\n                    // verify required parameter 'orderProcessPortfolioItemId' is not null or undefined\n                    if (orderProcessPortfolioItemId === null || orderProcessPortfolioItemId === undefined) {\n                        throw new base_1.RequiredError('orderProcessPortfolioItemId', 'Required parameter orderProcessPortfolioItemId was null or undefined when calling addOrderProcessBeforeItem.');\n                    }\n                    localVarPath = \"/order_processes/{id}/before_portfolio_item\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof orderProcessPortfolioItemId !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(orderProcessPortfolioItemId !== undefined ? orderProcessPortfolioItemId : {}) : (orderProcessPortfolioItemId || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Adds an order process.\n         * @summary Add a new order process\n         * @param {OrderProcess} orderProcess Parameters needed to add an OrderProcess\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createOrderProcess: function (orderProcess, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderProcess' is not null or undefined\n                    if (orderProcess === null || orderProcess === undefined) {\n                        throw new base_1.RequiredError('orderProcess', 'Required parameter orderProcess was null or undefined when calling createOrderProcess.');\n                    }\n                    localVarPath = \"/order_processes\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof orderProcess !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(orderProcess !== undefined ? orderProcess : {}) : (orderProcess || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Deletes the order process specified by the ID.\n         * @summary Delete an existing order process\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrderProcess: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling destroyOrderProcess.');\n                    }\n                    localVarPath = \"/order_processes/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Links a tag to an order process\n         * @summary Links a tag to an order process\n         * @param {string} id ID of the resource\n         * @param {ResourceObject} resourceObject\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        linkTagToOrderProcess: function (id, resourceObject, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling linkTagToOrderProcess.');\n                    }\n                    // verify required parameter 'resourceObject' is not null or undefined\n                    if (resourceObject === null || resourceObject === undefined) {\n                        throw new base_1.RequiredError('resourceObject', 'Required parameter resourceObject was null or undefined when calling linkTagToOrderProcess.');\n                    }\n                    localVarPath = \"/order_processes/{id}/link\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof resourceObject !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(resourceObject !== undefined ? resourceObject : {}) : (resourceObject || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of order processes. Optionally select order processes linked to a resource object whose app_name, object_type and object_id are specified by query parameters.\n         * @summary List OrderProcesses\n         * @param {string} [appName] Name of the application.\n         * @param {string} [objectId] Id of the resource object.\n         * @param {string} [objectType] Type of the resource object.\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderProcesses: function (appName, objectId, objectType, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/order_processes\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (appName !== undefined) {\n                        localVarQueryParameter['app_name'] = appName;\n                    }\n                    if (objectId !== undefined) {\n                        localVarQueryParameter['object_id'] = objectId;\n                    }\n                    if (objectType !== undefined) {\n                        localVarQueryParameter['object_type'] = objectType;\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Removes the association to the product(s) defined in the \\'before\\' and/or \\'after\\' that would be executed when using this Order Process\n         * @summary Removes the \\'before\\' and/or \\'after\\' product(s) for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessAssociationsToRemove} orderProcessAssociationsToRemove\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removeOrderProcessAssociation: function (id, orderProcessAssociationsToRemove, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling removeOrderProcessAssociation.');\n                    }\n                    // verify required parameter 'orderProcessAssociationsToRemove' is not null or undefined\n                    if (orderProcessAssociationsToRemove === null || orderProcessAssociationsToRemove === undefined) {\n                        throw new base_1.RequiredError('orderProcessAssociationsToRemove', 'Required parameter orderProcessAssociationsToRemove was null or undefined when calling removeOrderProcessAssociation.');\n                    }\n                    localVarPath = \"/order_processes/{id}/remove_association\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof orderProcessAssociationsToRemove !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(orderProcessAssociationsToRemove !== undefined ? orderProcessAssociationsToRemove : {}) : (orderProcessAssociationsToRemove || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets the order process specified by the order process ID.\n         * @summary Get a specific order process\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderProcess: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showOrderProcess.');\n                    }\n                    localVarPath = \"/order_processes/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Unlinks a tag from an order process\n         * @summary Unlinks a tag from an order process\n         * @param {string} id ID of the resource\n         * @param {ResourceObject} resourceObject\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unlinkTagFromOrderProcess: function (id, resourceObject, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling unlinkTagFromOrderProcess.');\n                    }\n                    // verify required parameter 'resourceObject' is not null or undefined\n                    if (resourceObject === null || resourceObject === undefined) {\n                        throw new base_1.RequiredError('resourceObject', 'Required parameter resourceObject was null or undefined when calling unlinkTagFromOrderProcess.');\n                    }\n                    localVarPath = \"/order_processes/{id}/unlink\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof resourceObject !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(resourceObject !== undefined ? resourceObject : {}) : (resourceObject || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns the edited order process.\n         * @summary Edit an existing order process\n         * @param {string} id ID of the resource\n         * @param {OrderProcess} orderProcess Parameters needed to update a OrderProcess\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateOrderProcess: function (id, orderProcess, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling updateOrderProcess.');\n                    }\n                    // verify required parameter 'orderProcess' is not null or undefined\n                    if (orderProcess === null || orderProcess === undefined) {\n                        throw new base_1.RequiredError('orderProcess', 'Required parameter orderProcess was null or undefined when calling updateOrderProcess.');\n                    }\n                    localVarPath = \"/order_processes/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof orderProcess !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(orderProcess !== undefined ? orderProcess : {}) : (orderProcess || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * OrderProcessApi - functional programming interface\n * @export\n */\nexports.OrderProcessApiFp = function (configuration) {\n    return {\n        /**\n         * Defines the product that will be executed after ordering when using this Order Process\n         * @summary Adds an \\'after\\' product for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOrderProcessAfterItem: function (id, orderProcessPortfolioItemId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).addOrderProcessAfterItem(id, orderProcessPortfolioItemId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Defines the product that will be executed before ordering when using this Order Process\n         * @summary Adds a \\'before\\' product for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOrderProcessBeforeItem: function (id, orderProcessPortfolioItemId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).addOrderProcessBeforeItem(id, orderProcessPortfolioItemId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Adds an order process.\n         * @summary Add a new order process\n         * @param {OrderProcess} orderProcess Parameters needed to add an OrderProcess\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createOrderProcess: function (orderProcess, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).createOrderProcess(orderProcess, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Deletes the order process specified by the ID.\n         * @summary Delete an existing order process\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrderProcess: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).destroyOrderProcess(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Links a tag to an order process\n         * @summary Links a tag to an order process\n         * @param {string} id ID of the resource\n         * @param {ResourceObject} resourceObject\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        linkTagToOrderProcess: function (id, resourceObject, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).linkTagToOrderProcess(id, resourceObject, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of order processes. Optionally select order processes linked to a resource object whose app_name, object_type and object_id are specified by query parameters.\n         * @summary List OrderProcesses\n         * @param {string} [appName] Name of the application.\n         * @param {string} [objectId] Id of the resource object.\n         * @param {string} [objectType] Type of the resource object.\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderProcesses: function (appName, objectId, objectType, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).listOrderProcesses(appName, objectId, objectType, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Removes the association to the product(s) defined in the \\'before\\' and/or \\'after\\' that would be executed when using this Order Process\n         * @summary Removes the \\'before\\' and/or \\'after\\' product(s) for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessAssociationsToRemove} orderProcessAssociationsToRemove\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removeOrderProcessAssociation: function (id, orderProcessAssociationsToRemove, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).removeOrderProcessAssociation(id, orderProcessAssociationsToRemove, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets the order process specified by the order process ID.\n         * @summary Get a specific order process\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderProcess: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).showOrderProcess(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Unlinks a tag from an order process\n         * @summary Unlinks a tag from an order process\n         * @param {string} id ID of the resource\n         * @param {ResourceObject} resourceObject\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unlinkTagFromOrderProcess: function (id, resourceObject, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).unlinkTagFromOrderProcess(id, resourceObject, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns the edited order process.\n         * @summary Edit an existing order process\n         * @param {string} id ID of the resource\n         * @param {OrderProcess} orderProcess Parameters needed to update a OrderProcess\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateOrderProcess: function (id, orderProcess, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).updateOrderProcess(id, orderProcess, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * OrderProcessApi - factory interface\n * @export\n */\nexports.OrderProcessApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Defines the product that will be executed after ordering when using this Order Process\n         * @summary Adds an \\'after\\' product for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOrderProcessAfterItem: function (id, orderProcessPortfolioItemId, options) {\n            return exports.OrderProcessApiFp(configuration).addOrderProcessAfterItem(id, orderProcessPortfolioItemId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Defines the product that will be executed before ordering when using this Order Process\n         * @summary Adds a \\'before\\' product for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOrderProcessBeforeItem: function (id, orderProcessPortfolioItemId, options) {\n            return exports.OrderProcessApiFp(configuration).addOrderProcessBeforeItem(id, orderProcessPortfolioItemId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Adds an order process.\n         * @summary Add a new order process\n         * @param {OrderProcess} orderProcess Parameters needed to add an OrderProcess\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createOrderProcess: function (orderProcess, options) {\n            return exports.OrderProcessApiFp(configuration).createOrderProcess(orderProcess, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Deletes the order process specified by the ID.\n         * @summary Delete an existing order process\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrderProcess: function (id, options) {\n            return exports.OrderProcessApiFp(configuration).destroyOrderProcess(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Links a tag to an order process\n         * @summary Links a tag to an order process\n         * @param {string} id ID of the resource\n         * @param {ResourceObject} resourceObject\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        linkTagToOrderProcess: function (id, resourceObject, options) {\n            return exports.OrderProcessApiFp(configuration).linkTagToOrderProcess(id, resourceObject, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of order processes. Optionally select order processes linked to a resource object whose app_name, object_type and object_id are specified by query parameters.\n         * @summary List OrderProcesses\n         * @param {string} [appName] Name of the application.\n         * @param {string} [objectId] Id of the resource object.\n         * @param {string} [objectType] Type of the resource object.\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderProcesses: function (appName, objectId, objectType, limit, offset, filter, sortBy, options) {\n            return exports.OrderProcessApiFp(configuration).listOrderProcesses(appName, objectId, objectType, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Removes the association to the product(s) defined in the \\'before\\' and/or \\'after\\' that would be executed when using this Order Process\n         * @summary Removes the \\'before\\' and/or \\'after\\' product(s) for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessAssociationsToRemove} orderProcessAssociationsToRemove\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removeOrderProcessAssociation: function (id, orderProcessAssociationsToRemove, options) {\n            return exports.OrderProcessApiFp(configuration).removeOrderProcessAssociation(id, orderProcessAssociationsToRemove, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets the order process specified by the order process ID.\n         * @summary Get a specific order process\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderProcess: function (id, options) {\n            return exports.OrderProcessApiFp(configuration).showOrderProcess(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Unlinks a tag from an order process\n         * @summary Unlinks a tag from an order process\n         * @param {string} id ID of the resource\n         * @param {ResourceObject} resourceObject\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unlinkTagFromOrderProcess: function (id, resourceObject, options) {\n            return exports.OrderProcessApiFp(configuration).unlinkTagFromOrderProcess(id, resourceObject, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns the edited order process.\n         * @summary Edit an existing order process\n         * @param {string} id ID of the resource\n         * @param {OrderProcess} orderProcess Parameters needed to update a OrderProcess\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateOrderProcess: function (id, orderProcess, options) {\n            return exports.OrderProcessApiFp(configuration).updateOrderProcess(id, orderProcess, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * OrderProcessApi - object-oriented interface\n * @export\n * @class OrderProcessApi\n * @extends {BaseAPI}\n */\nvar OrderProcessApi = /** @class */ (function (_super) {\n    __extends(OrderProcessApi, _super);\n    function OrderProcessApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Defines the product that will be executed after ordering when using this Order Process\n     * @summary Adds an \\'after\\' product for an Order Process\n     * @param {string} id ID of the resource\n     * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.addOrderProcessAfterItem = function (id, orderProcessPortfolioItemId, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).addOrderProcessAfterItem(id, orderProcessPortfolioItemId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Defines the product that will be executed before ordering when using this Order Process\n     * @summary Adds a \\'before\\' product for an Order Process\n     * @param {string} id ID of the resource\n     * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.addOrderProcessBeforeItem = function (id, orderProcessPortfolioItemId, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).addOrderProcessBeforeItem(id, orderProcessPortfolioItemId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Adds an order process.\n     * @summary Add a new order process\n     * @param {OrderProcess} orderProcess Parameters needed to add an OrderProcess\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.createOrderProcess = function (orderProcess, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).createOrderProcess(orderProcess, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Deletes the order process specified by the ID.\n     * @summary Delete an existing order process\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.destroyOrderProcess = function (id, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).destroyOrderProcess(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Links a tag to an order process\n     * @summary Links a tag to an order process\n     * @param {string} id ID of the resource\n     * @param {ResourceObject} resourceObject\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.linkTagToOrderProcess = function (id, resourceObject, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).linkTagToOrderProcess(id, resourceObject, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of order processes. Optionally select order processes linked to a resource object whose app_name, object_type and object_id are specified by query parameters.\n     * @summary List OrderProcesses\n     * @param {string} [appName] Name of the application.\n     * @param {string} [objectId] Id of the resource object.\n     * @param {string} [objectType] Type of the resource object.\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.listOrderProcesses = function (appName, objectId, objectType, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).listOrderProcesses(appName, objectId, objectType, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Removes the association to the product(s) defined in the \\'before\\' and/or \\'after\\' that would be executed when using this Order Process\n     * @summary Removes the \\'before\\' and/or \\'after\\' product(s) for an Order Process\n     * @param {string} id ID of the resource\n     * @param {OrderProcessAssociationsToRemove} orderProcessAssociationsToRemove\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.removeOrderProcessAssociation = function (id, orderProcessAssociationsToRemove, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).removeOrderProcessAssociation(id, orderProcessAssociationsToRemove, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets the order process specified by the order process ID.\n     * @summary Get a specific order process\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.showOrderProcess = function (id, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).showOrderProcess(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Unlinks a tag from an order process\n     * @summary Unlinks a tag from an order process\n     * @param {string} id ID of the resource\n     * @param {ResourceObject} resourceObject\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.unlinkTagFromOrderProcess = function (id, resourceObject, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).unlinkTagFromOrderProcess(id, resourceObject, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns the edited order process.\n     * @summary Edit an existing order process\n     * @param {string} id ID of the resource\n     * @param {OrderProcess} orderProcess Parameters needed to update a OrderProcess\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.updateOrderProcess = function (id, orderProcess, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).updateOrderProcess(id, orderProcess, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return OrderProcessApi;\n}(base_1.BaseAPI));\nexports.OrderProcessApi = OrderProcessApi;\n/**\n * PortfolioApi - axios parameter creator\n * @export\n */\nexports.PortfolioApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Adds a single tag to Portfolio object\n         * @summary Add Tag for Portfolio\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPortfolioTag: function (id, tag, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling addPortfolioTag.');\n                    }\n                    // verify required parameter 'tag' is not null or undefined\n                    if (tag === null || tag === undefined) {\n                        throw new base_1.RequiredError('tag', 'Required parameter tag was null or undefined when calling addPortfolioTag.');\n                    }\n                    localVarPath = \"/portfolios/{id}/tag\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof tag !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(tag !== undefined ? tag : {}) : (tag || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Adds a portfolio.\n         * @summary Add a new portfolio\n         * @param {Portfolio} portfolio Parameters needed to add a Portfolio\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPortfolio: function (portfolio, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolio' is not null or undefined\n                    if (portfolio === null || portfolio === undefined) {\n                        throw new base_1.RequiredError('portfolio', 'Required parameter portfolio was null or undefined when calling createPortfolio.');\n                    }\n                    localVarPath = \"/portfolios\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof portfolio !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(portfolio !== undefined ? portfolio : {}) : (portfolio || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Deletes the portfolio specified by the ID.\n         * @summary Delete an existing portfolio\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyPortfolio: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling destroyPortfolio.');\n                    }\n                    localVarPath = \"/portfolios/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets all portfilio items in the portfolio specified by the given ID.\n         * @summary Get all portfolio items from a specific portfolio\n         * @param {string} portfolioId The Portfolio ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        fetchPortfolioItemsWithPortfolio: function (portfolioId, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioId' is not null or undefined\n                    if (portfolioId === null || portfolioId === undefined) {\n                        throw new base_1.RequiredError('portfolioId', 'Required parameter portfolioId was null or undefined when calling fetchPortfolioItemsWithPortfolio.');\n                    }\n                    localVarPath = \"/portfolios/{portfolio_id}/portfolio_items\"\n                        .replace(\"{\" + \"portfolio_id\" + \"}\", encodeURIComponent(String(portfolioId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns an array of Tag objects\n         * @summary List Tags for Portfolio\n         * @param {string} id ID of the resource\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioTags: function (id, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling listPortfolioTags.');\n                    }\n                    localVarPath = \"/portfolios/{id}/tags\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of portfolios.\n         * @summary List portfolios\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolios: function (limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/portfolios\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Make a copy of the Portfolio.\n         * @summary Make a copy of the Portfolio\n         * @param {string} portfolioId The Portfolio ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postCopyPortfolio: function (portfolioId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioId' is not null or undefined\n                    if (portfolioId === null || portfolioId === undefined) {\n                        throw new base_1.RequiredError('portfolioId', 'Required parameter portfolioId was null or undefined when calling postCopyPortfolio.');\n                    }\n                    localVarPath = \"/portfolios/{portfolio_id}/copy\"\n                        .replace(\"{\" + \"portfolio_id\" + \"}\", encodeURIComponent(String(portfolioId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Remove Tags from Portfolio\n         * @summary Remove Tags from Portfolio\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removePortfolioTags: function (id, tag, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling removePortfolioTags.');\n                    }\n                    // verify required parameter 'tag' is not null or undefined\n                    if (tag === null || tag === undefined) {\n                        throw new base_1.RequiredError('tag', 'Required parameter tag was null or undefined when calling removePortfolioTags.');\n                    }\n                    localVarPath = \"/portfolios/{id}/untag\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof tag !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(tag !== undefined ? tag : {}) : (tag || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Fetch share information about a portfolio\n         * @summary Fetch share information about this portfolio, the response would include a collection of groups and permissions with each group\n         * @param {string} portfolioId The Portfolio ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shareInfo: function (portfolioId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioId' is not null or undefined\n                    if (portfolioId === null || portfolioId === undefined) {\n                        throw new base_1.RequiredError('portfolioId', 'Required parameter portfolioId was null or undefined when calling shareInfo.');\n                    }\n                    localVarPath = \"/portfolios/{portfolio_id}/share_info\"\n                        .replace(\"{\" + \"portfolio_id\" + \"}\", encodeURIComponent(String(portfolioId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Share a Portfolio with one or more groups with specific permissions\n         * @summary Share a portfolio with one or more groups with specific permission\n         * @param {string} portfolioId The Portfolio ID\n         * @param {SharePolicy} sharePolicy\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sharePortfolio: function (portfolioId, sharePolicy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioId' is not null or undefined\n                    if (portfolioId === null || portfolioId === undefined) {\n                        throw new base_1.RequiredError('portfolioId', 'Required parameter portfolioId was null or undefined when calling sharePortfolio.');\n                    }\n                    // verify required parameter 'sharePolicy' is not null or undefined\n                    if (sharePolicy === null || sharePolicy === undefined) {\n                        throw new base_1.RequiredError('sharePolicy', 'Required parameter sharePolicy was null or undefined when calling sharePortfolio.');\n                    }\n                    localVarPath = \"/portfolios/{portfolio_id}/share\"\n                        .replace(\"{\" + \"portfolio_id\" + \"}\", encodeURIComponent(String(portfolioId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof sharePolicy !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(sharePolicy !== undefined ? sharePolicy : {}) : (sharePolicy || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets the portfolio specified by the portfolio ID.\n         * @summary Get a specific portfolio\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolio: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showPortfolio.');\n                    }\n                    localVarPath = \"/portfolios/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Fetch the specified portfolio\\'s icon image.\n         * @summary Fetches the specified portfolio\\'s icon image\n         * @param {string} portfolioId The Portfolio ID\n         * @param {string} [cacheId] Artificial string to help avoid falsey browser cache. This can occur after changing static resources like images. The browser will return an outdated cached response. Appending different query will result in a new async call, instead of retrieving the resource from the browser cache.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioIcon: function (portfolioId, cacheId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioId' is not null or undefined\n                    if (portfolioId === null || portfolioId === undefined) {\n                        throw new base_1.RequiredError('portfolioId', 'Required parameter portfolioId was null or undefined when calling showPortfolioIcon.');\n                    }\n                    localVarPath = \"/portfolios/{portfolio_id}/icon\"\n                        .replace(\"{\" + \"portfolio_id\" + \"}\", encodeURIComponent(String(portfolioId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (cacheId !== undefined) {\n                        localVarQueryParameter['cache_id'] = cacheId;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Undeletes the portfolio specified by the portfolio ID.\n         * @summary Undelete specific portfolio\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unDeletePortfolio: function (id, restoreKey, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling unDeletePortfolio.');\n                    }\n                    // verify required parameter 'restoreKey' is not null or undefined\n                    if (restoreKey === null || restoreKey === undefined) {\n                        throw new base_1.RequiredError('restoreKey', 'Required parameter restoreKey was null or undefined when calling unDeletePortfolio.');\n                    }\n                    localVarPath = \"/portfolios/{id}/undelete\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof restoreKey !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(restoreKey !== undefined ? restoreKey : {}) : (restoreKey || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Unshare a Portfolio with one or more groups with specific permissions\n         * @summary Unshare a portfolio from one or more groups with specific permission\n         * @param {string} portfolioId The Portfolio ID\n         * @param {UnsharePolicy} unsharePolicy\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unsharePortfolio: function (portfolioId, unsharePolicy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioId' is not null or undefined\n                    if (portfolioId === null || portfolioId === undefined) {\n                        throw new base_1.RequiredError('portfolioId', 'Required parameter portfolioId was null or undefined when calling unsharePortfolio.');\n                    }\n                    // verify required parameter 'unsharePolicy' is not null or undefined\n                    if (unsharePolicy === null || unsharePolicy === undefined) {\n                        throw new base_1.RequiredError('unsharePolicy', 'Required parameter unsharePolicy was null or undefined when calling unsharePortfolio.');\n                    }\n                    localVarPath = \"/portfolios/{portfolio_id}/unshare\"\n                        .replace(\"{\" + \"portfolio_id\" + \"}\", encodeURIComponent(String(portfolioId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof unsharePolicy !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(unsharePolicy !== undefined ? unsharePolicy : {}) : (unsharePolicy || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns the edited portfolio.\n         * @summary Edit an existing portfolio\n         * @param {string} id ID of the resource\n         * @param {Portfolio} portfolio Parameters needed to update a Portfolio\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePortfolio: function (id, portfolio, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling updatePortfolio.');\n                    }\n                    // verify required parameter 'portfolio' is not null or undefined\n                    if (portfolio === null || portfolio === undefined) {\n                        throw new base_1.RequiredError('portfolio', 'Required parameter portfolio was null or undefined when calling updatePortfolio.');\n                    }\n                    localVarPath = \"/portfolios/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof portfolio !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(portfolio !== undefined ? portfolio : {}) : (portfolio || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * PortfolioApi - functional programming interface\n * @export\n */\nexports.PortfolioApiFp = function (configuration) {\n    return {\n        /**\n         * Adds a single tag to Portfolio object\n         * @summary Add Tag for Portfolio\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPortfolioTag: function (id, tag, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).addPortfolioTag(id, tag, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Adds a portfolio.\n         * @summary Add a new portfolio\n         * @param {Portfolio} portfolio Parameters needed to add a Portfolio\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPortfolio: function (portfolio, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).createPortfolio(portfolio, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Deletes the portfolio specified by the ID.\n         * @summary Delete an existing portfolio\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyPortfolio: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).destroyPortfolio(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets all portfilio items in the portfolio specified by the given ID.\n         * @summary Get all portfolio items from a specific portfolio\n         * @param {string} portfolioId The Portfolio ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        fetchPortfolioItemsWithPortfolio: function (portfolioId, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).fetchPortfolioItemsWithPortfolio(portfolioId, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns an array of Tag objects\n         * @summary List Tags for Portfolio\n         * @param {string} id ID of the resource\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioTags: function (id, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).listPortfolioTags(id, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of portfolios.\n         * @summary List portfolios\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolios: function (limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).listPortfolios(limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Make a copy of the Portfolio.\n         * @summary Make a copy of the Portfolio\n         * @param {string} portfolioId The Portfolio ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postCopyPortfolio: function (portfolioId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).postCopyPortfolio(portfolioId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Remove Tags from Portfolio\n         * @summary Remove Tags from Portfolio\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removePortfolioTags: function (id, tag, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).removePortfolioTags(id, tag, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Fetch share information about a portfolio\n         * @summary Fetch share information about this portfolio, the response would include a collection of groups and permissions with each group\n         * @param {string} portfolioId The Portfolio ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shareInfo: function (portfolioId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).shareInfo(portfolioId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Share a Portfolio with one or more groups with specific permissions\n         * @summary Share a portfolio with one or more groups with specific permission\n         * @param {string} portfolioId The Portfolio ID\n         * @param {SharePolicy} sharePolicy\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sharePortfolio: function (portfolioId, sharePolicy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).sharePortfolio(portfolioId, sharePolicy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets the portfolio specified by the portfolio ID.\n         * @summary Get a specific portfolio\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolio: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).showPortfolio(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Fetch the specified portfolio\\'s icon image.\n         * @summary Fetches the specified portfolio\\'s icon image\n         * @param {string} portfolioId The Portfolio ID\n         * @param {string} [cacheId] Artificial string to help avoid falsey browser cache. This can occur after changing static resources like images. The browser will return an outdated cached response. Appending different query will result in a new async call, instead of retrieving the resource from the browser cache.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioIcon: function (portfolioId, cacheId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).showPortfolioIcon(portfolioId, cacheId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Undeletes the portfolio specified by the portfolio ID.\n         * @summary Undelete specific portfolio\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unDeletePortfolio: function (id, restoreKey, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).unDeletePortfolio(id, restoreKey, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Unshare a Portfolio with one or more groups with specific permissions\n         * @summary Unshare a portfolio from one or more groups with specific permission\n         * @param {string} portfolioId The Portfolio ID\n         * @param {UnsharePolicy} unsharePolicy\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unsharePortfolio: function (portfolioId, unsharePolicy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).unsharePortfolio(portfolioId, unsharePolicy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns the edited portfolio.\n         * @summary Edit an existing portfolio\n         * @param {string} id ID of the resource\n         * @param {Portfolio} portfolio Parameters needed to update a Portfolio\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePortfolio: function (id, portfolio, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).updatePortfolio(id, portfolio, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * PortfolioApi - factory interface\n * @export\n */\nexports.PortfolioApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Adds a single tag to Portfolio object\n         * @summary Add Tag for Portfolio\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPortfolioTag: function (id, tag, options) {\n            return exports.PortfolioApiFp(configuration).addPortfolioTag(id, tag, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Adds a portfolio.\n         * @summary Add a new portfolio\n         * @param {Portfolio} portfolio Parameters needed to add a Portfolio\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPortfolio: function (portfolio, options) {\n            return exports.PortfolioApiFp(configuration).createPortfolio(portfolio, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Deletes the portfolio specified by the ID.\n         * @summary Delete an existing portfolio\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyPortfolio: function (id, options) {\n            return exports.PortfolioApiFp(configuration).destroyPortfolio(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets all portfilio items in the portfolio specified by the given ID.\n         * @summary Get all portfolio items from a specific portfolio\n         * @param {string} portfolioId The Portfolio ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        fetchPortfolioItemsWithPortfolio: function (portfolioId, limit, offset, filter, sortBy, options) {\n            return exports.PortfolioApiFp(configuration).fetchPortfolioItemsWithPortfolio(portfolioId, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns an array of Tag objects\n         * @summary List Tags for Portfolio\n         * @param {string} id ID of the resource\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioTags: function (id, limit, offset, filter, sortBy, options) {\n            return exports.PortfolioApiFp(configuration).listPortfolioTags(id, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of portfolios.\n         * @summary List portfolios\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolios: function (limit, offset, filter, sortBy, options) {\n            return exports.PortfolioApiFp(configuration).listPortfolios(limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Make a copy of the Portfolio.\n         * @summary Make a copy of the Portfolio\n         * @param {string} portfolioId The Portfolio ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postCopyPortfolio: function (portfolioId, options) {\n            return exports.PortfolioApiFp(configuration).postCopyPortfolio(portfolioId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Remove Tags from Portfolio\n         * @summary Remove Tags from Portfolio\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removePortfolioTags: function (id, tag, options) {\n            return exports.PortfolioApiFp(configuration).removePortfolioTags(id, tag, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Fetch share information about a portfolio\n         * @summary Fetch share information about this portfolio, the response would include a collection of groups and permissions with each group\n         * @param {string} portfolioId The Portfolio ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shareInfo: function (portfolioId, options) {\n            return exports.PortfolioApiFp(configuration).shareInfo(portfolioId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Share a Portfolio with one or more groups with specific permissions\n         * @summary Share a portfolio with one or more groups with specific permission\n         * @param {string} portfolioId The Portfolio ID\n         * @param {SharePolicy} sharePolicy\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sharePortfolio: function (portfolioId, sharePolicy, options) {\n            return exports.PortfolioApiFp(configuration).sharePortfolio(portfolioId, sharePolicy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets the portfolio specified by the portfolio ID.\n         * @summary Get a specific portfolio\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolio: function (id, options) {\n            return exports.PortfolioApiFp(configuration).showPortfolio(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Fetch the specified portfolio\\'s icon image.\n         * @summary Fetches the specified portfolio\\'s icon image\n         * @param {string} portfolioId The Portfolio ID\n         * @param {string} [cacheId] Artificial string to help avoid falsey browser cache. This can occur after changing static resources like images. The browser will return an outdated cached response. Appending different query will result in a new async call, instead of retrieving the resource from the browser cache.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioIcon: function (portfolioId, cacheId, options) {\n            return exports.PortfolioApiFp(configuration).showPortfolioIcon(portfolioId, cacheId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Undeletes the portfolio specified by the portfolio ID.\n         * @summary Undelete specific portfolio\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unDeletePortfolio: function (id, restoreKey, options) {\n            return exports.PortfolioApiFp(configuration).unDeletePortfolio(id, restoreKey, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Unshare a Portfolio with one or more groups with specific permissions\n         * @summary Unshare a portfolio from one or more groups with specific permission\n         * @param {string} portfolioId The Portfolio ID\n         * @param {UnsharePolicy} unsharePolicy\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unsharePortfolio: function (portfolioId, unsharePolicy, options) {\n            return exports.PortfolioApiFp(configuration).unsharePortfolio(portfolioId, unsharePolicy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns the edited portfolio.\n         * @summary Edit an existing portfolio\n         * @param {string} id ID of the resource\n         * @param {Portfolio} portfolio Parameters needed to update a Portfolio\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePortfolio: function (id, portfolio, options) {\n            return exports.PortfolioApiFp(configuration).updatePortfolio(id, portfolio, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * PortfolioApi - object-oriented interface\n * @export\n * @class PortfolioApi\n * @extends {BaseAPI}\n */\nvar PortfolioApi = /** @class */ (function (_super) {\n    __extends(PortfolioApi, _super);\n    function PortfolioApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Adds a single tag to Portfolio object\n     * @summary Add Tag for Portfolio\n     * @param {string} id ID of the resource\n     * @param {Array<Tag>} tag\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.addPortfolioTag = function (id, tag, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).addPortfolioTag(id, tag, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Adds a portfolio.\n     * @summary Add a new portfolio\n     * @param {Portfolio} portfolio Parameters needed to add a Portfolio\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.createPortfolio = function (portfolio, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).createPortfolio(portfolio, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Deletes the portfolio specified by the ID.\n     * @summary Delete an existing portfolio\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.destroyPortfolio = function (id, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).destroyPortfolio(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets all portfilio items in the portfolio specified by the given ID.\n     * @summary Get all portfolio items from a specific portfolio\n     * @param {string} portfolioId The Portfolio ID\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.fetchPortfolioItemsWithPortfolio = function (portfolioId, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).fetchPortfolioItemsWithPortfolio(portfolioId, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns an array of Tag objects\n     * @summary List Tags for Portfolio\n     * @param {string} id ID of the resource\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.listPortfolioTags = function (id, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).listPortfolioTags(id, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of portfolios.\n     * @summary List portfolios\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.listPortfolios = function (limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).listPortfolios(limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Make a copy of the Portfolio.\n     * @summary Make a copy of the Portfolio\n     * @param {string} portfolioId The Portfolio ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.postCopyPortfolio = function (portfolioId, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).postCopyPortfolio(portfolioId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Remove Tags from Portfolio\n     * @summary Remove Tags from Portfolio\n     * @param {string} id ID of the resource\n     * @param {Array<Tag>} tag\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.removePortfolioTags = function (id, tag, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).removePortfolioTags(id, tag, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Fetch share information about a portfolio\n     * @summary Fetch share information about this portfolio, the response would include a collection of groups and permissions with each group\n     * @param {string} portfolioId The Portfolio ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.shareInfo = function (portfolioId, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).shareInfo(portfolioId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Share a Portfolio with one or more groups with specific permissions\n     * @summary Share a portfolio with one or more groups with specific permission\n     * @param {string} portfolioId The Portfolio ID\n     * @param {SharePolicy} sharePolicy\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.sharePortfolio = function (portfolioId, sharePolicy, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).sharePortfolio(portfolioId, sharePolicy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets the portfolio specified by the portfolio ID.\n     * @summary Get a specific portfolio\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.showPortfolio = function (id, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).showPortfolio(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Fetch the specified portfolio\\'s icon image.\n     * @summary Fetches the specified portfolio\\'s icon image\n     * @param {string} portfolioId The Portfolio ID\n     * @param {string} [cacheId] Artificial string to help avoid falsey browser cache. This can occur after changing static resources like images. The browser will return an outdated cached response. Appending different query will result in a new async call, instead of retrieving the resource from the browser cache.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.showPortfolioIcon = function (portfolioId, cacheId, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).showPortfolioIcon(portfolioId, cacheId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Undeletes the portfolio specified by the portfolio ID.\n     * @summary Undelete specific portfolio\n     * @param {string} id ID of the resource\n     * @param {RestoreKey} restoreKey\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.unDeletePortfolio = function (id, restoreKey, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).unDeletePortfolio(id, restoreKey, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Unshare a Portfolio with one or more groups with specific permissions\n     * @summary Unshare a portfolio from one or more groups with specific permission\n     * @param {string} portfolioId The Portfolio ID\n     * @param {UnsharePolicy} unsharePolicy\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.unsharePortfolio = function (portfolioId, unsharePolicy, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).unsharePortfolio(portfolioId, unsharePolicy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns the edited portfolio.\n     * @summary Edit an existing portfolio\n     * @param {string} id ID of the resource\n     * @param {Portfolio} portfolio Parameters needed to update a Portfolio\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.updatePortfolio = function (id, portfolio, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).updatePortfolio(id, portfolio, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return PortfolioApi;\n}(base_1.BaseAPI));\nexports.PortfolioApi = PortfolioApi;\n/**\n * PortfolioItemApi - axios parameter creator\n * @export\n */\nexports.PortfolioItemApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Adds a single tag to a Portfolio Item object\n         * @summary Add Tag for Portfolio Item\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPortfolioItemTag: function (id, tag, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling addPortfolioItemTag.');\n                    }\n                    // verify required parameter 'tag' is not null or undefined\n                    if (tag === null || tag === undefined) {\n                        throw new base_1.RequiredError('tag', 'Required parameter tag was null or undefined when calling addPortfolioItemTag.');\n                    }\n                    localVarPath = \"/portfolio_items/{id}/tag\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof tag !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(tag !== undefined ? tag : {}) : (tag || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Adds a name and description for a portfolio item and returns the newly created portfolio item.\n         * @summary Add a new portfolio item\n         * @param {CreatePortfolioItem} createPortfolioItem\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPortfolioItem: function (createPortfolioItem, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'createPortfolioItem' is not null or undefined\n                    if (createPortfolioItem === null || createPortfolioItem === undefined) {\n                        throw new base_1.RequiredError('createPortfolioItem', 'Required parameter createPortfolioItem was null or undefined when calling createPortfolioItem.');\n                    }\n                    localVarPath = \"/portfolio_items\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof createPortfolioItem !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(createPortfolioItem !== undefined ? createPortfolioItem : {}) : (createPortfolioItem || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Deletes the portfolio item based on portfolio item ID passed\n         * @summary Delete an existing portfolio item\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyPortfolioItem: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling destroyPortfolioItem.');\n                    }\n                    localVarPath = \"/portfolio_items/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Get the next name for a the Portfolio Item prior to a copy operation\n         * @summary Get the next name for a the Portfolio Item prior to a copy operation\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {string} [destinationPortfolioId] The destination portfolio to compare names against\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPortfolioItemNextName: function (portfolioItemId, destinationPortfolioId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioItemId' is not null or undefined\n                    if (portfolioItemId === null || portfolioItemId === undefined) {\n                        throw new base_1.RequiredError('portfolioItemId', 'Required parameter portfolioItemId was null or undefined when calling getPortfolioItemNextName.');\n                    }\n                    localVarPath = \"/portfolio_items/{portfolio_item_id}/next_name\"\n                        .replace(\"{\" + \"portfolio_item_id\" + \"}\", encodeURIComponent(String(portfolioItemId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (destinationPortfolioId !== undefined) {\n                        localVarQueryParameter['destination_portfolio_id'] = destinationPortfolioId;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns an array of Tag objects\n         * @summary List Tags for Portfolio Items\n         * @param {string} id ID of the resource\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioItemTags: function (id, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling listPortfolioItemTags.');\n                    }\n                    localVarPath = \"/portfolio_items/{id}/tags\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of portfolio items.\n         * @summary List all portfolio items\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioItems: function (limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/portfolio_items\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets the provider control parameters for a portfolio item.\n         * @summary Gets the provider control parameters for this portfolio item; requires control paramaters provided when provisioning the portfolio item.\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listProviderControlParameters: function (portfolioItemId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioItemId' is not null or undefined\n                    if (portfolioItemId === null || portfolioItemId === undefined) {\n                        throw new base_1.RequiredError('portfolioItemId', 'Required parameter portfolioItemId was null or undefined when calling listProviderControlParameters.');\n                    }\n                    localVarPath = \"/portfolio_items/{portfolio_item_id}/provider_control_parameters\"\n                        .replace(\"{\" + \"portfolio_item_id\" + \"}\", encodeURIComponent(String(portfolioItemId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets all service plans for a portfolio item.\n         * @summary Gets all service plans for a specific portfolio item; requires a connection to the topology service.\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listServicePlans: function (portfolioItemId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioItemId' is not null or undefined\n                    if (portfolioItemId === null || portfolioItemId === undefined) {\n                        throw new base_1.RequiredError('portfolioItemId', 'Required parameter portfolioItemId was null or undefined when calling listServicePlans.');\n                    }\n                    localVarPath = \"/portfolio_items/{portfolio_item_id}/service_plans\"\n                        .replace(\"{\" + \"portfolio_item_id\" + \"}\", encodeURIComponent(String(portfolioItemId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Make a copy of the Portfolio Item.\n         * @summary Make a copy of the Portfolio Item\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {CopyPortfolioItem} [copyPortfolioItem]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postCopyPortfolioItem: function (portfolioItemId, copyPortfolioItem, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioItemId' is not null or undefined\n                    if (portfolioItemId === null || portfolioItemId === undefined) {\n                        throw new base_1.RequiredError('portfolioItemId', 'Required parameter portfolioItemId was null or undefined when calling postCopyPortfolioItem.');\n                    }\n                    localVarPath = \"/portfolio_items/{portfolio_item_id}/copy\"\n                        .replace(\"{\" + \"portfolio_item_id\" + \"}\", encodeURIComponent(String(portfolioItemId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof copyPortfolioItem !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(copyPortfolioItem !== undefined ? copyPortfolioItem : {}) : (copyPortfolioItem || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Remove Tags from Portfolio Item\n         * @summary Remove Tags from Portfolio Item\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removePortfolioItemTags: function (id, tag, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling removePortfolioItemTags.');\n                    }\n                    // verify required parameter 'tag' is not null or undefined\n                    if (tag === null || tag === undefined) {\n                        throw new base_1.RequiredError('tag', 'Required parameter tag was null or undefined when calling removePortfolioItemTags.');\n                    }\n                    localVarPath = \"/portfolio_items/{id}/untag\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof tag !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(tag !== undefined ? tag : {}) : (tag || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a specific portfolio item based on the portfolio item ID passed\n         * @summary Gets a specific portfolio item\n         * @param {string} id ID of the resource\n         * @param {boolean} [showDiscarded] Whether or not to display the discarded result.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioItem: function (id, showDiscarded, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showPortfolioItem.');\n                    }\n                    localVarPath = \"/portfolio_items/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (showDiscarded !== undefined) {\n                        localVarQueryParameter['show_discarded'] = showDiscarded;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Fetch the specified portfolio item\\'s icon image.\n         * @summary Fetches the specified portfolio item\\'s icon image\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioItemIcon: function (portfolioItemId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioItemId' is not null or undefined\n                    if (portfolioItemId === null || portfolioItemId === undefined) {\n                        throw new base_1.RequiredError('portfolioItemId', 'Required parameter portfolioItemId was null or undefined when calling showPortfolioItemIcon.');\n                    }\n                    localVarPath = \"/portfolio_items/{portfolio_item_id}/icon\"\n                        .replace(\"{\" + \"portfolio_item_id\" + \"}\", encodeURIComponent(String(portfolioItemId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * If a record has been discarded, this operation will undelete it so it can be requested normally.\n         * @summary Undelete a specified Portfolio Item\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unDeletePortfolioItem: function (portfolioItemId, restoreKey, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioItemId' is not null or undefined\n                    if (portfolioItemId === null || portfolioItemId === undefined) {\n                        throw new base_1.RequiredError('portfolioItemId', 'Required parameter portfolioItemId was null or undefined when calling unDeletePortfolioItem.');\n                    }\n                    // verify required parameter 'restoreKey' is not null or undefined\n                    if (restoreKey === null || restoreKey === undefined) {\n                        throw new base_1.RequiredError('restoreKey', 'Required parameter restoreKey was null or undefined when calling unDeletePortfolioItem.');\n                    }\n                    localVarPath = \"/portfolio_items/{portfolio_item_id}/undelete\"\n                        .replace(\"{\" + \"portfolio_item_id\" + \"}\", encodeURIComponent(String(portfolioItemId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof restoreKey !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(restoreKey !== undefined ? restoreKey : {}) : (restoreKey || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Edits portfolio item specified by the given ID.\n         * @summary Edit an existing portfolio item\n         * @param {string} id ID of the resource\n         * @param {PortfolioItem} portfolioItem Parameters needed to update a Portfolio Item\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePortfolioItem: function (id, portfolioItem, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling updatePortfolioItem.');\n                    }\n                    // verify required parameter 'portfolioItem' is not null or undefined\n                    if (portfolioItem === null || portfolioItem === undefined) {\n                        throw new base_1.RequiredError('portfolioItem', 'Required parameter portfolioItem was null or undefined when calling updatePortfolioItem.');\n                    }\n                    localVarPath = \"/portfolio_items/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof portfolioItem !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(portfolioItem !== undefined ? portfolioItem : {}) : (portfolioItem || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * PortfolioItemApi - functional programming interface\n * @export\n */\nexports.PortfolioItemApiFp = function (configuration) {\n    return {\n        /**\n         * Adds a single tag to a Portfolio Item object\n         * @summary Add Tag for Portfolio Item\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPortfolioItemTag: function (id, tag, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).addPortfolioItemTag(id, tag, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Adds a name and description for a portfolio item and returns the newly created portfolio item.\n         * @summary Add a new portfolio item\n         * @param {CreatePortfolioItem} createPortfolioItem\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPortfolioItem: function (createPortfolioItem, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).createPortfolioItem(createPortfolioItem, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Deletes the portfolio item based on portfolio item ID passed\n         * @summary Delete an existing portfolio item\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyPortfolioItem: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).destroyPortfolioItem(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Get the next name for a the Portfolio Item prior to a copy operation\n         * @summary Get the next name for a the Portfolio Item prior to a copy operation\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {string} [destinationPortfolioId] The destination portfolio to compare names against\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPortfolioItemNextName: function (portfolioItemId, destinationPortfolioId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).getPortfolioItemNextName(portfolioItemId, destinationPortfolioId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns an array of Tag objects\n         * @summary List Tags for Portfolio Items\n         * @param {string} id ID of the resource\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioItemTags: function (id, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).listPortfolioItemTags(id, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of portfolio items.\n         * @summary List all portfolio items\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioItems: function (limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).listPortfolioItems(limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets the provider control parameters for a portfolio item.\n         * @summary Gets the provider control parameters for this portfolio item; requires control paramaters provided when provisioning the portfolio item.\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listProviderControlParameters: function (portfolioItemId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).listProviderControlParameters(portfolioItemId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets all service plans for a portfolio item.\n         * @summary Gets all service plans for a specific portfolio item; requires a connection to the topology service.\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listServicePlans: function (portfolioItemId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).listServicePlans(portfolioItemId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Make a copy of the Portfolio Item.\n         * @summary Make a copy of the Portfolio Item\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {CopyPortfolioItem} [copyPortfolioItem]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postCopyPortfolioItem: function (portfolioItemId, copyPortfolioItem, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).postCopyPortfolioItem(portfolioItemId, copyPortfolioItem, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Remove Tags from Portfolio Item\n         * @summary Remove Tags from Portfolio Item\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removePortfolioItemTags: function (id, tag, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).removePortfolioItemTags(id, tag, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a specific portfolio item based on the portfolio item ID passed\n         * @summary Gets a specific portfolio item\n         * @param {string} id ID of the resource\n         * @param {boolean} [showDiscarded] Whether or not to display the discarded result.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioItem: function (id, showDiscarded, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).showPortfolioItem(id, showDiscarded, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Fetch the specified portfolio item\\'s icon image.\n         * @summary Fetches the specified portfolio item\\'s icon image\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioItemIcon: function (portfolioItemId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).showPortfolioItemIcon(portfolioItemId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * If a record has been discarded, this operation will undelete it so it can be requested normally.\n         * @summary Undelete a specified Portfolio Item\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unDeletePortfolioItem: function (portfolioItemId, restoreKey, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).unDeletePortfolioItem(portfolioItemId, restoreKey, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Edits portfolio item specified by the given ID.\n         * @summary Edit an existing portfolio item\n         * @param {string} id ID of the resource\n         * @param {PortfolioItem} portfolioItem Parameters needed to update a Portfolio Item\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePortfolioItem: function (id, portfolioItem, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).updatePortfolioItem(id, portfolioItem, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * PortfolioItemApi - factory interface\n * @export\n */\nexports.PortfolioItemApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Adds a single tag to a Portfolio Item object\n         * @summary Add Tag for Portfolio Item\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPortfolioItemTag: function (id, tag, options) {\n            return exports.PortfolioItemApiFp(configuration).addPortfolioItemTag(id, tag, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Adds a name and description for a portfolio item and returns the newly created portfolio item.\n         * @summary Add a new portfolio item\n         * @param {CreatePortfolioItem} createPortfolioItem\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPortfolioItem: function (createPortfolioItem, options) {\n            return exports.PortfolioItemApiFp(configuration).createPortfolioItem(createPortfolioItem, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Deletes the portfolio item based on portfolio item ID passed\n         * @summary Delete an existing portfolio item\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyPortfolioItem: function (id, options) {\n            return exports.PortfolioItemApiFp(configuration).destroyPortfolioItem(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Get the next name for a the Portfolio Item prior to a copy operation\n         * @summary Get the next name for a the Portfolio Item prior to a copy operation\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {string} [destinationPortfolioId] The destination portfolio to compare names against\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPortfolioItemNextName: function (portfolioItemId, destinationPortfolioId, options) {\n            return exports.PortfolioItemApiFp(configuration).getPortfolioItemNextName(portfolioItemId, destinationPortfolioId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns an array of Tag objects\n         * @summary List Tags for Portfolio Items\n         * @param {string} id ID of the resource\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioItemTags: function (id, limit, offset, filter, sortBy, options) {\n            return exports.PortfolioItemApiFp(configuration).listPortfolioItemTags(id, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of portfolio items.\n         * @summary List all portfolio items\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioItems: function (limit, offset, filter, sortBy, options) {\n            return exports.PortfolioItemApiFp(configuration).listPortfolioItems(limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets the provider control parameters for a portfolio item.\n         * @summary Gets the provider control parameters for this portfolio item; requires control paramaters provided when provisioning the portfolio item.\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listProviderControlParameters: function (portfolioItemId, options) {\n            return exports.PortfolioItemApiFp(configuration).listProviderControlParameters(portfolioItemId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets all service plans for a portfolio item.\n         * @summary Gets all service plans for a specific portfolio item; requires a connection to the topology service.\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listServicePlans: function (portfolioItemId, options) {\n            return exports.PortfolioItemApiFp(configuration).listServicePlans(portfolioItemId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Make a copy of the Portfolio Item.\n         * @summary Make a copy of the Portfolio Item\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {CopyPortfolioItem} [copyPortfolioItem]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postCopyPortfolioItem: function (portfolioItemId, copyPortfolioItem, options) {\n            return exports.PortfolioItemApiFp(configuration).postCopyPortfolioItem(portfolioItemId, copyPortfolioItem, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Remove Tags from Portfolio Item\n         * @summary Remove Tags from Portfolio Item\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removePortfolioItemTags: function (id, tag, options) {\n            return exports.PortfolioItemApiFp(configuration).removePortfolioItemTags(id, tag, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a specific portfolio item based on the portfolio item ID passed\n         * @summary Gets a specific portfolio item\n         * @param {string} id ID of the resource\n         * @param {boolean} [showDiscarded] Whether or not to display the discarded result.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioItem: function (id, showDiscarded, options) {\n            return exports.PortfolioItemApiFp(configuration).showPortfolioItem(id, showDiscarded, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Fetch the specified portfolio item\\'s icon image.\n         * @summary Fetches the specified portfolio item\\'s icon image\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioItemIcon: function (portfolioItemId, options) {\n            return exports.PortfolioItemApiFp(configuration).showPortfolioItemIcon(portfolioItemId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * If a record has been discarded, this operation will undelete it so it can be requested normally.\n         * @summary Undelete a specified Portfolio Item\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unDeletePortfolioItem: function (portfolioItemId, restoreKey, options) {\n            return exports.PortfolioItemApiFp(configuration).unDeletePortfolioItem(portfolioItemId, restoreKey, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Edits portfolio item specified by the given ID.\n         * @summary Edit an existing portfolio item\n         * @param {string} id ID of the resource\n         * @param {PortfolioItem} portfolioItem Parameters needed to update a Portfolio Item\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePortfolioItem: function (id, portfolioItem, options) {\n            return exports.PortfolioItemApiFp(configuration).updatePortfolioItem(id, portfolioItem, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * PortfolioItemApi - object-oriented interface\n * @export\n * @class PortfolioItemApi\n * @extends {BaseAPI}\n */\nvar PortfolioItemApi = /** @class */ (function (_super) {\n    __extends(PortfolioItemApi, _super);\n    function PortfolioItemApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Adds a single tag to a Portfolio Item object\n     * @summary Add Tag for Portfolio Item\n     * @param {string} id ID of the resource\n     * @param {Array<Tag>} tag\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.addPortfolioItemTag = function (id, tag, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).addPortfolioItemTag(id, tag, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Adds a name and description for a portfolio item and returns the newly created portfolio item.\n     * @summary Add a new portfolio item\n     * @param {CreatePortfolioItem} createPortfolioItem\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.createPortfolioItem = function (createPortfolioItem, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).createPortfolioItem(createPortfolioItem, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Deletes the portfolio item based on portfolio item ID passed\n     * @summary Delete an existing portfolio item\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.destroyPortfolioItem = function (id, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).destroyPortfolioItem(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Get the next name for a the Portfolio Item prior to a copy operation\n     * @summary Get the next name for a the Portfolio Item prior to a copy operation\n     * @param {string} portfolioItemId The Portfolio Item ID\n     * @param {string} [destinationPortfolioId] The destination portfolio to compare names against\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.getPortfolioItemNextName = function (portfolioItemId, destinationPortfolioId, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).getPortfolioItemNextName(portfolioItemId, destinationPortfolioId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns an array of Tag objects\n     * @summary List Tags for Portfolio Items\n     * @param {string} id ID of the resource\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.listPortfolioItemTags = function (id, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).listPortfolioItemTags(id, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of portfolio items.\n     * @summary List all portfolio items\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.listPortfolioItems = function (limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).listPortfolioItems(limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets the provider control parameters for a portfolio item.\n     * @summary Gets the provider control parameters for this portfolio item; requires control paramaters provided when provisioning the portfolio item.\n     * @param {string} portfolioItemId The Portfolio Item ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.listProviderControlParameters = function (portfolioItemId, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).listProviderControlParameters(portfolioItemId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets all service plans for a portfolio item.\n     * @summary Gets all service plans for a specific portfolio item; requires a connection to the topology service.\n     * @param {string} portfolioItemId The Portfolio Item ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.listServicePlans = function (portfolioItemId, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).listServicePlans(portfolioItemId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Make a copy of the Portfolio Item.\n     * @summary Make a copy of the Portfolio Item\n     * @param {string} portfolioItemId The Portfolio Item ID\n     * @param {CopyPortfolioItem} [copyPortfolioItem]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.postCopyPortfolioItem = function (portfolioItemId, copyPortfolioItem, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).postCopyPortfolioItem(portfolioItemId, copyPortfolioItem, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Remove Tags from Portfolio Item\n     * @summary Remove Tags from Portfolio Item\n     * @param {string} id ID of the resource\n     * @param {Array<Tag>} tag\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.removePortfolioItemTags = function (id, tag, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).removePortfolioItemTags(id, tag, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a specific portfolio item based on the portfolio item ID passed\n     * @summary Gets a specific portfolio item\n     * @param {string} id ID of the resource\n     * @param {boolean} [showDiscarded] Whether or not to display the discarded result.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.showPortfolioItem = function (id, showDiscarded, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).showPortfolioItem(id, showDiscarded, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Fetch the specified portfolio item\\'s icon image.\n     * @summary Fetches the specified portfolio item\\'s icon image\n     * @param {string} portfolioItemId The Portfolio Item ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.showPortfolioItemIcon = function (portfolioItemId, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).showPortfolioItemIcon(portfolioItemId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * If a record has been discarded, this operation will undelete it so it can be requested normally.\n     * @summary Undelete a specified Portfolio Item\n     * @param {string} portfolioItemId The Portfolio Item ID\n     * @param {RestoreKey} restoreKey\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.unDeletePortfolioItem = function (portfolioItemId, restoreKey, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).unDeletePortfolioItem(portfolioItemId, restoreKey, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Edits portfolio item specified by the given ID.\n     * @summary Edit an existing portfolio item\n     * @param {string} id ID of the resource\n     * @param {PortfolioItem} portfolioItem Parameters needed to update a Portfolio Item\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.updatePortfolioItem = function (id, portfolioItem, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).updatePortfolioItem(id, portfolioItem, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return PortfolioItemApi;\n}(base_1.BaseAPI));\nexports.PortfolioItemApi = PortfolioItemApi;\n/**\n * ServicePlansApi - axios parameter creator\n * @export\n */\nexports.ServicePlansApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Returns the new Service Plan\n         * @summary Create Service Plan\n         * @param {ImportServicePlan} [importServicePlan]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createServicePlan: function (importServicePlan, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/service_plans\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof importServicePlan !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(importServicePlan !== undefined ? importServicePlan : {}) : (importServicePlan || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Patch Service Plan Modified Schema\n         * @param {string} id ID of the resource\n         * @param {PatchModifiedServicePlan} [patchModifiedServicePlan]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchServicePlanModified: function (id, patchModifiedServicePlan, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling patchServicePlanModified.');\n                    }\n                    localVarPath = \"/service_plans/{id}/modified\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof patchModifiedServicePlan !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(patchModifiedServicePlan !== undefined ? patchModifiedServicePlan : {}) : (patchModifiedServicePlan || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Resets the Service Plan\\'s Modified schema and returns the new one if it has been reset\n         * @summary Reset Service Plan Modified schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        resetServicePlanModified: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling resetServicePlanModified.');\n                    }\n                    localVarPath = \"/service_plans/{id}/reset\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns the specified Service Plan\n         * @summary Show Service Plan\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlan: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showServicePlan.');\n                    }\n                    localVarPath = \"/service_plans/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns the specified Service Plan\\'s base schema\n         * @summary Show Service Plan Base Schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlanBase: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showServicePlanBase.');\n                    }\n                    localVarPath = \"/service_plans/{id}/base\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns the specified Service Plan\\'s modified schema\n         * @summary Show Service Plan modified Schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlanModified: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showServicePlanModified.');\n                    }\n                    localVarPath = \"/service_plans/{id}/modified\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * ServicePlansApi - functional programming interface\n * @export\n */\nexports.ServicePlansApiFp = function (configuration) {\n    return {\n        /**\n         * Returns the new Service Plan\n         * @summary Create Service Plan\n         * @param {ImportServicePlan} [importServicePlan]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createServicePlan: function (importServicePlan, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.ServicePlansApiAxiosParamCreator(configuration).createServicePlan(importServicePlan, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Patch Service Plan Modified Schema\n         * @param {string} id ID of the resource\n         * @param {PatchModifiedServicePlan} [patchModifiedServicePlan]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchServicePlanModified: function (id, patchModifiedServicePlan, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.ServicePlansApiAxiosParamCreator(configuration).patchServicePlanModified(id, patchModifiedServicePlan, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Resets the Service Plan\\'s Modified schema and returns the new one if it has been reset\n         * @summary Reset Service Plan Modified schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        resetServicePlanModified: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.ServicePlansApiAxiosParamCreator(configuration).resetServicePlanModified(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns the specified Service Plan\n         * @summary Show Service Plan\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlan: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.ServicePlansApiAxiosParamCreator(configuration).showServicePlan(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns the specified Service Plan\\'s base schema\n         * @summary Show Service Plan Base Schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlanBase: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.ServicePlansApiAxiosParamCreator(configuration).showServicePlanBase(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns the specified Service Plan\\'s modified schema\n         * @summary Show Service Plan modified Schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlanModified: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.ServicePlansApiAxiosParamCreator(configuration).showServicePlanModified(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * ServicePlansApi - factory interface\n * @export\n */\nexports.ServicePlansApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Returns the new Service Plan\n         * @summary Create Service Plan\n         * @param {ImportServicePlan} [importServicePlan]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createServicePlan: function (importServicePlan, options) {\n            return exports.ServicePlansApiFp(configuration).createServicePlan(importServicePlan, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Patch Service Plan Modified Schema\n         * @param {string} id ID of the resource\n         * @param {PatchModifiedServicePlan} [patchModifiedServicePlan]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchServicePlanModified: function (id, patchModifiedServicePlan, options) {\n            return exports.ServicePlansApiFp(configuration).patchServicePlanModified(id, patchModifiedServicePlan, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Resets the Service Plan\\'s Modified schema and returns the new one if it has been reset\n         * @summary Reset Service Plan Modified schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        resetServicePlanModified: function (id, options) {\n            return exports.ServicePlansApiFp(configuration).resetServicePlanModified(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns the specified Service Plan\n         * @summary Show Service Plan\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlan: function (id, options) {\n            return exports.ServicePlansApiFp(configuration).showServicePlan(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns the specified Service Plan\\'s base schema\n         * @summary Show Service Plan Base Schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlanBase: function (id, options) {\n            return exports.ServicePlansApiFp(configuration).showServicePlanBase(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns the specified Service Plan\\'s modified schema\n         * @summary Show Service Plan modified Schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlanModified: function (id, options) {\n            return exports.ServicePlansApiFp(configuration).showServicePlanModified(id, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * ServicePlansApi - object-oriented interface\n * @export\n * @class ServicePlansApi\n * @extends {BaseAPI}\n */\nvar ServicePlansApi = /** @class */ (function (_super) {\n    __extends(ServicePlansApi, _super);\n    function ServicePlansApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Returns the new Service Plan\n     * @summary Create Service Plan\n     * @param {ImportServicePlan} [importServicePlan]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ServicePlansApi\n     */\n    ServicePlansApi.prototype.createServicePlan = function (importServicePlan, options) {\n        var _this = this;\n        return exports.ServicePlansApiFp(this.configuration).createServicePlan(importServicePlan, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Patch Service Plan Modified Schema\n     * @param {string} id ID of the resource\n     * @param {PatchModifiedServicePlan} [patchModifiedServicePlan]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ServicePlansApi\n     */\n    ServicePlansApi.prototype.patchServicePlanModified = function (id, patchModifiedServicePlan, options) {\n        var _this = this;\n        return exports.ServicePlansApiFp(this.configuration).patchServicePlanModified(id, patchModifiedServicePlan, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Resets the Service Plan\\'s Modified schema and returns the new one if it has been reset\n     * @summary Reset Service Plan Modified schema\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ServicePlansApi\n     */\n    ServicePlansApi.prototype.resetServicePlanModified = function (id, options) {\n        var _this = this;\n        return exports.ServicePlansApiFp(this.configuration).resetServicePlanModified(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns the specified Service Plan\n     * @summary Show Service Plan\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ServicePlansApi\n     */\n    ServicePlansApi.prototype.showServicePlan = function (id, options) {\n        var _this = this;\n        return exports.ServicePlansApiFp(this.configuration).showServicePlan(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns the specified Service Plan\\'s base schema\n     * @summary Show Service Plan Base Schema\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ServicePlansApi\n     */\n    ServicePlansApi.prototype.showServicePlanBase = function (id, options) {\n        var _this = this;\n        return exports.ServicePlansApiFp(this.configuration).showServicePlanBase(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns the specified Service Plan\\'s modified schema\n     * @summary Show Service Plan modified Schema\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ServicePlansApi\n     */\n    ServicePlansApi.prototype.showServicePlanModified = function (id, options) {\n        var _this = this;\n        return exports.ServicePlansApiFp(this.configuration).showServicePlanModified(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return ServicePlansApi;\n}(base_1.BaseAPI));\nexports.ServicePlansApi = ServicePlansApi;\n/**\n * SettingsApi - axios parameter creator\n * @export\n */\nexports.SettingsApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Create Tenant Setting\n         * @summary Create Tenant Setting\n         * @param {Setting} setting Json encoded key/value pair to create a new setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createSetting: function (setting, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'setting' is not null or undefined\n                    if (setting === null || setting === undefined) {\n                        throw new base_1.RequiredError('setting', 'Required parameter setting was null or undefined when calling createSetting.');\n                    }\n                    localVarPath = \"/settings\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof setting !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(setting !== undefined ? setting : {}) : (setting || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Delete a Tenant Setting\n         * @summary Delete a Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroySetting: function (name, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'name' is not null or undefined\n                    if (name === null || name === undefined) {\n                        throw new base_1.RequiredError('name', 'Required parameter name was null or undefined when calling destroySetting.');\n                    }\n                    localVarPath = \"/settings/{name}\"\n                        .replace(\"{\" + \"name\" + \"}\", encodeURIComponent(String(name)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * List Tenant Settings\n         * @summary List Tenant Settings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listSettings: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/settings\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Get a specific Tenant Setting\n         * @summary Get a specific Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showSetting: function (name, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'name' is not null or undefined\n                    if (name === null || name === undefined) {\n                        throw new base_1.RequiredError('name', 'Required parameter name was null or undefined when calling showSetting.');\n                    }\n                    localVarPath = \"/settings/{name}\"\n                        .replace(\"{\" + \"name\" + \"}\", encodeURIComponent(String(name)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Update a Tenant Setting\n         * @summary Update a Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateSetting: function (name, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'name' is not null or undefined\n                    if (name === null || name === undefined) {\n                        throw new base_1.RequiredError('name', 'Required parameter name was null or undefined when calling updateSetting.');\n                    }\n                    localVarPath = \"/settings/{name}\"\n                        .replace(\"{\" + \"name\" + \"}\", encodeURIComponent(String(name)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * SettingsApi - functional programming interface\n * @export\n */\nexports.SettingsApiFp = function (configuration) {\n    return {\n        /**\n         * Create Tenant Setting\n         * @summary Create Tenant Setting\n         * @param {Setting} setting Json encoded key/value pair to create a new setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createSetting: function (setting, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.SettingsApiAxiosParamCreator(configuration).createSetting(setting, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Delete a Tenant Setting\n         * @summary Delete a Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroySetting: function (name, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.SettingsApiAxiosParamCreator(configuration).destroySetting(name, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * List Tenant Settings\n         * @summary List Tenant Settings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listSettings: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.SettingsApiAxiosParamCreator(configuration).listSettings(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Get a specific Tenant Setting\n         * @summary Get a specific Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showSetting: function (name, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.SettingsApiAxiosParamCreator(configuration).showSetting(name, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Update a Tenant Setting\n         * @summary Update a Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateSetting: function (name, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.SettingsApiAxiosParamCreator(configuration).updateSetting(name, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * SettingsApi - factory interface\n * @export\n */\nexports.SettingsApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Create Tenant Setting\n         * @summary Create Tenant Setting\n         * @param {Setting} setting Json encoded key/value pair to create a new setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createSetting: function (setting, options) {\n            return exports.SettingsApiFp(configuration).createSetting(setting, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Delete a Tenant Setting\n         * @summary Delete a Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroySetting: function (name, options) {\n            return exports.SettingsApiFp(configuration).destroySetting(name, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * List Tenant Settings\n         * @summary List Tenant Settings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listSettings: function (options) {\n            return exports.SettingsApiFp(configuration).listSettings(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Get a specific Tenant Setting\n         * @summary Get a specific Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showSetting: function (name, options) {\n            return exports.SettingsApiFp(configuration).showSetting(name, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Update a Tenant Setting\n         * @summary Update a Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateSetting: function (name, options) {\n            return exports.SettingsApiFp(configuration).updateSetting(name, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * SettingsApi - object-oriented interface\n * @export\n * @class SettingsApi\n * @extends {BaseAPI}\n */\nvar SettingsApi = /** @class */ (function (_super) {\n    __extends(SettingsApi, _super);\n    function SettingsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Create Tenant Setting\n     * @summary Create Tenant Setting\n     * @param {Setting} setting Json encoded key/value pair to create a new setting\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SettingsApi\n     */\n    SettingsApi.prototype.createSetting = function (setting, options) {\n        var _this = this;\n        return exports.SettingsApiFp(this.configuration).createSetting(setting, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Delete a Tenant Setting\n     * @summary Delete a Tenant Setting\n     * @param {string} name name of the setting\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SettingsApi\n     */\n    SettingsApi.prototype.destroySetting = function (name, options) {\n        var _this = this;\n        return exports.SettingsApiFp(this.configuration).destroySetting(name, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * List Tenant Settings\n     * @summary List Tenant Settings\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SettingsApi\n     */\n    SettingsApi.prototype.listSettings = function (options) {\n        var _this = this;\n        return exports.SettingsApiFp(this.configuration).listSettings(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Get a specific Tenant Setting\n     * @summary Get a specific Tenant Setting\n     * @param {string} name name of the setting\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SettingsApi\n     */\n    SettingsApi.prototype.showSetting = function (name, options) {\n        var _this = this;\n        return exports.SettingsApiFp(this.configuration).showSetting(name, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Update a Tenant Setting\n     * @summary Update a Tenant Setting\n     * @param {string} name name of the setting\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SettingsApi\n     */\n    SettingsApi.prototype.updateSetting = function (name, options) {\n        var _this = this;\n        return exports.SettingsApiFp(this.configuration).updateSetting(name, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return SettingsApi;\n}(base_1.BaseAPI));\nexports.SettingsApi = SettingsApi;\n/**\n * TagsApi - axios parameter creator\n * @export\n */\nexports.TagsApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * List Tags\n         * @summary List Tags\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTags: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/tags\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * TagsApi - functional programming interface\n * @export\n */\nexports.TagsApiFp = function (configuration) {\n    return {\n        /**\n         * List Tags\n         * @summary List Tags\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTags: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.TagsApiAxiosParamCreator(configuration).listTags(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * TagsApi - factory interface\n * @export\n */\nexports.TagsApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * List Tags\n         * @summary List Tags\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTags: function (options) {\n            return exports.TagsApiFp(configuration).listTags(options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * TagsApi - object-oriented interface\n * @export\n * @class TagsApi\n * @extends {BaseAPI}\n */\nvar TagsApi = /** @class */ (function (_super) {\n    __extends(TagsApi, _super);\n    function TagsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * List Tags\n     * @summary List Tags\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TagsApi\n     */\n    TagsApi.prototype.listTags = function (options) {\n        var _this = this;\n        return exports.TagsApiFp(this.configuration).listTags(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return TagsApi;\n}(base_1.BaseAPI));\nexports.TagsApi = TagsApi;\n/**\n * TenantApi - axios parameter creator\n * @export\n */\nexports.TenantApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Get a list of tenants.\n         * @summary List Tenants\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTenants: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/tenants\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets the tenant specified by the tenant id.\n         * @summary Get a specific Tenant\n         * @param {string} tenantId ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showTenant: function (tenantId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'tenantId' is not null or undefined\n                    if (tenantId === null || tenantId === undefined) {\n                        throw new base_1.RequiredError('tenantId', 'Required parameter tenantId was null or undefined when calling showTenant.');\n                    }\n                    localVarPath = \"/tenants/{tenant_id}\"\n                        .replace(\"{\" + \"tenant_id\" + \"}\", encodeURIComponent(String(tenantId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Run a task to seed the Tenant Groups required for an org admin to onboard additional users.\n         * @summary Seed Tenant Groups\n         * @param {string} tenantId ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        tenantSeed: function (tenantId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'tenantId' is not null or undefined\n                    if (tenantId === null || tenantId === undefined) {\n                        throw new base_1.RequiredError('tenantId', 'Required parameter tenantId was null or undefined when calling tenantSeed.');\n                    }\n                    localVarPath = \"/tenants/{tenant_id}/seed\"\n                        .replace(\"{\" + \"tenant_id\" + \"}\", encodeURIComponent(String(tenantId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * TenantApi - functional programming interface\n * @export\n */\nexports.TenantApiFp = function (configuration) {\n    return {\n        /**\n         * Get a list of tenants.\n         * @summary List Tenants\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTenants: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.TenantApiAxiosParamCreator(configuration).listTenants(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets the tenant specified by the tenant id.\n         * @summary Get a specific Tenant\n         * @param {string} tenantId ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showTenant: function (tenantId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.TenantApiAxiosParamCreator(configuration).showTenant(tenantId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Run a task to seed the Tenant Groups required for an org admin to onboard additional users.\n         * @summary Seed Tenant Groups\n         * @param {string} tenantId ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        tenantSeed: function (tenantId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.TenantApiAxiosParamCreator(configuration).tenantSeed(tenantId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * TenantApi - factory interface\n * @export\n */\nexports.TenantApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Get a list of tenants.\n         * @summary List Tenants\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTenants: function (options) {\n            return exports.TenantApiFp(configuration).listTenants(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets the tenant specified by the tenant id.\n         * @summary Get a specific Tenant\n         * @param {string} tenantId ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showTenant: function (tenantId, options) {\n            return exports.TenantApiFp(configuration).showTenant(tenantId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Run a task to seed the Tenant Groups required for an org admin to onboard additional users.\n         * @summary Seed Tenant Groups\n         * @param {string} tenantId ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        tenantSeed: function (tenantId, options) {\n            return exports.TenantApiFp(configuration).tenantSeed(tenantId, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * TenantApi - object-oriented interface\n * @export\n * @class TenantApi\n * @extends {BaseAPI}\n */\nvar TenantApi = /** @class */ (function (_super) {\n    __extends(TenantApi, _super);\n    function TenantApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Get a list of tenants.\n     * @summary List Tenants\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TenantApi\n     */\n    TenantApi.prototype.listTenants = function (options) {\n        var _this = this;\n        return exports.TenantApiFp(this.configuration).listTenants(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets the tenant specified by the tenant id.\n     * @summary Get a specific Tenant\n     * @param {string} tenantId ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TenantApi\n     */\n    TenantApi.prototype.showTenant = function (tenantId, options) {\n        var _this = this;\n        return exports.TenantApiFp(this.configuration).showTenant(tenantId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Run a task to seed the Tenant Groups required for an org admin to onboard additional users.\n     * @summary Seed Tenant Groups\n     * @param {string} tenantId ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TenantApi\n     */\n    TenantApi.prototype.tenantSeed = function (tenantId, options) {\n        var _this = this;\n        return exports.TenantApiFp(this.configuration).tenantSeed(tenantId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return TenantApi;\n}(base_1.BaseAPI));\nexports.TenantApi = TenantApi;\n"],"sourceRoot":""}