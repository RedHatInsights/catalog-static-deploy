{"version":3,"sources":["webpack:///./node_modules/intl-messageformat-parser/lib/types.js","webpack:///./node_modules/intl-messageformat-parser/lib/parser.js","webpack:///./node_modules/intl-messageformat-parser/lib/normalize.js","webpack:///./node_modules/intl-messageformat-parser/lib/index.js","webpack:///./node_modules/intl-messageformat/lib/formatters.js","webpack:///./node_modules/intl-messageformat/lib/core.js","webpack:///./node_modules/intl-messageformat/lib/index.js","webpack:///./node_modules/invariant/browser.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./node_modules/lodash/some.js","webpack:///./node_modules/lodash/get.js","webpack:///./node_modules/mini-create-react-context/dist/esm/index.js","webpack:///./node_modules/intl-locales-supported/lib/index.js","webpack:///./node_modules/intl-format-cache/lib/index.js","webpack:///./node_modules/lower-case/lower-case.js","webpack:///./node_modules/history/esm/history.js","webpack:///./node_modules/lodash/_baseGet.js","webpack:///./node_modules/lodash/_castPath.js","webpack:///./node_modules/lodash/_isKey.js","webpack:///./node_modules/lodash/isSymbol.js","webpack:///./node_modules/lodash/_stringToPath.js","webpack:///./node_modules/lodash/_memoizeCapped.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/_toKey.js","webpack:///./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js"],"names":["TYPE","isLiteralElement","el","type","literal","isArgumentElement","argument","isNumberElement","number","isDateElement","date","isTimeElement","time","isSelectElement","select","isPluralElement","plural","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","SyntaxError","_super","message","expected","found","location","_this","name","Error","captureStackTrace","buildMessage","hex","ch","charCodeAt","toString","toUpperCase","literalEscape","replace","classEscape","describeExpectation","expectation","text","escapedParts","parts","map","part","isArray","inverted","description","expected1","j","descriptions","sort","slice","join","describeExpected","found1","pegParse","input","options","undefined","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c2","peg$otherExpectation","peg$c4","peg$literalExpectation","peg$c6","peg$c8","peg$c9","peg$c10","peg$classExpectation","peg$c11","peg$c12","peg$c14","peg$c16","peg$c20","peg$c22","style","peg$c24","peg$c26","peg$c27","value","insertLocation","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c38","peg$c40","peg$c42","peg$c44","peg$c46","peg$c49","peg$c52","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c64","peg$c67","peg$c69","peg$c71","peg$c72","peg$c74","peg$c75","peg$c76","peg$c77","peg$c79","peg$c81","peg$c82","peg$c83","peg$c84","peg$c86","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","peg$computeLocation","error","location1","peg$buildSimpleError","text1","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","offset","end","peg$fail","push","peg$buildStructuredError","peg$parsemessage","s0","s1","peg$parsemessageElement","peg$parsemessageText","messageText","peg$parseliteralElement","s3","s5","peg$parse_","peg$parseargNameOrNumber","peg$parseargumentElement","s7","s9","s10","s11","s12","substr","s2","peg$parsenumberSkeletonToken","tokens","peg$parsenumberSkeleton","peg$parsenumberArgStyle","peg$parsenumberFormatElement","peg$parsedateTimeSkeletonLiteral","peg$parsedateTimeSkeletonPattern","pattern","peg$parsedateTimeSkeleton","peg$parsedateOrTimeArgStyle","peg$parsedateOrTimeFormatElement","peg$parsesimpleFormatElement","s13","s14","s15","peg$parsenumber","peg$parsepluralOption","pluralType","reduce","all","_a","id","optionLocation","peg$c47","peg$parsepluralElement","peg$parseselectOption","peg$c50","peg$parseselectElement","peg$parsedoubleApostrophes","peg$parsequotedString","peg$parseunquotedString","peg$parsenumberSkeletonId","s4","peg$parsepatternWhiteSpace","test","charAt","peg$parsenumberSkeletonTokenOption","stem","peg$c17","s6","peg$parseargName","peg$parsepluralRuleSelectValue","peg$parsepatternSyntax","negative","num","peg$parseargNumber","parseInt","captureLocation","__spreadArrays","il","r","k","a","jl","PLURAL_HASHTAG_REGEX","parse","opts","els","normalizeHashtagInPlural","forEach","keys","opt","matchingLiteralElIndex","literalEl","el_1","newValue","newEls","splice","domParser","ESCAPE_HASH_REGEX","PLURAL_HASH","FormatError","msg","variableId","formatToParts","locales","formatters","formats","values","currentPluralValue","originalMessage","getNumberFormat","format","result","_i","els_1","value_1","varName","String","getDateTimeFormat","other","RangeError","Intl","PluralRules","rule","getPluralRules","lastPart","TOKEN_REGEX","counter","restoreRichPlaceholderMessage","objectParts","split","filter","Boolean","c","SIMPLE_XML_REGEX","TEMPLATE_ID","Date","now","VOID_ELEMENTS","formatHTMLMessage","formattedMessage","DOMParser","content","parseFromString","getElementById","tagsToFormat","getElementsByTagName","caseSensitiveTags","tagName","toLowerCase","childNodes","child","concat","formatHTMLElement","outerHTML","textContent","isVoidElement","indexOf","formatFnOrValue","chunks","mergeConfigs","defaultConfig","configs","c1","c2","IntlMessageFormat","overrideFormats","cache","defaultLocale","formatterCache","dateTime","pluralRules","formatToString","ast","resolvedOptions","locale","NumberFormat","supportedLocalesOf","getAst","__parse","TypeError","DateTimeFormat","currency","percent","short","month","day","year","medium","long","full","weekday","hour","minute","second","timeZoneName","module","exports","condition","e","f","args","argIndex","framesToPop","array","predicate","index","baseGet","object","path","defaultValue","createEventEmitter","handlers","on","handler","off","h","get","set","changedBits","createContext","calculateChangedBits","_Provider$childContex","_Consumer$contextType","contextProp","Provider","_Component","emitter","props","_proto","getChildContext","_ref","componentWillReceiveProps","nextProps","oldValue","x","y","render","children","childContextTypes","isRequired","Consumer","_Component2","_this2","state","getValue","onUpdate","observedBits","setState","_proto2","componentDidMount","context","componentWillUnmount","contextTypes","areIntlLocalesSupported","constructorsToCheck","intlConstructors","every","intlConstructor","getCacheId","inputs","JSON","stringify","obj","FormatConstructor","cacheId","bind","LANGUAGES","tr","regexp","az","lt","str","lang","m","addLeadingSlash","stripLeadingSlash","stripBasename","prefix","hasBasename","stripTrailingSlash","createPath","pathname","search","hash","createLocation","key","currentLocation","hashIndex","searchIndex","parsePath","decodeURI","URIError","locationsAreEqual","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","action","getUserConfirmation","callback","appendListener","fn","isActive","listener","item","notifyListeners","_len","_key","canUseDOM","window","document","createElement","getConfirmation","confirm","getHistoryState","history","createBrowserHistory","ua","globalHistory","canUseHistory","navigator","userAgent","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_window$location","createKey","Math","random","transitionManager","nextState","handlePopState","event","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","ok","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","revertPop","initialLocation","createHref","listenerCount","checkDOMListeners","addEventListener","removeEventListener","isBlocked","href","pushState","prevIndex","nextKeys","replaceState","goBack","goForward","block","unblock","listen","unlisten","HashPathCoders","hashbang","encodePath","decodePath","noslash","slash","stripHash","url","getHashPath","replaceHashPath","createHashHistory","_props$hashType","hashType","_HashPathCoders$hashT","ignorePath","encodedPath","prevLocation","allPaths","lastIndexOf","baseTag","querySelector","getAttribute","pushHashPath","nextPaths","clamp","lowerBound","upperBound","min","max","createMemoryHistory","_props$initialEntries","initialEntries","_props$initialIndex","initialIndex","entries","entry","nextIndex","nextEntries","canGo","castPath","toKey","isKey","stringToPath","isSymbol","reIsDeepProp","reIsPlainProp","memoizeCapped","rePropName","reEscapeChar","string","match","quote","subString","ReactIs","REACT_STATICS","contextType","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","defineProperty","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","descriptor"],"mappings":"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","file":"js/lib~App~1f20a385.a1f6f372fb020434b912.js","sourcesContent":["export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n})(TYPE || (TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isNumberSkeleton(el) {\n    return el.type === 0 /* number */;\n}\nexport function isDateTimeSkeleton(el) {\n    return el.type === 1 /* dateTime */;\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value,\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style,\n    };\n}\n","// tslint:disable:only-arrow-functions\n// tslint:disable:object-literal-shorthand\n// tslint:disable:trailing-comma\n// tslint:disable:object-literal-sort-keys\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:max-line-length\n// tslint:disable:no-consecutive-blank-lines\n// tslint:disable:align\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Generated by PEG.js v. 0.10.0 (ts-pegjs plugin v. 0.2.6 )\n//\n// https://pegjs.org/   https://github.com/metadevpro/ts-pegjs\nimport { TYPE, } from './types';\nvar SyntaxError = /** @class */ (function (_super) {\n    __extends(SyntaxError, _super);\n    function SyntaxError(message, expected, found, location) {\n        var _this = _super.call(this) || this;\n        _this.message = message;\n        _this.expected = expected;\n        _this.found = found;\n        _this.location = location;\n        _this.name = \"SyntaxError\";\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(_this, SyntaxError);\n        }\n        return _this;\n    }\n    SyntaxError.buildMessage = function (expected, found) {\n        function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        }\n        function literalEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\"/g, \"\\\\\\\"\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function classEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\]/g, \"\\\\]\")\n                .replace(/\\^/g, \"\\\\^\")\n                .replace(/-/g, \"\\\\-\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function describeExpectation(expectation) {\n            switch (expectation.type) {\n                case \"literal\":\n                    return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n                case \"class\":\n                    var escapedParts = expectation.parts.map(function (part) {\n                        return Array.isArray(part)\n                            ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n                            : classEscape(part);\n                    });\n                    return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n                case \"any\":\n                    return \"any character\";\n                case \"end\":\n                    return \"end of input\";\n                case \"other\":\n                    return expectation.description;\n            }\n        }\n        function describeExpected(expected1) {\n            var descriptions = expected1.map(describeExpectation);\n            var i;\n            var j;\n            descriptions.sort();\n            if (descriptions.length > 0) {\n                for (i = 1, j = 1; i < descriptions.length; i++) {\n                    if (descriptions[i - 1] !== descriptions[i]) {\n                        descriptions[j] = descriptions[i];\n                        j++;\n                    }\n                }\n                descriptions.length = j;\n            }\n            switch (descriptions.length) {\n                case 1:\n                    return descriptions[0];\n                case 2:\n                    return descriptions[0] + \" or \" + descriptions[1];\n                default:\n                    return descriptions.slice(0, -1).join(\", \")\n                        + \", or \"\n                        + descriptions[descriptions.length - 1];\n            }\n        }\n        function describeFound(found1) {\n            return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n        }\n        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n    };\n    return SyntaxError;\n}(Error));\nexport { SyntaxError };\nfunction peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$startRuleFunctions = { start: peg$parsestart };\n    var peg$startRuleFunction = peg$parsestart;\n    var peg$c0 = function (parts) {\n        return parts.join('');\n    };\n    var peg$c1 = function (messageText) {\n        return __assign({ type: TYPE.literal, value: messageText }, insertLocation());\n    };\n    var peg$c2 = peg$otherExpectation(\"argumentElement\");\n    var peg$c3 = \"{\";\n    var peg$c4 = peg$literalExpectation(\"{\", false);\n    var peg$c5 = \"}\";\n    var peg$c6 = peg$literalExpectation(\"}\", false);\n    var peg$c7 = function (value) {\n        return __assign({ type: TYPE.argument, value: value }, insertLocation());\n    };\n    var peg$c8 = peg$otherExpectation(\"numberSkeletonId\");\n    var peg$c9 = /^['\\/{}]/;\n    var peg$c10 = peg$classExpectation([\"'\", \"/\", \"{\", \"}\"], false, false);\n    var peg$c11 = peg$anyExpectation();\n    var peg$c12 = peg$otherExpectation(\"numberSkeletonTokenOption\");\n    var peg$c13 = \"/\";\n    var peg$c14 = peg$literalExpectation(\"/\", false);\n    var peg$c15 = function (option) { return option; };\n    var peg$c16 = peg$otherExpectation(\"numberSkeletonToken\");\n    var peg$c17 = function (stem, options) {\n        return { stem: stem, options: options };\n    };\n    var peg$c18 = function (tokens) {\n        return __assign({ type: 0 /* number */, tokens: tokens }, insertLocation());\n    };\n    var peg$c19 = \"::\";\n    var peg$c20 = peg$literalExpectation(\"::\", false);\n    var peg$c21 = function (skeleton) { return skeleton; };\n    var peg$c22 = function (style) { return style.replace(/\\s*$/, ''); };\n    var peg$c23 = \",\";\n    var peg$c24 = peg$literalExpectation(\",\", false);\n    var peg$c25 = \"number\";\n    var peg$c26 = peg$literalExpectation(\"number\", false);\n    var peg$c27 = function (value, type, style) {\n        return __assign({ type: type === 'number' ? TYPE.number : type === 'date' ? TYPE.date : TYPE.time, style: style && style[2], value: value }, insertLocation());\n    };\n    var peg$c28 = \"'\";\n    var peg$c29 = peg$literalExpectation(\"'\", false);\n    var peg$c30 = /^[^']/;\n    var peg$c31 = peg$classExpectation([\"'\"], true, false);\n    var peg$c32 = /^[^a-zA-Z'{}]/;\n    var peg$c33 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"'\", \"{\", \"}\"], true, false);\n    var peg$c34 = /^[a-zA-Z]/;\n    var peg$c35 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n    var peg$c36 = function (pattern) {\n        return __assign({ type: 1 /* dateTime */, pattern: pattern }, insertLocation());\n    };\n    var peg$c37 = \"date\";\n    var peg$c38 = peg$literalExpectation(\"date\", false);\n    var peg$c39 = \"time\";\n    var peg$c40 = peg$literalExpectation(\"time\", false);\n    var peg$c41 = \"plural\";\n    var peg$c42 = peg$literalExpectation(\"plural\", false);\n    var peg$c43 = \"selectordinal\";\n    var peg$c44 = peg$literalExpectation(\"selectordinal\", false);\n    var peg$c45 = \"offset:\";\n    var peg$c46 = peg$literalExpectation(\"offset:\", false);\n    var peg$c47 = function (value, pluralType, offset, options) {\n        return __assign({ type: TYPE.plural, pluralType: pluralType === 'plural' ? 'cardinal' : 'ordinal', value: value, offset: offset ? offset[2] : 0, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in plural element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c48 = \"select\";\n    var peg$c49 = peg$literalExpectation(\"select\", false);\n    var peg$c50 = function (value, options) {\n        return __assign({ type: TYPE.select, value: value, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in select element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c51 = \"=\";\n    var peg$c52 = peg$literalExpectation(\"=\", false);\n    var peg$c53 = function (id, value) {\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c54 = function (id, value) {\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c55 = peg$otherExpectation(\"whitespace pattern\");\n    var peg$c56 = /^[\\t-\\r \\x85\\u200E\\u200F\\u2028\\u2029]/;\n    var peg$c57 = peg$classExpectation([[\"\\t\", \"\\r\"], \" \", \"\\x85\", \"\\u200E\", \"\\u200F\", \"\\u2028\", \"\\u2029\"], false, false);\n    var peg$c58 = peg$otherExpectation(\"syntax pattern\");\n    var peg$c59 = /^[!-\\/:-@[-\\^`{-~\\xA1-\\xA7\\xA9\\xAB\\xAC\\xAE\\xB0\\xB1\\xB6\\xBB\\xBF\\xD7\\xF7\\u2010-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u245F\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3020\\u3030\\uFD3E\\uFD3F\\uFE45\\uFE46]/;\n    var peg$c60 = peg$classExpectation([[\"!\", \"/\"], [\":\", \"@\"], [\"[\", \"^\"], \"`\", [\"{\", \"~\"], [\"\\xA1\", \"\\xA7\"], \"\\xA9\", \"\\xAB\", \"\\xAC\", \"\\xAE\", \"\\xB0\", \"\\xB1\", \"\\xB6\", \"\\xBB\", \"\\xBF\", \"\\xD7\", \"\\xF7\", [\"\\u2010\", \"\\u2027\"], [\"\\u2030\", \"\\u203E\"], [\"\\u2041\", \"\\u2053\"], [\"\\u2055\", \"\\u205E\"], [\"\\u2190\", \"\\u245F\"], [\"\\u2500\", \"\\u2775\"], [\"\\u2794\", \"\\u2BFF\"], [\"\\u2E00\", \"\\u2E7F\"], [\"\\u3001\", \"\\u3003\"], [\"\\u3008\", \"\\u3020\"], \"\\u3030\", \"\\uFD3E\", \"\\uFD3F\", \"\\uFE45\", \"\\uFE46\"], false, false);\n    var peg$c61 = peg$otherExpectation(\"optional whitespace\");\n    var peg$c62 = peg$otherExpectation(\"number\");\n    var peg$c63 = \"-\";\n    var peg$c64 = peg$literalExpectation(\"-\", false);\n    var peg$c65 = function (negative, num) {\n        return num\n            ? negative\n                ? -num\n                : num\n            : 0;\n    };\n    var peg$c66 = peg$otherExpectation(\"apostrophe\");\n    var peg$c67 = peg$otherExpectation(\"double apostrophes\");\n    var peg$c68 = \"''\";\n    var peg$c69 = peg$literalExpectation(\"''\", false);\n    var peg$c70 = function () { return \"'\"; };\n    var peg$c71 = /^[{}]/;\n    var peg$c72 = peg$classExpectation([\"{\", \"}\"], false, false);\n    var peg$c73 = function (escapedChar, quotedChars) {\n        return escapedChar + quotedChars.replace(\"''\", \"'\");\n    };\n    var peg$c74 = /^[^{}]/;\n    var peg$c75 = peg$classExpectation([\"{\", \"}\"], true, false);\n    var peg$c76 = peg$otherExpectation(\"argNameOrNumber\");\n    var peg$c77 = peg$otherExpectation(\"argNumber\");\n    var peg$c78 = \"0\";\n    var peg$c79 = peg$literalExpectation(\"0\", false);\n    var peg$c80 = function () { return 0; };\n    var peg$c81 = /^[1-9]/;\n    var peg$c82 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n    var peg$c83 = /^[0-9]/;\n    var peg$c84 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$c85 = function (digits) {\n        return parseInt(digits.join(''), 10);\n    };\n    var peg$c86 = peg$otherExpectation(\"argName\");\n    var peg$currPos = 0;\n    var peg$savedPos = 0;\n    var peg$posDetailsCache = [{ line: 1, column: 1 }];\n    var peg$maxFailPos = 0;\n    var peg$maxFailExpected = [];\n    var peg$silentFails = 0;\n    var peg$result;\n    if (options.startRule !== undefined) {\n        if (!(options.startRule in peg$startRuleFunctions)) {\n            throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n        }\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function text() {\n        return input.substring(peg$savedPos, peg$currPos);\n    }\n    function location() {\n        return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n    function expected(description, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location1);\n    }\n    function error(message, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildSimpleError(message, location1);\n    }\n    function peg$literalExpectation(text1, ignoreCase) {\n        return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n        return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n    function peg$anyExpectation() {\n        return { type: \"any\" };\n    }\n    function peg$endExpectation() {\n        return { type: \"end\" };\n    }\n    function peg$otherExpectation(description) {\n        return { type: \"other\", description: description };\n    }\n    function peg$computePosDetails(pos) {\n        var details = peg$posDetailsCache[pos];\n        var p;\n        if (details) {\n            return details;\n        }\n        else {\n            p = pos - 1;\n            while (!peg$posDetailsCache[p]) {\n                p--;\n            }\n            details = peg$posDetailsCache[p];\n            details = {\n                line: details.line,\n                column: details.column\n            };\n            while (p < pos) {\n                if (input.charCodeAt(p) === 10) {\n                    details.line++;\n                    details.column = 1;\n                }\n                else {\n                    details.column++;\n                }\n                p++;\n            }\n            peg$posDetailsCache[pos] = details;\n            return details;\n        }\n    }\n    function peg$computeLocation(startPos, endPos) {\n        var startPosDetails = peg$computePosDetails(startPos);\n        var endPosDetails = peg$computePosDetails(endPos);\n        return {\n            start: {\n                offset: startPos,\n                line: startPosDetails.line,\n                column: startPosDetails.column\n            },\n            end: {\n                offset: endPos,\n                line: endPosDetails.line,\n                column: endPosDetails.column\n            }\n        };\n    }\n    function peg$fail(expected1) {\n        if (peg$currPos < peg$maxFailPos) {\n            return;\n        }\n        if (peg$currPos > peg$maxFailPos) {\n            peg$maxFailPos = peg$currPos;\n            peg$maxFailExpected = [];\n        }\n        peg$maxFailExpected.push(expected1);\n    }\n    function peg$buildSimpleError(message, location1) {\n        return new SyntaxError(message, [], \"\", location1);\n    }\n    function peg$buildStructuredError(expected1, found, location1) {\n        return new SyntaxError(SyntaxError.buildMessage(expected1, found), expected1, found, location1);\n    }\n    function peg$parsestart() {\n        var s0;\n        s0 = peg$parsemessage();\n        return s0;\n    }\n    function peg$parsemessage() {\n        var s0, s1;\n        s0 = [];\n        s1 = peg$parsemessageElement();\n        while (s1 !== peg$FAILED) {\n            s0.push(s1);\n            s1 = peg$parsemessageElement();\n        }\n        return s0;\n    }\n    function peg$parsemessageElement() {\n        var s0;\n        s0 = peg$parseliteralElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargumentElement();\n            if (s0 === peg$FAILED) {\n                s0 = peg$parsesimpleFormatElement();\n                if (s0 === peg$FAILED) {\n                    s0 = peg$parsepluralElement();\n                    if (s0 === peg$FAILED) {\n                        s0 = peg$parseselectElement();\n                    }\n                }\n            }\n        }\n        return s0;\n    }\n    function peg$parsemessageText() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsedoubleApostrophes();\n        if (s2 === peg$FAILED) {\n            s2 = peg$parsequotedString();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parseunquotedString();\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsedoubleApostrophes();\n                if (s2 === peg$FAILED) {\n                    s2 = peg$parsequotedString();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parseunquotedString();\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c0(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseliteralElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsemessageText();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c1(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseargumentElement() {\n        var s0, s1, s2, s3, s4, s5;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                            s5 = peg$c5;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c6);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c7(s3);\n                            s0 = s1;\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c2);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonId() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsepatternWhiteSpace();\n        if (s4 === peg$FAILED) {\n            if (peg$c9.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c10);\n                }\n            }\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c11);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsepatternWhiteSpace();\n                if (s4 === peg$FAILED) {\n                    if (peg$c9.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c10);\n                        }\n                    }\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c11);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c8);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonTokenOption() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 47) {\n            s1 = peg$c13;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c14);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c15(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c12);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonToken() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$parsenumberSkeletonTokenOption();\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    s4 = peg$parsenumberSkeletonTokenOption();\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c17(s2, s3);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c16);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeleton() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsenumberSkeletonToken();\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsenumberSkeletonToken();\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c18(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsenumberArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c21(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsemessageText();\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c22(s1);\n            }\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsenumberFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c25) {\n                                    s7 = peg$c25;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c26);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsenumberArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c5;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c6);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c27(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonLiteral() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c28;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c29);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsedoubleApostrophes();\n            if (s3 === peg$FAILED) {\n                if (peg$c30.test(input.charAt(peg$currPos))) {\n                    s3 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c31);\n                    }\n                }\n            }\n            if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parsedoubleApostrophes();\n                    if (s3 === peg$FAILED) {\n                        if (peg$c30.test(input.charAt(peg$currPos))) {\n                            s3 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c31);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 39) {\n                    s3 = peg$c28;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c29);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s1 = [s1, s2, s3];\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = [];\n            s1 = peg$parsedoubleApostrophes();\n            if (s1 === peg$FAILED) {\n                if (peg$c32.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c33);\n                    }\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                while (s1 !== peg$FAILED) {\n                    s0.push(s1);\n                    s1 = peg$parsedoubleApostrophes();\n                    if (s1 === peg$FAILED) {\n                        if (peg$c32.test(input.charAt(peg$currPos))) {\n                            s1 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c33);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonPattern() {\n        var s0, s1;\n        s0 = [];\n        if (peg$c34.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c35);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            while (s1 !== peg$FAILED) {\n                s0.push(s1);\n                if (peg$c34.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c35);\n                    }\n                }\n            }\n        }\n        else {\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeleton() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$parsedateTimeSkeletonLiteral();\n        if (s3 === peg$FAILED) {\n            s3 = peg$parsedateTimeSkeletonPattern();\n        }\n        if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$parsedateTimeSkeletonLiteral();\n                if (s3 === peg$FAILED) {\n                    s3 = peg$parsedateTimeSkeletonPattern();\n                }\n            }\n        }\n        else {\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            s1 = input.substring(s1, peg$currPos);\n        }\n        else {\n            s1 = s2;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c36(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsedateOrTimeArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsedateTimeSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c21(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsemessageText();\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c22(s1);\n            }\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsedateOrTimeFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 4) === peg$c37) {\n                                    s7 = peg$c37;\n                                    peg$currPos += 4;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c38);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 4) === peg$c39) {\n                                        s7 = peg$c39;\n                                        peg$currPos += 4;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c40);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsedateOrTimeArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c5;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c6);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c27(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsesimpleFormatElement() {\n        var s0;\n        s0 = peg$parsenumberFormatElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parsedateOrTimeFormatElement();\n        }\n        return s0;\n    }\n    function peg$parsepluralElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c41) {\n                                    s7 = peg$c41;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c42);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 13) === peg$c43) {\n                                        s7 = peg$c43;\n                                        peg$currPos += 13;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c44);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = peg$currPos;\n                                                if (input.substr(peg$currPos, 7) === peg$c45) {\n                                                    s12 = peg$c45;\n                                                    peg$currPos += 7;\n                                                }\n                                                else {\n                                                    s12 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c46);\n                                                    }\n                                                }\n                                                if (s12 !== peg$FAILED) {\n                                                    s13 = peg$parse_();\n                                                    if (s13 !== peg$FAILED) {\n                                                        s14 = peg$parsenumber();\n                                                        if (s14 !== peg$FAILED) {\n                                                            s12 = [s12, s13, s14];\n                                                            s11 = s12;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s11;\n                                                            s11 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s11;\n                                                        s11 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s11;\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 === peg$FAILED) {\n                                                    s11 = null;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        s13 = [];\n                                                        s14 = peg$parsepluralOption();\n                                                        if (s14 !== peg$FAILED) {\n                                                            while (s14 !== peg$FAILED) {\n                                                                s13.push(s14);\n                                                                s14 = peg$parsepluralOption();\n                                                            }\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            s14 = peg$parse_();\n                                                            if (s14 !== peg$FAILED) {\n                                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                                    s15 = peg$c5;\n                                                                    peg$currPos++;\n                                                                }\n                                                                else {\n                                                                    s15 = peg$FAILED;\n                                                                    if (peg$silentFails === 0) {\n                                                                        peg$fail(peg$c6);\n                                                                    }\n                                                                }\n                                                                if (s15 !== peg$FAILED) {\n                                                                    peg$savedPos = s0;\n                                                                    s1 = peg$c47(s3, s7, s11, s13);\n                                                                    s0 = s1;\n                                                                }\n                                                                else {\n                                                                    peg$currPos = s0;\n                                                                    s0 = peg$FAILED;\n                                                                }\n                                                            }\n                                                            else {\n                                                                peg$currPos = s0;\n                                                                s0 = peg$FAILED;\n                                                            }\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseselectElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c48) {\n                                    s7 = peg$c48;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c49);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = [];\n                                                s12 = peg$parseselectOption();\n                                                if (s12 !== peg$FAILED) {\n                                                    while (s12 !== peg$FAILED) {\n                                                        s11.push(s12);\n                                                        s12 = peg$parseselectOption();\n                                                    }\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        if (input.charCodeAt(peg$currPos) === 125) {\n                                                            s13 = peg$c5;\n                                                            peg$currPos++;\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                            if (peg$silentFails === 0) {\n                                                                peg$fail(peg$c6);\n                                                            }\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            peg$savedPos = s0;\n                                                            s1 = peg$c50(s3, s11);\n                                                            s0 = s1;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralRuleSelectValue() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c51;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c52);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsenumber();\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargName();\n        }\n        return s0;\n    }\n    function peg$parseselectOption() {\n        var s0, s1, s2, s3, s4, s5, s6;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargName();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c3;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c4);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s5 = peg$parsemessage();\n                        if (s5 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 125) {\n                                s6 = peg$c5;\n                                peg$currPos++;\n                            }\n                            else {\n                                s6 = peg$FAILED;\n                                if (peg$silentFails === 0) {\n                                    peg$fail(peg$c6);\n                                }\n                            }\n                            if (s6 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c53(s2, s5);\n                                s0 = s1;\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralOption() {\n        var s0, s1, s2, s3, s4, s5, s6;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsepluralRuleSelectValue();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c3;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c4);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s5 = peg$parsemessage();\n                        if (s5 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 125) {\n                                s6 = peg$c5;\n                                peg$currPos++;\n                            }\n                            else {\n                                s6 = peg$FAILED;\n                                if (peg$silentFails === 0) {\n                                    peg$fail(peg$c6);\n                                }\n                            }\n                            if (s6 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c54(s2, s5);\n                                s0 = s1;\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepatternWhiteSpace() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c56.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c57);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c55);\n            }\n        }\n        return s0;\n    }\n    function peg$parsepatternSyntax() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c59.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c60);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c58);\n            }\n        }\n        return s0;\n    }\n    function peg$parse_() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsepatternWhiteSpace();\n        while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parsepatternWhiteSpace();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c61);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumber() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s1 = peg$c63;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c64);\n            }\n        }\n        if (s1 === peg$FAILED) {\n            s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargNumber();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c65(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c62);\n            }\n        }\n        return s0;\n    }\n    function peg$parseapostrophe() {\n        var s0, s1;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s0 = peg$c28;\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c29);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c66);\n            }\n        }\n        return s0;\n    }\n    function peg$parsedoubleApostrophes() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c68) {\n            s1 = peg$c68;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c69);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c70();\n        }\n        s0 = s1;\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c67);\n            }\n        }\n        return s0;\n    }\n    function peg$parsequotedString() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c28;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c29);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            if (peg$c71.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c72);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = peg$currPos;\n                s4 = [];\n                if (input.substr(peg$currPos, 2) === peg$c68) {\n                    s5 = peg$c68;\n                    peg$currPos += 2;\n                }\n                else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c69);\n                    }\n                }\n                if (s5 === peg$FAILED) {\n                    if (peg$c30.test(input.charAt(peg$currPos))) {\n                        s5 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c31);\n                        }\n                    }\n                }\n                while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    if (input.substr(peg$currPos, 2) === peg$c68) {\n                        s5 = peg$c68;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c69);\n                        }\n                    }\n                    if (s5 === peg$FAILED) {\n                        if (peg$c30.test(input.charAt(peg$currPos))) {\n                            s5 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c31);\n                            }\n                        }\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = input.substring(s3, peg$currPos);\n                }\n                else {\n                    s3 = s4;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                        s4 = peg$c28;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c29);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c73(s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseunquotedString() {\n        var s0, s1;\n        s0 = peg$currPos;\n        if (peg$c74.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c75);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseargNameOrNumber() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parseargName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c76);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargNumber() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 48) {\n            s1 = peg$c78;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c79);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c80();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$currPos;\n            if (peg$c81.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c82);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                if (peg$c83.test(input.charAt(peg$currPos))) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c84);\n                    }\n                }\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    if (peg$c83.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c84);\n                        }\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s2 = [s2, s3];\n                    s1 = s2;\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c85(s1);\n            }\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c77);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsepatternWhiteSpace();\n        if (s4 === peg$FAILED) {\n            s4 = peg$parsepatternSyntax();\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c11);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsepatternWhiteSpace();\n                if (s4 === peg$FAILED) {\n                    s4 = peg$parsepatternSyntax();\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c11);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c86);\n            }\n        }\n        return s0;\n    }\n    function insertLocation() {\n        return options && options.captureLocation ? {\n            location: location()\n        } : {};\n    }\n    peg$result = peg$startRuleFunction();\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n        return peg$result;\n    }\n    else {\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n            peg$fail(peg$endExpectation());\n        }\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length\n            ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n            : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n}\nexport var pegParse = peg$parse;\n","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { isPluralElement, isLiteralElement, isSelectElement, } from './types';\nimport { pegParse } from './parser';\nvar PLURAL_HASHTAG_REGEX = /(^|[^\\\\])#/g;\n/**\n * Whether to convert `#` in plural rule options\n * to `{var, number}`\n * @param el AST Element\n * @param pluralStack current plural stack\n */\nexport function normalizeHashtagInPlural(els) {\n    els.forEach(function (el) {\n        // If we're encountering a plural el\n        if (!isPluralElement(el) && !isSelectElement(el)) {\n            return;\n        }\n        // Go down the options and search for # in any literal element\n        Object.keys(el.options).forEach(function (id) {\n            var _a;\n            var opt = el.options[id];\n            // If we got a match, we have to split this\n            // and inject a NumberElement in the middle\n            var matchingLiteralElIndex = -1;\n            var literalEl = undefined;\n            for (var i = 0; i < opt.value.length; i++) {\n                var el_1 = opt.value[i];\n                if (isLiteralElement(el_1) && PLURAL_HASHTAG_REGEX.test(el_1.value)) {\n                    matchingLiteralElIndex = i;\n                    literalEl = el_1;\n                    break;\n                }\n            }\n            if (literalEl) {\n                var newValue = literalEl.value.replace(PLURAL_HASHTAG_REGEX, \"$1{\" + el.value + \", number}\");\n                var newEls = pegParse(newValue);\n                (_a = opt.value).splice.apply(_a, __spreadArrays([matchingLiteralElIndex, 1], newEls));\n            }\n            normalizeHashtagInPlural(opt.value);\n        });\n    });\n}\n","import { pegParse } from './parser';\nimport { normalizeHashtagInPlural } from './normalize';\nexport * from './types';\nexport * from './parser';\nexport function parse(input, opts) {\n    var els = pegParse(input, opts);\n    if (!opts || opts.normalizeHashtagInPlural !== false) {\n        normalizeHashtagInPlural(els);\n    }\n    return els;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { isArgumentElement, isLiteralElement, isDateElement, isTimeElement, isNumberElement, isSelectElement, isPluralElement, } from 'intl-messageformat-parser';\nvar ESCAPE_HASH_REGEX = /\\\\#/g;\nvar PLURAL_HASH = /(^|[^\\\\])#/g;\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, variableId) {\n        var _this = _super.call(this, msg) || this;\n        _this.variableId = variableId;\n        return _this;\n    }\n    return FormatError;\n}(Error));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== 0 /* literal */ ||\n            part.type !== 0 /* literal */) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        var value = els[0].value;\n        if (typeof currentPluralValue === 'number') {\n            value = value.replace(PLURAL_HASH, '$1' + formatters.getNumberFormat(locales).format(currentPluralValue));\n        }\n        return [\n            {\n                type: 0 /* literal */,\n                value: value.replace(ESCAPE_HASH_REGEX, '#'),\n            },\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            var value_1 = el.value;\n            if (typeof currentPluralValue === 'number') {\n                value_1 = value_1.replace(PLURAL_HASH, '$1' + formatters.getNumberFormat(locales).format(currentPluralValue));\n            }\n            result.push({\n                type: 0 /* literal */,\n                value: value_1.replace(ESCAPE_HASH_REGEX, '#'),\n            });\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new FormatError(\"The intl string context variable \\\"\" + varName + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\");\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                value =\n                    typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : '';\n            }\n            result.push({\n                type: 1 /* argument */,\n                value: value,\n            });\n            continue;\n        }\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string' ? formats.date[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string' ? formats.time[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string' ? formats.number[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\" + value];\n            if (!opt) {\n                if (!Intl.PluralRules) {\n                    throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\");\n                }\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\nexport function formatToString(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, undefined, originalMessage);\n    // Hot path for straight simple msg translations\n    if (parts.length === 1) {\n        return parts[0].value;\n    }\n    return parts.reduce(function (all, part) { return (all += part.value); }, '');\n}\n// Singleton\nvar domParser;\nvar TOKEN_DELIMITER = '@@';\nvar TOKEN_REGEX = /@@(\\d+_\\d+)@@/g;\nvar counter = 0;\nfunction generateId() {\n    return Date.now() + \"_\" + ++counter;\n}\nfunction restoreRichPlaceholderMessage(text, objectParts) {\n    return text\n        .split(TOKEN_REGEX)\n        .filter(Boolean)\n        .map(function (c) { return (objectParts[c] != null ? objectParts[c] : c); })\n        .reduce(function (all, c) {\n        if (!all.length) {\n            all.push(c);\n        }\n        else if (typeof c === 'string' &&\n            typeof all[all.length - 1] === 'string') {\n            all[all.length - 1] += c;\n        }\n        else {\n            all.push(c);\n        }\n        return all;\n    }, []);\n}\n/**\n * Not exhaustive, just for sanity check\n */\nvar SIMPLE_XML_REGEX = /(<([0-9a-zA-Z-_]*?)>(.*?)<\\/([0-9a-zA-Z-_]*?)>)|(<[0-9a-zA-Z-_]*?\\/>)/;\nvar TEMPLATE_ID = Date.now() + '@@';\nvar VOID_ELEMENTS = [\n    'area',\n    'base',\n    'br',\n    'col',\n    'embed',\n    'hr',\n    'img',\n    'input',\n    'link',\n    'meta',\n    'param',\n    'source',\n    'track',\n    'wbr',\n];\nfunction formatHTMLElement(el, objectParts, values) {\n    var tagName = el.tagName;\n    var outerHTML = el.outerHTML, textContent = el.textContent, childNodes = el.childNodes;\n    // Regular text\n    if (!tagName) {\n        return restoreRichPlaceholderMessage(textContent || '', objectParts);\n    }\n    tagName = tagName.toLowerCase();\n    var isVoidElement = ~VOID_ELEMENTS.indexOf(tagName);\n    var formatFnOrValue = values[tagName];\n    if (formatFnOrValue && isVoidElement) {\n        throw new FormatError(tagName + \" is a self-closing tag and can not be used, please use another tag name.\");\n    }\n    if (!childNodes.length) {\n        return [outerHTML];\n    }\n    var chunks = Array.prototype.slice.call(childNodes).reduce(function (all, child) {\n        return all.concat(formatHTMLElement(child, objectParts, values));\n    }, []);\n    // Legacy HTML\n    if (!formatFnOrValue) {\n        return __spreadArrays([\"<\" + tagName + \">\"], chunks, [\"</\" + tagName + \">\"]);\n    }\n    // HTML Tag replacement\n    if (typeof formatFnOrValue === 'function') {\n        return [formatFnOrValue.apply(void 0, chunks)];\n    }\n    return [formatFnOrValue];\n}\nexport function formatHTMLMessage(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, undefined, originalMessage);\n    var objectParts = {};\n    var formattedMessage = parts.reduce(function (all, part) {\n        if (part.type === 0 /* literal */) {\n            return (all += part.value);\n        }\n        var id = generateId();\n        objectParts[id] = part.value;\n        return (all += \"\" + TOKEN_DELIMITER + id + TOKEN_DELIMITER);\n    }, '');\n    // Not designed to filter out aggressively\n    if (!SIMPLE_XML_REGEX.test(formattedMessage)) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    if (!values) {\n        throw new FormatError('Message has placeholders but no values was given');\n    }\n    if (typeof DOMParser === 'undefined') {\n        throw new FormatError('Cannot format XML message without DOMParser');\n    }\n    if (!domParser) {\n        domParser = new DOMParser();\n    }\n    var content = domParser\n        .parseFromString(\"<formatted-message id=\\\"\" + TEMPLATE_ID + \"\\\">\" + formattedMessage + \"</formatted-message>\", 'text/html')\n        .getElementById(TEMPLATE_ID);\n    if (!content) {\n        throw new FormatError(\"Malformed HTML message \" + formattedMessage);\n    }\n    var tagsToFormat = Object.keys(values).filter(function (varName) { return !!content.getElementsByTagName(varName).length; });\n    // No tags to format\n    if (!tagsToFormat.length) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    var caseSensitiveTags = tagsToFormat.filter(function (tagName) { return tagName !== tagName.toLowerCase(); });\n    if (caseSensitiveTags.length) {\n        throw new FormatError(\"HTML tag must be lowercased but the following tags are not: \" + caseSensitiveTags.join(', '));\n    }\n    // We're doing this since top node is `<formatted-message/>` which does not have a formatter\n    return Array.prototype.slice\n        .call(content.childNodes)\n        .reduce(function (all, child) { return all.concat(formatHTMLElement(child, objectParts, values)); }, []);\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { parse } from 'intl-messageformat-parser';\nimport memoizeIntlConstructor from 'intl-format-cache';\nimport { formatToString, formatToParts, formatHTMLMessage, } from './formatters';\n// -- MessageFormat --------------------------------------------------------\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return __assign(__assign(__assign({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {\n        all[k] = __assign(__assign({}, c1[k]), (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, __assign({}, defaultConfig));\n}\nexport function createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {},\n    }; }\n    return {\n        getNumberFormat: memoizeIntlConstructor(Intl.NumberFormat, cache.number),\n        getDateTimeFormat: memoizeIntlConstructor(Intl.DateTimeFormat, cache.dateTime),\n        getPluralRules: memoizeIntlConstructor(Intl.PluralRules, cache.pluralRules),\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        var _this = this;\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {},\n        };\n        this.format = function (values) {\n            return formatToString(_this.ast, _this.locales, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.formatToParts = function (values) {\n            return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);\n        };\n        this.formatHTMLMessage = function (values) {\n            return formatHTMLMessage(_this.ast, _this.locales, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.resolvedOptions = function () { return ({\n            locale: Intl.NumberFormat.supportedLocalesOf(_this.locales)[0],\n        }); };\n        this.getAst = function () { return _this.ast; };\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message, {\n                normalizeHashtagInPlural: false,\n            });\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        // Defined first because it's used to build the format pattern.\n        this.locales = locales;\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n    }\n    IntlMessageFormat.defaultLocale = new Intl.NumberFormat().resolvedOptions().locale;\n    IntlMessageFormat.__parse = parse;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            currency: {\n                style: 'currency',\n            },\n            percent: {\n                style: 'percent',\n            },\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit',\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric',\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n        },\n    };\n    return IntlMessageFormat;\n}());\nexport { IntlMessageFormat };\nexport default IntlMessageFormat;\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nimport IntlMessageFormat from './core';\nexport * from './formatters';\nexport * from './core';\nexport default IntlMessageFormat;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","import React, { Component } from 'react';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport PropTypes from 'prop-types';\nimport gud from 'gud';\nimport warning from 'tiny-warning';\n\nvar MAX_SIGNED_31_BIT_INT = 1073741823;\n\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction createEventEmitter(value) {\n  var handlers = [];\n  return {\n    on: function on(handler) {\n      handlers.push(handler);\n    },\n    off: function off(handler) {\n      handlers = handlers.filter(function (h) {\n        return h !== handler;\n      });\n    },\n    get: function get() {\n      return value;\n    },\n    set: function set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(function (handler) {\n        return handler(value, changedBits);\n      });\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createReactContext(defaultValue, calculateChangedBits) {\n  var _Provider$childContex, _Consumer$contextType;\n\n  var contextProp = '__create-react-context-' + gud() + '__';\n\n  var Provider =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Provider, _Component);\n\n    function Provider() {\n      var _this;\n\n      _this = _Component.apply(this, arguments) || this;\n      _this.emitter = createEventEmitter(_this.props.value);\n      return _this;\n    }\n\n    var _proto = Provider.prototype;\n\n    _proto.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n    };\n\n    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        var oldValue = this.props.value;\n        var newValue = nextProps.value;\n        var changedBits;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0;\n        } else {\n          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n\n          if (process.env.NODE_ENV !== 'production') {\n            warning((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: ' + changedBits);\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    };\n\n    _proto.render = function render() {\n      return this.props.children;\n    };\n\n    return Provider;\n  }(Component);\n\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = PropTypes.object.isRequired, _Provider$childContex);\n\n  var Consumer =\n  /*#__PURE__*/\n  function (_Component2) {\n    _inheritsLoose(Consumer, _Component2);\n\n    function Consumer() {\n      var _this2;\n\n      _this2 = _Component2.apply(this, arguments) || this;\n      _this2.state = {\n        value: _this2.getValue()\n      };\n\n      _this2.onUpdate = function (newValue, changedBits) {\n        var observedBits = _this2.observedBits | 0;\n\n        if ((observedBits & changedBits) !== 0) {\n          _this2.setState({\n            value: _this2.getValue()\n          });\n        }\n      };\n\n      return _this2;\n    }\n\n    var _proto2 = Consumer.prototype;\n\n    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var observedBits = nextProps.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentDidMount = function componentDidMount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n\n      var observedBits = this.props.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentWillUnmount = function componentWillUnmount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    };\n\n    _proto2.getValue = function getValue() {\n      if (this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    };\n\n    _proto2.render = function render() {\n      return onlyChild(this.props.children)(this.state.value);\n    };\n\n    return Consumer;\n  }(Component);\n\n  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = PropTypes.object, _Consumer$contextType);\n  return {\n    Provider: Provider,\n    Consumer: Consumer\n  };\n}\n\nvar index = React.createContext || createReactContext;\n\nexport default index;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nexport default function areIntlLocalesSupported(locales, constructorsToCheck) {\n    if (typeof Intl === 'undefined') {\n        return false;\n    }\n    if (!locales) {\n        throw new Error('locales must be supplied.');\n    }\n    if (!Array.isArray(locales)) {\n        locales = [locales];\n    }\n    var intlConstructors = constructorsToCheck || [\n        Intl.DateTimeFormat,\n        Intl.NumberFormat,\n        Intl.PluralRules,\n    ];\n    intlConstructors = intlConstructors.filter(Boolean);\n    if (intlConstructors.length === 0 ||\n        (constructorsToCheck &&\n            intlConstructors.length !== constructorsToCheck.length)) {\n        return false;\n    }\n    return intlConstructors.every(function (intlConstructor) {\n        return intlConstructor.supportedLocalesOf(locales).length === locales.length;\n    });\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n// -- Utilities ----------------------------------------------------------------\nfunction getCacheId(inputs) {\n    return JSON.stringify(inputs.map(function (input) {\n        return input && typeof input === 'object' ? orderedProps(input) : input;\n    }));\n}\nfunction orderedProps(obj) {\n    return Object.keys(obj)\n        .sort()\n        .map(function (k) {\n        var _a;\n        return (_a = {}, _a[k] = obj[k], _a);\n    });\n}\nvar memoizeFormatConstructor = function (FormatConstructor, cache) {\n    if (cache === void 0) { cache = {}; }\n    return function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var cacheId = getCacheId(args);\n        var format = cacheId && cache[cacheId];\n        if (!format) {\n            format = new ((_a = FormatConstructor).bind.apply(_a, __spreadArrays([void 0], args)))();\n            if (cacheId) {\n                cache[cacheId] = format;\n            }\n        }\n        return format;\n    };\n};\nexport default memoizeFormatConstructor;\n","/**\n * Special language-specific overrides.\n *\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n *\n * @type {Object}\n */\nvar LANGUAGES = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      '\\u0130': '\\u0069',\n      '\\u0049': '\\u0131',\n      '\\u0049\\u0307': '\\u0069'\n    }\n  },\n  az: {\n    regexp: /[\\u0130]/g,\n    map: {\n      '\\u0130': '\\u0069',\n      '\\u0049': '\\u0131',\n      '\\u0049\\u0307': '\\u0069'\n    }\n  },\n  lt: {\n    regexp: /[\\u0049\\u004A\\u012E\\u00CC\\u00CD\\u0128]/g,\n    map: {\n      '\\u0049': '\\u0069\\u0307',\n      '\\u004A': '\\u006A\\u0307',\n      '\\u012E': '\\u012F\\u0307',\n      '\\u00CC': '\\u0069\\u0307\\u0300',\n      '\\u00CD': '\\u0069\\u0307\\u0301',\n      '\\u0128': '\\u0069\\u0307\\u0303'\n    }\n  }\n}\n\n/**\n * Lowercase a string.\n *\n * @param  {String} str\n * @return {String}\n */\nmodule.exports = function (str, locale) {\n  var lang = LANGUAGES[locale]\n\n  str = str == null ? '' : String(str)\n\n  if (lang) {\n    str = str.replace(lang.regexp, function (m) { return lang.map[m] })\n  }\n\n  return str.toLowerCase()\n}\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction stripHash(url) {\n  var hashIndex = url.indexOf('#');\n  return hashIndex === -1 ? url : url.slice(0, hashIndex);\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(stripHash(window.location.href) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function locationsAreEqual$$1(a, b) {\n    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;\n  }\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    var baseTag = document.querySelector('base');\n    var href = '';\n\n    if (baseTag && baseTag.getAttribute('href')) {\n      href = stripHash(window.location.href);\n    }\n\n    return href + '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","'use strict';\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar ReactIs = require('react-is');\nvar REACT_STATICS = {\n    childContextTypes: true,\n    contextType: true,\n    contextTypes: true,\n    defaultProps: true,\n    displayName: true,\n    getDefaultProps: true,\n    getDerivedStateFromError: true,\n    getDerivedStateFromProps: true,\n    mixins: true,\n    propTypes: true,\n    type: true\n};\n\nvar KNOWN_STATICS = {\n    name: true,\n    length: true,\n    prototype: true,\n    caller: true,\n    callee: true,\n    arguments: true,\n    arity: true\n};\n\nvar FORWARD_REF_STATICS = {\n    '$$typeof': true,\n    render: true,\n    defaultProps: true,\n    displayName: true,\n    propTypes: true\n};\n\nvar MEMO_STATICS = {\n    '$$typeof': true,\n    compare: true,\n    defaultProps: true,\n    displayName: true,\n    propTypes: true,\n    type: true\n};\n\nvar TYPE_STATICS = {};\nTYPE_STATICS[ReactIs.ForwardRef] = FORWARD_REF_STATICS;\n\nfunction getStatics(component) {\n    if (ReactIs.isMemo(component)) {\n        return MEMO_STATICS;\n    }\n    return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n    if (typeof sourceComponent !== 'string') {\n        // don't hoist over string (html) components\n\n        if (objectPrototype) {\n            var inheritedComponent = getPrototypeOf(sourceComponent);\n            if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n            }\n        }\n\n        var keys = getOwnPropertyNames(sourceComponent);\n\n        if (getOwnPropertySymbols) {\n            keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n        }\n\n        var targetStatics = getStatics(targetComponent);\n        var sourceStatics = getStatics(sourceComponent);\n\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                try {\n                    // Avoid failures from read-only properties\n                    defineProperty(targetComponent, key, descriptor);\n                } catch (e) {}\n            }\n        }\n\n        return targetComponent;\n    }\n\n    return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n"],"sourceRoot":""}