{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-core/node_modules/@patternfly/react-styles/css/components/EmptyState/empty-state.js","webpack:///./src/utilities/use-enhanced-history.js","webpack:///./src/messages/filtering.messages.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/EmptyState/EmptyState.js","webpack:///./node_modules/@patternfly/react-core/node_modules/@patternfly/react-styles/css/components/EmptyState/empty-state.css?4b7b","webpack:///./node_modules/@patternfly/react-core/node_modules/@patternfly/react-styles/css/components/EmptyState/empty-state.css","webpack:///./node_modules/@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/EmptyState/EmptyStateSecondaryActions.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/components/cjs/EmptyTable.js","webpack:///./src/smart-components/order-process/order-process-table-context.js","webpack:///./src/smart-components/order-process/order-process-table-helpers.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/table-empty-state.js","webpack:///./src/forms/name-async-validator.ts","webpack:///./src/forms/load-items-debounced.ts","webpack:///./src/forms/set-portfolio-item.schema.ts","webpack:///./src/forms/create-order-process.schema.ts","webpack:///./src/utilities/use-order-process.js","webpack:///./src/smart-components/order-process/add-order-process-modal.js","webpack:///./src/smart-components/order-process/remove-order-process-modal.js","webpack:///./src/smart-components/order-process/order-processes.js"],"names":["exports","__esModule","default","removeSearchQuery","target","split","search","undefined","useEnhancedHistory","removeSearch","keepHash","history","useHistory","push","internalTarget","location","hash","length","filteringMessages","defineMessages","require","noItems","id","defaultMessage","filterByProduct","noResults","noResultsDescription","clearFilters","noProducts","noRecords","filterByTitle","noResultsFound","noResult","unknown","Object","defineProperty","value","tslib_1","React","__importStar","react_styles_1","empty_state_1","__importDefault","EmptyStateVariant","EmptyState","_a","children","className","variant","full","isFullHeight","props","__rest","createElement","assign","css","emptyState","modifiers","sm","lg","xl","fullHeight","emptyStateContent","displayName","api","content","module","i","options","locals","___CSS_LOADER_API_IMPORT___","EmptyStateIcon","icon","IconComponent","component","AnyComponent","classNames","emptyStateIcon","EmptyStateBody","emptyStateBody","ExclamationTriangleIconConfig","name","height","width","svgPath","yOffset","xOffset","transform","ExclamationTriangleIcon","createIcon","EmptyStateSecondaryActions","emptyStateSecondary","_interopDefault","e","_extends","objectWithoutProperties","React__default","PropTypes","EmptyTable","t","centered","r","s","a","_objectWithoutProperties","o","_defineProperty","propTypes","bool","any","string","OrderProcessTableContext","createContext","selectedOrderProcesses","SelectBox","useContext","setSelectedOrderProcesses","Checkbox","isChecked","includes","onChange","isRequired","createRows","data","map","description","created_at","cells","Fragment","key","date","TableToolbarView","columns","fetchData","toolbarButtons","actionResolver","routes","plural","pagination","filterValue","onFilterChange","isLoading","renderEmptyState","sortBy","onSort","activeFiltersConfig","filterConfig","rows","intl","useIntl","paginationConfig","itemCount","count","page","getCurrentPage","limit","offset","perPage","onSetPage","_e","getNewPage","onPerPageSelect","size","isDisabled","Section","type","page-type","PrimaryToolbar","actionsConfig","dropdownProps","position","actions","items","label","formatMessage","filterValues","placeholder","orderProcessesMessages","orderProcessesFilter","_event","Table","aria-label","dropDirection","isCompact","array","func","shape","number","singular","object","defaultProps","requests","defaultSettings","TableEmptyState","title","Icon","PrimaryAction","renderDescription","TextContent","Text","TextVariants","h1","then","find","op","nameTaken","SELECT","beforeProvision","afterProvision","loadOptions","noValueUpdates","isSearchable","isClearable","fields","TEXT_FIELD","orderProcessName","validate","REQUIRED","message","enterOrderProcessName","TEXTAREA","useOrderProcess","orderProcesses","useSelector","orderProcessReducer","shallowEqual","reducer","state","initialValues","schema","AddOrderProcess","edit","dispatch","useDispatch","useQuery","order_process","loadedProcess","useReducer","stateDispatch","useEffect","createOrderProcessSchema","fetchOrderProcess","onCancel","ORDER_PROCESSES_ROUTE","Modal","isOpen","onClose","updateOrderProcess","createOrderProcess","onSubmit","values","submitAction","addOrderProcess","fetchOrderProcesses","templateProps","submitLabel","labelMessages","save","create","disableSubmit","RemoveOrderProcessModal","ids","resetSelectedOrderProcesses","useState","fetchedOrderProcess","setFetchedOrderProcess","submitting","setSubmitting","finalId","orderProcess","orderProcessMessages","removeProcessAriaLabel","header","Title","headingLevel","fill","removeProcessTitle","Button","onClick","removeOrderProcess","removeOrderProcesses","Spinner","actionMessages","deleting","cancel","p","removeProcessDescription","allSelected","selectAll","transforms","cellWidth","sortable","created","debouncedFilter","asyncFormValidator","filter","filteringCallback","meta","prepareChips","category","chips","initialState","isFetching","isFiltering","areAllSelected","selected","every","row","unique","index","self","indexOf","orderProcessesState","action","payload","selectedOrderProceses","OrderProcesses","viewState","useInitialUriHash","updateOrderProcesses","insights","chrome","appNavClick","secondaryNav","scrollToTop","handleFilterChange","anyOrderProcessSelected","Provider","direction","property","sortOrderProcesses","exact","path","ADD_ORDER_PROCESS_ROUTE","postMethod","REMOVE_ORDER_PROCESS_ROUTE","UPDATE_ORDER_PROCESS_ROUTE","titlePlural","titleSingular","ToolbarItem","to","pathname","deleteOrderProcess","_rowId","noOrderProcesses","SearchIcon","filters","onDelete"],"mappings":"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","file":"js/order-processes~31ecd969.86ac718a167e53bcde2a.js","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nrequire('./empty-state.css');\nexports.default = {\n  \"button\": \"pf-c-button\",\n  \"emptyState\": \"pf-c-empty-state\",\n  \"emptyStateBody\": \"pf-c-empty-state__body\",\n  \"emptyStateContent\": \"pf-c-empty-state__content\",\n  \"emptyStateIcon\": \"pf-c-empty-state__icon\",\n  \"emptyStatePrimary\": \"pf-c-empty-state__primary\",\n  \"emptyStateSecondary\": \"pf-c-empty-state__secondary\",\n  \"modifiers\": {\n    \"sm\": \"pf-m-sm\",\n    \"lg\": \"pf-m-lg\",\n    \"xl\": \"pf-m-xl\",\n    \"fullHeight\": \"pf-m-full-height\",\n    \"primary\": \"pf-m-primary\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  },\n  \"title\": \"pf-c-title\"\n};","import { useHistory } from 'react-router-dom';\n\nconst removeSearchQuery = (target) => {\n  if (typeof target === 'string') {\n    return target.split('?')[0];\n  }\n\n  if (typeof target === 'object') {\n    return {\n      ...target,\n      search: undefined\n    };\n  }\n\n  return target;\n};\n\n/**\n * Wrapper around useHistory hook which adds aditional settings to standard history methods\n * @param {Boolean} removeSearch if true, using history navigation methods will remove search string from path\n * @param {Boolean} keepHash if true, using history navigation methods will not remove hash from URL\n */\nconst useEnhancedHistory = ({ removeSearch, keepHash } = {}) => {\n  const history = useHistory();\n  return {\n    ...history,\n    push: (target) => {\n      let internalTarget = target;\n      if (keepHash && history.location.hash.length > 0) {\n        internalTarget =\n          typeof internalTarget === 'object'\n            ? { ...internalTarget, hash: history.location.hash }\n            : `${internalTarget}${history.location.hash}`;\n      }\n\n      if (removeSearch) {\n        return history.push(removeSearchQuery(internalTarget));\n      }\n\n      return history.push(internalTarget);\n    }\n  };\n};\n\nexport default useEnhancedHistory;\n","const { defineMessages } = require('react-intl');\n\nconst filteringMessages = defineMessages({\n  noItems: {\n    id: 'common.filtering.noItems',\n    defaultMessage: 'No items found'\n  },\n  filterByProduct: {\n    id: 'common.filtering.filterByProduct',\n    defaultMessage: 'Filter by product'\n  },\n  noResults: {\n    id: 'common.filtering.noResults',\n    defaultMessage: 'No results found'\n  },\n  noResultsDescription: {\n    id: 'common.filtering.noResultsDescription',\n    defaultMessage:\n      'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n  },\n  clearFilters: {\n    id: 'common.filtering.clear-filters',\n    defaultMessage: 'Clear all filters'\n  },\n  noProducts: {\n    id: 'common.filtering.no-products',\n    defaultMessage: 'No products yet'\n  },\n  noRecords: {\n    id: 'commonMessages.noRecords',\n    defaultMessage: 'No records'\n  },\n  filterByTitle: {\n    id: 'tableToolbar.filterByTitle',\n    defaultMessage: 'Filter by {title}'\n  },\n  noResultsFound: {\n    id: 'tableToolbar.noResultsFound',\n    defaultMessage: 'No results found'\n  },\n  noResult: {\n    id: 'tableToolbar.noResult',\n    defaultMessage: 'No {results}'\n  },\n  unknown: {\n    id: 'commonMessages.unknown',\n    defaultMessage: 'Unknown'\n  }\n});\n\nexport default filteringMessages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst empty_state_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/EmptyState/empty-state\"));\nvar EmptyStateVariant;\n(function (EmptyStateVariant) {\n    EmptyStateVariant[\"small\"] = \"small\";\n    EmptyStateVariant[\"large\"] = \"large\";\n    EmptyStateVariant[\"xl\"] = \"xl\";\n    EmptyStateVariant[\"full\"] = \"full\";\n})(EmptyStateVariant = exports.EmptyStateVariant || (exports.EmptyStateVariant = {}));\nexports.EmptyState = (_a) => {\n    var { children, className = '', variant = EmptyStateVariant.full, isFullHeight } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"variant\", \"isFullHeight\"]);\n    return (React.createElement(\"div\", Object.assign({ className: react_styles_1.css(empty_state_1.default.emptyState, variant === 'small' && empty_state_1.default.modifiers.sm, variant === 'large' && empty_state_1.default.modifiers.lg, variant === 'xl' && empty_state_1.default.modifiers.xl, isFullHeight && empty_state_1.default.modifiers.fullHeight, className) }, props),\n        React.createElement(\"div\", { className: react_styles_1.css(empty_state_1.default.emptyStateContent) }, children)));\n};\nexports.EmptyState.displayName = 'EmptyState';\n//# sourceMappingURL=EmptyState.js.map","var api = require(\"!../../../../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../css-loader/dist/cjs.js!./empty-state.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".pf-c-empty-state {\\n  --pf-c-empty-state--PaddingTop: var(--pf-global--spacer--xl);\\n  --pf-c-empty-state--PaddingRight: var(--pf-global--spacer--xl);\\n  --pf-c-empty-state--PaddingBottom: var(--pf-global--spacer--xl);\\n  --pf-c-empty-state--PaddingLeft: var(--pf-global--spacer--xl);\\n  --pf-c-empty-state__content--MaxWidth: none;\\n  --pf-c-empty-state__icon--MarginBottom: var(--pf-global--spacer--lg);\\n  --pf-c-empty-state__icon--FontSize: var(--pf-global--icon--FontSize--xl);\\n  --pf-c-empty-state__icon--Color: var(--pf-global--icon--Color--light);\\n  --pf-c-empty-state__content--c-title--m-lg--FontSize: var(--pf-global--FontSize--xl);\\n  --pf-c-empty-state__body--MarginTop: var(--pf-global--spacer--md);\\n  --pf-c-empty-state__body--Color: var(--pf-global--Color--200);\\n  --pf-c-empty-state__primary--MarginTop: var(--pf-global--spacer--xl);\\n  --pf-c-empty-state__primary--secondary--MarginTop: var(--pf-global--spacer--sm);\\n  --pf-c-empty-state__secondary--MarginTop: var(--pf-global--spacer--xl);\\n  --pf-c-empty-state__secondary--MarginBottom: calc(var(--pf-global--spacer--xs) * -1);\\n  --pf-c-empty-state__secondary--child--MarginRight: calc(var(--pf-global--spacer--xs) / 2);\\n  --pf-c-empty-state__secondary--child--MarginBottom: var(--pf-global--spacer--xs);\\n  --pf-c-empty-state__secondary--child--MarginLeft: calc(var(--pf-global--spacer--xs) / 2);\\n  --pf-c-empty-state--m-sm__content--MaxWidth: 25rem;\\n  --pf-c-empty-state--m-lg__content--MaxWidth: 37.5rem;\\n  --pf-c-empty-state--m-xl__body--FontSize: var(--pf-global--FontSize--xl);\\n  --pf-c-empty-state--m-xl__body--MarginTop: var(--pf-global--spacer--lg);\\n  --pf-c-empty-state--m-xl__icon--MarginBottom: var(--pf-global--spacer--xl);\\n  --pf-c-empty-state--m-xl__icon--FontSize: 6.25rem;\\n  --pf-c-empty-state--m-xl--c-button__secondary--MarginTop: var(--pf-global--spacer--md);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: var(--pf-c-empty-state--PaddingTop) var(--pf-c-empty-state--PaddingRight) var(--pf-c-empty-state--PaddingBottom) var(--pf-c-empty-state--PaddingLeft);\\n  text-align: center; }\\n  .pf-c-empty-state.pf-m-sm {\\n    --pf-c-empty-state__content--MaxWidth: var(--pf-c-empty-state--m-sm__content--MaxWidth); }\\n  .pf-c-empty-state.pf-m-lg {\\n    --pf-c-empty-state__content--MaxWidth: var(--pf-c-empty-state--m-lg__content--MaxWidth); }\\n  .pf-c-empty-state.pf-m-xl {\\n    --pf-c-empty-state__body--MarginTop: var(--pf-c-empty-state--m-xl__body--MarginTop);\\n    --pf-c-empty-state__icon--MarginBottom: var(--pf-c-empty-state--m-xl__icon--MarginBottom);\\n    --pf-c-empty-state__icon--FontSize: var(--pf-c-empty-state--m-xl__icon--FontSize);\\n    --pf-c-empty-state--c-button__secondary--MarginTop: var(--pf-c-empty-state--m-xl--c-button__secondary--MarginTop); }\\n    .pf-c-empty-state.pf-m-xl .pf-c-empty-state__body {\\n      font-size: var(--pf-c-empty-state--m-xl__body--FontSize); }\\n  .pf-c-empty-state.pf-m-full-height {\\n    height: 100%; }\\n\\n.pf-c-empty-state__content {\\n  max-width: var(--pf-c-empty-state__content--MaxWidth); }\\n  .pf-c-empty-state__content > .pf-c-title.pf-m-lg {\\n    font-size: var(--pf-c-empty-state__content--c-title--m-lg--FontSize); }\\n\\n.pf-c-empty-state__icon {\\n  margin-bottom: var(--pf-c-empty-state__icon--MarginBottom);\\n  font-size: var(--pf-c-empty-state__icon--FontSize);\\n  color: var(--pf-c-empty-state__icon--Color); }\\n\\n.pf-c-empty-state__body {\\n  margin-top: var(--pf-c-empty-state__body--MarginTop);\\n  color: var(--pf-c-empty-state__body--Color); }\\n\\n.pf-c-empty-state__content > .pf-c-button.pf-m-primary,\\n.pf-c-empty-state__primary {\\n  margin-top: var(--pf-c-empty-state__primary--MarginTop); }\\n  .pf-c-empty-state__content > .pf-c-button.pf-m-primary + .pf-c-empty-state__secondary,\\n  .pf-c-empty-state__primary + .pf-c-empty-state__secondary {\\n    margin-top: var(--pf-c-empty-state__primary--secondary--MarginTop); }\\n\\n.pf-c-empty-state__secondary {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  margin-top: var(--pf-c-empty-state__secondary--MarginTop);\\n  margin-bottom: var(--pf-c-empty-state__secondary--MarginBottom); }\\n  .pf-c-empty-state__secondary > * {\\n    margin-right: var(--pf-c-empty-state__secondary--child--MarginRight);\\n    margin-bottom: var(--pf-c-empty-state__secondary--child--MarginBottom);\\n    margin-left: var(--pf-c-empty-state__secondary--child--MarginLeft); }\\n\\n.pf-m-overpass-font .pf-c-empty-state .pf-c-empty-state__content > .pf-c-title.pf-m-lg {\\n  font-size: var(--pf-global--FontSize--lg); }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst empty_state_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/EmptyState/empty-state\"));\nexports.EmptyStateIcon = (_a) => {\n    var { className = '', icon: IconComponent, component: AnyComponent, variant = 'icon' } = _a, props = tslib_1.__rest(_a, [\"className\", \"icon\", \"component\", \"variant\"]);\n    const classNames = react_styles_1.css(empty_state_1.default.emptyStateIcon, className);\n    return variant === 'icon' ? (React.createElement(IconComponent, Object.assign({ className: classNames }, props, { \"aria-hidden\": \"true\" }))) : (React.createElement(\"div\", { className: classNames },\n        React.createElement(AnyComponent, null)));\n};\nexports.EmptyStateIcon.displayName = 'EmptyStateIcon';\n//# sourceMappingURL=EmptyStateIcon.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst empty_state_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/EmptyState/empty-state\"));\nexports.EmptyStateBody = (_a) => {\n    var { children, className = '' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: react_styles_1.css(empty_state_1.default.emptyStateBody, className) }, props), children));\n};\nexports.EmptyStateBody.displayName = 'EmptyStateBody';\n//# sourceMappingURL=EmptyStateBody.js.map","\"use strict\"\nexports.__esModule = true;\nexports.ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.ExclamationTriangleIcon = require('../createIcon').createIcon(exports.ExclamationTriangleIconConfig);\nexports[\"default\"] = exports.ExclamationTriangleIcon;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst empty_state_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/EmptyState/empty-state\"));\nexports.EmptyStateSecondaryActions = (_a) => {\n    var { children = null, className = '' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: react_styles_1.css(empty_state_1.default.emptyStateSecondary, className) }, props), children));\n};\nexports.EmptyStateSecondaryActions.displayName = 'EmptyStateSecondaryActions';\n//# sourceMappingURL=EmptyStateSecondaryActions.js.map","\"use strict\";function _interopDefault(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0}),require(\"./_commonjsHelpers-32c5d30b.js\");var _extends=require(\"./extends-7fa7e501.js\"),defineProperty=require(\"./defineProperty-cf06dcaa.js\"),objectWithoutProperties=require(\"./objectWithoutProperties-9e2b4e81.js\"),React=require(\"react\"),React__default=_interopDefault(React),PropTypes=_interopDefault(require(\"prop-types\")),classNames=_interopDefault(require(\"classnames\")),EmptyTable=function EmptyTable(e){var t=e.centered,r=e.className,s=e.children,a=objectWithoutProperties._objectWithoutProperties(e,[\"centered\",\"className\",\"children\"]),o=classNames(\"ins-c-table__empty\",defineProperty._defineProperty({},\"is-centered\",t),r);return React__default.createElement(\"div\",_extends._extends({className:o},a),\" \",s)};EmptyTable.propTypes={centered:PropTypes.bool,children:PropTypes.any,className:PropTypes.string},exports.EmptyTable=EmptyTable;\n","import { createContext } from 'react';\n\nconst OrderProcessTableContext = createContext({ selectedOrderProcesses: [] });\n\nexport default OrderProcessTableContext;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\nimport { TimeAgo } from '../../helpers/shared/helpers';\nimport OrderProcessTableContext from './order-process-table-context';\n\nexport const SelectBox = ({ id }) => {\n  const { selectedOrderProcesses, setSelectedOrderProcesses } = useContext(\n    OrderProcessTableContext\n  );\n\n  return (\n    <Checkbox\n      id={`select-${id}`}\n      isChecked={selectedOrderProcesses.includes(id)}\n      onChange={() => setSelectedOrderProcesses(id)}\n    />\n  );\n};\n\nSelectBox.propTypes = {\n  id: PropTypes.string.isRequired\n};\n\nexport const createRows = (data) =>\n  data.map(({ id, name, description, created_at }) => ({\n    id,\n    cells: [\n      <React.Fragment key={`${id}-checkbox`}>\n        <SelectBox id={id} />\n      </React.Fragment>,\n      name,\n      description,\n      <React.Fragment key={id}>\n        <TimeAgo date={created_at} />\n      </React.Fragment>\n    ]\n  }));\n","import React, { Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport {\n  defaultSettings,\n  getCurrentPage,\n  getNewPage\n} from '../../helpers/shared/pagination';\nimport { ListLoader } from './loader-placeholders';\nimport { useIntl } from 'react-intl';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/PrimaryToolbar';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\n\nexport const TableToolbarView = ({\n  columns,\n  fetchData,\n  toolbarButtons,\n  actionResolver,\n  routes,\n  plural,\n  pagination,\n  filterValue,\n  onFilterChange,\n  isLoading,\n  renderEmptyState,\n  sortBy,\n  onSort,\n  activeFiltersConfig,\n  filterConfig,\n  rows\n}) => {\n  const intl = useIntl();\n\n  const paginationConfig = {\n    itemCount: pagination.count,\n    page: getCurrentPage(pagination.limit, pagination.offset),\n    perPage: pagination.limit,\n    onSetPage: (_e, page) =>\n      fetchData({ ...pagination, offset: getNewPage(page, pagination.limit) }),\n    onPerPageSelect: (_e, size) => fetchData({ ...pagination, limit: size }),\n    isDisabled: isLoading\n  };\n\n  const renderToolbar = () => (\n    <PrimaryToolbar\n      className=\"pf-u-p-lg\"\n      pagination={paginationConfig}\n      {...(toolbarButtons && {\n        actionsConfig: {\n          dropdownProps: {\n            position: 'right'\n          },\n          actions: [toolbarButtons()]\n        }\n      })}\n      filterConfig={{\n        items: [\n          {\n            label: intl.formatMessage({\n              id: 'name',\n              defaultMessage: 'Name'\n            }),\n            filterValues: {\n              id: 'filter-by-name',\n              placeholder: intl.formatMessage(\n                orderProcessesMessages.orderProcessesFilter\n              ),\n              'aria-label': intl.formatMessage(\n                orderProcessesMessages.orderProcessesFilter\n              ),\n              onChange: (_event, value) => onFilterChange(value),\n              value: filterValue\n            }\n          },\n          ...filterConfig\n        ]\n      }}\n      activeFiltersConfig={activeFiltersConfig}\n    />\n  );\n\n  return (\n    <Section type=\"content\" page-type={`tab-${plural}`} id={`tab-${plural}`}>\n      {routes()}\n      {renderToolbar(isLoading)}\n      {isLoading && <ListLoader />}\n      {!isLoading && rows.length === 0 ? (\n        renderEmptyState()\n      ) : (\n        <Fragment>\n          {!isLoading && (\n            <Table\n              aria-label={`${plural} table`}\n              rows={rows}\n              cells={columns}\n              actionResolver={actionResolver}\n              className=\"pf-u-pt-0\"\n              sortBy={sortBy}\n              onSort={onSort}\n            >\n              <TableHeader />\n              <TableBody />\n            </Table>\n          )}\n          {pagination.count > 0 && (\n            <PrimaryToolbar\n              className=\"pf-u-pl-lg pf-u-pr-lg\"\n              pagination={{\n                ...paginationConfig,\n                dropDirection: 'up',\n                variant: 'bottom',\n                isCompact: false,\n                className: 'pf-u-pr-0'\n              }}\n            />\n          )}\n        </Fragment>\n      )}\n    </Section>\n  );\n};\n\nTableToolbarView.propTypes = {\n  columns: propTypes.array.isRequired,\n  toolbarButtons: propTypes.func,\n  fetchData: propTypes.func.isRequired,\n  pagination: propTypes.shape({\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number\n  }),\n  plural: propTypes.string,\n  singular: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  filterValue: propTypes.string,\n  onFilterChange: propTypes.func,\n  isLoading: propTypes.bool,\n  renderEmptyState: propTypes.func,\n  sortBy: propTypes.object,\n  onSort: propTypes.func,\n  activeFiltersConfig: propTypes.object,\n  filterConfig: propTypes.array,\n  rows: propTypes.array\n};\n\nTableToolbarView.defaultProps = {\n  requests: [],\n  isLoading: false,\n  pagination: defaultSettings,\n  routes: () => null,\n  renderEmptyState: () => null,\n  filterConfig: []\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/components/cjs/EmptyTable';\n\nconst TableEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <EmptyTable centered aria-label=\"No records\">\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={Icon} />\n      <TextContent>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </TextContent>\n      <EmptyStateBody>\n        {description}\n        {renderDescription && renderDescription()}\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        {PrimaryAction && <PrimaryAction />}\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </EmptyTable>\n);\n\nTableEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default TableEmptyState;\n","import { IntlShape } from 'react-intl';\nimport { fetchOrderProcessByName } from '../helpers/order-process/order-process-helper';\nimport asyncFormValidator from '../utilities/async-form-validator';\nimport formsMessages from '../messages/forms.messages';\n\nconst validateName = (name: string, id: string, intl: IntlShape) =>\n  fetchOrderProcessByName(name).then(({ data }) => {\n    const order_process = id\n      ? data.find((op) => name === op.name && id !== op.id)\n      : data.find((op) => name === op.name);\n\n    if (order_process) {\n      throw intl.formatMessage(formsMessages.nameTaken);\n    }\n  });\n\nexport default asyncFormValidator(validateName);\n","import asyncDebounce from '../utilities/async-form-validator';\nimport { loadProductOptions } from '../helpers/order-process/order-process-helper';\n\nexport default asyncDebounce(loadProductOptions);\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport Field from '@data-driven-forms/react-form-renderer/dist/cjs/field';\nimport loadOptions from './load-items-debounced';\nimport formMessages from '../messages/forms.messages';\nimport { BEFORE_TYPE } from '../utilities/constants';\nimport { IntlShape } from 'react-intl';\n\nconst setItemsSelectSchema = (\n  type: 'before' | 'after',\n  intl: IntlShape\n): Field[] => [\n  {\n    component: componentTypes.SELECT,\n    name: `${type}_portfolio_item_id`,\n    label: intl.formatMessage(\n      type === BEFORE_TYPE\n        ? formMessages.beforeProvision\n        : formMessages.afterProvision\n    ),\n    loadOptions,\n    noValueUpdates: true,\n    isSearchable: true,\n    isClearable: true\n  }\n];\n\nexport default setItemsSelectSchema;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport Schema from '@data-driven-forms/react-form-renderer/dist/cjs/schema';\n\nimport labelMessages from '../messages/labels.messages';\nimport debouncedValidatorName from './name-async-validator';\nimport orderProcessesMessages from '../messages/order-processes.messages';\nimport setItemsSelectSchema from './set-portfolio-item.schema';\nimport { BEFORE_TYPE, AFTER_TYPE } from '../utilities/constants';\nimport { IntlShape } from 'react-intl';\n\n/**\n * Creates a data-driven-form schema for adding an order processes\n * @param {object} intl React.intl with formatMessage function\n * @param {string} id Id of order process (when editing)\n */\nconst createOrderProcessSchema = (intl: IntlShape, id: string): Schema => {\n  return {\n    fields: [\n      {\n        component: componentTypes.TEXT_FIELD,\n        name: 'name',\n        isRequired: true,\n        id: 'order-process-name',\n        label: intl.formatMessage(orderProcessesMessages.orderProcessName),\n        validate: [\n          (value: string) => debouncedValidatorName(value, id, intl),\n          {\n            type: validatorTypes.REQUIRED,\n            message: intl.formatMessage(\n              orderProcessesMessages.enterOrderProcessName\n            )\n          }\n        ]\n      },\n      {\n        component: componentTypes.TEXTAREA,\n        name: 'description',\n        id: 'order-process-description',\n        label: intl.formatMessage(labelMessages.description)\n      },\n      ...setItemsSelectSchema(BEFORE_TYPE, intl),\n      ...setItemsSelectSchema(AFTER_TYPE, intl)\n    ]\n  };\n};\n\nexport default createOrderProcessSchema;\n","import { shallowEqual, useSelector } from 'react-redux';\n\nconst useOrderProcess = (id) => {\n  const { orderProcesses } = useSelector(\n    ({ orderProcessReducer: { orderProcesses } }) => ({ orderProcesses }),\n    shallowEqual\n  );\n\n  return orderProcesses?.data?.find((op) => op.id === id);\n};\n\nexport default useOrderProcess;\n","import React, { useReducer, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { Modal } from '@patternfly/react-core';\n\nimport { ORDER_PROCESSES_ROUTE } from '../../constants/routes';\nimport createOrderProcessSchema from '../../forms/create-order-process.schema';\nimport {\n  addOrderProcess,\n  fetchOrderProcesses,\n  updateOrderProcess\n} from '../../redux/actions/order-process-actions';\nimport FormRenderer from '../common/form-renderer';\nimport labelMessages from '../../messages/labels.messages';\nimport useQuery from '../../utilities/use-query';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\nimport useOrderProcess from '../../utilities/use-order-process';\nimport { fetchOrderProcess } from '../../redux/actions/order-process-actions';\n\nconst reducer = (state, { type, initialValues, schema }) => {\n  switch (type) {\n    case 'loaded':\n      return {\n        ...state,\n        initialValues,\n        schema,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n\nconst AddOrderProcess = ({ edit }) => {\n  const dispatch = useDispatch();\n  const [{ order_process }] = useQuery(['order_process']);\n  const data = useSelector(\n    ({\n      orderProcessReducer: {\n        orderProcesses: { data }\n      }\n    }) => (edit ? data.find(({ id }) => id === order_process) : {})\n  );\n  const { push } = useEnhancedHistory({ keepHash: true });\n  const intl = useIntl();\n  const loadedProcess = useOrderProcess(order_process);\n\n  const [{ initialValues }, stateDispatch] = useReducer(reducer, {\n    isLoading: true\n  });\n\n  useEffect(() => {\n    if (!loadedProcess && loadedProcess !== undefined) {\n      fetchOrderProcess(order_process).then((data) =>\n        stateDispatch({\n          type: 'loaded',\n          initialValues: data,\n          schema: createOrderProcessSchema(intl, data.id)\n        })\n      );\n    } else if (loadedProcess !== undefined) {\n      stateDispatch({\n        type: 'loaded',\n        initialValues: loadedProcess,\n        schema: createOrderProcessSchema(intl, loadedProcess.id)\n      });\n    }\n  }, []);\n\n  const onCancel = () => push(ORDER_PROCESSES_ROUTE);\n\n  const onSave = (values) => {\n    const submitAction = edit\n      ? () => updateOrderProcess(order_process, values, intl)\n      : () => addOrderProcess(values, intl);\n    onCancel();\n\n    return dispatch(submitAction()).then(() => dispatch(fetchOrderProcesses()));\n  };\n\n  if (edit && !data) {\n    return null;\n  }\n\n  return (\n    <Modal\n      isOpen\n      onClose={onCancel}\n      title={intl.formatMessage(\n        edit\n          ? orderProcessesMessages.updateOrderProcess\n          : orderProcessesMessages.createOrderProcess\n      )}\n      variant=\"small\"\n    >\n      <FormRenderer\n        initialValues={initialValues}\n        onSubmit={onSave}\n        onCancel={onCancel}\n        schema={createOrderProcessSchema(intl, order_process)}\n        templateProps={{\n          submitLabel: edit\n            ? intl.formatMessage(labelMessages.save)\n            : intl.formatMessage(labelMessages.create),\n          disableSubmit: ['validating', 'pristine']\n        }}\n      />\n    </Modal>\n  );\n};\n\nAddOrderProcess.propTypes = {\n  edit: PropTypes.bool\n};\n\nAddOrderProcess.defaultProps = {\n  edit: false\n};\n\nexport default AddOrderProcess;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport {\n  Modal,\n  Button,\n  Text,\n  TextContent,\n  TextVariants,\n  Spinner,\n  Title\n} from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport {\n  removeOrderProcess,\n  removeOrderProcesses,\n  fetchOrderProcess\n} from '../../redux/actions/order-process-actions';\nimport useQuery from '../../utilities/use-query';\nimport { ORDER_PROCESSES_ROUTE } from '../../constants/routes';\nimport useOrderProcess from '../../utilities/use-order-process';\nimport { FormItemLoader } from '../../presentational-components/shared/loader-placeholders';\nimport orderProcessMessages from '../../messages/order-processes.messages';\nimport actionMessages from '../../messages/actions.messages';\nimport labelMessages from '../../messages/labels.messages';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nconst RemoveOrderProcessModal = ({\n  ids = [],\n  fetchData,\n  resetSelectedOrderProcesses\n}) => {\n  const dispatch = useDispatch();\n  const [fetchedOrderProcess, setFetchedOrderProcess] = useState();\n  const [submitting, setSubmitting] = useState(false);\n  const { push } = useEnhancedHistory({ keepHash: true });\n  const [{ order_process: orderProcessId }] = useQuery(['order_process']);\n\n  const finalId = orderProcessId || (ids.length === 1 && ids[0]);\n\n  const intl = useIntl();\n  const orderProcess = useOrderProcess(finalId);\n\n  useEffect(() => {\n    if (finalId && !orderProcess) {\n      dispatch(fetchOrderProcess(finalId))\n        .then(({ value }) => setFetchedOrderProcess(value))\n        .catch(() => push(ORDER_PROCESSES_ROUTE));\n    }\n  }, []);\n\n  if (!finalId && ids.length === 0) {\n    return null;\n  }\n\n  const removeProcesses = () =>\n    (finalId\n      ? dispatch(removeOrderProcess(finalId, intl))\n      : dispatch(removeOrderProcesses(ids, intl))\n    )\n      .catch(() => setSubmitting(false))\n      .then(() => push(ORDER_PROCESSES_ROUTE))\n      .then(() => resetSelectedOrderProcesses())\n      .then(() => fetchData());\n\n  const onCancel = () => push(ORDER_PROCESSES_ROUTE);\n\n  const onSubmit = () => {\n    setSubmitting(true);\n    return removeProcesses();\n  };\n\n  const name = (\n    <b key=\"remove-key\">\n      {finalId ? (\n        (fetchedOrderProcess && fetchedOrderProcess.name) ||\n        (orderProcess && orderProcess.name)\n      ) : (\n        <React.Fragment>\n          {ids.length} {intl.formatMessage(orderProcessMessages.orderProcesses)}\n        </React.Fragment>\n      )}\n    </b>\n  );\n\n  const isLoading = finalId && !orderProcess && !fetchedOrderProcess;\n\n  return (\n    <Modal\n      isOpen\n      variant=\"small\"\n      aria-label={intl.formatMessage(\n        orderProcessMessages.removeProcessAriaLabel,\n        { count: finalId ? 1 : ids.length }\n      )}\n      header={\n        <Title size=\"2xl\" headingLevel=\"h1\">\n          <ExclamationTriangleIcon\n            size=\"sm\"\n            fill=\"#f0ab00\"\n            className=\"pf-u-mr-sm\"\n          />\n          {intl.formatMessage(orderProcessMessages.removeProcessTitle, {\n            count: finalId ? 1 : ids.length\n          })}\n        </Title>\n      }\n      onClose={onCancel}\n      actions={[\n        <Button\n          id=\"submit-remove-order-process\"\n          key=\"submit\"\n          variant=\"danger\"\n          type=\"button\"\n          isDisabled={submitting}\n          onClick={onSubmit}\n        >\n          {submitting ? (\n            <React.Fragment>\n              <Spinner size=\"sm\" className=\"pf-u-mr-md\" />\n              {intl.formatMessage(actionMessages.deleting)}\n            </React.Fragment>\n          ) : (\n            intl.formatMessage(actionMessages.delete)\n          )}\n        </Button>,\n        <Button\n          id=\"cancel-remove-order-process\"\n          key=\"cancel\"\n          variant=\"link\"\n          type=\"button\"\n          isDisabled={submitting}\n          onClick={onCancel}\n        >\n          {intl.formatMessage(labelMessages.cancel)}\n        </Button>\n      ]}\n    >\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {isLoading ? (\n            <FormItemLoader />\n          ) : (\n            intl.formatMessage(orderProcessMessages.removeProcessDescription, {\n              name\n            })\n          )}\n        </Text>\n      </TextContent>\n    </Modal>\n  );\n};\n\nRemoveOrderProcessModal.propTypes = {\n  fetchData: PropTypes.func.isRequired,\n  ids: PropTypes.array,\n  resetSelectedOrderProcesses: PropTypes.func.isRequired\n};\n\nexport default RemoveOrderProcessModal;\n","import React, { Fragment, useEffect, useReducer } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Link, Route } from 'react-router-dom';\nimport {\n  Button,\n  Text,\n  TextContent,\n  TextVariants,\n  ToolbarItem\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { sortable, cellWidth } from '@patternfly/react-table';\nimport {\n  fetchOrderProcesses,\n  sortOrderProcesses\n} from '../../redux/actions/order-process-actions';\nimport { createRows } from './order-process-table-helpers';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport TopToolbar from '../../presentational-components/shared/top-toolbar';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport TableEmptyState from '../../presentational-components/shared/table-empty-state';\nimport { useIntl } from 'react-intl';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\nimport filteringMessages from '../../messages/filtering.messages';\nimport labelMessages from '../../messages/labels.messages';\nimport { StyledToolbarGroup } from '../../presentational-components/styled-components/toolbars';\nimport {\n  ADD_ORDER_PROCESS_ROUTE,\n  REMOVE_ORDER_PROCESS_ROUTE,\n  UPDATE_ORDER_PROCESS_ROUTE\n} from '../../constants/routes';\nimport AddOrderProcess from './add-order-process-modal';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport RemoveOrderProcess from './remove-order-process-modal';\nimport actionMessages from '../../messages/actions.messages';\nimport OrderProcessTableContext from './order-process-table-context';\nimport { Checkbox } from '@patternfly/react-core';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nconst columns = (intl, allSelected, selectAll) => [\n  {\n    title: (\n      <Checkbox onChange={selectAll} isChecked={allSelected} id=\"select-all\" />\n    ),\n    transforms: [cellWidth(1)]\n  },\n  {\n    title: intl.formatMessage(labelMessages.name),\n    transforms: [sortable]\n  },\n  {\n    title: intl.formatMessage(labelMessages.description),\n    transforms: [sortable]\n  },\n  {\n    title: intl.formatMessage(labelMessages.created),\n    transforms: [sortable]\n  }\n];\n\nconst debouncedFilter = asyncFormValidator(\n  (filter, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    return dispatch(\n      fetchOrderProcesses({ filterValue: filter, ...meta })\n    ).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst prepareChips = (filterValue, intl) =>\n  filterValue\n    ? [\n        {\n          category: intl.formatMessage(labelMessages.name),\n          key: 'name',\n          chips: [{ name: filterValue, value: filterValue }]\n        }\n      ]\n    : [];\n\nconst initialState = {\n  filter: '',\n  isFetching: true,\n  isFiltering: false,\n  selectedOrderProcesses: [],\n  allSelected: false,\n  rows: []\n};\n\nconst areAllSelected = (rows = [], selected) =>\n  rows.every((row) => selected.includes(row.id));\nconst unique = (value, index, self) => self.indexOf(value) === index;\n\nconst orderProcessesState = (state, action) => {\n  switch (action.type) {\n    case 'setRows':\n      return {\n        ...state,\n        rows: action.payload,\n        allSelected: areAllSelected(\n          action.payload,\n          state.selectedOrderProcesses\n        )\n      };\n    case 'setFetching':\n      return {\n        ...state,\n        isFetching: action.payload\n      };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'select':\n      return {\n        ...state,\n        allSelected: false,\n        selectedOrderProcesses: state.selectedOrderProcesses.includes(\n          action.payload\n        )\n          ? state.selectedOrderProcesses.filter((id) => id !== action.payload)\n          : [...state.selectedOrderProcesses, action.payload]\n      };\n    case 'selectAll':\n      return {\n        ...state,\n        selectedOrderProcesses: [\n          ...state.selectedOrderProcesses,\n          ...action.payload\n        ].filter(unique),\n        allSelected: true\n      };\n    case 'unselectAll':\n      return {\n        ...state,\n        selectedOrderProcesses: state.selectedOrderProcesses.filter(\n          (selected) => !action.payload.includes(selected)\n        ),\n        allSelected: false\n      };\n    case 'resetSelected':\n      return {\n        ...state,\n        selectedOrderProceses: [],\n        allSelected: false\n      };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst OrderProcesses = () => {\n  const viewState = useInitialUriHash();\n  const {\n    orderProcesses: { data, meta },\n    sortBy\n  } = useSelector(\n    ({ orderProcessReducer: { orderProcesses, sortBy } }) => ({\n      orderProcesses,\n      sortBy\n    }),\n    shallowEqual\n  );\n  const [\n    {\n      filterValue,\n      isFetching,\n      isFiltering,\n      selectedOrderProcesses,\n      allSelected,\n      rows\n    },\n    stateDispatch\n  ] = useReducer(orderProcessesState, {\n    ...initialState,\n    filterValue: viewState?.orderProcesses.filter || initialState.filterValue\n  });\n\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const history = useEnhancedHistory({ keepHash: true });\n  const setSelectedOrderProcesses = (id) =>\n    stateDispatch({ type: 'select', payload: id });\n\n  const updateOrderProcesses = (pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    return dispatch(fetchOrderProcesses(pagination))\n      .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n      .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'order-processes', secondaryNav: true });\n    updateOrderProcesses(\n      viewState?.orderProcesses\n        ? {\n            ...viewState.orderProcesses,\n            filterValue\n          }\n        : defaultSettings\n    );\n    scrollToTop();\n  }, []);\n\n  useEffect(() => {\n    stateDispatch({ type: 'setRows', payload: createRows(data) });\n  }, [data]);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      { ...meta, offset: 0 }\n    );\n  };\n\n  const routes = () => (\n    <Fragment>\n      <Route exact path={ADD_ORDER_PROCESS_ROUTE}>\n        <AddOrderProcess postMethod={updateOrderProcesses} />\n      </Route>\n      <Route exact path={REMOVE_ORDER_PROCESS_ROUTE}>\n        <RemoveOrderProcess\n          ids={selectedOrderProcesses}\n          fetchData={updateOrderProcesses}\n          resetSelectedOrderProcesses={() =>\n            stateDispatch({ type: 'resetSelected' })\n          }\n        />\n      </Route>\n      <Route exact path={UPDATE_ORDER_PROCESS_ROUTE}>\n        <AddOrderProcess edit />\n      </Route>\n    </Fragment>\n  );\n\n  const actionResolver = () => [\n    {\n      title: intl.formatMessage(actionMessages.edit),\n      onClick: (_event, _rowId, orderProcess) =>\n        history.push({\n          pathname: UPDATE_ORDER_PROCESS_ROUTE,\n          search: `?order_process=${orderProcess.id}`\n        })\n    },\n    {\n      title: intl.formatMessage(actionMessages.delete),\n      onClick: (_event, _rowId, orderProcess) =>\n        history.push({\n          pathname: REMOVE_ORDER_PROCESS_ROUTE,\n          search: `?order_process=${orderProcess.id}`\n        })\n    }\n  ];\n\n  const doSelectAll = () => {\n    return allSelected\n      ? stateDispatch({ type: 'unselectAll', payload: data.map((op) => op.id) })\n      : stateDispatch({ type: 'selectAll', payload: data.map((op) => op.id) });\n  };\n\n  const anyOrderProcessSelected = selectedOrderProcesses.length > 0;\n\n  const onSort = (_e, index, direction, { property }) => {\n    dispatch(sortOrderProcesses({ index, direction, property }));\n    return updateOrderProcesses({\n      ...meta,\n      filterValue\n    });\n  };\n\n  const toolbarButtons = () => (\n    <StyledToolbarGroup className=\"pf-u-pl-lg top-toolbar\">\n      <ToolbarItem>\n        <Link\n          id=\"add-order-process-link\"\n          to={{ pathname: ADD_ORDER_PROCESS_ROUTE }}\n        >\n          <Button\n            variant=\"primary\"\n            aria-label={intl.formatMessage(labelMessages.create)}\n          >\n            {intl.formatMessage(labelMessages.create)}\n          </Button>\n        </Link>\n      </ToolbarItem>\n      <ToolbarItem>\n        <Link\n          id=\"remove-multiple-order-processes'\"\n          className={anyOrderProcessSelected ? '' : 'disabled-link'}\n          to={{ pathname: REMOVE_ORDER_PROCESS_ROUTE }}\n        >\n          <Button\n            variant=\"secondary\"\n            isDisabled={!anyOrderProcessSelected}\n            aria-label={intl.formatMessage(\n              orderProcessesMessages.deleteOrderProcess\n            )}\n          >\n            {intl.formatMessage(actionMessages.delete)}\n          </Button>\n        </Link>\n      </ToolbarItem>\n    </StyledToolbarGroup>\n  );\n\n  return (\n    <Fragment>\n      <TopToolbar>\n        <TextContent className=\"pf-u-ml-md\">\n          <Text component={TextVariants.h1}>\n            {intl.formatMessage(orderProcessesMessages.title)}\n          </Text>\n        </TextContent>\n      </TopToolbar>\n      <OrderProcessTableContext.Provider\n        value={{ selectedOrderProcesses, setSelectedOrderProcesses }}\n      >\n        <TableToolbarView\n          sortBy={sortBy}\n          onSort={onSort}\n          rows={rows}\n          columns={columns(intl, allSelected, doSelectAll)}\n          routes={routes}\n          fetchData={updateOrderProcesses}\n          titlePlural={intl.formatMessage(orderProcessesMessages.title)}\n          titleSingular={intl.formatMessage(\n            orderProcessesMessages.orderProcess\n          )}\n          pagination={meta}\n          filterValue={filterValue}\n          onFilterChange={handleFilterChange}\n          isLoading={isFetching || isFiltering}\n          toolbarButtons={toolbarButtons}\n          actionResolver={actionResolver}\n          renderEmptyState={() => (\n            <TableEmptyState\n              title={\n                filterValue === ''\n                  ? intl.formatMessage(orderProcessesMessages.noOrderProcesses)\n                  : intl.formatMessage(filteringMessages.noResultsFound)\n              }\n              Icon={SearchIcon}\n              PrimaryAction={() =>\n                filterValue !== '' ? (\n                  <Button onClick={() => handleFilterChange('')} variant=\"link\">\n                    {intl.formatMessage(filteringMessages.clearFilters)}\n                  </Button>\n                ) : null\n              }\n              description={\n                filterValue === ''\n                  ? intl.formatMessage(orderProcessesMessages.noOrderProcesses)\n                  : intl.formatMessage(filteringMessages.noResultsDescription)\n              }\n            />\n          )}\n          activeFiltersConfig={{\n            filters: prepareChips(filterValue, intl),\n            onDelete: () => handleFilterChange('')\n          }}\n        />\n      </OrderProcessTableContext.Provider>\n    </Fragment>\n  );\n};\n\nexport default OrderProcesses;\n"],"sourceRoot":""}