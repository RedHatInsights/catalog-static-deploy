{"version":3,"sources":["webpack:///./src/smart-components/portfolio/remove-portfolio-modal.js"],"names":["RemovePortfolioModal","viewState","useQuery","portfolioId","portfolio","dispatch","useDispatch","useSelector","portfolioReducer","getPortfolioFromState","useHistory","push","goBack","metadata","user_capabilities","destroy","title","isOpen","isSmall","onClose","isFooterLeftAligned","actions","key","variant","type","id","onClick","PORTFOLIOS_ROUTE","removePortfolio","gutter","size","fill","component","TextVariants","p","name","propTypes","PropTypes","shape","count","number","limit","offset","filter","string","defaultProps","defaultSettings"],"mappings":"+RAqBMA,EAAuB,SAAC,GAAkB,IAAhBC,EAAgB,EAAhBA,UAAgB,EACTC,YAAS,CAAC,cAA3BC,EAD0B,YACrCC,UACHC,EAAWC,wBACXF,EAAYG,uBAAY,gBAAGC,EAAH,EAAGA,iBAAH,OAC5BC,YAAsBD,EAAkBL,MAJI,EAMrBO,cAAjBC,EANsC,EAMtCA,KAAMC,EANgC,EAMhCA,OAMd,OAAKR,GAUc,IAFfA,EAHFS,SACEC,kBAAqBC,QAKvB,kBAAC,IAAD,MAEA,kBAAC,QAAD,CACEC,MAAM,oBACNC,QAAM,EACNC,SAAO,EACPC,QAASP,EACTQ,qBAAmB,EACnBC,QAAS,CACP,kBAAC,SAAD,CACEC,IAAI,SACJC,QAAQ,SACRC,KAAK,SACLC,GAAG,2BACHC,QA9BS,WAEf,OADAf,EAAKgB,KACEtB,EAASuB,YAAgBzB,EAAaF,MAuBzC,WASA,kBAAC,SAAD,CAAQqB,IAAI,SAASC,QAAQ,OAAOC,KAAK,SAASE,QAASd,GAA3D,YAKF,kBAAC,QAAD,CAAOiB,OAAO,MACZ,kBAAC,YAAD,KACE,kBAAC,IAAD,CAAqBC,KAAK,KAAKC,KAAK,aAEtC,kBAAC,YAAD,KACE,kBAAC,cAAD,KACE,kBAAC,OAAD,CAAMC,UAAWC,eAAaC,GAA9B,iDACiD9B,EAAU+B,KAD3D,sBAvCD,MAkDXnC,EAAqBoC,UAAY,CAC/BnC,UAAWoC,IAAUC,MAAM,CACzBC,MAAOF,IAAUG,OACjBC,MAAOJ,IAAUG,OACjBE,OAAQL,IAAUG,OAClBG,OAAQN,IAAUO,UAItB5C,EAAqB6C,aAAe,CAClC5C,UAAW6C,KAGE9C","file":"js/remove-portfolio~5fa3c05e.f5430d66a49166f9b535.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { WarningTriangleIcon } from '@patternfly/react-icons';\nimport {\n  Modal,\n  Button,\n  Text,\n  TextVariants,\n  TextContent,\n  Split,\n  SplitItem\n} from '@patternfly/react-core';\nimport { removePortfolio } from '../../redux/actions/portfolio-actions';\nimport useQuery from '../../utilities/use-query';\nimport { getPortfolioFromState } from '../../helpers/portfolio/portfolio-helper';\nimport { PORTFOLIOS_ROUTE } from '../../constants/routes';\nimport { UnauthorizedRedirect } from '../error-pages/error-redirects';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nconst RemovePortfolioModal = ({ viewState }) => {\n  const [{ portfolio: portfolioId }] = useQuery(['portfolio']);\n  const dispatch = useDispatch();\n  const portfolio = useSelector(({ portfolioReducer }) =>\n    getPortfolioFromState(portfolioReducer, portfolioId)\n  );\n  const { push, goBack } = useHistory();\n  const onSubmit = () => {\n    push(PORTFOLIOS_ROUTE);\n    return dispatch(removePortfolio(portfolioId, viewState));\n  };\n\n  if (!portfolio) {\n    return null;\n  }\n\n  const {\n    metadata: {\n      user_capabilities: { destroy }\n    }\n  } = portfolio;\n\n  return destroy === false ? (\n    <UnauthorizedRedirect />\n  ) : (\n    <Modal\n      title=\"Delete Portfolio?\"\n      isOpen\n      isSmall\n      onClose={goBack}\n      isFooterLeftAligned\n      actions={[\n        <Button\n          key=\"submit\"\n          variant=\"danger\"\n          type=\"button\"\n          id=\"confirm-delete-portfolio\"\n          onClick={onSubmit}\n        >\n          Confirm\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" type=\"button\" onClick={goBack}>\n          Cancel\n        </Button>\n      ]}\n    >\n      <Split gutter=\"md\">\n        <SplitItem>\n          <WarningTriangleIcon size=\"xl\" fill=\"#f0ab00\" />\n        </SplitItem>\n        <SplitItem>\n          <TextContent>\n            <Text component={TextVariants.p}>\n              This action will permanently delete portfolio {portfolio.name} and\n              its data.\n            </Text>\n          </TextContent>\n        </SplitItem>\n      </Split>\n    </Modal>\n  );\n};\n\nRemovePortfolioModal.propTypes = {\n  viewState: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    filter: PropTypes.string\n  })\n};\n\nRemovePortfolioModal.defaultProps = {\n  viewState: defaultSettings\n};\n\nexport default RemovePortfolioModal;\n"],"sourceRoot":""}