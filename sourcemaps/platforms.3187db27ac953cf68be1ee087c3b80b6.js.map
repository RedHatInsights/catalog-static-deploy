{"version":3,"file":"js/platforms.303a9b0593fe10bf1ca1.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/cog-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/search-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/presentational-components/platform/platform-card.tsx","webpack:///./src/smart-components/platform/platforms.js","webpack:///./src/toolbar/schemas/platforms-toolbar.schema.js","webpack:///./node_modules/react-truncate/lib/Truncate.js","webpack:///./src/messages/filtering.messages.ts","webpack:///./src/messages/platforms.messages.ts","webpack:///./src/presentational-components/shared/card-common.tsx","webpack:///./src/presentational-components/styled-components/lazy-load-image.ts","webpack:///./src/presentational-components/shared/card-icon.tsx","webpack:///./src/presentational-components/shared/content-gallery-empty-state.tsx","webpack:///./src/presentational-components/styled-components/card.ts","webpack:///./src/presentational-components/styled-components/ellipsis-text-container.ts","webpack:///./src/presentational-components/styled-components/styled-gallery.tsx","webpack:///./src/helpers/platform/platform-helper-s.ts","webpack:///./src/redux/actions/platform-actions-s.ts","webpack:///./src/smart-components/common/async-pagination.tsx","webpack:///./src/smart-components/content-gallery/content-gallery.tsx"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.CogIconConfig = {\n  name: 'CogIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CogIcon = require('../createIcon').createIcon(exports.CogIconConfig);\nexports[\"default\"] = exports.CogIcon;","\"use strict\"\nexports.__esModule = true;\nexports.SearchIconConfig = {\n  name: 'SearchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.SearchIcon = require('../createIcon').createIcon(exports.SearchIconConfig);\nexports[\"default\"] = exports.SearchIcon;","import React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Title } from \"@patternfly/react-core/dist/esm/components/Title/Title.js\";\n/**\n * This is the title section of the pageHeader\n */\n\nvar PageHeaderTitle = function PageHeaderTitle(_ref) {\n  var className = _ref.className,\n      title = _ref.title;\n  var pageHeaderTitleClasses = classNames(className);\n  return /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h1\",\n    size: \"2xl\",\n    className: pageHeaderTitleClasses,\n    \"widget-type\": \"InsightsPageHeaderTitle\"\n  }, \" \", title, \" \");\n};\n\nexport default PageHeaderTitle;\nPageHeaderTitle.propTypes = {\n  title: propTypes.node.isRequired,\n  className: propTypes.string\n};","/* eslint-disable react/prop-types */\nimport React, { useReducer } from 'react';\nimport {\n  CardHeader,\n  CardFooter,\n  GalleryItem,\n  Text,\n  TextVariants,\n  TextContent,\n  Label,\n  Button,\n  Tooltip\n} from '@patternfly/react-core';\nimport ItemDetails, {\n  HeaderLevel,\n  HeaderTitle,\n  ItemDetailsProps\n} from '../shared/card-common';\n\nimport { PLATFORM_TEMPLATES_ROUTE } from '../../constants/routes';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport { StyledCard } from '../styled-components/styled-gallery';\nimport { StyledCardBody } from '../styled-components/card';\nimport CardIcon from '../shared/card-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport labelMessages from '../../messages/labels.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport { SyncAltIcon } from '@patternfly/react-icons';\nimport { refreshPlatform } from '../../redux/actions/platform-actions';\nimport { refreshPlatform as refreshPlatformS } from '../../redux/actions/platform-actions-s';\nimport platformsMessages from '../../messages/platforms.messages';\nimport { useDispatch } from 'react-redux';\nimport { delay } from '../../helpers/shared/helpers';\n\nconst TO_DISPLAY = ['description', 'modified'];\n\nexport interface PlatformInfo {\n  version?: string;\n  ansible_version?: string;\n}\n\nexport interface PlatformCardProps extends ItemDetailsProps {\n  name: string;\n  id: string;\n  availability_status?: string;\n  last_successful_refresh_at?: string;\n  refresh_started_at?: string;\n  refresh_finished_at?: string;\n  info?: PlatformInfo;\n  source_type_id: string;\n  imageUrl: string;\n}\n\nconst initialState = {\n  isFetching: false\n};\n\nconst platformCardState = (state: any, action: { type: any; payload: any }) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n  }\n\n  return state;\n};\n\nconst PlatformCard: React.ComponentType<PlatformCardProps> = ({\n  name,\n  id,\n  updateData,\n  ...props\n}) => {\n  const formatMessage = useFormatMessage();\n  const dispatch = useDispatch();\n\n  const [{ isFetching }, stateDispatch] = useReducer(\n    platformCardState,\n    initialState\n  );\n  const handleRefreshPlatform = (platformId: string) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.resolve(\n      dispatch(\n        window.catalog?.standalone\n          ? refreshPlatformS(platformId)\n          : refreshPlatform(platformId)\n      )\n    ).then(async () => {\n      await delay(10000);\n      stateDispatch({ type: 'setFetching', payload: false });\n      updateData();\n    });\n  };\n\n  return (\n    <GalleryItem>\n      <StyledCard key={id} ouiaId={`platform-${id}`}>\n        <CardHeader>\n          <HeaderLevel>\n            <HeaderTitle>\n              <CardIcon height={40} sourceId={id} />\n            </HeaderTitle>\n            <Tooltip\n              content={\n                <Text>{formatMessage(platformsMessages.refreshTooltip)}</Text>\n              }\n            >\n              <Button\n                id={`refresh-platform-${id}`}\n                ouiaId={`refresh-platform-${id}`}\n                variant=\"link\"\n                onClick={() => handleRefreshPlatform(id)}\n                isDisabled={isFetching}\n              >\n                {isFetching ? (\n                  <SyncAltIcon key={`refresh-${id}`} color=\"grey\" />\n                ) : (\n                  <SyncAltIcon key={`refresh-${id}`} color=\"blue\" />\n                )}\n              </Button>\n            </Tooltip>\n          </HeaderLevel>\n        </CardHeader>\n        <StyledCardBody>\n          <TextContent>\n            <CatalogLink\n              pathname={PLATFORM_TEMPLATES_ROUTE}\n              searchParams={{ platform: id }}\n            >\n              <Text\n                title={name}\n                className=\"pf-u-mb-0\"\n                component={TextVariants.h3}\n              >\n                <EllipsisTextContainer>{name}</EllipsisTextContainer>\n              </Text>\n            </CatalogLink>\n            {isFetching ? (\n              <TextContent className=\"pf-u-mb-md\">\n                <Text component={TextVariants.small} className=\"pf-u-mb-0\">\n                  Retrieving data.... &nbsp;\n                </Text>\n              </TextContent>\n            ) : (\n              props.last_successful_refresh_at && (\n                <TextContent className=\"pf-u-mb-md\">\n                  <Text component={TextVariants.small} className=\"pf-u-mb-0\">\n                    Last refreshed &nbsp;\n                    <DateFormat\n                      date={props.last_successful_refresh_at}\n                      type=\"relative\"\n                    />\n                  </Text>\n                </TextContent>\n              )\n            )}\n            {props.info && (\n              <TextContent className=\"pf-u-mb-md\">\n                <Text component={TextVariants.small} className=\"pf-u-mb-0\">\n                  {formatMessage(platformsMessages.platformVersion)}\n                </Text>\n                <Text component={TextVariants.small} className=\"pf-u-mb-0\">\n                  {props?.info?.version}\n                </Text>\n                <Text component={TextVariants.small} className=\"pf-u-mb-0\">\n                  {formatMessage(platformsMessages.ansibleVersion)}\n                </Text>\n                <Text component={TextVariants.small} className=\"pf-u-mb-0\">\n                  {props?.info?.ansible_version}\n                </Text>\n              </TextContent>\n            )}\n          </TextContent>\n          <ItemDetails {...{ name, ...props }} toDisplay={TO_DISPLAY} />\n        </StyledCardBody>\n        <CardFooter>\n          <Label\n            variant=\"filled\"\n            color={props.availability_status === 'available' ? 'green' : 'red'}\n          >\n            {props.availability_status === 'available'\n              ? formatMessage(labelMessages.available)\n              : formatMessage(labelMessages.notAvailable)}\n          </Label>\n        </CardFooter>\n      </StyledCard>\n    </GalleryItem>\n  );\n};\n\nexport default PlatformCard;\n","import React, {\n  Fragment,\n  useEffect,\n  useState,\n  useContext,\n  ReactNode\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Text, TextVariants } from '@patternfly/react-core';\nimport { SearchIcon, CogIcon } from '@patternfly/react-icons';\n\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport { fetchPlatforms as fetchPlatformsS } from '../../redux/actions/platform-actions-s';\nimport PlatformCard from '../../presentational-components/platform/platform-card';\nimport { createPlatformsToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport UserContext from '../../user-context';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport filteringMessages from '../../messages/filtering.messages';\nimport { PLATFORMS_DOC_URL } from '../../utilities/constants';\n\nconst Platforms = () => {\n  const formatMessage = useFormatMessage();\n  const [filterValue, setFilterValue] = useState('');\n  const { platforms, isLoading } = useSelector(\n    ({ platformReducer: { platforms, isPlatformDataLoading } }) => ({\n      platforms,\n      isLoading: isPlatformDataLoading\n    })\n  );\n  const dispatch = useDispatch();\n  const {\n    userIdentity: {\n      identity: {\n        user: { is_org_admin }\n      }\n    }\n  } = useContext(UserContext);\n\n  useEffect(() => {\n    dispatch(window.catalog?.standalone ? fetchPlatformsS() : fetchPlatforms());\n    scrollToTop();\n  }, []);\n  const items = window.catalog?.standalone ? platforms.results : platforms;\n  const filteredItems = items\n    ? {\n        items: items?.map((item) => (\n          <PlatformCard\n            ouiaId={`platform-${item.id}`}\n            key={item.id}\n            {...item}\n            updateData={() =>\n              dispatch(\n                window.catalog?.standalone\n                  ? fetchPlatformsS()\n                  : fetchPlatforms()\n              )\n            }\n          />\n        )),\n        isLoading: isLoading && items.length === 0\n      }\n    : {};\n\n  const FilterAction = () => (\n    <Button\n      ouiaId={'clear-filter'}\n      variant=\"link\"\n      onClick={() => setFilterValue('')}\n    >\n      {formatMessage(filteringMessages.clearFilters)}\n    </Button>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: filterValue && filterValue !== '' ? FilterAction : undefined,\n    title:\n      filterValue && filterValue !== ''\n        ? formatMessage(filteringMessages.noResults)\n        : formatMessage(platformsMessages.noPlatforms),\n    description:\n      filterValue && filterValue !== '' ? (\n        formatMessage(filteringMessages.noResultsDescription)\n      ) : (\n        <Text id=\"platform_doc_url\" component={TextVariants.p}>\n          {formatMessage(platformsMessages.platformsNoDataDescription)} &nbsp;\n          <a href={PLATFORMS_DOC_URL} target=\"_blank\" rel=\"noopener noreferrer\">\n            {formatMessage(platformsMessages.platformsDocTitle)}\n          </a>\n        </Text>\n      ),\n    Icon: filterValue && filterValue !== '' ? SearchIcon : CogIcon\n  };\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPlatformsToolbarSchema({\n          onFilterChange: (value) => setFilterValue(value),\n          searchValue: filterValue,\n          title: formatMessage(platformsMessages.title)\n        })}\n      />\n      <ContentGallery\n        {...filteredItems}\n        renderEmptyState={() => {\n          return <ContentGalleryEmptyState {...emptyStateProps} />;\n        }}\n      />\n    </Fragment>\n  );\n};\n\nexport default Platforms;\n","import AppTabs from '../../presentational-components/shared/app-tabs';\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nexport const createPlatformsToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  title\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: 'Filter by platform'\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields: []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsTopToolbarSchema = ({\n  title,\n  paddingBottom,\n  tabItems,\n  platformAvailable\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      paddingBottom,\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          fields: [\n            {\n              component: toolbarComponentTypes.TOOLBAR_GROUP,\n              key: 'platform-toolbar',\n              fields: [\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'platform-toolbar-group',\n                  fields: [\n                    {\n                      component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n                      key: 'platforms-toolbar-title',\n                      title\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.TOOLBAR_GROUP,\n              key: 'platform-toolbar',\n              alignment: 'alignRight',\n              fields: [\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'platform-label',\n                  alignment: 'alignRight',\n                  fields: [\n                    {\n                      component: toolbarComponentTypes.LABEL,\n                      key: 'platform-available-label',\n                      variant: 'outline',\n                      ...platformAvailable()\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          component: toolbarComponentTypes.LEVEL_ITEM,\n          key: 'tabs-level-item',\n          fields: tabItems\n            ? [\n                {\n                  component: AppTabs,\n                  key: 'platform-tabs',\n                  tabItems\n                }\n              ]\n            : []\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsFilterToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  meta,\n  apiRequest,\n  filterPlaceholder\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOOLBAR,\n      key: 'platforms-filter-toolbar',\n      className: 'pf-u-pt-md pf-u-pb-md pf-u-pr-lg pf-u-pl-lg',\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          className: 'pf-m-grow',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: filterPlaceholder\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields:\n                meta.count > 0\n                  ? [\n                      {\n                        component: AsyncPagination,\n                        key: 'platform-pagination',\n                        apiRequest,\n                        meta,\n                        isCompact: true\n                      }\n                    ]\n                  : []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n    _inherits(Truncate, _Component);\n\n    function Truncate() {\n        var _ref;\n\n        _classCallCheck(this, Truncate);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n        _this.state = {};\n        _this.styles = {\n            ellipsis: {\n                position: 'fixed',\n                visibility: 'hidden',\n                top: 0,\n                left: 0\n            }\n        };\n\n\n        _this.elements = {};\n\n        _this.onResize = _this.onResize.bind(_this);\n        _this.onTruncate = _this.onTruncate.bind(_this);\n        _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n        _this.measureWidth = _this.measureWidth.bind(_this);\n        _this.getLines = _this.getLines.bind(_this);\n        _this.renderLine = _this.renderLine.bind(_this);\n        return _this;\n    }\n\n    _createClass(Truncate, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var text = this.elements.text,\n                calcTargetWidth = this.calcTargetWidth,\n                onResize = this.onResize;\n\n\n            var canvas = document.createElement('canvas');\n            this.canvasContext = canvas.getContext('2d');\n\n            calcTargetWidth(function () {\n                // Node not needed in document tree to read its content\n                if (text) {\n                    text.parentNode.removeChild(text);\n                }\n            });\n\n            window.addEventListener('resize', onResize);\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            // Render was based on outdated refs and needs to be rerun\n            if (this.props.children !== prevProps.children) {\n                this.forceUpdate();\n            }\n\n            // If the width prop has changed, recalculate size of contents\n            if (this.props.width !== prevProps.width) {\n                this.calcTargetWidth();\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            var ellipsis = this.elements.ellipsis,\n                onResize = this.onResize,\n                timeout = this.timeout;\n\n\n            ellipsis.parentNode.removeChild(ellipsis);\n\n            window.removeEventListener('resize', onResize);\n\n            window.cancelAnimationFrame(timeout);\n        }\n\n        // Shim innerText to consistently break lines at <br/> but not at \\n\n\n    }, {\n        key: 'innerText',\n        value: function innerText(node) {\n            var div = document.createElement('div');\n            var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n\n            div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n\n            var text = div[contentKey];\n\n            var test = document.createElement('div');\n            test.innerHTML = 'foo<br/>bar';\n\n            if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n                div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n                text = div[contentKey];\n            }\n\n            return text;\n        }\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            this.calcTargetWidth();\n        }\n    }, {\n        key: 'onTruncate',\n        value: function onTruncate(didTruncate) {\n            var onTruncate = this.props.onTruncate;\n\n\n            if (typeof onTruncate === 'function') {\n                this.timeout = window.requestAnimationFrame(function () {\n                    onTruncate(didTruncate);\n                });\n            }\n        }\n    }, {\n        key: 'calcTargetWidth',\n        value: function calcTargetWidth(callback) {\n            var target = this.elements.target,\n                calcTargetWidth = this.calcTargetWidth,\n                canvasContext = this.canvasContext,\n                width = this.props.width;\n\n            // Calculation is no longer relevant, since node has been removed\n\n            if (!target) {\n                return;\n            }\n\n            var targetWidth = width ||\n            // Floor the result to deal with browser subpixel precision\n            Math.floor(target.parentNode.getBoundingClientRect().width);\n\n            // Delay calculation until parent node is inserted to the document\n            // Mounting order in React is ChildComponent, ParentComponent\n            if (!targetWidth) {\n                return window.requestAnimationFrame(function () {\n                    return calcTargetWidth(callback);\n                });\n            }\n\n            var style = window.getComputedStyle(target);\n\n            var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n\n            canvasContext.font = font;\n\n            this.setState({\n                targetWidth: targetWidth\n            }, callback);\n        }\n    }, {\n        key: 'measureWidth',\n        value: function measureWidth(text) {\n            return this.canvasContext.measureText(text).width;\n        }\n    }, {\n        key: 'ellipsisWidth',\n        value: function ellipsisWidth(node) {\n            return node.offsetWidth;\n        }\n    }, {\n        key: 'trimRight',\n        value: function trimRight(text) {\n            return text.replace(/\\s+$/, '');\n        }\n    }, {\n        key: 'getLines',\n        value: function getLines() {\n            var elements = this.elements,\n                _props = this.props,\n                numLines = _props.lines,\n                ellipsis = _props.ellipsis,\n                trimWhitespace = _props.trimWhitespace,\n                targetWidth = this.state.targetWidth,\n                innerText = this.innerText,\n                measureWidth = this.measureWidth,\n                onTruncate = this.onTruncate,\n                trimRight = this.trimRight;\n\n\n            var lines = [];\n            var text = innerText(elements.text);\n            var textLines = text.split('\\n').map(function (line) {\n                return line.split(' ');\n            });\n            var didTruncate = true;\n            var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n            for (var line = 1; line <= numLines; line++) {\n                var textWords = textLines[0];\n\n                // Handle newline\n                if (textWords.length === 0) {\n                    lines.push();\n                    textLines.shift();\n                    line--;\n                    continue;\n                }\n\n                var resultLine = textWords.join(' ');\n\n                if (measureWidth(resultLine) <= targetWidth) {\n                    if (textLines.length === 1) {\n                        // Line is end of text and fits without truncating\n                        didTruncate = false;\n\n                        lines.push(resultLine);\n                        break;\n                    }\n                }\n\n                if (line === numLines) {\n                    // Binary search determining the longest possible line inluding truncate string\n                    var textRest = textWords.join(' ');\n\n                    var lower = 0;\n                    var upper = textRest.length - 1;\n\n                    while (lower <= upper) {\n                        var middle = Math.floor((lower + upper) / 2);\n\n                        var testLine = textRest.slice(0, middle + 1);\n\n                        if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n                            lower = middle + 1;\n                        } else {\n                            upper = middle - 1;\n                        }\n                    }\n\n                    var lastLineText = textRest.slice(0, lower);\n\n                    if (trimWhitespace) {\n                        lastLineText = trimRight(lastLineText);\n\n                        // Remove blank lines from the end of text\n                        while (!lastLineText.length && lines.length) {\n                            var prevLine = lines.pop();\n\n                            lastLineText = trimRight(prevLine);\n                        }\n                    }\n\n                    resultLine = React.createElement(\n                        'span',\n                        null,\n                        lastLineText,\n                        ellipsis\n                    );\n                } else {\n                    // Binary search determining when the line breaks\n                    var _lower = 0;\n                    var _upper = textWords.length - 1;\n\n                    while (_lower <= _upper) {\n                        var _middle = Math.floor((_lower + _upper) / 2);\n\n                        var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n                        if (measureWidth(_testLine) <= targetWidth) {\n                            _lower = _middle + 1;\n                        } else {\n                            _upper = _middle - 1;\n                        }\n                    }\n\n                    // The first word of this line is too long to fit it\n                    if (_lower === 0) {\n                        // Jump to processing of last line\n                        line = numLines - 1;\n                        continue;\n                    }\n\n                    resultLine = textWords.slice(0, _lower).join(' ');\n                    textLines[0].splice(0, _lower);\n                }\n\n                lines.push(resultLine);\n            }\n\n            onTruncate(didTruncate);\n\n            return lines;\n        }\n    }, {\n        key: 'renderLine',\n        value: function renderLine(line, i, arr) {\n            if (i === arr.length - 1) {\n                return React.createElement(\n                    'span',\n                    { key: i },\n                    line\n                );\n            } else {\n                var br = React.createElement('br', { key: i + 'br' });\n\n                if (line) {\n                    return [React.createElement(\n                        'span',\n                        { key: i },\n                        line\n                    ), br];\n                } else {\n                    return br;\n                }\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var target = this.elements.target,\n                _props2 = this.props,\n                children = _props2.children,\n                ellipsis = _props2.ellipsis,\n                lines = _props2.lines,\n                spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n                targetWidth = this.state.targetWidth,\n                getLines = this.getLines,\n                renderLine = this.renderLine,\n                onTruncate = this.onTruncate;\n\n            var text = void 0;\n\n            var mounted = !!(target && targetWidth);\n\n            if (typeof window !== 'undefined' && mounted) {\n                if (lines > 0) {\n                    text = getLines().map(renderLine);\n                } else {\n                    text = children;\n\n                    onTruncate(false);\n                }\n            }\n\n            delete spanProps.onTruncate;\n            delete spanProps.trimWhitespace;\n\n            return React.createElement(\n                'span',\n                _extends({}, spanProps, { ref: function ref(targetEl) {\n                        _this2.elements.target = targetEl;\n                    } }),\n                React.createElement(\n                    'span',\n                    null,\n                    text\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(textEl) {\n                            _this2.elements.text = textEl;\n                        } },\n                    children\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(ellipsisEl) {\n                            _this2.elements.ellipsis = ellipsisEl;\n                        }, style: this.styles.ellipsis },\n                    ellipsis\n                )\n            );\n        }\n    }]);\n\n    return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n    children: PropTypes.node,\n    ellipsis: PropTypes.node,\n    lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n    trimWhitespace: PropTypes.bool,\n    width: PropTypes.number,\n    onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n    children: '',\n    ellipsis: '…',\n    lines: 1,\n    trimWhitespace: false,\n    width: 0\n};\nexport default Truncate;\n;\n","import { defineMessages } from 'react-intl';\n\nconst filteringMessages = defineMessages({\n  noItems: {\n    id: 'common.filtering.noItems',\n    defaultMessage: 'No items found'\n  },\n  filterByProduct: {\n    id: 'common.filtering.filterByProduct',\n    defaultMessage: 'Filter by product'\n  },\n  noResults: {\n    id: 'common.filtering.noResults',\n    defaultMessage: 'No results found'\n  },\n  noResultsDescription: {\n    id: 'common.filtering.noResultsDescription',\n    defaultMessage:\n      'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n  },\n  clearFilters: {\n    id: 'common.filtering.clear-filters',\n    defaultMessage: 'Clear all filters'\n  },\n  noProducts: {\n    id: 'common.filtering.no-products',\n    defaultMessage: 'No products yet'\n  },\n  noRecords: {\n    id: 'commonMessages.noRecords',\n    defaultMessage: 'No records'\n  },\n  filterByTitle: {\n    id: 'tableToolbar.filterByTitle',\n    defaultMessage: 'Filter by {title}'\n  },\n  noResultsFound: {\n    id: 'tableToolbar.noResultsFound',\n    defaultMessage: 'No results found'\n  },\n  noResult: {\n    id: 'tableToolbar.noResult',\n    defaultMessage: 'No {results}'\n  },\n  unknown: {\n    id: 'commonMessages.unknown',\n    defaultMessage: 'Unknown'\n  }\n});\n\nexport default filteringMessages;\n","import { defineMessages } from 'react-intl';\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  platformsNoDataDescription: {\n    id: 'platforms.list.configure-source',\n    defaultMessage:\n      'Ansible Automation Services Catalog can be added by following the'\n  },\n  platformsDocTitle: {\n    id: 'platforms.doc.title',\n    defaultMessage: 'Ansible Automation Platform 2.0 BETA documentation'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage: 'Go to Sources'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  },\n  platformVersion: {\n    id: 'platforms.version',\n    defaultMessage: 'Platform version'\n  },\n  ansibleVersion: {\n    id: 'platforms.ansible.version',\n    defaultMessage: 'Ansible version'\n  },\n  platformSummary: {\n    id: 'platforms.summary',\n    defaultMessage: 'Summary'\n  },\n  platformDetails: {\n    id: 'platforms.details',\n    defaultMessage: 'Details'\n  },\n  platformActivity: {\n    id: 'platforms.activity',\n    defaultMessage: 'Activity'\n  },\n  cloudConnectorId: {\n    id: 'platform.cloudConnectorId',\n    defaultMessage: 'RedHat Connect Client Id'\n  },\n  refreshState: {\n    id: 'platforms.refreshState',\n    defaultMessage: 'Refresh state'\n  },\n  refreshStarted: {\n    id: 'platforms.refreshStarted',\n    defaultMessage: 'Refresh started'\n  },\n  refreshFinished: {\n    id: 'platforms.refreshFinished',\n    defaultMessage: 'Refresh finished'\n  },\n  lastSuccessfulRefresh: {\n    id: 'platforms.lastSuccessfulRefresh',\n    defaultMessage: 'Last successful refresh'\n  },\n  lastChecked: {\n    id: 'platforms.lastChecked',\n    defaultMessage: 'Last checked'\n  },\n  lastAvailable: {\n    id: 'platforms.lastAvailable',\n    defaultMessage: 'Last available'\n  },\n  enabled: {\n    id: 'platforms.enabled',\n    defaultMessage: 'Enabled'\n  },\n  availabilityStatus: {\n    id: 'platforms.availabilityStatus',\n    defaultMessage: 'Availability status'\n  },\n  dateAdded: {\n    id: 'platforms.dateAdded',\n    defaultMessage: 'Date added'\n  },\n  refreshTooltip: {\n    id: 'platforms.refreshTooltip',\n    defaultMessage: 'Refresh platform'\n  },\n  lastRefreshMessage: {\n    id: 'platforms.lastRefreshMessage',\n    defaultMessage: 'Last refresh message'\n  },\n  availabilityMessage: {\n    id: 'platforms.availabilityMessage',\n    defaultMessage: 'Availability message'\n  }\n});\n\nexport default platformsMessages;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { AnyObject } from '../../types/common-types';\nimport Truncate from 'react-truncate';\nimport { Level, LevelItem, Tooltip } from '@patternfly/react-core';\n\nconst CardPropText = styled.div`\n  overflow: hidden;\n`;\n\nexport const HeaderTitle = styled(LevelItem)`\n  max-width: calc(100% - 80px);\n  width: calc(100% - 80px);\n`;\n\nexport const HeaderLevel = styled(Level)`\n  width: 100%;\n`;\n\nexport interface ItemDetailsProps extends AnyObject {\n  toDisplay?: string[];\n}\n\nconst ItemDetails: React.ComponentType<ItemDetailsProps> = ({\n  toDisplay = [],\n  ...item\n}) => (\n  <Fragment>\n    {toDisplay.map((prop) => (\n      <Truncate\n        key={`tcard-prop-${prop}`}\n        lines={3}\n        ellipsis={\n          <Tooltip content={<div>{item[prop]}</div>}>\n            <span>...</span>\n          </Tooltip>\n        }\n      >\n        {<CardPropText key={`card-prop-${prop}`}>{item[prop]}</CardPropText>}\n      </Truncate>\n    ))}\n  </Fragment>\n);\n\nexport default ItemDetails;\n","import styled from 'styled-components';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst StyledLazyLoadImage = styled(LazyLoadImage)`\n  height: ${({ height, hidden }) => (hidden ? '0px' : `${height}px` || '40px')};\n  display: ${({ hidden }) => (hidden ? 'none' : 'inherit')};\n  float: ${({ hidden }) => (hidden ? 'left' : 'inherit')};\n  width: ${({ hidden }) => (hidden ? 0 : 'inherit')};\n`;\n\nexport default StyledLazyLoadImage;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\n\nimport { IconPlaceholder } from './loader-placeholders';\nimport CardIconDefault from '../../assets/images/card-icon-default.svg';\nimport StyledLazyLoadImage from '../styled-components/lazy-load-image';\nimport { CatalogRootState } from '../../types/redux';\nimport { StringObject } from '../../types/common-types';\n\ninterface CardIconContainerProps {\n  height: number;\n}\nconst CardIconContainer = styled.div<CardIconContainerProps>`\n  display: inline-block;\n  height: ${({ height }) => `${height}px`};\n`;\n\nexport interface CardIconProps {\n  src?: string;\n  height?: number;\n  sourceId?: string;\n}\nconst CardIcon: React.ComponentType<CardIconProps> = ({\n  src,\n  height = 40,\n  sourceId\n}) => {\n  const [isLoaded, setLoaded] = useState(false);\n  const [isUnknown, setUnknown] = useState(false);\n  const platformIconMapping = useSelector<CatalogRootState, StringObject>(\n    ({ platformReducer: { platformIconMapping } }) => platformIconMapping\n  );\n  const defaultIcon = sourceId\n    ? platformIconMapping[sourceId]\n    : CardIconDefault;\n\n  return (\n    <CardIconContainer height={height}>\n      {!isLoaded && <IconPlaceholder height={height} />}\n      <StyledLazyLoadImage\n        threshold={2000}\n        delayTime={0}\n        hidden={!isLoaded}\n        height={isLoaded ? height : 0}\n        onError={() => setUnknown(true)}\n        onLoad={() => setLoaded(true)}\n        src={!src || isUnknown ? defaultIcon : src}\n      />\n    </CardIconContainer>\n  );\n};\n\nexport default CardIcon;\n","/* eslint-disable react/prop-types */\nimport React, { ReactNode } from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants,\n  EmptyStateVariant\n} from '@patternfly/react-core';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nexport interface ContentGalleryEmptyStateProps {\n  title: string;\n  Icon: React.ComponentType;\n  description?: ReactNode;\n  PrimaryAction?: React.ComponentType;\n  renderDescription?: () => ReactNode;\n}\n\nconst ContentGalleryEmptyState: React.ComponentType<ContentGalleryEmptyStateProps> = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription = () => null\n}) => (\n  <div className=\"pf-u-mt-xl\">\n    <EmptyState variant=\"large\">\n      <EmptyStateIcon icon={Icon} />\n      <TextContent>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </TextContent>\n      <EmptyStateBody>\n        {description}\n        {renderDescription()}\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        {PrimaryAction && <PrimaryAction />}\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </div>\n);\n\nexport default ContentGalleryEmptyState;\n\nexport interface EmptyStatePrimaryAction {\n  url: string;\n  label: string;\n  hasPermission?: boolean;\n  id?: string;\n}\nexport const EmptyStatePrimaryAction: React.ComponentType<EmptyStatePrimaryAction> = ({\n  url,\n  label,\n  hasPermission = false,\n  id\n}) =>\n  hasPermission ? (\n    <CatalogLink id={id} pathname={url} preserveSearch>\n      <Button variant=\"primary\">{label}</Button>\n    </CatalogLink>\n  ) : null;\n","import styled from 'styled-components';\nimport { CardBody } from '@patternfly/react-core';\n\nexport const StyledCardBody = styled(CardBody)`\n  height: 230px;\n  overflow: hidden;\n  padding: 0 !important;\n  margin: 0 24px 16px;\n`;\n","import styled from 'styled-components';\n\nconst EllipsisTextContainer = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nexport default EllipsisTextContainer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Card, GalleryItem } from '@patternfly/react-core';\n\nexport const StyledCard = styled(Card)`\n  height: 330px;\n  position: relative;\n`;\n\nexport const StyledGalleryItem = styled(({ isDisabled, ...props }) => (\n  <GalleryItem {...props} />\n))`\n  position: relative;\n  ::after {\n    display: ${({ isDisabled }) => (isDisabled ? 'block' : 'none')};\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    content: '';\n    background-color: rgba(210, 210, 210, 0.5);\n    z-index: 1;\n    cursor: progress;\n  }\n`;\n","import { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport {\n  CATALOG_API_BASE,\n  CATALOG_INVENTORY_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings, PaginationConfiguration } from '../shared/pagination';\nimport {\n  Source,\n  ServiceOffering,\n  ServiceInventory\n} from '@redhat-cloud-services/sources-client';\nimport { ApiCollectionResponse, SourceDetails } from '../../types/common-types';\nconst axiosInstance = getAxiosInstance();\nconst { post } = getGraphqlInstance();\n\nexport const getPlatforms = (): Promise<SourceDetails> =>\n  axiosInstance.get(`${CATALOG_API_BASE}/sources/`);\n\nexport const getPlatform = (platformId: string): Promise<Source> => {\n  return axiosInstance.get(`${CATALOG_API_BASE}/sources/${platformId}/`);\n};\n\nexport const refreshPlatform = (platformId: string): Promise<Source> => {\n  return axiosInstance.patch(\n    `${CATALOG_API_BASE}/sources/${platformId}/refresh/`\n  );\n};\n\nexport const getPlatformItems = (\n  platformId: string,\n  filter?: string,\n  options?: PaginationConfiguration\n): Promise<ApiCollectionResponse<ServiceOffering>> => {\n  if (platformId) {\n    const filterQuery = filter ? `?name=${filter}` : '';\n    const optionsQuery = options\n      ? `page_size=${options.limit}&page=${options.offset || 1}`\n      : '';\n    return axiosInstance.get(\n      `${CATALOG_API_BASE}/sources/${platformId}/service_offerings/${filterQuery}${\n        filter ? '&' : '?'\n      }${optionsQuery}`\n    );\n  } else {\n    return axiosInstance.get(`${CATALOG_API_BASE}/service_offerings/`);\n  }\n};\n\nexport const getPlatformInventories = (\n  platformId: string,\n  filter = '',\n  options = defaultSettings\n): Promise<ApiCollectionResponse<ServiceInventory>> => {\n  if (platformId) {\n    const filterQuery = filter ? `name=${filter}` : '';\n    return axiosInstance.get(\n      `${CATALOG_API_BASE}/sources/${platformId}/service_inventories/?${filterQuery}${\n        options ? `&page_size=${options.limit}&page=${options.offset || 1}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${CATALOG_API_BASE}/service_inventories/?page_size=${\n        options.limit\n      }&page=${options.offset || 1}`\n    );\n  }\n};\n","import * as ActionTypes from '../action-types';\nimport * as PlatformHelper from '../../helpers/platform/platform-helper-s';\nimport { Dispatch } from 'redux';\nimport {\n  ServiceInventory,\n  ServiceOffering,\n  Source\n} from '@redhat-cloud-services/sources-client';\nimport { AsyncMiddlewareAction } from '../../types/redux';\nimport { ApiCollectionResponse, SourceDetails } from '../../types/common-types';\nimport { PaginationConfiguration } from '../../helpers/shared/pagination';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nexport const fetchPlatforms = () => (\n  dispatch: Dispatch\n): Promise<{ type: string; payload: SourceDetails }> => {\n  dispatch({ type: `${ActionTypes.FETCH_PLATFORMS}_PENDING` });\n  return PlatformHelper.getPlatforms()\n    .then((results) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_FULFILLED`,\n        payload: results\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchPlatformItems = (\n  platformId: string,\n  filter: string,\n  options: PaginationConfiguration\n): AsyncMiddlewareAction<ApiCollectionResponse<ServiceOffering>> => ({\n  type: ActionTypes.FETCH_PLATFORM_ITEMS,\n  payload: PlatformHelper.getPlatformItems(platformId, filter, options),\n  meta: {\n    platformId,\n    filter,\n    ...options\n  }\n});\n\nexport const fetchMultiplePlatformItems = (\n  platformsId: string[]\n): {\n  type: string;\n  payload: Promise<\n    [] | { [x: string]: ApiCollectionResponse<ServiceOffering> }\n  >;\n} => {\n  const platformPromisses = platformsId.map((platformId) =>\n    PlatformHelper.getPlatformItems(platformId).then((results) => ({\n      [platformId]: results\n    }))\n  );\n  return {\n    type: ActionTypes.FETCH_MULTIPLE_PLATFORM_ITEMS,\n    payload: Promise.all(platformPromisses).then((results) =>\n      results.reduce(\n        (acc, curr) => ({\n          ...acc,\n          ...curr\n        }),\n        {}\n      )\n    )\n  };\n};\n\nexport const fetchSelectedPlatform = (\n  id: string\n): AsyncMiddlewareAction<Source> => ({\n  type: ActionTypes.FETCH_PLATFORM,\n  payload: PlatformHelper.getPlatform(id)\n});\n\nexport const fetchPlatformInventories = (\n  platformId: string,\n  filter: string,\n  options: PaginationConfiguration\n): AsyncMiddlewareAction<ApiCollectionResponse<ServiceInventory>> => ({\n  type: ActionTypes.FETCH_PLATFORM_INVENTORIES,\n  payload: PlatformHelper.getPlatformInventories(platformId, filter, options)\n});\n\nexport const refreshPlatform = (platformId: string) => (\n  dispatch: Dispatch\n): AsyncMiddlewareAction => {\n  return dispatch({\n    type: ActionTypes.REFRESH_PLATFORM,\n    payload: PlatformHelper.refreshPlatform(platformId)\n      .then(() =>\n        dispatch(\n          addNotification({\n            variant: 'success',\n            title: 'Success starting the platform refresh',\n            dismissable: true,\n            description: 'The platform refresh started successfully'\n          })\n        )\n      )\n      .catch((error) => {\n        if (error.status === 429) {\n          dispatch(\n            addNotification({\n              variant: 'info',\n              title: 'Platform refresh in progress',\n              dismissable: true,\n              description: 'Platform refresh already running.'\n            })\n          );\n        } else {\n          dispatch({\n            type: `${ActionTypes.REFRESH_PLATFORM}_REJECTED`,\n            payload: error\n          });\n        }\n      })\n  });\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { OnPerPageSelect, OnSetPage, Pagination } from '@patternfly/react-core';\n\nimport {\n  getCurrentPage,\n  getNewPage,\n  PaginationConfiguration\n} from '../../helpers/shared/pagination';\nimport { AnyObject } from '@data-driven-forms/react-form-renderer';\n\nexport interface AsyncPaginationProps<T = any> extends AnyObject {\n  meta: PaginationConfiguration;\n  apiRequest: (...args: any[]) => Promise<T>;\n  apiProps?: any;\n  className?: string;\n  isCompact?: boolean;\n}\nconst AsyncPagination: React.ComponentType<AsyncPaginationProps> = ({\n  meta: { limit = 50, count = 0, offset = 0 },\n  apiProps,\n  apiRequest,\n  className = '',\n  isCompact = false,\n  ...props\n}) => {\n  const handleOnPerPageSelect: OnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage: OnSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        dropDirection=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default AsyncPagination;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment, ReactNode } from 'react';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { Text, TextVariants, Gallery } from '@patternfly/react-core';\n\nimport { CardLoader } from '../../presentational-components/shared/loader-placeholders';\nimport filteringMessages from '../../messages/filtering.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst NoItems = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <div>\n      <Text component={TextVariants.h1}>\n        {formatMessage(filteringMessages.noItems)}\n      </Text>\n    </div>\n  );\n};\n\nexport interface ContentGalleryProps {\n  isLoading?: boolean;\n  items?: ReactNode[];\n  renderEmptyState?: () => ReactNode;\n}\nconst ContentGallery: React.ComponentType<ContentGalleryProps> = ({\n  isLoading,\n  items,\n  renderEmptyState\n}) => (\n  <Fragment>\n    {isLoading ? (\n      <CardLoader />\n    ) : items?.length === 0 ? (\n      renderEmptyState ? (\n        renderEmptyState()\n      ) : (\n        <NoItems />\n      )\n    ) : (\n      <Section type=\"content\">\n        <Gallery hasGutter className=\"content-gallery\">\n          {items}\n        </Gallery>\n      </Section>\n    )}\n  </Fragment>\n);\n\nexport default ContentGallery;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","PageHeaderTitle","_ref","className","title","pageHeaderTitleClasses","headingLevel","size","propTypes","TO_DISPLAY","initialState","isFetching","platformCardState","state","action","type","payload","id","updateData","props","formatMessage","dispatch","useReducer","stateDispatch","GalleryItem","key","ouiaId","CardHeader","sourceId","Tooltip","content","Text","Button","variant","onClick","platformId","Promise","resolve","window","catalog","standalone","then","handleRefreshPlatform","isDisabled","SyncAltIcon","color","TextContent","pathname","searchParams","platform","component","TextVariants","last_successful_refresh_at","DateFormat","date","info","version","ansible_version","toDisplay","CardFooter","Label","availability_status","useFormatMessage","useState","filterValue","setFilterValue","useSelector","platformReducer","platforms","isLoading","isPlatformDataLoading","useDispatch","useContext","UserContext","userIdentity","identity","user","is_org_admin","useEffect","fetchPlatformsS","fetchPlatforms","scrollToTop","items","results","filteredItems","map","item","length","emptyStateProps","PrimaryAction","filteringMessages","undefined","platformsMessages","description","href","PLATFORMS_DOC_URL","target","rel","Icon","SearchIcon","CogIcon","Fragment","schema","createPlatformsToolbarSchema","onFilterChange","value","searchValue","renderEmptyState","fields","toolbarComponentTypes","placeholder","createPlatformsTopToolbarSchema","paddingBottom","tabItems","platformAvailable","alignment","AppTabs","createPlatformsFilterToolbarSchema","meta","apiRequest","filterPlaceholder","count","AsyncPagination","isCompact","_extends","Object","assign","i","arguments","source","prototype","hasOwnProperty","call","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","Truncate","_Component","this","_len","args","Array","_key","_this","__proto__","getPrototypeOf","apply","concat","styles","ellipsis","position","visibility","top","left","elements","onResize","bind","onTruncate","calcTargetWidth","measureWidth","getLines","renderLine","subClass","superClass","create","constructor","setPrototypeOf","_inherits","text","canvas","document","createElement","canvasContext","getContext","parentNode","removeChild","addEventListener","prevProps","children","forceUpdate","timeout","removeEventListener","cancelAnimationFrame","node","div","contentKey","HTMLElement","innerHTML","replace","test","didTruncate","requestAnimationFrame","callback","targetWidth","Math","floor","getBoundingClientRect","style","getComputedStyle","font","join","setState","measureText","offsetWidth","_props","numLines","lines","trimWhitespace","innerText","trimRight","textLines","split","line","ellipsisWidth","textWords","resultLine","push","textRest","lower","upper","middle","slice","lastLineText","pop","_lower","_upper","_middle","splice","shift","arr","br","_this2","_props2","spanProps","obj","keys","indexOf","_objectWithoutProperties","ref","targetEl","textEl","ellipsisEl","Component","defaultProps","noItems","defaultMessage","filterByProduct","noResults","noResultsDescription","clearFilters","noProducts","noRecords","filterByTitle","noResultsFound","noResult","unknown","workflowColumn","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","platformsNoDataDescription","platformsDocTitle","connectSource","contactAdmin","noPlatforms","offeringTitle","offeringParameters","platformVersion","ansibleVersion","platformSummary","platformDetails","platformActivity","cloudConnectorId","refreshState","refreshStarted","refreshFinished","lastSuccessfulRefresh","lastChecked","lastAvailable","enabled","availabilityStatus","dateAdded","refreshTooltip","lastRefreshMessage","availabilityMessage","CardPropText","HeaderTitle","LevelItem","HeaderLevel","Level","prop","LazyLoadImage","CardIconContainer","src","isLoaded","setLoaded","isUnknown","setUnknown","platformIconMapping","defaultIcon","threshold","delayTime","hidden","onError","onLoad","renderDescription","EmptyState","EmptyStateIcon","icon","EmptyStateBody","EmptyStateSecondaryActions","EmptyStatePrimaryAction","url","label","hasPermission","preserveSearch","StyledCardBody","CardBody","StyledCard","Card","StyledGalleryItem","axiosInstance","refreshPlatform","patch","getPlatformItems","filter","options","filterQuery","optionsQuery","limit","offset","get","getPlatformInventories","catch","error","fetchPlatformItems","fetchSelectedPlatform","fetchPlatformInventories","dismissable","status","apiProps","Pagination","perPage","itemCount","onPerPageSelect","_event","page","onSetPage","number","debounce","request","dropDirection","NoItems","Gallery","hasGutter"],"sourceRoot":""}