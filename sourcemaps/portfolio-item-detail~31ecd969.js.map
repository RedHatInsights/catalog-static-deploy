{"version":3,"sources":["webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/components/cjs/objectWithoutProperties-9e2b4e81.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/components/cjs/Section.js","webpack:///./src/presentational-components/shared/button-with-spinner.js","webpack:///./src/presentational-components/styled-components/level.js","webpack:///./src/forms/edit-workflow_form.schema.js","webpack:///./src/helpers/approval/approval-helper.js","webpack:///./src/smart-components/common/edit-approval-workflow.js","webpack:///./src/redux/actions/approval-actions.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/detail-toolbar-actions.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/icon-upload.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/portfolio-item-detail-toolbar.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/item-detail-info-bar.js","webpack:///./src/forms/edit-portfolio-item-form.schema.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/edit-portfolio-item.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/item-detail-description.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/portfolio-item-detail.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","define","amd","window","objectWithoutPropertiesLoose","t","e","o","r","s","Object","keys","indexOf","objectWithoutProperties","getOwnPropertySymbols","prototype","propertyIsEnumerable","_objectWithoutProperties","_interopDefault","defineProperty","value","_extends","React__default","PropTypes","Section","type","children","className","_defineProperty","concat","createElement","propTypes","string","any","isRequired","SpinnerButton","styled","Button","SpinnerLabel","span","showSpinner","ButtonWithSpinner","isDisabled","props","size","bool","oneOfType","node","arrayOf","defaultProps","StyledLevelItem","alignStart","editWorkflowSchema","loadWorkflows","fields","component","componentTypes","SELECT","name","label","loadOptions","asyncFormValidator","multi","isSearchable","isClearable","loadWorkflowOptions","filterValue","initialLookup","initialLookupQuery","map","workflow","getAxiosInstance","get","APPROVAL_API_BASE","then","data","id","updateWorkflows","unlinkIds","linkIds","resourceObject","unlinkPromises","wf","getWorkflowApi","unlinkWorkflow","linkPromises","linkWorkflow","Promise","all","listWorkflowsForObject","pagination","limit","defaultSettings","offset","filter","objectQuery","appName","objectType","objectId","paginationQuery","filterQuery","initialState","isFetching","approvalState","state","action","payload","EditApprovalWorkflow","removeQuery","keepHash","querySelector","pushParam","objectName","useReducer","stateDispatch","useSelector","approvalReducer","resolvedWorkflows","meta","dispatch","useDispatch","history","useEnhancedHistory","useQuery","query","useEffect","ASYNC_ACTIONS","RESOLVE_WORKFLOWS","ApprovalHelper","APP_NAME","Modal","title","isOpen","onClose","isSmall","Stack","gutter","StackItem","TextContent","Text","initialValues","selectedWorkflows","undefined","onSubmit","formData","formApi","initialWorkflows","getState","newWorkflows","toUnlinkIds","toLinkIds","toUnlinkWorkflows","findIndex","w","toLinkWorkflows","object_type","app_name","object_id","UPDATE_WORKFLOWS","addNotification","variant","dismissable","description","defaultMessage","values","count","onCancel","schema","editApprovalWorkflowSchema","formContainer","buttonsLabels","submitLabel","shape","pathname","search","func","oneOf","DetailToolbarActions","copyUrl","orderUrl","editUrl","workflowUrl","editSurveyUrl","setOpen","availability","userCapabilities","update","copy","set_approval","dropdownItems","DropdownItem","aria-label","preserveSearch","role","LevelItem","style","marginLeft","Dropdown","isPlain","onToggle","onSelect","position","DropdownPosition","right","toggle","KebabToggle","UploadButton","button","UploadIconWrapper","div","ImagePreview","img","IconUpload","uploadIcon","inputRef","useRef","useState","image","setImage","isUploading","setIsUploading","accept","onChange","event","target","files","error","errors","detail","ref","hidden","disabled","onClick","current","click","Spinner","height","src","URL","createObjectURL","PortfolioItemIconItem","sourceId","CATALOG_API_BASE","PortfolioItemDetailToolbar","url","product","breadcrumbsSpacing","Level","service_offering_source_ref","TextVariants","h1","minHeight","exact","path","render","args","open","distributor","object","SurveyEditorDropdown","handleResetSurvey","setIsOpen","SurveyEditingToolbar","handleSaveSurvey","closeUrl","isValid","modified","breadcrumbs","Flex","to","ItemDetailInfoBar","source","portfolio","p","DateFormat","date","created_at","updated_at","editPortfolioItemSchema","TEXT_FIELD","validate","validatorTypes","REQUIRED","EditPortfolioItem","cancelUrl","owner","useHistory","useLocation","updatePortfolioItem","metadata","user_capabilities","ItemDetailDescription","long_description","h6","support_url","href","rel","documentation_url","requiredCapabilities","PORTFOLIO_ITEM_RESOURCE_TYPE","SurveyEditor","lazy","requiredParams","PortfolioItemDetail","setIsFetching","queryValues","useRouteMatch","PORTFOLIO_ITEM_ROUTE","portfolioReducer","portfolioItem","selectedPortfolio","getPortfolioItemDetail","availability_status","unavailable","notFound","Alert","isInline","file","uploadPortfolioItemIcon","fallback","Grid","GridItem","md","lg"],"mappings":"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","file":"js/portfolio-item-detail~31ecd969.b21cccae6c3ce5ec37ed.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","\"use strict\";function _objectWithoutPropertiesLoose(t,e){if(null==t)return{};var o,r,i={},s=Object.keys(t);for(r=0;r<s.length;r++)o=s[r],e.indexOf(o)>=0||(i[o]=t[o]);return i}var objectWithoutPropertiesLoose=_objectWithoutPropertiesLoose;function _objectWithoutProperties(t,e){if(null==t)return{};var o,r,i=objectWithoutPropertiesLoose(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(r=0;r<s.length;r++)o=s[r],e.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(t,o)&&(i[o]=t[o])}return i}var objectWithoutProperties=_objectWithoutProperties;exports._objectWithoutProperties=objectWithoutProperties;\n","\"use strict\";function _interopDefault(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0}),require(\"./_commonjsHelpers-32c5d30b.js\");var _extends=require(\"./extends-7fa7e501.js\"),defineProperty=require(\"./defineProperty-cf06dcaa.js\"),objectWithoutProperties=require(\"./objectWithoutProperties-9e2b4e81.js\"),React=require(\"react\"),React__default=_interopDefault(React),PropTypes=_interopDefault(require(\"prop-types\")),classNames=_interopDefault(require(\"classnames\")),Section=function Section(e){var t=e.type,r=e.children,s=e.className,o=objectWithoutProperties._objectWithoutProperties(e,[\"type\",\"children\",\"className\"]),i=classNames(s,defineProperty._defineProperty({},\"ins-l-\".concat(t),void 0!==t));return React__default.createElement(\"section\",_extends._extends({},o,{className:i}),\" \",r,\" \")};Section.propTypes={type:PropTypes.string,className:PropTypes.string,children:PropTypes.any.isRequired},exports.Section=Section;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\n\nconst SpinnerButton = styled(Button)`\n  display: flex !important;\n  align-items: center;\n`;\n\nconst SpinnerLabel = styled.span`\n  margin-right: ${({ showSpinner }) => (showSpinner ? '8px' : '0')};\n`;\n\nconst ButtonWithSpinner = ({ children, showSpinner, isDisabled, ...props }) => (\n  <SpinnerButton {...props} isDisabled={isDisabled}>\n    <SpinnerLabel showSpinner={showSpinner}>{children}</SpinnerLabel>\n    {showSpinner && <Spinner size=\"md\" />}\n  </SpinnerButton>\n);\n\nButtonWithSpinner.propTypes = {\n  showSpinner: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  isDisabled: PropTypes.bool\n};\n\nButtonWithSpinner.defaultProps = {\n  showSpinner: false,\n  isDisabled: false\n};\n\nexport default ButtonWithSpinner;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { LevelItem } from '@patternfly/react-core';\n\nexport const StyledLevelItem = styled(({ alignStart, ...props }) => (\n  <LevelItem {...props} />\n))`\n  align-items: ${({ alignStart }) =>\n    alignStart ? 'flex-start !important' : 'inherit'};\n`;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport asyncFormValidator from '../utilities/async-form-validator';\n\nconst editWorkflowSchema = (loadWorkflows) => ({\n  fields: [\n    {\n      component: componentTypes.SELECT,\n      name: 'selectedWorkflows',\n      label: '',\n      loadOptions: asyncFormValidator(loadWorkflows),\n      multi: true,\n      isSearchable: true,\n      isClearable: true\n    }\n  ]\n});\n\nexport default editWorkflowSchema;\n","import { getWorkflowApi, getAxiosInstance } from '../shared/user-login';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nexport const getApprovalWorkflows = () => getWorkflowApi().listWorkflows();\n\nexport const loadWorkflowOptions = (filterValue = '', initialLookup = []) => {\n  const initialLookupQuery = initialLookup\n    .map((workflow) => `filter[id][]=${workflow}`)\n    .join('&');\n\n  return getAxiosInstance()\n    .get(\n      `${APPROVAL_API_BASE}/workflows?filter[name][contains]=${filterValue}&${initialLookupQuery ||\n        ''}`\n    )\n    .then(({ data }) =>\n      data.map(({ id, name }) => ({ label: name, value: id }))\n    );\n};\n\nexport const updateWorkflows = (unlinkIds, linkIds, resourceObject) => {\n  const unlinkPromises = unlinkIds\n    ? unlinkIds.map((wf) => getWorkflowApi().unlinkWorkflow(wf, resourceObject))\n    : [];\n  const linkPromises = linkIds\n    ? linkIds.map((wf) => getWorkflowApi().linkWorkflow(wf, resourceObject))\n    : [];\n  return Promise.all([...unlinkPromises, ...linkPromises]);\n};\n\nexport const listWorkflowsForObject = (\n  resourceObject,\n  pagination = { limit: defaultSettings.limit, offset: defaultSettings.offset },\n  filter = ''\n) => {\n  const objectQuery = `app_name=${resourceObject.appName}&object_type=${resourceObject.objectType}&object_id=${resourceObject.objectId}`;\n  const paginationQuery = `&limit=${pagination.limit}&offset=${pagination.offset}`;\n  const filterQuery = `&filter[name][contains]=${filter}`;\n  return getAxiosInstance().get(\n    `${APPROVAL_API_BASE}/workflows?${objectQuery}${filterQuery}${paginationQuery}`\n  );\n};\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Modal,\n  TextContent,\n  Text,\n  Stack,\n  StackItem\n} from '@patternfly/react-core';\nimport FormRenderer from '../common/form-renderer';\nimport editApprovalWorkflowSchema from '../../forms/edit-workflow_form.schema';\nimport {\n  listWorkflowsForObject,\n  updateWorkflows\n} from '../../redux/actions/approval-actions';\nimport { APP_NAME } from '../../utilities/constants';\nimport { loadWorkflowOptions } from '../../helpers/approval/approval-helper';\nimport { WorkflowLoader } from '../../presentational-components/shared/loader-placeholders';\nimport useQuery from '../../utilities/use-query';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nconst initialState = {\n  isFetching: true\n};\n\nconst approvalState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst EditApprovalWorkflow = ({\n  objectType,\n  removeQuery,\n  keepHash,\n  querySelector,\n  pushParam,\n  objectName = () => objectType\n}) => {\n  const [{ isFetching }, stateDispatch] = useReducer(\n    approvalState,\n    initialState\n  );\n  const { data, meta } = useSelector(\n    ({ approvalReducer: { resolvedWorkflows } }) => resolvedWorkflows\n  );\n  const dispatch = useDispatch();\n  const history = useEnhancedHistory({ removeQuery, keepHash });\n  const [query] = useQuery([querySelector]);\n\n  useEffect(() => {\n    dispatch(\n      listWorkflowsForObject(\n        {\n          objectType,\n          appName: APP_NAME[objectType],\n          objectId: query[querySelector]\n        },\n        meta\n      )\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const onSubmit = (formData, formApi) => {\n    const initialWorkflows =\n      formApi.getState().initialValues.selectedWorkflows || [];\n    const newWorkflows = formData.selectedWorkflows || [];\n\n    history.push(pushParam);\n    const toUnlinkWorkflows = initialWorkflows.filter(\n      (wf) => newWorkflows.findIndex((w) => w === wf) < 0\n    );\n    const toLinkWorkflows = newWorkflows.filter(\n      (wf) => initialWorkflows.findIndex((w) => w === wf) < 0\n    );\n\n    if (toUnlinkWorkflows.length > 0 || toLinkWorkflows.length > 0) {\n      dispatch(\n        updateWorkflows(toUnlinkWorkflows, toLinkWorkflows, {\n          object_type: objectType,\n          app_name: APP_NAME[objectType],\n          object_id: query[querySelector]\n        })\n      );\n    }\n  };\n\n  return (\n    <Modal\n      title=\"Set approval process\"\n      isOpen\n      onClose={() => history.push(pushParam)}\n      isSmall\n    >\n      {isFetching && <WorkflowLoader />}\n      {!isFetching && (\n        <Stack gutter=\"md\">\n          <StackItem>\n            <TextContent>\n              <Text>\n                Select approval processes for{' '}\n                <strong>{objectName(query[querySelector])}</strong>\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormRenderer\n              initialValues={{\n                selectedWorkflows: data ? data.map((wf) => wf.id) : undefined\n              }}\n              onSubmit={onSubmit}\n              onCancel={() => history.push(pushParam)}\n              schema={editApprovalWorkflowSchema(loadWorkflowOptions)}\n              formContainer=\"modal\"\n              buttonsLabels={{ submitLabel: 'Save' }}\n            />\n          </StackItem>\n        </Stack>\n      )}\n    </Modal>\n  );\n};\n\nEditApprovalWorkflow.propTypes = {\n  pushParam: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string\n    })\n  ]).isRequired,\n  objectType: PropTypes.string.isRequired,\n  objectName: PropTypes.func,\n  removeQuery: PropTypes.bool,\n  querySelector: PropTypes.oneOf([\n    'portfolio',\n    'platform',\n    'inventory',\n    'portfolio-item'\n  ]).isRequired,\n  keepHash: PropTypes.bool\n};\n\nEditApprovalWorkflow.defaultProps = {\n  keepHash: false\n};\n\nexport default EditApprovalWorkflow;\n","import React, { Fragment } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ASYNC_ACTIONS } from '../action-types/approval-action-types';\nimport * as ApprovalHelper from '../../helpers/approval/approval-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\n\nexport const fetchWorkflows = () => ({\n  type: ASYNC_ACTIONS.FETCH_WORKFLOWS,\n  payload: ApprovalHelper.getApprovalWorkflows().then(({ data }) => [\n    ...data.map(({ id, name }) => ({ value: id, label: name }))\n  ])\n});\n\nexport const updateWorkflows = (toUnlinkIds, toLinkIds, resourceObject) => (\n  dispatch\n) =>\n  dispatch({\n    type: ASYNC_ACTIONS.UPDATE_WORKFLOWS,\n    payload: ApprovalHelper.updateWorkflows(\n      toUnlinkIds,\n      toLinkIds,\n      resourceObject\n    ).then(() =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Success updating approval process',\n          dismissable: true,\n          description: (\n            <Fragment>\n              {toUnlinkIds.length > 0 ? (\n                <FormattedMessage\n                  id=\"workflows.update_workflows\"\n                  defaultMessage={`{count, number} {count, plural, one {approval process was}\n                    other {approval processes were}} unlinked successfully. `}\n                  values={{ count: toUnlinkIds.length }}\n                />\n              ) : (\n                ''\n              )}\n              {toLinkIds.length > 0 ? (\n                <FormattedMessage\n                  id=\"workflows.update_workflows\"\n                  defaultMessage={`{count, number} {count, plural, one {approval process was}\n                    other {approval processes were}} linked successfully.`}\n                  values={{ count: toLinkIds.length }}\n                />\n              ) : (\n                ''\n              )}\n            </Fragment>\n          )\n        })\n      )\n    )\n  });\n\nexport const listWorkflowsForObject = (\n  resourceObject,\n  meta = { limit: defaultSettings.limit, offset: defaultSettings.offset },\n  filter = ''\n) => ({\n  type: ASYNC_ACTIONS.RESOLVE_WORKFLOWS,\n  payload: ApprovalHelper.listWorkflowsForObject(resourceObject, meta, filter)\n});\n","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  LevelItem\n} from '@patternfly/react-core';\nimport ButtonWithSpinner from '../../../presentational-components/shared/button-with-spinner';\nimport CatalogLink from '../../common/catalog-link';\n\nconst DetailToolbarActions = ({\n  copyUrl,\n  orderUrl,\n  editUrl,\n  workflowUrl,\n  editSurveyUrl,\n  isOpen,\n  setOpen,\n  isFetching,\n  availability,\n  userCapabilities: { update, copy, set_approval }\n}) => {\n  const dropdownItems = [];\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Edit Portfolio\"\n        key=\"edit-portfolio-item\"\n        id=\"edit-portfolio-item\"\n        component={\n          <CatalogLink pathname={editUrl} preserveSearch>\n            Edit\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (copy) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Copy Portfolio\"\n        key=\"copy-portfolio-item\"\n        id=\"copy-portfolio-item\"\n        component={\n          <CatalogLink pathname={copyUrl} preserveSearch>\n            Copy\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (set_approval) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Set approval\"\n        key=\"set-approval_workflow\"\n        id=\"set-approval_workflow\"\n        component={\n          <CatalogLink pathname={workflowUrl} preserveSearch>\n            Set approval\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Edit survey\"\n        key=\"edit-survey\"\n        id=\"edit-survey\"\n        component={\n          <CatalogLink pathname={editSurveyUrl} preserveSearch>\n            Edit survey\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  return (\n    <Fragment>\n      <LevelItem>\n        <CatalogLink\n          isDisabled={isFetching || availability === 'unavailable'}\n          pathname={orderUrl}\n          preserveSearch\n        >\n          <ButtonWithSpinner\n            isDisabled={isFetching || availability === 'unavailable'}\n            showSpinner={isFetching}\n            variant=\"primary\"\n            id=\"order-portfolio-item\"\n          >\n            Order\n          </ButtonWithSpinner>\n        </CatalogLink>\n      </LevelItem>\n      <LevelItem style={{ marginLeft: 16 }}>\n        {dropdownItems.length > 0 && (\n          <Dropdown\n            isPlain\n            onToggle={setOpen}\n            onSelect={() => setOpen(false)}\n            position={DropdownPosition.right}\n            toggle={\n              <KebabToggle\n                id=\"portfolio-item-actions-toggle\"\n                onToggle={(isOpen) => setOpen(isOpen)}\n              />\n            }\n            isOpen={isOpen}\n            dropdownItems={dropdownItems}\n          />\n        )}\n      </LevelItem>\n    </Fragment>\n  );\n};\n\nDetailToolbarActions.propTypes = {\n  orderUrl: PropTypes.string.isRequired,\n  editUrl: PropTypes.string.isRequired,\n  copyUrl: PropTypes.string.isRequired,\n  editSurveyUrl: PropTypes.string.isRequired,\n  workflowUrl: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool,\n  setOpen: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool,\n  availability: PropTypes.oneOf(['available', 'unavailable']).isRequired,\n  userCapabilities: PropTypes.shape({\n    update: PropTypes.bool,\n    copy: PropTypes.bool,\n    set_approval: PropTypes.bool\n  }).isRequired\n};\n\nDetailToolbarActions.defaultProps = {\n  isFetching: false\n};\n\nexport default DetailToolbarActions;\n","import React, { useState, useRef } from 'react';\nimport { EditIcon } from '@patternfly/react-icons';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport styled from 'styled-components';\n\nconst UploadButton = styled.button`\n  border: none;\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding-left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  svg {\n    background-color: rgba(255, 255, 255, 0.8);\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n`;\n\nconst UploadIconWrapper = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst ImagePreview = styled.img`\n  height: 64px;\n  max-width: 300px;\n  object-fit: cover;\n`;\n\nconst IconUpload = ({ uploadIcon, children }) => {\n  const inputRef = useRef();\n  const [image, setImage] = useState();\n  const [isUploading, setIsUploading] = useState(false);\n  const handleClick = () => inputRef.current.click();\n  const dispatch = useDispatch();\n\n  return (\n    <UploadIconWrapper>\n      <input\n        accept=\".png,.svg,.jpeg\"\n        onChange={(event) => {\n          setImage(event.target.files[0]);\n          setIsUploading(true);\n          uploadIcon(event.target.files[0])\n            .then(() => setIsUploading(false))\n            .catch((error) => {\n              dispatch(\n                addNotification({\n                  variant: 'danger',\n                  title: 'Icon upload error',\n                  description: error.data.errors[0].detail,\n                  dismissable: true\n                })\n              );\n              setImage(undefined);\n              setIsUploading(false);\n            });\n        }}\n        ref={inputRef}\n        type=\"file\"\n        id=\"icon-upload\"\n        hidden\n      />\n      <UploadButton disabled={isUploading} onClick={handleClick}>\n        {isUploading ? <Spinner size=\"md\" /> : <EditIcon size=\"sm\" />}\n      </UploadButton>\n      {!image && children}\n      {image && (\n        <ImagePreview\n          style={{ height: 64 }}\n          src={URL.createObjectURL(image)}\n          id={image.name}\n        />\n      )}\n    </UploadIconWrapper>\n  );\n};\n\nIconUpload.propTypes = {\n  uploadIcon: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default IconUpload;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Link } from 'react-router-dom';\nimport {\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Button,\n  Flex,\n  Dropdown,\n  KebabToggle,\n  DropdownItem\n} from '@patternfly/react-core';\n\nimport DetailToolbarActions from './detail-toolbar-actions';\nimport { CATALOG_API_BASE } from '../../../utilities/constants';\nimport CardIcon from '../../../presentational-components/shared/card-icon';\nimport TopToolbar from '../../../presentational-components/shared/top-toolbar';\nimport IconUpload from './icon-upload';\nimport ButtonWithSpinner from '../../../presentational-components/shared/button-with-spinner';\nimport { StyledLevelItem } from '../../../presentational-components/styled-components/level';\n\nconst PortfolioItemIconItem = ({ uploadIcon, id, sourceId }) => (\n  <IconUpload uploadIcon={uploadIcon}>\n    <CardIcon\n      src={`${CATALOG_API_BASE}/portfolio_items/${id}/icon`}\n      sourceId={sourceId}\n      height={64}\n    />\n  </IconUpload>\n);\n\nPortfolioItemIconItem.propTypes = {\n  uploadIcon: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  sourceId: PropTypes.string.isRequired\n};\n\nexport const PortfolioItemDetailToolbar = ({\n  url,\n  isOpen,\n  product,\n  setOpen,\n  isFetching,\n  uploadIcon,\n  availability,\n  userCapabilities\n}) => (\n  <TopToolbar breadcrumbsSpacing={false}>\n    <Level className=\"flex-no-wrap\">\n      <StyledLevelItem alignStart className=\"pf-l-flex\">\n        {userCapabilities.update ? (\n          <PortfolioItemIconItem\n            uploadIcon={uploadIcon}\n            id={product.id}\n            sourceId={product.service_offering_source_ref}\n          />\n        ) : (\n          <CardIcon\n            src={`${CATALOG_API_BASE}/portfolio_items/${product.id}/icon`}\n            sourceId={product.service_offering_source_ref}\n            height={64}\n          />\n        )}\n        <TextContent className=\"pf-u-ml-md\">\n          <Text component={TextVariants.h1}>{product.name}</Text>\n        </TextContent>\n      </StyledLevelItem>\n      <LevelItem style={{ minHeight: 36 }} className=\"flex-item-no-wrap\">\n        <Level className=\"flex-no-wrap\">\n          <Route\n            exact\n            path={url}\n            render={(...args) => (\n              <DetailToolbarActions\n                isOpen={isOpen}\n                setOpen={(open) => setOpen(open)}\n                orderUrl={`${url}/order`}\n                editUrl={`${url}/edit`}\n                copyUrl={`${url}/copy`}\n                editSurveyUrl={`${url}/edit-survey`}\n                workflowUrl={`${url}/edit-workflow`}\n                isFetching={isFetching}\n                availability={availability}\n                userCapabilities={userCapabilities}\n                {...args}\n              />\n            )}\n          />\n        </Level>\n      </LevelItem>\n    </Level>\n  </TopToolbar>\n);\n\nPortfolioItemDetailToolbar.propTypes = {\n  url: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool,\n  product: PropTypes.shape({\n    distributor: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    service_offering_source_ref: PropTypes.string.isRequired\n  }).isRequired,\n  setOpen: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool,\n  uploadIcon: PropTypes.func.isRequired,\n  availability: PropTypes.oneOf(['available', 'unavailable']).isRequired,\n  userCapabilities: PropTypes.object\n};\n\nPortfolioItemDetailToolbar.defaultProps = {\n  isFetching: false\n};\n\nconst SurveyEditorDropdown = ({ handleResetSurvey }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  return (\n    <Dropdown\n      isOpen={isOpen}\n      isPlain\n      onSelect={() => setIsOpen(false)}\n      position=\"right\"\n      toggle={<KebabToggle onToggle={(isOpen) => setIsOpen(isOpen)} />}\n      dropdownItems={[\n        <DropdownItem\n          onClick={handleResetSurvey}\n          component=\"button\"\n          key=\"synchronize\"\n        >\n          Restore to Ansible Tower version\n        </DropdownItem>\n      ]}\n    />\n  );\n};\n\nSurveyEditorDropdown.propTypes = {\n  handleResetSurvey: PropTypes.func.isRequired\n};\n\nexport const SurveyEditingToolbar = ({\n  uploadIcon,\n  product,\n  handleSaveSurvey,\n  closeUrl,\n  search,\n  isFetching,\n  isValid,\n  modified,\n  handleResetSurvey\n}) => (\n  <TopToolbar breadcrumbsSpacing={false} breadcrumbs={true}>\n    <Level>\n      <StyledLevelItem alignStart className=\"pf-l-flex\">\n        <PortfolioItemIconItem\n          uploadIcon={uploadIcon}\n          id={product.id}\n          sourceId={product.service_offering_source_ref}\n        />\n        <TextContent className=\"pf-u-ml-md\">\n          <Text component={TextVariants.h1}>\n            Editing survey: {product.name}\n          </Text>\n        </TextContent>\n      </StyledLevelItem>\n      <LevelItem>\n        <Flex className=\"align-items-center\">\n          <ButtonWithSpinner\n            variant=\"primary\"\n            showSpinner={isFetching}\n            isDisabled={isFetching || !isValid}\n            onClick={handleSaveSurvey}\n          >\n            Save\n          </ButtonWithSpinner>\n          <Link\n            to={{\n              pathname: closeUrl,\n              search\n            }}\n          >\n            <Button variant=\"link\">Cancel</Button>\n          </Link>\n          {modified && (\n            <SurveyEditorDropdown handleResetSurvey={handleResetSurvey} />\n          )}\n        </Flex>\n      </LevelItem>\n    </Level>\n  </TopToolbar>\n);\n\nSurveyEditingToolbar.propTypes = {\n  uploadIcon: PropTypes.func.isRequired,\n  product: PropTypes.object,\n  handleSaveSurvey: PropTypes.func.isRequired,\n  closeUrl: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired,\n  isFetching: PropTypes.bool,\n  isValid: PropTypes.bool,\n  modified: PropTypes.bool,\n  handleResetSurvey: PropTypes.func\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\n\nconst ItemDetailInfoBar = ({ product, source, portfolio }) => (\n  <TextContent className=\"pf-u-mb-md\">\n    <Text className=\"font-14\">Platform</Text>\n    <Text id=\"source-name\" className=\"overflow-wrap\" component={TextVariants.p}>\n      {source.name}\n    </Text>\n    <Text className=\"font-14\">Portfolio</Text>\n    <Text\n      id=\"portfolio-name\"\n      className=\"overflow-wrap\"\n      component={TextVariants.p}\n    >\n      {portfolio.name}\n    </Text>\n    {product.distributor && (\n      <span id=\"distributor\">\n        <Text className=\"font-14\">Vendor</Text>\n        <Text className=\"overflow-wrap\" component={TextVariants.p}>\n          {product.distributor}\n        </Text>\n      </span>\n    )}\n    <Text className=\"font-14\">Created</Text>\n    <Text id=\"created_at\" component={TextVariants.p}>\n      <DateFormat variant=\"relative\" date={product.created_at} />\n    </Text>\n  </TextContent>\n);\n\nItemDetailInfoBar.propTypes = {\n  product: PropTypes.shape({\n    distributor: PropTypes.string,\n    updated_at: PropTypes.string,\n    created_at: PropTypes.string.isRequired\n  }).isRequired,\n  source: PropTypes.shape({\n    name: PropTypes.string\n  }).isRequired,\n  portfolio: PropTypes.shape({\n    name: PropTypes.string\n  }).isRequired\n};\n\nexport default ItemDetailInfoBar;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\n\nconst editPortfolioItemSchema = {\n  fields: [\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Name',\n      isRequired: true,\n      validate: [{ type: validatorTypes.REQUIRED }]\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'description',\n      label: 'Description'\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'long_description',\n      label: 'Long description'\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'distributor',\n      label: 'Vendor'\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'documentation_url',\n      label: 'Documentation URL',\n      validate: [\n        {\n          type: validatorTypes.URL\n        }\n      ]\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'support_url',\n      label: 'Support URL',\n      validate: [\n        {\n          type: validatorTypes.URL\n        }\n      ]\n    }\n  ]\n};\n\nexport default editPortfolioItemSchema;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport FormRenderer from '../../common/form-renderer';\nimport editPortfolioItemSchema from '../../../forms/edit-portfolio-item-form.schema';\nimport { updatePortfolioItem } from '../../../redux/actions/portfolio-actions';\n\nconst EditPortfolioItem = ({\n  cancelUrl,\n  product: { owner, created_at, updated_at, ...product },\n  userCapabilities\n}) => {\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n  const { search } = useLocation();\n  return (\n    <FormRenderer\n      initialValues={{ ...product }}\n      onSubmit={(values) => {\n        push({\n          pathname: cancelUrl,\n          search\n        });\n        return dispatch(\n          updatePortfolioItem({\n            ...values,\n            metadata: { user_capabilities: userCapabilities }\n          })\n        );\n      }}\n      schema={editPortfolioItemSchema}\n      onCancel={() =>\n        push({\n          pathname: cancelUrl,\n          search\n        })\n      }\n    />\n  );\n};\n\nEditPortfolioItem.propTypes = {\n  cancelUrl: PropTypes.string.isRequired,\n  product: PropTypes.object.isRequired,\n  userCapabilities: PropTypes.object.isRequired\n};\n\nexport default EditPortfolioItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\n\nimport EditPortfolioItem from './edit-portfolio-item';\nimport EditApprovalWorkflow from '../../../smart-components/common/edit-approval-workflow';\nimport { PORTFOLIO_ITEM_RESOURCE_TYPE } from '../../../utilities/constants';\nimport CatalogRoute from '../../../routing/catalog-route';\n\nconst ItemDetailDescription = ({ userCapabilities, product, url, search }) => (\n  <Switch>\n    <Route\n      exact\n      path={url}\n      render={() => (\n        <TextContent>\n          {(product.description || product.long_description) && (\n            <Text component={TextVariants.h6}>Overview</Text>\n          )}\n          {product.description && (\n            <Text id=\"description\" component={TextVariants.p}>\n              {product.description}\n            </Text>\n          )}\n          {product.long_description && (\n            <Text id=\"long_description\" component={TextVariants.p}>\n              {product.long_description}\n            </Text>\n          )}\n          {product.support_url && (\n            <Text id=\"support_url\" component={TextVariants.p}>\n              <a\n                href={product.support_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn more\n              </a>\n            </Text>\n          )}\n          {product.documentation_url && (\n            <Fragment>\n              <Text component={TextVariants.h6}>Documentation</Text>\n              <Text id=\"documentation_url\" component={TextVariants.p}>\n                <a\n                  href={product.documentation_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Doc link\n                </a>\n              </Text>\n            </Fragment>\n          )}\n        </TextContent>\n      )}\n    />\n    <CatalogRoute\n      exact\n      path={`${url}/edit`}\n      requiredCapabilities=\"update\"\n      userCapabilities={userCapabilities}\n    >\n      <EditPortfolioItem\n        cancelUrl={url}\n        product={product}\n        userCapabilities={userCapabilities}\n      />\n    </CatalogRoute>\n    <Route exact path={`${url}/edit-workflow`}>\n      <EditApprovalWorkflow\n        pushParam={{ pathname: url, search }}\n        objectType={PORTFOLIO_ITEM_RESOURCE_TYPE}\n        objectId={product.id}\n        objectName={() => product.name}\n        querySelector=\"portfolio-item\"\n      />\n    </Route>\n  </Switch>\n);\n\nItemDetailDescription.propTypes = {\n  product: PropTypes.shape({\n    name: PropTypes.string,\n    long_description: PropTypes.string,\n    support_url: PropTypes.string,\n    documentation_url: PropTypes.string,\n    description: PropTypes.string,\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  url: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired,\n  userCapabilities: PropTypes.object.isRequired\n};\n\nexport default ItemDetailDescription;\n","import React, { useEffect, useState, Fragment, lazy, Suspense } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { Grid, GridItem, Alert } from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\n\nimport ItemDetailInfoBar from './item-detail-info-bar';\nimport ItemDetailDescription from './item-detail-description';\nimport { PortfolioItemDetailToolbar } from './portfolio-item-detail-toolbar';\nimport TopToolbar from '../../../presentational-components/shared/top-toolbar';\nimport { getPortfolioItemDetail } from '../../../redux/actions/portfolio-actions';\nimport {\n  ProductLoaderPlaceholder,\n  AppPlaceholder\n} from '../../../presentational-components/shared/loader-placeholders';\nimport { uploadPortfolioItemIcon } from '../../../helpers/portfolio/portfolio-helper';\nimport useQuery from '../../../utilities/use-query';\nimport { PORTFOLIO_ITEM_ROUTE } from '../../../constants/routes';\nimport CatalogRoute from '../../../routing/catalog-route';\n\nconst SurveyEditor = lazy(() =>\n  import(\n    /* webpackChunkName: \"survey-editor\" */ '../../survey-editing/survey-editor'\n  )\n);\n\nconst requiredParams = ['portfolio', 'source', 'portfolio-item'];\n\nconst PortfolioItemDetail = () => {\n  const [isOpen, setOpen] = useState(false);\n  const [isFetching, setIsFetching] = useState(true);\n  const dispatch = useDispatch();\n  const [queryValues, search] = useQuery(requiredParams);\n  const { url } = useRouteMatch(PORTFOLIO_ITEM_ROUTE);\n  const {\n    portfolioItem: {\n      metadata: { user_capabilities: userCapabilities },\n      ...portfolioItem\n    },\n    source\n  } = useSelector(({ portfolioReducer: { portfolioItem } }) => portfolioItem);\n  const portfolio = useSelector(\n    ({ portfolioReducer: { selectedPortfolio } }) => selectedPortfolio\n  );\n\n  useEffect(() => {\n    setIsFetching(true);\n    dispatch(\n      getPortfolioItemDetail({\n        portfolioItem: queryValues['portfolio-item'],\n        ...queryValues\n      })\n    )\n      .then(() => setIsFetching(false))\n      .catch(() => setIsFetching(false));\n  }, [queryValues['portfolio-item']]);\n\n  if (isFetching || Object.keys(portfolioItem).length === 0) {\n    return (\n      <Section className=\"global-primary-background full-height\">\n        <TopToolbar>\n          <ProductLoaderPlaceholder />\n        </TopToolbar>\n      </Section>\n    );\n  }\n\n  const availability = source.availability_status || 'unavailable';\n  const unavailable = [source]\n    .filter(({ notFound }) => notFound)\n    .map(({ object }) => (\n      <Alert\n        className=\"pf-u-mb-sm\"\n        key={object}\n        variant=\"warning\"\n        isInline\n        title={`The ${object} for this product is no longer available`}\n      />\n    ));\n  const uploadIcon = (file) => uploadPortfolioItemIcon(portfolioItem.id, file);\n  return (\n    <Fragment>\n      <Switch>\n        <CatalogRoute\n          requiredCapabilities=\"update\"\n          userCapabilities={userCapabilities}\n          path={`${url}/edit-survey`}\n        >\n          <Suspense fallback={<AppPlaceholder />}>\n            <SurveyEditor\n              closeUrl={url}\n              search={search}\n              uploadIcon={uploadIcon}\n              portfolioItem={portfolioItem}\n              portfolio={portfolio}\n            />\n          </Suspense>\n        </CatalogRoute>\n        <Route>\n          <Section className=\"full-height global-primary-background\">\n            <PortfolioItemDetailToolbar\n              uploadIcon={uploadIcon}\n              url={url}\n              isOpen={isOpen}\n              product={portfolioItem}\n              setOpen={setOpen}\n              isFetching={isFetching}\n              availability={availability}\n              userCapabilities={userCapabilities}\n            />\n            {unavailable.length > 0 && (\n              <div className=\"pf-u-mr-lg pf-u-ml-lg\">{unavailable}</div>\n            )}\n            {source.availability_status === 'unavailable' && (\n              <Alert\n                className=\"pf-u-ml-lg pf-u-mr-lg\"\n                id=\"unavailable-alert-info\"\n                variant=\"info\"\n                isInline\n                title=\"The platform for this product is unavailable\"\n              />\n            )}\n            <Grid gutter=\"md\" className=\"pf-u-p-lg\">\n              <GridItem md={3} lg={2}>\n                <ItemDetailInfoBar\n                  product={portfolioItem}\n                  portfolio={portfolio}\n                  source={source}\n                />\n              </GridItem>\n              <GridItem md={9} lg={10}>\n                <ItemDetailDescription\n                  product={portfolioItem}\n                  userCapabilities={userCapabilities}\n                  url={url}\n                  search={search}\n                />\n              </GridItem>\n            </Grid>\n          </Section>\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n};\n\nexport default PortfolioItemDetail;\n"],"sourceRoot":""}