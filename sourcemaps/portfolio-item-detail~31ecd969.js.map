{"version":3,"sources":["webpack:///./src/smart-components/portfolio/portfolio-item-detail/item-detail-info-bar.js","webpack:///./src/forms/edit-portfolio-item-form.schema.ts","webpack:///./src/messages/icon.messages.ts","webpack:///./src/smart-components/portfolio/portfolio-item-detail/icon-upload.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/edit-portfolio-item.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/item-detail-description.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/portfolio-item-detail.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./src/presentational-components/shared/button-with-spinner.tsx","webpack:///./src/helpers/approval/approval-helper.ts","webpack:///./src/utilities/extract-format-message.ts","webpack:///./src/messages/approval.messages.ts","webpack:///./src/smart-components/common/edit-approval-workflow.tsx","webpack:///./src/redux/actions/approval-actions.ts","webpack:///./src/smart-components/portfolio/portfolio-item-detail/detail-toolbar-actions.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/portfolio-item-detail-toolbar.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/pencil-alt-icon.js","webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Stack/Stack.js","webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Stack/StackItem.js","webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Flex/Flex.js"],"names":["messages","id","defaultMessage","ItemDetailInfoBar","product","source","portfolio","formatMessage","useFormatMessage","TextContent","className","Text","component","TextVariants","p","name","distributor","DateFormat","variant","date","created_at","propTypes","PropTypes","shape","string","updated_at","isRequired","fields","TEXT_FIELD","label","validate","type","REQUIRED","URL","changeIcon","resetIcon","UploadButton","styled","span","UploadIconWrapper","div","ImagePreview","img","StyledDropdown","Dropdown","IconUpload","uploadIcon","enableReset","children","inputRef","useRef","useState","image","setImage","isUploading","setIsUploading","isOpen","setIsOpen","dispatch","useDispatch","dropdownItems","DropdownItem","onClick","current","click","key","iconMessages","isDisabled","undefined","then","accept","onChange","event","target","files","error","addNotification","title","portfolioMessages","portfolioItemIconTitle","description","data","errors","detail","dismissable","ref","hidden","onSelect","isPlain","disabled","toggle","DropdownToggle","toggleIndicator","onToggle","stopPropagation","ouiaId","Spinner","size","style","height","src","createObjectURL","func","oneOfType","node","arrayOf","bool","EditPortfolioItem","cancelUrl","owner","userCapabilities","push","useHistory","search","useLocation","Stack","hasGutter","StackItem","icon_id","CATALOG_API_BASE","sourceId","service_offering_source_ref","initialValues","onSubmit","values","pathname","updatePortfolioItem","metadata","user_capabilities","schema","editPortfolioItemSchema","templateProps","disableSubmit","onCancel","object","ItemDetailDescription","url","detailPaths","path","pushParam","objectType","PORTFOLIO_ITEM_RESOURCE_TYPE","objectId","objectName","querySelector","PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE","exact","render","long_description","h6","portfolioItemOverview","support_url","href","rel","portfolioItemSupport","documentation_url","portfolioItemDocumentation","portfolioItemDocLink","requiredCapabilities","SurveyEditor","lazy","requiredParams","PortfolioItemDetail","setOpen","isFetching","setIsFetching","useQuery","queryValues","useRouteMatch","PORTFOLIO_ITEM_ROUTE","portfolioItemData","useSelector","portfolioReducer","portfolioItem","selectedPortfolio","fromProducts","userPermissions","useContext","UserContext","permissions","canLinkOrderProcesses","hasPermission","fetchData","skipLoading","getPortfolioItemDetail","useEffect","insights","chrome","appNavClick","secondaryNav","Object","keys","length","Section","breadcrumbs","availability","availability_status","unavailable","filter","notFound","map","Alert","isInline","objectUnavaiable","file","uploadPortfolioItemIcon","fallback","closeUrl","orderable","sourceUnavaiable","Grid","GridItem","md","lg","PORTFOLIO_ITEM_ROUTE_EDIT","resetPortfolioItemIcon","objectWithoutPropertiesLoose","module","exports","excluded","i","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","SpinnerButton","SpinnerLabel","ButtonWithSpinner","showSpinner","props","displayName","loadWorkflowOptions","filterValue","initialLookup","initialLookupQuery","workflow","join","get","value","updateWorkflows","unlinkIds","linkIds","resourceObject","unlinkPromises","wf","unlinkWorkflow","linkPromises","linkWorkflow","Promise","all","listWorkflowsForObject","pagination","limit","offset","objectQuery","appName","paginationQuery","filterQuery","getState","i18nReducer","unlinkNotification","linkNotification","setWorkflow","currentWorkflows","removeSearch","keepHash","onClose","modalTitle","history","query","close","toLink","toUnlink","toLinkIds","toUnlinkIds","object_type","app_name","object_id","UPDATE_WORKFLOWS","payload","count","getInitialTags","loadTags","subTitle","strong","existingTagsMessage","DetailToolbarActions","copyUrl","orderUrl","editUrl","workflowUrl","editSurveyUrl","update","copy","set_approval","aria-label","preserveSearch","actionMessages","edit","role","setApproval","orderProcessAction","orderProcessesMessages","setOrderProcess","portfolioItemSurvey","LevelItem","portfolioItemOrder","marginLeft","position","DropdownPosition","right","KebabToggle","oneOf","defaultProps","PortfolioItemIconItem","PortfolioItemDetailToolbar","paddingBottom","Level","editProduct","noData","grow","alignStart","h1","minHeight","open","SurveyEditorDropdown","handleResetSurvey","restoreSurvey","SurveyEditingToolbar","handleSaveSurvey","isValid","modified","Flex","save","to","Button","__esModule","PencilAltIconConfig","width","svgPath","yOffset","xOffset","PencilAltIcon","createIcon","defineProperty","tslib_1","React","__importStar","stack_1","__importDefault","react_styles_1","_a","__rest","Component","createElement","assign","css","default","stack","modifiers","gutter","isFilled","stackItem","fill","flex_1","util_1","spacer","spaceItems","shrink","flex","direction","alignItems","alignContent","alignSelf","align","justifyContent","display","fullWidth","flexWrap","formatBreakpointMods"],"mappings":"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","file":"js/portfolio-item-detail~31ecd969.2c3c55eebc458d847e62.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\nimport useFormatMessage from '../../../utilities/use-format-message';\n\nconst messages = {\n  platform: {\n    id: 'portfolio.item.detail.info.platform',\n    defaultMessage: 'Platform'\n  },\n  portfolio: {\n    id: 'portfolio.item.detail.info.portfolio',\n    defaultMessage: 'Portfolio'\n  },\n  vendor: {\n    id: 'portfolio.item.detail.info.vendor',\n    defaultMessage: 'Vendor'\n  },\n  created: {\n    id: 'portfolio.item.detail.info.created',\n    defaultMessage: 'Created'\n  }\n};\n\nconst ItemDetailInfoBar = ({ product, source, portfolio }) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <TextContent className=\"pf-u-mb-md\">\n      <Text className=\"font-14\">{formatMessage(messages.platform)}</Text>\n      <Text\n        id=\"source-name\"\n        className=\"overflow-wrap\"\n        component={TextVariants.p}\n      >\n        {source.name}\n      </Text>\n      <Text className=\"font-14\">{formatMessage(messages.portfolio)}</Text>\n      <Text\n        id=\"portfolio-name\"\n        className=\"overflow-wrap\"\n        component={TextVariants.p}\n      >\n        {portfolio.name}\n      </Text>\n      {product.distributor && (\n        <span id=\"distributor\">\n          <Text className=\"font-14\">{formatMessage(messages.vendor)}</Text>\n          <Text className=\"overflow-wrap\" component={TextVariants.p}>\n            {product.distributor}\n          </Text>\n        </span>\n      )}\n      <Text className=\"font-14\">{formatMessage(messages.created)}</Text>\n      <Text id=\"created_at\" component={TextVariants.p}>\n        <DateFormat variant=\"relative\" date={product.created_at} />\n      </Text>\n    </TextContent>\n  );\n};\n\nItemDetailInfoBar.propTypes = {\n  product: PropTypes.shape({\n    distributor: PropTypes.string,\n    updated_at: PropTypes.string,\n    created_at: PropTypes.string.isRequired\n  }).isRequired,\n  source: PropTypes.shape({\n    name: PropTypes.string\n  }).isRequired,\n  portfolio: PropTypes.shape({\n    name: PropTypes.string\n  }).isRequired\n};\n\nexport default ItemDetailInfoBar;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport Schema from '@data-driven-forms/react-form-renderer/dist/cjs/schema';\n\nconst editPortfolioItemSchema: Schema = {\n  fields: [\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'schemas.portfolio-item.name',\n      isRequired: true,\n      validate: [{ type: validatorTypes.REQUIRED }]\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'description',\n      label: 'schemas.portfolio-item.description'\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'long_description',\n      label: 'schemas.portfolio-item.long_description'\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'distributor',\n      label: 'schemas.portfolio-item.vendor'\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'documentation_url',\n      label: 'schemas.portfolio-item.documentation_url',\n      validate: [\n        {\n          type: validatorTypes.URL\n        }\n      ]\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'support_url',\n      label: 'schemas.portfolio-item.support_url',\n      validate: [\n        {\n          type: validatorTypes.URL\n        }\n      ]\n    }\n  ]\n};\n\nexport default editPortfolioItemSchema;\n","import { defineMessages } from 'react-intl';\n\nconst iconMessages = defineMessages({\n  changeIcon: {\n    id: 'icons.actions.change',\n    defaultMessage: 'Upload image'\n  },\n  resetIcon: {\n    id: 'icons.actions.reset',\n    defaultMessage: 'Reset image'\n  }\n});\n\nexport default iconMessages;\n","import React, { useState, useRef } from 'react';\nimport { PencilAltIcon } from '@patternfly/react-icons';\nimport {\n  Spinner,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport styled from 'styled-components';\nimport portfolioMessages from '../../../messages/portfolio.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport iconMessages from '../../../messages/icon.messages';\n\nconst UploadButton = styled.span`\n  border: none;\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding-left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  &::after {\n    content: ' ';\n    position: absolute;\n    display: block;\n    top: -0.3em;\n    right: -0.3em;\n    width: 1.5em;\n    height: 1.5em;\n    border-radius: 50%;\n    background-color: rgba(255, 255, 255, 0.8);\n    z-index: 0;\n  }\n  svg,\n  .pf-c-spinner {\n    z-index: 1;\n    position: absolute;\n    top: 0;\n    right: 0;\n  }\n`;\n\nconst UploadIconWrapper = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst ImagePreview = styled.img`\n  height: 64px;\n  max-width: 300px;\n  object-fit: cover;\n`;\n\nconst StyledDropdown = styled(Dropdown)`\n  .pf-c-dropdown__menu {\n    top: 24px;\n    left: calc(100% - 24px);\n  }\n`;\n\nconst IconUpload = ({ uploadIcon, resetIcon, enableReset, children }) => {\n  const formatMessage = useFormatMessage();\n  const inputRef = useRef();\n  const [image, setImage] = useState();\n  const [isUploading, setIsUploading] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const handleClick = () => {\n    setIsOpen(false);\n    return inputRef.current.click();\n  };\n\n  const handleReset = () => {\n    setImage(undefined);\n    setIsUploading(true);\n    return resetIcon().then(() => setIsUploading(false));\n  };\n\n  const dispatch = useDispatch();\n\n  const dropdownItems = [\n    <DropdownItem onClick={handleClick} key=\"change-icon\">\n      {formatMessage(iconMessages.changeIcon)}\n    </DropdownItem>,\n    <DropdownItem\n      isDisabled={!enableReset}\n      onClick={handleReset}\n      key=\"reset-icon\"\n    >\n      {formatMessage(iconMessages.resetIcon)}\n    </DropdownItem>\n  ];\n\n  return (\n    <UploadIconWrapper>\n      <input\n        accept=\".png,.svg,.jpeg\"\n        onChange={(event) => {\n          setImage(event.target.files[0]);\n          setIsUploading(true);\n          uploadIcon(event.target.files[0])\n            .then(() => setIsUploading(false))\n            .catch((error) => {\n              dispatch(\n                addNotification({\n                  variant: 'danger',\n                  title: formatMessage(\n                    portfolioMessages.portfolioItemIconTitle\n                  ),\n                  description: error.data.errors[0].detail,\n                  dismissable: true\n                })\n              );\n              setImage(undefined);\n              setIsUploading(false);\n            });\n        }}\n        ref={inputRef}\n        type=\"file\"\n        id=\"icon-upload\"\n        hidden\n      />\n      <StyledDropdown\n        onSelect={() => setIsOpen(false)}\n        isOpen={isOpen}\n        isPlain\n        disabled={isUploading}\n        dropdownItems={dropdownItems}\n        toggle={\n          <DropdownToggle\n            disabled={isUploading}\n            toggleIndicator={null}\n            onToggle={(isOpen, event) => {\n              event.stopPropagation();\n              setIsOpen(isOpen);\n            }}\n          >\n            <UploadButton ouiaId={'upload-icon'}>\n              {isUploading ? (\n                <Spinner size=\"md\" />\n              ) : (\n                <PencilAltIcon size=\"sm\" />\n              )}\n            </UploadButton>\n            {!image && children}\n            {image && (\n              <ImagePreview\n                style={{ height: 64 }}\n                src={URL.createObjectURL(image)}\n                id={image.name}\n              />\n            )}\n          </DropdownToggle>\n        }\n      />\n    </UploadIconWrapper>\n  );\n};\n\nIconUpload.propTypes = {\n  uploadIcon: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  resetIcon: PropTypes.func.isRequired,\n  enableReset: PropTypes.bool\n};\n\nexport default IconUpload;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport FormRenderer from '../../common/form-renderer';\nimport editPortfolioItemSchema from '../../../forms/edit-portfolio-item-form.schema';\nimport { updatePortfolioItem } from '../../../redux/actions/portfolio-actions';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport IconUpload from './icon-upload';\nimport { CATALOG_API_BASE } from '../../../utilities/constants';\nimport CardIcon from '../../../presentational-components/shared/card-icon';\n\nconst EditPortfolioItem = ({\n  cancelUrl,\n  uploadIcon,\n  resetIcon,\n  product: { owner, created_at, updated_at, ...product },\n  userCapabilities\n}) => {\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n  const { search } = useLocation();\n  return (\n    <Stack hasGutter>\n      <StackItem key={product.icon_id || 'default'}>\n        <IconUpload\n          uploadIcon={uploadIcon}\n          resetIcon={resetIcon}\n          enableReset={!!product.icon_id}\n        >\n          <CardIcon\n            src={`${CATALOG_API_BASE}/portfolio_items/${\n              product.id\n            }/icon?cache_id=${product.icon_id || 'default'}`} // we need ho add the query to prevent the browser caching when reseting the image\n            sourceId={product.service_offering_source_ref}\n            height={64}\n          />\n        </IconUpload>\n      </StackItem>\n      <StackItem>\n        <FormRenderer\n          initialValues={{ ...product }}\n          onSubmit={(values) => {\n            push({\n              pathname: cancelUrl,\n              search\n            });\n            return dispatch(\n              updatePortfolioItem({\n                ...values,\n                metadata: { user_capabilities: userCapabilities }\n              })\n            );\n          }}\n          schema={editPortfolioItemSchema}\n          templateProps={{\n            disableSubmit: ['pristine']\n          }}\n          onCancel={() =>\n            push({\n              pathname: cancelUrl,\n              search\n            })\n          }\n        />\n      </StackItem>\n    </Stack>\n  );\n};\n\nEditPortfolioItem.propTypes = {\n  cancelUrl: PropTypes.string.isRequired,\n  product: PropTypes.object.isRequired,\n  userCapabilities: PropTypes.object.isRequired,\n  uploadIcon: PropTypes.func.isRequired,\n  resetIcon: PropTypes.func.isRequired\n};\n\nexport default EditPortfolioItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\n\nimport EditPortfolioItem from './edit-portfolio-item';\nimport EditApprovalWorkflow from '../../../smart-components/common/edit-approval-workflow';\nimport { PORTFOLIO_ITEM_RESOURCE_TYPE } from '../../../utilities/constants';\nimport CatalogRoute from '../../../routing/catalog-route';\nimport portfolioMessages from '../../../messages/portfolio.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport SetOrderProcessModal from '../../order-process/set-order-process-modal';\nimport { PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE } from '../../../constants/routes';\n\nconst ItemDetailDescription = ({\n  userCapabilities,\n  product,\n  url,\n  search,\n  detailPaths,\n  uploadIcon,\n  resetIcon\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Switch>\n      <Route path={`${url}/edit-workflow`}>\n        <EditApprovalWorkflow\n          pushParam={{ pathname: url, search }}\n          objectType={PORTFOLIO_ITEM_RESOURCE_TYPE}\n          objectId={product.id}\n          objectName={() => product.name}\n          querySelector=\"portfolio-item\"\n        />\n      </Route>\n      <Route path={PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE}>\n        <SetOrderProcessModal\n          querySelector=\"portfolio-item\"\n          objectType={PORTFOLIO_ITEM_RESOURCE_TYPE}\n          objectName={() => product.name}\n          pushParam={{ pathname: url, search }}\n        />\n      </Route>\n      <Route\n        exact\n        path={detailPaths}\n        render={() => (\n          <TextContent>\n            {(product.description || product.long_description) && (\n              <Text component={TextVariants.h6}>\n                {formatMessage(portfolioMessages.portfolioItemOverview)}\n              </Text>\n            )}\n            {product.description && (\n              <Text id=\"description\" component={TextVariants.p}>\n                {product.description}\n              </Text>\n            )}\n            {product.long_description && (\n              <Text id=\"long_description\" component={TextVariants.p}>\n                {product.long_description}\n              </Text>\n            )}\n            {product.support_url && (\n              <Text id=\"support_url\" component={TextVariants.p}>\n                <a\n                  href={product.support_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {formatMessage(portfolioMessages.portfolioItemSupport)}\n                </a>\n              </Text>\n            )}\n            {product.documentation_url && (\n              <Fragment>\n                <Text component={TextVariants.h6}>\n                  {formatMessage(portfolioMessages.portfolioItemDocumentation)}\n                </Text>\n                <Text id=\"documentation_url\" component={TextVariants.p}>\n                  <a\n                    href={product.documentation_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {formatMessage(portfolioMessages.portfolioItemDocLink)}\n                  </a>\n                </Text>\n              </Fragment>\n            )}\n          </TextContent>\n        )}\n      />\n      <CatalogRoute\n        exact\n        path={`${url}/edit`}\n        requiredCapabilities=\"update\"\n        userCapabilities={userCapabilities}\n      >\n        <EditPortfolioItem\n          cancelUrl={url}\n          product={product}\n          userCapabilities={userCapabilities}\n          uploadIcon={uploadIcon}\n          resetIcon={resetIcon}\n        />\n      </CatalogRoute>\n    </Switch>\n  );\n};\n\nItemDetailDescription.propTypes = {\n  product: PropTypes.shape({\n    name: PropTypes.string,\n    long_description: PropTypes.string,\n    support_url: PropTypes.string,\n    documentation_url: PropTypes.string,\n    description: PropTypes.string,\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  url: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired,\n  userCapabilities: PropTypes.object.isRequired,\n  detailPaths: PropTypes.arrayOf(PropTypes.string),\n  uploadIcon: PropTypes.func.isRequired,\n  resetIcon: PropTypes.func.isRequired\n};\n\nexport default ItemDetailDescription;\n","import React, {\n  useEffect,\n  useState,\n  Fragment,\n  lazy,\n  Suspense,\n  useContext\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Grid, GridItem, Alert } from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\n\nimport ItemDetailInfoBar from './item-detail-info-bar';\nimport ItemDetailDescription from './item-detail-description';\nimport { PortfolioItemDetailToolbar } from './portfolio-item-detail-toolbar';\nimport TopToolbar from '../../../presentational-components/shared/top-toolbar';\nimport { getPortfolioItemDetail } from '../../../redux/actions/portfolio-actions';\nimport {\n  ProductLoaderPlaceholder,\n  AppPlaceholder\n} from '../../../presentational-components/shared/loader-placeholders';\nimport {\n  uploadPortfolioItemIcon,\n  resetPortfolioItemIcon\n} from '../../../helpers/portfolio/portfolio-helper';\nimport useQuery from '../../../utilities/use-query';\nimport {\n  PORTFOLIO_ITEM_ROUTE,\n  PORTFOLIO_ITEM_ROUTE_EDIT,\n  PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE\n} from '../../../constants/routes';\nimport CatalogRoute from '../../../routing/catalog-route';\nimport portfolioMessages from '../../../messages/portfolio.messages';\nimport BackToProducts from '../../../presentational-components/portfolio/back-to-products';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport { hasPermission } from '../../../helpers/shared/helpers';\nimport UserContext from '../../../user-context';\n\nconst SurveyEditor = lazy(() =>\n  import(\n    /* webpackChunkName: \"survey-editor\" */ '../../survey-editing/survey-editor'\n  )\n);\n\nconst requiredParams = [\n  'portfolio',\n  'source',\n  'portfolio-item',\n  'from-products'\n];\n\nconst PortfolioItemDetail = () => {\n  const formatMessage = useFormatMessage();\n  const [isOpen, setOpen] = useState(false);\n  const [isFetching, setIsFetching] = useState(true);\n  const dispatch = useDispatch();\n  const [queryValues, search] = useQuery(requiredParams);\n  const { pathname } = useLocation();\n  const { url } = useRouteMatch(PORTFOLIO_ITEM_ROUTE);\n  const portfolioItemData = useSelector(\n    ({ portfolioReducer: { portfolioItem } }) => portfolioItem\n  );\n  const portfolio = useSelector(\n    ({ portfolioReducer: { selectedPortfolio } }) => selectedPortfolio\n  );\n  const fromProducts = queryValues['from-products'] === 'true';\n  const { permissions: userPermissions } = useContext(UserContext);\n  const canLinkOrderProcesses = hasPermission(userPermissions, [\n    'catalog:order_processes:link'\n  ]);\n\n  const fetchData = (skipLoading) => {\n    if (!skipLoading) {\n      setIsFetching(true);\n    }\n\n    dispatch(\n      getPortfolioItemDetail({\n        portfolioItem: queryValues['portfolio-item'],\n        ...queryValues\n      })\n    )\n      .then(() => setIsFetching(false))\n      .catch(() => setIsFetching(false));\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({\n      id: fromProducts ? 'products' : 'portfolios',\n      secondaryNav: true\n    });\n    fetchData(false);\n  }, [queryValues['portfolio-item']]);\n\n  if (isFetching || Object.keys(portfolioItemData).length === 0) {\n    return (\n      <Section className=\"global-primary-background full-height\">\n        <TopToolbar breadcrumbs={!fromProducts}>\n          {fromProducts && <BackToProducts />}\n          <ProductLoaderPlaceholder />\n        </TopToolbar>\n      </Section>\n    );\n  }\n\n  const availability =\n    portfolioItemData?.source?.availability_status || 'unavailable';\n  const unavailable = [portfolioItemData?.source]\n    .filter(({ notFound }) => notFound)\n    .map(({ object }) => (\n      <Alert\n        className=\"pf-u-mb-sm\"\n        key={object}\n        variant=\"warning\"\n        isInline\n        title={formatMessage(portfolioMessages.objectUnavaiable, { object })}\n      />\n    ));\n  const uploadIcon = (file) =>\n    uploadPortfolioItemIcon(\n      portfolioItemData?.portfolioItem?.id,\n      file\n    ).then(() => fetchData(true));\n  const resetIcon = () =>\n    resetPortfolioItemIcon(portfolioItemData?.portfolioItem?.icon_id).then(\n      fetchData\n    );\n  const detailPaths = [\n    PORTFOLIO_ITEM_ROUTE,\n    `${url}/order`,\n    `${url}/copy`,\n    `${url}/edit-workflow`,\n    PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE\n  ];\n  return (\n    <Fragment>\n      <Switch>\n        <CatalogRoute\n          requiredCapabilities=\"update\"\n          userCapabilities={\n            portfolioItemData?.portfolioItem?.metadata.user_capabilities\n          }\n          path={`${url}/edit-survey`}\n        >\n          <Suspense fallback={<AppPlaceholder />}>\n            <SurveyEditor\n              closeUrl={url}\n              search={search}\n              uploadIcon={uploadIcon}\n              portfolioItem={portfolioItemData.portfolioItem}\n              portfolio={portfolio}\n            />\n          </Suspense>\n        </CatalogRoute>\n        <Route>\n          <Section className=\"full-height global-primary-background\">\n            <PortfolioItemDetailToolbar\n              fromProducts={fromProducts}\n              url={url}\n              isOpen={isOpen}\n              product={portfolioItemData.portfolioItem}\n              setOpen={setOpen}\n              isFetching={isFetching}\n              availability={availability}\n              userCapabilities={\n                portfolioItemData?.portfolioItem?.metadata.user_capabilities\n              }\n              orderable={portfolioItemData?.portfolioItem.metadata?.orderable}\n              canLinkOrderProcesses={canLinkOrderProcesses}\n            />\n            {unavailable.length > 0 && (\n              <div className=\"pf-u-mr-lg pf-u-ml-lg\">{unavailable}</div>\n            )}\n            {portfolioItemData?.source?.availability_status ===\n              'unavailable' && (\n              <Alert\n                className=\"pf-u-ml-lg pf-u-mr-lg\"\n                id=\"unavailable-alert-info\"\n                variant=\"info\"\n                isInline\n                title={formatMessage(portfolioMessages.sourceUnavaiable)}\n              />\n            )}\n            <Grid hasGutter className=\"pf-u-p-lg\">\n              <Route path={detailPaths} exact>\n                <GridItem md={3} lg={2}>\n                  <ItemDetailInfoBar\n                    product={portfolioItemData.portfolioItem}\n                    portfolio={portfolio}\n                    source={portfolioItemData.source}\n                  />\n                </GridItem>\n              </Route>\n              <GridItem\n                md={pathname === PORTFOLIO_ITEM_ROUTE_EDIT ? 12 : 9}\n                lg={pathname === PORTFOLIO_ITEM_ROUTE_EDIT ? 12 : 10}\n              >\n                <ItemDetailDescription\n                  resetIcon={resetIcon}\n                  uploadIcon={uploadIcon}\n                  product={portfolioItemData.portfolioItem}\n                  userCapabilities={\n                    portfolioItemData?.portfolioItem?.metadata.user_capabilities\n                  }\n                  url={url}\n                  detailPaths={detailPaths}\n                  search={search}\n                />\n              </GridItem>\n            </Grid>\n          </Section>\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n};\n\nexport default PortfolioItemDetail;\n","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","/* eslint-disable react/prop-types */\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { Button } from '@patternfly/react-core';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\nimport { AnyObject } from '../../types/common-types';\n\nconst SpinnerButton = styled(Button)`\n  display: flex !important;\n  align-items: center;\n`;\n\nconst SpinnerLabel = styled.span<{ showSpinner: boolean }>`\n  margin-right: ${({ showSpinner }) => (showSpinner ? '8px' : '0')};\n`;\n\nexport interface ButtonWithSpinnerProps extends AnyObject {\n  showSpinner?: boolean;\n  isDisabled?: boolean;\n}\nconst ButtonWithSpinner = forwardRef<HTMLButtonElement, ButtonWithSpinnerProps>(\n  ({ children, showSpinner = false, isDisabled = false, ...props }, ref) => (\n    <SpinnerButton ref={ref} {...props} isDisabled={isDisabled}>\n      <SpinnerLabel showSpinner={showSpinner}>{children}</SpinnerLabel>\n      {showSpinner && <Spinner size=\"md\" />}\n    </SpinnerButton>\n  )\n);\n\nButtonWithSpinner.displayName = 'ButtonWithSpinner';\n\nexport default ButtonWithSpinner;\n","import {\n  Workflow,\n  ResourceObject\n} from '@redhat-cloud-services/approval-client';\nimport { getWorkflowApi, getAxiosInstance } from '../shared/user-login';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\nimport { defaultSettings, PaginationConfiguration } from '../shared/pagination';\nimport {\n  ApiCollectionResponse,\n  SelectOptions,\n  InternalResourceObject\n} from '../../types/common-types';\n\nexport const getApprovalWorkflows = (): Promise<ApiCollectionResponse<\n  Workflow\n>> =>\n  (getWorkflowApi().listWorkflows() as unknown) as Promise<\n    ApiCollectionResponse<Workflow>\n  >;\n\nexport const loadWorkflowOptions = (\n  filterValue = '',\n  initialLookup: string[] = []\n): Promise<SelectOptions> => {\n  const initialLookupQuery = initialLookup\n    .map((workflow) => `filter[id][]=${workflow}`)\n    .join('&');\n\n  return getAxiosInstance()\n    .get(\n      `${APPROVAL_API_BASE}/workflows?filter[name][contains]=${filterValue}&${initialLookupQuery ||\n        ''}`\n    )\n    .then(({ data }) =>\n      data.map(({ id, name }: Workflow) => ({ label: name, value: id }))\n    );\n};\n\nexport const updateWorkflows = (\n  unlinkIds: string[],\n  linkIds: string[],\n  resourceObject: ResourceObject\n): Promise<void[]> => {\n  const unlinkPromises = unlinkIds\n    ? unlinkIds.map((wf) => getWorkflowApi().unlinkWorkflow(wf, resourceObject))\n    : [];\n  const linkPromises = linkIds\n    ? linkIds.map((wf) => getWorkflowApi().linkWorkflow(wf, resourceObject))\n    : [];\n  return (Promise.all([\n    ...unlinkPromises,\n    ...linkPromises\n  ]) as unknown) as Promise<void[]>;\n};\n\nexport const listWorkflowsForObject = (\n  resourceObject: InternalResourceObject,\n  pagination: PaginationConfiguration = {\n    limit: defaultSettings.limit,\n    offset: defaultSettings.offset\n  },\n  filter = ''\n): Promise<ApiCollectionResponse<Workflow>> => {\n  const objectQuery = `app_name=${resourceObject.appName}&object_type=${resourceObject.objectType}&object_id=${resourceObject.objectId}`;\n  const paginationQuery = `&limit=${pagination.limit}&offset=${pagination.offset}`;\n  const filterQuery = `&filter[name][contains]=${filter}`;\n  return getAxiosInstance().get(\n    `${APPROVAL_API_BASE}/workflows?${objectQuery}${filterQuery}${paginationQuery}`\n  );\n};\n","import { I18nFormatMessage } from '../redux/reducers/i18n-reducer';\nimport { GetReduxState } from '../types/redux';\n\nconst extractFormatMessage = (getState: GetReduxState): I18nFormatMessage =>\n  getState().i18nReducer.formatMessage!;\n\nexport default extractFormatMessage;\n","import { defineMessages } from 'react-intl';\n\nconst approvalMessages = defineMessages({\n  unlinkNotification: {\n    id: 'approval.notifications.unlink',\n    defaultMessage:\n      '{count, number} {count, plural, one {approval process was} other {approval processes were}} unlinked successfully.'\n  },\n  linkNotification: {\n    id: 'approval.notifications.link',\n    defaultMessage:\n      '{count, number} {count, plural, one {approval process was} other {approval processes were}} linked successfully.'\n  },\n  setWorkflow: {\n    id: 'approval.workflows.set',\n    defaultMessage:\n      'Select approval processes for <strong>{objectName}</strong>'\n  },\n  currentWorkflows: {\n    id: 'approval.workflows.current',\n    defaultMessage: 'Current approval processes'\n  }\n});\n\nexport default approvalMessages;\n","/* eslint-disable react/prop-types */\nimport React, { ReactNode, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateWorkflows } from '../../redux/actions/approval-actions';\nimport { APP_NAME } from '../../utilities/constants';\nimport {\n  loadWorkflowOptions,\n  listWorkflowsForObject\n} from '../../helpers/approval/approval-helper';\nimport useQuery from '../../utilities/use-query';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\nimport { defineMessage } from 'react-intl';\nimport approvalMessages from '../../messages/approval.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport TaggingModal, { Tag } from './tagging-modal';\nimport { Bold } from '../../presentational-components/shared/intl-rich-text-components';\nimport { CatalogLinkTo } from '../common/catalog-link';\n\nexport interface EditApprovalWorkflowProps {\n  pushParam: CatalogLinkTo;\n  objectType: keyof typeof APP_NAME;\n  objectName: (node: string) => ReactNode;\n  removeSearch?: boolean;\n  querySelector: 'portfolio' | 'platform' | 'inventory' | 'portfolio-item';\n  keepHash?: boolean;\n  onClose?: () => any;\n}\nconst EditApprovalWorkflow: React.ComponentType<EditApprovalWorkflowProps> = ({\n  objectType,\n  removeSearch,\n  keepHash = false,\n  querySelector,\n  pushParam,\n  objectName = () => objectType,\n  onClose\n}) => {\n  const formatMessage = useFormatMessage();\n  const { current: modalTitle } = useRef(\n    formatMessage(\n      defineMessage({\n        id: 'workflows.modal.title',\n        defaultMessage: 'Set approval process'\n      })\n    )\n  );\n  const dispatch = useDispatch();\n  const history = useEnhancedHistory({ removeSearch, keepHash });\n  const [query] = useQuery([querySelector]);\n\n  const close = () => {\n    onClose && onClose();\n    history.push(pushParam);\n  };\n\n  const onSubmit = (toLink: string[], toUnlink: string[]) => {\n    close();\n    dispatch(\n      updateWorkflows(toLink, toUnlink, {\n        object_type: objectType,\n        app_name: APP_NAME[objectType],\n        object_id: query[querySelector]\n      })\n    );\n  };\n\n  return (\n    <TaggingModal\n      title={modalTitle as string}\n      onClose={close}\n      onSubmit={onSubmit}\n      getInitialTags={() =>\n        listWorkflowsForObject({\n          objectType,\n          appName: APP_NAME[objectType],\n          objectId: query[querySelector]\n        }).then(({ data }) => data) as Promise<Tag[]>\n      }\n      loadTags={loadWorkflowOptions}\n      subTitle={formatMessage(approvalMessages.setWorkflow, {\n        strong: Bold,\n        objectName: objectName(query[querySelector])\n      })}\n      existingTagsMessage={formatMessage(approvalMessages.currentWorkflows)}\n    />\n  );\n};\n\nexport default EditApprovalWorkflow;\n","import { Dispatch } from 'redux';\nimport {\n  ApiCollectionResponse,\n  ApiMetadata,\n  InternalResourceObject\n} from '../../types/common-types';\nimport { ASYNC_ACTIONS } from '../action-types/approval-action-types';\nimport * as ApprovalHelper from '../../helpers/approval/approval-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport extractFormatMessage from '../../utilities/extract-format-message';\nimport approvalMessages from '../../messages/approval.messages';\nimport { AsyncMiddlewareAction, GetReduxState } from '../../types/redux';\nimport {\n  ResourceObject,\n  Workflow\n} from '@redhat-cloud-services/approval-client';\n\nexport const fetchWorkflows = (): AsyncMiddlewareAction<{\n  value?: string;\n  label?: string;\n}[]> => ({\n  type: ASYNC_ACTIONS.FETCH_WORKFLOWS,\n  payload: ApprovalHelper.getApprovalWorkflows().then(({ data }) =>\n    data.map(({ id, name }) => ({ value: id, label: name }))\n  )\n});\n\nexport const updateWorkflows = (\n  toLinkIds: string[],\n  toUnlinkIds: string[],\n  resourceObject: ResourceObject\n) => (dispatch: Dispatch, getState: GetReduxState): AsyncMiddlewareAction => {\n  const formatMessage = extractFormatMessage(getState);\n  return dispatch({\n    type: ASYNC_ACTIONS.UPDATE_WORKFLOWS,\n    payload: ApprovalHelper.updateWorkflows(\n      toUnlinkIds,\n      toLinkIds,\n      resourceObject\n    ).then(() =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Success updating approval process',\n          dismissable: true,\n          description: `${\n            toUnlinkIds.length > 0\n              ? formatMessage &&\n                formatMessage(approvalMessages.unlinkNotification, {\n                  count: toUnlinkIds.length\n                })\n              : ''\n          }\n          ${\n            toLinkIds.length > 0\n              ? formatMessage(approvalMessages.linkNotification, {\n                  count: toLinkIds.length\n                })\n              : ''\n          }`\n        })\n      )\n    )\n  });\n};\n\nexport const listWorkflowsForObject = (\n  resourceObject: InternalResourceObject,\n  meta: ApiMetadata = {\n    limit: defaultSettings.limit,\n    offset: defaultSettings.offset\n  },\n  filter = ''\n): AsyncMiddlewareAction<ApiCollectionResponse<Workflow>> => ({\n  type: ASYNC_ACTIONS.RESOLVE_WORKFLOWS,\n  payload: ApprovalHelper.listWorkflowsForObject(resourceObject, meta, filter)\n});\n","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  LevelItem\n} from '@patternfly/react-core';\nimport ButtonWithSpinner from '../../../presentational-components/shared/button-with-spinner';\nimport CatalogLink from '../../common/catalog-link';\nimport actionMessages from '../../../messages/actions.messages';\nimport portfolioMessages from '../../../messages/portfolio.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport orderProcessesMessages from '../../../messages/order-processes.messages';\nimport { PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE } from '../../../constants/routes';\n\nconst DetailToolbarActions = ({\n  copyUrl,\n  orderUrl,\n  editUrl,\n  workflowUrl,\n  editSurveyUrl,\n  isOpen,\n  setOpen,\n  isFetching,\n  availability,\n  orderable,\n  userCapabilities: { update, copy, set_approval },\n  canLinkOrderProcesses\n}) => {\n  const formatMessage = useFormatMessage();\n  const dropdownItems = [];\n\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Edit Portfolio\"\n        key=\"edit-portfolio-item\"\n        id=\"edit-portfolio-item\"\n        component={\n          <CatalogLink pathname={editUrl} preserveSearch>\n            {formatMessage(actionMessages.edit)}\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (copy) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Copy Portfolio\"\n        key=\"copy-portfolio-item\"\n        id=\"copy-portfolio-item\"\n        component={\n          <CatalogLink pathname={copyUrl} preserveSearch>\n            {formatMessage(actionMessages.copy)}\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (set_approval) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Set approval\"\n        key=\"set-approval_workflow\"\n        id=\"set-approval_workflow\"\n        component={\n          <CatalogLink pathname={workflowUrl} preserveSearch>\n            {formatMessage(actionMessages.setApproval)}\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (update && canLinkOrderProcesses) {\n    const orderProcessAction = formatMessage(\n      orderProcessesMessages.setOrderProcess\n    );\n    dropdownItems.push(\n      <DropdownItem\n        aria-label={orderProcessAction}\n        key=\"attach-order-processes\"\n        id=\"attach-order-processes\"\n        component={\n          <CatalogLink\n            preserveSearch\n            pathname={PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE}\n          >\n            {orderProcessAction}\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Edit survey\"\n        key=\"edit-survey\"\n        id=\"edit-survey\"\n        component={\n          <CatalogLink pathname={editSurveyUrl} preserveSearch>\n            {formatMessage(portfolioMessages.portfolioItemSurvey)}\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  return (\n    <Fragment>\n      <LevelItem>\n        <CatalogLink\n          isDisabled={\n            isFetching || availability === 'unavailable' || !orderable\n          }\n          pathname={orderUrl}\n          preserveSearch\n        >\n          <ButtonWithSpinner\n            isDisabled={\n              isFetching || availability === 'unavailable' || !orderable\n            }\n            showSpinner={isFetching}\n            variant=\"primary\"\n            id=\"order-portfolio-item\"\n            ouiaId=\"order-portfolio-item\"\n          >\n            {formatMessage(portfolioMessages.portfolioItemOrder)}\n          </ButtonWithSpinner>\n        </CatalogLink>\n      </LevelItem>\n      <LevelItem style={{ marginLeft: 16 }}>\n        {availability !== 'unavailable' && dropdownItems.length > 0 && (\n          <Dropdown\n            isPlain\n            onToggle={setOpen}\n            onSelect={() => setOpen(false)}\n            position={DropdownPosition.right}\n            toggle={\n              <KebabToggle\n                id=\"portfolio-item-actions-toggle\"\n                onToggle={(isOpen) => setOpen(isOpen)}\n              />\n            }\n            isOpen={isOpen}\n            dropdownItems={dropdownItems}\n          />\n        )}\n      </LevelItem>\n    </Fragment>\n  );\n};\n\nDetailToolbarActions.propTypes = {\n  orderUrl: PropTypes.string.isRequired,\n  editUrl: PropTypes.string.isRequired,\n  copyUrl: PropTypes.string.isRequired,\n  editSurveyUrl: PropTypes.string.isRequired,\n  workflowUrl: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool,\n  setOpen: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool,\n  availability: PropTypes.oneOf(['available', 'unavailable']).isRequired,\n  orderable: PropTypes.bool,\n  userCapabilities: PropTypes.shape({\n    update: PropTypes.bool,\n    copy: PropTypes.bool,\n    set_approval: PropTypes.bool\n  }).isRequired,\n  canLinkOrderProcesses: PropTypes.bool\n};\n\nDetailToolbarActions.defaultProps = {\n  isFetching: false,\n  orderable: true,\n  canLinkOrderProcesses: false\n};\n\nexport default DetailToolbarActions;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Link, Switch, useLocation } from 'react-router-dom';\nimport {\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Button,\n  Flex,\n  Dropdown,\n  KebabToggle,\n  DropdownItem\n} from '@patternfly/react-core';\n\nimport DetailToolbarActions from './detail-toolbar-actions';\nimport { CATALOG_API_BASE } from '../../../utilities/constants';\nimport CardIcon from '../../../presentational-components/shared/card-icon';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../../../presentational-components/shared/top-toolbar';\nimport ButtonWithSpinner from '../../../presentational-components/shared/button-with-spinner';\nimport { StyledLevelItem } from '../../../presentational-components/styled-components/level';\nimport actionMessages from '../../../messages/actions.messages';\nimport portfolioMessages from '../../../messages/portfolio.messages';\nimport BackToProducts from '../../../presentational-components/portfolio/back-to-products';\nimport { PORTFOLIO_ITEM_ROUTE_EDIT } from '../../../constants/routes';\nimport useFormatMessage from '../../../utilities/use-format-message';\n\nconst PortfolioItemIconItem = ({ id, sourceId }) => (\n  <CardIcon\n    src={`${CATALOG_API_BASE}/portfolio_items/${id}/icon`}\n    sourceId={sourceId}\n    height={64}\n  />\n);\n\nPortfolioItemIconItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  sourceId: PropTypes.string.isRequired\n};\n\nexport const PortfolioItemDetailToolbar = ({\n  url,\n  isOpen,\n  product,\n  setOpen,\n  isFetching,\n  availability,\n  userCapabilities,\n  orderable,\n  fromProducts,\n  canLinkOrderProcesses\n}) => {\n  const formatMessage = useFormatMessage();\n  const { pathname } = useLocation();\n  return (\n    <TopToolbar\n      paddingBottom={pathname !== PORTFOLIO_ITEM_ROUTE_EDIT}\n      breadcrumbs={!fromProducts}\n    >\n      {fromProducts && <BackToProducts />}\n      <Level className=\"flex-no-wrap\">\n        <Switch>\n          <Route path={PORTFOLIO_ITEM_ROUTE_EDIT} exact>\n            <TopToolbarTitle\n              title={formatMessage(portfolioMessages.editProduct)}\n              noData\n            />\n          </Route>\n          <Route>\n            <StyledLevelItem grow alignStart className=\"pf-l-flex\">\n              {userCapabilities.update ? (\n                <PortfolioItemIconItem\n                  id={product.id}\n                  sourceId={product.service_offering_source_ref}\n                />\n              ) : (\n                <CardIcon\n                  src={`${CATALOG_API_BASE}/portfolio_items/${product.id}/icon`}\n                  sourceId={product.service_offering_source_ref}\n                  height={64}\n                />\n              )}\n              <TextContent className=\"pf-u-ml-md\">\n                <Text component={TextVariants.h1}>{product.name}</Text>\n              </TextContent>\n            </StyledLevelItem>\n            <LevelItem style={{ minHeight: 36 }} className=\"flex-item-no-wrap\">\n              <Level className=\"flex-no-wrap\">\n                <DetailToolbarActions\n                  isOpen={isOpen}\n                  setOpen={(open) => setOpen(open)}\n                  orderUrl={`${url}/order`}\n                  editUrl={`${url}/edit`}\n                  copyUrl={`${url}/copy`}\n                  editSurveyUrl={`${url}/edit-survey`}\n                  workflowUrl={`${url}/edit-workflow`}\n                  isFetching={isFetching}\n                  availability={availability}\n                  orderable={orderable}\n                  userCapabilities={userCapabilities}\n                  canLinkOrderProcesses={canLinkOrderProcesses}\n                />\n              </Level>\n            </LevelItem>\n          </Route>\n        </Switch>\n      </Level>\n    </TopToolbar>\n  );\n};\n\nPortfolioItemDetailToolbar.propTypes = {\n  url: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool,\n  product: PropTypes.shape({\n    distributor: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    service_offering_source_ref: PropTypes.string.isRequired,\n    metadata: PropTypes.shape({ orderable: PropTypes.bool })\n  }).isRequired,\n  setOpen: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool,\n  availability: PropTypes.oneOf(['available', 'unavailable']).isRequired,\n  userCapabilities: PropTypes.object,\n  fromProducts: PropTypes.bool,\n  orderable: PropTypes.bool,\n  canLinkOrderProcesses: PropTypes.bool\n};\n\nPortfolioItemDetailToolbar.defaultProps = {\n  isFetching: false,\n  orderable: true\n};\n\nconst SurveyEditorDropdown = ({ handleResetSurvey }) => {\n  const formatMessage = useFormatMessage();\n  const [isOpen, setIsOpen] = useState(false);\n  return (\n    <Dropdown\n      isOpen={isOpen}\n      isPlain\n      onSelect={() => setIsOpen(false)}\n      position=\"right\"\n      toggle={<KebabToggle onToggle={(isOpen) => setIsOpen(isOpen)} />}\n      dropdownItems={[\n        <DropdownItem\n          onClick={handleResetSurvey}\n          component=\"button\"\n          key=\"synchronize\"\n        >\n          {formatMessage(portfolioMessages.restoreSurvey)}\n        </DropdownItem>\n      ]}\n    />\n  );\n};\n\nSurveyEditorDropdown.propTypes = {\n  handleResetSurvey: PropTypes.func.isRequired\n};\n\nexport const SurveyEditingToolbar = ({\n  handleSaveSurvey,\n  closeUrl,\n  search,\n  isFetching,\n  isValid,\n  modified,\n  handleResetSurvey\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <TopToolbar breadcrumbs>\n      <Level>\n        <StyledLevelItem grow alignStart className=\"pf-l-flex\">\n          <TextContent>\n            <Text component={TextVariants.h1}>\n              {formatMessage(portfolioMessages.portfolioItemSurvey)}\n            </Text>\n          </TextContent>\n        </StyledLevelItem>\n        <LevelItem>\n          <Flex className=\"align-items-center\">\n            <ButtonWithSpinner\n              variant=\"primary\"\n              ouiaId={'save-survey'}\n              showSpinner={isFetching}\n              isDisabled={isFetching || !isValid}\n              onClick={handleSaveSurvey}\n            >\n              {formatMessage(actionMessages.save)}\n            </ButtonWithSpinner>\n            <Link\n              to={{\n                pathname: closeUrl,\n                search\n              }}\n            >\n              <Button ouiaId={'cancel'} variant=\"link\">\n                Cancel\n              </Button>\n            </Link>\n            {modified && (\n              <SurveyEditorDropdown handleResetSurvey={handleResetSurvey} />\n            )}\n          </Flex>\n        </LevelItem>\n      </Level>\n    </TopToolbar>\n  );\n};\n\nSurveyEditingToolbar.propTypes = {\n  handleSaveSurvey: PropTypes.func.isRequired,\n  closeUrl: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired,\n  isFetching: PropTypes.bool,\n  isValid: PropTypes.bool,\n  modified: PropTypes.bool,\n  handleResetSurvey: PropTypes.func,\n  fromProducts: PropTypes.bool,\n  canLinkOrderProcesses: PropTypes.bool\n};\n","\"use strict\"\nexports.__esModule = true;\nexports.PencilAltIconConfig = {\n  name: 'PencilAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PencilAltIcon = require('../createIcon').createIcon(exports.PencilAltIconConfig);\nexports[\"default\"] = exports.PencilAltIcon;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Stack = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst stack_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/layouts/Stack/stack\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nexports.Stack = (_a) => {\n    var { hasGutter = false, className = '', children = null, component = 'div' } = _a, props = tslib_1.__rest(_a, [\"hasGutter\", \"className\", \"children\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { className: react_styles_1.css(stack_1.default.stack, hasGutter && stack_1.default.modifiers.gutter, className) }), children));\n};\nexports.Stack.displayName = 'Stack';\n//# sourceMappingURL=Stack.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StackItem = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst stack_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/layouts/Stack/stack\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nexports.StackItem = (_a) => {\n    var { isFilled = false, className = '', children = null } = _a, props = tslib_1.__rest(_a, [\"isFilled\", \"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: react_styles_1.css(stack_1.default.stackItem, isFilled && stack_1.default.modifiers.fill, className) }), children));\n};\nexports.StackItem.displayName = 'StackItem';\n//# sourceMappingURL=StackItem.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Flex = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst flex_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/layouts/Flex/flex\"));\nconst util_1 = require(\"../../helpers/util\");\nexports.Flex = (_a) => {\n    var { children = null, className = '', spacer, spaceItems, grow, shrink, flex, direction, alignItems, alignContent, alignSelf, align, justifyContent, display, fullWidth, flexWrap } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"spacer\", \"spaceItems\", \"grow\", \"shrink\", \"flex\", \"direction\", \"alignItems\", \"alignContent\", \"alignSelf\", \"align\", \"justifyContent\", \"display\", \"fullWidth\", \"flexWrap\"]);\n    return (React.createElement(\"div\", Object.assign({ className: react_styles_1.css(flex_1.default.flex, util_1.formatBreakpointMods(spacer, flex_1.default), util_1.formatBreakpointMods(spaceItems, flex_1.default), util_1.formatBreakpointMods(grow, flex_1.default), util_1.formatBreakpointMods(shrink, flex_1.default), util_1.formatBreakpointMods(flex, flex_1.default), util_1.formatBreakpointMods(direction, flex_1.default), util_1.formatBreakpointMods(alignItems, flex_1.default), util_1.formatBreakpointMods(alignContent, flex_1.default), util_1.formatBreakpointMods(alignSelf, flex_1.default), util_1.formatBreakpointMods(align, flex_1.default), util_1.formatBreakpointMods(justifyContent, flex_1.default), util_1.formatBreakpointMods(display, flex_1.default), util_1.formatBreakpointMods(fullWidth, flex_1.default), util_1.formatBreakpointMods(flexWrap, flex_1.default), className) }, props), children));\n};\nexports.Flex.displayName = 'Flex';\n//# sourceMappingURL=Flex.js.map"],"sourceRoot":""}