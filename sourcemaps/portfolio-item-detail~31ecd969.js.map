{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./src/presentational-components/shared/button-with-spinner.tsx","webpack:///./src/helpers/approval/approval-helper.ts","webpack:///./src/utilities/extract-format-message.ts","webpack:///./src/messages/approval.messages.ts","webpack:///./src/smart-components/common/edit-approval-workflow.tsx","webpack:///./src/redux/actions/approval-actions.ts","webpack:///./src/smart-components/portfolio/portfolio-item-detail/detail-toolbar-actions.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/portfolio-item-detail-toolbar.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/pencil-alt-icon.js","webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Stack/Stack.js","webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Stack/StackItem.js","webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Flex/Flex.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/item-detail-info-bar.js","webpack:///./src/forms/edit-portfolio-item-form.schema.ts","webpack:///./src/messages/icon.messages.ts","webpack:///./src/smart-components/portfolio/portfolio-item-detail/icon-upload.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/edit-portfolio-item.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/item-detail-description.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/portfolio-item-detail.js"],"names":["objectWithoutPropertiesLoose","module","exports","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","SpinnerButton","SpinnerLabel","span","ButtonWithSpinner","ref","children","showSpinner","isDisabled","props","size","displayName","loadWorkflowOptions","filterValue","initialLookup","initialLookupQuery","map","workflow","join","get","then","id","label","value","updateWorkflows","unlinkIds","linkIds","resourceObject","unlinkPromises","wf","unlinkWorkflow","linkPromises","linkWorkflow","Promise","all","listWorkflowsForObject","pagination","filter","limit","offset","objectQuery","appName","objectType","objectId","paginationQuery","filterQuery","getState","i18nReducer","formatMessage","unlinkNotification","defaultMessage","linkNotification","setWorkflow","currentWorkflows","removeSearch","keepHash","querySelector","pushParam","objectName","onClose","modalTitle","dispatch","history","query","close","push","title","onSubmit","toLink","toUnlink","toLinkIds","toUnlinkIds","object_type","app_name","object_id","type","UPDATE_WORKFLOWS","payload","variant","dismissable","description","count","getInitialTags","loadTags","subTitle","strong","existingTagsMessage","DetailToolbarActions","copyUrl","orderUrl","editUrl","workflowUrl","editSurveyUrl","isOpen","setOpen","isFetching","availability","orderable","userCapabilities","update","copy","set_approval","canLinkOrderProcesses","useFormatMessage","dropdownItems","DropdownItem","aria-label","component","pathname","preserveSearch","actionMessages","edit","role","setApproval","orderProcessAction","orderProcessesMessages","setOrderProcess","PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE","portfolioMessages","portfolioItemSurvey","LevelItem","ouiaId","portfolioItemOrder","style","marginLeft","Dropdown","isPlain","onToggle","onSelect","position","DropdownPosition","right","toggle","KebabToggle","propTypes","PropTypes","string","isRequired","bool","func","oneOf","shape","defaultProps","PortfolioItemIconItem","sourceId","src","CATALOG_API_BASE","height","PortfolioItemDetailToolbar","url","product","fromProducts","useLocation","paddingBottom","PORTFOLIO_ITEM_ROUTE_EDIT","breadcrumbs","Level","className","path","exact","editProduct","noData","grow","alignStart","service_offering_source_ref","TextContent","Text","TextVariants","h1","name","minHeight","open","distributor","metadata","object","SurveyEditorDropdown","handleResetSurvey","useState","setIsOpen","onClick","restoreSurvey","SurveyEditingToolbar","handleSaveSurvey","closeUrl","search","isValid","modified","Flex","save","to","Button","__esModule","PencilAltIconConfig","width","svgPath","yOffset","xOffset","PencilAltIcon","createIcon","defineProperty","Stack","tslib_1","React","__importStar","stack_1","__importDefault","react_styles_1","_a","hasGutter","__rest","Component","createElement","assign","css","default","stack","modifiers","gutter","StackItem","isFilled","stackItem","fill","flex_1","util_1","spacer","spaceItems","shrink","flex","direction","alignItems","alignContent","alignSelf","align","justifyContent","display","fullWidth","flexWrap","formatBreakpointMods","messages","ItemDetailInfoBar","portfolio","p","DateFormat","date","created_at","updated_at","fields","TEXT_FIELD","validate","REQUIRED","URL","changeIcon","resetIcon","UploadButton","styled","UploadIconWrapper","div","ImagePreview","img","StyledDropdown","IconUpload","uploadIcon","enableReset","inputRef","useRef","image","setImage","isUploading","setIsUploading","useDispatch","current","click","iconMessages","undefined","accept","onChange","event","files","error","addNotification","portfolioItemIconTitle","data","errors","detail","hidden","disabled","DropdownToggle","toggleIndicator","stopPropagation","Spinner","createObjectURL","oneOfType","node","arrayOf","EditPortfolioItem","cancelUrl","owner","useHistory","icon_id","initialValues","values","updatePortfolioItem","user_capabilities","schema","editPortfolioItemSchema","templateProps","disableSubmit","onCancel","ItemDetailDescription","detailPaths","PORTFOLIO_ITEM_RESOURCE_TYPE","render","long_description","h6","portfolioItemOverview","support_url","href","rel","portfolioItemSupport","documentation_url","portfolioItemDocumentation","portfolioItemDocLink","requiredCapabilities","SurveyEditor","lazy","requiredParams","PortfolioItemDetail","setIsFetching","useQuery","queryValues","useRouteMatch","PORTFOLIO_ITEM_ROUTE","portfolioItemData","useSelector","portfolioReducer","portfolioItem","selectedPortfolio","userPermissions","useContext","UserContext","permissions","hasPermission","fetchData","skipLoading","getPortfolioItemDetail","useEffect","insights","chrome","appNavClick","secondaryNav","Section","availability_status","unavailable","notFound","Alert","isInline","objectUnavaiable","file","uploadPortfolioItemIcon","fallback","sourceUnavaiable","Grid","GridItem","md","lg","resetPortfolioItemIcon"],"mappings":"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","file":"js/portfolio-item-detail~31ecd969.cb32c0335252068888c5.js","sourcesContent":["var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","/* eslint-disable react/prop-types */\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { Button } from '@patternfly/react-core';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\nimport { AnyObject } from '../../types/common-types';\n\nconst SpinnerButton = styled(Button)`\n  display: flex !important;\n  align-items: center;\n`;\n\nconst SpinnerLabel = styled.span<{ showSpinner: boolean }>`\n  margin-right: ${({ showSpinner }) => (showSpinner ? '8px' : '0')};\n`;\n\nexport interface ButtonWithSpinnerProps extends AnyObject {\n  showSpinner?: boolean;\n  isDisabled?: boolean;\n}\nconst ButtonWithSpinner = forwardRef<HTMLButtonElement, ButtonWithSpinnerProps>(\n  ({ children, showSpinner = false, isDisabled = false, ...props }, ref) => (\n    <SpinnerButton ref={ref} {...props} isDisabled={isDisabled}>\n      <SpinnerLabel showSpinner={showSpinner}>{children}</SpinnerLabel>\n      {showSpinner && <Spinner size=\"md\" />}\n    </SpinnerButton>\n  )\n);\n\nButtonWithSpinner.displayName = 'ButtonWithSpinner';\n\nexport default ButtonWithSpinner;\n","import {\n  Workflow,\n  ResourceObject\n} from '@redhat-cloud-services/approval-client';\nimport { getWorkflowApi, getAxiosInstance } from '../shared/user-login';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\nimport { defaultSettings, PaginationConfiguration } from '../shared/pagination';\nimport {\n  ApiCollectionResponse,\n  SelectOptions,\n  InternalResourceObject\n} from '../../types/common-types';\n\nexport const getApprovalWorkflows = (): Promise<ApiCollectionResponse<\n  Workflow\n>> =>\n  (getWorkflowApi().listWorkflows() as unknown) as Promise<\n    ApiCollectionResponse<Workflow>\n  >;\n\nexport const loadWorkflowOptions = (\n  filterValue = '',\n  initialLookup: string[] = []\n): Promise<SelectOptions> => {\n  const initialLookupQuery = initialLookup\n    .map((workflow) => `filter[id][]=${workflow}`)\n    .join('&');\n\n  return getAxiosInstance()\n    .get(\n      `${APPROVAL_API_BASE}/workflows?filter[name][contains]=${filterValue}&${initialLookupQuery ||\n        ''}`\n    )\n    .then(({ data }) =>\n      data.map(({ id, name }: Workflow) => ({ label: name, value: id }))\n    );\n};\n\nexport const updateWorkflows = (\n  unlinkIds: string[],\n  linkIds: string[],\n  resourceObject: ResourceObject\n): Promise<void[]> => {\n  const unlinkPromises = unlinkIds\n    ? unlinkIds.map((wf) => getWorkflowApi().unlinkWorkflow(wf, resourceObject))\n    : [];\n  const linkPromises = linkIds\n    ? linkIds.map((wf) => getWorkflowApi().linkWorkflow(wf, resourceObject))\n    : [];\n  return (Promise.all([\n    ...unlinkPromises,\n    ...linkPromises\n  ]) as unknown) as Promise<void[]>;\n};\n\nexport const listWorkflowsForObject = (\n  resourceObject: InternalResourceObject,\n  pagination: PaginationConfiguration = {\n    limit: defaultSettings.limit,\n    offset: defaultSettings.offset\n  },\n  filter = ''\n): Promise<ApiCollectionResponse<Workflow>> => {\n  const objectQuery = `app_name=${resourceObject.appName}&object_type=${resourceObject.objectType}&object_id=${resourceObject.objectId}`;\n  const paginationQuery = `&limit=${pagination.limit}&offset=${pagination.offset}`;\n  const filterQuery = `&filter[name][contains]=${filter}`;\n  return getAxiosInstance().get(\n    `${APPROVAL_API_BASE}/workflows?${objectQuery}${filterQuery}${paginationQuery}`\n  );\n};\n","import { I18nFormatMessage } from '../redux/reducers/i18n-reducer';\nimport { GetReduxState } from '../types/redux';\n\nconst extractFormatMessage = (getState: GetReduxState): I18nFormatMessage =>\n  getState().i18nReducer.formatMessage!;\n\nexport default extractFormatMessage;\n","import { defineMessages } from 'react-intl';\n\nconst approvalMessages = defineMessages({\n  unlinkNotification: {\n    id: 'approval.notifications.unlink',\n    defaultMessage:\n      '{count, number} {count, plural, one {approval process was} other {approval processes were}} unlinked successfully.'\n  },\n  linkNotification: {\n    id: 'approval.notifications.link',\n    defaultMessage:\n      '{count, number} {count, plural, one {approval process was} other {approval processes were}} linked successfully.'\n  },\n  setWorkflow: {\n    id: 'approval.workflows.set',\n    defaultMessage:\n      'Select approval processes for <strong>{objectName}</strong>'\n  },\n  currentWorkflows: {\n    id: 'approval.workflows.current',\n    defaultMessage: 'Current approval processes'\n  }\n});\n\nexport default approvalMessages;\n","/* eslint-disable react/prop-types */\nimport React, { ReactNode, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateWorkflows } from '../../redux/actions/approval-actions';\nimport { APP_NAME } from '../../utilities/constants';\nimport {\n  loadWorkflowOptions,\n  listWorkflowsForObject\n} from '../../helpers/approval/approval-helper';\nimport useQuery from '../../utilities/use-query';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\nimport { defineMessage } from 'react-intl';\nimport approvalMessages from '../../messages/approval.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport TaggingModal, { Tag } from './tagging-modal';\nimport { Bold } from '../../presentational-components/shared/intl-rich-text-components';\nimport { CatalogLinkTo } from '../common/catalog-link';\n\nexport interface EditApprovalWorkflowProps {\n  pushParam: CatalogLinkTo;\n  objectType: keyof typeof APP_NAME;\n  objectName: (node: string) => ReactNode;\n  removeSearch?: boolean;\n  querySelector: 'portfolio' | 'platform' | 'inventory' | 'portfolio-item';\n  keepHash?: boolean;\n  onClose?: () => any;\n}\nconst EditApprovalWorkflow: React.ComponentType<EditApprovalWorkflowProps> = ({\n  objectType,\n  removeSearch,\n  keepHash = false,\n  querySelector,\n  pushParam,\n  objectName = () => objectType,\n  onClose\n}) => {\n  const formatMessage = useFormatMessage();\n  const { current: modalTitle } = useRef(\n    formatMessage(\n      defineMessage({\n        id: 'workflows.modal.title',\n        defaultMessage: 'Set approval process'\n      })\n    )\n  );\n  const dispatch = useDispatch();\n  const history = useEnhancedHistory({ removeSearch, keepHash });\n  const [query] = useQuery([querySelector]);\n\n  const close = () => {\n    onClose && onClose();\n    history.push(pushParam);\n  };\n\n  const onSubmit = (toLink: string[], toUnlink: string[]) => {\n    close();\n    dispatch(\n      updateWorkflows(toLink, toUnlink, {\n        object_type: objectType,\n        app_name: APP_NAME[objectType],\n        object_id: query[querySelector]\n      })\n    );\n  };\n\n  return (\n    <TaggingModal\n      title={modalTitle as string}\n      onClose={close}\n      onSubmit={onSubmit}\n      getInitialTags={() =>\n        listWorkflowsForObject({\n          objectType,\n          appName: APP_NAME[objectType],\n          objectId: query[querySelector]\n        }).then(({ data }) => data) as Promise<Tag[]>\n      }\n      loadTags={loadWorkflowOptions}\n      subTitle={formatMessage(approvalMessages.setWorkflow, {\n        strong: Bold,\n        objectName: objectName(query[querySelector])\n      })}\n      existingTagsMessage={formatMessage(approvalMessages.currentWorkflows)}\n    />\n  );\n};\n\nexport default EditApprovalWorkflow;\n","import { Dispatch } from 'redux';\nimport {\n  ApiCollectionResponse,\n  ApiMetadata,\n  InternalResourceObject\n} from '../../types/common-types';\nimport { ASYNC_ACTIONS } from '../action-types/approval-action-types';\nimport * as ApprovalHelper from '../../helpers/approval/approval-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport extractFormatMessage from '../../utilities/extract-format-message';\nimport approvalMessages from '../../messages/approval.messages';\nimport { AsyncMiddlewareAction, GetReduxState } from '../../types/redux';\nimport {\n  ResourceObject,\n  Workflow\n} from '@redhat-cloud-services/approval-client';\n\nexport const fetchWorkflows = (): AsyncMiddlewareAction<{\n  value?: string;\n  label?: string;\n}[]> => ({\n  type: ASYNC_ACTIONS.FETCH_WORKFLOWS,\n  payload: ApprovalHelper.getApprovalWorkflows().then(({ data }) =>\n    data.map(({ id, name }) => ({ value: id, label: name }))\n  )\n});\n\nexport const updateWorkflows = (\n  toLinkIds: string[],\n  toUnlinkIds: string[],\n  resourceObject: ResourceObject\n) => (dispatch: Dispatch, getState: GetReduxState): AsyncMiddlewareAction => {\n  const formatMessage = extractFormatMessage(getState);\n  return dispatch({\n    type: ASYNC_ACTIONS.UPDATE_WORKFLOWS,\n    payload: ApprovalHelper.updateWorkflows(\n      toUnlinkIds,\n      toLinkIds,\n      resourceObject\n    ).then(() =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Success updating approval process',\n          dismissable: true,\n          description: `${\n            toUnlinkIds.length > 0\n              ? formatMessage &&\n                formatMessage(approvalMessages.unlinkNotification, {\n                  count: toUnlinkIds.length\n                })\n              : ''\n          }\n          ${\n            toLinkIds.length > 0\n              ? formatMessage(approvalMessages.linkNotification, {\n                  count: toLinkIds.length\n                })\n              : ''\n          }`\n        })\n      )\n    )\n  });\n};\n\nexport const listWorkflowsForObject = (\n  resourceObject: InternalResourceObject,\n  meta: ApiMetadata = {\n    limit: defaultSettings.limit,\n    offset: defaultSettings.offset\n  },\n  filter = ''\n): AsyncMiddlewareAction<ApiCollectionResponse<Workflow>> => ({\n  type: ASYNC_ACTIONS.RESOLVE_WORKFLOWS,\n  payload: ApprovalHelper.listWorkflowsForObject(resourceObject, meta, filter)\n});\n","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  LevelItem\n} from '@patternfly/react-core';\nimport ButtonWithSpinner from '../../../presentational-components/shared/button-with-spinner';\nimport CatalogLink from '../../common/catalog-link';\nimport actionMessages from '../../../messages/actions.messages';\nimport portfolioMessages from '../../../messages/portfolio.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport orderProcessesMessages from '../../../messages/order-processes.messages';\nimport { PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE } from '../../../constants/routes';\n\nconst DetailToolbarActions = ({\n  copyUrl,\n  orderUrl,\n  editUrl,\n  workflowUrl,\n  editSurveyUrl,\n  isOpen,\n  setOpen,\n  isFetching,\n  availability,\n  orderable,\n  userCapabilities: { update, copy, set_approval },\n  canLinkOrderProcesses\n}) => {\n  const formatMessage = useFormatMessage();\n  const dropdownItems = [];\n\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Edit Portfolio\"\n        key=\"edit-portfolio-item\"\n        id=\"edit-portfolio-item\"\n        component={\n          <CatalogLink pathname={editUrl} preserveSearch>\n            {formatMessage(actionMessages.edit)}\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (copy) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Copy Portfolio\"\n        key=\"copy-portfolio-item\"\n        id=\"copy-portfolio-item\"\n        component={\n          <CatalogLink pathname={copyUrl} preserveSearch>\n            {formatMessage(actionMessages.copy)}\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (set_approval) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Set approval\"\n        key=\"set-approval_workflow\"\n        id=\"set-approval_workflow\"\n        component={\n          <CatalogLink pathname={workflowUrl} preserveSearch>\n            {formatMessage(actionMessages.setApproval)}\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (update && canLinkOrderProcesses) {\n    const orderProcessAction = formatMessage(\n      orderProcessesMessages.setOrderProcess\n    );\n    dropdownItems.push(\n      <DropdownItem\n        aria-label={orderProcessAction}\n        key=\"attach-order-processes\"\n        id=\"attach-order-processes\"\n        component={\n          <CatalogLink\n            preserveSearch\n            pathname={PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE}\n          >\n            {orderProcessAction}\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Edit survey\"\n        key=\"edit-survey\"\n        id=\"edit-survey\"\n        component={\n          <CatalogLink pathname={editSurveyUrl} preserveSearch>\n            {formatMessage(portfolioMessages.portfolioItemSurvey)}\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  return (\n    <Fragment>\n      <LevelItem>\n        <CatalogLink\n          isDisabled={\n            isFetching || availability === 'unavailable' || !orderable\n          }\n          pathname={orderUrl}\n          preserveSearch\n        >\n          <ButtonWithSpinner\n            isDisabled={\n              isFetching || availability === 'unavailable' || !orderable\n            }\n            showSpinner={isFetching}\n            variant=\"primary\"\n            id=\"order-portfolio-item\"\n            ouiaId=\"order-portfolio-item\"\n          >\n            {formatMessage(portfolioMessages.portfolioItemOrder)}\n          </ButtonWithSpinner>\n        </CatalogLink>\n      </LevelItem>\n      <LevelItem style={{ marginLeft: 16 }}>\n        {availability !== 'unavailable' && dropdownItems.length > 0 && (\n          <Dropdown\n            isPlain\n            onToggle={setOpen}\n            onSelect={() => setOpen(false)}\n            position={DropdownPosition.right}\n            toggle={\n              <KebabToggle\n                id=\"portfolio-item-actions-toggle\"\n                onToggle={(isOpen) => setOpen(isOpen)}\n              />\n            }\n            isOpen={isOpen}\n            dropdownItems={dropdownItems}\n          />\n        )}\n      </LevelItem>\n    </Fragment>\n  );\n};\n\nDetailToolbarActions.propTypes = {\n  orderUrl: PropTypes.string.isRequired,\n  editUrl: PropTypes.string.isRequired,\n  copyUrl: PropTypes.string.isRequired,\n  editSurveyUrl: PropTypes.string.isRequired,\n  workflowUrl: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool,\n  setOpen: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool,\n  availability: PropTypes.oneOf(['available', 'unavailable']).isRequired,\n  orderable: PropTypes.bool,\n  userCapabilities: PropTypes.shape({\n    update: PropTypes.bool,\n    copy: PropTypes.bool,\n    set_approval: PropTypes.bool\n  }).isRequired,\n  canLinkOrderProcesses: PropTypes.bool\n};\n\nDetailToolbarActions.defaultProps = {\n  isFetching: false,\n  orderable: true,\n  canLinkOrderProcesses: false\n};\n\nexport default DetailToolbarActions;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Link, Switch, useLocation } from 'react-router-dom';\nimport {\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Button,\n  Flex,\n  Dropdown,\n  KebabToggle,\n  DropdownItem\n} from '@patternfly/react-core';\n\nimport DetailToolbarActions from './detail-toolbar-actions';\nimport { CATALOG_API_BASE } from '../../../utilities/constants';\nimport CardIcon from '../../../presentational-components/shared/card-icon';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../../../presentational-components/shared/top-toolbar';\nimport ButtonWithSpinner from '../../../presentational-components/shared/button-with-spinner';\nimport { StyledLevelItem } from '../../../presentational-components/styled-components/level';\nimport actionMessages from '../../../messages/actions.messages';\nimport portfolioMessages from '../../../messages/portfolio.messages';\nimport BackToProducts from '../../../presentational-components/portfolio/back-to-products';\nimport { PORTFOLIO_ITEM_ROUTE_EDIT } from '../../../constants/routes';\nimport useFormatMessage from '../../../utilities/use-format-message';\n\nconst PortfolioItemIconItem = ({ id, sourceId }) => (\n  <CardIcon\n    src={`${CATALOG_API_BASE}/portfolio_items/${id}/icon`}\n    sourceId={sourceId}\n    height={64}\n  />\n);\n\nPortfolioItemIconItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  sourceId: PropTypes.string.isRequired\n};\n\nexport const PortfolioItemDetailToolbar = ({\n  url,\n  isOpen,\n  product,\n  setOpen,\n  isFetching,\n  availability,\n  userCapabilities,\n  orderable,\n  fromProducts,\n  canLinkOrderProcesses\n}) => {\n  const formatMessage = useFormatMessage();\n  const { pathname } = useLocation();\n  return (\n    <TopToolbar\n      paddingBottom={pathname !== PORTFOLIO_ITEM_ROUTE_EDIT}\n      breadcrumbs={!fromProducts}\n    >\n      {fromProducts && <BackToProducts />}\n      <Level className=\"flex-no-wrap\">\n        <Switch>\n          <Route path={PORTFOLIO_ITEM_ROUTE_EDIT} exact>\n            <TopToolbarTitle\n              title={formatMessage(portfolioMessages.editProduct)}\n              noData\n            />\n          </Route>\n          <Route>\n            <StyledLevelItem grow alignStart className=\"pf-l-flex\">\n              {userCapabilities.update ? (\n                <PortfolioItemIconItem\n                  id={product.id}\n                  sourceId={product.service_offering_source_ref}\n                />\n              ) : (\n                <CardIcon\n                  src={`${CATALOG_API_BASE}/portfolio_items/${product.id}/icon`}\n                  sourceId={product.service_offering_source_ref}\n                  height={64}\n                />\n              )}\n              <TextContent className=\"pf-u-ml-md\">\n                <Text component={TextVariants.h1}>{product.name}</Text>\n              </TextContent>\n            </StyledLevelItem>\n            <LevelItem style={{ minHeight: 36 }} className=\"flex-item-no-wrap\">\n              <Level className=\"flex-no-wrap\">\n                <DetailToolbarActions\n                  isOpen={isOpen}\n                  setOpen={(open) => setOpen(open)}\n                  orderUrl={`${url}/order`}\n                  editUrl={`${url}/edit`}\n                  copyUrl={`${url}/copy`}\n                  editSurveyUrl={`${url}/edit-survey`}\n                  workflowUrl={`${url}/edit-workflow`}\n                  isFetching={isFetching}\n                  availability={availability}\n                  orderable={orderable}\n                  userCapabilities={userCapabilities}\n                  canLinkOrderProcesses={canLinkOrderProcesses}\n                />\n              </Level>\n            </LevelItem>\n          </Route>\n        </Switch>\n      </Level>\n    </TopToolbar>\n  );\n};\n\nPortfolioItemDetailToolbar.propTypes = {\n  url: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool,\n  product: PropTypes.shape({\n    distributor: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    service_offering_source_ref: PropTypes.string.isRequired,\n    metadata: PropTypes.shape({ orderable: PropTypes.bool })\n  }).isRequired,\n  setOpen: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool,\n  availability: PropTypes.oneOf(['available', 'unavailable']).isRequired,\n  userCapabilities: PropTypes.object,\n  fromProducts: PropTypes.bool,\n  orderable: PropTypes.bool,\n  canLinkOrderProcesses: PropTypes.bool\n};\n\nPortfolioItemDetailToolbar.defaultProps = {\n  isFetching: false,\n  orderable: true\n};\n\nconst SurveyEditorDropdown = ({ handleResetSurvey }) => {\n  const formatMessage = useFormatMessage();\n  const [isOpen, setIsOpen] = useState(false);\n  return (\n    <Dropdown\n      isOpen={isOpen}\n      isPlain\n      onSelect={() => setIsOpen(false)}\n      position=\"right\"\n      toggle={<KebabToggle onToggle={(isOpen) => setIsOpen(isOpen)} />}\n      dropdownItems={[\n        <DropdownItem\n          onClick={handleResetSurvey}\n          component=\"button\"\n          key=\"synchronize\"\n        >\n          {formatMessage(portfolioMessages.restoreSurvey)}\n        </DropdownItem>\n      ]}\n    />\n  );\n};\n\nSurveyEditorDropdown.propTypes = {\n  handleResetSurvey: PropTypes.func.isRequired\n};\n\nexport const SurveyEditingToolbar = ({\n  handleSaveSurvey,\n  closeUrl,\n  search,\n  isFetching,\n  isValid,\n  modified,\n  handleResetSurvey\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <TopToolbar breadcrumbs>\n      <Level>\n        <StyledLevelItem grow alignStart className=\"pf-l-flex\">\n          <TextContent>\n            <Text component={TextVariants.h1}>\n              {formatMessage(portfolioMessages.portfolioItemSurvey)}\n            </Text>\n          </TextContent>\n        </StyledLevelItem>\n        <LevelItem>\n          <Flex className=\"align-items-center\">\n            <ButtonWithSpinner\n              variant=\"primary\"\n              ouiaId={'save-survey'}\n              showSpinner={isFetching}\n              isDisabled={isFetching || !isValid}\n              onClick={handleSaveSurvey}\n            >\n              {formatMessage(actionMessages.save)}\n            </ButtonWithSpinner>\n            <Link\n              to={{\n                pathname: closeUrl,\n                search\n              }}\n            >\n              <Button ouiaId={'cancel'} variant=\"link\">\n                Cancel\n              </Button>\n            </Link>\n            {modified && (\n              <SurveyEditorDropdown handleResetSurvey={handleResetSurvey} />\n            )}\n          </Flex>\n        </LevelItem>\n      </Level>\n    </TopToolbar>\n  );\n};\n\nSurveyEditingToolbar.propTypes = {\n  handleSaveSurvey: PropTypes.func.isRequired,\n  closeUrl: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired,\n  isFetching: PropTypes.bool,\n  isValid: PropTypes.bool,\n  modified: PropTypes.bool,\n  handleResetSurvey: PropTypes.func,\n  fromProducts: PropTypes.bool,\n  canLinkOrderProcesses: PropTypes.bool\n};\n","\"use strict\"\nexports.__esModule = true;\nexports.PencilAltIconConfig = {\n  name: 'PencilAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PencilAltIcon = require('../createIcon').createIcon(exports.PencilAltIconConfig);\nexports[\"default\"] = exports.PencilAltIcon;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Stack = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst stack_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/layouts/Stack/stack\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nexports.Stack = (_a) => {\n    var { hasGutter = false, className = '', children = null, component = 'div' } = _a, props = tslib_1.__rest(_a, [\"hasGutter\", \"className\", \"children\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { className: react_styles_1.css(stack_1.default.stack, hasGutter && stack_1.default.modifiers.gutter, className) }), children));\n};\nexports.Stack.displayName = 'Stack';\n//# sourceMappingURL=Stack.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StackItem = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst stack_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/layouts/Stack/stack\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nexports.StackItem = (_a) => {\n    var { isFilled = false, className = '', children = null } = _a, props = tslib_1.__rest(_a, [\"isFilled\", \"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: react_styles_1.css(stack_1.default.stackItem, isFilled && stack_1.default.modifiers.fill, className) }), children));\n};\nexports.StackItem.displayName = 'StackItem';\n//# sourceMappingURL=StackItem.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Flex = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst flex_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/layouts/Flex/flex\"));\nconst util_1 = require(\"../../helpers/util\");\nexports.Flex = (_a) => {\n    var { children = null, className = '', spacer, spaceItems, grow, shrink, flex, direction, alignItems, alignContent, alignSelf, align, justifyContent, display, fullWidth, flexWrap } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"spacer\", \"spaceItems\", \"grow\", \"shrink\", \"flex\", \"direction\", \"alignItems\", \"alignContent\", \"alignSelf\", \"align\", \"justifyContent\", \"display\", \"fullWidth\", \"flexWrap\"]);\n    return (React.createElement(\"div\", Object.assign({ className: react_styles_1.css(flex_1.default.flex, util_1.formatBreakpointMods(spacer, flex_1.default), util_1.formatBreakpointMods(spaceItems, flex_1.default), util_1.formatBreakpointMods(grow, flex_1.default), util_1.formatBreakpointMods(shrink, flex_1.default), util_1.formatBreakpointMods(flex, flex_1.default), util_1.formatBreakpointMods(direction, flex_1.default), util_1.formatBreakpointMods(alignItems, flex_1.default), util_1.formatBreakpointMods(alignContent, flex_1.default), util_1.formatBreakpointMods(alignSelf, flex_1.default), util_1.formatBreakpointMods(align, flex_1.default), util_1.formatBreakpointMods(justifyContent, flex_1.default), util_1.formatBreakpointMods(display, flex_1.default), util_1.formatBreakpointMods(fullWidth, flex_1.default), util_1.formatBreakpointMods(flexWrap, flex_1.default), className) }, props), children));\n};\nexports.Flex.displayName = 'Flex';\n//# sourceMappingURL=Flex.js.map","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\nimport useFormatMessage from '../../../utilities/use-format-message';\n\nconst messages = {\n  platform: {\n    id: 'portfolio.item.detail.info.platform',\n    defaultMessage: 'Platform'\n  },\n  portfolio: {\n    id: 'portfolio.item.detail.info.portfolio',\n    defaultMessage: 'Portfolio'\n  },\n  vendor: {\n    id: 'portfolio.item.detail.info.vendor',\n    defaultMessage: 'Vendor'\n  },\n  created: {\n    id: 'portfolio.item.detail.info.created',\n    defaultMessage: 'Created'\n  }\n};\n\nconst ItemDetailInfoBar = ({ product, source, portfolio }) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <TextContent className=\"pf-u-mb-md\">\n      <Text className=\"font-14\">{formatMessage(messages.platform)}</Text>\n      <Text\n        id=\"source-name\"\n        className=\"overflow-wrap\"\n        component={TextVariants.p}\n      >\n        {source.name}\n      </Text>\n      <Text className=\"font-14\">{formatMessage(messages.portfolio)}</Text>\n      <Text\n        id=\"portfolio-name\"\n        className=\"overflow-wrap\"\n        component={TextVariants.p}\n      >\n        {portfolio.name}\n      </Text>\n      {product.distributor && (\n        <span id=\"distributor\">\n          <Text className=\"font-14\">{formatMessage(messages.vendor)}</Text>\n          <Text className=\"overflow-wrap\" component={TextVariants.p}>\n            {product.distributor}\n          </Text>\n        </span>\n      )}\n      <Text className=\"font-14\">{formatMessage(messages.created)}</Text>\n      <Text id=\"created_at\" component={TextVariants.p}>\n        <DateFormat variant=\"relative\" date={product.created_at} />\n      </Text>\n    </TextContent>\n  );\n};\n\nItemDetailInfoBar.propTypes = {\n  product: PropTypes.shape({\n    distributor: PropTypes.string,\n    updated_at: PropTypes.string,\n    created_at: PropTypes.string.isRequired\n  }).isRequired,\n  source: PropTypes.shape({\n    name: PropTypes.string\n  }).isRequired,\n  portfolio: PropTypes.shape({\n    name: PropTypes.string\n  }).isRequired\n};\n\nexport default ItemDetailInfoBar;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport Schema from '@data-driven-forms/react-form-renderer/dist/cjs/schema';\n\nconst editPortfolioItemSchema: Schema = {\n  fields: [\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'schemas.portfolio-item.name',\n      isRequired: true,\n      validate: [{ type: validatorTypes.REQUIRED }]\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'description',\n      label: 'schemas.portfolio-item.description'\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'long_description',\n      label: 'schemas.portfolio-item.long_description'\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'distributor',\n      label: 'schemas.portfolio-item.vendor'\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'documentation_url',\n      label: 'schemas.portfolio-item.documentation_url',\n      validate: [\n        {\n          type: validatorTypes.URL\n        }\n      ]\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'support_url',\n      label: 'schemas.portfolio-item.support_url',\n      validate: [\n        {\n          type: validatorTypes.URL\n        }\n      ]\n    }\n  ]\n};\n\nexport default editPortfolioItemSchema;\n","import { defineMessages } from 'react-intl';\n\nconst iconMessages = defineMessages({\n  changeIcon: {\n    id: 'icons.actions.change',\n    defaultMessage: 'Upload image'\n  },\n  resetIcon: {\n    id: 'icons.actions.reset',\n    defaultMessage: 'Reset image'\n  }\n});\n\nexport default iconMessages;\n","import React, { useState, useRef } from 'react';\nimport { PencilAltIcon } from '@patternfly/react-icons';\nimport {\n  Spinner,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport styled from 'styled-components';\nimport portfolioMessages from '../../../messages/portfolio.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport iconMessages from '../../../messages/icon.messages';\n\nconst UploadButton = styled.span`\n  border: none;\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding-left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  &::after {\n    content: ' ';\n    position: absolute;\n    display: block;\n    top: -0.3em;\n    right: -0.3em;\n    width: 1.5em;\n    height: 1.5em;\n    border-radius: 50%;\n    background-color: rgba(255, 255, 255, 0.8);\n    z-index: 0;\n  }\n  svg,\n  .pf-c-spinner {\n    z-index: 1;\n    position: absolute;\n    top: 0;\n    right: 0;\n  }\n`;\n\nconst UploadIconWrapper = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst ImagePreview = styled.img`\n  height: 64px;\n  max-width: 300px;\n  object-fit: cover;\n`;\n\nconst StyledDropdown = styled(Dropdown)`\n  .pf-c-dropdown__menu {\n    top: 24px;\n    left: calc(100% - 24px);\n  }\n`;\n\nconst IconUpload = ({ uploadIcon, resetIcon, enableReset, children }) => {\n  const formatMessage = useFormatMessage();\n  const inputRef = useRef();\n  const [image, setImage] = useState();\n  const [isUploading, setIsUploading] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const handleClick = () => {\n    setIsOpen(false);\n    return inputRef.current.click();\n  };\n\n  const handleReset = () => {\n    setImage(undefined);\n    setIsUploading(true);\n    return resetIcon().then(() => setIsUploading(false));\n  };\n\n  const dispatch = useDispatch();\n\n  const dropdownItems = [\n    <DropdownItem onClick={handleClick} key=\"change-icon\">\n      {formatMessage(iconMessages.changeIcon)}\n    </DropdownItem>,\n    <DropdownItem\n      isDisabled={!enableReset}\n      onClick={handleReset}\n      key=\"reset-icon\"\n    >\n      {formatMessage(iconMessages.resetIcon)}\n    </DropdownItem>\n  ];\n\n  return (\n    <UploadIconWrapper>\n      <input\n        accept=\".png,.svg,.jpeg\"\n        onChange={(event) => {\n          setImage(event.target.files[0]);\n          setIsUploading(true);\n          uploadIcon(event.target.files[0])\n            .then(() => setIsUploading(false))\n            .catch((error) => {\n              dispatch(\n                addNotification({\n                  variant: 'danger',\n                  title: formatMessage(\n                    portfolioMessages.portfolioItemIconTitle\n                  ),\n                  description: error.data.errors[0].detail,\n                  dismissable: true\n                })\n              );\n              setImage(undefined);\n              setIsUploading(false);\n            });\n        }}\n        ref={inputRef}\n        type=\"file\"\n        id=\"icon-upload\"\n        hidden\n      />\n      <StyledDropdown\n        onSelect={() => setIsOpen(false)}\n        isOpen={isOpen}\n        isPlain\n        disabled={isUploading}\n        dropdownItems={dropdownItems}\n        toggle={\n          <DropdownToggle\n            disabled={isUploading}\n            toggleIndicator={null}\n            onToggle={(isOpen, event) => {\n              event.stopPropagation();\n              setIsOpen(isOpen);\n            }}\n          >\n            <UploadButton ouiaId={'upload-icon'}>\n              {isUploading ? (\n                <Spinner size=\"md\" />\n              ) : (\n                <PencilAltIcon size=\"sm\" />\n              )}\n            </UploadButton>\n            {!image && children}\n            {image && (\n              <ImagePreview\n                style={{ height: 64 }}\n                src={URL.createObjectURL(image)}\n                id={image.name}\n              />\n            )}\n          </DropdownToggle>\n        }\n      />\n    </UploadIconWrapper>\n  );\n};\n\nIconUpload.propTypes = {\n  uploadIcon: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  resetIcon: PropTypes.func.isRequired,\n  enableReset: PropTypes.bool\n};\n\nexport default IconUpload;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport FormRenderer from '../../common/form-renderer';\nimport editPortfolioItemSchema from '../../../forms/edit-portfolio-item-form.schema';\nimport { updatePortfolioItem } from '../../../redux/actions/portfolio-actions';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport IconUpload from './icon-upload';\nimport { CATALOG_API_BASE } from '../../../utilities/constants';\nimport CardIcon from '../../../presentational-components/shared/card-icon';\n\nconst EditPortfolioItem = ({\n  cancelUrl,\n  uploadIcon,\n  resetIcon,\n  product: { owner, created_at, updated_at, ...product },\n  userCapabilities\n}) => {\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n  const { search } = useLocation();\n  return (\n    <Stack hasGutter>\n      <StackItem key={product.icon_id || 'default'}>\n        <IconUpload\n          uploadIcon={uploadIcon}\n          resetIcon={resetIcon}\n          enableReset={!!product.icon_id}\n        >\n          <CardIcon\n            src={`${CATALOG_API_BASE}/portfolio_items/${\n              product.id\n            }/icon?cache_id=${product.icon_id || 'default'}`} // we need ho add the query to prevent the browser caching when reseting the image\n            sourceId={product.service_offering_source_ref}\n            height={64}\n          />\n        </IconUpload>\n      </StackItem>\n      <StackItem>\n        <FormRenderer\n          initialValues={{ ...product }}\n          onSubmit={(values) => {\n            push({\n              pathname: cancelUrl,\n              search\n            });\n            return dispatch(\n              updatePortfolioItem({\n                ...values,\n                metadata: { user_capabilities: userCapabilities }\n              })\n            );\n          }}\n          schema={editPortfolioItemSchema}\n          templateProps={{\n            disableSubmit: ['pristine']\n          }}\n          onCancel={() =>\n            push({\n              pathname: cancelUrl,\n              search\n            })\n          }\n        />\n      </StackItem>\n    </Stack>\n  );\n};\n\nEditPortfolioItem.propTypes = {\n  cancelUrl: PropTypes.string.isRequired,\n  product: PropTypes.object.isRequired,\n  userCapabilities: PropTypes.object.isRequired,\n  uploadIcon: PropTypes.func.isRequired,\n  resetIcon: PropTypes.func.isRequired\n};\n\nexport default EditPortfolioItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\n\nimport EditPortfolioItem from './edit-portfolio-item';\nimport EditApprovalWorkflow from '../../../smart-components/common/edit-approval-workflow';\nimport { PORTFOLIO_ITEM_RESOURCE_TYPE } from '../../../utilities/constants';\nimport CatalogRoute from '../../../routing/catalog-route';\nimport portfolioMessages from '../../../messages/portfolio.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport SetOrderProcessModal from '../../order-process/set-order-process-modal';\nimport { PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE } from '../../../constants/routes';\n\nconst ItemDetailDescription = ({\n  userCapabilities,\n  product,\n  url,\n  search,\n  detailPaths,\n  uploadIcon,\n  resetIcon\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Switch>\n      <Route path={`${url}/edit-workflow`}>\n        <EditApprovalWorkflow\n          pushParam={{ pathname: url, search }}\n          objectType={PORTFOLIO_ITEM_RESOURCE_TYPE}\n          objectId={product.id}\n          objectName={() => product.name}\n          querySelector=\"portfolio-item\"\n        />\n      </Route>\n      <Route path={PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE}>\n        <SetOrderProcessModal\n          querySelector=\"portfolio-item\"\n          objectType={PORTFOLIO_ITEM_RESOURCE_TYPE}\n          objectName={() => product.name}\n          pushParam={{ pathname: url, search }}\n        />\n      </Route>\n      <Route\n        exact\n        path={detailPaths}\n        render={() => (\n          <TextContent>\n            {(product.description || product.long_description) && (\n              <Text component={TextVariants.h6}>\n                {formatMessage(portfolioMessages.portfolioItemOverview)}\n              </Text>\n            )}\n            {product.description && (\n              <Text id=\"description\" component={TextVariants.p}>\n                {product.description}\n              </Text>\n            )}\n            {product.long_description && (\n              <Text id=\"long_description\" component={TextVariants.p}>\n                {product.long_description}\n              </Text>\n            )}\n            {product.support_url && (\n              <Text id=\"support_url\" component={TextVariants.p}>\n                <a\n                  href={product.support_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {formatMessage(portfolioMessages.portfolioItemSupport)}\n                </a>\n              </Text>\n            )}\n            {product.documentation_url && (\n              <Fragment>\n                <Text component={TextVariants.h6}>\n                  {formatMessage(portfolioMessages.portfolioItemDocumentation)}\n                </Text>\n                <Text id=\"documentation_url\" component={TextVariants.p}>\n                  <a\n                    href={product.documentation_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {formatMessage(portfolioMessages.portfolioItemDocLink)}\n                  </a>\n                </Text>\n              </Fragment>\n            )}\n          </TextContent>\n        )}\n      />\n      <CatalogRoute\n        exact\n        path={`${url}/edit`}\n        requiredCapabilities=\"update\"\n        userCapabilities={userCapabilities}\n      >\n        <EditPortfolioItem\n          cancelUrl={url}\n          product={product}\n          userCapabilities={userCapabilities}\n          uploadIcon={uploadIcon}\n          resetIcon={resetIcon}\n        />\n      </CatalogRoute>\n    </Switch>\n  );\n};\n\nItemDetailDescription.propTypes = {\n  product: PropTypes.shape({\n    name: PropTypes.string,\n    long_description: PropTypes.string,\n    support_url: PropTypes.string,\n    documentation_url: PropTypes.string,\n    description: PropTypes.string,\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  url: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired,\n  userCapabilities: PropTypes.object.isRequired,\n  detailPaths: PropTypes.arrayOf(PropTypes.string),\n  uploadIcon: PropTypes.func.isRequired,\n  resetIcon: PropTypes.func.isRequired\n};\n\nexport default ItemDetailDescription;\n","import React, {\n  useEffect,\n  useState,\n  Fragment,\n  lazy,\n  Suspense,\n  useContext\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Grid, GridItem, Alert } from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\n\nimport ItemDetailInfoBar from './item-detail-info-bar';\nimport ItemDetailDescription from './item-detail-description';\nimport { PortfolioItemDetailToolbar } from './portfolio-item-detail-toolbar';\nimport TopToolbar from '../../../presentational-components/shared/top-toolbar';\nimport { getPortfolioItemDetail } from '../../../redux/actions/portfolio-actions';\nimport {\n  ProductLoaderPlaceholder,\n  AppPlaceholder\n} from '../../../presentational-components/shared/loader-placeholders';\nimport {\n  uploadPortfolioItemIcon,\n  resetPortfolioItemIcon\n} from '../../../helpers/portfolio/portfolio-helper';\nimport useQuery from '../../../utilities/use-query';\nimport {\n  PORTFOLIO_ITEM_ROUTE,\n  PORTFOLIO_ITEM_ROUTE_EDIT,\n  PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE\n} from '../../../constants/routes';\nimport CatalogRoute from '../../../routing/catalog-route';\nimport portfolioMessages from '../../../messages/portfolio.messages';\nimport BackToProducts from '../../../presentational-components/portfolio/back-to-products';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport { hasPermission } from '../../../helpers/shared/helpers';\nimport UserContext from '../../../user-context';\n\nconst SurveyEditor = lazy(() =>\n  import(\n    /* webpackChunkName: \"survey-editor\" */ '../../survey-editing/survey-editor'\n  )\n);\n\nconst requiredParams = [\n  'portfolio',\n  'source',\n  'portfolio-item',\n  'from-products'\n];\n\nconst PortfolioItemDetail = () => {\n  const formatMessage = useFormatMessage();\n  const [isOpen, setOpen] = useState(false);\n  const [isFetching, setIsFetching] = useState(true);\n  const dispatch = useDispatch();\n  const [queryValues, search] = useQuery(requiredParams);\n  const { pathname } = useLocation();\n  const { url } = useRouteMatch(PORTFOLIO_ITEM_ROUTE);\n  const portfolioItemData = useSelector(\n    ({ portfolioReducer: { portfolioItem } }) => portfolioItem\n  );\n  const portfolio = useSelector(\n    ({ portfolioReducer: { selectedPortfolio } }) => selectedPortfolio\n  );\n  const fromProducts = queryValues['from-products'] === 'true';\n  const { permissions: userPermissions } = useContext(UserContext);\n  const canLinkOrderProcesses = hasPermission(userPermissions, [\n    'catalog:order_processes:link'\n  ]);\n\n  const fetchData = (skipLoading) => {\n    if (!skipLoading) {\n      setIsFetching(true);\n    }\n\n    dispatch(\n      getPortfolioItemDetail({\n        portfolioItem: queryValues['portfolio-item'],\n        ...queryValues\n      })\n    )\n      .then(() => setIsFetching(false))\n      .catch(() => setIsFetching(false));\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({\n      id: fromProducts ? 'products' : 'portfolios',\n      secondaryNav: true\n    });\n    fetchData(false);\n  }, [queryValues['portfolio-item']]);\n\n  if (isFetching || Object.keys(portfolioItemData).length === 0) {\n    return (\n      <Section className=\"global-primary-background full-height\">\n        <TopToolbar breadcrumbs={!fromProducts}>\n          {fromProducts && <BackToProducts />}\n          <ProductLoaderPlaceholder />\n        </TopToolbar>\n      </Section>\n    );\n  }\n\n  const availability =\n    portfolioItemData?.source?.availability_status || 'unavailable';\n  const unavailable = [portfolioItemData?.source]\n    .filter(({ notFound }) => notFound)\n    .map(({ object }) => (\n      <Alert\n        className=\"pf-u-mb-sm\"\n        key={object}\n        variant=\"warning\"\n        isInline\n        title={formatMessage(portfolioMessages.objectUnavaiable, { object })}\n      />\n    ));\n  const uploadIcon = (file) =>\n    uploadPortfolioItemIcon(\n      portfolioItemData?.portfolioItem?.id,\n      file\n    ).then(() => fetchData(true));\n  const resetIcon = () =>\n    resetPortfolioItemIcon(portfolioItemData?.portfolioItem?.icon_id).then(\n      fetchData\n    );\n  const detailPaths = [\n    PORTFOLIO_ITEM_ROUTE,\n    `${url}/order`,\n    `${url}/copy`,\n    `${url}/edit-workflow`,\n    PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE\n  ];\n  return (\n    <Fragment>\n      <Switch>\n        <CatalogRoute\n          requiredCapabilities=\"update\"\n          userCapabilities={\n            portfolioItemData?.portfolioItem?.metadata.user_capabilities\n          }\n          path={`${url}/edit-survey`}\n        >\n          <Suspense fallback={<AppPlaceholder />}>\n            <SurveyEditor\n              closeUrl={url}\n              search={search}\n              uploadIcon={uploadIcon}\n              portfolioItem={portfolioItemData.portfolioItem}\n              portfolio={portfolio}\n            />\n          </Suspense>\n        </CatalogRoute>\n        <Route>\n          <Section className=\"full-height global-primary-background\">\n            <PortfolioItemDetailToolbar\n              fromProducts={fromProducts}\n              url={url}\n              isOpen={isOpen}\n              product={portfolioItemData.portfolioItem}\n              setOpen={setOpen}\n              isFetching={isFetching}\n              availability={availability}\n              userCapabilities={\n                portfolioItemData?.portfolioItem?.metadata.user_capabilities\n              }\n              orderable={portfolioItemData?.portfolioItem.metadata?.orderable}\n              canLinkOrderProcesses={canLinkOrderProcesses}\n            />\n            {unavailable.length > 0 && (\n              <div className=\"pf-u-mr-lg pf-u-ml-lg\">{unavailable}</div>\n            )}\n            {portfolioItemData?.source?.availability_status ===\n              'unavailable' && (\n              <Alert\n                className=\"pf-u-ml-lg pf-u-mr-lg\"\n                id=\"unavailable-alert-info\"\n                variant=\"info\"\n                isInline\n                title={formatMessage(portfolioMessages.sourceUnavaiable)}\n              />\n            )}\n            <Grid hasGutter className=\"pf-u-p-lg\">\n              <Route path={detailPaths} exact>\n                <GridItem md={3} lg={2}>\n                  <ItemDetailInfoBar\n                    product={portfolioItemData.portfolioItem}\n                    portfolio={portfolio}\n                    source={portfolioItemData.source}\n                  />\n                </GridItem>\n              </Route>\n              <GridItem\n                md={pathname === PORTFOLIO_ITEM_ROUTE_EDIT ? 12 : 9}\n                lg={pathname === PORTFOLIO_ITEM_ROUTE_EDIT ? 12 : 10}\n              >\n                <ItemDetailDescription\n                  resetIcon={resetIcon}\n                  uploadIcon={uploadIcon}\n                  product={portfolioItemData.portfolioItem}\n                  userCapabilities={\n                    portfolioItemData?.portfolioItem?.metadata.user_capabilities\n                  }\n                  url={url}\n                  detailPaths={detailPaths}\n                  search={search}\n                />\n              </GridItem>\n            </Grid>\n          </Section>\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n};\n\nexport default PortfolioItemDetail;\n"],"sourceRoot":""}