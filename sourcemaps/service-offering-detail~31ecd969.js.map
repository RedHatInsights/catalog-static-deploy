{"version":3,"sources":["webpack:///./src/messages/platforms.messages.ts","webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Level/Level.js","webpack:///./src/smart-components/platform/service-offering/service-offering-detail.js"],"names":["platformsMessages","workflowColumn","id","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","platformsNoDataDescription","platformsDocTitle","connectSource","contactAdmin","title","noPlatforms","offeringTitle","offeringParameters","platformVersion","ansibleVersion","platformSummary","platformDetails","platformActivity","cloudConnectorId","refreshState","refreshStarted","refreshFinished","lastSuccessfulRefresh","lastChecked","lastAvailable","enabled","availabilityStatus","dateAdded","refreshTooltip","lastRefreshMessage","availabilityMessage","Object","defineProperty","exports","value","Level","tslib_1","React","__importStar","react_styles_1","level_1","__importDefault","_a","hasGutter","className","children","props","__rest","createElement","assign","css","default","level","modifiers","gutter","displayName","requiredParams","ServiceOfferingDetail","formatMessage","useFormatMessage","useQuery","queryValues","useState","isFetching","setIsFetching","dispatch","useDispatch","useSelector","platformReducer","serviceOffering","service","source","useEffect","fetchServiceOffering","platform","then","sm","grow","alignStart","src","icon_url","height","component","name","md","lg","labelMessages","TextVariants","p","created","type","date","created_at","description","extra"],"mappings":"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","file":"js/service-offering-detail~31ecd969.25429f8949c72c06b0c3.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  platformsNoDataDescription: {\n    id: 'platforms.list.configure-source',\n    defaultMessage:\n      'Ansible Automation Services Catalog can be added by following the'\n  },\n  platformsDocTitle: {\n    id: 'platforms.doc.title',\n    defaultMessage: 'Ansible Automation Platform 2.0 BETA documentation'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage: 'Go to Sources'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  },\n  platformVersion: {\n    id: 'platforms.version',\n    defaultMessage: 'Platform version'\n  },\n  ansibleVersion: {\n    id: 'platforms.ansible.version',\n    defaultMessage: 'Ansible version'\n  },\n  platformSummary: {\n    id: 'platforms.summary',\n    defaultMessage: 'Summary'\n  },\n  platformDetails: {\n    id: 'platforms.details',\n    defaultMessage: 'Details'\n  },\n  platformActivity: {\n    id: 'platforms.activity',\n    defaultMessage: 'Activity'\n  },\n  cloudConnectorId: {\n    id: 'platform.cloudConnectorId',\n    defaultMessage: 'RedHat Connect Client Id'\n  },\n  refreshState: {\n    id: 'platforms.refreshState',\n    defaultMessage: 'Refresh state'\n  },\n  refreshStarted: {\n    id: 'platforms.refreshStarted',\n    defaultMessage: 'Refresh started'\n  },\n  refreshFinished: {\n    id: 'platforms.refreshFinished',\n    defaultMessage: 'Refresh finished'\n  },\n  lastSuccessfulRefresh: {\n    id: 'platforms.lastSuccessfulRefresh',\n    defaultMessage: 'Last successful refresh'\n  },\n  lastChecked: {\n    id: 'platforms.lastChecked',\n    defaultMessage: 'Last checked'\n  },\n  lastAvailable: {\n    id: 'platforms.lastAvailable',\n    defaultMessage: 'Last available'\n  },\n  enabled: {\n    id: 'platforms.enabled',\n    defaultMessage: 'Enabled'\n  },\n  availabilityStatus: {\n    id: 'platforms.availabilityStatus',\n    defaultMessage: 'Availability status'\n  },\n  dateAdded: {\n    id: 'platforms.dateAdded',\n    defaultMessage: 'Date added'\n  },\n  refreshTooltip: {\n    id: 'platforms.refreshTooltip',\n    defaultMessage: 'Refresh platform'\n  },\n  lastRefreshMessage: {\n    id: 'platforms.lastRefreshMessage',\n    defaultMessage: 'Last refresh message'\n  },\n  availabilityMessage: {\n    id: 'platforms.availabilityMessage',\n    defaultMessage: 'Availability message'\n  }\n});\n\nexport default platformsMessages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Level = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst level_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/layouts/Level/level\"));\nexports.Level = (_a) => {\n    var { hasGutter, className = '', children = null } = _a, props = tslib_1.__rest(_a, [\"hasGutter\", \"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: react_styles_1.css(level_1.default.level, hasGutter && level_1.default.modifiers.gutter, className) }), children));\n};\nexports.Level.displayName = 'Level';\n//# sourceMappingURL=Level.js.map","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  TextContent,\n  Text,\n  TextVariants,\n  Level\n} from '@patternfly/react-core';\nimport ReactJsonView from 'react-json-view';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nimport useQuery from '../../../utilities/use-query';\nimport { fetchServiceOffering } from '../../../redux/actions/platform-actions';\nimport { ProductLoaderPlaceholder } from '../../../presentational-components/shared/loader-placeholders';\nimport CardIcon from '../../../presentational-components/shared/card-icon';\nimport CatalogBreadcrumbs from '../../common/catalog-breadcrumbs';\nimport { StyledLevelItem } from '../../../presentational-components/styled-components/level';\nimport labelMessages from '../../../messages/labels.messages';\nimport platformsMessages from '../../../messages/platforms.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\n\nconst requiredParams = ['service', 'platform'];\n\nconst ServiceOfferingDetail = () => {\n  const formatMessage = useFormatMessage();\n  const [queryValues] = useQuery(requiredParams);\n  const [isFetching, setIsFetching] = useState(true);\n  const dispatch = useDispatch();\n  const { service, source } = useSelector(\n    ({ platformReducer: { serviceOffering } }) => serviceOffering\n  );\n\n  useEffect(() => {\n    setIsFetching(true);\n    dispatch(fetchServiceOffering(queryValues.service, queryValues.platform))\n      .then(() => setIsFetching(false))\n      .catch(() => setIsFetching(false));\n  }, [queryValues.service, queryValues.platform]);\n  if (isFetching) {\n    return (\n      <Section className=\"global-primary-background full-height pf-u-p-lg\">\n        <ProductLoaderPlaceholder />\n      </Section>\n    );\n  }\n\n  return (\n    <Section className=\"global-primary-background full-height\">\n      <Grid hasGutter className=\"pf-u-p-lg\">\n        <div className=\"pf-u-mb-sm\">\n          <CatalogBreadcrumbs />\n        </div>\n        <GridItem sm={12} className=\"pf-u-mb-md\">\n          <Level>\n            <StyledLevelItem grow alignStart className=\"pf-l-flex\">\n              <CardIcon src={source.icon_url} height={64} />\n              <TextContent>\n                <Text component=\"h1\">{service.name}</Text>\n                <Text component=\"small\">\n                  {formatMessage(platformsMessages.offeringTitle)}\n                </Text>\n              </TextContent>\n            </StyledLevelItem>\n          </Level>\n        </GridItem>\n        <GridItem md={3} lg={2}>\n          <TextContent>\n            <Text className=\"font-14\">\n              {formatMessage(labelMessages.platform)}\n            </Text>\n            <Text\n              id=\"source\"\n              className=\"overflow-wrap\"\n              component={TextVariants.p}\n            >\n              {source.name}\n            </Text>\n            <Text className=\"font-14\">\n              {formatMessage(labelMessages.created)}\n            </Text>\n            <Text\n              id=\"created_at\"\n              className=\"overflow-wrap\"\n              component={TextVariants.p}\n            >\n              <DateFormat type=\"relative\" date={service.created_at} />\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem md={9} lg={10}>\n          <TextContent>\n            <Text className=\"font-14\">{formatMessage(labelMessages.name)}</Text>\n            <Text id=\"description\" component={TextVariants.p}>\n              {service.name}\n            </Text>\n            <Text className=\"font-14\">\n              {formatMessage(labelMessages.description)}\n            </Text>\n            <Text id=\"long_description\" component={TextVariants.p}>\n              {service.description}\n            </Text>\n            <hr className=\"pf-c-divider\" />\n            <Text component=\"h2\">\n              {formatMessage(platformsMessages.offeringParameters)}\n            </Text>\n            <ReactJsonView src={service.extra} />\n          </TextContent>\n        </GridItem>\n      </Grid>\n    </Section>\n  );\n};\n\nexport default ServiceOfferingDetail;\n"],"sourceRoot":""}