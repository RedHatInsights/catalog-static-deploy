{"version":3,"sources":["webpack:///./src/smart-components/platform/service-offering/service-offering-detail.js","webpack:///./src/messages/platforms.messages.ts","webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Level/Level.js"],"names":["requiredParams","ServiceOfferingDetail","formatMessage","useFormatMessage","useQuery","queryValues","useState","isFetching","setIsFetching","dispatch","useDispatch","useSelector","platformReducer","serviceOffering","service","source","useEffect","fetchServiceOffering","platform","then","className","hasGutter","sm","grow","alignStart","src","icon_url","height","component","name","platformsMessages","offeringTitle","md","lg","labelMessages","id","TextVariants","p","created","type","date","created_at","description","offeringParameters","extra","workflowColumn","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","platformsNoDataDescription","connectSource","contactAdmin","title","noPlatforms","Object","defineProperty","exports","value","Level","tslib_1","React","__importStar","react_styles_1","level_1","__importDefault","_a","children","props","__rest","createElement","assign","css","default","level","modifiers","gutter","displayName"],"mappings":"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","file":"js/service-offering-detail~31ecd969.ac86e00cdb2d254a3a7d.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  TextContent,\n  Text,\n  TextVariants,\n  Level\n} from '@patternfly/react-core';\nimport ReactJsonView from 'react-json-view';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\n\nimport useQuery from '../../../utilities/use-query';\nimport { fetchServiceOffering } from '../../../redux/actions/platform-actions';\nimport { ProductLoaderPlaceholder } from '../../../presentational-components/shared/loader-placeholders';\nimport CardIcon from '../../../presentational-components/shared/card-icon';\nimport CatalogBreadcrumbs from '../../common/catalog-breadcrumbs';\nimport { StyledLevelItem } from '../../../presentational-components/styled-components/level';\nimport labelMessages from '../../../messages/labels.messages';\nimport platformsMessages from '../../../messages/platforms.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\n\nconst requiredParams = ['service', 'platform'];\n\nconst ServiceOfferingDetail = () => {\n  const formatMessage = useFormatMessage();\n  const [queryValues] = useQuery(requiredParams);\n  const [isFetching, setIsFetching] = useState(true);\n  const dispatch = useDispatch();\n  const { service, source } = useSelector(\n    ({ platformReducer: { serviceOffering } }) => serviceOffering\n  );\n\n  useEffect(() => {\n    setIsFetching(true);\n    dispatch(fetchServiceOffering(queryValues.service, queryValues.platform))\n      .then(() => setIsFetching(false))\n      .catch(() => setIsFetching(false));\n  }, [queryValues.service, queryValues.platform]);\n  if (isFetching) {\n    return (\n      <Section className=\"global-primary-background full-height pf-u-p-lg\">\n        <ProductLoaderPlaceholder />\n      </Section>\n    );\n  }\n\n  return (\n    <Section className=\"global-primary-background full-height\">\n      <Grid hasGutter className=\"pf-u-p-lg\">\n        <div className=\"pf-u-mb-sm\">\n          <CatalogBreadcrumbs />\n        </div>\n        <GridItem sm={12} className=\"pf-u-mb-md\">\n          <Level>\n            <StyledLevelItem grow alignStart className=\"pf-l-flex\">\n              <CardIcon src={source.icon_url} height={64} />\n              <TextContent>\n                <Text component=\"h1\">{service.name}</Text>\n                <Text component=\"small\">\n                  {formatMessage(platformsMessages.offeringTitle)}\n                </Text>\n              </TextContent>\n            </StyledLevelItem>\n          </Level>\n        </GridItem>\n        <GridItem md={3} lg={2}>\n          <TextContent>\n            <Text className=\"font-14\">\n              {formatMessage(labelMessages.platform)}\n            </Text>\n            <Text\n              id=\"source\"\n              className=\"overflow-wrap\"\n              component={TextVariants.p}\n            >\n              {source.name}\n            </Text>\n            <Text className=\"font-14\">\n              {formatMessage(labelMessages.created)}\n            </Text>\n            <Text\n              id=\"created_at\"\n              className=\"overflow-wrap\"\n              component={TextVariants.p}\n            >\n              <DateFormat type=\"relative\" date={service.created_at} />\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem md={9} lg={10}>\n          <TextContent>\n            <Text className=\"font-14\">{formatMessage(labelMessages.name)}</Text>\n            <Text id=\"description\" component={TextVariants.p}>\n              {service.name}\n            </Text>\n            <Text className=\"font-14\">\n              {formatMessage(labelMessages.description)}\n            </Text>\n            <Text id=\"long_description\" component={TextVariants.p}>\n              {service.description}\n            </Text>\n            <hr className=\"pf-c-divider\" />\n            <Text component=\"h2\">\n              {formatMessage(platformsMessages.offeringParameters)}\n            </Text>\n            <ReactJsonView src={service.extra} />\n          </TextContent>\n        </GridItem>\n      </Grid>\n    </Section>\n  );\n};\n\nexport default ServiceOfferingDetail;\n","import { defineMessages } from 'react-intl';\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  platformsNoDataDescription: {\n    id: 'platforms.list.configure-source',\n    defaultMessage: 'To get started, add an Ansible Tower cluster as a source.'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage: 'Go to Sources'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  }\n});\n\nexport default platformsMessages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Level = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst level_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/layouts/Level/level\"));\nexports.Level = (_a) => {\n    var { hasGutter, className = '', children = null } = _a, props = tslib_1.__rest(_a, [\"hasGutter\", \"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: react_styles_1.css(level_1.default.level, hasGutter && level_1.default.modifiers.gutter, className) }), children));\n};\nexports.Level.displayName = 'Level';\n//# sourceMappingURL=Level.js.map"],"sourceRoot":""}