{"version":3,"sources":["webpack:///./src/presentational-components/shared/bottom-pagination-container.tsx","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack:///./src/presentational-components/shared/service-offering-body.tsx","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Checkbox/Checkbox.js","webpack:///./src/presentational-components/shared/card-checkbox.tsx","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardHeader.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/wrench-icon.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./src/smart-components/portfolio/portfolio-item.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardFooter.js","webpack:///./src/toolbar/helpers.js","webpack:///./src/toolbar/schemas/portfolio-toolbar.schema.js","webpack:///./src/smart-components/portfolio/portfolio-empty-state.js","webpack:///./src/smart-components/portfolio/portfolio-items.js"],"names":["children","className","props","objectWithoutPropertiesLoose","module","exports","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","name","distributor","pathname","searchParams","preserveSearch","portfolioName","component","h3","title","small","toDisplay","description","defaultOnChange","super","this","handleChange","event","onChange","currentTarget","checked","_a","ariaLabel","isValid","isDisabled","isChecked","label","defaultChecked","checkedProps","includes","check","assign","checkInput","type","disabled","ref","elem","indeterminate","checkLabel","modifiers","htmlFor","id","checkDescription","displayName","defaultProps","handleCheck","onClick","stopPropagation","defineProperty","value","CardHeader","tslib_1","React","__importStar","react_styles_1","card_1","__importDefault","__rest","createElement","css","default","cardHeader","__esModule","WrenchIconConfig","height","width","svgPath","yOffset","xOffset","WrenchIcon","createIcon","sourceKeys","keys","StyledLevel","styled","Level","PortfolioItem","removeInProgress","isSelected","src","CATALOG_API_BASE","sourceId","service_offering_source_ref","isSelectable","onSelect","propTypes","PropTypes","string","platformId","bool","func","orderUrl","portfolio_id","metadata","shape","user_capabilities","destroy","isRequired","CardFooter","Component","cardFooter","createLinkButton","item","toolbarComponentTypes","TOOLBAR_ITEM","fields","LINK","BUTTON","PortfolioActionsToolbar","editPortfolioRoute","workflowPortfolioRoute","removePortfolioRoute","copyInProgress","copyPortfolio","userCapabilities","copy","update","set_approval","useState","isOpen","setOpen","formatMessage","useFormatMessage","dropdownItems","push","DropdownItem","aria-label","role","window","insights","chrome","isBeta","orderProcessAction","orderProcessesMessages","setOrderProcess","NESTED_EDIT_ORDER_PROCESS_ROUTE","Dropdown","position","DropdownPosition","right","toggle","KebabToggle","onToggle","isPlain","createPortfolioToolbarSchema","addProductsRoute","sharePortfolioRoute","isLoading","removeProducts","itemsSelected","meta","fetchPortfolioItemsWithPortfolio","portfolioId","fromProducts","filterProps","searchValue","onFilterChange","placeholder","share","unshare","TOP_TOOLBAR","breadcrumbs","hidden","BackToProducts","TOP_TOOLBAR_TITLE","noData","TOOLBAR","noWrap","variant","LEVEL","groupName","FILTER_TOOLBAR_ITEM","isClearable","count","LEVEL_ITEM","AsyncPagination","apiRequest","apiProps","isCompact","PortfolioEmptyState","url","handleFilterChange","emptyStateProps","PrimaryAction","portfolioMessages","addProducts","hasPermission","Button","filteringMessages","clearFilters","noProducts","noResults","emptyNoProducts","noResultsDescription","Icon","SearchIcon","PortfolioItems","routes","stateDispatch","state","isFetching","isFiltering","selectedItems","filterValue","useSelector","portfolioReducer","portfolioItems","data","selectedPortfolio","useRouteMatch","PORTFOLIO_ROUTE","useQuery","portfolio","dispatch","useDispatch","items","map","selectedItem","payload","product","schema","filterByProduct","renderEmptyState","dropDirection","portfolioRoute","arrayOf"],"mappings":"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","file":"js/63.a59c68f5be9af8b1326e.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { HTMLProps } from 'react';\nimport clsx from 'clsx';\n\nconst BottomPaginationContainer: React.ComponentType<HTMLProps<\n  HTMLDivElement\n>> = ({ children, className, ...props }) => (\n  <div\n    className={clsx(\n      'pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto',\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </div>\n);\n\nexport default BottomPaginationContainer;\n","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","/* eslint-disable react/prop-types */\nimport React, { Fragment } from 'react';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ItemDetails from './card-common';\nimport ConditionalLink from './conditional-link';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { StyledCardBody } from '../styled-components/card';\nimport { StringObject } from '../../types/common-types';\n\nexport interface ServiceOfferingCardBodyProps {\n  name?: string;\n  display_name?: string;\n  distributor?: string;\n  pathname?: string;\n  searchParams?: StringObject;\n  preserveSearch?: boolean;\n  description?: string;\n  long_description?: string;\n  portfolioName?: string;\n}\nconst ServiceOfferingCardBody: React.ComponentType<ServiceOfferingCardBodyProps> = ({\n  name,\n  distributor,\n  pathname,\n  searchParams,\n  preserveSearch,\n  portfolioName,\n  ...props\n}) => (\n  <StyledCardBody>\n    <TextContent>\n      <ConditionalLink\n        pathname={pathname}\n        searchParams={searchParams}\n        preserveSearch={preserveSearch}\n      >\n        <Text component={TextVariants.h3} title={name}>\n          <EllipsisTextContainer>{name}</EllipsisTextContainer>\n        </Text>\n      </ConditionalLink>\n      {distributor && <Text component={TextVariants.small}>{distributor}</Text>}\n      {portfolioName && (\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component=\"small\">\n            Portfolio\n          </Text>\n          <Text>{portfolioName}</Text>\n        </Fragment>\n      )}\n    </TextContent>\n    <ItemDetails\n      toDisplay={[props.description ? 'description' : 'long_description']}\n      {...props}\n    />\n  </StyledCardBody>\n);\n\nexport default ServiceOfferingCardBody;\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\n// tslint:disable-next-line:no-empty\nconst defaultOnChange = () => { };\nexport class Checkbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event.currentTarget.checked, event);\n        };\n    }\n    render() {\n        const _a = this.props, { 'aria-label': ariaLabel, className, onChange, isValid, isDisabled, isChecked, label, checked, defaultChecked, description } = _a, props = __rest(_a, ['aria-label', \"className\", \"onChange\", \"isValid\", \"isDisabled\", \"isChecked\", \"label\", \"checked\", \"defaultChecked\", \"description\"]);\n        const checkedProps = {};\n        if ([true, false].includes(checked) || isChecked === true) {\n            checkedProps.checked = checked || isChecked;\n        }\n        if (onChange !== defaultOnChange) {\n            checkedProps.checked = isChecked;\n        }\n        if ([false, true].includes(defaultChecked)) {\n            checkedProps.defaultChecked = defaultChecked;\n        }\n        checkedProps.checked = checkedProps.checked === null ? false : checkedProps.checked;\n        return (React.createElement(\"div\", { className: css(styles.check, className) },\n            React.createElement(\"input\", Object.assign({}, props, { className: css(styles.checkInput), type: \"checkbox\", onChange: this.handleChange, \"aria-invalid\": !isValid, \"aria-label\": ariaLabel, disabled: isDisabled, ref: elem => elem && (elem.indeterminate = isChecked === null) }, checkedProps)),\n            label && (React.createElement(\"label\", { className: css(styles.checkLabel, isDisabled && styles.modifiers.disabled), htmlFor: props.id }, label)),\n            description && React.createElement(\"div\", { className: css(styles.checkDescription) }, description)));\n    }\n}\nCheckbox.displayName = 'Checkbox';\nCheckbox.defaultProps = {\n    className: '',\n    isValid: true,\n    isDisabled: false,\n    isChecked: false,\n    onChange: defaultOnChange\n};\n//# sourceMappingURL=Checkbox.js.map","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Checkbox } from '@patternfly/react-core';\n\nexport interface CardCheckboxProps {\n  handleCheck: (value: any) => void;\n  isChecked?: boolean;\n  id: string;\n}\nconst CardCheckbox: React.ComponentType<CardCheckboxProps> = ({\n  handleCheck,\n  isChecked,\n  id\n}) => (\n  <Checkbox\n    onClick={(event) => event.stopPropagation()}\n    isChecked={isChecked}\n    onChange={handleCheck}\n    aria-label=\"card checkbox\"\n    id={id}\n  />\n);\n\nexport default CardCheckbox;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardHeader = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nexports.CardHeader = (_a) => {\n    var { children = null, className = '' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: react_styles_1.css(card_1.default.cardHeader, className) }, props), children));\n};\nexports.CardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","\"use strict\"\nexports.__esModule = true;\nexports.WrenchIconConfig = {\n  name: 'WrenchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.WrenchIcon = require('../createIcon').createIcon(exports.WrenchIconConfig);\nexports[\"default\"] = exports.WrenchIcon;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level } from '@patternfly/react-core';\n\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport CardCheckbox from '../../presentational-components/shared/card-checkbox';\nimport ServiceOfferingCardBody from '../../presentational-components/shared/service-offering-body';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../../presentational-components/styled-components/styled-gallery';\nimport styled from 'styled-components';\n\nconst StyledLevel = styled(Level)`\n  flex: 1;\n`;\n\nconst PortfolioItem = (props) => (\n  <StyledGalleryItem isDisabled={props.removeInProgress && props.isSelected}>\n    <StyledCard>\n      <CardHeader>\n        <StyledLevel>\n          <CardIcon\n            src={`${CATALOG_API_BASE}/portfolio_items/${props.id}/icon`}\n            sourceId={props.service_offering_source_ref}\n          />\n          {props.isSelectable && (\n            <CardCheckbox\n              handleCheck={() => props.onSelect(props.id)}\n              isChecked={props.isSelected}\n              id={props.id}\n            />\n          )}\n        </StyledLevel>\n      </CardHeader>\n      <ServiceOfferingCardBody {...props} />\n      <CardFooter></CardFooter>\n    </StyledCard>\n  </StyledGalleryItem>\n);\n\nPortfolioItem.propTypes = {\n  id: PropTypes.string,\n  platformId: PropTypes.string,\n  service_offering_source_ref: PropTypes.string,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  orderUrl: PropTypes.string,\n  removeInProgress: PropTypes.bool,\n  portfolio_id: PropTypes.string,\n  metadata: PropTypes.shape({\n    user_capabilities: PropTypes.shape({ destroy: PropTypes.bool }).isRequired\n  }).isRequired\n};\n\nexport default PortfolioItem;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardFooter = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nexports.CardFooter = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: react_styles_1.css(card_1.default.cardFooter, className) }, props), children));\n};\nexports.CardFooter.displayName = 'CardFooter';\n//# sourceMappingURL=CardFooter.js.map","import { toolbarComponentTypes } from './toolbar-mapper';\n\nexport const createLinkButton = ({\n  pathname,\n  preserveSearch,\n  id,\n  ...item\n}) => ({\n  component: toolbarComponentTypes.TOOLBAR_ITEM,\n  key: `${item.key}/button-link`,\n  fields: [\n    {\n      component: toolbarComponentTypes.LINK,\n      pathname,\n      preserveSearch,\n      key: `${item.key}/button-link`,\n      isDisabled: item.isDisabled,\n      id,\n      fields: [\n        {\n          component: toolbarComponentTypes.BUTTON,\n          ...item\n        }\n      ]\n    }\n  ]\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  DropdownItem\n} from '@patternfly/react-core';\n\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport { createLinkButton } from '../helpers';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport BackToProducts from '../../presentational-components/portfolio/back-to-products';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\nimport { NESTED_EDIT_ORDER_PROCESS_ROUTE } from '../../constants/routes';\n\n/**\n * Cannot be anonymous function. Requires Component.diplayName to work with PF4 refs\n */\nconst PortfolioActionsToolbar = ({\n  editPortfolioRoute,\n  workflowPortfolioRoute,\n  removePortfolioRoute,\n  copyInProgress,\n  copyPortfolio,\n  userCapabilities: { copy, destroy, update, set_approval }\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const formatMessage = useFormatMessage();\n  const dropdownItems = [];\n\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Edit Portfolio\"\n        key=\"edit-portfolio\"\n        id=\"edit-portfolio\"\n        component={\n          <CatalogLink\n            id=\"edit-portfolio\"\n            preserveSearch\n            pathname={editPortfolioRoute}\n          >\n            Edit\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (copy) {\n    dropdownItems.push(\n      <DropdownItem\n        component=\"button\"\n        aria-label=\"Copy Portfolio\"\n        key=\"copy-portfolio\"\n        id=\"copy-portfolio\"\n        onClick={copyPortfolio}\n      >\n        Copy\n      </DropdownItem>\n    );\n  }\n\n  if (set_approval) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Set approval workflow\"\n        key=\"set-approval-portfolio-action\"\n        id=\"set-approval-portfolio-action\"\n        component={\n          <CatalogLink preserveSearch pathname={workflowPortfolioRoute}>\n            Set approval\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (window.insights.chrome.isBeta() && update) {\n    const orderProcessAction = formatMessage(\n      orderProcessesMessages.setOrderProcess\n    );\n    dropdownItems.push(\n      <DropdownItem\n        aria-label={orderProcessAction}\n        key=\"attach-order-processes\"\n        id=\"attach-order-processes\"\n        component={\n          <CatalogLink\n            preserveSearch\n            pathname={NESTED_EDIT_ORDER_PROCESS_ROUTE}\n          >\n            {orderProcessAction}\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (destroy) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Remove Portfolio\"\n        key=\"delete-portfolio\"\n        id=\"delete-portfolio\"\n        component={\n          <CatalogLink preserveSearch pathname={removePortfolioRoute}>\n            Delete\n          </CatalogLink>\n        }\n        role=\"link\"\n        className=\"pf-c-dropdown__menu-item\"\n      />\n    );\n  }\n\n  return dropdownItems.length === 0 ? null : (\n    <Dropdown\n      className=\"pf-u-ml-md\"\n      onSelect={() => setOpen(false)}\n      position={DropdownPosition.right}\n      toggle={\n        <KebabToggle\n          id=\"toggle-portfolio-actions\"\n          onToggle={setOpen}\n          isDisabled={copyInProgress}\n        />\n      }\n      isOpen={isOpen}\n      isPlain\n      dropdownItems={dropdownItems}\n    />\n  );\n};\n\nPortfolioActionsToolbar.propTypes = {\n  removePortfolioRoute: PropTypes.string.isRequired,\n  editPortfolioRoute: PropTypes.string.isRequired,\n  workflowPortfolioRoute: PropTypes.string.isRequired,\n  copyPortfolio: PropTypes.func.isRequired,\n  copyInProgress: PropTypes.bool,\n  userCapabilities: PropTypes.shape({\n    copy: PropTypes.bool,\n    update: PropTypes.bool,\n    destroy: PropTypes.bool,\n    set_approval: PropTypes.bool\n  }).isRequired\n};\n\nconst createPortfolioToolbarSchema = ({\n  title,\n  addProductsRoute,\n  copyPortfolio,\n  sharePortfolioRoute,\n  editPortfolioRoute,\n  workflowPortfolioRoute,\n  removePortfolioRoute,\n  copyInProgress,\n  isLoading,\n  removeProducts,\n  itemsSelected,\n  meta,\n  fetchPortfolioItemsWithPortfolio,\n  portfolioId,\n  description,\n  fromProducts,\n  filterProps: { searchValue, onFilterChange, placeholder },\n  userCapabilities: { share, unshare, ...userCapabilities }\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      breadcrumbs: !fromProducts,\n      key: 'portfolio-top-toolbar',\n      fields: [\n        {\n          key: 'back-to-products',\n          hidden: !fromProducts,\n          component: BackToProducts\n        },\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'portfolio-toolbar-title',\n          noData: meta.noData,\n          title,\n          description,\n          fields: [\n            {\n              component: toolbarComponentTypes.TOOLBAR,\n              key: 'portfolio-actions',\n              noWrap: true,\n              fields: [\n                createLinkButton({\n                  pathname: sharePortfolioRoute,\n                  preserveSearch: true,\n                  variant: 'secondary',\n                  title: 'Share',\n                  isDisabled: copyInProgress,\n                  key: 'portfolio-share-button',\n                  id: 'portfolio-share-button',\n                  hidden: !share && !unshare\n                }),\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'portfolio-actions-dropdown-item',\n                  fields: [\n                    {\n                      component: PortfolioActionsToolbar,\n                      editPortfolioRoute,\n                      workflowPortfolioRoute,\n                      removePortfolioRoute,\n                      copyPortfolio,\n                      copyInProgress,\n                      userCapabilities,\n                      key: 'portfolio-actions-dropdown'\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'portfolio-items-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'portfolio-items-actions',\n                  fields: [\n                    {\n                      groupName: 'filter-portfolio-items',\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      isClearable: true,\n                      key: 'portfolio-items-filter',\n                      searchValue,\n                      onFilterChange,\n                      placeholder\n                    },\n                    {\n                      hidden: meta.count === 0 || !userCapabilities.update,\n                      groupName: 'add-portfolio-items',\n                      key: 'portfolio-items-add-group',\n                      ...createLinkButton({\n                        preserveSearch: true,\n                        pathname: addProductsRoute,\n                        isDisabled: isLoading || copyInProgress,\n                        variant: 'primary',\n                        title: 'Add',\n                        id: 'add-products-button',\n                        key: 'add-products-button'\n                      })\n                    },\n                    {\n                      component: toolbarComponentTypes.TOOLBAR_ITEM,\n                      key: 'remove-products-item',\n                      hidden: meta.count === 0 || !userCapabilities.update,\n                      fields: [\n                        {\n                          component: toolbarComponentTypes.BUTTON,\n                          groupName: 'remove-portfolio-items',\n                          variant: 'link',\n                          title: 'Remove',\n                          key: 'remove-products-button',\n                          id: 'remove-products-button',\n                          isDisabled: !itemsSelected,\n                          onClick: removeProducts\n                        }\n                      ]\n                    }\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            key: 'portfolio-items-pagination',\n                            meta,\n                            apiRequest: fetchPortfolioItemsWithPortfolio,\n                            apiProps: portfolioId,\n                            isCompact: true\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, WrenchIcon } from '@patternfly/react-icons';\n\nimport ContentGalleryEmptyState, {\n  EmptyStatePrimaryAction\n} from '../../presentational-components/shared/content-gallery-empty-state';\nimport { Button } from '@patternfly/react-core';\nimport filteringMessages from '../../messages/filtering.messages';\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst PortfolioEmptyState = ({\n  url,\n  handleFilterChange,\n  meta,\n  userCapabilities: { update }\n}) => {\n  const formatMessage = useFormatMessage();\n  const NoDataAction = () => (\n    <EmptyStatePrimaryAction\n      url={url}\n      label={formatMessage(portfolioMessages.addProducts)}\n      id=\"add-products-to-portfolio\"\n      hasPermission={update}\n    />\n  );\n\n  const FilterAction = () => (\n    <Button\n      id=\"clear-portfolio-filter\"\n      variant=\"link\"\n      onClick={() => handleFilterChange('')}\n    >\n      {formatMessage(filteringMessages.clearFilters)}\n    </Button>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? NoDataAction : FilterAction,\n    title: meta.noData\n      ? formatMessage(filteringMessages.noProducts)\n      : formatMessage(filteringMessages.noResults),\n    description: meta.noData\n      ? formatMessage(portfolioMessages.emptyNoProducts)\n      : formatMessage(filteringMessages.noResultsDescription),\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n  return <ContentGalleryEmptyState {...emptyStateProps} />;\n};\n\nPortfolioEmptyState.propTypes = {\n  url: PropTypes.string.isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n  meta: PropTypes.shape({\n    noData: PropTypes.bool\n  }).isRequired,\n  userCapabilities: PropTypes.shape({\n    update: PropTypes.bool\n  }).isRequired\n};\n\nexport default PortfolioEmptyState;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createPortfolioToolbarSchema from '../../toolbar/schemas/portfolio-toolbar.schema';\nimport PortfolioEmptyState from './portfolio-empty-state';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport PortfolioItem from './portfolio-item';\nimport { fetchPortfolioItemsWithPortfolio } from '../../redux/actions/portfolio-actions';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useQuery from '../../utilities/use-query';\nimport { PORTFOLIO_ROUTE } from '../../constants/routes';\nimport filteringMessages from '../../messages/filtering.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst PortfolioItems = ({\n  routes,\n  handleFilterChange,\n  removeProducts,\n  copyPortfolio,\n  stateDispatch,\n  fromProducts,\n  state: {\n    removeInProgress,\n    isFetching,\n    isFiltering,\n    copyInProgress,\n    selectedItems,\n    filterValue\n  }\n}) => {\n  const formatMessage = useFormatMessage();\n  const { data, meta, name, description, userCapabilities } = useSelector(\n    ({\n      portfolioReducer: {\n        portfolioItems: { data, meta },\n        selectedPortfolio: {\n          name,\n          description,\n          metadata: { user_capabilities }\n        }\n      }\n    }) => ({\n      data,\n      meta,\n      name,\n      description,\n      userCapabilities: user_capabilities\n    })\n  );\n  const { url } = useRouteMatch(PORTFOLIO_ROUTE);\n  const [{ portfolio: id }] = useQuery(['portfolio']);\n  const dispatch = useDispatch();\n\n  const items = data.map((item) => (\n    <PortfolioItem\n      key={item.id}\n      {...item}\n      pathname={`${url}/portfolio-item`}\n      searchParams={{\n        source: item.service_offering_source_ref,\n        'portfolio-item': item.id\n      }}\n      preserveSearch\n      isSelectable={userCapabilities.update}\n      onSelect={(selectedItem) =>\n        stateDispatch({\n          type: 'selectItem',\n          payload: { selectedItem, product: item }\n        })\n      }\n      isSelected={selectedItems.includes(item.id)}\n      removeInProgress={removeInProgress}\n    />\n  ));\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPortfolioToolbarSchema({\n          fromProducts,\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterChange,\n            placeholder: formatMessage(filteringMessages.filterByProduct)\n          },\n          title: name,\n          description,\n          ...routes,\n          copyPortfolio,\n          isLoading: isFetching || isFiltering,\n          copyInProgress,\n          removeProducts: () => removeProducts(selectedItems),\n          itemsSelected: selectedItems.length > 0,\n          meta,\n          fetchPortfolioItemsWithPortfolio: (...args) =>\n            dispatch(fetchPortfolioItemsWithPortfolio(...args)),\n          portfolioId: id,\n          userCapabilities\n        })}\n      />\n      <ContentGallery\n        items={items}\n        isLoading={isFetching || isFiltering}\n        renderEmptyState={() => (\n          <PortfolioEmptyState\n            handleFilterChange={handleFilterChange}\n            meta={meta}\n            userCapabilities={userCapabilities}\n            url={routes.addProductsRoute}\n          />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiProps={id}\n            apiRequest={(...args) =>\n              dispatch(fetchPortfolioItemsWithPortfolio(...args))\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nPortfolioItems.propTypes = {\n  routes: PropTypes.shape({\n    addProductsRoute: PropTypes.string.isRequired,\n    portfolioRoute: PropTypes.string.isRequired\n  }).isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n  removeProducts: PropTypes.func.isRequired,\n  copyPortfolio: PropTypes.func.isRequired,\n  stateDispatch: PropTypes.func.isRequired,\n  state: PropTypes.shape({\n    removeInProgress: PropTypes.bool,\n    isFetching: PropTypes.bool,\n    isFiltering: PropTypes.bool,\n    copyInProgress: PropTypes.bool,\n    selectedItems: PropTypes.arrayOf(PropTypes.string),\n    filterValue: PropTypes.string\n  }).isRequired,\n  fromProducts: PropTypes.bool\n};\n\nexport default PortfolioItems;\n"],"sourceRoot":""}