{"version":3,"sources":["webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/presentational-components/shared/service-offering-body.tsx","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardHeader.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Checkbox/Checkbox.js","webpack:///./src/presentational-components/shared/card-checkbox.tsx","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardFooter.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/wrench-icon.js","webpack:///./src/smart-components/portfolio/portfolio-item.js","webpack:///./src/toolbar/helpers.js","webpack:///./src/toolbar/schemas/portfolio-toolbar.schema.js","webpack:///./src/smart-components/portfolio/portfolio-empty-state.js","webpack:///./src/smart-components/portfolio/portfolio-items.js"],"names":["AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","options","getNewPage","request","debouncePromise","direction","propTypes","PropTypes","shape","isRequired","func","any","string","bool","defaultProps","BottomPaginationContainer","children","oneOfType","node","arrayOf","name","distributor","pathname","searchParams","preserveSearch","portfolioName","component","h3","title","small","toDisplay","description","Object","defineProperty","exports","value","tslib_1","React","__importStar","react_styles_1","card_1","__importDefault","CardHeader","_a","__rest","createElement","assign","css","default","cardHeader","displayName","defaultOnChange","super","this","handleChange","event","onChange","currentTarget","checked","ariaLabel","isValid","isDisabled","isChecked","label","defaultChecked","checkedProps","includes","check","checkInput","type","disabled","ref","elem","indeterminate","checkLabel","modifiers","htmlFor","id","checkDescription","handleCheck","onClick","stopPropagation","CardFooter","Component","cardFooter","__esModule","WrenchIconConfig","height","width","svgPath","yOffset","xOffset","transform","WrenchIcon","createIcon","StyledLevel","styled","Level","PortfolioItem","removeInProgress","isSelected","src","CATALOG_API_BASE","sourceId","service_offering_source_ref","isSelectable","onSelect","platformId","orderUrl","portfolio_id","metadata","user_capabilities","destroy","createLinkButton","item","toolbarComponentTypes","TOOLBAR_ITEM","key","fields","LINK","BUTTON","PortfolioActionsToolbar","editPortfolioRoute","workflowPortfolioRoute","removePortfolioRoute","copyInProgress","copyPortfolio","userCapabilities","copy","update","set_approval","useState","isOpen","setOpen","formatMessage","useFormatMessage","dropdownItems","push","DropdownItem","aria-label","role","window","insights","chrome","isBeta","orderProcessAction","orderProcessesMessages","setOrderProcess","NESTED_EDIT_ORDER_PROCESS_ROUTE","length","Dropdown","position","DropdownPosition","right","toggle","KebabToggle","onToggle","isPlain","createPortfolioToolbarSchema","addProductsRoute","sharePortfolioRoute","isLoading","removeProducts","itemsSelected","fetchPortfolioItemsWithPortfolio","portfolioId","fromProducts","filterProps","searchValue","onFilterChange","placeholder","share","unshare","TOP_TOOLBAR","breadcrumbs","hidden","BackToProducts","TOP_TOOLBAR_TITLE","noData","TOOLBAR","noWrap","variant","LEVEL","groupName","FILTER_TOOLBAR_ITEM","isClearable","LEVEL_ITEM","PortfolioEmptyState","url","handleFilterChange","emptyStateProps","PrimaryAction","portfolioMessages","addProducts","hasPermission","Button","filteringMessages","clearFilters","noProducts","noResults","emptyNoProducts","noResultsDescription","Icon","SearchIcon","PortfolioItems","routes","stateDispatch","state","isFetching","isFiltering","selectedItems","filterValue","useSelector","portfolioReducer","portfolioItems","data","selectedPortfolio","useRouteMatch","PORTFOLIO_ROUTE","useQuery","portfolio","dispatch","useDispatch","items","map","source","selectedItem","payload","product","schema","filterByProduct","renderEmptyState","dropDirection","portfolioRoute"],"mappings":"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","file":"js/63.7076eee8c3efdf8ce95e.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    {children}\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment } from 'react';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ItemDetails from './card-common';\nimport ConditionalLink from './conditional-link';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { StyledCardBody } from '../styled-components/card';\nimport { StringObject } from '../../types/common-types';\n\nexport interface ServiceOfferingCardBodyProps {\n  name?: string;\n  display_name?: string;\n  distributor?: string;\n  pathname?: string;\n  searchParams?: StringObject;\n  preserveSearch?: boolean;\n  description?: string;\n  long_description?: string;\n  portfolioName?: string;\n}\nconst ServiceOfferingCardBody: React.ComponentType<ServiceOfferingCardBodyProps> = ({\n  name,\n  distributor,\n  pathname,\n  searchParams,\n  preserveSearch,\n  portfolioName,\n  ...props\n}) => (\n  <StyledCardBody>\n    <TextContent>\n      <ConditionalLink\n        pathname={pathname}\n        searchParams={searchParams}\n        preserveSearch={preserveSearch}\n      >\n        <Text component={TextVariants.h3} title={name}>\n          <EllipsisTextContainer>{name}</EllipsisTextContainer>\n        </Text>\n      </ConditionalLink>\n      {distributor && <Text component={TextVariants.small}>{distributor}</Text>}\n      {portfolioName && (\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component=\"small\">\n            Portfolio\n          </Text>\n          <Text>{portfolioName}</Text>\n        </Fragment>\n      )}\n    </TextContent>\n    <ItemDetails\n      toDisplay={[props.description ? 'description' : 'long_description']}\n      {...props}\n    />\n  </StyledCardBody>\n);\n\nexport default ServiceOfferingCardBody;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nexports.CardHeader = (_a) => {\n    var { children = null, className = '' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: react_styles_1.css(card_1.default.cardHeader, className) }, props), children));\n};\nexports.CardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\n// tslint:disable-next-line:no-empty\nconst defaultOnChange = () => { };\nexport class Checkbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event.currentTarget.checked, event);\n        };\n    }\n    render() {\n        const _a = this.props, { 'aria-label': ariaLabel, className, onChange, isValid, isDisabled, isChecked, label, checked, defaultChecked, description } = _a, props = __rest(_a, ['aria-label', \"className\", \"onChange\", \"isValid\", \"isDisabled\", \"isChecked\", \"label\", \"checked\", \"defaultChecked\", \"description\"]);\n        const checkedProps = {};\n        if ([true, false].includes(checked) || isChecked === true) {\n            checkedProps.checked = checked || isChecked;\n        }\n        if (onChange !== defaultOnChange) {\n            checkedProps.checked = isChecked;\n        }\n        if ([false, true].includes(defaultChecked)) {\n            checkedProps.defaultChecked = defaultChecked;\n        }\n        checkedProps.checked = checkedProps.checked === null ? false : checkedProps.checked;\n        return (React.createElement(\"div\", { className: css(styles.check, className) },\n            React.createElement(\"input\", Object.assign({}, props, { className: css(styles.checkInput), type: \"checkbox\", onChange: this.handleChange, \"aria-invalid\": !isValid, \"aria-label\": ariaLabel, disabled: isDisabled, ref: elem => elem && (elem.indeterminate = isChecked === null) }, checkedProps)),\n            label && (React.createElement(\"label\", { className: css(styles.checkLabel, isDisabled && styles.modifiers.disabled), htmlFor: props.id }, label)),\n            description && React.createElement(\"div\", { className: css(styles.checkDescription) }, description)));\n    }\n}\nCheckbox.displayName = 'Checkbox';\nCheckbox.defaultProps = {\n    className: '',\n    isValid: true,\n    isDisabled: false,\n    isChecked: false,\n    onChange: defaultOnChange\n};\n//# sourceMappingURL=Checkbox.js.map","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Checkbox } from '@patternfly/react-core';\n\nexport interface CardCheckboxProps {\n  handleCheck: (value: any) => void;\n  isChecked?: boolean;\n  id: string;\n}\nconst CardCheckbox: React.ComponentType<CardCheckboxProps> = ({\n  handleCheck,\n  isChecked,\n  id\n}) => (\n  <Checkbox\n    onClick={(event) => event.stopPropagation()}\n    isChecked={isChecked}\n    onChange={handleCheck}\n    aria-label=\"card checkbox\"\n    id={id}\n  />\n);\n\nexport default CardCheckbox;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nexports.CardFooter = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: react_styles_1.css(card_1.default.cardFooter, className) }, props), children));\n};\nexports.CardFooter.displayName = 'CardFooter';\n//# sourceMappingURL=CardFooter.js.map","\"use strict\"\nexports.__esModule = true;\nexports.WrenchIconConfig = {\n  name: 'WrenchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.WrenchIcon = require('../createIcon').createIcon(exports.WrenchIconConfig);\nexports[\"default\"] = exports.WrenchIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level } from '@patternfly/react-core';\n\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport CardCheckbox from '../../presentational-components/shared/card-checkbox';\nimport ServiceOfferingCardBody from '../../presentational-components/shared/service-offering-body';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../../presentational-components/styled-components/styled-gallery';\nimport styled from 'styled-components';\n\nconst StyledLevel = styled(Level)`\n  flex: 1;\n`;\n\nconst PortfolioItem = (props) => (\n  <StyledGalleryItem isDisabled={props.removeInProgress && props.isSelected}>\n    <StyledCard>\n      <CardHeader>\n        <StyledLevel>\n          <CardIcon\n            src={`${CATALOG_API_BASE}/portfolio_items/${props.id}/icon`}\n            sourceId={props.service_offering_source_ref}\n          />\n          {props.isSelectable && (\n            <CardCheckbox\n              handleCheck={() => props.onSelect(props.id)}\n              isChecked={props.isSelected}\n              id={props.id}\n            />\n          )}\n        </StyledLevel>\n      </CardHeader>\n      <ServiceOfferingCardBody {...props} />\n      <CardFooter></CardFooter>\n    </StyledCard>\n  </StyledGalleryItem>\n);\n\nPortfolioItem.propTypes = {\n  id: PropTypes.string,\n  platformId: PropTypes.string,\n  service_offering_source_ref: PropTypes.string,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  orderUrl: PropTypes.string,\n  removeInProgress: PropTypes.bool,\n  portfolio_id: PropTypes.string,\n  metadata: PropTypes.shape({\n    user_capabilities: PropTypes.shape({ destroy: PropTypes.bool }).isRequired\n  }).isRequired\n};\n\nexport default PortfolioItem;\n","import { toolbarComponentTypes } from './toolbar-mapper';\n\nexport const createLinkButton = ({\n  pathname,\n  preserveSearch,\n  id,\n  ...item\n}) => ({\n  component: toolbarComponentTypes.TOOLBAR_ITEM,\n  key: `${item.key}/button-link`,\n  fields: [\n    {\n      component: toolbarComponentTypes.LINK,\n      pathname,\n      preserveSearch,\n      key: `${item.key}/button-link`,\n      isDisabled: item.isDisabled,\n      id,\n      fields: [\n        {\n          component: toolbarComponentTypes.BUTTON,\n          ...item\n        }\n      ]\n    }\n  ]\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  DropdownItem\n} from '@patternfly/react-core';\n\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport { createLinkButton } from '../helpers';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport BackToProducts from '../../presentational-components/portfolio/back-to-products';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\nimport { NESTED_EDIT_ORDER_PROCESS_ROUTE } from '../../constants/routes';\n\n/**\n * Cannot be anonymous function. Requires Component.diplayName to work with PF4 refs\n */\nconst PortfolioActionsToolbar = ({\n  editPortfolioRoute,\n  workflowPortfolioRoute,\n  removePortfolioRoute,\n  copyInProgress,\n  copyPortfolio,\n  userCapabilities: { copy, destroy, update, set_approval }\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const formatMessage = useFormatMessage();\n  const dropdownItems = [];\n\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Edit Portfolio\"\n        key=\"edit-portfolio\"\n        id=\"edit-portfolio\"\n        component={\n          <CatalogLink\n            id=\"edit-portfolio\"\n            preserveSearch\n            pathname={editPortfolioRoute}\n          >\n            Edit\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (copy) {\n    dropdownItems.push(\n      <DropdownItem\n        component=\"button\"\n        aria-label=\"Copy Portfolio\"\n        key=\"copy-portfolio\"\n        id=\"copy-portfolio\"\n        onClick={copyPortfolio}\n      >\n        Copy\n      </DropdownItem>\n    );\n  }\n\n  if (set_approval) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Set approval workflow\"\n        key=\"set-approval-portfolio-action\"\n        id=\"set-approval-portfolio-action\"\n        component={\n          <CatalogLink preserveSearch pathname={workflowPortfolioRoute}>\n            Set approval\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (window.insights.chrome.isBeta() && update) {\n    const orderProcessAction = formatMessage(\n      orderProcessesMessages.setOrderProcess\n    );\n    dropdownItems.push(\n      <DropdownItem\n        aria-label={orderProcessAction}\n        key=\"attach-order-processes\"\n        id=\"attach-order-processes\"\n        component={\n          <CatalogLink\n            preserveSearch\n            pathname={NESTED_EDIT_ORDER_PROCESS_ROUTE}\n          >\n            {orderProcessAction}\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (destroy) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Remove Portfolio\"\n        key=\"delete-portfolio\"\n        id=\"delete-portfolio\"\n        component={\n          <CatalogLink preserveSearch pathname={removePortfolioRoute}>\n            Delete\n          </CatalogLink>\n        }\n        role=\"link\"\n        className=\"pf-c-dropdown__menu-item\"\n      />\n    );\n  }\n\n  return dropdownItems.length === 0 ? null : (\n    <Dropdown\n      className=\"pf-u-ml-md\"\n      onSelect={() => setOpen(false)}\n      position={DropdownPosition.right}\n      toggle={\n        <KebabToggle\n          id=\"toggle-portfolio-actions\"\n          onToggle={setOpen}\n          isDisabled={copyInProgress}\n        />\n      }\n      isOpen={isOpen}\n      isPlain\n      dropdownItems={dropdownItems}\n    />\n  );\n};\n\nPortfolioActionsToolbar.propTypes = {\n  removePortfolioRoute: PropTypes.string.isRequired,\n  editPortfolioRoute: PropTypes.string.isRequired,\n  workflowPortfolioRoute: PropTypes.string.isRequired,\n  copyPortfolio: PropTypes.func.isRequired,\n  copyInProgress: PropTypes.bool,\n  userCapabilities: PropTypes.shape({\n    copy: PropTypes.bool,\n    update: PropTypes.bool,\n    destroy: PropTypes.bool,\n    set_approval: PropTypes.bool\n  }).isRequired\n};\n\nconst createPortfolioToolbarSchema = ({\n  title,\n  addProductsRoute,\n  copyPortfolio,\n  sharePortfolioRoute,\n  editPortfolioRoute,\n  workflowPortfolioRoute,\n  removePortfolioRoute,\n  copyInProgress,\n  isLoading,\n  removeProducts,\n  itemsSelected,\n  meta,\n  fetchPortfolioItemsWithPortfolio,\n  portfolioId,\n  description,\n  fromProducts,\n  filterProps: { searchValue, onFilterChange, placeholder },\n  userCapabilities: { share, unshare, ...userCapabilities }\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      breadcrumbs: !fromProducts,\n      key: 'portfolio-top-toolbar',\n      fields: [\n        {\n          key: 'back-to-products',\n          hidden: !fromProducts,\n          component: BackToProducts\n        },\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'portfolio-toolbar-title',\n          noData: meta.noData,\n          title,\n          description,\n          fields: [\n            {\n              component: toolbarComponentTypes.TOOLBAR,\n              key: 'portfolio-actions',\n              noWrap: true,\n              fields: [\n                createLinkButton({\n                  pathname: sharePortfolioRoute,\n                  preserveSearch: true,\n                  variant: 'secondary',\n                  title: 'Share',\n                  isDisabled: copyInProgress,\n                  key: 'portfolio-share-button',\n                  id: 'portfolio-share-button',\n                  hidden: !share && !unshare\n                }),\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'portfolio-actions-dropdown-item',\n                  fields: [\n                    {\n                      component: PortfolioActionsToolbar,\n                      editPortfolioRoute,\n                      workflowPortfolioRoute,\n                      removePortfolioRoute,\n                      copyPortfolio,\n                      copyInProgress,\n                      userCapabilities,\n                      key: 'portfolio-actions-dropdown'\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'portfolio-items-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'portfolio-items-actions',\n                  fields: [\n                    {\n                      groupName: 'filter-portfolio-items',\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      isClearable: true,\n                      key: 'portfolio-items-filter',\n                      searchValue,\n                      onFilterChange,\n                      placeholder\n                    },\n                    {\n                      hidden: meta.count === 0 || !userCapabilities.update,\n                      groupName: 'add-portfolio-items',\n                      key: 'portfolio-items-add-group',\n                      ...createLinkButton({\n                        preserveSearch: true,\n                        pathname: addProductsRoute,\n                        isDisabled: isLoading || copyInProgress,\n                        variant: 'primary',\n                        title: 'Add',\n                        id: 'add-products-button',\n                        key: 'add-products-button'\n                      })\n                    },\n                    {\n                      component: toolbarComponentTypes.TOOLBAR_ITEM,\n                      key: 'remove-products-item',\n                      hidden: meta.count === 0 || !userCapabilities.update,\n                      fields: [\n                        {\n                          component: toolbarComponentTypes.BUTTON,\n                          groupName: 'remove-portfolio-items',\n                          variant: 'link',\n                          title: 'Remove',\n                          key: 'remove-products-button',\n                          id: 'remove-products-button',\n                          isDisabled: !itemsSelected,\n                          onClick: removeProducts\n                        }\n                      ]\n                    }\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            key: 'portfolio-items-pagination',\n                            meta,\n                            apiRequest: fetchPortfolioItemsWithPortfolio,\n                            apiProps: portfolioId,\n                            isCompact: true\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, WrenchIcon } from '@patternfly/react-icons';\n\nimport ContentGalleryEmptyState, {\n  EmptyStatePrimaryAction\n} from '../../presentational-components/shared/content-gallery-empty-state';\nimport { Button } from '@patternfly/react-core';\nimport filteringMessages from '../../messages/filtering.messages';\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst PortfolioEmptyState = ({\n  url,\n  handleFilterChange,\n  meta,\n  userCapabilities: { update }\n}) => {\n  const formatMessage = useFormatMessage();\n  const NoDataAction = () => (\n    <EmptyStatePrimaryAction\n      url={url}\n      label={formatMessage(portfolioMessages.addProducts)}\n      id=\"add-products-to-portfolio\"\n      hasPermission={update}\n    />\n  );\n\n  const FilterAction = () => (\n    <Button\n      id=\"clear-portfolio-filter\"\n      variant=\"link\"\n      onClick={() => handleFilterChange('')}\n    >\n      {formatMessage(filteringMessages.clearFilters)}\n    </Button>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? NoDataAction : FilterAction,\n    title: meta.noData\n      ? formatMessage(filteringMessages.noProducts)\n      : formatMessage(filteringMessages.noResults),\n    description: meta.noData\n      ? formatMessage(portfolioMessages.emptyNoProducts)\n      : formatMessage(filteringMessages.noResultsDescription),\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n  return <ContentGalleryEmptyState {...emptyStateProps} />;\n};\n\nPortfolioEmptyState.propTypes = {\n  url: PropTypes.string.isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n  meta: PropTypes.shape({\n    noData: PropTypes.bool\n  }).isRequired,\n  userCapabilities: PropTypes.shape({\n    update: PropTypes.bool\n  }).isRequired\n};\n\nexport default PortfolioEmptyState;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createPortfolioToolbarSchema from '../../toolbar/schemas/portfolio-toolbar.schema';\nimport PortfolioEmptyState from './portfolio-empty-state';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport PortfolioItem from './portfolio-item';\nimport { fetchPortfolioItemsWithPortfolio } from '../../redux/actions/portfolio-actions';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useQuery from '../../utilities/use-query';\nimport { PORTFOLIO_ROUTE } from '../../constants/routes';\nimport filteringMessages from '../../messages/filtering.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst PortfolioItems = ({\n  routes,\n  handleFilterChange,\n  removeProducts,\n  copyPortfolio,\n  stateDispatch,\n  fromProducts,\n  state: {\n    removeInProgress,\n    isFetching,\n    isFiltering,\n    copyInProgress,\n    selectedItems,\n    filterValue\n  }\n}) => {\n  const formatMessage = useFormatMessage();\n  const { data, meta, name, description, userCapabilities } = useSelector(\n    ({\n      portfolioReducer: {\n        portfolioItems: { data, meta },\n        selectedPortfolio: {\n          name,\n          description,\n          metadata: { user_capabilities }\n        }\n      }\n    }) => ({\n      data,\n      meta,\n      name,\n      description,\n      userCapabilities: user_capabilities\n    })\n  );\n  const { url } = useRouteMatch(PORTFOLIO_ROUTE);\n  const [{ portfolio: id }] = useQuery(['portfolio']);\n  const dispatch = useDispatch();\n\n  const items = data.map((item) => (\n    <PortfolioItem\n      key={item.id}\n      {...item}\n      pathname={`${url}/portfolio-item`}\n      searchParams={{\n        source: item.service_offering_source_ref,\n        'portfolio-item': item.id\n      }}\n      preserveSearch\n      isSelectable={userCapabilities.update}\n      onSelect={(selectedItem) =>\n        stateDispatch({\n          type: 'selectItem',\n          payload: { selectedItem, product: item }\n        })\n      }\n      isSelected={selectedItems.includes(item.id)}\n      removeInProgress={removeInProgress}\n    />\n  ));\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPortfolioToolbarSchema({\n          fromProducts,\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterChange,\n            placeholder: formatMessage(filteringMessages.filterByProduct)\n          },\n          title: name,\n          description,\n          ...routes,\n          copyPortfolio,\n          isLoading: isFetching || isFiltering,\n          copyInProgress,\n          removeProducts: () => removeProducts(selectedItems),\n          itemsSelected: selectedItems.length > 0,\n          meta,\n          fetchPortfolioItemsWithPortfolio: (...args) =>\n            dispatch(fetchPortfolioItemsWithPortfolio(...args)),\n          portfolioId: id,\n          userCapabilities\n        })}\n      />\n      <ContentGallery\n        items={items}\n        isLoading={isFetching || isFiltering}\n        renderEmptyState={() => (\n          <PortfolioEmptyState\n            handleFilterChange={handleFilterChange}\n            meta={meta}\n            userCapabilities={userCapabilities}\n            url={routes.addProductsRoute}\n          />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiProps={id}\n            apiRequest={(...args) =>\n              dispatch(fetchPortfolioItemsWithPortfolio(...args))\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nPortfolioItems.propTypes = {\n  routes: PropTypes.shape({\n    addProductsRoute: PropTypes.string.isRequired,\n    portfolioRoute: PropTypes.string.isRequired\n  }).isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n  removeProducts: PropTypes.func.isRequired,\n  copyPortfolio: PropTypes.func.isRequired,\n  stateDispatch: PropTypes.func.isRequired,\n  state: PropTypes.shape({\n    removeInProgress: PropTypes.bool,\n    isFetching: PropTypes.bool,\n    isFiltering: PropTypes.bool,\n    copyInProgress: PropTypes.bool,\n    selectedItems: PropTypes.arrayOf(PropTypes.string),\n    filterValue: PropTypes.string\n  }).isRequired,\n  fromProducts: PropTypes.bool\n};\n\nexport default PortfolioItems;\n"],"sourceRoot":""}