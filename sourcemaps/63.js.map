{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardHeader.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/wrench-icon.js","webpack:///./src/smart-components/portfolio/portfolio-item.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardFooter.js","webpack:///./src/toolbar/helpers.js","webpack:///./src/toolbar/schemas/portfolio-toolbar.schema.js","webpack:///./src/smart-components/portfolio/portfolio-empty-state.js","webpack:///./src/smart-components/portfolio/portfolio-items.js"],"names":["Object","defineProperty","exports","value","tslib_1","React","__importStar","react_styles_1","card_1","__importDefault","CardHeader","_a","children","className","props","__rest","createElement","assign","css","default","cardHeader","displayName","__esModule","WrenchIconConfig","name","height","width","svgPath","yOffset","xOffset","transform","WrenchIcon","createIcon","StyledLevel","styled","Level","PortfolioItem","isDisabled","removeInProgress","isSelected","src","CATALOG_API_BASE","id","sourceId","service_offering_source_ref","isSelectable","handleCheck","onSelect","isChecked","propTypes","PropTypes","string","platformId","bool","func","orderUrl","portfolio_id","metadata","shape","user_capabilities","destroy","isRequired","CardFooter","component","Component","cardFooter","createLinkButton","pathname","preserveSearch","item","toolbarComponentTypes","TOOLBAR_ITEM","key","fields","LINK","BUTTON","PortfolioActionsToolbar","editPortfolioRoute","workflowPortfolioRoute","removePortfolioRoute","copyInProgress","copyPortfolio","userCapabilities","copy","update","set_approval","useState","isOpen","setOpen","formatMessage","useFormatMessage","dropdownItems","push","DropdownItem","aria-label","role","onClick","window","insights","chrome","isBeta","orderProcessAction","orderProcessesMessages","setOrderProcess","NESTED_EDIT_ORDER_PROCESS_ROUTE","length","Dropdown","position","DropdownPosition","right","toggle","KebabToggle","onToggle","isPlain","createPortfolioToolbarSchema","title","addProductsRoute","sharePortfolioRoute","isLoading","removeProducts","itemsSelected","meta","fetchPortfolioItemsWithPortfolio","portfolioId","description","fromProducts","filterProps","searchValue","onFilterChange","placeholder","share","unshare","TOP_TOOLBAR","breadcrumbs","hidden","BackToProducts","TOP_TOOLBAR_TITLE","noData","TOOLBAR","noWrap","variant","LEVEL","groupName","FILTER_TOOLBAR_ITEM","isClearable","count","LEVEL_ITEM","AsyncPagination","apiRequest","apiProps","isCompact","PortfolioEmptyState","url","handleFilterChange","emptyStateProps","PrimaryAction","label","portfolioMessages","addProducts","hasPermission","Button","filteringMessages","clearFilters","noProducts","noResults","emptyNoProducts","noResultsDescription","Icon","SearchIcon","PortfolioItems","routes","stateDispatch","state","isFetching","isFiltering","selectedItems","filterValue","useSelector","portfolioReducer","portfolioItems","data","selectedPortfolio","useRouteMatch","PORTFOLIO_ROUTE","useQuery","portfolio","dispatch","useDispatch","items","map","searchParams","source","selectedItem","type","payload","product","includes","schema","filterByProduct","renderEmptyState","dropDirection","portfolioRoute","arrayOf"],"mappings":"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","file":"js/63.640183bb18939f45bd57.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nexports.CardHeader = (_a) => {\n    var { children = null, className = '' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: react_styles_1.css(card_1.default.cardHeader, className) }, props), children));\n};\nexports.CardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","\"use strict\"\nexports.__esModule = true;\nexports.WrenchIconConfig = {\n  name: 'WrenchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.WrenchIcon = require('../createIcon').createIcon(exports.WrenchIconConfig);\nexports[\"default\"] = exports.WrenchIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level } from '@patternfly/react-core';\n\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport CardCheckbox from '../../presentational-components/shared/card-checkbox';\nimport ServiceOfferingCardBody from '../../presentational-components/shared/service-offering-body';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../../presentational-components/styled-components/styled-gallery';\nimport styled from 'styled-components';\n\nconst StyledLevel = styled(Level)`\n  flex: 1;\n`;\n\nconst PortfolioItem = (props) => (\n  <StyledGalleryItem isDisabled={props.removeInProgress && props.isSelected}>\n    <StyledCard>\n      <CardHeader>\n        <StyledLevel>\n          <CardIcon\n            src={`${CATALOG_API_BASE}/portfolio_items/${props.id}/icon`}\n            sourceId={props.service_offering_source_ref}\n          />\n          {props.isSelectable && (\n            <CardCheckbox\n              handleCheck={() => props.onSelect(props.id)}\n              isChecked={props.isSelected}\n              id={props.id}\n            />\n          )}\n        </StyledLevel>\n      </CardHeader>\n      <ServiceOfferingCardBody {...props} />\n      <CardFooter></CardFooter>\n    </StyledCard>\n  </StyledGalleryItem>\n);\n\nPortfolioItem.propTypes = {\n  id: PropTypes.string,\n  platformId: PropTypes.string,\n  service_offering_source_ref: PropTypes.string,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  orderUrl: PropTypes.string,\n  removeInProgress: PropTypes.bool,\n  portfolio_id: PropTypes.string,\n  metadata: PropTypes.shape({\n    user_capabilities: PropTypes.shape({ destroy: PropTypes.bool }).isRequired\n  }).isRequired\n};\n\nexport default PortfolioItem;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nexports.CardFooter = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: react_styles_1.css(card_1.default.cardFooter, className) }, props), children));\n};\nexports.CardFooter.displayName = 'CardFooter';\n//# sourceMappingURL=CardFooter.js.map","import { toolbarComponentTypes } from './toolbar-mapper';\n\nexport const createLinkButton = ({\n  pathname,\n  preserveSearch,\n  id,\n  ...item\n}) => ({\n  component: toolbarComponentTypes.TOOLBAR_ITEM,\n  key: `${item.key}/button-link`,\n  fields: [\n    {\n      component: toolbarComponentTypes.LINK,\n      pathname,\n      preserveSearch,\n      key: `${item.key}/button-link`,\n      isDisabled: item.isDisabled,\n      id,\n      fields: [\n        {\n          component: toolbarComponentTypes.BUTTON,\n          ...item\n        }\n      ]\n    }\n  ]\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  DropdownItem\n} from '@patternfly/react-core';\n\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport { createLinkButton } from '../helpers';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport BackToProducts from '../../presentational-components/portfolio/back-to-products';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\nimport { NESTED_EDIT_ORDER_PROCESS_ROUTE } from '../../constants/routes';\n\n/**\n * Cannot be anonymous function. Requires Component.diplayName to work with PF4 refs\n */\nconst PortfolioActionsToolbar = ({\n  editPortfolioRoute,\n  workflowPortfolioRoute,\n  removePortfolioRoute,\n  copyInProgress,\n  copyPortfolio,\n  userCapabilities: { copy, destroy, update, set_approval }\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const formatMessage = useFormatMessage();\n  const dropdownItems = [];\n\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Edit Portfolio\"\n        key=\"edit-portfolio\"\n        id=\"edit-portfolio\"\n        component={\n          <CatalogLink\n            id=\"edit-portfolio\"\n            preserveSearch\n            pathname={editPortfolioRoute}\n          >\n            Edit\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (copy) {\n    dropdownItems.push(\n      <DropdownItem\n        component=\"button\"\n        aria-label=\"Copy Portfolio\"\n        key=\"copy-portfolio\"\n        id=\"copy-portfolio\"\n        onClick={copyPortfolio}\n      >\n        Copy\n      </DropdownItem>\n    );\n  }\n\n  if (set_approval) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Set approval workflow\"\n        key=\"set-approval-portfolio-action\"\n        id=\"set-approval-portfolio-action\"\n        component={\n          <CatalogLink preserveSearch pathname={workflowPortfolioRoute}>\n            Set approval\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (window.insights.chrome.isBeta() && update) {\n    const orderProcessAction = formatMessage(\n      orderProcessesMessages.setOrderProcess\n    );\n    dropdownItems.push(\n      <DropdownItem\n        aria-label={orderProcessAction}\n        key=\"attach-order-processes\"\n        id=\"attach-order-processes\"\n        component={\n          <CatalogLink\n            preserveSearch\n            pathname={NESTED_EDIT_ORDER_PROCESS_ROUTE}\n          >\n            {orderProcessAction}\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (destroy) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Remove Portfolio\"\n        key=\"delete-portfolio\"\n        id=\"delete-portfolio\"\n        component={\n          <CatalogLink preserveSearch pathname={removePortfolioRoute}>\n            Delete\n          </CatalogLink>\n        }\n        role=\"link\"\n        className=\"pf-c-dropdown__menu-item\"\n      />\n    );\n  }\n\n  return dropdownItems.length === 0 ? null : (\n    <Dropdown\n      className=\"pf-u-ml-md\"\n      onSelect={() => setOpen(false)}\n      position={DropdownPosition.right}\n      toggle={\n        <KebabToggle\n          id=\"toggle-portfolio-actions\"\n          onToggle={setOpen}\n          isDisabled={copyInProgress}\n        />\n      }\n      isOpen={isOpen}\n      isPlain\n      dropdownItems={dropdownItems}\n    />\n  );\n};\n\nPortfolioActionsToolbar.propTypes = {\n  removePortfolioRoute: PropTypes.string.isRequired,\n  editPortfolioRoute: PropTypes.string.isRequired,\n  workflowPortfolioRoute: PropTypes.string.isRequired,\n  copyPortfolio: PropTypes.func.isRequired,\n  copyInProgress: PropTypes.bool,\n  userCapabilities: PropTypes.shape({\n    copy: PropTypes.bool,\n    update: PropTypes.bool,\n    destroy: PropTypes.bool,\n    set_approval: PropTypes.bool\n  }).isRequired\n};\n\nconst createPortfolioToolbarSchema = ({\n  title,\n  addProductsRoute,\n  copyPortfolio,\n  sharePortfolioRoute,\n  editPortfolioRoute,\n  workflowPortfolioRoute,\n  removePortfolioRoute,\n  copyInProgress,\n  isLoading,\n  removeProducts,\n  itemsSelected,\n  meta,\n  fetchPortfolioItemsWithPortfolio,\n  portfolioId,\n  description,\n  fromProducts,\n  filterProps: { searchValue, onFilterChange, placeholder },\n  userCapabilities: { share, unshare, ...userCapabilities }\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      breadcrumbs: !fromProducts,\n      key: 'portfolio-top-toolbar',\n      fields: [\n        {\n          key: 'back-to-products',\n          hidden: !fromProducts,\n          component: BackToProducts\n        },\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'portfolio-toolbar-title',\n          noData: meta.noData,\n          title,\n          description,\n          fields: [\n            {\n              component: toolbarComponentTypes.TOOLBAR,\n              key: 'portfolio-actions',\n              noWrap: true,\n              fields: [\n                createLinkButton({\n                  pathname: sharePortfolioRoute,\n                  preserveSearch: true,\n                  variant: 'secondary',\n                  title: 'Share',\n                  isDisabled: copyInProgress,\n                  key: 'portfolio-share-button',\n                  id: 'portfolio-share-button',\n                  hidden: !share && !unshare\n                }),\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'portfolio-actions-dropdown-item',\n                  fields: [\n                    {\n                      component: PortfolioActionsToolbar,\n                      editPortfolioRoute,\n                      workflowPortfolioRoute,\n                      removePortfolioRoute,\n                      copyPortfolio,\n                      copyInProgress,\n                      userCapabilities,\n                      key: 'portfolio-actions-dropdown'\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'portfolio-items-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'portfolio-items-actions',\n                  fields: [\n                    {\n                      groupName: 'filter-portfolio-items',\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      isClearable: true,\n                      key: 'portfolio-items-filter',\n                      searchValue,\n                      onFilterChange,\n                      placeholder\n                    },\n                    {\n                      hidden: meta.count === 0 || !userCapabilities.update,\n                      groupName: 'add-portfolio-items',\n                      key: 'portfolio-items-add-group',\n                      ...createLinkButton({\n                        preserveSearch: true,\n                        pathname: addProductsRoute,\n                        isDisabled: isLoading || copyInProgress,\n                        variant: 'primary',\n                        title: 'Add',\n                        id: 'add-products-button',\n                        key: 'add-products-button'\n                      })\n                    },\n                    {\n                      component: toolbarComponentTypes.TOOLBAR_ITEM,\n                      key: 'remove-products-item',\n                      hidden: meta.count === 0 || !userCapabilities.update,\n                      fields: [\n                        {\n                          component: toolbarComponentTypes.BUTTON,\n                          groupName: 'remove-portfolio-items',\n                          variant: 'link',\n                          title: 'Remove',\n                          key: 'remove-products-button',\n                          id: 'remove-products-button',\n                          isDisabled: !itemsSelected,\n                          onClick: removeProducts\n                        }\n                      ]\n                    }\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            key: 'portfolio-items-pagination',\n                            meta,\n                            apiRequest: fetchPortfolioItemsWithPortfolio,\n                            apiProps: portfolioId,\n                            isCompact: true\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, WrenchIcon } from '@patternfly/react-icons';\n\nimport ContentGalleryEmptyState, {\n  EmptyStatePrimaryAction\n} from '../../presentational-components/shared/content-gallery-empty-state';\nimport { Button } from '@patternfly/react-core';\nimport filteringMessages from '../../messages/filtering.messages';\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst PortfolioEmptyState = ({\n  url,\n  handleFilterChange,\n  meta,\n  userCapabilities: { update }\n}) => {\n  const formatMessage = useFormatMessage();\n  const NoDataAction = () => (\n    <EmptyStatePrimaryAction\n      url={url}\n      label={formatMessage(portfolioMessages.addProducts)}\n      id=\"add-products-to-portfolio\"\n      hasPermission={update}\n    />\n  );\n\n  const FilterAction = () => (\n    <Button\n      id=\"clear-portfolio-filter\"\n      variant=\"link\"\n      onClick={() => handleFilterChange('')}\n    >\n      {formatMessage(filteringMessages.clearFilters)}\n    </Button>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? NoDataAction : FilterAction,\n    title: meta.noData\n      ? formatMessage(filteringMessages.noProducts)\n      : formatMessage(filteringMessages.noResults),\n    description: meta.noData\n      ? formatMessage(portfolioMessages.emptyNoProducts)\n      : formatMessage(filteringMessages.noResultsDescription),\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n  return <ContentGalleryEmptyState {...emptyStateProps} />;\n};\n\nPortfolioEmptyState.propTypes = {\n  url: PropTypes.string.isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n  meta: PropTypes.shape({\n    noData: PropTypes.bool\n  }).isRequired,\n  userCapabilities: PropTypes.shape({\n    update: PropTypes.bool\n  }).isRequired\n};\n\nexport default PortfolioEmptyState;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createPortfolioToolbarSchema from '../../toolbar/schemas/portfolio-toolbar.schema';\nimport PortfolioEmptyState from './portfolio-empty-state';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport PortfolioItem from './portfolio-item';\nimport { fetchPortfolioItemsWithPortfolio } from '../../redux/actions/portfolio-actions';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useQuery from '../../utilities/use-query';\nimport { PORTFOLIO_ROUTE } from '../../constants/routes';\nimport filteringMessages from '../../messages/filtering.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst PortfolioItems = ({\n  routes,\n  handleFilterChange,\n  removeProducts,\n  copyPortfolio,\n  stateDispatch,\n  fromProducts,\n  state: {\n    removeInProgress,\n    isFetching,\n    isFiltering,\n    copyInProgress,\n    selectedItems,\n    filterValue\n  }\n}) => {\n  const formatMessage = useFormatMessage();\n  const { data, meta, name, description, userCapabilities } = useSelector(\n    ({\n      portfolioReducer: {\n        portfolioItems: { data, meta },\n        selectedPortfolio: {\n          name,\n          description,\n          metadata: { user_capabilities }\n        }\n      }\n    }) => ({\n      data,\n      meta,\n      name,\n      description,\n      userCapabilities: user_capabilities\n    })\n  );\n  const { url } = useRouteMatch(PORTFOLIO_ROUTE);\n  const [{ portfolio: id }] = useQuery(['portfolio']);\n  const dispatch = useDispatch();\n\n  const items = data.map((item) => (\n    <PortfolioItem\n      key={item.id}\n      {...item}\n      pathname={`${url}/portfolio-item`}\n      searchParams={{\n        source: item.service_offering_source_ref,\n        'portfolio-item': item.id\n      }}\n      preserveSearch\n      isSelectable={userCapabilities.update}\n      onSelect={(selectedItem) =>\n        stateDispatch({\n          type: 'selectItem',\n          payload: { selectedItem, product: item }\n        })\n      }\n      isSelected={selectedItems.includes(item.id)}\n      removeInProgress={removeInProgress}\n    />\n  ));\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPortfolioToolbarSchema({\n          fromProducts,\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterChange,\n            placeholder: formatMessage(filteringMessages.filterByProduct)\n          },\n          title: name,\n          description,\n          ...routes,\n          copyPortfolio,\n          isLoading: isFetching || isFiltering,\n          copyInProgress,\n          removeProducts: () => removeProducts(selectedItems),\n          itemsSelected: selectedItems.length > 0,\n          meta,\n          fetchPortfolioItemsWithPortfolio: (...args) =>\n            dispatch(fetchPortfolioItemsWithPortfolio(...args)),\n          portfolioId: id,\n          userCapabilities\n        })}\n      />\n      <ContentGallery\n        items={items}\n        isLoading={isFetching || isFiltering}\n        renderEmptyState={() => (\n          <PortfolioEmptyState\n            handleFilterChange={handleFilterChange}\n            meta={meta}\n            userCapabilities={userCapabilities}\n            url={routes.addProductsRoute}\n          />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiProps={id}\n            apiRequest={(...args) =>\n              dispatch(fetchPortfolioItemsWithPortfolio(...args))\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nPortfolioItems.propTypes = {\n  routes: PropTypes.shape({\n    addProductsRoute: PropTypes.string.isRequired,\n    portfolioRoute: PropTypes.string.isRequired\n  }).isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n  removeProducts: PropTypes.func.isRequired,\n  copyPortfolio: PropTypes.func.isRequired,\n  stateDispatch: PropTypes.func.isRequired,\n  state: PropTypes.shape({\n    removeInProgress: PropTypes.bool,\n    isFetching: PropTypes.bool,\n    isFiltering: PropTypes.bool,\n    copyInProgress: PropTypes.bool,\n    selectedItems: PropTypes.arrayOf(PropTypes.string),\n    filterValue: PropTypes.string\n  }).isRequired,\n  fromProducts: PropTypes.bool\n};\n\nexport default PortfolioItems;\n"],"sourceRoot":""}