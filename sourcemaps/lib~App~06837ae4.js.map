{"version":3,"sources":["webpack:///./src/redux/action-types/action-types-helper.ts","webpack:///./src/redux/action-types/approval-action-types.ts","webpack:///./src/utilities/async-form-validator.ts","webpack:///./src/messages/actions.messages.js","webpack:///./src/user-context.js","webpack:///./src/routing/uri-state-manager.ts","webpack:///./src/redux/actions/portfolio-actions.js","webpack:///./src/messages/labels.messages.ts","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/forms/form-fields/share-group-select.tsx","webpack:///./src/forms/form-fields/share-group-edit.tsx","webpack:///./src/messages/schemas.messages.js","webpack:///./src/utilities/translate-schema.js","webpack:///./src/forms/form-fields/copy-name-display.tsx","webpack:///./src/forms/form-fields/initial-chips.tsx","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/routing/use-initial-uri-hash.js","webpack:///./src/helpers/shared/user-login.ts","webpack:///./src/presentational-components/styled-components/toolbars.js","webpack:///./src/smart-components/error-pages/error-redirects.js","webpack:///./src/redux/actions/order-process-actions.js","webpack:///./src/presentational-components/shared/intl-rich-text-components.js","webpack:///./src/forms/set-object-tags.schema.ts","webpack:///./src/smart-components/common/tagging-modal.js","webpack:///./src/redux/action-types.ts","webpack:///./src/utilities/use-format-message.tsx","webpack:///./src/helpers/shared/pagination.ts","webpack:///./src/smart-components/order-process/set-order-process-modal.js","webpack:///./src/app-context.js","webpack:///./src/helpers/portfolio/portfolio-helper.ts","webpack:///./src/messages/order-processes.messages.ts","webpack:///./src/routing/catalog-history.ts","webpack:///./src/routing/catalog-route.js","webpack:///./src/messages/portfolio.messages.ts","webpack:///./src/helpers/order-process/order-process-helper.ts","webpack:///./src/utilities/constants.ts","webpack:///./src/redux/reducers/order-reducer.ts","webpack:///./src/redux/reducers/platform-reducer.ts","webpack:///./src/redux/reducers/order-process-reducer.ts","webpack:///./src/redux/reducers/portfolio-reducer.ts","webpack:///./src/redux/reducers/approval-reducer.ts","webpack:///./src/redux/reducers/rbac-reducer.ts","webpack:///./src/redux/reducers/share-reducer.ts","webpack:///./src/redux/reducers/open-api-reducer.ts","webpack:///./src/utilities/loading-state-middleware.ts","webpack:///./src/utilities/empty-data-middleware.ts","webpack:///./src/redux/reducers/breadcrumbs-reducer.ts","webpack:///./src/redux/reducers/i18n-reducer.ts","webpack:///./src/utilities/view-state-middleware.ts","webpack:///./src/utilities/unauthorized-middleware.ts","webpack:///./src/utilities/store.ts","webpack:///./src/smart-components/dialog-routes/portfolio-routes.js","webpack:///./src/smart-components/dialog-routes/platform-routes.js","webpack:///./src/smart-components/dialog-routes/index.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/constants/ui-constants.ts","webpack:///./src/global-styles.js","webpack:///./src/router.js","webpack:///./src/entry.js","webpack:///./src/utilities/use-query.ts","webpack:///./src/presentational-components/shared/loader-placeholders.js","webpack:///./src/messages/forms.messages.ts","webpack:///./src/presentational-components/styled-components/level.tsx","webpack:///./src/constants/routes.ts","webpack:///./src/helpers/shared/helpers.tsx","webpack:///./src/constants/nullable-attributes.ts"],"names":["prefix","ASYNC_ACTIONS","reduce","acc","curr","asyncFunction","debounceTime","options","onlyResolvesLast","actionMessages","defineMessages","require","share","id","defaultMessage","copy","setApproval","edit","delete","deleting","save","UserContext","createContext","decodeState","encodedState","JSON","parse","atob","decodeURIComponent","error","encodeState","state","stateKey","stateObject","window","location","hash","encodeURIComponent","btoa","stringify","console","warn","doFetchPortfolios","defaultSettings","filters","type","ActionTypes","meta","payload","PortfolioHelper","fetchPortfolios","dispatch","fetchPortfoliosWithState","storeState","fetchPortfolioItems","filter","limit","offset","fetchPortfolioItemsWithPortfolio","portfolioId","fetchSelectedPortfolio","addPortfolio","portfolioData","notification","notifications","fulfilled","addToPortfolio","items","variant","title","description","updatePortfolio","getState","then","ADD_NOTIFICATION","dismissable","undoRemovePortfolio","restoreKey","viewState","CLEAR_NOTIFICATIONS","portfolio","name","removePortfolio","restore_key","portfolioMessages","removePortfolioNotification","values","a","chunks","href","onClick","event","preventDefault","portfolioReducer","portfolios","data","length","removeProductsFromPortfolio","portfolioItems","portfolioName","firstSelectedProduct","selectedPortfolio","removeItemsNotification","count","productName","b","restoreData","err","undoRemoveProductsFromPortfolio","copyPortfolio","copyPortfolioItem","portfolioItemId","copyObject","newPortfolio","resetSelectedPortfolio","updatePortfolioItem","item","getPortfolioItemDetail","params","portfolioItem","source","setOrFetchPortfolio","existingPorfolio","find","labelMessages","shared","platform","loading","cancel","confirm","create","owner","sortBy","updated","created","product","status","createOptions","inputValue","isRequired","optionsMessages","selectOptions","undefined","value","label","choose","none","Select","input","isDisabled","isReadOnly","FieldProvider","multi","loadOptions","rest","formatMessage","useFormatMessage","useRef","defineMessage","useState","initialFetch","setInitialFetch","formOptions","useFormApi","loadOptionsOverride","initial","lookupArguments","Array","isArray","map","option","filterValue","initialOptions","hideSelectedOptions","menuIsPortal","onChange","change","args","isMulti","current","closeMenuOnSelect","propTypes","PropTypes","object","arrayOf","shape","any","string","bool","isSearchable","func","defaultProps","Pf4SelectWrapper","props","useFieldApi","componentType","helperText","hideLabel","dataType","initialKey","initialValue","showError","touched","FormGroup","fieldId","validated","helperTextInvalid","TextContent","Text","component","TextVariants","small","initialState","resetGroup","group","permission","shareReducer","NewGroupSelect","tooltipContent","permissions","addGroup","currentGroups","shareErrorMissingPermission","shareErrorMissingGroup","shareTooltip","shareErrorMissingData","hasError","group_uuid","Level","grow","Grid","hasGutter","className","GridItem","span","key","isClearable","simpleValue","placeholder","groupsPlaceholder","shareDuplicate","permissionsPlaceholder","alignSelf","Tooltip","content","Button","groupName","fields","push","StyledText","SharedGroup","remove","index","permissionVerbs","h4","noShares","shareGroupsAccess","schemasMessages","translateString","translateField","field","translateKeys","fieldCopy","forEach","Object","prototype","hasOwnProperty","call","translateSchema","schema","schemaCopy","getName","fieldSpy","setName","ChipGroup","Chip","handleRemove","catalogComponentMapper","componentTypes","TEXT_FIELD","TextField","TEXTAREA","Textarea","PLAIN_TEXT","PlainText","SELECT","CHECKBOX","Checkbox","RADIO","Radio","SWITCH","Switch","SUB_FORM","SubForm","ShareGroupSelect","ShareGroupEdit","CopyNameDisplay","InitialChips","catalogValidatorMapper","validatorMapper","validatorTypes","EXACT_LENGTH","MAX_LENGTH","MIN_ITEMS","MIN_LENGTH","PATTERN","REQUIRED","URL","catalogValidatorAlias","FormRenderer","formContainer","templateProps","componentMapper","FormTemplate","oneOf","memo","useInitialUriHash","substring","axiosInstance","paramsSerializer","interceptors","request","use","config","insights","chrome","auth","getUser","response","requestId","headers","redirect","pathname","message","url","orderApi","orderItemApi","portfolioApi","portfolioItemApi","workflowApi","servicePlansApi","orderProcessApi","getPortfolioApi","getPortfolioItemApi","getOrderApi","getOrderItemApi","rbacGroupApi","getRbacGroupApi","getWorkflowApi","getAxiosInstance","getServicePlansApi","getOrderProcessApi","grapqlInstance","getGraphqlInstance","errors","errorType","StyledToolbar","styled","noWrap","StyledToolbarGroup","ToolbarGroup","TopToolbarWrapper","div","TopToolbarTitleContainer","UnauthorizedRedirect","useLocation","to","from","fetchOrderProcesses","pagination","orderProcessReducer","orderProcesses","finalPagination","OrderProcessHelper","fetchOrderProcess","apiProps","addOrderProcess","processData","intl","orderProcessesMessages","addProcessSuccessTitle","addProcessSuccessDescription","updateOrderProcess","processId","updateProcessSuccessTitle","sortOrderProcesses","setOrderProcess","removeOrderProcess","orderProcess","removeProcessSuccessTitle","removeProcessSuccessDescription","removeOrderProcesses","removeProcessesSuccessTitle","removeProcessesSuccessDescription","Bold","resolveNewProcessProps","_fieldApi","initialProcessess","existingTagsMessage","loadTags","resolveProps","TaggingModal","onSubmit","getInitialTags","onClose","subTitle","setData","useEffect","Modal","isOpen","Stack","StackItem","subscription","initialValues","createSchema","formData","unlinkArray","process","linkDiff","difference","unLinkDiff","toLinkTags","toUnlinkTags","onCancel","clearedValue","submitLabel","disableSubmit","node","FETCH_SERVICE_PLANS","FETCH_SERVICE_PLAN_PARAMETERS","SUBMIT_SERVICE_ORDER","SET_SELECTED_PLAN","LIST_ORDERS","CANCEL_ORDER","SET_ORDERS","FETCH_ORDERS","FETCH_PLATFORM","FETCH_PLATFORMS","FETCH_PLATFORM_ITEMS","FETCH_PLATFORM_ITEM","FETCH_MULTIPLE_PLATFORM_ITEMS","FILTER_PLATFORM_ITEMS","FETCH_PLATFORM_INVENTORIES","SET_INVENTORIES_LOADING_STATE","FETCH_PORTFOLIOS","FETCH_PORTFOLIO_ITEM","FETCH_PORTFOLIO_ITEMS","FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO","FETCH_PORTFOLIO","FILTER_PORTFOLIO_ITEMS","ADD_PORTFOLIO","ADD_TO_PORTFOLIO","UPDATE_PORTFOLIO","REMOVE_PORTFOLIO","REMOVE_PORTFOLIO_ITEMS","RESTORE_PORTFOLIO_ITEMS","RESET_SELECTED_PORTFOLIO","ADD_TEMPORARY_PORTFOLIO","UPDATE_TEMPORARY_PORTFOLIO","DELETE_TEMPORARY_PORTFOLIO","RESTORE_PORTFOLIO_PREV_STATE","SET_PORTFOLIO_ITEMS","UPDATE_TEMPORARY_PORTFOLIO_ITEM","RESTORE_PORTFOLIO_ITEM_PREV_STATE","UPDATE_PORTFOLIO_ITEM","FETCH_RBAC_GROUPS","SHARE_PORTFOLIO","UNSHARE_PORTFOLIO","QUERY_PORTFOLIO","FETCH_REQUESTS","FETCH_ORDER_ITEMS","SET_LOADING_STATE","SET_OPENAPI_SCHEMA","SET_ORDER_DETAIL","FETCH_APPROVAL_REQUESTS","SELECT_PORTFOLIO_ITEM","FETCH_SERVICE_OFFERING","SET_SOURCETYPE_ICONS","INITIALIZE_BREADCRUMBS","INITIALIZE_I18N","FETCH_ORDER_PROCESSES","ADD_ORDER_PROCESS","SORT_ORDER_PROCESSES","SET_ORDER_PROCESS","FETCH_ORDER_PROCESS","REMOVE_ORDER_PROCESS","REMOVE_ORDER_PROCESSES","SET_FILTER_ORDER_PROCESSES","UPDATE_ORDER_PROCESS","internalValues","entries","getCurrentPage","Math","floor","getNewPage","page","SetOrderProcessModal","pushParam","objectType","querySelector","useDispatch","useHistory","useQuery","query","getLinkedOrderProcesses","toLink","toUnlink","object_type","app_name","APP_NAME","object_id","addNotification","setOrderProcessNotificationTitle","setOrderProcessNotificationDescription","linked","unlinked","listOrderProcesses","currentOrderProcesses","setOrderProcessSubtitle","strong","search","AppContext","listPortfolios","sortDirection","filterQuery","get","listPortfolioItems","portfolioReference","portfolio_id","keys","join","portfolioItemIndex","getPortfolio","showPortfolio","getPortfolioItemsWithPortfolio","createPortfolio","Promise","all","createPortfolioItem","service_offering_ref","store","destroyPortfolio","removePortfolioItems","portfolioItemIds","itemId","destroyPortfolioItem","fetchPortfolioByName","restorePortfolioItems","unDeletePortfolioItem","postCopyPortfolio","postCopyPortfolioItem","uploadPortfolioItemIcon","file","iconId","FormData","append","patch","post","accept","_boundary","catch","notFound","getPortfolioFromState","undeletePortfolio","noOrderProcessesDescription","noOrderProcessesFilterDescription","orderProcessesFilter","noOrderProcesses","orderProcessName","enterOrderProcessName","deleteOrderProcess","removeProcessTitle","removeProcessAriaLabel","removeProcessDescription","createOrderProcess","pathName","split","shift","basename","catalogHistory","release","ReidrectOnAccess","CatalogRoute","userCapabilities","requiredCapabilities","userPermissions","useContext","some","capability","hasCapability","hasPermission","oneOfType","portfoliosTitle","modalCreateTitle","modalEditTitle","addProducts","emptyNoProducts","portfoliosPlaceholder","portfoliosNoData","portfoliosNoDataDescription","portfolioRemoveDescription","portfolioRemoveTitle","portfolioSharePermissions","portfolioShareGroups","portfolioShareTitle","portfolioShareApply","portfolioShareDescription","addProducstPlatformTitle","addProducstPlatformDescription","addProducstFilterTitle","copyItemTitle","portfolioItemSurvey","portfolioItemOrder","portfolioItemIconTitle","portfolioItemOverview","portfolioItemSupport","portfolioItemDocumentation","portfolioItemDocLink","restoreSurvey","surveyTitle","sourceUnavaiable","objectUnavaiable","backToProducts","editProduct","shareSuccessTitle","shareSuccessTitleOnlySharing","shareSuccessTitleOnlyUnsharing","shareSuccessTitleOnlyChaningPermissions","shareSuccessDescriptionOnlySharing","shareSuccessDescriptionOnlyUnsharing","shareSuccessDescriptionOnlyChaningPermissions","shareSuccessTwoGroup","shareSuccessMultipleGroups","addSuccessTitle","addSuccessDescription","loadProductOptions","fetchOrderProcessByName","showOrderProcess","setOrderProcesses","toTag","toUntag","resourceType","promises","linkTagToOrderProcess","unlinkTagFromOrderProcess","objectId","destroyOrderProcess","selectedProcesses","before_portfolio_item_id","after_portfolio_item_id","op","promiseB","addOrderProcessBeforeItem","portfolio_item_id","promiseA","addOrderProcessAfterItem","CATALOG_API_BASE","SOURCES_API_BASE","APPROVAL_API_BASE","TOPOLOGICAL_INVENTORY_API_BASE","RBAC_API_BASE","permissionValues","permissionOptions","PORTFOLIO_RESOURCE_TYPE","PORTFOLIO_ITEM_RESOURCE_TYPE","INVENTORY_RESOURCE_TYPE","DEFAULT_MAX_LENGTH","Portfolio","PortfolioItem","ServiceInventory","BEFORE_TYPE","AFTER_TYPE","orderInitialState","servicePlans","selectedPlan","isLoading","requests","orderDetail","order","orders","setLoadingState","setOrders","setOrderDetail","planParameters","orderItems","approvalRequest","platformInitialState","platformIconMapping","sourceTypeIcons","isPlatformDataLoading","selectedPlatform","platforms","platformItems","platformInventories","platformItem","serviceOffering","service","setInventoriesDataLoadingState","isInventoriesDataLoading","source_type_id","platformId","orderProcessInitialState","property","direction","selectedOrderProcesses","portfoliosInitialState","metadata","user_capabilities","statistics","setPortfolioItem","selectPortfolio","restorePrevState","prevState","created_at","updated_at","Date","toString","approvalInitialState","isFetching","isResolving","workflows","resolvedWorkflows","FETCH_WORKFLOWS_PENDING","FETCH_WORKFLOWS_FULFILLED","RESOLVE_WORKFLOWS_PENDING","RESOLVE_WORKFLOWS_FULFILLED","rbacInitialState","rbacGroups","shareInfoInitialState","shareInfo","openApiInitialState","action","match","nextAction","noFilter","every","noData","initialBreadcrumbsState","fragments","i18nInitialState","replace","setTimeout","prodMiddlewares","errorTitleKey","errorDescriptionKey","baseMiddlewares","registerReducers","registry","register","orderReducer","platformReducer","approvalReducer","rbacReducer","openApiReducer","breadcrumbsReducer","i18nReducer","CopyPortfolioItemModal","lazy","OrderModal","EditApprovalWorkflow","SharePortfolioModal","RemovePortfolioModal","AddPortfolioModal","PortfolioRoutes","useSelector","portfolioItemUserCapabilities","shallowEqual","portfolioUserCapabilities","itemName","path","ADD_PORTFOLIO_ROUTE","EDIT_PORTFOLIO_ROUTE","removeQuery","closeTarget","PORTFOLIOS_ROUTE","exact","NESTED_EDIT_PORTFOLIO_ROUTE","PORTFOLIO_ROUTE","REMOVE_PORTFOLIO_ROUTE","NESTED_REMOVE_PORTFOLIO_ROUTE","SHARE_PORTFOLIO_ROUTE","closeUrl","removeSearch","NESTED_SHARE_PORTFOLIO_ROUTE","WORKFLOW_PORTFOLIO_ROUTE","objectName","keepHash","NESTED_WORKFLOW_PORTFOLIO_ROUTE","PORTFOLIO_ITEM_ROUTE","EDIT_ORDER_PROCESS_ROUTE","NESTED_EDIT_ORDER_PROCESS_ROUTE","PlatformRoutes","obj","DialogRoutes","fallback","CommonApiError","Products","Platforms","Platform","Portfolios","Orders","OrderDetail","OrderProcesses","paths","products","order_processes","ORDER_ROUTE","errorPaths","Routes","render","p","smoothscroll","polyfill","ignoreRedirect","App","unregister","setAuth","setUserPermissions","identity","userIdentity","setUserIdentity","openApiSchema","setOpenApiSchema","i18l","useIntl","history","init","icon_url","user","getUserPermissions","identifyApp","navigation","on","domEvent","navId","Provider","style","minHeight","sm","GlobalStyle","createGlobalStyle","Router","ReactDOM","isProd","getStore","locale","document","getElementById","navigator","serviceWorker","includes","log","requiredParams","URLSearchParams","wave","keyframes","Skeleton","Component","SkeletonContainer","width","height","secondaryColor","CardLoader","_item","number","AppPlaceholder","ToolbarTitlePlaceholder","ProducLoaderColumn","ProductLoaderPlaceholder","_","IconPlaceholder","cx","cy","r","fill","FormItemLoader","ShareLoader","formsMessages","inviteGroup","groupsAccess","WorkflowLoader","ListLoader","aria-label","aria-labelledby","dataListCells","OrderDetailToolbarPlaceholder","PlatformToolbarPlaceholder","orderProcessTitle","nameTaken","currentBeforeProvision","currentAfterProvision","beforeProvision","afterProvision","productsPlaceholder","StyledLevelItem","ADD_PRODUCTS_ROUTE","EDIT_PORTFOLIO_WORKFLOW_ROUTE","EDIT_SURVEY_ROUTE","ORDERS_ROUTE","PLATFORM_INVENTORIES_ROUTE","PLATFORM_ROUTE","PLATFORM_SERVICE_OFFERINGS_ROUTE","PLATFORM_TEMPLATES_ROUTE","PLATFORMS_ROUTE","PORTFOLIO_ITEM_ROUTE_EDIT","PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE","ORDER_PROCESSES_ROUTE","ADD_ORDER_PROCESS_ROUTE","REMOVE_ORDER_PROCESS_ROUTE","UPDATE_ORDER_PROCESS_ROUTE","scrollToTop","scrollTo","behavior","top","left","nullableMapper","sanitizeValues","entityType","entity","schemas","components","permittedValues","TimeAgo","date","DateFormat"],"mappings":"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","file":"js/lib~App~06837ae4.09f9c20d38be70e2a594.js","sourcesContent":["import { StringObject } from '../../types/common-types';\n\nexport const createAsyncActionTypes = (\n  actionTypes: string[],\n  prefix: string\n): StringObject =>\n  actionTypes\n    .reduce<string[]>(\n      (acc, curr) => [\n        ...acc,\n        ...[curr, `${curr}_PENDING`, `${curr}_FULFILLED`, `${curr}_REJECTED`]\n      ],\n      []\n    )\n    .reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: `${prefix}${curr}`\n      }),\n      {}\n    );\n","import { createAsyncActionTypes } from './action-types-helper';\n\nconst APPROVAL_PREFIX = '@@catalog/approval/';\n\nconst asyncActionTypes = [\n  'FETCH_WORKFLOWS',\n  'UPDATE_WORKFLOWS',\n  'RESOLVE_WORKFLOWS'\n];\n\nexport const ASYNC_ACTIONS = {\n  ...createAsyncActionTypes(asyncActionTypes, APPROVAL_PREFIX)\n};\n","import awesomeDebouncePromise, {\n  AwesomeDebounceOptions\n} from 'awesome-debounce-promise';\n\nconst asyncFormValidator = <T = any>(\n  asyncFunction: (...args: any[]) => T,\n  debounceTime = 250,\n  options: Partial<AwesomeDebounceOptions> = { onlyResolvesLast: false }\n): any => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n\nexport default asyncFormValidator;\n","const { defineMessages } = require('react-intl');\n\nconst actionMessages = defineMessages({\n  share: {\n    id: 'common.actions.share',\n    defaultMessage: 'Share'\n  },\n  copy: {\n    id: 'common.actions.copy',\n    defaultMessage: 'Copy'\n  },\n  setApproval: {\n    id: 'common.actions.setApproval',\n    defaultMessage: 'Set approval'\n  },\n  edit: {\n    id: 'common.actions.edit',\n    defaultMessage: 'Edit'\n  },\n  delete: {\n    id: 'common.actions.delete',\n    defaultMessage: 'Delete'\n  },\n  deleting: {\n    id: 'common.actions.deleting',\n    defaultMessage: 'Deleting'\n  },\n  save: {\n    id: 'common.actions.save',\n    defaultMessage: 'Save'\n  }\n});\n\nexport default actionMessages;\n","import { createContext } from 'react';\n\nconst UserContext = createContext({});\n\nexport default UserContext;\n","import { AnyObject } from '../types/common-types';\n\nexport const decodeState = (encodedState: string): AnyObject | undefined => {\n  try {\n    return JSON.parse(atob(decodeURIComponent(encodedState)));\n  } catch (error) {\n    return undefined;\n  }\n};\n\nexport const encodeState = (state: AnyObject, stateKey?: string): string => {\n  const stateObject = stateKey\n    ? {\n        ...decodeState(window.location.hash),\n        [stateKey]: state\n      }\n    : state;\n  try {\n    return encodeURIComponent(btoa(JSON.stringify(stateObject)));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'View state is not a valid JSON, state has will not be generated. View state: ',\n      state\n    );\n    return '';\n  }\n};\n","import React from 'react';\nimport {\n  ADD_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications/cjs/actionTypes';\n\nimport * as ActionTypes from '../action-types';\nimport * as PortfolioHelper from '../../helpers/portfolio/portfolio-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport const doFetchPortfolios = ({\n  filters,\n  ...options\n} = defaultSettings) => ({\n  type: ActionTypes.FETCH_PORTFOLIOS,\n  meta: { ...defaultSettings, filters, ...options },\n  payload: PortfolioHelper.listPortfolios(filters, options)\n});\n\nexport const fetchPortfolios = (options) => (dispatch) =>\n  dispatch(doFetchPortfolios(options));\n\nexport const fetchPortfoliosWithState = (\n  filters,\n  options = defaultSettings\n) => (dispatch) =>\n  dispatch(\n    doFetchPortfolios({\n      ...options,\n      filters,\n      storeState: true,\n      stateKey: 'portfolio'\n    })\n  );\n\nexport const fetchPortfolioItems = (\n  filter = '',\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS,\n  meta: { filter, storeState: true, stateKey: 'products' },\n  payload: PortfolioHelper.listPortfolioItems(\n    options.limit,\n    options.offset,\n    filter\n  )\n});\n\nexport const fetchPortfolioItemsWithPortfolio = (\n  portfolioId,\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolioItemsWithPortfolio(portfolioId, options),\n  meta: {\n    ...options,\n    storeState: true,\n    stateKey: 'portfolioItems'\n  }\n});\n\nexport const fetchSelectedPortfolio = (id) => ({\n  type: ActionTypes.FETCH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolio(id)\n});\n\nexport const searchPortfolioItems = (value) => ({\n  type: ActionTypes.FILTER_PORTFOLIO_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const addPortfolio = (portfolioData, notification) => ({\n  type: ActionTypes.ADD_PORTFOLIO,\n  payload: PortfolioHelper.addPortfolio(portfolioData),\n  meta: {\n    notifications: {\n      fulfilled: notification\n    }\n  }\n});\n\nexport const addToPortfolio = (portfolioId, items) => ({\n  type: ActionTypes.ADD_TO_PORTFOLIO,\n  payload: PortfolioHelper.addToPortfolio(portfolioId, items),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding products',\n        description: 'Products were successfully added to portfolio.'\n      }\n    }\n  }\n});\n\nexport const updatePortfolio = (portfolioData, options) => (\n  dispatch,\n  getState\n) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO,\n    payload: portfolioData\n  });\n\n  return PortfolioHelper.updatePortfolio(portfolioData, { getState })\n    .then(() => dispatch(doFetchPortfolios(options)))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          dismissable: true,\n          variant: 'success',\n          title: 'Success updating portfolio',\n          description: 'The portfolio was updated successfully.'\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const undoRemovePortfolio = (portfolioId, restoreKey, viewState) => (\n  dispatch\n) => {\n  dispatch({ type: CLEAR_NOTIFICATIONS });\n  return PortfolioHelper.undeletePortfolio(portfolioId, restoreKey).then(\n    (portfolio) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: `Portfolio ${portfolio.name} has been restored`\n        }\n      });\n      return dispatch(fetchPortfolios(viewState));\n    }\n  );\n};\n\nexport const removePortfolio = (portfolioId, viewState = {}) => (\n  dispatch,\n  getState\n) => {\n  dispatch({\n    type: ActionTypes.DELETE_TEMPORARY_PORTFOLIO,\n    payload: portfolioId\n  });\n  return dispatch({\n    type: ActionTypes.REMOVE_PORTFOLIO,\n    payload: PortfolioHelper.removePortfolio(portfolioId)\n      .then(({ restore_key }) => {\n        dispatch({\n          type: ADD_NOTIFICATION,\n          payload: {\n            variant: 'success',\n            title: 'Success removing portfolio',\n            dismissable: true,\n            description: (\n              <FormattedMessage\n                {...portfolioMessages.removePortfolioNotification}\n                values={{\n                  // eslint-disable-next-line react/display-name\n                  a: (chunks) => (\n                    <a\n                      href=\"#\"\n                      id={`undo-delete-portfolio-${portfolioId}`}\n                      onClick={(event) => {\n                        event.preventDefault();\n                        dispatch(\n                          undoRemovePortfolio(\n                            portfolioId,\n                            restore_key,\n                            viewState\n                          )\n                        );\n                      }}\n                    >\n                      {chunks}\n                    </a>\n                  )\n                }}\n              />\n            )\n          }\n        });\n        const { meta, data } = getState().portfolioReducer.portfolios;\n        return dispatch(\n          fetchPortfolios({\n            ...viewState,\n            ...meta,\n            offset: data.length === 0 ? 0 : meta.offset\n          })\n        );\n      })\n      .catch((error) => {\n        dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n        throw error;\n      })\n  });\n};\n\nexport const selectPortfolioItem = (portfolioItem) => ({\n  type: ActionTypes.SELECT_PORTFOLIO_ITEM,\n  payload: portfolioItem\n});\n\nexport const undoRemoveProductsFromPortfolio = (restoreData, portfolioId) => (\n  dispatch\n) => {\n  dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_PENDING` });\n  return PortfolioHelper.restorePortfolioItems(restoreData)\n    .then(() =>\n      dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .then(() => dispatch({ type: CLEAR_NOTIFICATIONS }))\n    .then(() => dispatch(fetchPortfolioItemsWithPortfolio(portfolioId)))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: 'Products have been restored'\n        }\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const removeProductsFromPortfolio = (\n  portfolioItems,\n  portfolioName,\n  firstSelectedProduct\n) => (dispatch, getState) => {\n  dispatch({\n    type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_PENDING`\n  });\n  const {\n    portfolioReducer: {\n      portfolioItems: { meta },\n      selectedPortfolio: { id: portfolioId }\n    }\n  } = getState();\n  return PortfolioHelper.removePortfolioItems(portfolioItems)\n    .then((data) =>\n      dispatch(\n        fetchPortfolioItemsWithPortfolio(portfolioId, {\n          offset: 0,\n          limit: meta.limit,\n          filter: ''\n        })\n      ).then(() => data)\n    )\n    .then((data) => {\n      return dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'Products removed',\n          dismissable: true,\n          description: (\n            <FormattedMessage\n              {...portfolioMessages.removeItemsNotification}\n              values={{\n                count: portfolioItems.length,\n                productName: firstSelectedProduct.name,\n                portfolioName,\n                // eslint-disable-next-line react/display-name\n                b: (chunks) => <b>{chunks}</b>,\n                // eslint-disable-next-line react/display-name\n                a: (chunks) => (\n                  <a\n                    href=\"#\"\n                    id={`restore-portfolio-item-${portfolioId}`}\n                    onClick={(event) => {\n                      event.preventDefault();\n                      dispatch(\n                        undoRemoveProductsFromPortfolio(data, portfolioId)\n                      );\n                    }}\n                  >\n                    {chunks}\n                  </a>\n                )\n              }}\n            />\n          )\n        }\n      });\n    })\n    .then(() =>\n      dispatch({ type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const copyPortfolio = (id) => (dispatch) => {\n  dispatch({ type: 'COPY_PORTFOLIO_PENDING' });\n  return PortfolioHelper.copyPortfolio(id)\n    .then((portfolio) => {\n      dispatch({ type: 'COPY_PORTFOLIO_FULFILLED' });\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a portfolio',\n          description: `${portfolio.name} has been copied.`,\n          dismissable: true\n        }\n      });\n      return portfolio;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_REJECTED', payload: err })\n    );\n};\n\nexport const copyPortfolioItem = (\n  portfolioItemId,\n  copyObject,\n  newPortfolio\n) => (dispatch) => {\n  return PortfolioHelper.copyPortfolioItem(portfolioItemId, copyObject)\n    .then((data) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a product',\n          description: `${data.name} has been copied into ${newPortfolio.name}`,\n          dismissable: true\n        }\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_ITEM_REJECTED', payload: err })\n    );\n};\n\nexport const resetSelectedPortfolio = () => ({\n  type: ActionTypes.RESET_SELECTED_PORTFOLIO\n});\n\nexport const updatePortfolioItem = (values) => (dispatch, getState) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM,\n    payload: values\n  });\n  return PortfolioHelper.updatePortfolioItem(values, { getState })\n    .then((data) => {\n      dispatch({ type: ActionTypes.UPDATE_PORTFOLIO_ITEM, payload: data });\n      return data;\n    })\n    .then((item) =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: `Product \"${item.name}\" was successfully updated`,\n          dismissable: true\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_ITEM_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const getPortfolioItemDetail = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_PENDING` });\n  return PortfolioHelper.getPortfolioItemDetail(params).then(\n    ([portfolioItem, source]) =>\n      dispatch({\n        type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_FULFILLED`,\n        payload: {\n          portfolioItem,\n          source\n        }\n      })\n  );\n};\n\nexport const setOrFetchPortfolio = (id, portfolios) => {\n  const existingPorfolio = portfolios?.data?.find(\n    (portfolio) => portfolio.id === id\n  );\n\n  if (existingPorfolio) {\n    return {\n      type: `${ActionTypes.FETCH_PORTFOLIO}_FULFILLED`,\n      payload: existingPorfolio\n    };\n  }\n\n  return fetchSelectedPortfolio(id);\n};\n","import { defineMessages } from 'react-intl';\n\nconst labelMessages = defineMessages({\n  shared: {\n    id: 'common.labels.shared',\n    defaultMessage: 'Shared'\n  },\n  portfolio: {\n    id: 'common.labels.portfolio',\n    defaultMessage: 'Portfolio'\n  },\n  platform: {\n    id: 'common.labels.platform',\n    defaultMessage: 'Platform'\n  },\n  name: {\n    id: 'common.labels.name',\n    defaultMessage: 'Name'\n  },\n  description: {\n    id: 'common.labels.description',\n    defaultMessage: 'Description'\n  },\n  loading: {\n    id: 'common.labels.loading',\n    defaultMessage: 'Loading'\n  },\n  cancel: {\n    id: 'common.labels.cancel',\n    defaultMessage: 'Cancel'\n  },\n  save: {\n    id: 'common.labels.save',\n    defaultMessage: 'Save'\n  },\n  confirm: {\n    id: 'common.labels.confirm',\n    defaultMessage: 'Confirm'\n  },\n  create: {\n    id: 'common.labels.create',\n    defaultMessage: 'Create'\n  },\n  owner: {\n    id: 'common.labels.owner',\n    defaultMessage: 'Owner'\n  },\n  sortBy: {\n    id: 'common.labels.sort-by',\n    defaultMessage: 'Sort by'\n  },\n  updated: {\n    id: 'common.labels.updated',\n    defaultMessage: 'Updated'\n  },\n  created: {\n    id: 'common.states.created',\n    defaultMessage: 'Created'\n  },\n  product: {\n    id: 'common.labels.product',\n    defaultMessage: 'Product'\n  },\n  status: {\n    id: 'common.labels.id',\n    defaultMessage: 'Status'\n  }\n});\n\nexport default labelMessages;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\nimport { InternalSelect } from '@data-driven-forms/pf4-component-mapper/dist/cjs/select';\nimport {\n  FormGroup,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\nimport { defineMessage } from 'react-intl';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst createOptions = (options, inputValue, isRequired, optionsMessages) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [...options];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [...selectOptions]\n    : [\n        { label: isRequired ? optionsMessages.choose : optionsMessages.none },\n        ...selectOptions\n      ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  multi,\n  loadOptions,\n  meta,\n  ...rest\n}) => {\n  const formatMessage = useFormatMessage();\n  const optionsMessages = useRef({\n    none: formatMessage(\n      defineMessage({\n        id: 'forms.select.options.none',\n        defaultMessage: 'None'\n      })\n    ),\n    choose: formatMessage(\n      defineMessage({\n        id: 'forms.select.options.choose',\n        defaultMessage: 'Please choose'\n      })\n    )\n  });\n  const [initialFetch, setInitialFetch] = useState(true);\n  const formOptions = useFormApi();\n  let loadOptionsOverride = loadOptions;\n  if (loadOptions && meta.initial) {\n    const lookupArguments = Array.isArray(meta.initial)\n      ? meta.initial.map((option) =>\n          typeof option === 'object' ? option.value : option\n        )\n      : [meta.initial];\n    loadOptionsOverride = (filterValue) => {\n      return initialFetch\n        ? loadOptions(filterValue, lookupArguments).then((initialOptions) => {\n            return loadOptions(filterValue).then((options) => {\n              setInitialFetch(false);\n              return [\n                ...initialOptions,\n                ...options.filter(\n                  ({ value }) =>\n                    !initialOptions.find((option) => option.value === value)\n                )\n              ];\n            });\n          })\n        : loadOptions(filterValue);\n    };\n  }\n\n  return (\n    <InternalSelect\n      hideSelectedOptions={false}\n      menuIsPortal\n      {...input}\n      {...rest}\n      loadOptions={loadOptionsOverride}\n      onChange={(value, ...args) => {\n        if (rest.onChange) {\n          rest.onChange(value);\n          formOptions.change(input.name, value);\n        } else {\n          input.onChange(value, ...args);\n        }\n      }}\n      isMulti={multi}\n      options={\n        !loadOptions\n          ? createOptions(\n              options,\n              input.value,\n              isRequired,\n              optionsMessages.current\n            )\n          : undefined\n      }\n      isDisabled={isDisabled}\n      closeMenuOnSelect={!multi}\n    />\n  );\n};\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.any,\n      label: PropTypes.string.isRequired\n    })\n  ),\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  isSearchable: PropTypes.bool,\n  FieldProvider: PropTypes.any,\n  multi: PropTypes.bool,\n  loadOptions: PropTypes.func,\n  meta: PropTypes.shape({\n    initial: PropTypes.any\n  }).isRequired\n};\n\nSelect.defaultProps = {\n  isSearchable: false,\n  multi: false,\n  options: []\n};\n\nconst Pf4SelectWrapper = (props) => {\n  const {\n    componentType,\n    label,\n    isRequired,\n    helperText,\n    meta,\n    description,\n    hideLabel,\n    dataType,\n    initialKey,\n    id,\n    initialValue,\n    ...rest\n  } = useFieldApi(props);\n  const { error, touched } = meta;\n  const showError = touched && error;\n  const { name } = rest.input;\n\n  return (\n    <FormGroup\n      isRequired={isRequired}\n      label={!hideLabel && label}\n      fieldId={id || name}\n      validated={showError ? 'error' : 'default'}\n      helperText={helperText}\n      helperTextInvalid={meta.error}\n    >\n      {description && (\n        <TextContent>\n          <Text component={TextVariants.small}>{description}</Text>\n        </TextContent>\n      )}\n      <Select\n        id={id || name}\n        meta={meta}\n        label={label}\n        validated={showError ? 'error' : 'default'}\n        isRequired={isRequired}\n        {...rest}\n      />\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool,\n  dataType: PropTypes.string,\n  initialKey: PropTypes.any,\n  initialValue: PropTypes.any\n};\n\nexport default Pf4SelectWrapper;\n","/* eslint-disable react/prop-types */\nimport React, { useReducer, ComponentType } from 'react';\nimport { Grid, GridItem, Button, Level, Tooltip } from '@patternfly/react-core';\nimport PlusIcon from '@patternfly/react-icons/dist/js/icons/plus-icon';\nimport { InternalSelect } from '@data-driven-forms/pf4-component-mapper/dist/cjs/select';\nimport FieldArray from '@data-driven-forms/react-form-renderer/dist/cjs/field-array';\n\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport formsMessages from '../../messages/forms.messages';\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport { StyledLevelItem } from '../../presentational-components/styled-components/level';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport { SelectOptions } from '../../types/common-types';\n\nconst initialState = {\n  /**\n   * This counter will re-initialize select components withouth having to re-initialize the whole form after new group was added\n   */\n  resetGroup: 0,\n  group: undefined,\n  permission: undefined\n};\n\ninterface InternalShareReducerState {\n  group?: { group_uuid: string; value?: string; label: string };\n  permission?: string;\n  resetGroup: number;\n}\n\ntype ShareReducer = (\n  state: InternalShareReducerState,\n  action: {\n    type: 'setGroup' | 'setPermission' | 'resetField';\n    payload?: { group_uuid: string; value?: string; label: string } | string;\n  }\n) => InternalShareReducerState;\n\n// TODO create keys for specific objects instead of using common payload. That way we wont need typecasting\nconst shareReducer: ShareReducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'setGroup':\n      return {\n        ...state,\n        group: payload as { group_uuid: string; value?: string; label: string }\n      };\n    case 'setPermission':\n      return { ...state, permission: payload as string };\n    case 'resetField':\n      return {\n        group: undefined,\n        permission: undefined,\n        resetGroup: state.resetGroup + 1\n      };\n  }\n\n  return state;\n};\n\ntype AddGroup = (group: {\n  groupName?: string;\n  group_uuid?: string;\n  permissions?: string;\n}) => void;\n\nexport interface NewGroupSelectProps {\n  loadOptions: (...args: any[]) => Promise<SelectOptions>;\n  permissions: SelectOptions;\n  addGroup: AddGroup;\n  currentGroups: { group_uuid: string; value?: string }[];\n}\n\nexport const NewGroupSelect: ComponentType<NewGroupSelectProps> = ({\n  loadOptions,\n  permissions,\n  addGroup,\n  currentGroups\n}) => {\n  const [{ group, permission, resetGroup }, dispatch] = useReducer(\n    shareReducer,\n    initialState\n  );\n  const formatMessage = useFormatMessage();\n\n  let tooltipContent;\n  if (!group && !permission) {\n    tooltipContent = formatMessage(portfolioMessages.shareErrorMissingData);\n  } else if (group && !permission) {\n    tooltipContent = formatMessage(\n      portfolioMessages.shareErrorMissingPermission\n    );\n  } else if (permission && !group) {\n    tooltipContent = formatMessage(portfolioMessages.shareErrorMissingGroup);\n  } else {\n    tooltipContent = formatMessage(portfolioMessages.shareTooltip);\n  }\n\n  const hasError = !!currentGroups.find(\n    (item) => item.group_uuid === group?.value\n  );\n\n  return (\n    <Level>\n      <StyledLevelItem grow>\n        <Grid hasGutter className=\"share-column\">\n          <GridItem span={7}>\n            <InternalSelect\n              key={resetGroup}\n              isSearchable\n              isClearable\n              simpleValue={false}\n              menuIsPortal\n              loadOptions={asyncFormValidator(loadOptions)}\n              placeholder={formatMessage(formsMessages.groupsPlaceholder)}\n              onChange={(value) =>\n                dispatch({ type: 'setGroup', payload: value })\n              }\n              validated={hasError ? 'error' : 'default'}\n              value={group}\n            />\n            {hasError && (\n              <div\n                className=\"pf-c-form__helper-text pf-m-error\"\n                id=\"permission-helper\"\n                aria-live=\"polite\"\n              >\n                {formatMessage(portfolioMessages.shareDuplicate)}\n              </div>\n            )}\n          </GridItem>\n          <GridItem span={5}>\n            <InternalSelect\n              name=\"select-permission\"\n              options={permissions}\n              menuIsPortal\n              placeholder={formatMessage(formsMessages.permissionsPlaceholder)}\n              onChange={(value) =>\n                dispatch({ type: 'setPermission', payload: value })\n              }\n              value={permission}\n            />\n          </GridItem>\n        </Grid>\n      </StyledLevelItem>\n      <StyledLevelItem alignSelf=\"baseline\">\n        <Tooltip content={<p>{tooltipContent}</p>}>\n          <span>\n            <Button\n              id=\"add-new-group\"\n              variant=\"link\"\n              isDisabled={!group || !permission}\n              onClick={() => {\n                group &&\n                  addGroup({\n                    groupName: group.label,\n                    group_uuid: group.value,\n                    permissions: permission\n                  });\n                dispatch({ type: 'resetField' });\n              }}\n            >\n              <PlusIcon />\n            </Button>\n          </span>\n        </Tooltip>\n      </StyledLevelItem>\n    </Level>\n  );\n};\n\nconst ShareGroupSelect: ComponentType<NewGroupSelectProps> = (props) => (\n  <FieldArray name=\"shared-groups\">\n    {({ fields: { push, value } }) => (\n      <NewGroupSelect {...props} addGroup={push} currentGroups={value} />\n    )}\n  </FieldArray>\n);\n\nexport default ShareGroupSelect;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment, ComponentType } from 'react';\nimport { InternalSelect } from '@data-driven-forms/pf4-component-mapper/dist/cjs/select';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\nimport FieldArray from '@data-driven-forms/react-form-renderer/dist/cjs/field-array';\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n  GridItem,\n  Grid,\n  Button,\n  Level\n} from '@patternfly/react-core';\nimport TrashIcon from '@patternfly/react-icons/dist/js/icons/trash-icon';\nimport { StyledLevelItem } from '../../presentational-components/styled-components/level';\nimport styled from 'styled-components';\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport { SelectOptions } from '../../types/common-types';\n\nconst StyledText = styled(Text)`\n  line-height: 36px !important;\n`;\n\nexport interface SharedGroupProps {\n  name: string;\n  remove: (index: number) => void;\n  index: number;\n  permissionVerbs: SelectOptions;\n}\n\nconst SharedGroup: ComponentType<SharedGroupProps> = ({\n  name,\n  remove,\n  index,\n  permissionVerbs\n}) => {\n  const { input } = useFieldApi({ name });\n  return (\n    <Level>\n      <StyledLevelItem grow>\n        <Grid hasGutter className=\"share-column\">\n          <GridItem span={7}>\n            <TextContent>\n              <StyledText component={TextVariants.h4}>\n                {input.value.groupName}\n              </StyledText>\n            </TextContent>\n          </GridItem>\n          <GridItem span={5}>\n            <InternalSelect\n              name={name}\n              menuIsPortal\n              options={permissionVerbs}\n              value={input.value.permissions}\n              onChange={(permissions) =>\n                input.onChange({\n                  ...input.value,\n                  permissions\n                })\n              }\n            />\n          </GridItem>\n        </Grid>\n      </StyledLevelItem>\n      <StyledLevelItem>\n        <Button\n          id={`remove-share-${index}`}\n          variant=\"plain\"\n          onClick={() => remove(index)}\n        >\n          <TrashIcon />\n        </Button>\n      </StyledLevelItem>\n    </Level>\n  );\n};\n\nexport interface ShareGroupEditProps {\n  name: string;\n  permissionVerbs: SelectOptions;\n}\n\nconst ShareGroupEdit: ComponentType<ShareGroupEditProps> = ({\n  name,\n  permissionVerbs\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <FieldArray name={name}>\n      {({ fields: { map, remove, length } }) => (\n        <Fragment>\n          {length === 0 && (\n            <TextContent>\n              <Text>{formatMessage(portfolioMessages.noShares)}</Text>\n            </TextContent>\n          )}\n          {length && length > 0 && (\n            <TextContent>\n              <Text component=\"small\">\n                {formatMessage(portfolioMessages.shareGroupsAccess)}\n              </Text>\n            </TextContent>\n          )}\n          {map((name, index) => (\n            <SharedGroup\n              key={name}\n              name={name}\n              remove={remove}\n              index={index}\n              permissionVerbs={permissionVerbs}\n            />\n          ))}\n        </Fragment>\n      )}\n    </FieldArray>\n  );\n};\n\nexport default ShareGroupEdit;\n","const { defineMessages } = require('react-intl');\n\nconst schemasMessages = defineMessages({\n  'schemas.portfolio.name': {\n    id: 'schemas.portfolio.name',\n    defaultMessage: 'Name'\n  },\n  'schemas.portfolio.description': {\n    id: 'schemas.portfolio.description',\n    defaultMessage: 'Description'\n  },\n  'schemas.portfolio-item.name': {\n    id: 'schemas.portfolio-item.name',\n    defaultMessage: 'Name'\n  },\n  'schemas.portfolio-item.description': {\n    id: 'schemas.portfolio-item.description',\n    defaultMessage: 'Description'\n  },\n  'schemas.portfolio-item.long_description': {\n    id: 'schemas.portfolio-item.long_description',\n    defaultMessage: 'Long description'\n  },\n  'schemas.portfolio-item.vendor': {\n    id: 'schemas.portfolio-item.vendor',\n    defaultMessage: 'Vendor'\n  },\n  'schemas.portfolio-item.documentation_url': {\n    id: 'schemas.portfolio-item.documentation_url',\n    defaultMessage: 'Documentation URL'\n  },\n  'schemas.portfolio-item.support_url': {\n    id: 'schemas.portfolio-item.support_url',\n    defaultMessage: 'Support URL'\n  },\n  'share.new.description': {\n    id: 'share.new.description',\n    defaultMessage: 'Invite group'\n  }\n});\n\nexport default schemasMessages;\n","import schemasMessages from '../messages/schemas.messages';\n\nconst translateString = (string, formatMessage) => {\n  try {\n    return formatMessage(string);\n  } catch {\n    return string;\n  }\n};\n\nconst translateField = (field, formatMessage, translateKeys) => {\n  const fieldCopy = { ...field };\n  translateKeys.forEach((key) => {\n    if (\n      Object.prototype.hasOwnProperty.call(fieldCopy, key) &&\n      typeof fieldCopy[key] === 'string' &&\n      schemasMessages[fieldCopy[key]]\n    ) {\n      fieldCopy[key] = translateString(\n        schemasMessages[fieldCopy[key]],\n        formatMessage\n      );\n    }\n  });\n  if (\n    Object.prototype.hasOwnProperty.call(fieldCopy, 'options') &&\n    Array.isArray(fieldCopy.options)\n  ) {\n    fieldCopy.options = fieldCopy.options.map((option) =>\n      translateString(schemasMessages[option.label])\n        ? {\n            ...option,\n            label: translateString(schemasMessages[option.label], formatMessage)\n          }\n        : option\n    );\n  }\n\n  if (\n    Object.prototype.hasOwnProperty.call(fieldCopy, 'fields') &&\n    Array.isArray(fieldCopy.fields)\n  ) {\n    fieldCopy.fields = fieldCopy.fields.map((field) =>\n      translateField(field, formatMessage, translateKeys)\n    );\n  }\n\n  return fieldCopy;\n};\n\nconst translateSchema = (\n  schema,\n  formatMessage,\n  translateKeys = ['label', 'placeholder', 'title', 'description']\n) => {\n  const schemaCopy = { ...schema };\n  schemaCopy.fields = schemaCopy.fields.map((field) =>\n    translateField(field, formatMessage, translateKeys)\n  );\n  return schemaCopy;\n};\n\nexport default translateSchema;\n","/* eslint-disable react/prop-types */\nimport React, { useEffect, useState, ReactNode } from 'react';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\nimport { FormGroup, TextContent, Text } from '@patternfly/react-core';\nimport labelMessages from '../../messages/labels.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nexport interface CopyNameDisplayProps {\n  label: ReactNode;\n  getName: (value: any) => Promise<string>;\n  fieldSpy: string;\n}\n\nconst CopyNameDisplay: React.ComponentType<CopyNameDisplayProps> = ({\n  label,\n  getName,\n  fieldSpy\n}) => {\n  const formatMessage = useFormatMessage();\n  const [name, setName] = useState(formatMessage(labelMessages.loading));\n  const {\n    input: { value },\n    meta: { error }\n  } = useFieldApi({\n    name: fieldSpy\n  });\n  useEffect(() => {\n    getName(value).then((name: string) => {\n      setName(name);\n    });\n  }, [value]);\n\n  return (\n    <FormGroup label={label} helperText={error} fieldId={value}>\n      <TextContent>\n        <Text component=\"h6\">{name}</Text>\n      </TextContent>\n    </FormGroup>\n  );\n};\n\nexport default CopyNameDisplay;\n","/* eslint-disable react/prop-types */\nimport React, { ReactNode, ComponentType } from 'react';\nimport { Chip, ChipGroup, FormGroup } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\n\nexport interface InitialChipsProps {\n  name: string;\n  label: ReactNode;\n}\n\nexport interface InitialChipsValue {\n  id: string;\n  name: ReactNode;\n}\n\nconst InitialChips: ComponentType<InitialChipsProps> = ({ name, label }) => {\n  const {\n    input: { value, onChange }\n  } = useFieldApi<InitialChipsValue[]>({ name });\n  const handleRemove = (id: string) =>\n    onChange(value.filter((item) => item.id !== id));\n  if (value?.length === 0) {\n    return null;\n  }\n\n  return (\n    <FormGroup fieldId={name} label={label}>\n      <ChipGroup>\n        {value.map(({ name, id }) => (\n          <Chip key={id} onClick={() => handleRemove(id)}>\n            {name}\n          </Chip>\n        ))}\n      </ChipGroup>\n    </FormGroup>\n  );\n};\n\nexport default InitialChips;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender from '@data-driven-forms/react-form-renderer/dist/cjs/form-renderer';\nimport validatorMapper from '@data-driven-forms/react-form-renderer/dist/cjs/validator-mapper';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport TextField from '@data-driven-forms/pf4-component-mapper/dist/cjs/text-field';\nimport Textarea from '@data-driven-forms/pf4-component-mapper/dist/cjs/textarea';\nimport SubForm from '@data-driven-forms/pf4-component-mapper/dist/cjs/sub-form';\nimport PlainText from '@data-driven-forms/pf4-component-mapper/dist/cjs/plain-text';\nimport Checkbox from '@data-driven-forms/pf4-component-mapper/dist/cjs/checkbox';\nimport Radio from '@data-driven-forms/pf4-component-mapper/dist/cjs/radio';\nimport Switch from '@data-driven-forms/pf4-component-mapper/dist/cjs/switch';\n\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\nimport ShareGroupSelect from '../../forms/form-fields/share-group-select';\nimport ShareGroupEdit from '../../forms/form-fields/share-group-edit';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport translateSchema from '../../utilities/translate-schema';\nimport Select from '@data-driven-forms/pf4-component-mapper/dist/cjs/select';\nimport CopyNameDisplay from '../../forms/form-fields/copy-name-display';\nimport InitialChips from '../../forms/form-fields/initial-chips';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nexport const catalogComponentMapper = {\n  [componentTypes.TEXT_FIELD]: TextField,\n  [componentTypes.TEXTAREA]: Textarea,\n  [componentTypes.PLAIN_TEXT]: PlainText,\n  [componentTypes.SELECT]: Pf4SelectWrapper,\n  [componentTypes.CHECKBOX]: Checkbox,\n  [componentTypes.RADIO]: Radio,\n  [componentTypes.SWITCH]: Switch,\n  [componentTypes.SUB_FORM]: SubForm,\n  'initial-select': Select,\n  'share-group-select': ShareGroupSelect,\n  'share-group-edit': ShareGroupEdit,\n  'copy-name-display': CopyNameDisplay,\n  'textarea-field': Textarea,\n  'select-field': Pf4SelectWrapper,\n  'initial-chips': InitialChips\n};\n\nconst catalogValidatorMapper = {\n  ...validatorMapper,\n  'exact-length-validator': validatorMapper[validatorTypes.EXACT_LENGTH],\n  'max-length-validator': validatorMapper[validatorTypes.MAX_LENGTH],\n  'min-items-validator': validatorMapper[validatorTypes.MIN_ITEMS],\n  'min-length-validator': validatorMapper[validatorTypes.MIN_LENGTH],\n  'pattern-validator': validatorMapper[validatorTypes.PATTERN],\n  'required-validator': validatorMapper[validatorTypes.REQUIRED],\n  'url-validator': validatorMapper[validatorTypes.URL]\n};\n\nexport const catalogValidatorAlias = {\n  'exact-length-validator': validatorTypes.EXACT_LENGTH,\n  'max-length-validator': validatorTypes.MAX_LENGTH,\n  'min-items-validator': validatorTypes.MIN_ITEMS,\n  'min-length-validator': validatorTypes.MIN_LENGTH,\n  'pattern-validator': validatorTypes.PATTERN,\n  'required-validator': validatorTypes.REQUIRED,\n  'url-validator': validatorTypes.URL\n};\n\nconst FormRenderer = ({ formContainer, templateProps, schema, ...rest }) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <div>\n      <ReactFormRender\n        componentMapper={catalogComponentMapper}\n        FormTemplate={(props) => <FormTemplate {...props} {...templateProps} />}\n        validatorMapper={catalogValidatorMapper}\n        schema={translateSchema(schema, formatMessage)}\n        {...rest}\n      />\n    </div>\n  );\n};\n\nFormRenderer.propTypes = {\n  formContainer: PropTypes.oneOf(['default', 'modal']),\n  templateProps: PropTypes.object,\n  schema: PropTypes.object.isRequired\n};\n\nFormRenderer.defaultProps = {\n  formContainer: 'default',\n  templateProps: {}\n};\n\nexport default memo(FormRenderer);\n","import { decodeState } from './uri-state-manager';\n\nconst useInitialUriHash = () => decodeState(window.location.hash.substring(1));\n\nexport default useInitialUriHash;\n","import axios, { AxiosResponse, AxiosRequestConfig, AxiosInstance } from 'axios';\nimport {\n  RequestApi,\n  WorkflowApi\n} from '@redhat-cloud-services/approval-client';\nimport {\n  PortfolioApi,\n  PortfolioItemApi,\n  OrderApi,\n  OrderItemApi,\n  IconApi,\n  ServicePlansApi,\n  OrderProcessApi\n} from '@redhat-cloud-services/catalog-client';\n\nimport {\n  CATALOG_API_BASE,\n  APPROVAL_API_BASE,\n  RBAC_API_BASE\n} from '../../utilities/constants';\nimport { GroupApi } from '@redhat-cloud-services/rbac-client';\nimport { stringify } from 'qs';\n\nexport interface ApiHeaders extends Headers {\n  'x-rh-insights-request-id': string;\n}\n\nexport interface ErrorResponse {\n  headers?: ApiHeaders;\n}\n\nexport interface ServerError {\n  response?: ErrorResponse;\n  status?: 403 | 404 | 401 | 400 | 500 | 200; // not a complete list, replace by library with complete interface\n  config?: AxiosRequestConfig;\n}\n\nconst axiosInstance: AxiosInstance = axios.create({\n  paramsSerializer: (params) => stringify(params)\n});\n\nconst resolveInterceptor = (response: AxiosResponse) =>\n  response.data || response;\nconst errorInterceptor = (error: ServerError = {}) => {\n  const requestId = error.response?.headers?.['x-rh-insights-request-id'];\n  throw requestId ? { ...error.response, requestId } : { ...error.response };\n};\n\nconst unauthorizedInterceptor = (error: ServerError = {}) => {\n  if (error.status === 403) {\n    throw {\n      ...error,\n      redirect: {\n        pathname: '/403',\n        message: error.config?.url\n      }\n    };\n  }\n\n  throw error;\n};\n\n// check identity before each request. If the token is expired it will log out user\naxiosInstance.interceptors.request.use(async (config) => {\n  await window.insights.chrome.auth.getUser();\n  return config;\n});\naxiosInstance.interceptors.response.use(resolveInterceptor);\naxiosInstance.interceptors.response.use(undefined, errorInterceptor);\naxiosInstance.interceptors.response.use(undefined, unauthorizedInterceptor);\n\nconst orderApi = new OrderApi(undefined, CATALOG_API_BASE, axiosInstance);\nconst orderItemApi = new OrderItemApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst portfolioApi = new PortfolioApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst portfolioItemApi = new PortfolioItemApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst requestsApi = new RequestApi(undefined, APPROVAL_API_BASE, axiosInstance);\nconst workflowApi = new WorkflowApi(\n  undefined,\n  APPROVAL_API_BASE,\n  axiosInstance\n);\nconst iconApi = new IconApi(undefined, CATALOG_API_BASE, axiosInstance);\nconst servicePlansApi = new ServicePlansApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst orderProcessApi = new OrderProcessApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\n\nexport function getPortfolioApi(): PortfolioApi {\n  return portfolioApi;\n}\n\nexport function getPortfolioItemApi(): PortfolioItemApi {\n  return portfolioItemApi;\n}\n\nexport function getOrderApi(): OrderApi {\n  return orderApi;\n}\n\nexport function getOrderItemApi(): OrderItemApi {\n  return orderItemApi;\n}\n\nexport function getRequestsApi(): RequestApi {\n  return requestsApi;\n}\n\nconst rbacGroupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getRbacGroupApi(): GroupApi {\n  return rbacGroupApi;\n}\n\nexport function getWorkflowApi(): WorkflowApi {\n  return workflowApi;\n}\n\nexport function getAxiosInstance(): AxiosInstance {\n  return axiosInstance;\n}\n\nexport function getIconApi(): IconApi {\n  return iconApi;\n}\n\nexport function getServicePlansApi(): ServicePlansApi {\n  return servicePlansApi;\n}\n\nexport function getOrderProcessApi(): OrderProcessApi {\n  return orderProcessApi;\n}\n\nconst grapqlInstance = axios.create();\ngrapqlInstance.interceptors.request.use(async (config) => {\n  await window.insights.chrome.auth.getUser();\n  return config;\n});\n/**\n * Graphql does not return error response when the qery fails.\n * Instead it returns 200 response with error object.\n * We catch it and throw it to trigger notification middleware\n */\ngrapqlInstance.interceptors.response.use(({ data }) => {\n  if (data.errors) {\n    throw {\n      message: data.errors[0].errorType,\n      data: data.errors[0].message\n    };\n  }\n\n  return data;\n});\n\nexport function getGraphqlInstance(): AxiosInstance {\n  return grapqlInstance;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Level, Toolbar, ToolbarGroup } from '@patternfly/react-core';\n\nexport const StyledToolbar = styled(({ noWrap, ...props }) => (\n  <Toolbar {...props} />\n))`\n  background-color: #ffffff;\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  position: relative;\n  top: 1px;\n  .pf-c-toolbar__content-section {\n    flex-wrap: ${({ noWrap }) => (noWrap ? 'nowrap' : 'wrap')};\n  }\n`;\n\nexport const StyledToolbarGroup = styled(ToolbarGroup)`\n  flex-wrap: wrap;\n`;\n\nexport const TopToolbarWrapper = styled.div`\n  background-color: #ffffff;\n  .pf-c-breadcrumb__item {\n    .active {\n      color: var(--pf-c-breadcrumb__item--Color);\n      text-decoration: none;\n      pointer-events: none;\n    }\n  }\n  h1,\n  h2 {\n    margin-bottom: 0 !important;\n    @supports not (overflow-wrap: anywhere) {\n      word-break: break-all;\n    }\n    @supports (overflow-wrap: anywhere) {\n      overflow-wrap: anywhere;\n    }\n  }\n  .top-toolbar-title {\n    min-width: 200px;\n  }\n  .top-toolbar-title-description {\n    word-break: break-word;\n  }\n  .ins-c-primary-toolbar {\n    padding: 0;\n  }\n  .pf-c-toolbar__content {\n    padding: 0;\n  }\n`;\n\nexport const TopToolbarTitleContainer = styled(Level)`\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n  }\n`;\n","import React from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\n\nexport const UnauthorizedRedirect = () => {\n  const location = useLocation();\n  return (\n    <Redirect\n      to={{\n        pathname: '/403',\n        state: {\n          from: location\n        }\n      }}\n    />\n  );\n};\n","import * as ActionTypes from '../action-types';\nimport * as OrderProcessHelper from '../../helpers/order-process/order-process-helper';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\n\nexport const fetchOrderProcesses = (pagination) => (dispatch, getState) => {\n  const { sortBy, orderProcesses } = getState().orderProcessReducer;\n\n  let finalPagination = pagination;\n\n  if (!pagination && orderProcesses) {\n    const { limit, offset } = orderProcesses.meta;\n    finalPagination = { limit, offset };\n  }\n\n  return dispatch({\n    type: ActionTypes.FETCH_ORDER_PROCESSES,\n    meta: {\n      ...finalPagination,\n      filter: pagination?.filterValue || '',\n      storeState: true,\n      stateKey: 'orderProcesses'\n    },\n    payload: OrderProcessHelper.listOrderProcesses(\n      pagination?.filterValue,\n      finalPagination,\n      sortBy\n    )\n  });\n};\n\nexport const fetchOrderProcess = (apiProps) => ({\n  type: ActionTypes.FETCH_ORDER_PROCESS,\n  payload: OrderProcessHelper.fetchOrderProcess(apiProps)\n});\n\nexport const addOrderProcess = (processData, intl) => ({\n  type: ActionTypes.ADD_ORDER_PROCESS,\n  payload: OrderProcessHelper.addOrderProcess(processData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: intl.formatMessage(\n          orderProcessesMessages.addProcessSuccessTitle\n        ),\n        description: intl.formatMessage(\n          orderProcessesMessages.addProcessSuccessDescription\n        )\n      }\n    }\n  }\n});\n\nexport const updateOrderProcess = (processId, data, intl) => ({\n  type: ActionTypes.UPDATE_ORDER_PROCESS,\n  payload: OrderProcessHelper.updateOrderProcess(processId, data),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: intl.formatMessage(\n          orderProcessesMessages.updateProcessSuccessTitle,\n          { name: data.name }\n        )\n      }\n    }\n  }\n});\n\nexport const sortOrderProcesses = (sortBy) => ({\n  type: ActionTypes.SORT_ORDER_PROCESSES,\n  payload: sortBy\n});\n\nexport const setOrderProcess = (...args) => ({\n  type: ActionTypes.SET_ORDER_PROCESS,\n  payload: OrderProcessHelper.setOrderProcesses(...args)\n});\n\nexport const removeOrderProcess = (orderProcess, intl) => ({\n  type: ActionTypes.REMOVE_ORDER_PROCESS,\n  payload: OrderProcessHelper.removeOrderProcess(orderProcess),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: intl.formatMessage(\n          orderProcessesMessages.removeProcessSuccessTitle\n        ),\n        description: intl.formatMessage(\n          orderProcessesMessages.removeProcessSuccessDescription\n        )\n      }\n    }\n  }\n});\n\nexport const removeOrderProcesses = (orderProcesses, intl) => ({\n  type: ActionTypes.REMOVE_ORDER_PROCESSES,\n  payload: OrderProcessHelper.removeOrderProcesses(orderProcesses),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: intl.formatMessage(\n          orderProcessesMessages.removeProcessesSuccessTitle\n        ),\n        description: intl.formatMessage(\n          orderProcessesMessages.removeProcessesSuccessDescription\n        )\n      }\n    }\n  }\n});\n","import React from 'react';\n\nexport const Bold = (chunks) => <b>{chunks}</b>;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport { FieldApi } from '@data-driven-forms/react-form-renderer/dist/cjs/field';\nimport { FormOptions } from '@data-driven-forms/react-form-renderer/dist/cjs/renderer-context';\nimport Schema from '@data-driven-forms/react-form-renderer/dist/cjs/schema';\nimport asyncFormValidator from '../utilities/async-form-validator';\nimport { LoadOptions, SelectOptions, AnyObject } from '../types/common-types';\n\ntype ResolveNewProcessProps = (\n  props: AnyObject,\n  fieldApi: FieldApi<{ id: string }[]>,\n  formOptions: FormOptions\n) => {\n  key: number;\n  loadOptions: LoadOptions;\n};\nconst resolveNewProcessProps: ResolveNewProcessProps = (\n  props,\n  _fieldApi,\n  formOptions\n) => {\n  const initialProcessess: { id: string }[] = formOptions.getState().values[\n    'initial-tags'\n  ];\n  return {\n    key: initialProcessess.length, // used to trigger options re-load and disable options update\n    loadOptions: (...args) =>\n      (props as { loadOptions: LoadOptions })\n        .loadOptions(...args)\n        .then((data) =>\n          data.map((option) => ({\n            ...option,\n            ...(initialProcessess.find(({ id }) => id === option.value) // we have to disable options that are already in the chip group\n              ? { isDisabled: true }\n              : {})\n          }))\n        )\n  };\n};\n\nconst createSchema = (\n  existingTagsMessage: SelectOptions,\n  loadTags: LoadOptions\n): Schema => ({\n  fields: [\n    {\n      component: componentTypes.SELECT,\n      name: 'new-tags',\n      label: '',\n      loadOptions: asyncFormValidator(loadTags),\n      multi: true,\n      isSearchable: true,\n      isClearable: true,\n      resolveProps: resolveNewProcessProps\n    },\n    {\n      component: 'initial-chips',\n      name: 'initial-tags',\n      label: existingTagsMessage\n    }\n  ]\n});\n\nexport default createSchema;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport difference from 'lodash/difference';\nimport {\n  Modal,\n  Stack,\n  StackItem,\n  TextContent,\n  Text\n} from '@patternfly/react-core';\nimport FormRenderer from '../common/form-renderer';\nimport createSchema from '../../forms/set-object-tags.schema';\nimport { WorkflowLoader } from '../../presentational-components/shared/loader-placeholders';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport actionMessages from '../../messages/actions.messages';\n\nconst TaggingModal = ({\n  loadTags,\n  onSubmit,\n  getInitialTags,\n  onClose,\n  title,\n  subTitle,\n  existingTagsMessage,\n  ...rest\n}) => {\n  const formatMessage = useFormatMessage();\n  const [data, setData] = useState();\n  useEffect(() => {\n    getInitialTags().then((data) => setData(data));\n  }, []);\n  const handleSubmit = (formData) => {\n    const unlinkArray = data\n      .filter(\n        ({ id }) =>\n          !formData['initial-tags'].find((process) => id === process.id)\n      )\n      .map(({ id }) => id);\n    /**\n     * prevent uneccesary unlink and link API calls of the same tag\n     */\n    const linkDiff = difference(formData['new-tags'], unlinkArray);\n    const unLinkDiff = difference(unlinkArray, formData['new-tags']);\n    const toLinkTags = linkDiff.filter(\n      (id) => !data.find((item) => item.id === id)\n    );\n    const toUnlinkTags = unLinkDiff.filter((id) =>\n      data.find((item) => item.id === id)\n    );\n    if (toUnlinkTags.length > 0 || toLinkTags.length > 0) {\n      return onSubmit(toLinkTags, toUnlinkTags);\n    }\n  };\n\n  return (\n    <Modal isOpen title={title} onClose={onClose} variant=\"small\">\n      {!data ? (\n        <WorkflowLoader />\n      ) : (\n        <Stack hasGutter>\n          <StackItem>\n            <TextContent>\n              <Text id=\"sub-title\">{subTitle}</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormRenderer\n              {...rest}\n              subscription={{ values: true }}\n              initialValues={{\n                'initial-tags': data\n              }}\n              schema={createSchema(existingTagsMessage, loadTags)}\n              onSubmit={handleSubmit}\n              onCancel={onClose}\n              clearedValue={[]}\n              templateProps={{\n                submitLabel: formatMessage(actionMessages.save),\n                disableSubmit: ['pristine']\n              }}\n            />\n          </StackItem>\n        </Stack>\n      )}\n    </Modal>\n  );\n};\n\nTaggingModal.propTypes = {\n  loadTags: PropTypes.func.isRequired,\n  getInitialTags: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  title: PropTypes.node.isRequired,\n  subTitle: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  existingTagsMessage: PropTypes.node.isRequired\n};\n\nexport default TaggingModal;\n","export const FETCH_SERVICE_PLANS = 'FETCH_SERVICE_PLANS';\nexport const FETCH_SERVICE_PLAN_PARAMETERS = 'FETCH_SERVICE_PLAN_PARAMETERS';\nexport const SUBMIT_SERVICE_ORDER = 'SUBMIT_SERVICE_ORDER';\nexport const SET_SELECTED_PLAN = 'SET_SELECTED_PLAN';\nexport const LIST_ORDERS = 'LIST_ORDERS';\nexport const CANCEL_ORDER = 'CANCEL_ORDER';\nexport const SET_ORDERS = 'SET_ORDERS';\nexport const FETCH_ORDERS = 'FETCH_ORDERS';\n\nexport const FETCH_PLATFORM = 'FETCH_PLATFORM';\nexport const FETCH_PLATFORMS = 'FETCH_PLATFORMS';\nexport const FETCH_PLATFORM_ITEMS = 'FETCH_PLATFORM_ITEMS';\nexport const FETCH_PLATFORM_ITEM = 'FETCH_PLATFORM_ITEM';\nexport const FETCH_MULTIPLE_PLATFORM_ITEMS = 'FETCH_MULTIPLE_PLATFORM_ITEMS';\nexport const FILTER_PLATFORM_ITEMS = 'FILTER_PLATFORM_ITEMS';\nexport const FETCH_PLATFORM_INVENTORIES = 'FETCH_PLATFORM_INVENTORIES';\nexport const SET_INVENTORIES_LOADING_STATE = 'SET_INVENTORIES_LOADING_STATE';\n\nexport const FETCH_PORTFOLIOS = 'FETCH_PORTFOLIOS';\nexport const FETCH_PORTFOLIO_ITEM = 'FETCH_PORTFOLIO_ITEM';\nexport const FETCH_PORTFOLIO_ITEMS = 'FETCH_PORTFOLIO_ITEMS';\nexport const FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO =\n  'FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO';\nexport const FETCH_PORTFOLIO = 'FETCH_PORTFOLIO';\nexport const FILTER_PORTFOLIO_ITEMS = 'FILTER_PORTFOLIO_ITEMS';\nexport const ADD_PORTFOLIO = 'ADD_PORTFOLIO';\nexport const ADD_TO_PORTFOLIO = 'ADD_TO_PORTFOLIO';\nexport const UPDATE_PORTFOLIO = 'UPDATE_PORTFOLIO';\nexport const REMOVE_PORTFOLIO = 'REMOVE_PORTFOLIO';\nexport const REMOVE_PORTFOLIO_ITEMS = 'REMOVE_PORTFOLIO_ITEMS';\nexport const RESTORE_PORTFOLIO_ITEMS = 'RESTORE_PORTFOLIO_ITEMS';\nexport const RESET_SELECTED_PORTFOLIO = 'RESET_SELECTED_PORTFOLIO';\nexport const ADD_TEMPORARY_PORTFOLIO = 'ADD_TEMPORARY_PORTFOLIO';\nexport const UPDATE_TEMPORARY_PORTFOLIO = 'UPDATE_TEMPORARY_PORTFOLIO';\nexport const DELETE_TEMPORARY_PORTFOLIO = 'DELETE_TEMPORARY_PORTFOLIO';\nexport const RESTORE_PORTFOLIO_PREV_STATE = 'RESTORE_PORTFOLIO_PREV_STATE';\nexport const SET_PORTFOLIO_ITEMS = 'SET_PORTFOLIO_ITEMS';\nexport const UPDATE_TEMPORARY_PORTFOLIO_ITEM =\n  'UPDATE_TEMPORARY_PORTFOLIO_ITEM';\nexport const RESTORE_PORTFOLIO_ITEM_PREV_STATE =\n  'RESTORE_PORTFOLIO_ITEM_PREV_STATE';\nexport const UPDATE_PORTFOLIO_ITEM = 'UPDATE_PORTFOLIO_ITEM';\n\nexport const FETCH_RBAC_GROUPS = 'FETCH_RBAC_GROUPS';\n\nexport const SHARE_PORTFOLIO = 'SHARE_PORTFOLIO';\nexport const UNSHARE_PORTFOLIO = 'UNSHARE_PORTFOLIO';\nexport const QUERY_PORTFOLIO = 'QUERY_PORTFOLIO';\n\nexport const FETCH_REQUESTS = 'FETCH_REQUESTS';\nexport const FETCH_ORDER_ITEMS = 'FETCH_ORDER_ITEMS';\n\n/**\n * Global redux loading state\n */\nexport const SET_LOADING_STATE = 'SET_LOADING_STATE';\n\n/**\n * OpenApi action\n */\nexport const SET_OPENAPI_SCHEMA = '@@open-api/set-schema';\n\n/**\n * Orders actions\n * TODO Prefix existing action types\n */\nexport const SET_ORDER_DETAIL = '@@orders/set-order-detail';\nexport const FETCH_APPROVAL_REQUESTS = '@@orders/fetch-order-requests';\n\n/*\n * Portfolio actions\n */\nexport const SELECT_PORTFOLIO_ITEM = '@@portfolio/SELECT_PORTFOLIO_ITEM';\n\n/**\n * Sources actions\n */\nexport const FETCH_SERVICE_OFFERING = '@@sources/FETCH_SERVICE_OFFERING';\nexport const SET_SOURCETYPE_ICONS = '@@sources/SET_SOURCETYPE_ICONS';\n\n/**\n * Breadcrumbs actions\n */\nexport const INITIALIZE_BREADCRUMBS = '@@breadcrumbs/INITIALIZE_BREADCRUMBS';\n\n/**\n * In18l actions\n */\n\nexport const INITIALIZE_I18N = '@@i18l/INITIALIZE_I18N';\n\n/*\n * Order processes actions\n */\nexport const FETCH_ORDER_PROCESSES = '@@order_processes/FETCH_ORDER_PROCESSES';\nexport const ADD_ORDER_PROCESS = '@@order_processes/ADD_ORDER_PROCESS';\nexport const SORT_ORDER_PROCESSES = '@@order_processes/SORT_ORDER_PROCESSES';\nexport const SET_ORDER_PROCESS = '@@order_processes/SET_ORDER_PROCESS';\nexport const FETCH_ORDER_PROCESS = '@@order_processes/FETCH_ORDER_PROCESS';\nexport const REMOVE_ORDER_PROCESS = '@@order_processes/REMOVE_ORDER_PROCESS';\nexport const REMOVE_ORDER_PROCESSES =\n  '@@order_processes/REMOVE_ORDER_PROCESSES';\nexport const SET_FILTER_ORDER_PROCESSES =\n  '@@order_processes/SET_FILTER_ORDER_PROCESSES';\nexport const UPDATE_ORDER_PROCESS = '@@order_process/UPDATE_ORDER_PROCESS';\n","import React, { Fragment, ReactNode } from 'react';\nimport { useIntl, MessageDescriptor } from 'react-intl';\nimport { AnyObject } from '../types/common-types';\n\nexport type UseFormatMessage = () => (\n  message: MessageDescriptor,\n  values?: AnyObject\n) => ReactNode;\n\nconst useFormatMessage: UseFormatMessage = () => {\n  const { formatMessage } = useIntl();\n  return (message: MessageDescriptor, values = {}) => {\n    const internalValues = Object.entries(values).reduce(\n      (acc, [key, value]) => {\n        return {\n          ...acc,\n          [key]:\n            typeof value === 'function'\n              ? (chunks: any) => <Fragment key={key}>{value(chunks)}</Fragment>\n              : value\n        };\n      },\n      {}\n    );\n    try {\n      return formatMessage(message, internalValues);\n    } catch (error) {\n      return `Unable to translate message. Definition: ${message}, values: ${values}, intl-error: ${error}`;\n    }\n  };\n};\n\nexport default useFormatMessage;\n","import { ApiMetadata } from '../../types/common-types';\nimport { SortByDirection } from '@patternfly/react-table';\n\nexport interface PaginationConfiguration extends ApiMetadata {\n  filter?: string;\n  sortDirection?: SortByDirection;\n}\n\nexport const defaultSettings: PaginationConfiguration = {\n  limit: 50,\n  offset: 0,\n  count: 0,\n  filter: ''\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0): number =>\n  Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset = 0): number => (page - 1) * offset;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\nimport { useHistory } from 'react-router-dom';\nimport {\n  listOrderProcesses,\n  getLinkedOrderProcesses\n} from '../../helpers/order-process/order-process-helper';\nimport { setOrderProcess } from '../../redux/actions/order-process-actions';\nimport { APP_NAME } from '../../utilities/constants';\nimport useQuery from '../../utilities/use-query';\nimport TaggingModal from '../common/tagging-modal';\nimport { Bold } from '../../presentational-components/shared/intl-rich-text-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\n\nconst SetOrderProcessModal = ({ pushParam, objectType, querySelector }) => {\n  const dispatch = useDispatch();\n  const formatMessage = useFormatMessage();\n  const { push } = useHistory();\n  const onCancel = () => push(pushParam);\n  const [query] = useQuery([querySelector]);\n  const loadOrderProcesses = (filter) =>\n    listOrderProcesses(filter).then(({ data }) =>\n      data.map(({ name, id }) => ({ label: name, value: id }))\n    );\n\n  const onSubmit = (toLink, toUnlink) => {\n    onCancel();\n    dispatch(\n      setOrderProcess(toLink, toUnlink, {\n        object_type: objectType,\n        app_name: APP_NAME[objectType],\n        object_id: query[querySelector]\n      })\n    ).then(() =>\n      dispatch(\n        addNotification({\n          dismissable: true,\n          variant: 'success',\n          title: formatMessage(\n            orderProcessesMessages.setOrderProcessNotificationTitle\n          ),\n          description: formatMessage(\n            orderProcessesMessages.setOrderProcessNotificationDescription,\n            {\n              linked: toLink.length,\n              unlinked: toUnlink.length\n            }\n          )\n        })\n      )\n    );\n  };\n\n  return (\n    <TaggingModal\n      getInitialTags={() =>\n        getLinkedOrderProcesses(objectType, query[querySelector]).then(\n          ({ data }) => data\n        )\n      }\n      title={formatMessage(orderProcessesMessages.setOrderProcess)}\n      onClose={onCancel}\n      onSubmit={onSubmit}\n      loadTags={loadOrderProcesses}\n      existingTagsMessage={formatMessage(\n        orderProcessesMessages.currentOrderProcesses\n      )}\n      subTitle={formatMessage(orderProcessesMessages.setOrderProcessSubtitle, {\n        strong: Bold,\n        objectType\n      })}\n    />\n  );\n};\n\nSetOrderProcessModal.propTypes = {\n  pushParam: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string\n  }).isRequired,\n  objectType: PropTypes.oneOf(['PortfolioItem', 'Portfolio']).isRequired,\n  querySelector: PropTypes.string.isRequired\n};\n\nexport default SetOrderProcessModal;\n","import { createContext } from 'react';\n\nconst AppContext = createContext({});\n\nexport default AppContext;\n","import {\n  getAxiosInstance,\n  getPortfolioApi,\n  getPortfolioItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { sanitizeValues } from '../shared/helpers';\nimport { defaultSettings } from '../shared/pagination';\nimport {\n  AnyObject,\n  ApiCollectionResponse,\n  RestorePortfolioItemConfig\n} from '../../types/common-types';\nimport {\n  Portfolio,\n  PortfolioItem,\n  RestoreKey\n} from '@redhat-cloud-services/catalog-client';\nimport { AxiosPromise, AxiosResponse } from 'axios';\nimport { Store } from 'redux';\nimport { Source } from '@redhat-cloud-services/sources-client';\n\nconst axiosInstance = getAxiosInstance();\nconst portfolioApi = getPortfolioApi();\nconst portfolioItemApi = getPortfolioItemApi();\n\nexport const listPortfolios = (\n  filters: AnyObject = {},\n  { limit, offset, sortDirection = 'asc' } = defaultSettings\n): Promise<Portfolio[]> => {\n  const filterQuery = Object.entries(filters).reduce((acc, [key, value]) => {\n    if (!value) {\n      return acc;\n    }\n\n    const partial =\n      key === 'sort_by'\n        ? `sort_by=${value}:${sortDirection}`\n        : `filter[${key}][contains_i]=${value}`;\n    return `${acc}&${partial}`;\n  }, '');\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios?limit=${limit}&offset=${offset}${filterQuery}`\n  );\n};\n\nexport const listPortfolioItems = (\n  limit = 50,\n  offset = 0,\n  filter = ''\n): Promise<ApiCollectionResponse<PortfolioItem>> => {\n  return axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n    )\n    .then(\n      (portfolioItems: ApiCollectionResponse<PortfolioItem & AnyObject>) => {\n        const portfolioReference = portfolioItems.data.reduce<AnyObject>(\n          (acc, curr, index) =>\n            curr.portfolio_id\n              ? {\n                  ...acc,\n                  [curr.portfolio_id]: acc[curr.portfolio_id]\n                    ? [...acc[curr.portfolio_id], index]\n                    : [index]\n                }\n              : acc,\n          {}\n        );\n        return axiosInstance\n          .get<ApiCollectionResponse<Portfolio>>(\n            `${CATALOG_API_BASE}/portfolios?${Object.keys(portfolioReference)\n              .map((id) => `filter[id][]=${id}`)\n              .join('&')}`\n          )\n          .then(({ data }) => ({\n            portfolioItems,\n            portfolioReference,\n            portfolios: data\n          }));\n      }\n    )\n    .then(({ portfolioItems, portfolioReference, portfolios }) => {\n      portfolios.forEach(\n        ({ id, name }) =>\n          id &&\n          portfolioReference[id] &&\n          portfolioReference[id].forEach((portfolioItemIndex: number) => {\n            portfolioItems.data[portfolioItemIndex].portfolioName = name;\n          })\n      );\n      return portfolioItems;\n    });\n};\n\nexport const getPortfolio = (portfolioId: string): AxiosPromise<Portfolio> =>\n  portfolioApi.showPortfolio(portfolioId);\n\nexport const getPortfolioItemsWithPortfolio = (\n  portfolioId: string,\n  { limit, offset, filter = '' } = defaultSettings\n): Promise<ApiCollectionResponse<PortfolioItem>> =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios/${portfolioId}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n\n// TO DO - change to use the API call that adds multiple items to a portfolio when available\nexport const addPortfolio = async (\n  portfolioData: Partial<Portfolio>,\n  items: string[]\n): Promise<Portfolio> => {\n  const portfolio = await portfolioApi.createPortfolio(portfolioData);\n  if (portfolio && items && items.length > 0) {\n    await addToPortfolio((portfolio as Portfolio).id!, items);\n  }\n\n  return (portfolio as unknown) as Promise<Portfolio>;\n};\n\nexport const addToPortfolio = (\n  portfolioId: string,\n  items: string[]\n): Promise<AxiosResponse<PortfolioItem>[]> =>\n  Promise.all(\n    items.map((item) =>\n      portfolioItemApi.createPortfolioItem({\n        portfolio_id: portfolioId,\n        service_offering_ref: item\n      })\n    )\n  );\n\nexport const updatePortfolio = (\n  { id, ...portfolioData }: Partial<Portfolio>,\n  store: Store\n): AxiosPromise<Portfolio> =>\n  portfolioApi.updatePortfolio(\n    id!,\n    sanitizeValues(portfolioData, 'Portfolio', store)\n  );\n\nexport const removePortfolio = (portfolioId: string): AxiosPromise =>\n  portfolioApi.destroyPortfolio(portfolioId);\n\nexport const removePortfolioItem = (\n  portfolioItemId: string\n): AxiosPromise<RestoreKey> =>\n  portfolioItemApi.destroyPortfolioItem(portfolioItemId);\n\nexport const removePortfolioItems = (portfolioItemIds: string[]) =>\n  Promise.all(\n    portfolioItemIds.map(async (itemId) => {\n      const { restore_key } = (await removePortfolioItem(itemId)) as RestoreKey;\n      return {\n        portfolioItemId: itemId,\n        restoreKey: restore_key\n      };\n    })\n  );\n\nexport const fetchProviderControlParameters = (\n  portfolioItemId: string\n): Promise<AnyObject> =>\n  axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}/provider_control_parameters`\n    )\n    .then((data: AnyObject) => ({\n      required: [],\n      ...data,\n      properties: {\n        ...data.properties,\n        namespace: {\n          ...data.properties.namespace,\n          enum: Array.from(new Set([...data.properties.namespace.enum]))\n        }\n      }\n    }));\n\nexport const updatePortfolioItem = (\n  { id, ...portfolioItem }: Partial<PortfolioItem>,\n  store: Store\n): AxiosPromise<PortfolioItem> =>\n  portfolioItemApi.updatePortfolioItem(\n    id!,\n    sanitizeValues(portfolioItem, 'PortfolioItem', store)\n  );\n\nexport const fetchPortfolioByName = (\n  name = ''\n): Promise<ApiCollectionResponse<Portfolio>> =>\n  axiosInstance.get(`${CATALOG_API_BASE}/portfolios`, {\n    params: {\n      filter: {\n        name\n      }\n    }\n  });\n\nexport const restorePortfolioItems = (\n  restoreData: RestorePortfolioItemConfig[]\n): Promise<AxiosResponse<PortfolioItem>[]> =>\n  Promise.all(\n    restoreData.map(({ portfolioItemId, restoreKey }) =>\n      portfolioItemApi.unDeletePortfolioItem(portfolioItemId, {\n        restore_key: restoreKey\n      })\n    )\n  );\n\nexport const copyPortfolio = (portfolioId: string): AxiosPromise<Portfolio> =>\n  portfolioApi.postCopyPortfolio(portfolioId);\n\nexport const copyPortfolioItem = (\n  portfolioItemId: string,\n  copyObject: Partial<PortfolioItem> = {}\n): AxiosPromise<PortfolioItem> =>\n  portfolioItemApi.postCopyPortfolioItem(portfolioItemId, copyObject);\n\nexport const uploadPortfolioItemIcon = (\n  portfolioItemId: string,\n  file: File,\n  iconId?: string\n): Promise<void> => {\n  const data = new FormData();\n  data.append('content', file, file.name);\n  if (iconId) {\n    return axiosInstance.patch(`${CATALOG_API_BASE}/icons/${iconId}`, data);\n  }\n\n  data.append('portfolio_item_id', portfolioItemId);\n  return axiosInstance.post(`${CATALOG_API_BASE}/icons`, data, {\n    headers: {\n      accept: 'application/json',\n      'Content-Type': `multipart/form-data; boundary=${\n        (data as AnyObject)._boundary\n      }`\n    }\n  });\n};\n\nexport interface GetPortfolioItemDetailParams {\n  portfolioItem: string;\n  source: string;\n}\nexport const getPortfolioItemDetail = (\n  params: GetPortfolioItemDetailParams\n): Promise<[PortfolioItem, Source]> =>\n  Promise.all([\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/portfolio_items/${params.portfolioItem}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${params.source}`)\n      .catch((error) => {\n        if (error.status === 404) {\n          return {\n            object: 'platform',\n            notFound: true\n          };\n        }\n\n        throw error;\n      })\n  ]);\n\n// TODO move to portfolio reducer\ninterface PortfolioReducerPlaceholder {\n  selectedPortfolio?: Portfolio;\n  portfolios: ApiCollectionResponse<Portfolio>;\n}\n\nexport const getPortfolioFromState = (\n  portfolioReducer: PortfolioReducerPlaceholder,\n  portfolioId: string\n): Portfolio | undefined =>\n  portfolioReducer.selectedPortfolio &&\n  portfolioReducer.selectedPortfolio.id === portfolioId\n    ? portfolioReducer.selectedPortfolio\n    : portfolioReducer.portfolios.data.find(({ id }) => id === portfolioId);\n\nexport const undeletePortfolio = (\n  portfolioId: string,\n  restoreKey: string\n): Promise<Portfolio> =>\n  axiosInstance.post(`${CATALOG_API_BASE}/portfolios/${portfolioId}/undelete`, {\n    restore_key: restoreKey\n  });\n","const { defineMessages } = require('react-intl');\n\nconst orderProcessesMessages = defineMessages({\n  noOrderProcessesDescription: {\n    id: 'order-proces.empty.no-order-processes',\n    defaultMessage: 'No order processes found.'\n  },\n  noOrderProcessesFilterDescription: {\n    id: 'order-process.empty.no-results',\n    defaultMessage: 'No order processes match your filter criteria.'\n  },\n  orderProcessesFilter: {\n    id: 'order-process.filter.placeholder',\n    defaultMessage: 'Filter by name'\n  },\n  title: {\n    id: 'order-process.toolbar.title',\n    defaultMessage: 'Order processes'\n  },\n  noOrderProcesses: {\n    id: 'order-process.toolbar.order-process',\n    defaultMessage: 'No order processes'\n  },\n  orderProcess: {\n    id: 'order-process.toolbar.order-process',\n    defaultMessage: 'Order process'\n  },\n  addProcessSuccessTitle: {\n    id: 'order-process.actions.addProcessSuccessTitle',\n    defaultMessage: 'Success adding order process'\n  },\n  addProcessSuccessDescription: {\n    id: 'order-process.actions.addProcessSuccessDescription',\n    defaultMessage: 'The order process was added successfully.'\n  },\n  setOrderProcess: {\n    id: 'order-process.actions.set',\n    defaultMessage: 'Set order processes'\n  },\n  setOrderProcessSubtitle: {\n    id: 'order-process.tags.set',\n    defaultMessage: 'Set order processes for <strong>{objectType}</strong>'\n  },\n  currentOrderProcesses: {\n    id: 'order-process.set-order-process.current',\n    defaultMessage: 'Current order processes'\n  },\n  setOrderProcessNotificationTitle: {\n    id: 'order-process.notification.title',\n    defaultMessage: 'Success updating order process'\n  },\n  setOrderProcessNotificationDescription: {\n    id: 'order-process.notification.description',\n    defaultMessage:\n      // eslint-disable-next-line max-len\n      '{linked, plural, =0 {} other {{linked, number} {linked, plural, one {order process was} other {order processes were}} linked.}} {unlinked, plural, =0{} other {{unlinked, number} {unlinked, plural, one {order process was} other {order processes were}} unlinked.}}'\n  },\n  orderProcessName: {\n    id: 'order-process.name',\n    defaultMessage: 'Order process name'\n  },\n  enterOrderProcessName: {\n    id: 'order-process.enterName',\n    defaultMessage: 'Enter a name for the order process'\n  },\n  orderProcesses: {\n    id: 'order-process.orderProcesses',\n    defaultMessage: 'order processes'\n  },\n  removeProcessSuccessTitle: {\n    id: 'order-process.removeProcessSuccessTitle',\n    defaultMessage: 'Success removing order process'\n  },\n  removeProcessSuccessDescription: {\n    id: 'order-process.removeProcessSuccessDescription',\n    defaultMessage: 'The order process was removed successfully.'\n  },\n  removeProcessesSuccessTitle: {\n    id: 'order-process.removeProcessesSuccessTitle',\n    defaultMessage: 'Success removing order processes'\n  },\n  removeProcessesSuccessDescription: {\n    id: 'order-process.removeProcessesSuccessDescription',\n    defaultMessage: 'The selected order processes were removed successfully.'\n  },\n  deleteOrderProcess: {\n    id: 'order-process.deleteProcessAriaMenu',\n    defaultMessage: 'Delete order processes'\n  },\n  removeProcessTitle: {\n    id: 'order-process.removeProcessTitle',\n    defaultMessage:\n      'Delete {count, plural, one {order process} other {order processes}}?'\n  },\n  removeProcessAriaLabel: {\n    id: 'order-process.removeProcessAriaLabel',\n    defaultMessage:\n      'Delete {count, plural, one {order process} other {order processes}} modal'\n  },\n  removeProcessDescription: {\n    id: 'order-process.removeProcessDescription',\n    defaultMessage: '{name} will be removed.'\n  },\n  updateProcessSuccessTitle: {\n    id: 'order-process.actions.updateProcessSuccessTitle',\n    defaultMessage: 'Order process {name} was updated'\n  },\n  updateOrderProcess: {\n    id: 'order-process.actions.updateOrderProcess',\n    defaultMessage: 'Edit order process'\n  },\n  createOrderProcess: {\n    id: 'order-process.actions.createOrderProcess',\n    defaultMessage: 'Create order process'\n  }\n});\n\nexport default orderProcessesMessages;\n","import { createBrowserHistory } from 'history';\n\nconst pathName = window.location.pathname.split('/');\npathName.shift();\n\nlet prefix = '/';\nif (pathName[0] === 'beta') {\n  prefix = `/${pathName.shift()}/`;\n}\n\n/**\n * Make sure that the [1] fragment is present in the pathname.\n * Otherwise we could end up with /undefined/ which will be transformed by the router to //\n */\nconst basename = `${prefix}${pathName[0]}/${pathName[1] ? pathName[1] : ''}`;\n\nconst catalogHistory = createBrowserHistory({\n  basename\n});\n\nexport const release = prefix;\nexport default catalogHistory;\n","import React, { useContext } from 'react';\nimport { Route } from 'react-router-dom';\nimport UserContext from '../user-context';\nimport PropTypes from 'prop-types';\nimport { hasPermission } from '../helpers/shared/helpers';\nimport { UnauthorizedRedirect } from '../smart-components/error-pages/error-redirects';\n\nconst ReidrectOnAccess = (props) => (\n  <Route {...props}>\n    <UnauthorizedRedirect />\n  </Route>\n);\n\nconst hasCapability = (userCapabilities, requiredCapabilities) =>\n  requiredCapabilities\n    ? Array.isArray(requiredCapabilities)\n      ? requiredCapabilities.some(\n          (capability) => userCapabilities[capability] !== false\n        )\n      : userCapabilities[requiredCapabilities] !== false\n    : true;\n\nconst CatalogRoute = ({\n  permissions,\n  userCapabilities,\n  requiredCapabilities,\n  ...props\n}) => {\n  const { permissions: userPermissions } = useContext(UserContext);\n  const hasAccess =\n    hasCapability(userCapabilities, requiredCapabilities) &&\n    hasPermission(userPermissions, permissions);\n\n  if (!hasAccess) {\n    return <ReidrectOnAccess {...props} />;\n  }\n\n  return <Route {...props} />;\n};\n\nCatalogRoute.propTypes = {\n  permissions: PropTypes.arrayOf(PropTypes.string),\n  userCapabilities: PropTypes.object,\n  requiredCapabilities: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ])\n};\n\nCatalogRoute.defaultProps = {\n  permissions: [],\n  userCapabilities: {}\n};\n\nexport default CatalogRoute;\n","const { defineMessages } = require('react-intl');\n\nconst portfolioMessages = defineMessages({\n  portfoliosTitle: {\n    id: 'portfolios.heading.title',\n    defaultMessage: 'Portfolios'\n  },\n  removeItemsNotification: {\n    id: 'portfolio.notifications.remove.portfolio-items',\n    defaultMessage:\n      'You have removed {count, plural, one {} other {<b>{count, number}</b>}} {count, plural, one {<b>{productName}</b>} other {<b>products</b>} } from the {portfolioName} portfolio. <a>Undo</a> if this was a mistake.' // eslint-disable-line max-len\n  },\n  removePortfolioNotification: {\n    id: 'portfolio.notifications.remove.portfolio',\n    defaultMessage:\n      'The portfolio was removed successfully. You can <a>Undo</a> this action if this was a mistake.'\n  },\n  modalCreateTitle: {\n    id: 'portfolio.modal.add.title',\n    defaultMessage: 'Create portfolio'\n  },\n  modalEditTitle: {\n    id: 'portfolio.modal.edit.title',\n    defaultMessage: 'Edit portfolio'\n  },\n  addProducts: {\n    id: 'portfolio.empty.add.products',\n    defaultMessage: 'Add products'\n  },\n  emptyNoProducts: {\n    id: 'portfolio.empty.no-products',\n    defaultMessage: 'No products in your portfolio'\n  },\n  portfoliosPlaceholder: {\n    id: 'portfolios.filters.placeholder',\n    defaultMessage: 'Filter by portfolio'\n  },\n  portfoliosNoData: {\n    id: 'portfolios.empty.noData.title',\n    defaultMessage: 'No portfolios'\n  },\n  portfoliosNoDataDescription: {\n    id: 'portfolios.empty.noData.description',\n    defaultMessage: 'No portfolios match your filter criteria.'\n  },\n  portfolioRemoveDescription: {\n    id: 'portfolio.remove.modal.description',\n    defaultMessage:\n      'This action will permanently delete portfolio {name} and its data.'\n  },\n  portfolioRemoveTitle: {\n    id: 'portfolio.remove.modal.title',\n    defaultMessage: 'Delete Portfolio?'\n  },\n  portfolioSharePermissions: {\n    id: 'portfolio.share.modal.permissions',\n    defaultMessage: 'Select the share permissions'\n  },\n  portfolioShareGroups: {\n    id: 'portfolio.share.modal.groups',\n    defaultMessage: 'Select a group'\n  },\n  portfolioShareTitle: {\n    id: 'portfolio.share.modal.title',\n    defaultMessage: 'Share portfolio'\n  },\n  portfolioShareApply: {\n    id: 'portfolio.share.modal.apply',\n    defaultMessage: 'Apply'\n  },\n  portfolioShareDescription: {\n    id: 'portfolio.share.modal.description',\n    defaultMessage: 'Share <strong>{name}</strong> portfolio'\n  },\n  addProducstPlatformTitle: {\n    id: 'portfolio.add.platform.title.empty',\n    defaultMessage: 'Please choose platform'\n  },\n  addProducstPlatformDescription: {\n    id: 'portfolio.add.platform.description.empty',\n    defaultMessage:\n      'In order to select products for your portfolio you must choose platform first'\n  },\n  addProducstFilterTitle: {\n    id: 'portfolio.add.platform.filter.empty',\n    defaultMessage: 'No products match filter parameters'\n  },\n  copyItemTitle: {\n    id: 'portfolio.item.copy',\n    defaultMessage: 'Copy product'\n  },\n  portfolioItemSurvey: {\n    id: 'portfolio.item.detail.actions.survey',\n    defaultMessage: 'Edit survey'\n  },\n  portfolioItemOrder: {\n    id: 'portfolio.item.detail.actions.order',\n    defaultMessage: 'Order'\n  },\n  portfolioItemIconTitle: {\n    id: 'portfolio.item.icon.upload.notification',\n    defaultMessage: 'Icon upload error'\n  },\n  portfolioItemOverview: {\n    id: 'portfolio.item.detail.overview',\n    defaultMessage: 'Overview'\n  },\n  portfolioItemSupport: {\n    id: 'portfolio.item.detail.support',\n    defaultMessage: 'Learn more'\n  },\n  portfolioItemDocumentation: {\n    id: 'portfolio.item.detail.documentation',\n    defaultMessage: 'Documentation'\n  },\n  portfolioItemDocLink: {\n    id: 'portfolio.item.detail.doclink',\n    defaultMessage: 'Doc link'\n  },\n  restoreSurvey: {\n    id: 'portfolio.item.survey.restore',\n    defaultMessage: 'Restore to Ansible Tower version'\n  },\n  surveyTitle: {\n    id: 'portfolio.item.survey.edit',\n    defaultMessage: 'Editing survey: {name}'\n  },\n  sourceUnavaiable: {\n    id: 'portfolio.detail.alert.source.unavailable',\n    defaultMessage: 'The platform for this product is unavailable'\n  },\n  objectUnavaiable: {\n    id: 'portfolio.detail.alert.unavailable',\n    defaultMessage: 'The {object} for this product is no longer available'\n  },\n  backToProducts: {\n    id: 'portfolio.detail.back-to-products',\n    defaultMessage: 'Back to products'\n  },\n  editProduct: {\n    id: 'portfolio.item.edit.title',\n    defaultMessage: 'Edit product'\n  },\n  shareTooltip: {\n    id: 'portfolio.share.add.tooltip',\n    defaultMessage: 'Share portfolio with selected group and permissions.'\n  },\n  shareErrorMissingGroup: {\n    id: 'portfolio.share.add.missing-group',\n    defaultMessage: 'Select group to share portfolio.'\n  },\n  shareErrorMissingPermission: {\n    id: 'portfolio.share.add.missing-permission',\n    defaultMessage: 'Assign permissions to selected group.'\n  },\n  shareErrorMissingData: {\n    id: 'portfolio.share.add.missing-data',\n    defaultMessage: 'Choose group and permissions.'\n  },\n  shareDuplicate: {\n    id: 'portfolio.share.add.duplicate',\n    defaultMessage: 'Portfolio is already shared with this group.'\n  },\n  noShares: {\n    id: 'portfolio.share.add.no-shares',\n    defaultMessage: 'To share portfolio select a group and permissions'\n  },\n  shareGroupsAccess: {\n    id: 'share.groups.access',\n    defaultMessage: 'Groups with access'\n  },\n  shareSuccessTitle: {\n    id: 'share.notification.success.title',\n    defaultMessage: 'Share permissions were updated successfully'\n  },\n  shareSuccessTitleOnlySharing: {\n    id: 'share.notification.success.share.title',\n    defaultMessage: 'Success sharing portfolio'\n  },\n  shareSuccessTitleOnlyUnsharing: {\n    id: 'share.notification.success.unshare.title',\n    defaultMessage: 'Success unsharing portfolio'\n  },\n  shareSuccessTitleOnlyChaningPermissions: {\n    id: 'share.notification.success.change-permission.title',\n    defaultMessage: 'Success changing permissions'\n  },\n  shareSuccessDescriptionOnlySharing: {\n    id: 'share.notification.success.share.description',\n    defaultMessage: 'Portfolio <b>{name}</b> was shared with {group}.'\n  },\n  shareSuccessDescriptionOnlyUnsharing: {\n    id: 'share.notification.success.unshare.description',\n    defaultMessage: 'Portfolio <b>{name}</b> was unshared with {group}.'\n  },\n  shareSuccessDescriptionOnlyChaningPermissions: {\n    id: 'share.notification.success.change-permission.description',\n    defaultMessage: 'Share permissions for <b>{group}</b> were updated.'\n  },\n  shareSuccessTwoGroup: {\n    id: 'share.notification.success.two-groups',\n    defaultMessage: '{group1} and {group2}'\n  },\n  shareSuccessMultipleGroups: {\n    id: 'share.notification.success.multiple-groups',\n    defaultMessage: '{count} groups'\n  },\n  addSuccessTitle: {\n    id: 'portfolio.add.success.title',\n    defaultMessage: 'Success adding portfolio'\n  },\n  addSuccessDescription: {\n    id: 'portfolio.add.success.description',\n    defaultMessage: 'Portfolio <b>{name}</b> was added successfully.'\n  }\n});\n\nexport default portfolioMessages;\n","import { getAxiosInstance, getOrderProcessApi } from '../shared/user-login';\nimport { defaultSettings } from '../shared/pagination';\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport {\n  OrderProcess,\n  ResourceObject\n} from '@redhat-cloud-services/catalog-client';\nimport {\n  ApiCollectionResponse,\n  ApiMetadata,\n  SelectOptions\n} from '../../types/common-types';\nimport { AxiosResponse } from 'axios';\nconst axiosInstance = getAxiosInstance();\nconst orderProcessApi = getOrderProcessApi();\n\nexport const listOrderProcesses = (\n  filter = '',\n  { limit, offset }: ApiMetadata = defaultSettings\n): Promise<ApiCollectionResponse<OrderProcess>> =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_processes?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n\nexport const loadProductOptions = (\n  filterValue = ''\n): Promise<SelectOptions> => {\n  return getAxiosInstance()\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items?filter[name][contains]=${filterValue}`\n    )\n    .then(({ data }) =>\n      data.map((item: { name: string; id: string }) => ({\n        label: item.name,\n        value: item.id\n      }))\n    );\n};\n\nexport const fetchOrderProcessByName = (\n  name: string\n): Promise<ApiCollectionResponse<OrderProcess>> => listOrderProcesses(name);\n\nexport const fetchOrderProcess = (\n  id: string\n): Promise<ApiCollectionResponse<OrderProcess>> =>\n  (getOrderProcessApi().showOrderProcess(id) as unknown) as Promise<\n    ApiCollectionResponse<OrderProcess>\n  >;\n\nexport const setOrderProcesses = (\n  toTag: string[],\n  toUntag: string[],\n  resourceType: ResourceObject\n): Promise<AxiosResponse<void>[]> => {\n  const promises = [\n    ...toTag.map((id) =>\n      orderProcessApi.linkTagToOrderProcess(id, resourceType)\n    ),\n    ...toUntag.map((id) =>\n      orderProcessApi.unlinkTagFromOrderProcess(id, resourceType)\n    )\n  ];\n  return Promise.all(promises);\n};\n\nexport const getLinkedOrderProcesses = (\n  objectType: string,\n  objectId: string\n): Promise<OrderProcess> =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_processes?app_name=catalog&object_type=${objectType}&object_id=${objectId}`\n  );\n\nexport const removeOrderProcess = (processId: string): Promise<void> =>\n  (getOrderProcessApi().destroyOrderProcess(processId) as unknown) as Promise<\n    void\n  >;\n\nexport const removeOrderProcesses = (\n  selectedProcesses: string[]\n): Promise<AxiosResponse<void>[]> =>\n  Promise.all(\n    selectedProcesses.map(\n      async (processId) =>\n        await getOrderProcessApi().destroyOrderProcess(processId)\n    )\n  );\n\nexport const updateOrderProcess = async (\n  id: string,\n  {\n    before_portfolio_item_id,\n    after_portfolio_item_id,\n    ...data\n  }: Partial<OrderProcess>\n): Promise<OrderProcess> => {\n  const op = await getOrderProcessApi().updateOrderProcess(id, {\n    name: data.name,\n    description: data.description,\n    before_portfolio_item_id: before_portfolio_item_id || '',\n    after_portfolio_item_id: after_portfolio_item_id || ''\n  });\n\n  return op as OrderProcess;\n};\n\nexport const addOrderProcess = async ({\n  before_portfolio_item_id,\n  after_portfolio_item_id,\n  ...data\n}: Partial<OrderProcess>): Promise<[\n  OrderProcess,\n  OrderProcess | undefined\n]> => {\n  const op = await getOrderProcessApi().createOrderProcess({\n    name: data.name,\n    description: data.description\n  });\n\n  const promiseB =\n    before_portfolio_item_id !== undefined\n      ? getOrderProcessApi().addOrderProcessBeforeItem(\n          ((op as unknown) as OrderProcess).id as string,\n          { portfolio_item_id: before_portfolio_item_id }\n        )\n      : {};\n  const promiseA =\n    after_portfolio_item_id !== undefined\n      ? getOrderProcessApi().addOrderProcessAfterItem(\n          ((op as unknown) as OrderProcess).id as string,\n          { portfolio_item_id: after_portfolio_item_id }\n        )\n      : {};\n  return Promise.all([promiseA, promiseB]);\n};\n","export const CATALOG_API_BASE = `${process.env.BASE_PATH}/catalog/v1.2`;\nexport const SOURCES_API_BASE = `${process.env.BASE_PATH}/sources/v1.0`;\nexport const APPROVAL_API_BASE = `${process.env.BASE_PATH}/approval/v1.2`;\nexport const TOPOLOGICAL_INVENTORY_API_BASE = `${process.env.BASE_PATH}/topological-inventory/v1.0`;\nexport const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\nexport const permissionValues = ['order', 'read', 'update'];\n\nexport const permissionOptions = [\n  {\n    value: 'order,read,update',\n    label: 'Can order/edit'\n  },\n  {\n    value: 'order,read',\n    label: 'Can order/view'\n  }\n];\n\nexport const PORTFOLIO_RESOURCE_TYPE = 'Portfolio';\nexport const PORTFOLIO_ITEM_RESOURCE_TYPE = 'PortfolioItem';\nexport const INVENTORY_RESOURCE_TYPE = 'ServiceInventory';\nexport const DEFAULT_MAX_LENGTH = 64;\n\nexport const APP_NAME = {\n  Portfolio: 'catalog',\n  PortfolioItem: 'catalog',\n  ServiceInventory: 'topology'\n};\n\nexport const BEFORE_TYPE = 'before';\nexport const AFTER_TYPE = 'after';\n","import { Request } from '@redhat-cloud-services/approval-client';\nimport {\n  ServicePlan,\n  Order,\n  PortfolioItem,\n  Portfolio\n} from '@redhat-cloud-services/catalog-client';\nimport { Source } from '@redhat-cloud-services/sources-client';\nimport {\n  FETCH_SERVICE_PLANS,\n  LIST_ORDERS,\n  FETCH_SERVICE_PLAN_PARAMETERS,\n  SUBMIT_SERVICE_ORDER,\n  SET_SELECTED_PLAN,\n  FETCH_REQUESTS,\n  FETCH_ORDER_ITEMS,\n  SET_LOADING_STATE,\n  SET_ORDERS,\n  FETCH_ORDERS,\n  SET_ORDER_DETAIL,\n  FETCH_APPROVAL_REQUESTS\n} from '../action-types';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport {\n  ApiCollectionResponse,\n  AnyObject,\n  ReduxActionHandler\n} from '../../types/common-types';\n\nexport interface OrderDetail extends AnyObject {\n  order: Order;\n  portfolioItem: PortfolioItem;\n  platform: Source;\n  portfolio: Portfolio;\n}\nexport interface OrderReducerState extends AnyObject {\n  servicePlans: ServicePlan[];\n  selectedPlan: ServicePlan;\n  isLoading: boolean;\n  requests: Request[];\n  orderDetail: OrderDetail;\n  orders: ApiCollectionResponse<Order>;\n}\n// Initial State\nexport const orderInitialState: OrderReducerState = {\n  servicePlans: [],\n  selectedPlan: {},\n  isLoading: false,\n  requests: [],\n  orderDetail: {\n    order: {},\n    portfolioItem: {},\n    platform: {},\n    portfolio: {}\n  },\n  orders: {\n    data: [],\n    meta: { ...defaultSettings }\n  }\n};\n\nexport type OrderReducerActionHandler = ReduxActionHandler<OrderReducerState>;\n\nconst setLoadingState: OrderReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isLoading: payload\n});\nconst setServicePlans: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  servicePlans: payload,\n  isLoading: false\n});\nconst setListOrder: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  orders: payload,\n  isLoading: false\n});\nconst setPlanParameters: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  planParameters: payload,\n  isLoading: false\n});\nconst submitServiceOrder: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  ...payload,\n  isLoading: false\n});\nconst selectPlan: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  selectedPlan: payload,\n  isLoading: false\n});\nconst setRequests: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  requests: payload,\n  isLoading: false\n});\nconst setOrderItems: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  orderItems: payload,\n  isLoading: false\n});\nconst setOrders: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  orders: payload\n});\nconst setOrderDetail: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  orderDetail: payload\n});\nconst updateOrderApprovalRequests: OrderReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  orderDetail: {\n    ...state.orderDetail,\n    approvalRequest: payload\n  }\n});\n\nexport default {\n  [`${FETCH_SERVICE_PLANS}_PENDING`]: setLoadingState,\n  [`${FETCH_SERVICE_PLANS}_FULFILLED`]: setServicePlans,\n  [`${LIST_ORDERS}_PENDING`]: setLoadingState,\n  [`${LIST_ORDERS}_FULFILLED`]: setListOrder,\n  [`${FETCH_SERVICE_PLAN_PARAMETERS}_PENDING`]: setLoadingState,\n  [`${FETCH_SERVICE_PLAN_PARAMETERS}_FULFILLED`]: setPlanParameters,\n  [`${SUBMIT_SERVICE_ORDER}_PENDING`]: setLoadingState,\n  [`${SUBMIT_SERVICE_ORDER}_FULFILLED`]: submitServiceOrder,\n  [SET_SELECTED_PLAN]: selectPlan,\n  [`${FETCH_REQUESTS}_PENDING`]: setLoadingState,\n  [`${FETCH_REQUESTS}_FULFILLED`]: setRequests,\n  [`${FETCH_ORDER_ITEMS}_PENDING`]: setLoadingState,\n  [`${FETCH_ORDER_ITEMS}_FULFILLED`]: setOrderItems,\n  [SET_LOADING_STATE]: setLoadingState,\n  [`${FETCH_ORDERS}_FULFILLED`]: setOrders,\n  [`${FETCH_ORDERS}_PENDING`]: setLoadingState,\n  [SET_ORDERS]: setOrders,\n  [`${SET_ORDER_DETAIL}_FULFILLED`]: setOrderDetail,\n  [SET_ORDER_DETAIL]: setOrderDetail,\n  [`${FETCH_APPROVAL_REQUESTS}_FULFILLED`]: updateOrderApprovalRequests\n};\n","import {\n  FETCH_PLATFORM,\n  FETCH_PLATFORMS,\n  FETCH_PLATFORM_ITEMS,\n  FETCH_PLATFORM_ITEM,\n  FILTER_PLATFORM_ITEMS,\n  FETCH_MULTIPLE_PLATFORM_ITEMS,\n  SET_LOADING_STATE,\n  FETCH_PLATFORM_INVENTORIES,\n  SET_INVENTORIES_LOADING_STATE,\n  FETCH_SERVICE_OFFERING,\n  SET_SOURCETYPE_ICONS\n} from '../action-types';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport {\n  StringObject,\n  ApiCollectionResponse,\n  AnyObject,\n  ReduxActionHandler\n} from '../../types/common-types';\nimport {\n  Source,\n  ServiceOffering,\n  ServiceInventory\n} from '@redhat-cloud-services/sources-client';\n\nexport interface ServiceOfferingDetail {\n  service: ServiceOffering;\n  source: Source;\n}\nexport interface PlatformItemsObject {\n  [key: string]: ApiCollectionResponse<ServiceOffering>;\n}\nexport interface PlatformReducerState extends AnyObject {\n  platformIconMapping: StringObject;\n  sourceTypeIcons: StringObject;\n  isPlatformDataLoading: boolean;\n  selectedPlatform: Source;\n  platforms: Source[];\n  platformItems: PlatformItemsObject;\n  platformInventories: ApiCollectionResponse<ServiceInventory>;\n  platformItem: ServiceOffering;\n  platform: Source;\n  filterValue: string;\n  serviceOffering: ServiceOfferingDetail;\n}\nexport type PlatformReducerActionHandler = ReduxActionHandler<\n  PlatformReducerState\n>;\n\nexport const platformInitialState: PlatformReducerState = {\n  platformIconMapping: {},\n  sourceTypeIcons: {},\n  isPlatformDataLoading: false,\n  selectedPlatform: {},\n  platforms: [],\n  platformItems: {},\n  platformInventories: {\n    data: [],\n    meta: defaultSettings\n  },\n  platformItem: {},\n  platform: {},\n  filterValue: '',\n  serviceOffering: {\n    service: {},\n    source: {}\n  }\n};\n\nconst mapPlatformIcons = (\n  platformIconMapping: StringObject,\n  platforms: Source[],\n  sourceTypeIcons: StringObject\n) =>\n  platforms.reduce<StringObject>(\n    (acc, curr) =>\n      !acc[curr.id || 'undefined']\n        ? {\n            ...acc,\n            [curr.id || 'undefined']: sourceTypeIcons[\n              curr.source_type_id || 'undefined'\n            ]\n          }\n        : acc,\n    { ...platformIconMapping }\n  );\n\nconst setLoadingState: PlatformReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isPlatformDataLoading: payload\n});\nconst setPlatforms: PlatformReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  platforms: payload,\n  platformIconMapping: mapPlatformIcons(\n    state.platformIconMapping,\n    payload,\n    state.sourceTypeIcons\n  ),\n  isPlatformDataLoading: false\n});\nconst setPlatformItems: PlatformReducerActionHandler = (\n  state,\n  { payload, meta: { platformId } }\n) => ({\n  ...state,\n  platformItems: {\n    ...state.platformItems,\n    [platformId!]: payload\n  },\n  isPlatformDataLoading: false\n});\nconst setMultiplePlatformItems: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  platformItems: {\n    ...state.platformItems,\n    ...payload\n  },\n  isPlatformDataLoading: false\n});\nconst setPortfolioItems: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  portfolioItem: payload,\n  isPlatformDataLoading: false\n});\nconst selectPlatform: PlatformReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  selectedPlatform: payload,\n  isLoading: false\n});\nconst filterPlatformItems: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  filterValue: payload\n});\nconst setInventoriesDataLoadingState: PlatformReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isInventoriesDataLoading: payload\n});\nconst setPlatformInventories: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  platformInventories: payload,\n  isInventoriesDataLoading: false\n});\nconst setServiceOffering: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  serviceOffering: payload\n});\nconst setSourceTypeIcons: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  sourceTypeIcons: payload\n});\n\nexport default {\n  [`${FETCH_PLATFORMS}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORMS}_FULFILLED`]: setPlatforms,\n  [`${FETCH_PLATFORM_ITEMS}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORM_ITEMS}_FULFILLED`]: setPlatformItems,\n  [`${FETCH_PLATFORM_ITEM}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORM_ITEM}_FULFILLED`]: setPortfolioItems,\n  [`${FETCH_PLATFORM}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORM}_FULFILLED`]: selectPlatform,\n  [`${FILTER_PLATFORM_ITEMS}_FULFILLED`]: filterPlatformItems,\n  [`${FETCH_MULTIPLE_PLATFORM_ITEMS}_FULFILLED`]: setMultiplePlatformItems,\n  [SET_LOADING_STATE]: setLoadingState,\n  [`${FETCH_PLATFORM_INVENTORIES}_PENDING`]: setInventoriesDataLoadingState,\n  [`${FETCH_PLATFORM_INVENTORIES}_FULFILLED`]: setPlatformInventories,\n  [SET_INVENTORIES_LOADING_STATE]: setInventoriesDataLoadingState,\n  [`${FETCH_SERVICE_OFFERING}_FULFILLED`]: setServiceOffering,\n  [SET_SOURCETYPE_ICONS]: setSourceTypeIcons\n};\n","import {\n  FETCH_ORDER_PROCESSES,\n  SORT_ORDER_PROCESSES,\n  SET_FILTER_ORDER_PROCESSES\n} from '../action-types';\nimport {\n  ApiCollectionResponse,\n  AnyObject,\n  ReduxActionHandler\n} from '../../types/common-types';\nimport { OrderProcess } from '@redhat-cloud-services/catalog-client';\n\nexport interface OrderProcessReducerState extends AnyObject {\n  orderProcesses: ApiCollectionResponse<OrderProcess>;\n  isLoading: boolean;\n  selectedOrderProcesses: string[];\n}\n\nexport type OrderProcessReducerActionHandler = ReduxActionHandler<\n  OrderProcessReducerState\n>;\n// Initial State\nexport const orderProcessInitialState: OrderProcessReducerState = {\n  orderProcesses: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 50,\n      offset: 0\n    }\n  },\n  filterValue: '',\n  isLoading: false,\n  sortBy: {\n    index: 0,\n    property: 'name',\n    direction: 'asc'\n  },\n  selectedOrderProcesses: []\n};\n\nconst setLoadingState: OrderProcessReducerActionHandler = (state) => ({\n  ...state,\n  isLoading: true\n});\nconst setOrderProcesses: OrderProcessReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  orderProcesses: payload,\n  isLoading: false\n});\nconst setSortOrderProcesses: OrderProcessReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  sortBy: payload,\n  orderProcesses: {\n    ...state.orderProcesses,\n    meta: {\n      ...state.orderProcesses.meta,\n      offset: 0\n    }\n  }\n});\nconst setFilterValue: OrderProcessReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  filterValue: payload,\n  orderProcesses: {\n    ...state.orderProcesses,\n    meta: {\n      ...state.orderProcesses.meta,\n      offset: 0\n    }\n  }\n});\n\nexport default {\n  [`${FETCH_ORDER_PROCESSES}_PENDING`]: setLoadingState,\n  [`${FETCH_ORDER_PROCESSES}_FULFILLED`]: setOrderProcesses,\n  [SORT_ORDER_PROCESSES]: setSortOrderProcesses,\n  [SET_FILTER_ORDER_PROCESSES]: setFilterValue\n};\n","import {\n  FETCH_PORTFOLIO,\n  FETCH_PORTFOLIOS,\n  FETCH_PORTFOLIO_ITEMS,\n  FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO,\n  FETCH_PORTFOLIO_ITEM,\n  FILTER_PORTFOLIO_ITEMS,\n  SELECT_PORTFOLIO_ITEM,\n  UPDATE_PORTFOLIO,\n  SET_LOADING_STATE,\n  REMOVE_PORTFOLIO_ITEMS,\n  RESET_SELECTED_PORTFOLIO,\n  ADD_TEMPORARY_PORTFOLIO,\n  UPDATE_TEMPORARY_PORTFOLIO,\n  DELETE_TEMPORARY_PORTFOLIO,\n  RESTORE_PORTFOLIO_PREV_STATE,\n  SET_PORTFOLIO_ITEMS,\n  UPDATE_TEMPORARY_PORTFOLIO_ITEM,\n  UPDATE_PORTFOLIO_ITEM,\n  RESTORE_PORTFOLIO_ITEM_PREV_STATE\n} from '../action-types';\nimport {\n  ApiCollectionResponse,\n  AnyObject,\n  ReduxActionHandler\n} from '../../types/common-types';\nimport {\n  PortfolioItem,\n  Portfolio\n} from '@redhat-cloud-services/catalog-client';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport interface PortfolioItemStateObject {\n  portfolioItem: PortfolioItem;\n}\nexport interface PortfolioReducerState extends AnyObject {\n  portfolioItems: ApiCollectionResponse<PortfolioItem>;\n  portfolioItem: PortfolioItemStateObject;\n  portfolios: ApiCollectionResponse<Portfolio>;\n  selectedPortfolio: Portfolio;\n  portfolio: Portfolio;\n  filterValue: string;\n  isLoading: boolean;\n}\n\nexport type PortfolioReducerActionHandler = ReduxActionHandler<\n  PortfolioReducerState\n>;\n\nexport const portfoliosInitialState: PortfolioReducerState = {\n  portfolioItems: {\n    data: [],\n    meta: { limit: 50, offset: 0, filter: '' }\n  },\n  portfolioItem: {\n    portfolioItem: {\n      metadata: {\n        user_capabilities: {},\n        statistics: {}\n      }\n    }\n  },\n  portfolios: {\n    data: [],\n    meta: defaultSettings\n  },\n  selectedPortfolio: {\n    metadata: {\n      user_capabilities: {},\n      statistics: {}\n    }\n  },\n  portfolio: {},\n  filterValue: '',\n  isLoading: false\n};\n\nconst setLoadingState: PortfolioReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isLoading: payload\n});\nconst setPortfolios: PortfolioReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  portfolios: payload,\n  isLoading: false\n});\nconst setPortfolioItems: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  portfolioItems: payload,\n  isLoading: false\n});\nconst setPortfolioItem: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  portfolioItem: payload,\n  isLoading: false\n});\nconst selectPortfolio: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  selectedPortfolio: payload,\n  isLoading: false\n});\nconst filterPortfolios: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  filterValue: payload\n});\nconst resetSelectedPortfolio: PortfolioReducerActionHandler = (state) => ({\n  ...state,\n  selectedPortfolio: { metadata: { user_capabilities: {}, statistics: {} } },\n  portfolioItems: portfoliosInitialState.portfolioItems\n});\n\n// these are optimistic UI updates that mutate the portfolio state immediately after user action.\n// State is synchronized with API after actions are sucesfull\nconst addTemporaryPortfolio: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  prevState: { ...state },\n  ...state,\n  portfolios: {\n    ...state.portfolios,\n    data: [\n      ...state.portfolios.data,\n      { ...payload, metadata: { user_capabilities: {}, statistics: {} } }\n    ]\n  }\n});\nconst updateTemporaryPortfolio: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  prevState: { ...state },\n  ...state,\n  selectedPortfolio: {\n    metadata: {\n      ...state.selectedPortfolio.metadata,\n      user_capabilities: {\n        // the client typings define metadaas object which will result it unknow property TS error. So we have to override it\n        ...(state.selectedPortfolio.metadata as AnyObject).user_capabilities\n      }\n    },\n    ...payload\n  },\n  portfolios: {\n    ...state.portfolios,\n    data: state.portfolios.data.map((item) =>\n      item.id === payload.id\n        ? {\n            ...item,\n            ...payload\n          }\n        : item\n    )\n  }\n});\n\nconst deleteTemporaryPortfolio: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  prevState: { ...state },\n  ...state,\n  selectedPortfolio: { metadata: { user_capabilities: {}, statistics: {} } },\n  portfolios: {\n    ...state.portfolios,\n    data: state.portfolios.data.filter(({ id }) => id !== payload)\n  }\n});\n\nconst updateTemporaryPortfolioItem: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  prevState: { ...state },\n  portfolioItem: {\n    ...state.portfolioItem,\n    portfolioItem: {\n      created_at: state.portfolioItem.portfolioItem.created_at,\n      updated_at: new Date().toString(),\n      ...payload\n    }\n  },\n  portfolioItems: {\n    ...state.portfolioItems,\n    data: state.portfolioItems.data.map((item) =>\n      item.id === payload.id\n        ? { created_at: item.created_at, ...payload }\n        : item\n    )\n  }\n});\n\nconst updatePortfolioItem: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  portfolioItem: {\n    ...state.portfolioItem,\n    portfolioItem: payload\n  },\n  portfolioItems: {\n    ...state.portfolioItems,\n    data: state.portfolioItems.data.map((item) =>\n      item.id === payload.id ? { ...payload } : item\n    )\n  }\n});\n\nconst restorePrevState: PortfolioReducerActionHandler = (state) =>\n  state.prevState ? { ...state.prevState } : { ...state };\n\nexport default {\n  [`${FETCH_PORTFOLIOS}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIOS}_FULFILLED`]: setPortfolios,\n  [`${FETCH_PORTFOLIO_ITEMS}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO_ITEMS}_FULFILLED`]: setPortfolioItems,\n  [`${FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO}_FULFILLED`]: setPortfolioItems,\n  [`${FETCH_PORTFOLIO_ITEM}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO_ITEM}_FULFILLED`]: setPortfolioItem,\n  [`${FETCH_PORTFOLIO}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO}_FULFILLED`]: selectPortfolio,\n  [FILTER_PORTFOLIO_ITEMS]: filterPortfolios,\n  [`${SELECT_PORTFOLIO_ITEM}_FULFILLED`]: setPortfolioItem,\n  [SELECT_PORTFOLIO_ITEM]: setPortfolioItem,\n  [`${UPDATE_PORTFOLIO}_FULFILLED`]: selectPortfolio,\n  [SET_LOADING_STATE]: setLoadingState,\n  [`${REMOVE_PORTFOLIO_ITEMS}_PENDING`]: setLoadingState,\n  [RESET_SELECTED_PORTFOLIO]: resetSelectedPortfolio,\n  [ADD_TEMPORARY_PORTFOLIO]: addTemporaryPortfolio,\n  [UPDATE_TEMPORARY_PORTFOLIO]: updateTemporaryPortfolio,\n  [DELETE_TEMPORARY_PORTFOLIO]: deleteTemporaryPortfolio,\n  [RESTORE_PORTFOLIO_PREV_STATE]: restorePrevState,\n  [SET_PORTFOLIO_ITEMS]: setPortfolioItems,\n  [UPDATE_TEMPORARY_PORTFOLIO_ITEM]: updateTemporaryPortfolioItem,\n  [RESTORE_PORTFOLIO_ITEM_PREV_STATE]: restorePrevState,\n  [UPDATE_PORTFOLIO_ITEM]: updatePortfolioItem\n};\n","import { Workflow } from '@redhat-cloud-services/approval-client';\nimport { SET_LOADING_STATE } from '../action-types';\nimport { ASYNC_ACTIONS } from '../action-types/approval-action-types';\nimport { AnyObject, ReduxActionHandler } from '../../types/common-types';\n\nexport interface ApprovalReducerState extends AnyObject {\n  isFetching: boolean;\n  isResolving: boolean;\n  workflows: Workflow[];\n  resolvedWorkflows: Workflow[];\n}\n\nexport type ApprovalReducerActionHandler = ReduxActionHandler<\n  ApprovalReducerState\n>;\n\nexport const approvalInitialState: ApprovalReducerState = {\n  isFetching: false,\n  isResolving: false,\n  workflows: [],\n  resolvedWorkflows: []\n};\n\nconst setLoadingState: ApprovalReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isFetching: payload\n});\nconst setWorkflows: ApprovalReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  isFetching: false,\n  workflows: payload\n});\nconst setResolvingState: ApprovalReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isResolving: payload\n});\nconst setResolvedWorkflows: ApprovalReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  isResolving: false,\n  resolvedWorkflows: payload\n});\n\nexport default {\n  [ASYNC_ACTIONS.FETCH_WORKFLOWS_PENDING]: setLoadingState,\n  [ASYNC_ACTIONS.FETCH_WORKFLOWS_FULFILLED]: setWorkflows,\n  [ASYNC_ACTIONS.RESOLVE_WORKFLOWS_PENDING]: setResolvingState,\n  [ASYNC_ACTIONS.RESOLVE_WORKFLOWS_FULFILLED]: setResolvedWorkflows,\n  [SET_LOADING_STATE]: setLoadingState\n};\n","import { FETCH_RBAC_GROUPS, SET_LOADING_STATE } from '../action-types';\nimport { Group } from '@redhat-cloud-services/rbac-client';\nimport { AnyObject, ReduxActionHandler } from '../../types/common-types';\n\nexport interface RbacReducerState extends AnyObject {\n  rbacGroups: Group[];\n  isLoading: boolean;\n}\n\nexport type RbacReducerActionHandler = ReduxActionHandler<RbacReducerState>;\nexport const rbacInitialState: RbacReducerState = {\n  rbacGroups: [],\n  isLoading: false\n};\n\nconst setLoadingState: RbacReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isLoading: payload\n});\nconst setRbacGroups: RbacReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  rbacGroups: payload,\n  isLoading: false\n});\n\nexport default {\n  [`${FETCH_RBAC_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_RBAC_GROUPS}_FULFILLED`]: setRbacGroups,\n  [SET_LOADING_STATE]: setLoadingState\n};\n","import { ShareInfo } from '@redhat-cloud-services/catalog-client';\nimport { QUERY_PORTFOLIO, SET_LOADING_STATE } from '../action-types';\nimport { ReduxActionHandler } from '../../types/common-types';\n\nexport interface ShareReducerState {\n  shareInfo: ShareInfo[];\n  isLoading: boolean;\n}\n\nexport type ShareReducerActionHandler = ReduxActionHandler<ShareReducerState>;\nexport const shareInfoInitialState: ShareReducerState = {\n  shareInfo: [],\n  isLoading: false\n};\n\nconst setLoadingState: ShareReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isLoading: payload\n});\nconst setShareInfo: ShareReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  shareInfo: payload,\n  isLoading: false\n});\n\nexport default {\n  [`${QUERY_PORTFOLIO}_PENDING`]: setLoadingState,\n  [`${QUERY_PORTFOLIO}_FULFILLED`]: setShareInfo,\n  [SET_LOADING_STATE]: setLoadingState\n};\n","import { SET_OPENAPI_SCHEMA } from '../action-types';\nimport { AnyObject, ReduxActionHandler } from '../../types/common-types';\n\nexport interface OpenApiReducerState extends AnyObject {\n  schema?: AnyObject;\n}\nexport type OpenApiReducerActionHandler = ReduxActionHandler<\n  OpenApiReducerState\n>;\n\nexport const openApiInitialState: OpenApiReducerState = {\n  schema: undefined\n};\nconst setSchema: OpenApiReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  schema: payload\n});\n\nexport default {\n  [SET_OPENAPI_SCHEMA]: setSchema\n};\n","import { SET_LOADING_STATE } from '../redux/action-types';\nimport { Dispatch } from 'redux';\nimport { ReduxAction } from '../types/common-types';\n\nconst loadingStateMiddleware = () => (dispatch: Dispatch) => (\n  action: ReduxAction\n): ReduxAction => {\n  if (action.type.match(/_REJECTED$/)) {\n    dispatch({ type: SET_LOADING_STATE, payload: false });\n  }\n\n  return dispatch(action);\n};\n\nexport default loadingStateMiddleware;\n","import { Dispatch } from 'redux';\nimport { ReduxAction } from '../types/common-types';\n\nconst emptyDataMiddleware = () => (dispatch: Dispatch) => (\n  action: ReduxAction\n): ReduxAction => {\n  const nextAction = { ...action };\n  if (\n    action.type.match(/_FULFILLED$/) &&\n    action.payload &&\n    action.meta &&\n    action.payload.data &&\n    action.payload.meta\n  ) {\n    const noFilter = Object.prototype.hasOwnProperty.call(\n      nextAction.meta,\n      'filters'\n    )\n      ? Object.values(nextAction.meta?.filters || {}).every(\n          (value?: string) => typeof value === 'undefined' || value.length === 0\n        )\n      : nextAction.meta?.filter?.length === 0;\n\n    nextAction.payload.meta.noData =\n      nextAction.payload.meta.count === 0 && noFilter;\n    return dispatch(nextAction);\n  }\n\n  return dispatch(nextAction);\n};\n\nexport default emptyDataMiddleware;\n","import { ReactNode } from 'react';\nimport { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport { AnyObject, ReduxActionHandler } from '../../types/common-types';\n\nexport interface BreadcrumbFragment {\n  pathname: string;\n  searchParams?: string;\n  title?: ReactNode;\n}\nexport interface BreadcrumbsReducerState extends AnyObject {\n  fragments: BreadcrumbFragment[];\n}\n\nexport type BreadcrumbsReducerActionHandler = ReduxActionHandler<\n  BreadcrumbsReducerState\n>;\n\nexport const initialBreadcrumbsState: BreadcrumbsReducerState = {\n  fragments: []\n};\n\nconst initialize: BreadcrumbsReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  fragments: payload\n});\n\nexport default {\n  [INITIALIZE_BREADCRUMBS]: initialize\n};\n","import { IntlShape } from 'react-intl';\nimport { INITIALIZE_I18N } from '../action-types';\nimport { AnyObject, ReduxActionHandler } from '../../types/common-types';\n\nexport type I18nReducerState = Partial<IntlShape> & AnyObject;\nexport type I18nReducerActionHandler = ReduxActionHandler<I18nReducerState>;\n\nexport const i18nInitialState: I18nReducerState = {\n  formatMessage: ({ defaultMessage = '' }) => defaultMessage\n};\nconst initialize: I18nReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  ...payload\n});\n\nexport default {\n  [INITIALIZE_I18N]: initialize\n};\n","import { encodeState } from '../routing/uri-state-manager';\nimport catalogHistory from '../routing/catalog-history';\nimport { Dispatch } from 'redux';\nimport { ReduxAction } from '../types/common-types';\n\nconst viewStateMiddleware = () => (dispatch: Dispatch) => (\n  action: ReduxAction\n): ReduxAction => {\n  if (\n    action.type.match(/_FULFILLED$/) &&\n    action?.payload?.meta &&\n    action?.meta?.storeState\n  ) {\n    const hash = encodeState(\n      {\n        ...action.meta,\n        ...action.payload.meta\n      },\n      action.meta.stateKey\n    );\n    /**\n     * Use replace event in case that app did not compute the viewState hash yet (eg. navigating in main menu).\n     * Use history replace event to prevent the multiple prev routes with the same pathname on stack witouth the hash param.\n     * The browser goBack method will now skip the non hash route.\n     * Users wont have to trigger the goBack action multiple times to get to the actual previous view.\n     */\n    const routingAction =\n      catalogHistory.location.hash && catalogHistory.location.hash !== hash\n        ? catalogHistory.push\n        : catalogHistory.replace;\n    routingAction({\n      pathname: catalogHistory.location.pathname,\n      search: catalogHistory.location.search,\n      hash\n    });\n  }\n\n  return dispatch(action);\n};\n\nexport default viewStateMiddleware;\n","import catalogHistory from '../routing/catalog-history';\nimport { Dispatch } from 'redux';\nimport { ReduxAction } from '../types/common-types';\n\nconst unAuthorizedMiddleware = () => (dispatch: Dispatch) => (\n  action: ReduxAction\n): ReduxAction | void => {\n  const nextAction = { ...action };\n  if (action.type.match(/_REJECTED$/) && action?.payload?.redirect) {\n    setTimeout(() => {\n      catalogHistory.push(action.payload.redirect.pathname, {\n        from: catalogHistory.location\n      });\n    });\n    return;\n  }\n\n  return dispatch(nextAction);\n};\n\nexport default unAuthorizedMiddleware;\n","import promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, {\n  applyReducerHash\n} from '@redhat-cloud-services/frontend-components-utilities/files/cjs/ReducerRegistry';\nimport notifications from '@redhat-cloud-services/frontend-components-notifications/cjs/notifications';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/cjs/notificationsMiddleware';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport orderReducer, {\n  orderInitialState\n} from '../redux/reducers/order-reducer';\nimport platformReducer, {\n  platformInitialState\n} from '../redux/reducers/platform-reducer';\nimport orderProcessReducer, {\n  orderProcessInitialState\n} from '../redux/reducers/order-process-reducer';\nimport portfolioReducer, {\n  portfoliosInitialState\n} from '../redux/reducers/portfolio-reducer';\nimport approvalReducer, {\n  approvalInitialState\n} from '../redux/reducers/approval-reducer';\nimport rbacReducer, { rbacInitialState } from '../redux/reducers/rbac-reducer';\nimport shareReducer, {\n  shareInfoInitialState\n} from '../redux/reducers/share-reducer';\nimport openApiReducer, {\n  openApiInitialState\n} from '../redux/reducers/open-api-reducer';\nimport loadingStateMiddleware from './loading-state-middleware';\nimport emptyDataMiddleware from './empty-data-middleware';\nimport breadcrumbsReducer, {\n  initialBreadcrumbsState\n} from '../redux/reducers/breadcrumbs-reducer';\nimport i18nReducer, { i18nInitialState } from '../redux/reducers/i18n-reducer';\nimport viewStateMiddleware from './view-state-middleware';\nimport unAuthorizedMiddleware from './unauthorized-middleware';\nimport { Store } from 'redux';\n\nconst prodMiddlewares = [\n  notificationsMiddleware({\n    errorTitleKey: ['errors', 'message', 'statusText'],\n    errorDescriptionKey: [\n      'data.errors[0].detail',\n      'data.errors',\n      'data.error',\n      'data.message',\n      'response.body.errors',\n      'data',\n      'errorMessage',\n      'stack'\n    ]\n  })\n];\n\nconst baseMiddlewares = [\n  thunk,\n  promiseMiddleware,\n  unAuthorizedMiddleware,\n  viewStateMiddleware,\n  loadingStateMiddleware,\n  emptyDataMiddleware\n];\nconst registerReducers = (registry: ReducerRegistry): void => {\n  registry.register({\n    orderReducer: applyReducerHash(orderReducer, orderInitialState),\n    platformReducer: applyReducerHash(platformReducer, platformInitialState),\n    orderProcessReducer: applyReducerHash(\n      orderProcessReducer,\n      orderProcessInitialState\n    ),\n    portfolioReducer: applyReducerHash(\n      portfolioReducer,\n      portfoliosInitialState\n    ),\n    approvalReducer: applyReducerHash(approvalReducer, approvalInitialState),\n    rbacReducer: applyReducerHash(rbacReducer, rbacInitialState),\n    shareReducer: applyReducerHash(shareReducer, shareInfoInitialState),\n    openApiReducer: applyReducerHash(openApiReducer, openApiInitialState),\n    breadcrumbsReducer: applyReducerHash(\n      breadcrumbsReducer,\n      initialBreadcrumbsState\n    ),\n    i18nReducer: applyReducerHash(i18nReducer, i18nInitialState),\n    notifications\n  });\n};\n\nexport default (isProd = false): Store => {\n  const registry = new ReducerRegistry({}, [\n    ...baseMiddlewares,\n    ...prodMiddlewares,\n    ...(isProd ? [] : [reduxLogger])\n  ]);\n  registerReducers(registry);\n  return registry.getStore() as Store;\n};\n\nexport const testStore = (): Store => {\n  const registry = new ReducerRegistry({}, [...baseMiddlewares]);\n  registerReducers(registry);\n  return registry.getStore() as Store;\n};\n","import React, { lazy, useEffect } from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport {\n  ADD_PORTFOLIO_ROUTE,\n  EDIT_PORTFOLIO_ROUTE,\n  PORTFOLIOS_ROUTE,\n  NESTED_EDIT_PORTFOLIO_ROUTE,\n  PORTFOLIO_ROUTE,\n  REMOVE_PORTFOLIO_ROUTE,\n  NESTED_REMOVE_PORTFOLIO_ROUTE,\n  SHARE_PORTFOLIO_ROUTE,\n  NESTED_SHARE_PORTFOLIO_ROUTE,\n  WORKFLOW_PORTFOLIO_ROUTE,\n  NESTED_WORKFLOW_PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  NESTED_EDIT_ORDER_PROCESS_ROUTE,\n  EDIT_ORDER_PROCESS_ROUTE\n} from '../../constants/routes';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport CatalogRoute from '../../routing/catalog-route';\nimport useQuery from '../../utilities/use-query';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { PORTFOLIO_RESOURCE_TYPE } from '../../utilities/constants';\nimport {\n  setOrFetchPortfolio,\n  resetSelectedPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport SetOrderProcessModal from '../order-process/set-order-process-modal';\n\nconst CopyPortfolioItemModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"copy-portfolio-item-modal\" */ '../portfolio/portfolio-item-detail/copy-portfolio-item-modal'\n  )\n);\n\nconst OrderModal = lazy(() =>\n  import(/* webpackChunkName: \"order-modal\" */ '../common/order-modal')\n);\n\nconst EditApprovalWorkflow = lazy(() =>\n  import(\n    /* webpackChunkName: \"edit-approval-workflow\" */ '../common/edit-approval-workflow'\n  )\n);\nconst SharePortfolioModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"share-portfolio\" */ '../portfolio/share-portfolio-modal'\n  )\n);\n\nconst RemovePortfolioModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"remove-portfolio\" */ '../portfolio/remove-portfolio-modal'\n  )\n);\n\nconst AddPortfolioModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"add-portfolio\" */ '../portfolio/add-portfolio-modal'\n  )\n);\n\nconst PortfolioRoutes = () => {\n  const viewState = useInitialUriHash();\n  const { pathname } = useLocation();\n\n  const portfolioItemId = useSelector(\n    (state) => state?.portfolioReducer?.portfolioItem?.portfolioItem?.id\n  );\n  const portfolioItemUserCapabilities = useSelector(\n    (state) =>\n      state?.portfolioReducer?.portfolioItem?.portfolioItem?.metadata\n        ?.user_capabilities,\n    shallowEqual\n  );\n  const portfolios = useSelector(\n    (state) => state?.portfolioReducer?.portfolios,\n    shallowEqual\n  );\n  const selectedPortfolio = useSelector(\n    (state) => state?.portfolioReducer?.selectedPortfolio,\n    shallowEqual\n  );\n\n  const { portfolioUserCapabilities, itemName } = useSelector((state) => ({\n    portfolioUserCapabilities:\n      state?.portfolioReducer?.selectedPortfolio?.metadata?.user_capabilities,\n    itemName: () => state?.portfolioReducer?.selectedPortfolio?.name\n  }));\n  const [{ portfolio: id }, search] = useQuery(['portfolio']);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (id && (!selectedPortfolio.id || id !== selectedPortfolio.id)) {\n      dispatch(setOrFetchPortfolio(id, portfolios));\n    }\n  }, [id]);\n\n  return (\n    <div>\n      <Switch>\n        <Route path={[ADD_PORTFOLIO_ROUTE, EDIT_PORTFOLIO_ROUTE]}>\n          <AddPortfolioModal\n            removeQuery\n            viewState={viewState?.portfolio}\n            closeTarget={PORTFOLIOS_ROUTE}\n          />\n        </Route>\n        <CatalogRoute\n          userCapabilities={portfolioUserCapabilities}\n          requiredCapabilities=\"update\"\n          exact\n          path={NESTED_EDIT_PORTFOLIO_ROUTE}\n        >\n          <AddPortfolioModal\n            closeTarget={{ pathname: PORTFOLIO_ROUTE, search }}\n          />\n        </CatalogRoute>\n        <Route path={REMOVE_PORTFOLIO_ROUTE}>\n          <RemovePortfolioModal viewState={viewState?.portfolio} />\n        </Route>\n        <CatalogRoute\n          userCapabilities={portfolioUserCapabilities}\n          requiredCapabilities=\"destroy\"\n          exact\n          path={NESTED_REMOVE_PORTFOLIO_ROUTE}\n        >\n          <RemovePortfolioModal />\n        </CatalogRoute>\n        <Route exact path={SHARE_PORTFOLIO_ROUTE}>\n          <SharePortfolioModal\n            closeUrl={PORTFOLIOS_ROUTE}\n            querySelector=\"portfolio\"\n            removeSearch\n            viewState={viewState?.portfolio}\n            portfolioName={itemName}\n          />\n        </Route>\n        <Route exact path={NESTED_SHARE_PORTFOLIO_ROUTE}>\n          <SharePortfolioModal\n            closeUrl={PORTFOLIO_ROUTE}\n            portfolioName={itemName}\n          />\n        </Route>\n        <Route exact path={WORKFLOW_PORTFOLIO_ROUTE}>\n          <EditApprovalWorkflow\n            pushParam={{ pathname: PORTFOLIOS_ROUTE }}\n            objectType={PORTFOLIO_RESOURCE_TYPE}\n            objectName={itemName}\n            querySelector=\"portfolio\"\n            removeSearch\n            keepHash\n            onClose={() => dispatch(resetSelectedPortfolio())}\n          />\n        </Route>\n        <Route exact path={NESTED_WORKFLOW_PORTFOLIO_ROUTE}>\n          <EditApprovalWorkflow\n            querySelector=\"portfolio\"\n            pushParam={{ pathname: PORTFOLIO_ROUTE, search }}\n            closeUrl={PORTFOLIO_ROUTE}\n            objectType={PORTFOLIO_RESOURCE_TYPE}\n            objectName={itemName}\n          />\n        </Route>\n        <Route exact path={`${PORTFOLIO_ITEM_ROUTE}/order`}>\n          <OrderModal closeUrl={PORTFOLIO_ITEM_ROUTE} />\n        </Route>\n        <Route\n          exact\n          path={[EDIT_ORDER_PROCESS_ROUTE, NESTED_EDIT_ORDER_PROCESS_ROUTE]}\n        >\n          <SetOrderProcessModal\n            querySelector=\"portfolio\"\n            objectType={PORTFOLIO_RESOURCE_TYPE}\n            pushParam={{\n              pathname:\n                pathname === EDIT_ORDER_PROCESS_ROUTE\n                  ? PORTFOLIOS_ROUTE\n                  : PORTFOLIO_ROUTE,\n              search:\n                pathname === NESTED_EDIT_ORDER_PROCESS_ROUTE\n                  ? search\n                  : undefined\n            }}\n          />\n        </Route>\n\n        <CatalogRoute\n          path={`${PORTFOLIO_ITEM_ROUTE}/copy`}\n          requiredCapabilities=\"copy\"\n          userCapabilities={portfolioItemUserCapabilities}\n        >\n          {portfolioItemId && (\n            <CopyPortfolioItemModal\n              portfolioName={itemName()}\n              search={search}\n              portfolioItemId={portfolioItemId}\n              portfolioId={id}\n              closeUrl={PORTFOLIO_ITEM_ROUTE}\n            />\n          )}\n        </CatalogRoute>\n      </Switch>\n    </div>\n  );\n};\n\nexport default PortfolioRoutes;\n","import React, { lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { INVENTORY_RESOURCE_TYPE } from '../../utilities/constants';\nimport useQuery from '../../utilities/use-query';\nimport { useSelector } from 'react-redux';\n\nconst EditApprovalWorkflow = lazy(() =>\n  import(\n    /* webpackChunkName: \"edit-approval-workflow\" */ '../common/edit-approval-workflow'\n  )\n);\n\nconst PlatformRoutes = () => {\n  const [{ platform: id }] = useQuery(['platform']);\n  const { objectName } = useSelector((state) => {\n    const data = state?.platformReducer?.platformInventories?.data;\n    return {\n      objectName: data ? data.find((obj) => obj.id === id)?.name : 'inventory'\n    };\n  });\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/platform/platform-inventories/edit-workflow\">\n          <EditApprovalWorkflow\n            pushParam={{\n              pathname: '/platform/platform-inventories',\n              search: `?platform=${id}`\n            }}\n            objectType={INVENTORY_RESOURCE_TYPE}\n            objectName={objectName}\n            querySelector=\"inventory\"\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default PlatformRoutes;\n","import React, { Suspense } from 'react';\nimport PortfolioRoutes from './portfolio-routes';\nimport PlatformRoutes from './platform-routes';\n\nconst DialogRoutes = () => (\n  <Suspense fallback={<div></div>}>\n    <PortfolioRoutes />\n    <PlatformRoutes />\n  </Suspense>\n);\n\nexport default DialogRoutes;\n","import { Route, Switch, Redirect, useLocation } from 'react-router-dom';\nimport React, { lazy, Suspense } from 'react';\nimport some from 'lodash/some';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  ORDER_ROUTE\n} from './constants/routes';\nimport CatalogRoute from './routing/catalog-route';\nimport DialogRoutes from './smart-components/dialog-routes';\nconst CommonApiError = lazy(() =>\n  import(\n    /* webpackChunkName: \"error-page\" */ './smart-components/error-pages/common-api-error'\n  )\n);\n\nconst Products = lazy(() =>\n  import(\n    /* webpackChunkName: \"products\" */ './smart-components/products/products'\n  )\n);\nconst Platforms = lazy(() =>\n  import(\n    /* webpackChunkName: \"platforms\" */ './smart-components/platform/platforms'\n  )\n);\nconst Platform = lazy(() =>\n  import(\n    /* webpackChunkName: \"platform\" */ './smart-components/platform/platform'\n  )\n);\nconst Portfolios = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolios\" */ './smart-components/portfolio/portfolios'\n  )\n);\nconst Portfolio = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolio\" */ './smart-components/portfolio/portfolio'\n  )\n);\nconst Orders = lazy(() =>\n  import(/* webpackChunkName: \"orders\" */ './smart-components/order/orders')\n);\nconst OrderDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"order-detail\" */ './smart-components/order/order-detail/order-detail'\n  )\n);\nconst OrderProcesses = lazy(() =>\n  import(\n    /* webpackChunkName: \"order-processes\" */ './smart-components/order-process/order-processes'\n  )\n);\n\nconst paths = {\n  products: '/products',\n  platforms: '/platforms',\n  order_processes: '/order-processes',\n  platform: '/platform',\n  portfolios: PORTFOLIOS_ROUTE,\n  portfolio: PORTFOLIO_ROUTE,\n  orders: '/orders',\n  order: ORDER_ROUTE\n};\n\nconst errorPaths = ['/400', '/401', '/403', '/404'];\n\nexport const Routes = () => {\n  const { pathname } = useLocation();\n  return (\n    <Suspense fallback={<AppPlaceholder />}>\n      <Switch>\n        <CatalogRoute path={paths.products} component={Products} />\n        <CatalogRoute path={paths.portfolios} component={Portfolios} />\n        <CatalogRoute path={paths.portfolio} component={Portfolio} />\n        <CatalogRoute\n          permissions={['catalog:portfolios:create']}\n          path={paths.platforms}\n          component={Platforms}\n        />\n        <CatalogRoute\n          permissions={['catalog:portfolios:create']}\n          path={paths.platform}\n          component={Platform}\n        />\n        <CatalogRoute path={paths.order_processes} component={OrderProcesses} />\n        <CatalogRoute path={paths.orders} component={Orders} />\n        <CatalogRoute path={paths.order} component={OrderDetail} />\n        <Route path={errorPaths} component={CommonApiError} />\n        <Route\n          render={() =>\n            some(paths, (p) => p === pathname) ? null : (\n              <Redirect to={paths.portfolios} />\n            )\n          }\n        />\n      </Switch>\n      {/*\n       * We require the empty DIV around the dialog routes to avoid testing issues\n       * It does not have any visual effect on the application\n       * Emzyme simply cannot handle direct descendant of Suspense to be another Suspense\n       */}\n      <div>\n        <DialogRoutes />\n      </div>\n    </Suspense>\n  );\n};\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/cjs/NotificationPortal';\n\nimport { Routes } from './Routes';\nimport { MIN_SCREEN_HEIGHT } from './constants/ui-constants';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport {\n  SET_OPENAPI_SCHEMA,\n  SET_SOURCETYPE_ICONS,\n  INITIALIZE_I18N\n} from './redux/action-types';\n\nimport 'whatwg-fetch';\nimport smoothscroll from 'smoothscroll-polyfill';\n\n// react-int eng locale data\nimport { useIntl } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport { getAxiosInstance } from './helpers/shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from './utilities/constants';\nimport UserContext from './user-context';\n\nsmoothscroll.polyfill();\n\n/**\n * has to be in global context because nav listener is not a part of component lifecycle\n */\nlet ignoreRedirect = true;\n\nconst App = () => {\n  const [auth, setAuth] = useState(false);\n  const [userPermissions, setUserPermissions] = useState();\n  const [userIdentity, setUserIdentity] = useState({ identity: {} });\n  const [openApiSchema, setOpenApiSchema] = useState();\n  const dispatch = useDispatch();\n  const i18l = useIntl();\n  const history = useHistory();\n  let unregister;\n\n  useEffect(() => {\n    insights.chrome.init();\n    dispatch({ type: INITIALIZE_I18N, payload: i18l });\n    Promise.all([\n      getAxiosInstance()\n        .get(`${CATALOG_API_BASE}/openapi.json`)\n        .then((payload) => {\n          setOpenApiSchema(payload);\n          dispatch({ type: SET_OPENAPI_SCHEMA, payload });\n        }),\n      getAxiosInstance()\n        .get(`${SOURCES_API_BASE}/source_types`)\n        .then(({ data }) =>\n          dispatch({\n            type: SET_SOURCETYPE_ICONS,\n            payload: data.reduce(\n              (acc, curr) => ({\n                ...acc,\n                [curr.id]: curr.icon_url\n              }),\n              {}\n            )\n          })\n        ),\n      insights.chrome.auth.getUser().then((user) => {\n        setUserIdentity(user);\n        return insights.chrome\n          .getUserPermissions()\n          .then((data) => setUserPermissions(data));\n      })\n    ]).then(() => setAuth(true));\n\n    insights.chrome.identifyApp('catalog');\n    insights.chrome.navigation([\n      {\n        id: 'products',\n        title: 'Products'\n      },\n      {\n        id: 'portfolios',\n        title: 'Portfolios'\n      },\n      {\n        id: 'platforms',\n        title: 'Platforms'\n      },\n      {\n        id: 'order-processes',\n        title: 'Order processes'\n      },\n      {\n        id: 'orders',\n        title: 'Orders'\n      }\n    ]);\n\n    unregister = insights.chrome.on('APP_NAVIGATION', (event) => {\n      /**\n       * Handle navigation from insights main nav\n       * Uses React history directly instead of browser history to avoid template realod.\n       * only redirect after first application mount\n       */\n      if (!ignoreRedirect && event.domEvent) {\n        history.push(`/${event.navId}`);\n      }\n\n      ignoreRedirect = false;\n    });\n\n    return () => unregister();\n  }, []);\n\n  if (!auth) {\n    return <AppPlaceholder />;\n  }\n\n  return (\n    <UserContext.Provider\n      value={{ permissions: userPermissions, userIdentity, openApiSchema }}\n    >\n      <Fragment>\n        <NotificationsPortal />\n        <section className=\"pf-u-p-0 pf-u-ml-0 pf-l-page__main-section pf-c-page__main-section\">\n          <Grid style={{ minHeight: MIN_SCREEN_HEIGHT }}>\n            <GridItem sm={12} className=\"content-layout\">\n              <Routes />\n            </GridItem>\n          </Grid>\n        </section>\n      </Fragment>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n","export const MIN_SCREEN_HEIGHT = 'calc(100vh - 76px)';\n","import { createGlobalStyle } from 'styled-components';\n\n/**\n * Use direct css imports for FCE components\n * This will save some bundle size\n */\nimport '@redhat-cloud-services/frontend-components/components/ConditionalFilter.css';\nimport '@redhat-cloud-services/frontend-components/components/EmptyTable.css';\nimport '@redhat-cloud-services/frontend-components/components/PrimaryToolbar.css';\nimport '@redhat-cloud-services/frontend-components/components/Section.css';\nimport '@redhat-cloud-services/frontend-components/components/TableToolbar.css';\n\nconst GlobalStyle = createGlobalStyle`\n.disabled-link {\n  pointer-events: none\n}\n\n.font-14{\n  font-size: 14px;\n  color: var(--pf-global--Color--100);\n  font-weight: bold;\n  margin-bottom: 2px !important;\n}\n\n.flex-no-wrap {\n  flex-wrap: nowrap !important;\n  .flex-item-no-wrap {\n    align-self: flex-start;\n    white-space: nowrap;\n  }\n  .pf-c-form__actions {\n    flex-wrap: nowrap !important;\n  }\n}\n\n.orders-list {\n  background-color: var(--pf-global--BackgroundColor--100)\n}\n\n.share-column {\n  .pf-c-select_toggle-wrapper {\n    max-width: calc(100% - 70px);\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n}\n\n/**\n* Update DDF select styles for select component\n*/\n.ddorg__pf4-component-mapper__select-toggle.pf-c-select__toggle.pf-m-typeahead {\n  padding-top: 1px;\n  padding-bottom: 1px;\n}\n.ddorg__pf4-component-mapper__select-toggle {\n  min-height: 34px;\n}\n\n.filter-select {\n  width: 300px;\n  .pf-c-select__menu {\n    max-width: 100%\n  }\n  .pf-c-select__menu-item {\n    white-space: break-spaces;\n  }\n  .pf-c-select_toggle-wrapper {\n    max-width: calc(100% - 32px);\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n}\n\n//pf-4 fixes\n/**\n* non working pf display modifier: https://www.patternfly.org/v4/documentation/core/utilities/display#display-block\n*/\n.pf-m-grow {\n  flex-grow: 1;\n}\n\n.pf-c-breadcrumb__list, .overflow-wrap {\n  @supports not (overflow-wrap: anywhere) {\n    word-break: break-all;\n  }\n  @supports (overflow-wrap: anywhere) {\n    overflow-wrap: anywhere;\n  }\n}\n\na.pf-c-breadcrumb__item {\n  cursor: pointer;\n  >* {\n    cursor: pointer;\n  }\n}\n\n.pf4-hidefield-overlay{\n  .hide-indicator {\n    z-index: 1;\n  }\n  &::before {\n    z-index: 1;\n  }\n}\n/**\n * table vertical align defaults to baseline\n */\n.pf-c-table.orders-table tbody > tr > *{\n  vertical-align: inherit;\n}\n/**\n* End of PF4 fixes\n*/\n\n.icon-danger-fill {\n  fill: var(--pf-global--danger-color--100)\n}\n\n.pf-u-gg-md {\n  grid-gap: 16px !important;\n  gap: 16px;\n}\n\n.bottom-pagination-container {\n  width: 100%\n}\n\n.global-primary-background {\n  background-color: var(--pf-global--BackgroundColor--100)\n}\n\n.full-height {\n  min-height: 100%;\n}\n\n.content-layout {\n  display: flex;\n  flex-direction: column;\n}\n\n.pf-l-flex.align-items-center {\n  align-items: center;\n}\n\n/**\n * frontend components override\n */\n:root {\n  --ins-color--orange: #ec7a08;\n}\n\nbutton:focus {\n  outline: none;\n}\n\nsection.ins-l-content {\n  padding: var(--pf-global--spacer--lg); \n}\n\nsection.ins-l-button-group {\n  margin: 24px 0px;\n  margin: 1.5rem 0rem; \n}\n\nsection.ins-l-button-group > * {\n  display: inline; \n}\n\nsection.ins-l-button-group * + * {\n  margin-left: 5px;\n  margin-left: 0.3125rem; \n}\n\nsection.ins-l-icon-group * + * {\n  margin-left: 10px; \n}\n\nsection.ins-l-icon-group__with-major * + * {\n  margin-left: 7.5px; \n}\n\nsection.ins-l-icon-group__with-major .ins-battery:last-of-type {\n  padding-left: 15px;\n  border-left: 2px solid #eaeaea; \n}\n\nsection.ins-l-icon-group__with-major .ins-battery:last-of-type span.label {\n  font-weight: 500;\n  margin: 0 10px; \n}\n\n.ins-c-primary-toolbar__pagination {\n  margin-left: auto;\n}\n\n.ins-c-primary-toolbar .ins-c-primary-toolbar__group-filter {\n  margin-right: 7px;\n}\n\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { Router as ReactRouter } from 'react-router-dom';\nimport App from './App';\nimport AppContext from './app-context';\nimport GlobalStyle from './global-styles';\nimport catalogHistory, { release } from './routing/catalog-history';\n\nconst Router = () => (\n  <AppContext.Provider value={{ release }}>\n    <GlobalStyle />\n    <ReactRouter history={catalogHistory}>\n      <App />\n    </ReactRouter>\n  </AppContext.Provider>\n);\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './utilities/store';\nimport Router from './router';\nimport { IntlProvider } from 'react-intl';\n\nReactDOM.render(\n  <Provider store={store(true)}>\n    <IntlProvider locale=\"en\">\n      <Router />\n    </IntlProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n/**\n * Register simple service worker JS assets pre chache\n * If registration fails, the app will continue to work withouth any issues.\n * Service worker is generated by webpack and hould be ever avaiable only in production version of the app.\n * You don't yant your JS bundles to be cached in dev env.\n * You must test it locally in non HTTPS environment due to the insecure origin and self signed certificate issues cause by the PROXY.\n * These cannot be overcome due to xss security policy inside service workers browser implementaion to avoid potential securitu issues.\n */\nif (navigator.serviceWorker) {\n  navigator.serviceWorker\n    .register(\n      `${\n        window.location.pathname.includes('/beta') ? '/beta' : ''\n      }/apps/catalog/service-worker.js`\n    )\n    .then((...args) => console.log('Service worker registered with: ', args))\n    .catch(console.log);\n}\n","import { useLocation } from 'react-router-dom';\nimport { StringObject } from '../types/common-types';\n\ntype UseQueryValue = [StringObject, string | undefined, URLSearchParams];\ntype UseQuery = (requiredParams: string[]) => UseQueryValue;\n\nconst useQuery: UseQuery = (requiredParams = []) => {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search);\n  return [\n    requiredParams.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: query.get(curr)\n      }),\n      {}\n    ),\n    search,\n    query\n  ];\n};\n\nexport default useQuery;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport {\n  Bullseye,\n  Card,\n  CardBody,\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Grid,\n  GridItem,\n  Gallery,\n  GalleryItem,\n  Form,\n  FormGroup,\n  TextContent,\n  Text,\n  TextVariants,\n  ActionGroup,\n  Button\n} from '@patternfly/react-core';\nimport styled, { keyframes } from 'styled-components';\nimport { StyledToolbar } from '../styled-components/toolbars';\nimport actionMessages from '../../messages/actions.messages';\nimport formsMessages from '../../messages/forms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst wave = keyframes`\n  0% {\n    transform: translateX(-100%);\n  }\n  60% {\n    transform: translateX(100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n`;\n\nconst Skeleton = ({ component: Component = 'span', ...props }) => {\n  return (\n    <SkeletonContainer {...props}>\n      <Component />\n    </SkeletonContainer>\n  );\n};\n\nSkeleton.propTypes = {\n  component: PropTypes.string\n};\n\nconst SkeletonContainer = styled.div`\n  & > * {\n    position: relative;\n    overflow: hidden;\n    width: ${({ width }) =>\n      width ? `${width}${typeof width === 'number' ? 'px' : ''}` : '100%'};\n    height: ${({ height }) =>\n      height ? `${height}${typeof height === 'number' ? 'px' : ''}` : '20px'};\n    display: block;\n    border-radius: 3px;\n    background-color: ${({ secondaryColor }) =>\n      secondaryColor ? secondaryColor : '#f3f3f3'};\n    &:after {\n      animation: 2s ${wave} linear 0.5s infinite;\n      background: linear-gradient(90deg, transparent, #ecebeb, transparent);\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      top: 0;\n      transform: translateX(-100%);\n      z-index: 1;\n    }\n  }\n`;\n\nexport const CardLoader = ({ items }) => (\n  <Grid hasGutter>\n    <GridItem sm={12}>\n      <Section type=\"content\">\n        <Gallery hasGutter>\n          {[...Array(items)].map((_item, index) => (\n            <GalleryItem key={index}>\n              <Card style={{ height: 350 }}>\n                <CardBody>\n                  <Skeleton height={70} width=\"85%\" className=\"pf-u-mb-lg\" />\n                  <Skeleton height={5} width=\"90%\" className=\"pf-u-mb-sm\" />\n                  <Skeleton height={5} width=\"100%\" className=\"pf-u-mb-sm\" />\n                  <Skeleton height={5} width=\"76%\" className=\"pf-u-mb-sm\" />\n                </CardBody>\n              </Card>\n            </GalleryItem>\n          ))}\n        </Gallery>\n      </Section>\n    </GridItem>\n  </Grid>\n);\n\nCardLoader.propTypes = {\n  items: PropTypes.number\n};\n\nCardLoader.defaultProps = {\n  items: 13\n};\n\nexport const AppPlaceholder = () => (\n  <section className=\"pf-u-m-0 pf-u-p-0 pf-l-page__main-section pf-c-page__main-section\">\n    <Skeleton height={32} className=\"pf-u-p-lg global-primary-background\" />\n    <div className=\"pf-u-mt-lg\">\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    </div>\n  </section>\n);\n\nexport const ToolbarTitlePlaceholder = () => <Skeleton height={30} />;\n\nconst ProducLoaderColumn = styled.div`\n  width: 100%;\n  max-width: 250px;\n`;\n\nexport const ProductLoaderPlaceholder = () => (\n  <Fragment>\n    <Skeleton height={70} className=\"pf-u-mb-xl\" />\n    <ProducLoaderColumn>\n      {[...Array(3)].map((_, index) => (\n        <Fragment key={index}>\n          <Skeleton height={8} className=\"pf-u-mb-sm\" />\n          <Skeleton height={8} className=\"pf-u-ml-md pf-u-mb-sm\" width=\"60%\" />\n          <Skeleton height={8} className=\"pf-u-ml-md pf-u-mb-sm\" width=\"50%\" />\n          <Skeleton height={8} className=\"pf-u-mb-sm\" width=\"80%\" />\n          <Skeleton height={8} className=\"pf-u-ml-md pf-u-mb-lg\" width=\"40%\" />\n        </Fragment>\n      ))}\n    </ProducLoaderColumn>\n  </Fragment>\n);\n\nexport const IconPlaceholder = ({ height }) => (\n  <svg height={height} width={height}>\n    <circle cx={height / 2} cy={height / 2} r={height / 2} fill=\"#ecebeb\" />\n  </svg>\n);\n\nIconPlaceholder.propTypes = {\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nIconPlaceholder.defaultProps = {\n  height: '40'\n};\n\nexport const FormItemLoader = () => (\n  <Skeleton height={38} className=\"pf-u-mb-lg\" />\n);\n\nexport const ShareLoader = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Form>\n      <TextContent>\n        <Text component={TextVariants.small}>\n          {formatMessage(formsMessages.inviteGroup)}\n        </Text>\n      </TextContent>\n      <FormGroup fieldId=\"1\">\n        <FormItemLoader />\n      </FormGroup>\n      <TextContent>\n        <Text component={TextVariants.small}>\n          {formatMessage(formsMessages.groupsAccess)}\n        </Text>\n      </TextContent>\n      <FormGroup fieldId=\"3\">\n        <FormItemLoader />\n      </FormGroup>\n      <FormGroup fieldId=\"4\">\n        <FormItemLoader />\n      </FormGroup>\n    </Form>\n  );\n};\n\nexport const WorkflowLoader = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Form>\n      <FormGroup fieldId=\"2\">\n        <FormItemLoader />\n      </FormGroup>\n      <ActionGroup>\n        <Button variant=\"primary\" isDisabled>\n          {formatMessage(actionMessages.save)}\n        </Button>\n      </ActionGroup>\n    </Form>\n  );\n};\n\nexport const ListLoader = ({ items }) => (\n  <DataList aria-label=\"list-loader\" aria-labelledby=\"datalist-placeholder\">\n    {[...Array(items)].map((_item, index) => (\n      <DataListItem key={index} aria-labelledby=\"datalist-item-placeholder\">\n        <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n          <DataListItemCells\n            dataListCells={[\n              <DataListCell key=\"1\">\n                <Skeleton height={67} />\n              </DataListCell>\n            ]}\n          />\n        </DataListItemRow>\n      </DataListItem>\n    ))}\n  </DataList>\n);\n\nListLoader.propTypes = {\n  items: PropTypes.number\n};\n\nListLoader.defaultProps = {\n  items: 5\n};\n\nexport const OrderDetailToolbarPlaceholder = () => <Skeleton height={70} />;\n\nexport const PlatformToolbarPlaceholder = () => (\n  <StyledToolbar className=\"pf-u-pr-lg pf-u-pl-lg pf-u-pb-md pf-u-pt-md\">\n    <Skeleton height={36} width={300} />\n  </StyledToolbar>\n);\n","import { defineMessages } from 'react-intl';\n\nconst formsMessages = defineMessages({\n  orderProcessTitle: {\n    id: 'commonMessages.orderProcessesTitle',\n    defaultMessage: 'Order processes'\n  },\n  inviteGroup: {\n    id: 'forms.share.invite-group',\n    defaultMessage: 'Invite group'\n  },\n  groupsAccess: {\n    id: 'forms.groups-with-access',\n    defaultMessage: 'Groups with access'\n  },\n  groupsPlaceholder: {\n    id: 'share.groups.group.placeholder',\n    defaultMessage: 'Select group'\n  },\n  permissionsPlaceholder: {\n    id: 'share.groups.permissions.placeholder',\n    defaultMessage: 'Select permission'\n  },\n  nameTaken: {\n    id: 'forms.nameTaken',\n    defaultMessage: 'Name has already been taken'\n  },\n  currentBeforeProvision: {\n    id: 'forms.before.currentBeforeProducts',\n    defaultMessage: 'Current before provision'\n  },\n  currentAfterProvision: {\n    id: 'forms.after.currentAfterProvision',\n    defaultMessage: 'Current after provision'\n  },\n  beforeProvision: {\n    id: 'forms.before.beforeProvision',\n    defaultMessage: 'Before provision'\n  },\n  afterProvision: {\n    id: 'forms.after.setAfterProvision',\n    defaultMessage: 'After provision'\n  },\n  productsPlaceholder: {\n    id: 'forms.product.placeholder',\n    defaultMessage: 'Select product'\n  }\n});\n\nexport default formsMessages;\n","import React, { ComponentType } from 'react';\nimport styled from 'styled-components';\nimport { LevelItem, LevelItemProps } from '@patternfly/react-core';\n\nexport interface StyledLevelItemProps extends LevelItemProps {\n  alignStart?: boolean;\n  alignSelf?: string;\n  grow?: boolean;\n}\n\nexport const StyledLevelItem = styled<ComponentType<StyledLevelItemProps>>(\n  ({ alignStart, alignSelf, grow, ...props }) => <LevelItem {...props} />\n)`\n  align-self: ${({ alignSelf }) => (alignSelf ? alignSelf : 'inherit')};\n  align-items: ${({ alignStart }) =>\n    alignStart ? 'flex-start !important' : 'inherit'};\n  flex: ${({ grow }) => (grow ? '1' : '0')};\n`;\n","export const ADD_PORTFOLIO_ROUTE = '/portfolios/add-portfolio';\nexport const ADD_PRODUCTS_ROUTE = '/portfolio/add-products';\nexport const EDIT_ORDER_PROCESS_ROUTE = '/portfolios/edit-order-process';\nexport const EDIT_PORTFOLIO_ROUTE = '/portfolios/edit';\nexport const EDIT_PORTFOLIO_WORKFLOW_ROUTE = '/portfolios/edit-workflow';\nexport const EDIT_SURVEY_ROUTE = '/portfolio/portfolio-item/edit-survey';\nexport const NESTED_EDIT_ORDER_PROCESS_ROUTE = '/portfolio/edit-order-process';\nexport const NESTED_EDIT_PORTFOLIO_ROUTE = '/portfolio/edit-portfolio';\nexport const NESTED_ORDER_PORTFOLIO_ROUTE = '/portfolio/order';\nexport const NESTED_REMOVE_PORTFOLIO_ROUTE = '/portfolio/remove-portfolio';\nexport const NESTED_SHARE_PORTFOLIO_ROUTE = '/portfolio/share-portfolio';\nexport const NESTED_WORKFLOW_PORTFOLIO_ROUTE = '/portfolio/edit-workflow';\nexport const ORDER_APPROVAL_ROUTE = '/order/approval';\nexport const ORDER_LIFECYCLE_ROUTE = '/order/lifecycle';\nexport const ORDER_ROUTE = '/order';\nexport const ORDERS_ROUTE = '/orders';\nexport const PLATFORM_INVENTORIES_ROUTE = '/platform/platform-inventories';\nexport const PLATFORM_ROUTE = '/platform';\nexport const PLATFORM_SERVICE_OFFERINGS_ROUTE = '/platform/service-offerings';\nexport const PLATFORM_TEMPLATES_ROUTE = '/platform/platform-templates';\nexport const PLATFORMS_ROUTE = '/platforms';\nexport const PORTFOLIO_ROUTE = '/portfolio';\nexport const PORTFOLIO_ITEM_ROUTE = '/portfolio/portfolio-item';\nexport const PORTFOLIO_ITEM_ROUTE_EDIT = '/portfolio/portfolio-item/edit';\nexport const PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE =\n  '/portfolio/portfolio-item/edit-order-process';\nexport const PORTFOLIOS_ROUTE = '/portfolios';\nexport const REMOVE_PORTFOLIO_ROUTE = '/portfolios/remove';\nexport const SHARE_PORTFOLIO_ROUTE = '/portfolios/share';\nexport const WORKFLOW_PORTFOLIO_ROUTE = '/portfolios/edit-workflow';\nexport const ORDER_PROCESSES_ROUTE = '/order-processes';\nexport const ADD_ORDER_PROCESS_ROUTE = '/order-processes/add-order-process';\nexport const REMOVE_ORDER_PROCESS_ROUTE = '/order-processes/remove';\nexport const UPDATE_ORDER_PROCESS_ROUTE = '/order-processes/update';\n","/* eslint-disable react/prop-types */\n/**\n * No prop types in TSX files are needed.\n * Props are defined via interface\n */\nimport React from 'react';\nimport { Store } from 'redux';\nimport get from 'lodash/get';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\n\nimport {\n  PORTFOLIO_ITEM_NULLABLE,\n  PORTFOLIO_NULLABLE\n} from '../../constants/nullable-attributes';\nimport { AnyObject, StringObject } from '../../types/common-types';\n\nexport const scrollToTop = (): void =>\n  document.getElementById('root')?.scrollTo({\n    behavior: 'smooth',\n    top: 0,\n    left: 0\n  });\n\nexport const filterServiceOffering = (\n  { display_name, name }: { display_name?: string; name: string },\n  filter: string\n): boolean => {\n  const filterAtrribute = display_name || name;\n  return filterAtrribute\n    .trim()\n    .toLowerCase()\n    .includes(filter.toLowerCase());\n};\n\nexport const udefinedToNull = (entity: AnyObject, keys: string[]): AnyObject =>\n  [...Object.keys(entity), ...keys].reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: entity[curr] === undefined ? null : entity[curr]\n    }),\n    {}\n  );\n\ninterface NullableMapper extends AnyObject {\n  PortfolioItem: string[];\n  Portfolio: string[];\n}\n\nconst nullableMapper: NullableMapper = {\n  PortfolioItem: PORTFOLIO_ITEM_NULLABLE,\n  Portfolio: PORTFOLIO_NULLABLE\n};\n\nexport const sanitizeValues = (\n  values: AnyObject,\n  entityType: string,\n  store: Store\n): AnyObject => {\n  const schemas = store.getState().openApiReducer.schema.components.schemas;\n  const permittedValues = Object.keys(values)\n    .filter((key) => !get(schemas, `${entityType}.properties.${key}.readOnly`))\n    .reduce(\n      (acc, curr) => (values[curr] ? { ...acc, [curr]: values[curr] } : acc),\n      {}\n    );\n  return udefinedToNull(permittedValues, nullableMapper[entityType]);\n};\n\nexport interface TimeAgoProps {\n  date: Date | string | number;\n}\n\nexport const TimeAgo: React.ComponentType<TimeAgoProps> = ({ date }) => (\n  <span key={`${date}`}>\n    <DateFormat date={date} type=\"relative\" />\n  </span>\n);\n\nconst sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nexport const readableBytes = (bytes: number): string => {\n  if (bytes === 0) {\n    return 'O B';\n  }\n\n  const i: number = Math.floor(Math.log(bytes) / Math.log(1024));\n\n  return `${Number((bytes / Math.pow(1024, i)).toFixed(2)) * 1} ${sizes[i]}`;\n};\n\nexport const hasPermission = (\n  userPermissions: StringObject[] = [],\n  permissions: string[] = []\n): boolean =>\n  permissions.every((permission) =>\n    userPermissions.find((item) => item.permission === permission)\n  );\n","export const PORTFOLIO_ITEM_NULLABLE = [\n  'name',\n  'description',\n  'long_description',\n  'distributor',\n  'documentation_url',\n  'support_url'\n];\n\nexport const PORTFOLIO_NULLABLE = ['description'];\n"],"sourceRoot":""}