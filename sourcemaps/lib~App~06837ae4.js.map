{"version":3,"sources":["webpack:///./src/constants/routes.js","webpack:///./src/messages/forms.messages.js","webpack:///./src/messages/actions.messages.js","webpack:///./src/smart-components/error-pages/error-redirects.js","webpack:///./src/routing/use-initial-uri-hash.js","webpack:///./src/presentational-components/styled-components/toolbars.js","webpack:///./src/helpers/portfolio/portfolio-helper.js","webpack:///./src/app-context.js","webpack:///./src/redux/action-types.js","webpack:///./src/helpers/shared/pagination.js","webpack:///./src/routing/catalog-route.js","webpack:///./src/redux/reducers/order-reducer.js","webpack:///./src/redux/reducers/platform-reducer.js","webpack:///./src/redux/reducers/order-process-reducer.js","webpack:///./src/redux/reducers/portfolio-reducer.js","webpack:///./src/redux/reducers/approval-reducer.js","webpack:///./src/redux/reducers/rbac-reducer.js","webpack:///./src/redux/reducers/share-reducer.js","webpack:///./src/redux/reducers/open-api-reducer.js","webpack:///./src/utilities/loading-state-middleware.js","webpack:///./src/utilities/empty-data-middleware.js","webpack:///./src/redux/reducers/breadcrumbs-reducer.js","webpack:///./src/redux/reducers/i18n-reducer.js","webpack:///./src/smart-components/dialog-routes/portfolio-routes.js","webpack:///./src/smart-components/dialog-routes/platform-routes.js","webpack:///./src/smart-components/dialog-routes/index.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/constants/ui-constants.js","webpack:///./src/global-styles.js","webpack:///./src/router.js","webpack:///./src/utilities/view-state-middleware.js","webpack:///./src/utilities/unauthorized-middleware.js","webpack:///./src/utilities/store.js","webpack:///./src/entry.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/constants/nullable-attributes.js","webpack:///./src/redux/action-types/approval-action-types.js","webpack:///./src/redux/action-types/action-types-helper.js","webpack:///./src/utilities/use-query.js","webpack:///./src/presentational-components/shared/loader-placeholders.js","webpack:///./src/user-context.js","webpack:///./src/utilities/constants.js","webpack:///./src/routing/uri-state-manager.js","webpack:///./src/messages/portfolio.messages.js","webpack:///./src/redux/actions/portfolio-actions.js"],"names":["ADD_PORTFOLIO_ROUTE","ADD_PRODUCTS_ROUTE","EDIT_PORTFOLIO_ROUTE","EDIT_PORTFOLIO_WORKFLOW_ROUTE","EDIT_SURVEY_ROUTE","NESTED_EDIT_PORTFOLIO_ROUTE","NESTED_REMOVE_PORTFOLIO_ROUTE","NESTED_SHARE_PORTFOLIO_ROUTE","NESTED_WORKFLOW_PORTFOLIO_ROUTE","ORDER_APPROVAL_ROUTE","ORDER_LIFECYCLE_ROUTE","ORDER_ROUTE","ORDERS_ROUTE","PLATFORM_INVENTORIES_ROUTE","PLATFORM_ROUTE","PLATFORM_SERVICE_OFFERINGS_ROUTE","PLATFORM_TEMPLATES_ROUTE","PLATFORMS_ROUTE","PORTFOLIO_ROUTE","PORTFOLIO_ITEM_ROUTE","PORTFOLIO_ITEM_ROUTE_EDIT","PORTFOLIOS_ROUTE","REMOVE_PORTFOLIO_ROUTE","SHARE_PORTFOLIO_ROUTE","WORKFLOW_PORTFOLIO_ROUTE","formsMessages","defineMessages","require","orderProcessTitle","id","defaultMessage","inviteGroup","groupsAccess","groupsPlaceholder","permissionsPlaceholder","actionMessages","share","copy","setApproval","edit","delete","save","UnauthorizedRedirect","location","useLocation","to","pathname","state","from","useInitialUriHash","decodeState","window","hash","substring","StyledToolbar","styled","noWrap","props","StyledToolbarGroup","ToolbarGroup","TopToolbarWrapper","div","TopToolbarTitleContainer","Level","axiosInstance","getAxiosInstance","portfolioApi","getPortfolioApi","portfolioItemApi","getPortfolioItemApi","listPortfolios","filter","defaultSettings","limit","offset","get","CATALOG_API_BASE","listPortfolioItems","then","portfolioItems","portfolioReference","data","reduce","acc","curr","index","portfolio_id","Object","keys","map","join","portfolios","forEach","name","portfolioItemIndex","portfolioName","getPortfolio","portfolioId","showPortfolio","getPortfolioItemsWithPortfolio","addPortfolio","portfolioData","items","a","createPortfolio","portfolio","length","addToPortfolio","Promise","all","item","createPortfolioItem","service_offering_ref","updatePortfolio","store","sanitizeValues","removePortfolio","destroyPortfolio","removePortfolioItem","portfolioItemId","destroyPortfolioItem","removePortfolioItems","portfolioItemIds","itemId","restore_key","restoreKey","updatePortfolioItem","portfolioItem","fetchPortfolioByName","params","restorePortfolioItems","restoreData","unDeletePortfolioItem","copyPortfolio","postCopyPortfolio","copyPortfolioItem","copyObject","postCopyPortfolioItem","uploadPortfolioItemIcon","file","iconId","FormData","append","patch","post","headers","accept","_boundary","getPortfolioItemDetail","SOURCES_API_BASE","source","error","status","object","notFound","getPortfolioFromState","portfolioReducer","selectedPortfolio","find","undeletePortfolio","AppContext","createContext","FETCH_SERVICE_PLANS","FETCH_SERVICE_PLAN_PARAMETERS","UPDATE_SERVICE_DATA","SUBMIT_SERVICE_ORDER","SET_SELECTED_PLAN","LIST_ORDERS","CANCEL_ORDER","SET_ORDERS","FETCH_ORDERS","FETCH_PLATFORM","FETCH_PLATFORMS","FETCH_PLATFORM_ITEMS","FETCH_PLATFORM_ITEM","FETCH_MULTIPLE_PLATFORM_ITEMS","FILTER_PLATFORM_ITEMS","FETCH_PLATFORM_INVENTORIES","SET_INVENTORIES_LOADING_STATE","FETCH_PORTFOLIOS","FETCH_PORTFOLIO_ITEM","FETCH_PORTFOLIO_ITEMS","FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO","FETCH_PORTFOLIO","FILTER_PORTFOLIO_ITEMS","ADD_PORTFOLIO","ADD_TO_PORTFOLIO","UPDATE_PORTFOLIO","REMOVE_PORTFOLIO","REMOVE_PORTFOLIO_ITEMS","RESTORE_PORTFOLIO_ITEMS","RESET_SELECTED_PORTFOLIO","ADD_TEMPORARY_PORTFOLIO","UPDATE_TEMPORARY_PORTFOLIO","DELETE_TEMPORARY_PORTFOLIO","RESTORE_PORTFOLIO_PREV_STATE","SET_PORTFOLIO_ITEMS","UPDATE_TEMPORARY_PORTFOLIO_ITEM","RESTORE_PORTFOLIO_ITEM_PREV_STATE","UPDATE_PORTFOLIO_ITEM","FETCH_RBAC_GROUPS","SHARE_PORTFOLIO","UNSHARE_PORTFOLIO","QUERY_PORTFOLIO","FETCH_REQUESTS","FETCH_ORDER_ITEMS","SET_LOADING_STATE","SET_OPENAPI_SCHEMA","SET_ORDER_DETAIL","FETCH_APPROVAL_REQUESTS","SELECT_PORTFOLIO_ITEM","FETCH_SERVICE_OFFERING","SET_SOURCETYPE_ICONS","INITIALIZE_BREADCRUMBS","INITIALIZE_I18N","FETCH_ORDER_PROCESSES","SORT_ORDER_PROCESSES","SET_FILTER_ORDER_PROCESSES","count","getCurrentPage","Math","floor","getNewPage","page","ReidrectOnAccess","CatalogRoute","permissions","userCapabilities","requiredCapabilities","userPermissions","useContext","UserContext","Array","isArray","some","capability","hasCapability","hasPermission","propTypes","PropTypes","arrayOf","string","oneOfType","defaultProps","orderInitialState","servicePlans","selectedPlan","serviceData","isLoading","requests","orderDetail","order","platform","orders","meta","setLoadingState","payload","setOrders","setOrderDetail","planParameters","orderItems","approvalRequest","platformInitialState","platformIconMapping","sourceTypeIcons","isPlatformDataLoading","selectedPlatform","platforms","platformItems","platformInventories","platformItem","filterValue","serviceOffering","service","setInventoriesDataLoadingState","isInventoriesDataLoading","source_type_id","platformId","orderProcessInitialState","orderProcesses","sortBy","property","direction","portfoliosInitialState","metadata","user_capabilities","statistics","setPortfolioItems","setPortfolioItem","selectPortfolio","restorePrevState","prevState","created_at","updated_at","Date","toString","approvalInitialState","isFetching","isResolving","workflows","resolvedWorkflows","ASYNC_ACTIONS","FETCH_WORKFLOWS_PENDING","FETCH_WORKFLOWS_FULFILLED","RESOLVE_WORKFLOWS_PENDING","RESOLVE_WORKFLOWS_FULFILLED","rbacInitialState","rbacGroups","shareInfoInitialState","shareInfo","openApiInitialState","schema","undefined","loadingStateMiddleware","dispatch","action","type","match","emptyDataMiddleware","nextAction","noData","initialBreadcrumbsState","fragments","i18nInitialState","formatMessage","CopyPortfolioItemModal","lazy","OrderModal","EditApprovalWorkflow","SharePortfolioModal","RemovePortfolioModal","AddPortfolioModal","PortfolioRoutes","viewState","useSelector","portfolioItemUserCapabilities","shallowEqual","portfolioUserCapabilities","itemName","useQuery","search","useDispatch","useEffect","setOrFetchPortfolio","path","removeQuery","closeTarget","exact","closeUrl","querySelector","removeSearch","pushParam","objectType","PORTFOLIO_RESOURCE_TYPE","objectName","keepHash","onClose","resetSelectedPortfolio","PlatformRoutes","platformReducer","obj","INVENTORY_RESOURCE_TYPE","DialogRoutes","fallback","CommonApiError","Products","Platforms","Platform","Portfolios","Portfolio","Orders","OrderDetail","OrderProcesses","paths","products","order_processes","errorPaths","Routes","component","render","p","smoothscroll","polyfill","ignoreRedirect","App","unregister","useState","auth","setAuth","setUserPermissions","identity","userIdentity","setUserIdentity","openApiSchema","setOpenApiSchema","i18l","useIntl","history","useHistory","insights","chrome","init","icon_url","getUser","user","getUserPermissions","identifyApp","navigation","title","on","event","domEvent","push","navId","Provider","value","className","Grid","style","minHeight","GridItem","sm","GlobalStyle","createGlobalStyle","pathName","split","shift","release","basename","catalogHistory","createBrowserHistory","Router","viewStateMiddleware","storeState","encodeState","stateKey","replace","unAuthorizedMiddleware","redirect","setTimeout","prodMiddlewares","notificationsMiddleware","errorTitleKey","errorDescriptionKey","baseMiddlewares","thunk","promiseMiddleware","registerReducers","registry","register","orderReducer","applyReducerHash","orderProcessReducer","approvalReducer","rbacReducer","shareReducer","openApiReducer","breadcrumbsReducer","i18nReducer","notifications","ReactDOM","isProd","ReducerRegistry","reduxLogger","getStore","locale","document","getElementById","navigator","serviceWorker","includes","args","console","log","axios","create","paramsSerializer","stringify","interceptors","request","use","config","response","requestId","message","url","orderApi","OrderApi","orderItemApi","OrderItemApi","PortfolioApi","PortfolioItemApi","workflowApi","RequestApi","APPROVAL_API_BASE","WorkflowApi","servicePlansApi","IconApi","ServicePlansApi","getOrderApi","getOrderItemApi","rbacGroupApi","GroupApi","RBAC_API_BASE","getRbacGroupApi","getWorkflowApi","getServicePlansApi","grapqlInstance","getGraphqlInstance","errors","errorType","scrollToTop","scrollTo","behavior","top","left","nullableMapper","PortfolioItem","values","entityType","entity","schemas","getState","components","permittedValues","key","timeAgo","date","DateFormat","every","permission","prefix","requiredParams","query","URLSearchParams","wave","keyframes","Skeleton","Component","SkeletonContainer","width","height","secondaryColor","CardLoader","hasGutter","_item","number","AppPlaceholder","ToolbarTitlePlaceholder","ProducLoaderColumn","ProductLoaderPlaceholder","_","IconPlaceholder","cx","cy","r","fill","FormItemLoader","ShareLoader","TextVariants","small","fieldId","WorkflowLoader","label","variant","isDisabled","ListLoader","aria-label","aria-labelledby","dataListCells","OrderDetailToolbarPlaceholder","PlatformToolbarPlaceholder","process","TOPOLOGICAL_INVENTORY_API_BASE","permissionValues","permissionOptions","PORTFOLIO_ITEM_RESOURCE_TYPE","DEFAULT_MAX_LENGTH","APP_NAME","ServiceInventory","encodedState","JSON","parse","atob","decodeURIComponent","stateObject","encodeURIComponent","btoa","warn","portfolioMessages","removeItemsNotification","removePortfolioNotification","modalCreateTitle","modalCreateSubmit","modalEditTitle","addProducts","emptyNoProducts","portfoliosPlaceholder","portfoliosNoData","portfoliosNoDataDescription","portfolioRemoveDescription","portfolioRemoveTitle","portfolioSharePermissions","portfolioShareGroups","portfolioShareTitle","portfolioShareApply","portfolioShareDescription","addProducstPlatformTitle","addProducstPlatformDescription","addProducstFilterTitle","copyItemTitle","portfolioItemSurvey","portfolioItemOrder","portfolioItemIconTitle","portfolioItemOverview","portfolioItemSupport","portfolioItemDocumentation","portfolioItemDocLink","restoreSurvey","surveyTitle","sourceUnavaiable","objectUnavaiable","backToProducts","editProduct","shareTooltip","shareErrorMissingGroup","shareErrorMissingPermission","shareErrorMissingData","shareDuplicate","noShares","shareGroupsAccess","shareSuccessTitle","addSuccessTitle","addSuccessDescription","doFetchPortfolios","options","ActionTypes","PortfolioHelper","fetchPortfolios","fetchPortfoliosWithState","fetchPortfolioItems","fetchPortfolioItemsWithPortfolio","fetchSelectedPortfolio","notification","fulfilled","description","ADD_NOTIFICATION","dismissable","undoRemovePortfolio","CLEAR_NOTIFICATIONS","chunks","href","onClick","preventDefault","removeProductsFromPortfolio","err","undoRemoveProductsFromPortfolio","newPortfolio","existingPorfolio"],"mappings":"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","file":"js/lib~App~06837ae4.245bea6b760dcf8c291f.js","sourcesContent":["export const ADD_PORTFOLIO_ROUTE = '/portfolios/add-portfolio';\nexport const ADD_PRODUCTS_ROUTE = '/portfolio/add-products';\nexport const EDIT_PORTFOLIO_ROUTE = '/portfolios/edit';\nexport const EDIT_PORTFOLIO_WORKFLOW_ROUTE = '/portfolios/edit-workflow';\nexport const EDIT_SURVEY_ROUTE = '/portfolio/portfolio-item/edit-survey';\nexport const NESTED_EDIT_PORTFOLIO_ROUTE = '/portfolio/edit-portfolio';\nexport const NESTED_ORDER_PORTFOLIO_ROUTE = '/portfolio/order';\nexport const NESTED_REMOVE_PORTFOLIO_ROUTE = '/portfolio/remove-portfolio';\nexport const NESTED_SHARE_PORTFOLIO_ROUTE = '/portfolio/share-portfolio';\nexport const NESTED_WORKFLOW_PORTFOLIO_ROUTE = '/portfolio/edit-workflow';\nexport const ORDER_APPROVAL_ROUTE = '/order/approval';\nexport const ORDER_LIFECYCLE_ROUTE = '/order/lifecycle';\nexport const ORDER_ROUTE = '/order';\nexport const ORDERS_ROUTE = '/orders';\nexport const PLATFORM_INVENTORIES_ROUTE = '/platform/platform-inventories';\nexport const PLATFORM_ROUTE = '/platform';\nexport const PLATFORM_SERVICE_OFFERINGS_ROUTE = '/platform/service-offerings';\nexport const PLATFORM_TEMPLATES_ROUTE = '/platform/platform-templates';\nexport const PLATFORMS_ROUTE = '/platforms';\nexport const PORTFOLIO_ROUTE = '/portfolio';\nexport const PORTFOLIO_ITEM_ROUTE = '/portfolio/portfolio-item';\nexport const PORTFOLIO_ITEM_ROUTE_EDIT = '/portfolio/portfolio-item/edit';\nexport const PORTFOLIOS_ROUTE = '/portfolios';\nexport const REMOVE_PORTFOLIO_ROUTE = '/portfolios/remove';\nexport const SHARE_PORTFOLIO_ROUTE = '/portfolios/share';\nexport const WORKFLOW_PORTFOLIO_ROUTE = '/portfolios/edit-workflow';\nexport const ORDER_PROCESSES_ROUTE = '/order-processes';\n","const { defineMessages } = require('react-intl');\n\nconst formsMessages = defineMessages({\n  orderProcessTitle: {\n    id: 'commonMessages.orderProcessesTitle',\n    defaultMessage: 'Order processes'\n  },\n  inviteGroup: {\n    id: 'forms.share.invite-group',\n    defaultMessage: 'Invite group'\n  },\n  groupsAccess: {\n    id: 'forms.groups-with-access',\n    defaultMessage: 'Groups with access'\n  },\n  groupsPlaceholder: {\n    id: 'share.groups.group.placeholder',\n    defaultMessage: 'Select group'\n  },\n  permissionsPlaceholder: {\n    id: 'share.groups.permissions.placeholder',\n    defaultMessage: 'Select permission'\n  }\n});\n\nexport default formsMessages;\n","const { defineMessages } = require('react-intl');\n\nconst actionMessages = defineMessages({\n  share: {\n    id: 'common.actions.share',\n    defaultMessage: 'Share'\n  },\n  copy: {\n    id: 'common.actions.copy',\n    defaultMessage: 'Copy'\n  },\n  setApproval: {\n    id: 'common.actions.setApproval',\n    defaultMessage: 'Set approval'\n  },\n  edit: {\n    id: 'common.actions.edit',\n    defaultMessage: 'Edit'\n  },\n  delete: {\n    id: 'common.actions.delete',\n    defaultMessage: 'Delete'\n  },\n  save: {\n    id: 'common.actions.save',\n    defaultMessage: 'Save'\n  }\n});\n\nexport default actionMessages;\n","import React from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\n\nexport const UnauthorizedRedirect = () => {\n  const location = useLocation();\n  return (\n    <Redirect\n      to={{\n        pathname: '/403',\n        state: {\n          from: location\n        }\n      }}\n    />\n  );\n};\n","import { decodeState } from './uri-state-manager';\n\nconst useInitialUriHash = () => decodeState(window.location.hash.substring(1));\n\nexport default useInitialUriHash;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Level, Toolbar, ToolbarGroup } from '@patternfly/react-core';\n\nexport const StyledToolbar = styled(({ noWrap, ...props }) => (\n  <Toolbar {...props} />\n))`\n  background-color: #ffffff;\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  position: relative;\n  top: 1px;\n  .pf-c-toolbar__content-section {\n    flex-wrap: ${({ noWrap }) => (noWrap ? 'nowrap' : 'wrap')};\n  }\n`;\n\nexport const StyledToolbarGroup = styled(ToolbarGroup)`\n  flex-wrap: wrap;\n`;\n\nexport const TopToolbarWrapper = styled.div`\n  background-color: #ffffff;\n  .pf-c-breadcrumb__item {\n    .active {\n      color: var(--pf-c-breadcrumb__item--Color);\n      text-decoration: none;\n      pointer-events: none;\n    }\n  }\n  h1,\n  h2 {\n    margin-bottom: 0 !important;\n    @supports not (overflow-wrap: anywhere) {\n      word-break: break-all;\n    }\n    @supports (overflow-wrap: anywhere) {\n      overflow-wrap: anywhere;\n    }\n  }\n  .top-toolbar-title {\n    min-width: 200px;\n  }\n  .top-toolbar-title-description {\n    word-break: break-word;\n  }\n`;\n\nexport const TopToolbarTitleContainer = styled(Level)`\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n  }\n`;\n","import {\n  getAxiosInstance,\n  getPortfolioApi,\n  getPortfolioItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { sanitizeValues } from '../shared/helpers';\nimport { defaultSettings } from '../shared/pagination';\n\nconst axiosInstance = getAxiosInstance();\nconst portfolioApi = getPortfolioApi();\nconst portfolioItemApi = getPortfolioItemApi();\n\nexport function listPortfolios(\n  filter = '',\n  { limit, offset } = defaultSettings\n) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n}\n\nexport function listPortfolioItems(limit = 50, offset = 0, filter = '') {\n  return axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n    )\n    .then((portfolioItems) => {\n      const portfolioReference = portfolioItems.data.reduce(\n        (acc, curr, index) =>\n          curr.portfolio_id\n            ? {\n                ...acc,\n                [curr.portfolio_id]: acc[curr.portfolio_id]\n                  ? [...acc[curr.portfolio_id], index]\n                  : [index]\n              }\n            : acc,\n        {}\n      );\n      return axiosInstance\n        .get(\n          `${CATALOG_API_BASE}/portfolios?${Object.keys(portfolioReference)\n            .map((id) => `filter[id][]=${id}`)\n            .join('&')}`\n        )\n        .then(({ data }) => ({\n          portfolioItems,\n          portfolioReference,\n          portfolios: data\n        }));\n    })\n    .then(({ portfolioItems, portfolioReference, portfolios }) => {\n      portfolios.forEach(\n        ({ id, name }) =>\n          portfolioReference[id] &&\n          portfolioReference[id].forEach((portfolioItemIndex) => {\n            portfolioItems.data[portfolioItemIndex].portfolioName = name;\n          })\n      );\n      return portfolioItems;\n    });\n}\n\nexport function getPortfolio(portfolioId) {\n  return portfolioApi.showPortfolio(portfolioId);\n}\n\nexport function getPortfolioItemsWithPortfolio(\n  portfolioId,\n  { limit, offset, filter = '' } = defaultSettings\n) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios/${portfolioId}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n}\n\n// TO DO - change to use the API call that adds multiple items to a portfolio when available\nexport async function addPortfolio(portfolioData, items) {\n  let portfolio = await portfolioApi.createPortfolio(portfolioData);\n  if (portfolio && items && items.length > 0) {\n    return addToPortfolio(portfolio, items);\n  }\n\n  return portfolio;\n}\n\nexport async function addToPortfolio(portfolioId, items) {\n  return Promise.all(\n    items.map((item) =>\n      portfolioItemApi.createPortfolioItem({\n        portfolio_id: portfolioId,\n        service_offering_ref: item\n      })\n    )\n  );\n}\n\nexport async function updatePortfolio({ id, ...portfolioData }, store) {\n  return await portfolioApi.updatePortfolio(\n    id,\n    sanitizeValues(portfolioData, 'Portfolio', store)\n  );\n}\n\nexport async function removePortfolio(portfolioId) {\n  return portfolioApi.destroyPortfolio(portfolioId);\n}\n\nexport async function removePortfolioItem(portfolioItemId) {\n  return portfolioItemApi.destroyPortfolioItem(portfolioItemId);\n}\n\nexport async function removePortfolioItems(portfolioItemIds) {\n  return Promise.all(\n    portfolioItemIds.map(async (itemId) => {\n      const { restore_key } = await removePortfolioItem(itemId);\n      return {\n        portfolioItemId: itemId,\n        restoreKey: restore_key\n      };\n    })\n  );\n}\n\nexport function fetchProviderControlParameters(portfolioItemId) {\n  return axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}/provider_control_parameters`\n    )\n    .then((data) => ({\n      required: [],\n      ...data,\n      properties: {\n        ...data.properties,\n        namespace: {\n          ...data.properties.namespace,\n          enum: Array.from(new Set([...data.properties.namespace.enum]))\n        }\n      }\n    }));\n}\n\nexport async function updatePortfolioItem({ id, ...portfolioItem }, store) {\n  return await portfolioItemApi.updatePortfolioItem(\n    id,\n    sanitizeValues(portfolioItem, 'PortfolioItem', store)\n  );\n}\n\nexport function fetchPortfolioByName(name = '') {\n  return axiosInstance.get(`${CATALOG_API_BASE}/portfolios`, {\n    params: {\n      filter: {\n        name\n      }\n    }\n  });\n}\n\nexport const restorePortfolioItems = (restoreData) =>\n  Promise.all(\n    restoreData.map(({ portfolioItemId, restoreKey }) =>\n      portfolioItemApi.unDeletePortfolioItem(portfolioItemId, {\n        restore_key: restoreKey\n      })\n    )\n  );\n\nexport const copyPortfolio = (portfolioId) =>\n  portfolioApi.postCopyPortfolio(portfolioId);\n\nexport const copyPortfolioItem = (portfolioItemId, copyObject = {}) =>\n  portfolioItemApi.postCopyPortfolioItem(portfolioItemId, copyObject);\n\nexport const uploadPortfolioItemIcon = (portfolioItemId, file, iconId) => {\n  let data = new FormData();\n  data.append('content', file, file.name);\n  if (iconId) {\n    return axiosInstance.patch(`${CATALOG_API_BASE}/icons/${iconId}`, data);\n  }\n\n  data.append('portfolio_item_id', portfolioItemId);\n  return axiosInstance.post(`${CATALOG_API_BASE}/icons`, data, {\n    headers: {\n      accept: 'application/json',\n      'Content-Type': `multipart/form-data; boundary=${data._boundary}`\n    }\n  });\n};\n\nexport const getPortfolioItemDetail = (params) =>\n  Promise.all([\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/portfolio_items/${params.portfolioItem}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${params.source}`)\n      .catch((error) => {\n        if (error.status === 404) {\n          return {\n            object: 'platform',\n            notFound: true\n          };\n        }\n\n        throw error;\n      })\n  ]);\n\nexport const getPortfolioFromState = (portfolioReducer, portfolioId) =>\n  portfolioReducer.selectedPortfolio &&\n  portfolioReducer.selectedPortfolio.id === portfolioId\n    ? portfolioReducer.selectedPortfolio\n    : portfolioReducer.portfolios.data.find(({ id }) => id === portfolioId);\n\nexport const undeletePortfolio = (portfolioId, restoreKey) =>\n  axiosInstance.post(`${CATALOG_API_BASE}/portfolios/${portfolioId}/undelete`, {\n    restore_key: restoreKey\n  });\n","import { createContext } from 'react';\n\nconst AppContext = createContext({});\n\nexport default AppContext;\n","export const FETCH_SERVICE_PLANS = 'FETCH_SERVICE_PLANS';\nexport const FETCH_SERVICE_PLAN_PARAMETERS = 'FETCH_SERVICE_PLAN_PARAMETERS';\nexport const UPDATE_SERVICE_DATA = 'UPDATE_SERVICE_DATA';\nexport const SUBMIT_SERVICE_ORDER = 'SUBMIT_SERVICE_ORDER';\nexport const SET_SELECTED_PLAN = 'SET_SELECTED_PLAN';\nexport const LIST_ORDERS = 'LIST_ORDERS';\nexport const CANCEL_ORDER = 'CANCEL_ORDER';\nexport const SET_ORDERS = 'SET_ORDERS';\nexport const FETCH_ORDERS = 'FETCH_ORDERS';\n\nexport const FETCH_PLATFORM = 'FETCH_PLATFORM';\nexport const FETCH_PLATFORMS = 'FETCH_PLATFORMS';\nexport const FETCH_PLATFORM_ITEMS = 'FETCH_PLATFORM_ITEMS';\nexport const FETCH_PLATFORM_ITEM = 'FETCH_PLATFORM_ITEM';\nexport const FETCH_MULTIPLE_PLATFORM_ITEMS = 'FETCH_MULTIPLE_PLATFORM_ITEMS';\nexport const FILTER_PLATFORM_ITEMS = 'FILTER_PLATFORM_ITEMS';\nexport const FETCH_PLATFORM_INVENTORIES = 'FETCH_PLATFORM_INVENTORIES';\nexport const SET_INVENTORIES_LOADING_STATE = 'SET_INVENTORIES_LOADING_STATE';\n\nexport const FETCH_PORTFOLIOS = 'FETCH_PORTFOLIOS';\nexport const FETCH_PORTFOLIO_ITEM = 'FETCH_PORTFOLIO_ITEM';\nexport const FETCH_PORTFOLIO_ITEMS = 'FETCH_PORTFOLIO_ITEMS';\nexport const FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO =\n  'FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO';\nexport const FETCH_PORTFOLIO = 'FETCH_PORTFOLIO';\nexport const FILTER_PORTFOLIO_ITEMS = 'FILTER_PORTFOLIO_ITEMS';\nexport const ADD_PORTFOLIO = 'ADD_PORTFOLIO';\nexport const ADD_TO_PORTFOLIO = 'ADD_TO_PORTFOLIO';\nexport const UPDATE_PORTFOLIO = 'UPDATE_PORTFOLIO';\nexport const REMOVE_PORTFOLIO = 'REMOVE_PORTFOLIO';\nexport const REMOVE_PORTFOLIO_ITEMS = 'REMOVE_PORTFOLIO_ITEMS';\nexport const RESTORE_PORTFOLIO_ITEMS = 'RESTORE_PORTFOLIO_ITEMS';\nexport const RESET_SELECTED_PORTFOLIO = 'RESET_SELECTED_PORTFOLIO';\nexport const ADD_TEMPORARY_PORTFOLIO = 'ADD_TEMPORARY_PORTFOLIO';\nexport const UPDATE_TEMPORARY_PORTFOLIO = 'UPDATE_TEMPORARY_PORTFOLIO';\nexport const DELETE_TEMPORARY_PORTFOLIO = 'DELETE_TEMPORARY_PORTFOLIO';\nexport const RESTORE_PORTFOLIO_PREV_STATE = 'RESTORE_PORTFOLIO_PREV_STATE';\nexport const SET_PORTFOLIO_ITEMS = 'SET_PORTFOLIO_ITEMS';\nexport const UPDATE_TEMPORARY_PORTFOLIO_ITEM =\n  'UPDATE_TEMPORARY_PORTFOLIO_ITEM';\nexport const RESTORE_PORTFOLIO_ITEM_PREV_STATE =\n  'RESTORE_PORTFOLIO_ITEM_PREV_STATE';\nexport const UPDATE_PORTFOLIO_ITEM = 'UPDATE_PORTFOLIO_ITEM';\n\nexport const FETCH_RBAC_GROUPS = 'FETCH_RBAC_GROUPS';\n\nexport const SHARE_PORTFOLIO = 'SHARE_PORTFOLIO';\nexport const UNSHARE_PORTFOLIO = 'UNSHARE_PORTFOLIO';\nexport const QUERY_PORTFOLIO = 'QUERY_PORTFOLIO';\n\nexport const FETCH_REQUESTS = 'FETCH_REQUESTS';\nexport const FETCH_ORDER_ITEMS = 'FETCH_ORDER_ITEMS';\n\n/**\n * Global redux loading state\n */\nexport const SET_LOADING_STATE = 'SET_LOADING_STATE';\n\n/**\n * OpenApi action\n */\nexport const SET_OPENAPI_SCHEMA = '@@open-api/set-schema';\n\n/**\n * Orders actions\n * TODO Prefix existing action types\n */\nexport const SET_ORDER_DETAIL = '@@orders/set-order-detail';\nexport const FETCH_APPROVAL_REQUESTS = '@@orders/fetch-order-requests';\n\n/*\n * Portfolio actions\n */\nexport const SELECT_PORTFOLIO_ITEM = '@@portfolio/SELECT_PORTFOLIO_ITEM';\n\n/**\n * Sources actions\n */\nexport const FETCH_SERVICE_OFFERING = '@@sources/FETCH_SERVICE_OFFERING';\nexport const SET_SOURCETYPE_ICONS = '@@sources/SET_SOURCETYPE_ICONS';\n\n/**\n * Breadcrumbs actions\n */\nexport const INITIALIZE_BREADCRUMBS = '@@breadcrumbs/INITIALIZE_BREADCRUMBS';\n\n/**\n * In18l actions\n */\n\nexport const INITIALIZE_I18N = '@@i18l/INITIALIZE_I18N';\n\n/*\n * Order processes actions\n */\nexport const FETCH_ORDER_PROCESSES = '@@order_processes/FETCH_ORDER_PROCESSES';\nexport const SORT_ORDER_PROCESSES = '@@order_processes/SORT_ORDER_PROCESSES';\nexport const SET_FILTER_ORDER_PROCESSES =\n  '@@order_processes/SET_FILTER_ORDER_PROCESSES';\n","export const defaultSettings = {\n  limit: 50,\n  offset: 0,\n  count: 0,\n  filter: ''\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0) =>\n  Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n","import React, { useContext } from 'react';\nimport { Route } from 'react-router-dom';\nimport UserContext from '../user-context';\nimport PropTypes from 'prop-types';\nimport { hasPermission } from '../helpers/shared/helpers';\nimport { UnauthorizedRedirect } from '../smart-components/error-pages/error-redirects';\n\nconst ReidrectOnAccess = (props) => (\n  <Route {...props}>\n    <UnauthorizedRedirect />\n  </Route>\n);\n\nconst hasCapability = (userCapabilities, requiredCapabilities) =>\n  requiredCapabilities\n    ? Array.isArray(requiredCapabilities)\n      ? requiredCapabilities.some(\n          (capability) => userCapabilities[capability] !== false\n        )\n      : userCapabilities[requiredCapabilities] !== false\n    : true;\n\nconst CatalogRoute = ({\n  permissions,\n  userCapabilities,\n  requiredCapabilities,\n  ...props\n}) => {\n  const { permissions: userPermissions } = useContext(UserContext);\n  const hasAccess =\n    hasCapability(userCapabilities, requiredCapabilities) &&\n    hasPermission(userPermissions, permissions);\n\n  if (!hasAccess) {\n    return <ReidrectOnAccess {...props} />;\n  }\n\n  return <Route {...props} />;\n};\n\nCatalogRoute.propTypes = {\n  permissions: PropTypes.arrayOf(PropTypes.string),\n  userCapabilities: PropTypes.object,\n  requiredCapabilities: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ])\n};\n\nCatalogRoute.defaultProps = {\n  permissions: [],\n  userCapabilities: {}\n};\n\nexport default CatalogRoute;\n","import {\n  FETCH_SERVICE_PLANS,\n  LIST_ORDERS,\n  FETCH_SERVICE_PLAN_PARAMETERS,\n  SUBMIT_SERVICE_ORDER,\n  UPDATE_SERVICE_DATA,\n  SET_SELECTED_PLAN,\n  FETCH_REQUESTS,\n  FETCH_ORDER_ITEMS,\n  SET_LOADING_STATE,\n  SET_ORDERS,\n  FETCH_ORDERS,\n  SET_ORDER_DETAIL,\n  FETCH_APPROVAL_REQUESTS\n} from '../action-types';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n// Initial State\nexport const orderInitialState = {\n  servicePlans: [],\n  selectedPlan: {},\n  serviceData: {},\n  isLoading: false,\n  requests: [],\n  orderDetail: {\n    order: {},\n    portfolioItem: {},\n    platform: {},\n    portfolio: {}\n  },\n  orders: {\n    data: [],\n    meta: { ...defaultSettings }\n  }\n};\n\nconst setLoadingState = (state, { payload = true }) => ({\n  ...state,\n  isLoading: payload\n});\nconst setServicePlans = (state, { payload }) => ({\n  ...state,\n  servicePlans: payload,\n  isLoading: false\n});\nconst setListOrder = (state, { payload }) => ({\n  ...state,\n  orders: payload,\n  isLoading: false\n});\nconst setPlanParameters = (state, { payload }) => ({\n  ...state,\n  planParameters: payload,\n  isLoading: false\n});\nconst submitServiceOrder = (state, { payload }) => ({\n  ...state,\n  ...payload,\n  isLoading: false\n});\nconst updateServiceData = (state, { payload }) => ({\n  ...state,\n  serviceData: payload,\n  isLoading: false\n});\nconst selectPlan = (state, { payload }) => ({\n  ...state,\n  selectedPlan: payload,\n  isLoading: false\n});\nconst setRequests = (state, { payload }) => ({\n  ...state,\n  requests: payload,\n  isLoading: false\n});\nconst setOrderItems = (state, { payload }) => ({\n  ...state,\n  orderItems: payload,\n  isLoading: false\n});\nconst setOrders = (state, { payload }) => ({ ...state, orders: payload });\nconst setOrderDetail = (state, { payload }) => ({\n  ...state,\n  orderDetail: payload\n});\nconst updateOrderApprovalRequests = (state, { payload }) => ({\n  ...state,\n  orderDetail: { ...state.orderDetail, approvalRequest: payload }\n});\n\nexport default {\n  [`${FETCH_SERVICE_PLANS}_PENDING`]: setLoadingState,\n  [`${FETCH_SERVICE_PLANS}_FULFILLED`]: setServicePlans,\n  [`${LIST_ORDERS}_PENDING`]: setLoadingState,\n  [`${LIST_ORDERS}_FULFILLED`]: setListOrder,\n  [`${FETCH_SERVICE_PLAN_PARAMETERS}_PENDING`]: setLoadingState,\n  [`${FETCH_SERVICE_PLAN_PARAMETERS}_FULFILLED`]: setPlanParameters,\n  [`${SUBMIT_SERVICE_ORDER}_PENDING`]: setLoadingState,\n  [`${SUBMIT_SERVICE_ORDER}_FULFILLED`]: submitServiceOrder,\n  [UPDATE_SERVICE_DATA]: updateServiceData,\n  [SET_SELECTED_PLAN]: selectPlan,\n  [`${FETCH_REQUESTS}_PENDING`]: setLoadingState,\n  [`${FETCH_REQUESTS}_FULFILLED`]: setRequests,\n  [`${FETCH_ORDER_ITEMS}_PENDING`]: setLoadingState,\n  [`${FETCH_ORDER_ITEMS}_FULFILLED`]: setOrderItems,\n  [SET_LOADING_STATE]: setLoadingState,\n  [`${FETCH_ORDERS}_FULFILLED`]: setOrders,\n  [`${FETCH_ORDERS}_PENDING`]: setLoadingState,\n  [SET_ORDERS]: setOrders,\n  [`${SET_ORDER_DETAIL}_FULFILLED`]: setOrderDetail,\n  [SET_ORDER_DETAIL]: setOrderDetail,\n  [`${FETCH_APPROVAL_REQUESTS}_FULFILLED`]: updateOrderApprovalRequests\n};\n","import {\n  FETCH_PLATFORM,\n  FETCH_PLATFORMS,\n  FETCH_PLATFORM_ITEMS,\n  FETCH_PLATFORM_ITEM,\n  FILTER_PLATFORM_ITEMS,\n  FETCH_MULTIPLE_PLATFORM_ITEMS,\n  SET_LOADING_STATE,\n  FETCH_PLATFORM_INVENTORIES,\n  SET_INVENTORIES_LOADING_STATE,\n  FETCH_SERVICE_OFFERING,\n  SET_SOURCETYPE_ICONS\n} from '../action-types';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\n// Initial State\nexport const platformInitialState = {\n  platformIconMapping: {},\n  sourceTypeIcons: {},\n  isPlatformDataLoading: false,\n  selectedPlatform: {},\n  platforms: [],\n  platformItems: {},\n  platformInventories: {\n    meta: defaultSettings\n  },\n  platformItem: {},\n  platform: {},\n  filterValue: '',\n  serviceOffering: {\n    service: {},\n    source: {}\n  }\n};\n\nconst mapPlatformIcons = (platformIconMapping, platforms, sourceTypeIcons) =>\n  platforms.reduce(\n    (acc, curr) =>\n      !acc[curr.id]\n        ? { ...acc, [curr.id]: sourceTypeIcons[curr.source_type_id] }\n        : acc,\n    { ...platformIconMapping }\n  );\n\nconst setLoadingState = (state, { payload = true }) => ({\n  ...state,\n  isPlatformDataLoading: payload\n});\nconst setPlatforms = (state, { payload }) => ({\n  ...state,\n  platforms: payload,\n  platformIconMapping: mapPlatformIcons(\n    state.platformIconMapping,\n    payload,\n    state.sourceTypeIcons\n  ),\n  isPlatformDataLoading: false\n});\nconst setPlatformItems = (state, { payload, meta: { platformId } }) => ({\n  ...state,\n  platformItems: { ...state.platformItems, [platformId]: payload },\n  isPlatformDataLoading: false\n});\nconst setMultiplePlatformItems = (state, { payload }) => ({\n  ...state,\n  platformItems: { ...state.platformItems, ...payload },\n  isPlatformDataLoading: false\n});\nconst setPortfolioItems = (state, { payload }) => ({\n  ...state,\n  portfolioItem: payload,\n  isPlatformDataLoading: false\n});\nconst selectPlatform = (state, { payload }) => ({\n  ...state,\n  selectedPlatform: payload,\n  isLoading: false\n});\nconst filterPlatformItems = (state, { payload }) => ({\n  ...state,\n  filterValue: payload\n});\nconst setInventoriesDataLoadingState = (state, { payload = true }) => ({\n  ...state,\n  isInventoriesDataLoading: payload\n});\nconst setPlatformInventories = (state, { payload }) => ({\n  ...state,\n  platformInventories: { ...state.platformInventories, ...payload },\n  isInventoriesDataLoading: false\n});\nconst setServiceOffering = (state, { payload }) => ({\n  ...state,\n  serviceOffering: payload\n});\nconst setSourceTypeIcons = (state, { payload }) => ({\n  ...state,\n  sourceTypeIcons: payload\n});\n\nexport default {\n  [`${FETCH_PLATFORMS}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORMS}_FULFILLED`]: setPlatforms,\n  [`${FETCH_PLATFORM_ITEMS}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORM_ITEMS}_FULFILLED`]: setPlatformItems,\n  [`${FETCH_PLATFORM_ITEM}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORM_ITEM}_FULFILLED`]: setPortfolioItems,\n  [`${FETCH_PLATFORM}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORM}_FULFILLED`]: selectPlatform,\n  [`${FILTER_PLATFORM_ITEMS}_FULFILLED`]: filterPlatformItems,\n  [`${FETCH_MULTIPLE_PLATFORM_ITEMS}_FULFILLED`]: setMultiplePlatformItems,\n  [SET_LOADING_STATE]: setLoadingState,\n  [`${FETCH_PLATFORM_INVENTORIES}_PENDING`]: setInventoriesDataLoadingState,\n  [`${FETCH_PLATFORM_INVENTORIES}_FULFILLED`]: setPlatformInventories,\n  [SET_INVENTORIES_LOADING_STATE]: setInventoriesDataLoadingState,\n  [`${FETCH_SERVICE_OFFERING}_FULFILLED`]: setServiceOffering,\n  [SET_SOURCETYPE_ICONS]: setSourceTypeIcons\n};\n","import {\n  FETCH_ORDER_PROCESSES,\n  SORT_ORDER_PROCESSES,\n  SET_FILTER_ORDER_PROCESSES\n} from '../../redux/action-types';\n\n// Initial State\nexport const orderProcessInitialState = {\n  orderProcesses: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 50,\n      offset: 0\n    }\n  },\n  filterValue: '',\n  isLoading: false,\n  sortBy: {\n    index: 0,\n    property: 'name',\n    direction: 'asc'\n  }\n};\n\nconst setLoadingState = (state) => ({ ...state, isLoading: true });\nconst setOrderProcesses = (state, { payload }) => ({\n  ...state,\n  orderProcesses: payload,\n  isLoading: false\n});\nconst setSortOrderProcesses = (state, { payload }) => ({\n  ...state,\n  sortBy: payload,\n  orderProcesses: {\n    ...state.orderProcesses,\n    meta: {\n      ...state.orderProcesses.meta,\n      offset: 0\n    }\n  }\n});\nconst setFilterValue = (state, { payload }) => ({\n  ...state,\n  filterValue: payload,\n  orderProcesses: {\n    ...state.orderProcesses,\n    meta: {\n      ...state.orderProcesses.meta,\n      offset: 0\n    }\n  }\n});\n\nexport default {\n  [`${FETCH_ORDER_PROCESSES}_PENDING`]: setLoadingState,\n  [`${FETCH_ORDER_PROCESSES}_FULFILLED`]: setOrderProcesses,\n  [SORT_ORDER_PROCESSES]: setSortOrderProcesses,\n  [SET_FILTER_ORDER_PROCESSES]: setFilterValue\n};\n","import {\n  FETCH_PORTFOLIO,\n  FETCH_PORTFOLIOS,\n  FETCH_PORTFOLIO_ITEMS,\n  FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO,\n  FETCH_PORTFOLIO_ITEM,\n  FILTER_PORTFOLIO_ITEMS,\n  SELECT_PORTFOLIO_ITEM,\n  UPDATE_PORTFOLIO,\n  SET_LOADING_STATE,\n  REMOVE_PORTFOLIO_ITEMS,\n  RESET_SELECTED_PORTFOLIO,\n  ADD_TEMPORARY_PORTFOLIO,\n  UPDATE_TEMPORARY_PORTFOLIO,\n  DELETE_TEMPORARY_PORTFOLIO,\n  RESTORE_PORTFOLIO_PREV_STATE,\n  SET_PORTFOLIO_ITEMS,\n  UPDATE_TEMPORARY_PORTFOLIO_ITEM,\n  UPDATE_PORTFOLIO_ITEM,\n  RESTORE_PORTFOLIO_ITEM_PREV_STATE\n} from '../action-types';\n\n// Initial State\nexport const portfoliosInitialState = {\n  portfolioItems: {\n    data: [],\n    meta: {\n      limit: 50,\n      offset: 0,\n      filter: ''\n    }\n  },\n  portfolioItem: {\n    portfolioItem: {\n      metadata: {\n        user_capabilities: {},\n        statistics: {}\n      }\n    }\n  },\n  portfolios: {\n    data: [],\n    meta: {\n      limit: 50,\n      offset: 0\n    }\n  },\n  selectedPortfolio: {\n    metadata: {\n      user_capabilities: {},\n      statistics: {}\n    }\n  },\n  portfolio: {},\n  filterValue: '',\n  isLoading: false\n};\n\nconst setLoadingState = (state, { payload = true }) => ({\n  ...state,\n  isLoading: payload\n});\nconst setPortfolios = (state, { payload }) => ({\n  ...state,\n  portfolios: payload,\n  isLoading: false\n});\nconst setPortfolioItems = (state, { payload }) => ({\n  ...state,\n  portfolioItems: payload,\n  isLoading: false\n});\nconst setPortfolioItem = (state, { payload }) => ({\n  ...state,\n  portfolioItem: payload,\n  isLoading: false\n});\nconst selectPortfolio = (state, { payload }) => ({\n  ...state,\n  selectedPortfolio: payload,\n  isLoading: false\n});\nconst filterPortfolios = (state, { payload }) => ({\n  ...state,\n  filterValue: payload\n});\nconst resetSelectedPortfolio = (state) => ({\n  ...state,\n  selectedPortfolio: { metadata: { user_capabilities: {}, statistics: {} } },\n  portfolioItems: portfoliosInitialState.portfolioItems\n});\n\n// these are optimistic UI updates that mutate the portfolio state immediately after user action.\n// State is synchronized with API after actions are sucesfull\nconst addTemporaryPortfolio = (state, { payload }) => ({\n  prevState: { ...state },\n  ...state,\n  portfolios: {\n    ...state.portfolios,\n    data: [\n      ...state.portfolios.data,\n      { ...payload, metadata: { user_capabilities: {}, statistics: {} } }\n    ]\n  }\n});\nconst updateTemporaryPortfolio = (state, { payload }) => ({\n  prevState: { ...state },\n  ...state,\n  selectedPortfolio: {\n    metadata: {\n      ...state.selectedPortfolio.metadata,\n      user_capabilities: {\n        ...state.selectedPortfolio.metadata.user_capabilities\n      }\n    },\n    ...payload\n  },\n  portfolios: {\n    ...state.portfolios,\n    data: state.portfolios.data.map((item) =>\n      item.id === payload.id\n        ? {\n            ...item,\n            ...payload\n          }\n        : item\n    )\n  }\n});\n\nconst deleteTemporaryPortfolio = (state, { payload }) => ({\n  prevState: { ...state },\n  ...state,\n  selectedPortfolio: { metadata: { user_capabilities: {}, statistics: {} } },\n  portfolios: {\n    ...state.portfolios,\n    data: state.portfolios.data.filter(({ id }) => id !== payload)\n  }\n});\n\nconst updateTemporaryPortfolioItem = (state, { payload }) => ({\n  ...state,\n  prevState: { ...state },\n  portfolioItem: {\n    ...state.portfolioItem,\n    portfolioItem: {\n      created_at: state.portfolioItem.portfolioItem.created_at,\n      updated_at: new Date().toString(),\n      ...payload\n    }\n  },\n  portfolioItems: {\n    ...state.portfolioItems,\n    data: state.portfolioItems.data.map((item) =>\n      item.id === payload.id\n        ? { created_at: item.created_at, ...payload }\n        : item\n    )\n  }\n});\n\nconst updatePortfolioItem = (state, { payload }) => ({\n  ...state,\n  portfolioItem: {\n    ...state.portfolioItem,\n    portfolioItem: payload\n  },\n  portfolioItems: {\n    ...state.portfolioItems,\n    data: state.portfolioItems.data.map((item) =>\n      item.id === payload.id ? { ...payload } : item\n    )\n  }\n});\n\nconst restorePrevState = (state) =>\n  state.prevState ? { ...state.prevState } : { ...state };\n\nexport default {\n  [`${FETCH_PORTFOLIOS}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIOS}_FULFILLED`]: setPortfolios,\n  [`${FETCH_PORTFOLIO_ITEMS}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO_ITEMS}_FULFILLED`]: setPortfolioItems,\n  [`${FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO}_FULFILLED`]: setPortfolioItems,\n  [`${FETCH_PORTFOLIO_ITEM}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO_ITEM}_FULFILLED`]: setPortfolioItem,\n  [`${FETCH_PORTFOLIO}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO}_FULFILLED`]: selectPortfolio,\n  [FILTER_PORTFOLIO_ITEMS]: filterPortfolios,\n  [`${SELECT_PORTFOLIO_ITEM}_FULFILLED`]: setPortfolioItem,\n  [SELECT_PORTFOLIO_ITEM]: setPortfolioItem,\n  [`${UPDATE_PORTFOLIO}_FULFILLED`]: selectPortfolio,\n  [SET_LOADING_STATE]: setLoadingState,\n  [`${REMOVE_PORTFOLIO_ITEMS}_PENDING`]: setLoadingState,\n  [RESET_SELECTED_PORTFOLIO]: resetSelectedPortfolio,\n  [ADD_TEMPORARY_PORTFOLIO]: addTemporaryPortfolio,\n  [UPDATE_TEMPORARY_PORTFOLIO]: updateTemporaryPortfolio,\n  [DELETE_TEMPORARY_PORTFOLIO]: deleteTemporaryPortfolio,\n  [RESTORE_PORTFOLIO_PREV_STATE]: restorePrevState,\n  [SET_PORTFOLIO_ITEMS]: setPortfolioItems,\n  [UPDATE_TEMPORARY_PORTFOLIO_ITEM]: updateTemporaryPortfolioItem,\n  [RESTORE_PORTFOLIO_ITEM_PREV_STATE]: restorePrevState,\n  [UPDATE_PORTFOLIO_ITEM]: updatePortfolioItem\n};\n","import { SET_LOADING_STATE } from '../action-types';\nimport { ASYNC_ACTIONS } from '../action-types/approval-action-types';\n\nexport const approvalInitialState = {\n  isFetching: false,\n  isResolving: false,\n  workflows: [],\n  resolvedWorkflows: []\n};\n\nconst setLoadingState = (state, { payload = true }) => ({\n  ...state,\n  isFetching: payload\n});\nconst setWorkflows = (state, { payload }) => ({\n  ...state,\n  isFetching: false,\n  workflows: payload\n});\nconst setResolvingState = (state, { payload = true }) => ({\n  ...state,\n  isResolving: payload\n});\nconst setResolvedWorkflows = (state, { payload }) => ({\n  ...state,\n  isResolving: false,\n  resolvedWorkflows: payload\n});\n\nexport default {\n  [ASYNC_ACTIONS.FETCH_WORKFLOWS_PENDING]: setLoadingState,\n  [ASYNC_ACTIONS.FETCH_WORKFLOWS_FULFILLED]: setWorkflows,\n  [ASYNC_ACTIONS.RESOLVE_WORKFLOWS_PENDING]: setResolvingState,\n  [ASYNC_ACTIONS.RESOLVE_WORKFLOWS_FULFILLED]: setResolvedWorkflows,\n  [SET_LOADING_STATE]: setLoadingState\n};\n","import { FETCH_RBAC_GROUPS, SET_LOADING_STATE } from '../action-types';\n\n// Initial State\nexport const rbacInitialState = {\n  rbacGroups: [],\n  isLoading: false\n};\n\nconst setLoadingState = (state, { payload = true }) => ({\n  ...state,\n  isLoading: payload\n});\nconst setRbacGroups = (state, { payload }) => ({\n  ...state,\n  rbacGroups: payload,\n  isLoading: false\n});\n\nexport default {\n  [`${FETCH_RBAC_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_RBAC_GROUPS}_FULFILLED`]: setRbacGroups,\n  [SET_LOADING_STATE]: setLoadingState\n};\n","import { QUERY_PORTFOLIO, SET_LOADING_STATE } from '../action-types';\n\n// Initial State\nexport const shareInfoInitialState = {\n  shareInfo: [],\n  isLoading: false\n};\n\nconst setLoadingState = (state, { payload = true }) => ({\n  ...state,\n  isLoading: payload\n});\nconst setShareInfo = (state, { payload }) => ({\n  ...state,\n  shareInfo: payload,\n  isLoading: false\n});\n\nexport default {\n  [`${QUERY_PORTFOLIO}_PENDING`]: setLoadingState,\n  [`${QUERY_PORTFOLIO}_FULFILLED`]: setShareInfo,\n  [SET_LOADING_STATE]: setLoadingState\n};\n","import { SET_OPENAPI_SCHEMA } from '../action-types';\n\nexport const openApiInitialState = {\n  schema: undefined\n};\nconst setSchema = (state, { payload }) => ({ ...state, schema: payload });\n\nexport default {\n  [SET_OPENAPI_SCHEMA]: setSchema\n};\n","import { SET_LOADING_STATE } from '../redux/action-types';\n\nconst loadingStateMiddleware = () => (dispatch) => (action) => {\n  if (action.type.match(/_REJECTED$/)) {\n    dispatch({ type: SET_LOADING_STATE, payload: false });\n  }\n\n  return dispatch(action);\n};\n\nexport default loadingStateMiddleware;\n","const emptyDataMiddleware = () => (dispatch) => (action) => {\n  const nextAction = { ...action };\n  if (\n    action.type.match(/_FULFILLED$/) &&\n    action.payload &&\n    action.meta &&\n    action.payload.data &&\n    action.payload.meta\n  ) {\n    nextAction.payload.meta.noData =\n      nextAction.payload.meta.count === 0 &&\n      nextAction.meta.filter.length === 0;\n    return dispatch(nextAction);\n  }\n\n  return dispatch(nextAction);\n};\n\nexport default emptyDataMiddleware;\n","import { INITIALIZE_BREADCRUMBS } from '../action-types';\n\nexport const initialBreadcrumbsState = {\n  fragments: []\n};\n\nconst initialize = (state, { payload }) => ({ ...state, fragments: payload });\n\nexport default {\n  [INITIALIZE_BREADCRUMBS]: initialize\n};\n","import { INITIALIZE_I18N } from '../action-types';\n\nexport const i18nInitialState = {\n  formatMessage: ({ defaultMessage = '' }) => defaultMessage\n};\nconst initialize = (state, { payload }) => ({ ...state, ...payload });\n\nexport default {\n  [INITIALIZE_I18N]: initialize\n};\n","import React, { lazy, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport {\n  ADD_PORTFOLIO_ROUTE,\n  EDIT_PORTFOLIO_ROUTE,\n  PORTFOLIOS_ROUTE,\n  NESTED_EDIT_PORTFOLIO_ROUTE,\n  PORTFOLIO_ROUTE,\n  REMOVE_PORTFOLIO_ROUTE,\n  NESTED_REMOVE_PORTFOLIO_ROUTE,\n  SHARE_PORTFOLIO_ROUTE,\n  NESTED_SHARE_PORTFOLIO_ROUTE,\n  WORKFLOW_PORTFOLIO_ROUTE,\n  NESTED_WORKFLOW_PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE\n} from '../../constants/routes';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport CatalogRoute from '../../routing/catalog-route';\nimport useQuery from '../../utilities/use-query';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { PORTFOLIO_RESOURCE_TYPE } from '../../utilities/constants';\nimport {\n  setOrFetchPortfolio,\n  resetSelectedPortfolio\n} from '../../redux/actions/portfolio-actions';\n\nconst CopyPortfolioItemModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"copy-portfolio-item-modal\" */ '../portfolio/portfolio-item-detail/copy-portfolio-item-modal'\n  )\n);\n\nconst OrderModal = lazy(() =>\n  import(/* webpackChunkName: \"order-modal\" */ '../common/order-modal')\n);\n\nconst EditApprovalWorkflow = lazy(() =>\n  import(\n    /* webpackChunkName: \"edit-approval-workflow\" */ '../common/edit-approval-workflow'\n  )\n);\nconst SharePortfolioModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"share-portfolio\" */ '../portfolio/share-portfolio-modal'\n  )\n);\n\nconst RemovePortfolioModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"remove-portfolio\" */ '../portfolio/remove-portfolio-modal'\n  )\n);\n\nconst AddPortfolioModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"add-portfolio\" */ '../portfolio/add-portfolio-modal'\n  )\n);\n\nconst PortfolioRoutes = () => {\n  const viewState = useInitialUriHash();\n\n  const portfolioItemId = useSelector(\n    (state) => state?.portfolioReducer?.portfolioItem?.portfolioItem?.id\n  );\n  const portfolioItemUserCapabilities = useSelector(\n    (state) =>\n      state?.portfolioReducer?.portfolioItem?.portfolioItem?.metadata\n        ?.user_capabilities,\n    shallowEqual\n  );\n  const portfolios = useSelector(\n    (state) => state?.portfolioReducer?.portfolios,\n    shallowEqual\n  );\n  const selectedPortfolio = useSelector(\n    (state) => state?.portfolioReducer?.selectedPortfolio,\n    shallowEqual\n  );\n\n  const { portfolioUserCapabilities, itemName } = useSelector((state) => ({\n    portfolioUserCapabilities:\n      state?.portfolioReducer?.selectedPortfolio?.metadata?.user_capabilities,\n    itemName: () => state?.portfolioReducer?.selectedPortfolio?.name\n  }));\n  const [{ portfolio: id }, search] = useQuery(['portfolio']);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (id && (!selectedPortfolio.id || id !== selectedPortfolio.id)) {\n      dispatch(setOrFetchPortfolio(id, portfolios));\n    }\n  }, [id]);\n\n  return (\n    <div>\n      <Switch>\n        <Route path={[ADD_PORTFOLIO_ROUTE, EDIT_PORTFOLIO_ROUTE]}>\n          <AddPortfolioModal\n            removeQuery\n            viewState={viewState?.portfolio}\n            closeTarget={PORTFOLIOS_ROUTE}\n          />\n        </Route>\n        <CatalogRoute\n          userCapabilities={portfolioUserCapabilities}\n          requiredCapabilities=\"update\"\n          exact\n          path={NESTED_EDIT_PORTFOLIO_ROUTE}\n        >\n          <AddPortfolioModal\n            closeTarget={{ pathname: PORTFOLIO_ROUTE, search }}\n          />\n        </CatalogRoute>\n        <Route path={REMOVE_PORTFOLIO_ROUTE}>\n          <RemovePortfolioModal viewState={viewState?.portfolio} />\n        </Route>\n        <CatalogRoute\n          userCapabilities={portfolioUserCapabilities}\n          requiredCapabilities=\"destroy\"\n          exact\n          path={NESTED_REMOVE_PORTFOLIO_ROUTE}\n        >\n          <RemovePortfolioModal />\n        </CatalogRoute>\n        <Route exact path={SHARE_PORTFOLIO_ROUTE}>\n          <SharePortfolioModal\n            closeUrl={PORTFOLIOS_ROUTE}\n            querySelector=\"portfolio\"\n            removeSearch\n            viewState={viewState?.portfolio}\n            portfolioName={itemName}\n          />\n        </Route>\n        <Route exact path={NESTED_SHARE_PORTFOLIO_ROUTE}>\n          <SharePortfolioModal\n            closeUrl={PORTFOLIO_ROUTE}\n            portfolioName={itemName}\n          />\n        </Route>\n        <Route exact path={WORKFLOW_PORTFOLIO_ROUTE}>\n          <EditApprovalWorkflow\n            pushParam={{ pathname: PORTFOLIOS_ROUTE }}\n            objectType={PORTFOLIO_RESOURCE_TYPE}\n            objectName={itemName}\n            querySelector=\"portfolio\"\n            removeSearch\n            keepHash\n            onClose={() => dispatch(resetSelectedPortfolio())}\n          />\n        </Route>\n        <Route exact path={NESTED_WORKFLOW_PORTFOLIO_ROUTE}>\n          <EditApprovalWorkflow\n            querySelector=\"portfolio\"\n            pushParam={{ pathname: PORTFOLIO_ROUTE, search }}\n            closeUrl={PORTFOLIO_ROUTE}\n            objectType={PORTFOLIO_RESOURCE_TYPE}\n            objectName={itemName}\n          />\n        </Route>\n        <Route exact path={`${PORTFOLIO_ITEM_ROUTE}/order`}>\n          <OrderModal closeUrl={PORTFOLIO_ITEM_ROUTE} />\n        </Route>\n\n        <CatalogRoute\n          path={`${PORTFOLIO_ITEM_ROUTE}/copy`}\n          requiredCapabilities=\"copy\"\n          userCapabilities={portfolioItemUserCapabilities}\n        >\n          {portfolioItemId && (\n            <CopyPortfolioItemModal\n              portfolioName={itemName()}\n              search={search}\n              portfolioItemId={portfolioItemId}\n              portfolioId={id}\n              closeUrl={PORTFOLIO_ITEM_ROUTE}\n            />\n          )}\n        </CatalogRoute>\n      </Switch>\n    </div>\n  );\n};\n\nexport default PortfolioRoutes;\n","import React, { lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { INVENTORY_RESOURCE_TYPE } from '../../utilities/constants';\nimport useQuery from '../../utilities/use-query';\nimport { useSelector } from 'react-redux';\n\nconst EditApprovalWorkflow = lazy(() =>\n  import(\n    /* webpackChunkName: \"edit-approval-workflow\" */ '../common/edit-approval-workflow'\n  )\n);\n\nconst PlatformRoutes = () => {\n  const [{ platform: id }] = useQuery(['platform']);\n  const { objectName } = useSelector((state) => {\n    const data = state?.platformReducer?.platformInventories?.data;\n    return {\n      objectName: data ? data.find((obj) => obj.id === id)?.name : 'inventory'\n    };\n  });\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/platform/platform-inventories/edit-workflow\">\n          <EditApprovalWorkflow\n            pushParam={{\n              pathname: '/platform/platform-inventories',\n              search: `?platform=${id}`\n            }}\n            objectType={INVENTORY_RESOURCE_TYPE}\n            objectName={objectName}\n            querySelector=\"inventory\"\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default PlatformRoutes;\n","import React, { Suspense } from 'react';\nimport PortfolioRoutes from './portfolio-routes';\nimport PlatformRoutes from './platform-routes';\n\nconst DialogRoutes = () => (\n  <Suspense fallback={<div></div>}>\n    <PortfolioRoutes />\n    <PlatformRoutes />\n  </Suspense>\n);\n\nexport default DialogRoutes;\n","import { Route, Switch, Redirect, useLocation } from 'react-router-dom';\nimport React, { lazy, Suspense } from 'react';\nimport some from 'lodash/some';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  ORDER_ROUTE\n} from './constants/routes';\nimport CatalogRoute from './routing/catalog-route';\nimport DialogRoutes from './smart-components/dialog-routes';\nconst CommonApiError = lazy(() =>\n  import(\n    /* webpackChunkName: \"error-page\" */ './smart-components/error-pages/common-api-error'\n  )\n);\n\nconst Products = lazy(() =>\n  import(\n    /* webpackChunkName: \"products\" */ './smart-components/products/products'\n  )\n);\nconst Platforms = lazy(() =>\n  import(\n    /* webpackChunkName: \"platforms\" */ './smart-components/platform/platforms'\n  )\n);\nconst Platform = lazy(() =>\n  import(\n    /* webpackChunkName: \"platform\" */ './smart-components/platform/platform'\n  )\n);\nconst Portfolios = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolios\" */ './smart-components/portfolio/portfolios'\n  )\n);\nconst Portfolio = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolio\" */ './smart-components/portfolio/portfolio'\n  )\n);\nconst Orders = lazy(() =>\n  import(/* webpackChunkName: \"orders\" */ './smart-components/order/orders')\n);\nconst OrderDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"order-detail\" */ './smart-components/order/order-detail/order-detail'\n  )\n);\nconst OrderProcesses = lazy(() =>\n  import(\n    /* webpackChunkName: \"order-processes\" */ './smart-components/order-process/order-processes'\n  )\n);\n\nconst paths = {\n  products: '/products',\n  platforms: '/platforms',\n  order_processes: '/order-processes',\n  platform: '/platform',\n  portfolios: PORTFOLIOS_ROUTE,\n  portfolio: PORTFOLIO_ROUTE,\n  orders: '/orders',\n  order: ORDER_ROUTE\n};\n\nconst errorPaths = ['/400', '/401', '/403', '/404'];\n\nexport const Routes = () => {\n  const { pathname } = useLocation();\n  return (\n    <Suspense fallback={<AppPlaceholder />}>\n      <Switch>\n        <CatalogRoute path={paths.products} component={Products} />\n        <CatalogRoute path={paths.portfolios} component={Portfolios} />\n        <CatalogRoute path={paths.portfolio} component={Portfolio} />\n        <CatalogRoute\n          permissions={['catalog:portfolios:create']}\n          path={paths.platforms}\n          component={Platforms}\n        />\n        <CatalogRoute\n          permissions={['catalog:portfolios:create']}\n          path={paths.platform}\n          component={Platform}\n        />\n        <CatalogRoute path={paths.order_processes} component={OrderProcesses} />\n        <CatalogRoute path={paths.orders} component={Orders} />\n        <CatalogRoute path={paths.order} component={OrderDetail} />\n        <Route path={errorPaths} component={CommonApiError} />\n        <Route\n          render={() =>\n            some(paths, (p) => p === pathname) ? null : (\n              <Redirect to={paths.portfolios} />\n            )\n          }\n        />\n      </Switch>\n      {/*\n       * We require the empty DIV around the dialog routes to avoid testing issues\n       * It does not have any visual effect on the application\n       * Emzyme simply cannot handle direct descendant of Suspense to be another Suspense\n       */}\n      <div>\n        <DialogRoutes />\n      </div>\n    </Suspense>\n  );\n};\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/cjs/NotificationPortal';\n\nimport { Routes } from './Routes';\nimport { MIN_SCREEN_HEIGHT } from './constants/ui-constants';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport {\n  SET_OPENAPI_SCHEMA,\n  SET_SOURCETYPE_ICONS,\n  INITIALIZE_I18N\n} from './redux/action-types';\n\nimport 'whatwg-fetch';\nimport smoothscroll from 'smoothscroll-polyfill';\n\n// react-int eng locale data\nimport { useIntl } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport { getAxiosInstance } from './helpers/shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from './utilities/constants';\nimport UserContext from './user-context';\n\nsmoothscroll.polyfill();\n\n/**\n * has to be in global context because nav listener is not a part of component lifecycle\n */\nlet ignoreRedirect = true;\n\nconst App = () => {\n  const [auth, setAuth] = useState(false);\n  const [userPermissions, setUserPermissions] = useState();\n  const [userIdentity, setUserIdentity] = useState({ identity: {} });\n  const [openApiSchema, setOpenApiSchema] = useState();\n  const dispatch = useDispatch();\n  const i18l = useIntl();\n  const history = useHistory();\n  let unregister;\n\n  useEffect(() => {\n    insights.chrome.init();\n    dispatch({ type: INITIALIZE_I18N, payload: i18l });\n    Promise.all([\n      getAxiosInstance()\n        .get(`${CATALOG_API_BASE}/openapi.json`)\n        .then((payload) => {\n          setOpenApiSchema(payload);\n          dispatch({ type: SET_OPENAPI_SCHEMA, payload });\n        }),\n      getAxiosInstance()\n        .get(`${SOURCES_API_BASE}/source_types`)\n        .then(({ data }) =>\n          dispatch({\n            type: SET_SOURCETYPE_ICONS,\n            payload: data.reduce(\n              (acc, curr) => ({\n                ...acc,\n                [curr.id]: curr.icon_url\n              }),\n              {}\n            )\n          })\n        ),\n      insights.chrome.auth.getUser().then((user) => {\n        setUserIdentity(user);\n        return insights.chrome\n          .getUserPermissions()\n          .then((data) => setUserPermissions(data));\n      })\n    ]).then(() => setAuth(true));\n\n    insights.chrome.identifyApp('catalog');\n    insights.chrome.navigation([\n      {\n        id: 'products',\n        title: 'Products'\n      },\n      {\n        id: 'portfolios',\n        title: 'Portfolios'\n      },\n      {\n        id: 'platforms',\n        title: 'Platforms'\n      },\n      {\n        id: 'order-processes',\n        title: 'Order processes'\n      },\n      {\n        id: 'orders',\n        title: 'Orders'\n      }\n    ]);\n\n    unregister = insights.chrome.on('APP_NAVIGATION', (event) => {\n      /**\n       * Handle navigation from insights main nav\n       * Uses React history directly instead of browser history to avoid template realod.\n       * only redirect after first application mount\n       */\n      if (!ignoreRedirect && event.domEvent) {\n        history.push(`/${event.navId}`);\n      }\n\n      ignoreRedirect = false;\n    });\n\n    return () => unregister();\n  }, []);\n\n  if (!auth) {\n    return <AppPlaceholder />;\n  }\n\n  return (\n    <UserContext.Provider\n      value={{ permissions: userPermissions, userIdentity, openApiSchema }}\n    >\n      <Fragment>\n        <NotificationsPortal />\n        <section className=\"pf-u-p-0 pf-u-ml-0 pf-l-page__main-section pf-c-page__main-section\">\n          <Grid style={{ minHeight: MIN_SCREEN_HEIGHT }}>\n            <GridItem sm={12} className=\"content-layout\">\n              <Routes />\n            </GridItem>\n          </Grid>\n        </section>\n      </Fragment>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n","export const MIN_SCREEN_HEIGHT = 'calc(100vh - 76px)';\n","import { createGlobalStyle } from 'styled-components';\n\n/**\n * Use direct css imports for FCE components\n * This will save some bundle size\n */\nimport '@redhat-cloud-services/frontend-components/components/ConditionalFilter.css';\nimport '@redhat-cloud-services/frontend-components/components/EmptyTable.css';\nimport '@redhat-cloud-services/frontend-components/components/PrimaryToolbar.css';\nimport '@redhat-cloud-services/frontend-components/components/Section.css';\nimport '@redhat-cloud-services/frontend-components/components/TableToolbar.css';\n\nconst GlobalStyle = createGlobalStyle`\n.disabled-link {\n  pointer-events: none\n}\n\n.font-14{\n  font-size: 14px;\n  color: var(--pf-global--Color--100);\n  font-weight: bold;\n  margin-bottom: 2px !important;\n}\n\n.flex-no-wrap {\n  flex-wrap: nowrap !important;\n  .flex-item-no-wrap {\n    align-self: flex-start;\n    white-space: nowrap;\n  }\n  .pf-c-form__actions {\n    flex-wrap: nowrap !important;\n  }\n}\n\n.orders-list {\n  background-color: var(--pf-global--BackgroundColor--100)\n}\n\n.share-column {\n  .pf-c-select_toggle-wrapper {\n    max-width: calc(100% - 70px);\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n}\n\n/**\n* Update DDF select styles for select component\n*/\n.ddorg__pf4-component-mapper__select-toggle {\n  min-height: 36px;\n}\n\n.filter-select {\n  width: 300px;\n  .pf-c-select__menu {\n    max-width: 100%\n  }\n  .pf-c-select__menu-item {\n    white-space: break-spaces;\n  }\n  .pf-c-select_toggle-wrapper {\n    max-width: calc(100% - 32px);\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n}\n\n//pf-4 fixes\n/**\n* non working pf display modifier: https://www.patternfly.org/v4/documentation/core/utilities/display#display-block\n*/\n.pf-m-grow {\n  flex-grow: 1;\n}\n\n.pf-c-breadcrumb__list, .overflow-wrap {\n  @supports not (overflow-wrap: anywhere) {\n    word-break: break-all;\n  }\n  @supports (overflow-wrap: anywhere) {\n    overflow-wrap: anywhere;\n  }\n}\n\na.pf-c-breadcrumb__item {\n  cursor: pointer;\n  >* {\n    cursor: pointer;\n  }\n}\n\n.pf4-hidefield-overlay{\n  .hide-indicator {\n    z-index: 1;\n  }\n  &::before {\n    z-index: 1;\n  }\n}\n/**\n* End of PF4 fixes\n*/\n\n.icon-danger-fill {\n  fill: var(--pf-global--danger-color--100)\n}\n\n.pf-u-gg-md {\n  grid-gap: 16px !important;\n  gap: 16px;\n}\n\n.bottom-pagination-container {\n  width: 100%\n}\n\n.global-primary-background {\n  background-color: var(--pf-global--BackgroundColor--100)\n}\n\n.full-height {\n  min-height: 100%;\n}\n\n.content-layout {\n  display: flex;\n  flex-direction: column;\n}\n\n.pf-l-flex.align-items-center {\n  align-items: center;\n}\n\n/**\n * frontend components override\n */\n:root {\n  --ins-color--orange: #ec7a08;\n}\n\nbutton:focus {\n  outline: none;\n}\n\nsection.ins-l-content {\n  padding: var(--pf-global--spacer--lg); \n}\n\nsection.ins-l-button-group {\n  margin: 24px 0px;\n  margin: 1.5rem 0rem; \n}\n\nsection.ins-l-button-group > * {\n  display: inline; \n}\n\nsection.ins-l-button-group * + * {\n  margin-left: 5px;\n  margin-left: 0.3125rem; \n}\n\nsection.ins-l-icon-group * + * {\n  margin-left: 10px; \n}\n\nsection.ins-l-icon-group__with-major * + * {\n  margin-left: 7.5px; \n}\n\nsection.ins-l-icon-group__with-major .ins-battery:last-of-type {\n  padding-left: 15px;\n  border-left: 2px solid #eaeaea; \n}\n\nsection.ins-l-icon-group__with-major .ins-battery:last-of-type span.label {\n  font-weight: 500;\n  margin: 0 10px; \n}\n\n.ins-c-primary-toolbar__pagination {\n  margin-left: auto;\n}\n\n.ins-c-primary-toolbar .ins-c-primary-toolbar__group-filter {\n  margin-right: 7px;\n}\n\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { Router as ReactRouter } from 'react-router-dom';\nimport App from './App';\nimport { createBrowserHistory } from 'history';\nimport AppContext from './app-context';\nimport GlobalStyle from './global-styles';\n\nconst pathName = window.location.pathname.split('/');\npathName.shift();\n\nlet release = '/';\nif (pathName[0] === 'beta') {\n  release = `/${pathName.shift()}/`;\n}\n\n/**\n * Make sure that the [1] fragment is present in the pathname.\n * Otherwise we could end up with /undefined/ which will be transformed by the router to //\n */\nconst basename = `${release}${pathName[0]}/${pathName[1] ? pathName[1] : ''}`;\n\nexport const catalogHistory = createBrowserHistory({\n  basename\n});\n\nconst Router = () => (\n  <AppContext.Provider value={{ release }}>\n    <GlobalStyle />\n    <ReactRouter history={catalogHistory}>\n      <App />\n    </ReactRouter>\n  </AppContext.Provider>\n);\n\nexport default Router;\n","import { encodeState } from '../routing/uri-state-manager';\nimport { catalogHistory } from '../router';\n\nconst viewStateMiddleware = () => (dispatch) => (action) => {\n  if (\n    action.type.match(/_FULFILLED$/) &&\n    action?.payload?.meta &&\n    action?.meta?.storeState\n  ) {\n    const hash = encodeState(\n      {\n        ...action.meta,\n        ...action.payload.meta\n      },\n      action.meta.stateKey\n    );\n    /**\n     * Use replace event in case that app did not compute the viewState hash yet (eg. navigating in main menu).\n     * Use history replace event to prevent the multiple prev routes with the same pathname on stack witouth the hash param.\n     * The browser goBack method will now skip the non hash route.\n     * Users wont have to trigger the goBack action multiple times to get to the actual previous view.\n     */\n    const routingAction =\n      catalogHistory.location.hash && catalogHistory.location.hash !== hash\n        ? catalogHistory.push\n        : catalogHistory.replace;\n    routingAction({\n      pathname: catalogHistory.location.pathname,\n      search: catalogHistory.location.search,\n      hash\n    });\n  }\n\n  return dispatch(action);\n};\n\nexport default viewStateMiddleware;\n","import { catalogHistory } from '../router';\n\nconst unAuthorizedMiddleware = () => (dispatch) => (action) => {\n  const nextAction = { ...action };\n  if (action.type.match(/_REJECTED$/) && action?.payload?.redirect) {\n    setTimeout(() => {\n      catalogHistory.push(action.payload.redirect.pathname, {\n        from: catalogHistory.location\n      });\n    });\n    return;\n  }\n\n  return dispatch(nextAction);\n};\n\nexport default unAuthorizedMiddleware;\n","import promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, {\n  applyReducerHash\n} from '@redhat-cloud-services/frontend-components-utilities/files/cjs/ReducerRegistry';\nimport notifications from '@redhat-cloud-services/frontend-components-notifications/cjs/notifications';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/cjs/notificationsMiddleware';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport orderReducer, {\n  orderInitialState\n} from '../redux/reducers/order-reducer';\nimport platformReducer, {\n  platformInitialState\n} from '../redux/reducers/platform-reducer';\nimport orderProcessReducer, {\n  orderProcessInitialState\n} from '../redux/reducers/order-process-reducer';\nimport portfolioReducer, {\n  portfoliosInitialState\n} from '../redux/reducers/portfolio-reducer';\nimport approvalReducer, {\n  approvalInitialState\n} from '../redux/reducers/approval-reducer';\nimport rbacReducer, { rbacInitialState } from '../redux/reducers/rbac-reducer';\nimport shareReducer, {\n  shareInfoInitialState\n} from '../redux/reducers/share-reducer';\nimport openApiReducer, {\n  openApiInitialState\n} from '../redux/reducers/open-api-reducer';\nimport loadingStateMiddleware from './loading-state-middleware';\nimport emptyDataMiddleware from './empty-data-middleware';\nimport breadcrumbsReducer, {\n  initialBreadcrumbsState\n} from '../redux/reducers/breadcrumbs-reducer';\nimport i18nReducer, { i18nInitialState } from '../redux/reducers/i18n-reducer';\nimport viewStateMiddleware from './view-state-middleware';\nimport unAuthorizedMiddleware from './unauthorized-middleware';\n\nconst prodMiddlewares = [\n  notificationsMiddleware({\n    errorTitleKey: ['errors', 'message', 'statusText'],\n    errorDescriptionKey: [\n      'data.errors[0].detail',\n      'data.errors',\n      'data.error',\n      'data.message',\n      'response.body.errors',\n      'data',\n      'errorMessage',\n      'stack'\n    ]\n  })\n];\n\nconst baseMiddlewares = [\n  thunk,\n  promiseMiddleware,\n  unAuthorizedMiddleware,\n  viewStateMiddleware,\n  loadingStateMiddleware,\n  emptyDataMiddleware\n];\nconst registerReducers = (registry) => {\n  registry.register({\n    orderReducer: applyReducerHash(orderReducer, orderInitialState),\n    platformReducer: applyReducerHash(platformReducer, platformInitialState),\n    orderProcessReducer: applyReducerHash(\n      orderProcessReducer,\n      orderProcessInitialState\n    ),\n    portfolioReducer: applyReducerHash(\n      portfolioReducer,\n      portfoliosInitialState\n    ),\n    approvalReducer: applyReducerHash(approvalReducer, approvalInitialState),\n    rbacReducer: applyReducerHash(rbacReducer, rbacInitialState),\n    shareReducer: applyReducerHash(shareReducer, shareInfoInitialState),\n    openApiReducer: applyReducerHash(openApiReducer, openApiInitialState),\n    breadcrumbsReducer: applyReducerHash(\n      breadcrumbsReducer,\n      initialBreadcrumbsState\n    ),\n    i18nReducer: applyReducerHash(i18nReducer, i18nInitialState),\n    notifications\n  });\n};\n\nexport default (isProd = false) => {\n  const registry = new ReducerRegistry({}, [\n    ...baseMiddlewares,\n    ...prodMiddlewares,\n    ...(isProd ? [] : [reduxLogger])\n  ]);\n  registerReducers(registry);\n  return registry.getStore();\n};\n\nexport const testStore = () => {\n  const registry = new ReducerRegistry({}, [...baseMiddlewares]);\n  registerReducers(registry);\n  return registry.getStore();\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './utilities/store';\nimport Router from './router';\nimport { IntlProvider } from 'react-intl';\n\nReactDOM.render(\n  <Provider store={store(true)}>\n    <IntlProvider locale=\"en\">\n      <Router />\n    </IntlProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n/**\n * Register simple service worker JS assets pre chache\n * If registration fails, the app will continue to work withouth any issues.\n * Service worker is generated by webpack and hould be ever avaiable only in production version of the app.\n * You don't yant your JS bundles to be cached in dev env.\n * You must test it locally in non HTTPS environment due to the insecure origin and self signed certificate issues cause by the PROXY.\n * These cannot be overcome due to xss security policy inside service workers browser implementaion to avoid potential securitu issues.\n */\nif (navigator.serviceWorker) {\n  navigator.serviceWorker\n    .register(\n      `${\n        window.location.pathname.includes('/beta') ? '/beta' : ''\n      }/apps/catalog/service-worker.js`\n    )\n    .then((...args) => console.log('Service worker registered with: ', args))\n    .catch(console.log);\n}\n","import axios from 'axios';\nimport {\n  RequestApi,\n  WorkflowApi\n} from '@redhat-cloud-services/approval-client';\nimport {\n  PortfolioApi,\n  PortfolioItemApi,\n  OrderApi,\n  OrderItemApi,\n  IconApi,\n  ServicePlansApi\n} from '@redhat-cloud-services/catalog-client';\n\nimport {\n  CATALOG_API_BASE,\n  APPROVAL_API_BASE,\n  RBAC_API_BASE\n} from '../../utilities/constants';\nimport { GroupApi } from '@redhat-cloud-services/rbac-client';\nimport { stringify } from 'qs';\n\nconst axiosInstance = axios.create({\n  paramsSerializer: (params) => stringify(params)\n});\n\nconst resolveInterceptor = (response) => response.data || response;\nconst errorInterceptor = (error = {}) => {\n  const requestId = error.response?.headers?.['x-rh-insights-request-id'];\n  throw requestId ? { ...error.response, requestId } : { ...error.response };\n};\n\nconst unauthorizedInterceptor = (error = {}) => {\n  if (error.status === 403) {\n    throw {\n      ...error,\n      redirect: {\n        pathname: '/403',\n        message: error.config?.url\n      }\n    };\n  }\n\n  throw error;\n};\n\n// check identity before each request. If the token is expired it will log out user\naxiosInstance.interceptors.request.use(async (config) => {\n  await window.insights.chrome.auth.getUser();\n  return config;\n});\naxiosInstance.interceptors.response.use(resolveInterceptor);\naxiosInstance.interceptors.response.use(null, errorInterceptor);\naxiosInstance.interceptors.response.use(null, unauthorizedInterceptor);\n\nconst orderApi = new OrderApi(undefined, CATALOG_API_BASE, axiosInstance);\nconst orderItemApi = new OrderItemApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst portfolioApi = new PortfolioApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst portfolioItemApi = new PortfolioItemApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst requestsApi = new RequestApi(undefined, APPROVAL_API_BASE, axiosInstance);\nconst workflowApi = new WorkflowApi(\n  undefined,\n  APPROVAL_API_BASE,\n  axiosInstance\n);\nconst iconApi = new IconApi(undefined, CATALOG_API_BASE, axiosInstance);\nconst servicePlansApi = new ServicePlansApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\n\nexport function getPortfolioApi() {\n  return portfolioApi;\n}\n\nexport function getPortfolioItemApi() {\n  return portfolioItemApi;\n}\n\nexport function getOrderApi() {\n  return orderApi;\n}\n\nexport function getOrderItemApi() {\n  return orderItemApi;\n}\n\nexport function getRequestsApi() {\n  return requestsApi;\n}\n\nconst rbacGroupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getRbacGroupApi() {\n  return rbacGroupApi;\n}\n\nexport function getWorkflowApi() {\n  return workflowApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n\nexport function getIconApi() {\n  return iconApi;\n}\n\nexport function getServicePlansApi() {\n  return servicePlansApi;\n}\n\nconst grapqlInstance = axios.create();\ngrapqlInstance.interceptors.request.use(async (config) => {\n  await window.insights.chrome.auth.getUser();\n  return config;\n});\n/**\n * Graphql does not return error response when the qery fails.\n * Instead it returns 200 response with error object.\n * We catch it and throw it to trigger notification middleware\n */\ngrapqlInstance.interceptors.response.use(({ data }) => {\n  if (data.errors) {\n    throw {\n      message: data.errors[0].errorType,\n      data: data.errors[0].message\n    };\n  }\n\n  return data;\n});\n\nexport function getGraphqlInstance() {\n  return grapqlInstance;\n}\n","import React from 'react';\nimport get from 'lodash/get';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\n\nimport {\n  PORTFOLIO_ITEM_NULLABLE,\n  PORTFOLIO_NULLABLE\n} from '../../constants/nullable-attributes';\n\nexport const scrollToTop = () =>\n  document.getElementById('root').scrollTo({\n    behavior: 'smooth',\n    top: 0,\n    left: 0\n  });\n\nexport const filterServiceOffering = ({ display_name, name }, filter) => {\n  const filterAtrribute = display_name || name;\n  return filterAtrribute\n    .trim()\n    .toLowerCase()\n    .includes(filter.toLowerCase());\n};\n\nexport const allowNull = (wrappedPropTypes) => (props, propName, ...rest) => {\n  if (props[propName] === null) {\n    return null;\n  }\n\n  return wrappedPropTypes(props, propName, ...rest);\n};\n\nexport const udefinedToNull = (entity, keys) =>\n  [...Object.keys(entity), ...keys].reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: entity[curr] === undefined ? null : entity[curr]\n    }),\n    {}\n  );\n\nconst nullableMapper = {\n  PortfolioItem: PORTFOLIO_ITEM_NULLABLE,\n  Portfolio: PORTFOLIO_NULLABLE\n};\n\nexport const sanitizeValues = (values, entityType, store) => {\n  const schemas = store.getState().openApiReducer.schema.components.schemas;\n  const permittedValues = Object.keys(values)\n    .filter((key) => !get(schemas, `${entityType}.properties.${key}.readOnly`))\n    .reduce(\n      (acc, curr) => (values[curr] ? { ...acc, [curr]: values[curr] } : acc),\n      {}\n    );\n  return udefinedToNull(permittedValues, nullableMapper[entityType]);\n};\n\nexport const timeAgo = (date) => (\n  <span key={date}>\n    <DateFormat date={date} type=\"relative\" />\n  </span>\n);\n\nconst sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nexport const readableBytes = (bytes) => {\n  if (bytes === 0) {\n    return 'O B';\n  }\n\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\n\n  return (bytes / Math.pow(1024, i)).toFixed(2) * 1 + ' ' + sizes[i];\n};\n\nexport const hasPermission = (userPermissions = [], permissions = []) =>\n  permissions.every((permission) =>\n    userPermissions.find((item) => item.permission === permission)\n  );\n","export const PORTFOLIO_ITEM_NULLABLE = [\n  'name',\n  'description',\n  'long_description',\n  'distributor',\n  'documentation_url',\n  'support_url'\n];\n\nexport const PORTFOLIO_NULLABLE = ['description'];\n","import { createAsyncActionTypes } from './action-types-helper';\n\nconst APPROVAL_PREFIX = '@@catalog/approval/';\n\nconst asyncActionTypes = [\n  'FETCH_WORKFLOWS',\n  'UPDATE_WORKFLOWS',\n  'RESOLVE_WORKFLOWS'\n];\n\nexport const ASYNC_ACTIONS = {\n  ...createAsyncActionTypes(asyncActionTypes, APPROVAL_PREFIX)\n};\n","export const createAsyncActionTypes = (actionTypes, prefix) =>\n  actionTypes\n    .reduce(\n      (acc, curr) => [\n        ...acc,\n        ...[curr, `${curr}_PENDING`, `${curr}_FULFILLED`, `${curr}_REJECTED`]\n      ],\n      []\n    )\n    .reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: `${prefix}${curr}`\n      }),\n      {}\n    );\n","import { useLocation } from 'react-router-dom';\n\nconst useQuery = (requiredParams = []) => {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search);\n  return [\n    requiredParams.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: query.get(curr)\n      }),\n      {}\n    ),\n    search,\n    query\n  ];\n};\n\nexport default useQuery;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport {\n  Bullseye,\n  Card,\n  CardBody,\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Grid,\n  GridItem,\n  Gallery,\n  GalleryItem,\n  Form,\n  FormGroup,\n  TextContent,\n  Text,\n  TextVariants,\n  ActionGroup,\n  Button\n} from '@patternfly/react-core';\nimport styled, { keyframes } from 'styled-components';\nimport { useIntl } from 'react-intl';\nimport { StyledToolbar } from '../styled-components/toolbars';\nimport actionMessages from '../../messages/actions.messages';\nimport formsMessages from '../../messages/forms.messages';\n\nconst wave = keyframes`\n  0% {\n    transform: translateX(-100%);\n  }\n  60% {\n    transform: translateX(100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n`;\n\nconst Skeleton = ({ component: Component = 'span', ...props }) => {\n  return (\n    <SkeletonContainer {...props}>\n      <Component />\n    </SkeletonContainer>\n  );\n};\n\nSkeleton.propTypes = {\n  component: PropTypes.string\n};\n\nconst SkeletonContainer = styled.div`\n  & > * {\n    position: relative;\n    overflow: hidden;\n    width: ${({ width }) =>\n      width ? `${width}${typeof width === 'number' ? 'px' : ''}` : '100%'};\n    height: ${({ height }) =>\n      height ? `${height}${typeof height === 'number' ? 'px' : ''}` : '20px'};\n    display: block;\n    border-radius: 3px;\n    background-color: ${({ secondaryColor }) =>\n      secondaryColor ? secondaryColor : '#f3f3f3'};\n    &:after {\n      animation: 2s ${wave} linear 0.5s infinite;\n      background: linear-gradient(90deg, transparent, #ecebeb, transparent);\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      top: 0;\n      transform: translateX(-100%);\n      z-index: 1;\n    }\n  }\n`;\n\nexport const CardLoader = ({ items }) => (\n  <Grid hasGutter>\n    <GridItem sm={12}>\n      <Section type=\"content\">\n        <Gallery hasGutter>\n          {[...Array(items)].map((_item, index) => (\n            <GalleryItem key={index}>\n              <Card style={{ height: 350 }}>\n                <CardBody>\n                  <Skeleton height={70} width=\"85%\" className=\"pf-u-mb-lg\" />\n                  <Skeleton height={5} width=\"90%\" className=\"pf-u-mb-sm\" />\n                  <Skeleton height={5} width=\"100%\" className=\"pf-u-mb-sm\" />\n                  <Skeleton height={5} width=\"76%\" className=\"pf-u-mb-sm\" />\n                </CardBody>\n              </Card>\n            </GalleryItem>\n          ))}\n        </Gallery>\n      </Section>\n    </GridItem>\n  </Grid>\n);\n\nCardLoader.propTypes = {\n  items: PropTypes.number\n};\n\nCardLoader.defaultProps = {\n  items: 13\n};\n\nexport const AppPlaceholder = () => (\n  <section className=\"pf-u-m-0 pf-u-p-0 pf-l-page__main-section pf-c-page__main-section\">\n    <Skeleton height={32} className=\"pf-u-p-lg global-primary-background\" />\n    <div className=\"pf-u-mt-lg\">\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    </div>\n  </section>\n);\n\nexport const ToolbarTitlePlaceholder = () => <Skeleton height={30} />;\n\nconst ProducLoaderColumn = styled.div`\n  width: 100%;\n  max-width: 250px;\n`;\n\nexport const ProductLoaderPlaceholder = () => (\n  <Fragment>\n    <Skeleton height={70} className=\"pf-u-mb-xl\" />\n    <ProducLoaderColumn>\n      {[...Array(3)].map((_, index) => (\n        <Fragment key={index}>\n          <Skeleton height={8} className=\"pf-u-mb-sm\" />\n          <Skeleton height={8} className=\"pf-u-ml-md pf-u-mb-sm\" width=\"60%\" />\n          <Skeleton height={8} className=\"pf-u-ml-md pf-u-mb-sm\" width=\"50%\" />\n          <Skeleton height={8} className=\"pf-u-mb-sm\" width=\"80%\" />\n          <Skeleton height={8} className=\"pf-u-ml-md pf-u-mb-lg\" width=\"40%\" />\n        </Fragment>\n      ))}\n    </ProducLoaderColumn>\n  </Fragment>\n);\n\nexport const IconPlaceholder = ({ height }) => (\n  <svg height={height} width={height}>\n    <circle cx={height / 2} cy={height / 2} r={height / 2} fill=\"#ecebeb\" />\n  </svg>\n);\n\nIconPlaceholder.propTypes = {\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nIconPlaceholder.defaultProps = {\n  height: '40'\n};\n\nconst FormItemLoader = () => <Skeleton height={38} className=\"pf-u-mb-lg\" />;\n\nexport const ShareLoader = () => {\n  const { formatMessage } = useIntl();\n  return (\n    <Form>\n      <TextContent>\n        <Text component={TextVariants.small}>\n          {formatMessage(formsMessages.inviteGroup)}\n        </Text>\n      </TextContent>\n      <FormGroup fieldId=\"1\">\n        <FormItemLoader />\n      </FormGroup>\n      <TextContent>\n        <Text component={TextVariants.small}>\n          {formatMessage(formsMessages.groupsAccess)}\n        </Text>\n      </TextContent>\n      <FormGroup fieldId=\"3\">\n        <FormItemLoader />\n      </FormGroup>\n      <FormGroup fieldId=\"4\">\n        <FormItemLoader />\n      </FormGroup>\n    </Form>\n  );\n};\n\nexport const WorkflowLoader = () => {\n  const { formatMessage } = useIntl();\n  return (\n    <Form>\n      <FormGroup fieldId=\"2\" label=\"Select workflow\">\n        <FormItemLoader />\n      </FormGroup>\n      <ActionGroup>\n        <Button variant=\"primary\" isDisabled>\n          {formatMessage(actionMessages.save)}\n        </Button>\n      </ActionGroup>\n    </Form>\n  );\n};\n\nexport const ListLoader = ({ items }) => (\n  <DataList aria-label=\"list-loader\" aria-labelledby=\"datalist-placeholder\">\n    {[...Array(items)].map((_item, index) => (\n      <DataListItem key={index} aria-labelledby=\"datalist-item-placeholder\">\n        <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n          <DataListItemCells\n            dataListCells={[\n              <DataListCell key=\"1\">\n                <Skeleton height={67} />\n              </DataListCell>\n            ]}\n          />\n        </DataListItemRow>\n      </DataListItem>\n    ))}\n  </DataList>\n);\n\nListLoader.propTypes = {\n  items: PropTypes.number\n};\n\nListLoader.defaultProps = {\n  items: 5\n};\n\nexport const OrderDetailToolbarPlaceholder = () => <Skeleton height={70} />;\n\nexport const PlatformToolbarPlaceholder = () => (\n  <StyledToolbar className=\"pf-u-pr-lg pf-u-pl-lg pf-u-pb-md pf-u-pt-md\">\n    <Skeleton height={36} width={300} />\n  </StyledToolbar>\n);\n","import { createContext } from 'react';\n\nconst UserContext = createContext({});\n\nexport default UserContext;\n","export const CATALOG_API_BASE = `${process.env.BASE_PATH}/catalog/v1.2`;\nexport const SOURCES_API_BASE = `${process.env.BASE_PATH}/sources/v1.0`;\nexport const APPROVAL_API_BASE = `${process.env.BASE_PATH}/approval/v1.2`;\nexport const TOPOLOGICAL_INVENTORY_API_BASE = `${process.env.BASE_PATH}/topological-inventory/v1.0`;\nexport const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\nexport const permissionValues = ['order', 'read', 'update'];\n\nexport const permissionOptions = [\n  {\n    value: 'order,read,update',\n    label: 'Can order/edit'\n  },\n  {\n    value: 'order,read',\n    label: 'Can order/view'\n  }\n];\n\nexport const PORTFOLIO_RESOURCE_TYPE = 'Portfolio';\nexport const PORTFOLIO_ITEM_RESOURCE_TYPE = 'PortfolioItem';\nexport const INVENTORY_RESOURCE_TYPE = 'ServiceInventory';\nexport const DEFAULT_MAX_LENGTH = 64;\n\nexport const APP_NAME = {\n  Portfolio: 'catalog',\n  PortfolioItem: 'catalog',\n  ServiceInventory: 'topology'\n};\n","export const decodeState = (encodedState) => {\n  try {\n    return JSON.parse(atob(decodeURIComponent(encodedState)));\n  } catch (error) {\n    return undefined;\n  }\n};\n\nexport const encodeState = (state, stateKey) => {\n  const stateObject = stateKey\n    ? {\n        ...decodeState(window.location.hash),\n        [stateKey]: state\n      }\n    : state;\n  try {\n    return encodeURIComponent(btoa(JSON.stringify(stateObject)));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'View state is not a valid JSON, state has will not be generated. View state: ',\n      state\n    );\n    return '';\n  }\n};\n","const { defineMessages } = require('react-intl');\n\nconst portfolioMessages = defineMessages({\n  removeItemsNotification: {\n    id: 'portfolio.notifications.remove.portfolio-items',\n    defaultMessage:\n      'You have removed {count, number} {count, plural, one {product} other {products} } from the {portfolioName} portfolio. <a>Undo</a> if this was a mistake.' // eslint-disable-line max-len\n  },\n  removePortfolioNotification: {\n    id: 'portfolio.notifications.remove.portfolio',\n    defaultMessage:\n      'The portfolio was removed successfully. You can <a>Undo</a> this action if this was a mistake.'\n  },\n  modalCreateTitle: {\n    id: 'portfolio.modal.add.title',\n    defaultMessage: 'Create portfolio'\n  },\n  modalCreateSubmit: {\n    id: 'portfolio.modal.add.create',\n    defaultMessage: 'Create'\n  },\n  modalEditTitle: {\n    id: 'portfolio.modal.edit.title',\n    defaultMessage: 'Edit portfolio'\n  },\n  addProducts: {\n    id: 'portfolio.empty.add.products',\n    defaultMessage: 'Add products'\n  },\n  emptyNoProducts: {\n    id: 'portfolio.empty.no-products',\n    defaultMessage: 'No products in your portfolio'\n  },\n  portfoliosPlaceholder: {\n    id: 'portfolios.filters.placeholder',\n    defaultMessage: 'Filter by portfolio'\n  },\n  portfoliosNoData: {\n    id: 'portfolios.empty.noData.title',\n    defaultMessage: 'No portfolios'\n  },\n  portfoliosNoDataDescription: {\n    id: 'portfolios.empty.noData.description',\n    defaultMessage: 'No portfolios match your filter criteria.'\n  },\n  portfolioRemoveDescription: {\n    id: 'portfolio.remove.modal.description',\n    defaultMessage:\n      'This action will permanently delete portfolio {name} and its data.'\n  },\n  portfolioRemoveTitle: {\n    id: 'portfolio.remove.modal.title',\n    defaultMessage: 'Delete Portfolio?'\n  },\n  portfolioSharePermissions: {\n    id: 'portfolio.share.modal.permissions',\n    defaultMessage: 'Select the share permissions'\n  },\n  portfolioShareGroups: {\n    id: 'portfolio.share.modal.groups',\n    defaultMessage: 'Select a group'\n  },\n  portfolioShareTitle: {\n    id: 'portfolio.share.modal.title',\n    defaultMessage: 'Share portfolio'\n  },\n  portfolioShareApply: {\n    id: 'portfolio.share.modal.apply',\n    defaultMessage: 'Apply'\n  },\n  portfolioShareDescription: {\n    id: 'portfolio.share.modal.description',\n    defaultMessage: 'Share <strong>{name}</strong> portfolio'\n  },\n  addProducstPlatformTitle: {\n    id: 'portfolio.add.platform.title.empty',\n    defaultMessage: 'Please choose platform'\n  },\n  addProducstPlatformDescription: {\n    id: 'portfolio.add.platform.description.empty',\n    defaultMessage:\n      'In order to select products for your portfolio you must choose platform first'\n  },\n  addProducstFilterTitle: {\n    id: 'portfolio.add.platform.filter.empty',\n    defaultMessage: 'No products match filter parameters'\n  },\n  copyItemTitle: {\n    id: 'portfolio.item.copy',\n    defaultMessage: 'Copy product'\n  },\n  portfolioItemSurvey: {\n    id: 'portfolio.item.detail.actions.survey',\n    defaultMessage: 'Edit survey'\n  },\n  portfolioItemOrder: {\n    id: 'portfolio.item.detail.actions.order',\n    defaultMessage: 'Order'\n  },\n  portfolioItemIconTitle: {\n    id: 'portfolio.item.icon.upload.notification',\n    defaultMessage: 'Icon upload error'\n  },\n  portfolioItemOverview: {\n    id: 'portfolio.item.detail.overview',\n    defaultMessage: 'Overview'\n  },\n  portfolioItemSupport: {\n    id: 'portfolio.item.detail.support',\n    defaultMessage: 'Learn more'\n  },\n  portfolioItemDocumentation: {\n    id: 'portfolio.item.detail.documentation',\n    defaultMessage: 'Documentation'\n  },\n  portfolioItemDocLink: {\n    id: 'portfolio.item.detail.doclink',\n    defaultMessage: 'Doc link'\n  },\n  restoreSurvey: {\n    id: 'portfolio.item.survey.restore',\n    defaultMessage: 'Restore to Ansible Tower version'\n  },\n  surveyTitle: {\n    id: 'portfolio.item.survey.edit',\n    defaultMessage: 'Editing survey: {name}'\n  },\n  sourceUnavaiable: {\n    id: 'portfolio.detail.alert.source.unavailable',\n    defaultMessage: 'The platform for this product is unavailable'\n  },\n  objectUnavaiable: {\n    id: 'portfolio.detail.alert.unavailable',\n    defaultMessage: 'The {object} for this product is no longer available'\n  },\n  backToProducts: {\n    id: 'portfolio.detail.back-to-products',\n    defaultMessage: 'Back to products'\n  },\n  editProduct: {\n    id: 'portfolio.item.edit.title',\n    defaultMessage: 'Edit product'\n  },\n  shareTooltip: {\n    id: 'portfolio.share.add.tooltip',\n    defaultMessage: 'Share portfolio with selected group and permissions.'\n  },\n  shareErrorMissingGroup: {\n    id: 'portfolio.share.add.missing-group',\n    defaultMessage: 'Select group to share portfolio.'\n  },\n  shareErrorMissingPermission: {\n    id: 'portfolio.share.add.missing-permission',\n    defaultMessage: 'Assign permissions to selected group.'\n  },\n  shareErrorMissingData: {\n    id: 'portfolio.share.add.missing-data',\n    defaultMessage: 'Choose group and permissions.'\n  },\n  shareDuplicate: {\n    id: 'portfolio.share.add.duplicate',\n    defaultMessage: 'Portfolio is already shared with this group.'\n  },\n  noShares: {\n    id: 'portfolio.share.add.no-shares',\n    defaultMessage: 'To share portfolio select a group and permissions'\n  },\n  shareGroupsAccess: {\n    id: 'share.groups.access',\n    defaultMessage: 'Groups with access'\n  },\n  shareSuccessTitle: {\n    id: 'share.notification.success.title',\n    defaultMessage: 'Portfolio sharing settings were updated'\n  },\n  addSuccessTitle: {\n    id: 'portfolio.add.success.title',\n    defaultMessage: 'Success adding portfolio'\n  },\n  addSuccessDescription: {\n    id: 'portfolio.add.success.description',\n    defaultMessage: 'Portfolio <b>{name}</b> was added successfully.'\n  }\n});\n\nexport default portfolioMessages;\n","import React from 'react';\nimport {\n  ADD_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications/cjs/actionTypes';\n\nimport * as ActionTypes from '../action-types';\nimport * as PortfolioHelper from '../../helpers/portfolio/portfolio-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport const doFetchPortfolios = ({\n  filter,\n  ...options\n} = defaultSettings) => ({\n  type: ActionTypes.FETCH_PORTFOLIOS,\n  meta: { ...defaultSettings, filter, ...options },\n  payload: PortfolioHelper.listPortfolios(filter, options)\n});\n\nexport const fetchPortfolios = (options) => (dispatch) =>\n  dispatch(doFetchPortfolios(options));\n\nexport const fetchPortfoliosWithState = (options = defaultSettings) => (\n  dispatch\n) =>\n  dispatch(\n    doFetchPortfolios({ ...options, storeState: true, stateKey: 'portfolio' })\n  );\n\nexport const fetchPortfolioItems = (\n  filter = '',\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS,\n  meta: { filter, storeState: true, stateKey: 'products' },\n  payload: PortfolioHelper.listPortfolioItems(\n    options.limit,\n    options.offset,\n    filter\n  )\n});\n\nexport const fetchPortfolioItemsWithPortfolio = (\n  portfolioId,\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolioItemsWithPortfolio(portfolioId, options),\n  meta: {\n    ...options,\n    storeState: true,\n    stateKey: 'portfolioItems'\n  }\n});\n\nexport const fetchSelectedPortfolio = (id) => ({\n  type: ActionTypes.FETCH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolio(id)\n});\n\nexport const searchPortfolioItems = (value) => ({\n  type: ActionTypes.FILTER_PORTFOLIO_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const addPortfolio = (portfolioData, notification) => ({\n  type: ActionTypes.ADD_PORTFOLIO,\n  payload: PortfolioHelper.addPortfolio(portfolioData),\n  meta: {\n    notifications: {\n      fulfilled: notification\n    }\n  }\n});\n\nexport const addToPortfolio = (portfolioId, items) => ({\n  type: ActionTypes.ADD_TO_PORTFOLIO,\n  payload: PortfolioHelper.addToPortfolio(portfolioId, items),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding products',\n        description: 'Products were successfully added to portfolio.'\n      }\n    }\n  }\n});\n\nexport const updatePortfolio = (portfolioData, options) => (\n  dispatch,\n  getState\n) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO,\n    payload: portfolioData\n  });\n\n  return PortfolioHelper.updatePortfolio(portfolioData, { getState })\n    .then(() => dispatch(doFetchPortfolios(options)))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          dismissable: true,\n          variant: 'success',\n          title: 'Success updating portfolio',\n          description: 'The portfolio was updated successfully.'\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const undoRemovePortfolio = (portfolioId, restoreKey, viewState) => (\n  dispatch\n) => {\n  dispatch({ type: CLEAR_NOTIFICATIONS });\n  return PortfolioHelper.undeletePortfolio(portfolioId, restoreKey).then(\n    (portfolio) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: `Portfolio ${portfolio.name} has been restored`\n        }\n      });\n      return dispatch(fetchPortfolios(viewState));\n    }\n  );\n};\n\nexport const removePortfolio = (portfolioId, viewState = {}) => (\n  dispatch,\n  getState\n) => {\n  dispatch({\n    type: ActionTypes.DELETE_TEMPORARY_PORTFOLIO,\n    payload: portfolioId\n  });\n  return dispatch({\n    type: ActionTypes.REMOVE_PORTFOLIO,\n    payload: PortfolioHelper.removePortfolio(portfolioId)\n      .then(({ restore_key }) => {\n        dispatch({\n          type: ADD_NOTIFICATION,\n          payload: {\n            variant: 'success',\n            title: 'Success removing portfolio',\n            dismissable: true,\n            description: (\n              <FormattedMessage\n                {...portfolioMessages.removePortfolioNotification}\n                values={{\n                  // eslint-disable-next-line react/display-name\n                  a: (chunks) => (\n                    <a\n                      href=\"#\"\n                      id={`undo-delete-portfolio-${portfolioId}`}\n                      onClick={(event) => {\n                        event.preventDefault();\n                        dispatch(\n                          undoRemovePortfolio(\n                            portfolioId,\n                            restore_key,\n                            viewState\n                          )\n                        );\n                      }}\n                    >\n                      {chunks}\n                    </a>\n                  )\n                }}\n              />\n            )\n          }\n        });\n        const { meta, data } = getState().portfolioReducer.portfolios;\n        return dispatch(\n          fetchPortfolios({\n            ...viewState,\n            ...meta,\n            offset: data.length === 0 ? 0 : meta.offset\n          })\n        );\n      })\n      .catch((error) => {\n        dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n        throw error;\n      })\n  });\n};\n\nexport const selectPortfolioItem = (portfolioItem) => ({\n  type: ActionTypes.SELECT_PORTFOLIO_ITEM,\n  payload: portfolioItem\n});\n\nexport const undoRemoveProductsFromPortfolio = (restoreData, portfolioId) => (\n  dispatch\n) => {\n  dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_PENDING` });\n  return PortfolioHelper.restorePortfolioItems(restoreData)\n    .then(() =>\n      dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .then(() => dispatch({ type: CLEAR_NOTIFICATIONS }))\n    .then(() => dispatch(fetchPortfolioItemsWithPortfolio(portfolioId)))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: 'Products have been restored'\n        }\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const removeProductsFromPortfolio = (portfolioItems, portfolioName) => (\n  dispatch,\n  getState\n) => {\n  dispatch({\n    type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_PENDING`\n  });\n  const {\n    portfolioReducer: {\n      portfolioItems: { meta },\n      selectedPortfolio: { id: portfolioId }\n    }\n  } = getState();\n  return PortfolioHelper.removePortfolioItems(portfolioItems)\n    .then((data) =>\n      dispatch(\n        fetchPortfolioItemsWithPortfolio(portfolioId, {\n          offset: 0,\n          limit: meta.limit,\n          filter: ''\n        })\n      ).then(() => data)\n    )\n    .then((data) => {\n      return dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'Products removed',\n          dismissable: true,\n          description: (\n            <FormattedMessage\n              {...portfolioMessages.removeItemsNotification}\n              values={{\n                count: portfolioItems.length,\n                portfolioName,\n                // eslint-disable-next-line react/display-name\n                a: (chunks) => (\n                  <a\n                    href=\"#\"\n                    id={`restore-portfolio-item-${portfolioId}`}\n                    onClick={(event) => {\n                      event.preventDefault();\n                      dispatch(\n                        undoRemoveProductsFromPortfolio(data, portfolioId)\n                      );\n                    }}\n                  >\n                    {chunks}\n                  </a>\n                )\n              }}\n            />\n          )\n        }\n      });\n    })\n    .then(() =>\n      dispatch({ type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const copyPortfolio = (id) => (dispatch) => {\n  dispatch({ type: 'COPY_PORTFOLIO_PENDING' });\n  return PortfolioHelper.copyPortfolio(id)\n    .then((portfolio) => {\n      dispatch({ type: 'COPY_PORTFOLIO_FULFILLED' });\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a portfolio',\n          description: `${portfolio.name} has been copied.`,\n          dismissable: true\n        }\n      });\n      return portfolio;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_REJECTED', payload: err })\n    );\n};\n\nexport const copyPortfolioItem = (\n  portfolioItemId,\n  copyObject,\n  newPortfolio\n) => (dispatch) => {\n  return PortfolioHelper.copyPortfolioItem(portfolioItemId, copyObject)\n    .then((data) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a product',\n          description: `${data.name} has been copied into ${newPortfolio.name}`,\n          dismissable: true\n        }\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_ITEM_REJECTED', payload: err })\n    );\n};\n\nexport const resetSelectedPortfolio = () => ({\n  type: ActionTypes.RESET_SELECTED_PORTFOLIO\n});\n\nexport const updatePortfolioItem = (values) => (dispatch, getState) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM,\n    payload: values\n  });\n  return PortfolioHelper.updatePortfolioItem(values, { getState })\n    .then((data) => {\n      dispatch({ type: ActionTypes.UPDATE_PORTFOLIO_ITEM, payload: data });\n      return data;\n    })\n    .then((item) =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: `Product \"${item.name}\" was successfully updated`,\n          dismissable: true\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_ITEM_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const getPortfolioItemDetail = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_PENDING` });\n  return PortfolioHelper.getPortfolioItemDetail(params).then(\n    ([portfolioItem, source]) =>\n      dispatch({\n        type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_FULFILLED`,\n        payload: {\n          portfolioItem,\n          source\n        }\n      })\n  );\n};\n\nexport const setOrFetchPortfolio = (id, portfolios) => {\n  const existingPorfolio = portfolios?.data?.find(\n    (portfolio) => portfolio.id === id\n  );\n\n  if (existingPorfolio) {\n    return {\n      type: `${ActionTypes.FETCH_PORTFOLIO}_FULFILLED`,\n      payload: existingPorfolio\n    };\n  }\n\n  return fetchSelectedPortfolio(id);\n};\n"],"sourceRoot":""}