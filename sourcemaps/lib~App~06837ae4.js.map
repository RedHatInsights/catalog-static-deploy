{"version":3,"sources":["webpack:///./src/redux/action-types/action-types-helper.ts","webpack:///./src/redux/action-types/approval-action-types.ts","webpack:///./src/utilities/async-form-validator.ts","webpack:///./src/messages/actions.messages.ts","webpack:///./src/user-context.js","webpack:///./src/routing/uri-state-manager.ts","webpack:///./src/redux/actions/portfolio-actions.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.tsx","webpack:///./src/forms/form-fields/share-group-select.tsx","webpack:///./src/forms/form-fields/share-group-edit.tsx","webpack:///./src/messages/schemas.messages.ts","webpack:///./src/utilities/translate-schema.js","webpack:///./src/forms/form-fields/copy-name-display.tsx","webpack:///./src/forms/form-fields/initial-chips.tsx","webpack:///./src/forms/form-fields/form-template.tsx","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/utilities/use-format-message.tsx","webpack:///./src/routing/use-initial-uri-hash.js","webpack:///./src/smart-components/error-pages/error-redirects.js","webpack:///./src/redux/actions/order-process-actions.ts","webpack:///./src/presentational-components/styled-components/toolbars.tsx","webpack:///./src/presentational-components/shared/intl-rich-text-components.tsx","webpack:///./src/forms/set-object-tags.schema.ts","webpack:///./src/smart-components/common/tagging-modal.js","webpack:///./src/helpers/shared/user-login.ts","webpack:///./src/helpers/shared/pagination.ts","webpack:///./src/smart-components/order-process/set-order-process-modal.js","webpack:///./src/presentational-components/styled-components/spinner-wrapper.tsx","webpack:///./src/helpers/portfolio/portfolio-helper.ts","webpack:///./src/app-context.js","webpack:///./src/redux/action-types.ts","webpack:///./src/messages/order-processes.messages.ts","webpack:///./src/routing/catalog-history.ts","webpack:///./src/routing/catalog-route.js","webpack:///./src/messages/portfolio.messages.ts","webpack:///./src/utilities/constants.ts","webpack:///./src/helpers/order-process/order-process-helper.ts","webpack:///./src/redux/reducers/order-reducer.ts","webpack:///./src/redux/reducers/platform-reducer.ts","webpack:///./src/redux/reducers/order-process-reducer.ts","webpack:///./src/redux/reducers/portfolio-reducer.ts","webpack:///./src/redux/reducers/approval-reducer.ts","webpack:///./src/redux/reducers/rbac-reducer.ts","webpack:///./src/redux/reducers/share-reducer.ts","webpack:///./src/redux/reducers/open-api-reducer.ts","webpack:///./src/utilities/loading-state-middleware.ts","webpack:///./src/utilities/empty-data-middleware.ts","webpack:///./src/redux/reducers/breadcrumbs-reducer.ts","webpack:///./src/redux/reducers/i18n-reducer.ts","webpack:///./src/utilities/view-state-middleware.ts","webpack:///./src/utilities/unauthorized-middleware.ts","webpack:///./src/utilities/store.ts","webpack:///./src/smart-components/dialog-routes/portfolio-routes.js","webpack:///./src/smart-components/dialog-routes/platform-routes.js","webpack:///./src/smart-components/dialog-routes/index.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/constants/ui-constants.ts","webpack:///./src/global-styles.js","webpack:///./src/router.js","webpack:///./src/entry.js","webpack:///./src/utilities/use-query.ts","webpack:///./src/presentational-components/shared/loader-placeholders.tsx","webpack:///./src/constants/routes.ts","webpack:///./src/messages/forms.messages.ts","webpack:///./src/presentational-components/styled-components/level.tsx","webpack:///./src/messages/labels.messages.ts","webpack:///./src/helpers/shared/helpers.tsx","webpack:///./src/constants/nullable-attributes.ts"],"names":["prefix","ASYNC_ACTIONS","reduce","acc","curr","asyncFunction","debounceTime","options","onlyResolvesLast","actionMessages","share","id","defaultMessage","copy","setApproval","edit","delete","deleting","save","UserContext","createContext","decodeState","encodedState","JSON","parse","atob","decodeURIComponent","error","encodeState","state","stateKey","stateObject","window","location","hash","encodeURIComponent","btoa","stringify","console","warn","doFetchPortfolios","defaultSettings","filters","type","ActionTypes","meta","payload","PortfolioHelper","fetchPortfolios","dispatch","fetchPortfoliosWithState","storeState","fetchPortfolioItems","filter","limit","offset","fetchPortfolioItemsWithPortfolio","portfolioId","fetchSelectedPortfolio","addPortfolio","portfolioData","notification","notifications","fulfilled","addToPortfolio","items","variant","title","description","updatePortfolio","getState","then","ADD_NOTIFICATION","dismissable","undoRemovePortfolio","restoreKey","viewState","CLEAR_NOTIFICATIONS","portfolio","name","removePortfolio","restore_key","portfolioMessages","removePortfolioNotification","values","a","chunks","href","onClick","event","preventDefault","portfolioReducer","portfolios","data","length","removeProductsFromPortfolio","portfolioItems","portfolioName","firstSelectedProduct","selectedPortfolio","removeItemsNotification","count","productName","b","restoreData","err","undoRemoveProductsFromPortfolio","copyPortfolio","copyPortfolioItem","portfolioItemId","copyObject","newPortfolio","resetSelectedPortfolio","updatePortfolioItem","item","getPortfolioItemDetail","params","portfolioItem","source","setOrFetchPortfolio","existingPorfolio","find","createOptions","inputValue","isRequired","optionsMessages","selectOptions","undefined","label","choose","none","Select","input","isDisabled","multi","loadOptions","rest","formatMessage","initialFetch","setInitialFetch","formOptions","loadOptionsOverride","initial","Array","isArray","map","option","value","filterValue","initialOptions","menuIsPortal","onChange","change","args","isMulti","current","props","helperText","hideLabel","showError","FormGroup","fieldId","validated","helperTextInvalid","TextContent","Text","component","small","initialState","resetGroup","group","permission","shareReducer","NewGroupSelect","tooltipContent","permissions","addGroup","currentGroups","shareErrorMissingPermission","shareErrorMissingGroup","shareTooltip","shareErrorMissingData","hasError","group_uuid","Level","grow","Grid","hasGutter","className","GridItem","span","key","isSearchable","isClearable","simpleValue","placeholder","groupsPlaceholder","shareDuplicate","permissionsPlaceholder","alignSelf","Tooltip","content","Button","groupName","fields","push","StyledText","SharedGroup","remove","index","permissionVerbs","h4","noShares","shareGroupsAccess","translateString","string","translateField","field","translateKeys","fieldCopy","forEach","Object","prototype","hasOwnProperty","call","schemasMessages","translateSchema","schema","schemaCopy","getName","fieldSpy","loading","setName","ChipGroup","Chip","handleRemove","StyledForm","ModalFormTemplate","formFields","submitLabel","modalProps","isLoading","onClose","handleSubmit","createPortal","Backdrop","FocusTrap","onSubmit","ModalBoxCloseButton","ModalBoxHeader","ModalBoxBody","Spinner","ModalBoxFooter","subscription","invalid","validating","pristine","submitting","cancel","document","body","isModal","catalogComponentMapper","componentTypes","TEXT_FIELD","TextField","TEXTAREA","Textarea","PLAIN_TEXT","PlainText","SELECT","Pf4SelectWrapper","CHECKBOX","Checkbox","RADIO","Radio","SWITCH","Switch","SUB_FORM","SubForm","ShareGroupSelect","ShareGroupEdit","CopyNameDisplay","InitialChips","catalogValidatorMapper","validatorMapper","validatorTypes","EXACT_LENGTH","MAX_LENGTH","MIN_ITEMS","MIN_LENGTH","PATTERN","REQUIRED","URL","catalogValidatorAlias","FormRenderer","templateProps","useFormatMessage","componentMapper","FormTemplate","propTypes","formContainer","PropTypes","oneOf","bool","object","defaultProps","memo","message","internalValues","entries","useInitialUriHash","substring","UnauthorizedRedirect","useLocation","to","pathname","from","fetchOrderProcesses","pagination","orderProcesses","orderProcessReducer","finalPagination","fetchOrderProcess","addOrderProcess","processData","intl","addProcessSuccessTitle","addProcessSuccessDescription","updateOrderProcess","processId","updateProcessSuccessTitle","sortOrderProcesses","sortBy","setOrderProcess","toTag","toUntag","resourceType","removeOrderProcess","orderProcess","removeProcessSuccessTitle","removeProcessSuccessDescription","removeOrderProcesses","removeProcessesSuccessTitle","removeProcessesSuccessDescription","StyledToolbar","StyledToolbarGroup","TopToolbarWrapper","div","TopToolbarTitleContainer","Bold","resolveNewProcessProps","_fieldApi","initialProcessess","existingTagsMessage","loadTags","resolveProps","TaggingModal","getInitialTags","subTitle","useState","setData","useEffect","Modal","isOpen","Stack","StackItem","initialValues","createSchema","formData","unlinkArray","process","linkDiff","difference","unLinkDiff","toLinkTags","toUnlinkTags","onCancel","clearedValue","disableSubmit","func","node","axiosInstance","create","paramsSerializer","interceptors","request","use","config","insights","chrome","auth","getUser","response","requestId","headers","status","redirect","url","orderApi","orderItemApi","portfolioApi","portfolioItemApi","workflowApi","servicePlansApi","orderProcessApi","getPortfolioApi","getPortfolioItemApi","getOrderApi","getOrderItemApi","rbacGroupApi","getRbacGroupApi","getWorkflowApi","getAxiosInstance","getServicePlansApi","getOrderProcessApi","grapqlInstance","getGraphqlInstance","errors","errorType","getCurrentPage","Math","floor","getNewPage","page","SetOrderProcessModal","pushParam","objectType","querySelector","objectName","useDispatch","useHistory","useQuery","query","getLinkedOrderProcesses","orderProcessesMessages","toLink","toUnlink","object_type","app_name","APP_NAME","object_id","addNotification","setOrderProcessNotificationTitle","setOrderProcessNotificationDescription","linked","unlinked","listOrderProcesses","currentOrderProcesses","setOrderProcessSubtitle","strong","shape","search","SpinnerWrapper","listPortfolios","sortDirection","filterQuery","get","listPortfolioItems","portfolioReference","portfolio_id","keys","join","portfolioItemIndex","getPortfolio","showPortfolio","getPortfolioItemsWithPortfolio","createPortfolio","Promise","all","createPortfolioItem","service_offering_ref","store","destroyPortfolio","removePortfolioItems","portfolioItemIds","itemId","destroyPortfolioItem","fetchPortfolioByName","restorePortfolioItems","unDeletePortfolioItem","postCopyPortfolio","postCopyPortfolioItem","resetPortfolioItemIcon","iconId","uploadPortfolioItemIcon","file","FormData","append","patch","post","accept","_boundary","catch","notFound","getPortfolioFromState","undeletePortfolio","AppContext","FETCH_SERVICE_PLANS","FETCH_SERVICE_PLAN_PARAMETERS","SUBMIT_SERVICE_ORDER","SET_SELECTED_PLAN","LIST_ORDERS","CANCEL_ORDER","SET_ORDERS","FETCH_ORDERS","FETCH_PLATFORM","FETCH_PLATFORMS","FETCH_PLATFORM_ITEMS","FETCH_PLATFORM_ITEM","FETCH_MULTIPLE_PLATFORM_ITEMS","FILTER_PLATFORM_ITEMS","FETCH_PLATFORM_INVENTORIES","SET_INVENTORIES_LOADING_STATE","FETCH_PORTFOLIOS","FETCH_PORTFOLIO_ITEM","FETCH_PORTFOLIO_ITEMS","FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO","FETCH_PORTFOLIO","FILTER_PORTFOLIO_ITEMS","ADD_PORTFOLIO","ADD_TO_PORTFOLIO","UPDATE_PORTFOLIO","REMOVE_PORTFOLIO","REMOVE_PORTFOLIO_ITEMS","RESTORE_PORTFOLIO_ITEMS","RESET_SELECTED_PORTFOLIO","ADD_TEMPORARY_PORTFOLIO","UPDATE_TEMPORARY_PORTFOLIO","DELETE_TEMPORARY_PORTFOLIO","RESTORE_PORTFOLIO_PREV_STATE","SET_PORTFOLIO_ITEMS","UPDATE_TEMPORARY_PORTFOLIO_ITEM","RESTORE_PORTFOLIO_ITEM_PREV_STATE","UPDATE_PORTFOLIO_ITEM","FETCH_RBAC_GROUPS","SHARE_PORTFOLIO","UNSHARE_PORTFOLIO","QUERY_PORTFOLIO","FETCH_REQUESTS","FETCH_ORDER_ITEMS","SET_LOADING_STATE","SET_OPENAPI_SCHEMA","SET_ORDER_DETAIL","FETCH_APPROVAL_REQUESTS","SELECT_PORTFOLIO_ITEM","FETCH_SERVICE_OFFERING","SET_SOURCETYPE_ICONS","INITIALIZE_BREADCRUMBS","INITIALIZE_I18N","FETCH_ORDER_PROCESSES","ADD_ORDER_PROCESS","SORT_ORDER_PROCESSES","SET_ORDER_PROCESS","FETCH_ORDER_PROCESS","REMOVE_ORDER_PROCESS","REMOVE_ORDER_PROCESSES","SET_FILTER_ORDER_PROCESSES","UPDATE_ORDER_PROCESS","noOrderProcessesDescription","noOrderProcessesFilterDescription","orderProcessesFilter","noOrderProcesses","orderProcessName","enterOrderProcessName","deleteOrderProcess","removeProcessTitle","removeProcessAriaLabel","removeProcessDescription","createOrderProcess","pathName","split","shift","basename","catalogHistory","release","ReidrectOnAccess","CatalogRoute","userCapabilities","requiredCapabilities","userPermissions","useContext","some","capability","hasCapability","hasPermission","arrayOf","oneOfType","portfoliosTitle","modalCreateTitle","modalEditTitle","addProducts","emptyNoProducts","portfoliosPlaceholder","portfoliosNoData","portfoliosNoDataDescription","portfolioRemoveDescription","portfolioRemoveTitle","portfolioSharePermissions","portfolioShareGroups","portfolioShareTitle","portfolioShareApply","portfolioShareDescription","addProducstPlatformTitle","addProducstPlatformDescription","addProducstFilterTitle","copyItemTitle","portfolioItemSurvey","portfolioItemOrder","portfolioItemIconTitle","portfolioItemOverview","portfolioItemSupport","portfolioItemDocumentation","portfolioItemDocLink","restoreSurvey","surveyTitle","sourceUnavaiable","objectUnavaiable","backToProducts","editProduct","shareSuccessTitle","shareSuccessTitleOnlySharing","shareSuccessTitleOnlyUnsharing","shareSuccessTitleOnlyChaningPermissions","shareSuccessDescriptionOnlySharing","shareSuccessDescriptionOnlyUnsharing","shareSuccessDescriptionOnlyChaningPermissions","shareSuccessTwoGroup","shareSuccessMultipleGroups","addSuccessTitle","addSuccessDescription","CATALOG_API_BASE","SOURCES_API_BASE","APPROVAL_API_BASE","TOPOLOGICAL_INVENTORY_API_BASE","RBAC_API_BASE","permissionValues","permissionOptions","PORTFOLIO_RESOURCE_TYPE","PORTFOLIO_ITEM_RESOURCE_TYPE","INVENTORY_RESOURCE_TYPE","DEFAULT_MAX_LENGTH","Portfolio","PortfolioItem","ServiceInventory","BEFORE_TYPE","AFTER_TYPE","loadProductOptions","fetchOrderProcessByName","showOrderProcess","setOrderProcesses","promises","linkTagToOrderProcess","unlinkTagFromOrderProcess","objectId","destroyOrderProcess","selectedProcesses","before_portfolio_item_id","after_portfolio_item_id","op","promiseB","addOrderProcessBeforeItem","portfolio_item_id","promiseA","addOrderProcessAfterItem","orderInitialState","servicePlans","selectedPlan","requests","orderDetail","order","platform","orders","setLoadingState","setOrders","setOrderDetail","planParameters","orderItems","approvalRequest","platformInitialState","platformIconMapping","sourceTypeIcons","isPlatformDataLoading","selectedPlatform","platforms","platformItems","platformInventories","platformItem","serviceOffering","service","setInventoriesDataLoadingState","isInventoriesDataLoading","source_type_id","platformId","orderProcessInitialState","property","direction","selectedOrderProcesses","portfoliosInitialState","metadata","user_capabilities","statistics","setPortfolioItem","selectPortfolio","restorePrevState","prevState","created_at","updated_at","Date","toString","approvalInitialState","isFetching","isResolving","workflows","resolvedWorkflows","FETCH_WORKFLOWS_PENDING","FETCH_WORKFLOWS_FULFILLED","RESOLVE_WORKFLOWS_PENDING","RESOLVE_WORKFLOWS_FULFILLED","rbacInitialState","rbacGroups","shareInfoInitialState","shareInfo","openApiInitialState","action","match","nextAction","noFilter","every","noData","initialBreadcrumbsState","fragments","i18nInitialState","replace","setTimeout","prodMiddlewares","errorTitleKey","errorDescriptionKey","baseMiddlewares","registerReducers","registry","register","orderReducer","platformReducer","approvalReducer","rbacReducer","openApiReducer","breadcrumbsReducer","i18nReducer","CopyPortfolioItemModal","lazy","OrderModal","EditApprovalWorkflow","SharePortfolioModal","RemovePortfolioModal","AddPortfolioModal","PortfolioRoutes","useSelector","portfolioItemUserCapabilities","shallowEqual","portfolioUserCapabilities","itemName","path","ADD_PORTFOLIO_ROUTE","EDIT_PORTFOLIO_ROUTE","removeQuery","closeTarget","PORTFOLIOS_ROUTE","exact","NESTED_EDIT_PORTFOLIO_ROUTE","PORTFOLIO_ROUTE","REMOVE_PORTFOLIO_ROUTE","NESTED_REMOVE_PORTFOLIO_ROUTE","SHARE_PORTFOLIO_ROUTE","closeUrl","removeSearch","NESTED_SHARE_PORTFOLIO_ROUTE","WORKFLOW_PORTFOLIO_ROUTE","keepHash","NESTED_WORKFLOW_PORTFOLIO_ROUTE","PORTFOLIO_ITEM_ROUTE","EDIT_ORDER_PROCESS_ROUTE","NESTED_EDIT_ORDER_PROCESS_ROUTE","PlatformRoutes","obj","DialogRoutes","fallback","CommonApiError","Products","Platforms","Platform","Portfolios","Orders","OrderDetail","OrderProcesses","paths","products","order_processes","ORDER_ROUTE","errorPaths","Routes","render","p","smoothscroll","polyfill","ignoreRedirect","App","unregister","setAuth","setUserPermissions","identity","userIdentity","setUserIdentity","openApiSchema","setOpenApiSchema","i18l","useIntl","history","init","icon_url","user","getUserPermissions","identifyApp","on","domEvent","navId","Provider","style","minHeight","sm","GlobalStyle","createGlobalStyle","Router","ReactDOM","isProd","getStore","locale","getElementById","navigator","serviceWorker","includes","log","requiredParams","URLSearchParams","wave","Skeleton","Component","SkeletonContainer","width","height","secondaryColor","CardLoader","_item","AppPlaceholder","ToolbarTitlePlaceholder","ProducLoaderColumn","ProductLoaderPlaceholder","_","IconPlaceholder","cx","cy","r","fill","FormItemLoader","ShareLoader","inviteGroup","groupsAccess","WorkflowLoader","ListLoader","dataListCells","OrderDetailToolbarPlaceholder","PlatformToolbarPlaceholder","ADD_PRODUCTS_ROUTE","EDIT_PORTFOLIO_WORKFLOW_ROUTE","EDIT_SURVEY_ROUTE","ORDERS_ROUTE","PLATFORM_INVENTORIES_ROUTE","PLATFORM_ROUTE","PLATFORM_SERVICE_OFFERINGS_ROUTE","PLATFORM_TEMPLATES_ROUTE","PLATFORMS_ROUTE","PORTFOLIO_ITEM_ROUTE_EDIT","PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE","ORDER_PROCESSES_ROUTE","ADD_ORDER_PROCESS_ROUTE","REMOVE_ORDER_PROCESS_ROUTE","UPDATE_ORDER_PROCESS_ROUTE","formsMessages","orderProcessTitle","nameTaken","currentBeforeProvision","currentAfterProvision","beforeProvision","afterProvision","productsPlaceholder","StyledLevelItem","labelMessages","shared","confirm","owner","updated","created","product","scrollToTop","scrollTo","behavior","top","left","nullableMapper","sanitizeValues","entityType","entity","schemas","components","permittedValues","TimeAgo","date","DateFormat"],"mappings":"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","file":"js/lib~App~06837ae4.46fe4e7de59881bedf26.js","sourcesContent":["import { StringObject } from '../../types/common-types';\n\nexport const createAsyncActionTypes = (\n  actionTypes: string[],\n  prefix: string\n): StringObject =>\n  actionTypes\n    .reduce<string[]>(\n      (acc, curr) => [\n        ...acc,\n        ...[curr, `${curr}_PENDING`, `${curr}_FULFILLED`, `${curr}_REJECTED`]\n      ],\n      []\n    )\n    .reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: `${prefix}${curr}`\n      }),\n      {}\n    );\n","import { createAsyncActionTypes } from './action-types-helper';\n\nconst APPROVAL_PREFIX = '@@catalog/approval/';\n\nconst asyncActionTypes = [\n  'FETCH_WORKFLOWS',\n  'UPDATE_WORKFLOWS',\n  'RESOLVE_WORKFLOWS'\n];\n\nexport const ASYNC_ACTIONS = {\n  ...createAsyncActionTypes(asyncActionTypes, APPROVAL_PREFIX)\n};\n","import awesomeDebouncePromise, {\n  AwesomeDebounceOptions\n} from 'awesome-debounce-promise';\n\nconst asyncFormValidator = <T = any>(\n  asyncFunction: (...args: any[]) => T,\n  debounceTime = 250,\n  options: Partial<AwesomeDebounceOptions> = { onlyResolvesLast: false }\n): any => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n\nexport default asyncFormValidator;\n","import { defineMessages } from 'react-intl';\n\nconst actionMessages = defineMessages({\n  share: {\n    id: 'common.actions.share',\n    defaultMessage: 'Share'\n  },\n  copy: {\n    id: 'common.actions.copy',\n    defaultMessage: 'Copy'\n  },\n  setApproval: {\n    id: 'common.actions.setApproval',\n    defaultMessage: 'Set approval'\n  },\n  edit: {\n    id: 'common.actions.edit',\n    defaultMessage: 'Edit'\n  },\n  delete: {\n    id: 'common.actions.delete',\n    defaultMessage: 'Delete'\n  },\n  deleting: {\n    id: 'common.actions.deleting',\n    defaultMessage: 'Deleting'\n  },\n  save: {\n    id: 'common.actions.save',\n    defaultMessage: 'Save'\n  }\n});\n\nexport default actionMessages;\n","import { createContext } from 'react';\n\nconst UserContext = createContext({});\n\nexport default UserContext;\n","import { AnyObject } from '../types/common-types';\n\nexport const decodeState = (encodedState: string): AnyObject | undefined => {\n  try {\n    return JSON.parse(atob(decodeURIComponent(encodedState)));\n  } catch (error) {\n    return undefined;\n  }\n};\n\nexport const encodeState = (state: AnyObject, stateKey?: string): string => {\n  const stateObject = stateKey\n    ? {\n        ...decodeState(window.location.hash),\n        [stateKey]: state\n      }\n    : state;\n  try {\n    return encodeURIComponent(btoa(JSON.stringify(stateObject)));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'View state is not a valid JSON, state has will not be generated. View state: ',\n      state\n    );\n    return '';\n  }\n};\n","import React from 'react';\nimport {\n  ADD_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications/cjs/actionTypes';\n\nimport * as ActionTypes from '../action-types';\nimport * as PortfolioHelper from '../../helpers/portfolio/portfolio-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport const doFetchPortfolios = ({\n  filters,\n  ...options\n} = defaultSettings) => ({\n  type: ActionTypes.FETCH_PORTFOLIOS,\n  meta: { ...defaultSettings, filters, ...options },\n  payload: PortfolioHelper.listPortfolios(filters, options)\n});\n\nexport const fetchPortfolios = (options) => (dispatch) =>\n  dispatch(doFetchPortfolios(options));\n\nexport const fetchPortfoliosWithState = (\n  filters,\n  options = defaultSettings\n) => (dispatch) =>\n  dispatch(\n    doFetchPortfolios({\n      ...options,\n      filters,\n      storeState: true,\n      stateKey: 'portfolio'\n    })\n  );\n\nexport const fetchPortfolioItems = (\n  filter = '',\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS,\n  meta: { filter, storeState: true, stateKey: 'products' },\n  payload: PortfolioHelper.listPortfolioItems(\n    options.limit,\n    options.offset,\n    filter\n  )\n});\n\nexport const fetchPortfolioItemsWithPortfolio = (\n  portfolioId,\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolioItemsWithPortfolio(portfolioId, options),\n  meta: {\n    ...options,\n    storeState: true,\n    stateKey: 'portfolioItems'\n  }\n});\n\nexport const fetchSelectedPortfolio = (id) => ({\n  type: ActionTypes.FETCH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolio(id)\n});\n\nexport const searchPortfolioItems = (value) => ({\n  type: ActionTypes.FILTER_PORTFOLIO_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const addPortfolio = (portfolioData, notification) => ({\n  type: ActionTypes.ADD_PORTFOLIO,\n  payload: PortfolioHelper.addPortfolio(portfolioData),\n  meta: {\n    notifications: {\n      fulfilled: notification\n    }\n  }\n});\n\nexport const addToPortfolio = (portfolioId, items) => ({\n  type: ActionTypes.ADD_TO_PORTFOLIO,\n  payload: PortfolioHelper.addToPortfolio(portfolioId, items),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding products',\n        description: 'Products were successfully added to portfolio.'\n      }\n    }\n  }\n});\n\nexport const updatePortfolio = (portfolioData, options) => (\n  dispatch,\n  getState\n) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO,\n    payload: portfolioData\n  });\n\n  return PortfolioHelper.updatePortfolio(portfolioData, { getState })\n    .then(() => dispatch(doFetchPortfolios(options)))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          dismissable: true,\n          variant: 'success',\n          title: 'Success updating portfolio',\n          description: 'The portfolio was updated successfully.'\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const undoRemovePortfolio = (portfolioId, restoreKey, viewState) => (\n  dispatch\n) => {\n  dispatch({ type: CLEAR_NOTIFICATIONS });\n  return PortfolioHelper.undeletePortfolio(portfolioId, restoreKey).then(\n    (portfolio) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: `Portfolio ${portfolio.name} has been restored`\n        }\n      });\n      return dispatch(fetchPortfolios(viewState));\n    }\n  );\n};\n\nexport const removePortfolio = (portfolioId, viewState = {}) => (\n  dispatch,\n  getState\n) => {\n  dispatch({\n    type: ActionTypes.DELETE_TEMPORARY_PORTFOLIO,\n    payload: portfolioId\n  });\n  return dispatch({\n    type: ActionTypes.REMOVE_PORTFOLIO,\n    payload: PortfolioHelper.removePortfolio(portfolioId)\n      .then(({ restore_key }) => {\n        dispatch({\n          type: ADD_NOTIFICATION,\n          payload: {\n            variant: 'success',\n            title: 'Success removing portfolio',\n            dismissable: true,\n            description: (\n              <FormattedMessage\n                {...portfolioMessages.removePortfolioNotification}\n                values={{\n                  // eslint-disable-next-line react/display-name\n                  a: (chunks) => (\n                    <a\n                      href=\"#\"\n                      id={`undo-delete-portfolio-${portfolioId}`}\n                      onClick={(event) => {\n                        event.preventDefault();\n                        dispatch(\n                          undoRemovePortfolio(\n                            portfolioId,\n                            restore_key,\n                            viewState\n                          )\n                        );\n                      }}\n                    >\n                      {chunks}\n                    </a>\n                  )\n                }}\n              />\n            )\n          }\n        });\n        const { meta, data } = getState().portfolioReducer.portfolios;\n        return dispatch(\n          fetchPortfolios({\n            ...viewState,\n            ...meta,\n            offset: data.length === 0 ? 0 : meta.offset\n          })\n        );\n      })\n      .catch((error) => {\n        dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n        throw error;\n      })\n  });\n};\n\nexport const selectPortfolioItem = (portfolioItem) => ({\n  type: ActionTypes.SELECT_PORTFOLIO_ITEM,\n  payload: portfolioItem\n});\n\nexport const undoRemoveProductsFromPortfolio = (restoreData, portfolioId) => (\n  dispatch\n) => {\n  dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_PENDING` });\n  return PortfolioHelper.restorePortfolioItems(restoreData)\n    .then(() =>\n      dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .then(() => dispatch({ type: CLEAR_NOTIFICATIONS }))\n    .then(() => dispatch(fetchPortfolioItemsWithPortfolio(portfolioId)))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: 'Products have been restored'\n        }\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const removeProductsFromPortfolio = (\n  portfolioItems,\n  portfolioName,\n  firstSelectedProduct\n) => (dispatch, getState) => {\n  dispatch({\n    type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_PENDING`\n  });\n  const {\n    portfolioReducer: {\n      portfolioItems: { meta },\n      selectedPortfolio: { id: portfolioId }\n    }\n  } = getState();\n  return PortfolioHelper.removePortfolioItems(portfolioItems)\n    .then((data) =>\n      dispatch(\n        fetchPortfolioItemsWithPortfolio(portfolioId, {\n          offset: 0,\n          limit: meta.limit,\n          filter: ''\n        })\n      ).then(() => data)\n    )\n    .then((data) => {\n      return dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'Products removed',\n          dismissable: true,\n          description: (\n            <FormattedMessage\n              {...portfolioMessages.removeItemsNotification}\n              values={{\n                count: portfolioItems.length,\n                productName: firstSelectedProduct.name,\n                portfolioName,\n                // eslint-disable-next-line react/display-name\n                b: (chunks) => <b>{chunks}</b>,\n                // eslint-disable-next-line react/display-name\n                a: (chunks) => (\n                  <a\n                    href=\"#\"\n                    id={`restore-portfolio-item-${portfolioId}`}\n                    onClick={(event) => {\n                      event.preventDefault();\n                      dispatch(\n                        undoRemoveProductsFromPortfolio(data, portfolioId)\n                      );\n                    }}\n                  >\n                    {chunks}\n                  </a>\n                )\n              }}\n            />\n          )\n        }\n      });\n    })\n    .then(() =>\n      dispatch({ type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const copyPortfolio = (id) => (dispatch) => {\n  dispatch({ type: 'COPY_PORTFOLIO_PENDING' });\n  return PortfolioHelper.copyPortfolio(id)\n    .then((portfolio) => {\n      dispatch({ type: 'COPY_PORTFOLIO_FULFILLED' });\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a portfolio',\n          description: `${portfolio.name} has been copied.`,\n          dismissable: true\n        }\n      });\n      return portfolio;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_REJECTED', payload: err })\n    );\n};\n\nexport const copyPortfolioItem = (\n  portfolioItemId,\n  copyObject,\n  newPortfolio\n) => (dispatch) => {\n  return PortfolioHelper.copyPortfolioItem(portfolioItemId, copyObject)\n    .then((data) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a product',\n          description: `${data.name} has been copied into ${newPortfolio.name}`,\n          dismissable: true\n        }\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_ITEM_REJECTED', payload: err })\n    );\n};\n\nexport const resetSelectedPortfolio = () => ({\n  type: ActionTypes.RESET_SELECTED_PORTFOLIO\n});\n\nexport const updatePortfolioItem = (values) => (dispatch, getState) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM,\n    payload: values\n  });\n  return PortfolioHelper.updatePortfolioItem(values, { getState })\n    .then((data) => {\n      dispatch({ type: ActionTypes.UPDATE_PORTFOLIO_ITEM, payload: data });\n      return data;\n    })\n    .then((item) =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: `Product \"${item.name}\" was successfully updated`,\n          dismissable: true\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_ITEM_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const getPortfolioItemDetail = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_PENDING` });\n  return PortfolioHelper.getPortfolioItemDetail(params).then(\n    ([portfolioItem, source]) =>\n      dispatch({\n        type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_FULFILLED`,\n        payload: {\n          portfolioItem,\n          source\n        }\n      })\n  );\n};\n\nexport const setOrFetchPortfolio = (id, portfolios) => {\n  const existingPorfolio = portfolios?.data?.find(\n    (portfolio) => portfolio.id === id\n  );\n\n  if (existingPorfolio) {\n    return {\n      type: `${ActionTypes.FETCH_PORTFOLIO}_FULFILLED`,\n      payload: existingPorfolio\n    };\n  }\n\n  return fetchSelectedPortfolio(id);\n};\n","/* eslint-disable react/prop-types */\nimport React, { useState, useRef, ReactNode } from 'react';\nimport useFieldApi, {\n  ValidatorType\n} from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\nimport { InternalSelect } from '@data-driven-forms/pf4-component-mapper/dist/cjs/select';\nimport {\n  FormGroup,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\nimport { defineMessage } from 'react-intl';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport { SelectOptions } from '../../types/common-types';\n\nconst createOptions = (\n  options: SelectOptions,\n  inputValue: string,\n  isRequired: boolean,\n  optionsMessages: { choose: ReactNode; none: ReactNode }\n) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  const selectOptions = [...options];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [...selectOptions]\n    : [\n        { label: isRequired ? optionsMessages.choose : optionsMessages.none },\n        ...selectOptions\n      ];\n};\n\ninterface SelectProps {\n  input: {\n    name: string;\n    onChange: (value: any) => void;\n    value: any;\n  };\n  id?: string;\n  label?: ReactNode;\n  options?: SelectOptions;\n  isReadOnly?: boolean;\n  isDisabled?: boolean;\n  isRequired?: boolean;\n  validated?: 'default' | 'success' | 'error';\n  multi?: boolean;\n  loadOptions?: (\n    search?: string,\n    lookupArguments?: any[]\n  ) => Promise<SelectOptions>;\n  meta: { initial?: any };\n  onChange?: (...args: any[]) => unknown;\n}\nconst Select: React.ComponentType<SelectProps> = ({\n  input,\n  options = [],\n  isDisabled = false,\n  isRequired = false,\n  multi = false,\n  loadOptions,\n  meta,\n  ...rest\n}) => {\n  const formatMessage = useFormatMessage();\n  const optionsMessages = useRef<{\n    none: ReactNode;\n    choose: ReactNode;\n  }>({\n    none: formatMessage(\n      defineMessage({\n        id: 'forms.select.options.none',\n        defaultMessage: 'None'\n      })\n    ),\n    choose: formatMessage(\n      defineMessage({\n        id: 'forms.select.options.choose',\n        defaultMessage: 'Please choose'\n      })\n    )\n  });\n  const [initialFetch, setInitialFetch] = useState(true);\n  const formOptions = useFormApi();\n  let loadOptionsOverride = loadOptions;\n  if (loadOptions && meta.initial) {\n    const lookupArguments = Array.isArray(meta.initial)\n      ? meta.initial.map((option) =>\n          typeof option === 'object' ? option.value : option\n        )\n      : [meta.initial];\n    loadOptionsOverride = (filterValue) => {\n      return initialFetch\n        ? loadOptions(filterValue, lookupArguments).then((initialOptions) => {\n            return loadOptions(filterValue).then((options) => {\n              setInitialFetch(false);\n              return [\n                ...initialOptions,\n                ...options.filter(\n                  ({ value }) =>\n                    !initialOptions.find((option) => option.value === value)\n                )\n              ];\n            });\n          })\n        : loadOptions(filterValue);\n    };\n  }\n\n  return (\n    <InternalSelect\n      menuIsPortal\n      {...input}\n      {...rest}\n      loadOptions={loadOptionsOverride}\n      onChange={(value, ...args) => {\n        if (rest.onChange) {\n          rest.onChange(value);\n          formOptions.change(input.name, value);\n        } else {\n          input.onChange(value, ...args);\n        }\n      }}\n      isMulti={multi}\n      options={\n        !loadOptions\n          ? createOptions(\n              options,\n              input.value,\n              isRequired,\n              optionsMessages.current\n            )\n          : undefined\n      }\n      isDisabled={isDisabled}\n    />\n  );\n};\n\nexport interface Pf4SelectWrapperProps\n  extends Omit<Omit<SelectProps, 'input'>, 'meta'> {\n  name: string;\n  label?: ReactNode;\n  isRequired?: boolean;\n  helperText?: ReactNode;\n  description?: ReactNode;\n  hideLabel?: boolean;\n  id?: string;\n  initialValue?: any;\n  validate?: ValidatorType[];\n}\nfunction Pf4SelectWrapper<T = any /**Type of select value */>(\n  props: Pf4SelectWrapperProps\n): ReactNode {\n  const {\n    label,\n    isRequired,\n    helperText,\n    meta,\n    description,\n    hideLabel,\n    id,\n    ...rest\n  } = useFieldApi<T>(props);\n  const { error, touched } = meta;\n  const showError = touched && error;\n  const { name } = rest.input;\n\n  return (\n    <FormGroup\n      isRequired={isRequired}\n      label={!hideLabel && label}\n      fieldId={id || name}\n      validated={showError ? 'error' : 'default'}\n      helperText={helperText}\n      helperTextInvalid={meta.error}\n    >\n      {description && (\n        <TextContent>\n          <Text component={TextVariants.small}>{description}</Text>\n        </TextContent>\n      )}\n      <Select\n        id={id || name}\n        meta={meta}\n        label={label}\n        validated={showError ? 'error' : 'default'}\n        isRequired={isRequired}\n        {...rest}\n      />\n    </FormGroup>\n  );\n}\n\nexport default Pf4SelectWrapper;\n","/* eslint-disable react/prop-types */\nimport React, { useReducer, ComponentType } from 'react';\nimport { Grid, GridItem, Button, Level, Tooltip } from '@patternfly/react-core';\nimport PlusIcon from '@patternfly/react-icons/dist/js/icons/plus-icon';\nimport { InternalSelect } from '@data-driven-forms/pf4-component-mapper/dist/cjs/select';\nimport FieldArray from '@data-driven-forms/react-form-renderer/dist/cjs/field-array';\n\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport formsMessages from '../../messages/forms.messages';\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport { StyledLevelItem } from '../../presentational-components/styled-components/level';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport { SelectOptions } from '../../types/common-types';\n\nconst initialState = {\n  /**\n   * This counter will re-initialize select components withouth having to re-initialize the whole form after new group was added\n   */\n  resetGroup: 0,\n  group: undefined,\n  permission: undefined\n};\n\ninterface InternalShareReducerState {\n  group?: { group_uuid: string; value?: string; label: string };\n  permission?: string;\n  resetGroup: number;\n}\n\ntype ShareReducer = (\n  state: InternalShareReducerState,\n  action: {\n    type: 'setGroup' | 'setPermission' | 'resetField';\n    payload?: { group_uuid: string; value?: string; label: string } | string;\n  }\n) => InternalShareReducerState;\n\n// TODO create keys for specific objects instead of using common payload. That way we wont need typecasting\nconst shareReducer: ShareReducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'setGroup':\n      return {\n        ...state,\n        group: payload as { group_uuid: string; value?: string; label: string }\n      };\n    case 'setPermission':\n      return { ...state, permission: payload as string };\n    case 'resetField':\n      return {\n        group: undefined,\n        permission: undefined,\n        resetGroup: state.resetGroup + 1\n      };\n  }\n\n  return state;\n};\n\ntype AddGroup = (group: {\n  groupName?: string;\n  group_uuid?: string;\n  permissions?: string;\n}) => void;\n\nexport interface NewGroupSelectProps {\n  loadOptions: (...args: any[]) => Promise<SelectOptions>;\n  permissions: SelectOptions;\n  addGroup: AddGroup;\n  currentGroups: { group_uuid: string; value?: string }[];\n}\n\nexport const NewGroupSelect: ComponentType<NewGroupSelectProps> = ({\n  loadOptions,\n  permissions,\n  addGroup,\n  currentGroups\n}) => {\n  const [{ group, permission, resetGroup }, dispatch] = useReducer(\n    shareReducer,\n    initialState\n  );\n  const formatMessage = useFormatMessage();\n\n  let tooltipContent;\n  if (!group && !permission) {\n    tooltipContent = formatMessage(portfolioMessages.shareErrorMissingData);\n  } else if (group && !permission) {\n    tooltipContent = formatMessage(\n      portfolioMessages.shareErrorMissingPermission\n    );\n  } else if (permission && !group) {\n    tooltipContent = formatMessage(portfolioMessages.shareErrorMissingGroup);\n  } else {\n    tooltipContent = formatMessage(portfolioMessages.shareTooltip);\n  }\n\n  const hasError = !!currentGroups.find(\n    (item) => item.group_uuid === group?.value\n  );\n\n  return (\n    <Level>\n      <StyledLevelItem grow>\n        <Grid hasGutter className=\"share-column\">\n          <GridItem span={7}>\n            <InternalSelect\n              key={resetGroup}\n              isSearchable\n              isClearable\n              simpleValue={false}\n              menuIsPortal\n              loadOptions={asyncFormValidator(loadOptions)}\n              placeholder={formatMessage(formsMessages.groupsPlaceholder)}\n              onChange={(value) =>\n                dispatch({ type: 'setGroup', payload: value })\n              }\n              validated={hasError ? 'error' : 'default'}\n              value={group}\n            />\n            {hasError && (\n              <div\n                className=\"pf-c-form__helper-text pf-m-error\"\n                id=\"permission-helper\"\n                aria-live=\"polite\"\n              >\n                {formatMessage(portfolioMessages.shareDuplicate)}\n              </div>\n            )}\n          </GridItem>\n          <GridItem span={5}>\n            <InternalSelect\n              name=\"select-permission\"\n              options={permissions}\n              menuIsPortal\n              placeholder={formatMessage(formsMessages.permissionsPlaceholder)}\n              onChange={(value) =>\n                dispatch({ type: 'setPermission', payload: value })\n              }\n              value={permission}\n            />\n          </GridItem>\n        </Grid>\n      </StyledLevelItem>\n      <StyledLevelItem alignSelf=\"baseline\">\n        <Tooltip content={<p>{tooltipContent}</p>}>\n          <span>\n            <Button\n              id=\"add-new-group\"\n              variant=\"link\"\n              isDisabled={!group || !permission}\n              onClick={() => {\n                group &&\n                  addGroup({\n                    groupName: group.label,\n                    group_uuid: group.value,\n                    permissions: permission\n                  });\n                dispatch({ type: 'resetField' });\n              }}\n            >\n              <PlusIcon />\n            </Button>\n          </span>\n        </Tooltip>\n      </StyledLevelItem>\n    </Level>\n  );\n};\n\nconst ShareGroupSelect: ComponentType<NewGroupSelectProps> = (props) => (\n  <FieldArray name=\"shared-groups\">\n    {({ fields: { push, value } }) => (\n      <NewGroupSelect {...props} addGroup={push} currentGroups={value} />\n    )}\n  </FieldArray>\n);\n\nexport default ShareGroupSelect;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment, ComponentType } from 'react';\nimport { InternalSelect } from '@data-driven-forms/pf4-component-mapper/dist/cjs/select';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\nimport FieldArray from '@data-driven-forms/react-form-renderer/dist/cjs/field-array';\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n  GridItem,\n  Grid,\n  Button,\n  Level\n} from '@patternfly/react-core';\nimport TrashIcon from '@patternfly/react-icons/dist/js/icons/trash-icon';\nimport { StyledLevelItem } from '../../presentational-components/styled-components/level';\nimport styled from 'styled-components';\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport { SelectOptions } from '../../types/common-types';\n\nconst StyledText = styled(Text)`\n  line-height: 36px !important;\n`;\n\nexport interface SharedGroupProps {\n  name: string;\n  remove: (index: number) => void;\n  index: number;\n  permissionVerbs: SelectOptions;\n}\n\nconst SharedGroup: ComponentType<SharedGroupProps> = ({\n  name,\n  remove,\n  index,\n  permissionVerbs\n}) => {\n  const { input } = useFieldApi({ name });\n  return (\n    <Level>\n      <StyledLevelItem grow>\n        <Grid hasGutter className=\"share-column\">\n          <GridItem span={7}>\n            <TextContent>\n              <StyledText component={TextVariants.h4}>\n                {input.value.groupName}\n              </StyledText>\n            </TextContent>\n          </GridItem>\n          <GridItem span={5}>\n            <InternalSelect\n              name={name}\n              menuIsPortal\n              options={permissionVerbs}\n              value={input.value.permissions}\n              onChange={(permissions) =>\n                input.onChange({\n                  ...input.value,\n                  permissions\n                })\n              }\n            />\n          </GridItem>\n        </Grid>\n      </StyledLevelItem>\n      <StyledLevelItem>\n        <Button\n          id={`remove-share-${index}`}\n          variant=\"plain\"\n          onClick={() => remove(index)}\n        >\n          <TrashIcon />\n        </Button>\n      </StyledLevelItem>\n    </Level>\n  );\n};\n\nexport interface ShareGroupEditProps {\n  name: string;\n  permissionVerbs: SelectOptions;\n}\n\nconst ShareGroupEdit: ComponentType<ShareGroupEditProps> = ({\n  name,\n  permissionVerbs\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <FieldArray name={name}>\n      {({ fields: { map, remove, length } }) => (\n        <Fragment>\n          {length === 0 && (\n            <TextContent>\n              <Text>{formatMessage(portfolioMessages.noShares)}</Text>\n            </TextContent>\n          )}\n          {length && length > 0 && (\n            <TextContent>\n              <Text component=\"small\">\n                {formatMessage(portfolioMessages.shareGroupsAccess)}\n              </Text>\n            </TextContent>\n          )}\n          {map((name, index) => (\n            <SharedGroup\n              key={name}\n              name={name}\n              remove={remove}\n              index={index}\n              permissionVerbs={permissionVerbs}\n            />\n          ))}\n        </Fragment>\n      )}\n    </FieldArray>\n  );\n};\n\nexport default ShareGroupEdit;\n","import { defineMessages } from 'react-intl';\n\nconst schemasMessages = defineMessages({\n  'schemas.portfolio.name': {\n    id: 'schemas.portfolio.name',\n    defaultMessage: 'Name'\n  },\n  'schemas.portfolio.description': {\n    id: 'schemas.portfolio.description',\n    defaultMessage: 'Description'\n  },\n  'schemas.portfolio-item.name': {\n    id: 'schemas.portfolio-item.name',\n    defaultMessage: 'Name'\n  },\n  'schemas.portfolio-item.description': {\n    id: 'schemas.portfolio-item.description',\n    defaultMessage: 'Description'\n  },\n  'schemas.portfolio-item.long_description': {\n    id: 'schemas.portfolio-item.long_description',\n    defaultMessage: 'Long description'\n  },\n  'schemas.portfolio-item.vendor': {\n    id: 'schemas.portfolio-item.vendor',\n    defaultMessage: 'Vendor'\n  },\n  'schemas.portfolio-item.documentation_url': {\n    id: 'schemas.portfolio-item.documentation_url',\n    defaultMessage: 'Documentation URL'\n  },\n  'schemas.portfolio-item.support_url': {\n    id: 'schemas.portfolio-item.support_url',\n    defaultMessage: 'Support URL'\n  },\n  'share.new.description': {\n    id: 'share.new.description',\n    defaultMessage: 'Invite group'\n  }\n});\n\nexport default schemasMessages;\n","import schemasMessages from '../messages/schemas.messages';\n\nconst translateString = (string, formatMessage) => {\n  try {\n    return formatMessage(string);\n  } catch {\n    return string;\n  }\n};\n\nconst translateField = (field, formatMessage, translateKeys) => {\n  const fieldCopy = { ...field };\n  translateKeys.forEach((key) => {\n    if (\n      Object.prototype.hasOwnProperty.call(fieldCopy, key) &&\n      typeof fieldCopy[key] === 'string' &&\n      schemasMessages[fieldCopy[key]]\n    ) {\n      fieldCopy[key] = translateString(\n        schemasMessages[fieldCopy[key]],\n        formatMessage\n      );\n    }\n  });\n  if (\n    Object.prototype.hasOwnProperty.call(fieldCopy, 'options') &&\n    Array.isArray(fieldCopy.options)\n  ) {\n    fieldCopy.options = fieldCopy.options.map((option) =>\n      translateString(schemasMessages[option.label])\n        ? {\n            ...option,\n            label: translateString(schemasMessages[option.label], formatMessage)\n          }\n        : option\n    );\n  }\n\n  if (\n    Object.prototype.hasOwnProperty.call(fieldCopy, 'fields') &&\n    Array.isArray(fieldCopy.fields)\n  ) {\n    fieldCopy.fields = fieldCopy.fields.map((field) =>\n      translateField(field, formatMessage, translateKeys)\n    );\n  }\n\n  return fieldCopy;\n};\n\nconst translateSchema = (\n  schema,\n  formatMessage,\n  translateKeys = ['label', 'placeholder', 'title', 'description']\n) => {\n  const schemaCopy = { ...schema };\n  schemaCopy.fields = schemaCopy.fields.map((field) =>\n    translateField(field, formatMessage, translateKeys)\n  );\n  return schemaCopy;\n};\n\nexport default translateSchema;\n","/* eslint-disable react/prop-types */\nimport React, { useEffect, useState, ReactNode } from 'react';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\nimport { FormGroup, TextContent, Text } from '@patternfly/react-core';\nimport labelMessages from '../../messages/labels.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nexport interface CopyNameDisplayProps {\n  label: ReactNode;\n  getName: (value: any) => Promise<string>;\n  fieldSpy: string;\n}\n\nconst CopyNameDisplay: React.ComponentType<CopyNameDisplayProps> = ({\n  label,\n  getName,\n  fieldSpy\n}) => {\n  const formatMessage = useFormatMessage();\n  const [name, setName] = useState(formatMessage(labelMessages.loading));\n  const {\n    input: { value },\n    meta: { error }\n  } = useFieldApi({\n    name: fieldSpy\n  });\n  useEffect(() => {\n    getName(value).then((name: string) => {\n      setName(name);\n    });\n  }, [value]);\n\n  return (\n    <FormGroup label={label} helperText={error} fieldId={value}>\n      <TextContent>\n        <Text component=\"h6\">{name}</Text>\n      </TextContent>\n    </FormGroup>\n  );\n};\n\nexport default CopyNameDisplay;\n","/* eslint-disable react/prop-types */\nimport React, { ReactNode, ComponentType } from 'react';\nimport { Chip, ChipGroup, FormGroup } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\n\nexport interface InitialChipsProps {\n  name: string;\n  label: ReactNode;\n}\n\nexport interface InitialChipsValue {\n  id: string;\n  name: ReactNode;\n}\n\nconst InitialChips: ComponentType<InitialChipsProps> = ({ name, label }) => {\n  const {\n    input: { value, onChange }\n  } = useFieldApi<InitialChipsValue[]>({ name });\n  const handleRemove = (id: string) =>\n    onChange(value.filter((item) => item.id !== id));\n  if (value?.length === 0) {\n    return null;\n  }\n\n  return (\n    <FormGroup fieldId={name} label={label}>\n      <ChipGroup>\n        {value.map(({ name, id }) => (\n          <Chip key={id} onClick={() => handleRemove(id)}>\n            {name}\n          </Chip>\n        ))}\n      </ChipGroup>\n    </FormGroup>\n  );\n};\n\nexport default InitialChips;\n","/* eslint-disable react/prop-types */\nimport React, { ReactNode, Fragment } from 'react';\nimport styled from 'styled-components';\nimport ReactDOM from 'react-dom';\nimport PF4FormTemplate, {\n  FormTemplateProps as Pf4FormTemplateProps\n} from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\nimport Schema from '@data-driven-forms/react-form-renderer/dist/cjs/schema';\nimport FormSpy from '@data-driven-forms/react-form-renderer/dist/cjs/form-spy';\nimport {\n  ModalProps,\n  Spinner,\n  ModalBoxHeader,\n  ModalBoxCloseButton,\n  ModalBoxBody,\n  ModalBoxFooter,\n  Backdrop,\n  FocusTrap,\n  ModalVariant,\n  Button\n} from '@patternfly/react-core';\n\nimport SpinnerWrapper from '../../presentational-components/styled-components/spinner-wrapper';\nimport useFormatMessage from '../../utilities/use-format-message';\n/**Make sure we have styles loaded */\nimport '@patternfly/react-styles/css/components/ModalBox/modal-box.css';\nimport labelMessages from '../../messages/labels.messages';\n\nconst StyledForm = styled(({ variant, ...props }) => <form {...props} />)`\n  max-width: calc(100% - 32px);\n  width: ${({ variant }: { variant: ModalVariant }) =>\n    variant === 'small' ? '560px' : '100%'};\n  max-height: calc(100% - 48px);\n`;\n\ninterface InternalModalProps extends Omit<ModalProps, 'ref'> {\n  isLoading: boolean;\n}\n\ninterface ModalFormTemplateProps {\n  schema: Schema;\n  submitLabel?: ReactNode;\n  formFields: ReactNode[];\n  modalProps: Partial<InternalModalProps>;\n}\n\nconst ModalFormTemplate: React.ComponentType<ModalFormTemplateProps> = ({\n  schema,\n  formFields,\n  submitLabel,\n  modalProps: { isLoading, title, description, onClose, variant }\n}) => {\n  const { handleSubmit } = useFormApi();\n  const formatMessage = useFormatMessage();\n  return ReactDOM.createPortal(\n    <div>\n      <Backdrop>\n        <FocusTrap className=\"pf-l-bullseye\">\n          <StyledForm\n            onSubmit={isLoading ? () => undefined : handleSubmit}\n            variant={variant}\n            className=\"pf-c-modal-box pf-m-sm\"\n          >\n            <ModalBoxCloseButton onClose={onClose} />\n            <ModalBoxHeader>\n              <h1 id=\"modal-form-title\" className=\"pf-c-modal-box__title\">\n                {title}\n              </h1>\n              {description && (\n                <div\n                  id=\"modal-form-description\"\n                  className=\"pf-c-modal-box__description\"\n                >\n                  {description}\n                </div>\n              )}\n            </ModalBoxHeader>\n            <ModalBoxBody>\n              <div>\n                <div className=\"pf-c-form\">\n                  {isLoading ? (\n                    <SpinnerWrapper className=\"pf-u-m-md\">\n                      <Spinner />\n                    </SpinnerWrapper>\n                  ) : (\n                    <Fragment>\n                      {schema.title}\n                      {formFields}\n                    </Fragment>\n                  )}\n                </div>\n              </div>\n            </ModalBoxBody>\n            <ModalBoxFooter>\n              <FormSpy\n                subscription={{\n                  invalid: true,\n                  validating: true,\n                  pristine: true,\n                  submitting: true\n                }}\n              >\n                {({ pristine, invalid, validating, submitting }) => (\n                  <Fragment>\n                    <Button\n                      type=\"submit\"\n                      isDisabled={\n                        pristine || invalid || validating || submitting\n                      }\n                    >\n                      {submitLabel || formatMessage(labelMessages.save)}\n                    </Button>\n                    <Button variant=\"link\" onClick={onClose}>\n                      {formatMessage(labelMessages.cancel)}\n                    </Button>\n                  </Fragment>\n                )}\n              </FormSpy>\n            </ModalBoxFooter>\n          </StyledForm>\n        </FocusTrap>\n      </Backdrop>\n    </div>,\n    document.body\n  );\n};\n\nexport interface FormTemplateProps extends Pf4FormTemplateProps {\n  isModal: boolean;\n  modalProps: InternalModalProps;\n  submitlabel?: ReactNode;\n}\n\nconst FormTemplate: React.ComponentType<FormTemplateProps> = ({\n  isModal,\n  modalProps = {},\n  ...props\n}) => {\n  if (isModal) {\n    return <ModalFormTemplate {...props} modalProps={modalProps} />;\n  }\n\n  return <PF4FormTemplate {...props} />;\n};\n\nexport default FormTemplate;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender from '@data-driven-forms/react-form-renderer/dist/cjs/form-renderer';\nimport validatorMapper from '@data-driven-forms/react-form-renderer/dist/cjs/validator-mapper';\nimport TextField from '@data-driven-forms/pf4-component-mapper/dist/cjs/text-field';\nimport Textarea from '@data-driven-forms/pf4-component-mapper/dist/cjs/textarea';\nimport SubForm from '@data-driven-forms/pf4-component-mapper/dist/cjs/sub-form';\nimport PlainText from '@data-driven-forms/pf4-component-mapper/dist/cjs/plain-text';\nimport Checkbox from '@data-driven-forms/pf4-component-mapper/dist/cjs/checkbox';\nimport Radio from '@data-driven-forms/pf4-component-mapper/dist/cjs/radio';\nimport Switch from '@data-driven-forms/pf4-component-mapper/dist/cjs/switch';\n\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\nimport ShareGroupSelect from '../../forms/form-fields/share-group-select';\nimport ShareGroupEdit from '../../forms/form-fields/share-group-edit';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport translateSchema from '../../utilities/translate-schema';\nimport Select from '@data-driven-forms/pf4-component-mapper/dist/cjs/select';\nimport CopyNameDisplay from '../../forms/form-fields/copy-name-display';\nimport InitialChips from '../../forms/form-fields/initial-chips';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport FormTemplate from '../../forms/form-fields/form-template';\n\nexport const catalogComponentMapper = {\n  [componentTypes.TEXT_FIELD]: TextField,\n  [componentTypes.TEXTAREA]: Textarea,\n  [componentTypes.PLAIN_TEXT]: PlainText,\n  [componentTypes.SELECT]: Pf4SelectWrapper,\n  [componentTypes.CHECKBOX]: Checkbox,\n  [componentTypes.RADIO]: Radio,\n  [componentTypes.SWITCH]: Switch,\n  [componentTypes.SUB_FORM]: SubForm,\n  'initial-select': Select,\n  'share-group-select': ShareGroupSelect,\n  'share-group-edit': ShareGroupEdit,\n  'copy-name-display': CopyNameDisplay,\n  'textarea-field': Textarea,\n  'select-field': Pf4SelectWrapper,\n  'initial-chips': InitialChips\n};\n\nconst catalogValidatorMapper = {\n  ...validatorMapper,\n  'exact-length-validator': validatorMapper[validatorTypes.EXACT_LENGTH],\n  'max-length-validator': validatorMapper[validatorTypes.MAX_LENGTH],\n  'min-items-validator': validatorMapper[validatorTypes.MIN_ITEMS],\n  'min-length-validator': validatorMapper[validatorTypes.MIN_LENGTH],\n  'pattern-validator': validatorMapper[validatorTypes.PATTERN],\n  'required-validator': validatorMapper[validatorTypes.REQUIRED],\n  'url-validator': validatorMapper[validatorTypes.URL]\n};\n\nexport const catalogValidatorAlias = {\n  'exact-length-validator': validatorTypes.EXACT_LENGTH,\n  'max-length-validator': validatorTypes.MAX_LENGTH,\n  'min-items-validator': validatorTypes.MIN_ITEMS,\n  'min-length-validator': validatorTypes.MIN_LENGTH,\n  'pattern-validator': validatorTypes.PATTERN,\n  'required-validator': validatorTypes.REQUIRED,\n  'url-validator': validatorTypes.URL\n};\n\nconst FormRenderer = ({\n  isModal,\n  templateProps,\n  schema,\n  modalProps,\n  ...rest\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <div>\n      <ReactFormRender\n        componentMapper={catalogComponentMapper}\n        FormTemplate={(props) => (\n          <FormTemplate\n            {...props}\n            {...templateProps}\n            modalProps={modalProps}\n            isModal={isModal}\n          />\n        )}\n        validatorMapper={catalogValidatorMapper}\n        schema={translateSchema(schema, formatMessage)}\n        {...rest}\n      />\n    </div>\n  );\n};\n\nFormRenderer.propTypes = {\n  formContainer: PropTypes.oneOf(['default', 'modal']),\n  isModal: PropTypes.bool,\n  templateProps: PropTypes.object,\n  schema: PropTypes.object.isRequired,\n  modalProps: PropTypes.object\n};\n\nFormRenderer.defaultProps = {\n  formContainer: 'default',\n  templateProps: {}\n};\n\nexport default memo(FormRenderer);\n","import React, { Fragment, ReactNode } from 'react';\nimport { useIntl, MessageDescriptor } from 'react-intl';\nimport { AnyObject } from '../types/common-types';\n\nexport type UseFormatMessage<T = undefined> = () => (\n  message: MessageDescriptor,\n  values?: AnyObject\n) => ReactNode | React.ComponentType<T>;\n\nconst useFormatMessage: UseFormatMessage = () => {\n  const { formatMessage } = useIntl();\n  return (message: MessageDescriptor, values = {}) => {\n    const internalValues = Object.entries(values).reduce(\n      (acc, [key, value]) => {\n        return {\n          ...acc,\n          [key]:\n            typeof value === 'function'\n              ? (chunks: any) => <Fragment key={key}>{value(chunks)}</Fragment>\n              : value\n        };\n      },\n      {}\n    );\n    try {\n      return formatMessage(message, internalValues);\n    } catch (error) {\n      return `Unable to translate message. Definition: ${message}, values: ${values}, intl-error: ${error}`;\n    }\n  };\n};\n\nexport default useFormatMessage;\n","import { decodeState } from './uri-state-manager';\n\nconst useInitialUriHash = () => decodeState(window.location.hash.substring(1));\n\nexport default useInitialUriHash;\n","import React from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\n\nexport const UnauthorizedRedirect = () => {\n  const location = useLocation();\n  return (\n    <Redirect\n      to={{\n        pathname: '/403',\n        state: {\n          from: location\n        }\n      }}\n    />\n  );\n};\n","import * as ActionTypes from '../action-types';\nimport * as OrderProcessHelper from '../../helpers/order-process/order-process-helper';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\nimport { PaginationConfiguration } from '../../helpers/shared/pagination';\nimport { Dispatch } from 'redux';\nimport { AsyncMiddlewareAction, GetReduxState } from '../../types/redux';\nimport { ApiCollectionResponse, ReduxAction } from '../../types/common-types';\nimport { Order, OrderProcess } from '@redhat-cloud-services/catalog-client';\nimport { IntlShape } from 'react-intl';\nimport { ResourceObject } from '@redhat-cloud-services/approval-client';\nimport { AxiosResponse } from 'axios';\n\nexport const fetchOrderProcesses = (pagination: PaginationConfiguration) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): AsyncMiddlewareAction<ApiCollectionResponse<Order>> => {\n  const { orderProcesses } = getState().orderProcessReducer;\n\n  let finalPagination = pagination;\n\n  if (!pagination && orderProcesses) {\n    const { limit, offset } = orderProcesses.meta;\n    finalPagination = { limit, offset };\n  }\n\n  return dispatch({\n    type: ActionTypes.FETCH_ORDER_PROCESSES,\n    meta: {\n      ...finalPagination,\n      filter: pagination?.filterValue || '',\n      storeState: true,\n      stateKey: 'orderProcesses'\n    },\n    payload: OrderProcessHelper.listOrderProcesses(\n      pagination?.filterValue,\n      finalPagination\n    )\n  });\n};\n\nexport const fetchOrderProcess = (\n  id: string\n): AsyncMiddlewareAction<OrderProcess> => ({\n  type: ActionTypes.FETCH_ORDER_PROCESS,\n  payload: OrderProcessHelper.fetchOrderProcess(id)\n});\n\nexport const addOrderProcess = (\n  processData: OrderProcess,\n  intl: IntlShape\n): AsyncMiddlewareAction<[OrderProcess, OrderProcess | undefined]> => ({\n  type: ActionTypes.ADD_ORDER_PROCESS,\n  payload: OrderProcessHelper.addOrderProcess(processData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: intl.formatMessage(\n          orderProcessesMessages.addProcessSuccessTitle\n        ),\n        description: intl.formatMessage(\n          orderProcessesMessages.addProcessSuccessDescription\n        )\n      }\n    }\n  }\n});\n\nexport const updateOrderProcess = (\n  processId: string,\n  data: Partial<OrderProcess>,\n  intl: IntlShape\n): AsyncMiddlewareAction<OrderProcess> => ({\n  type: ActionTypes.UPDATE_ORDER_PROCESS,\n  payload: OrderProcessHelper.updateOrderProcess(processId, data),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: intl.formatMessage(\n          orderProcessesMessages.updateProcessSuccessTitle,\n          { name: data.name }\n        )\n      }\n    }\n  }\n});\n\nexport const sortOrderProcesses = (sortBy: string): ReduxAction<string> => ({\n  type: ActionTypes.SORT_ORDER_PROCESSES,\n  payload: sortBy\n});\n\nexport const setOrderProcess = (\n  toTag: string[],\n  toUntag: string[],\n  resourceType: ResourceObject\n): AsyncMiddlewareAction<AxiosResponse<void>[]> => ({\n  type: ActionTypes.SET_ORDER_PROCESS,\n  payload: OrderProcessHelper.setOrderProcesses(toTag, toUntag, resourceType)\n});\n\nexport const removeOrderProcess = (\n  orderProcess: string,\n  intl: IntlShape\n): AsyncMiddlewareAction<void> => ({\n  type: ActionTypes.REMOVE_ORDER_PROCESS,\n  payload: OrderProcessHelper.removeOrderProcess(orderProcess),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: intl.formatMessage(\n          orderProcessesMessages.removeProcessSuccessTitle\n        ),\n        description: intl.formatMessage(\n          orderProcessesMessages.removeProcessSuccessDescription\n        )\n      }\n    }\n  }\n});\n\nexport const removeOrderProcesses = (\n  orderProcesses: string[],\n  intl: IntlShape\n): AsyncMiddlewareAction<AxiosResponse<void>[]> => ({\n  type: ActionTypes.REMOVE_ORDER_PROCESSES,\n  payload: OrderProcessHelper.removeOrderProcesses(orderProcesses),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: intl.formatMessage(\n          orderProcessesMessages.removeProcessesSuccessTitle\n        ),\n        description: intl.formatMessage(\n          orderProcessesMessages.removeProcessesSuccessDescription\n        )\n      }\n    }\n  }\n});\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Level, Toolbar, ToolbarGroup } from '@patternfly/react-core';\n\nexport const StyledToolbar = styled(({ noWrap, ...props }) => (\n  <Toolbar {...props} />\n))`\n  background-color: #ffffff;\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  position: relative;\n  top: 1px;\n  .pf-c-toolbar__content-section {\n    flex-wrap: ${({ noWrap }) => (noWrap ? 'nowrap' : 'wrap')};\n  }\n`;\n\nexport const StyledToolbarGroup = styled(ToolbarGroup)`\n  flex-wrap: wrap;\n`;\n\nexport const TopToolbarWrapper = styled.div`\n  background-color: #ffffff;\n  .pf-c-breadcrumb__item {\n    .active {\n      color: var(--pf-c-breadcrumb__item--Color);\n      text-decoration: none;\n      pointer-events: none;\n    }\n  }\n  h1,\n  h2 {\n    margin-bottom: 0 !important;\n    @supports not (overflow-wrap: anywhere) {\n      word-break: break-all;\n    }\n    @supports (overflow-wrap: anywhere) {\n      overflow-wrap: anywhere;\n    }\n  }\n  .top-toolbar-title {\n    min-width: 200px;\n  }\n  .top-toolbar-title-description {\n    word-break: break-word;\n  }\n  .ins-c-primary-toolbar {\n    padding: 0;\n  }\n  .pf-c-toolbar__content {\n    padding: 0;\n  }\n`;\n\nexport const TopToolbarTitleContainer = styled(Level)`\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n  }\n`;\n","import React, { ReactNode } from 'react';\n\nexport const Bold = (chunks: ReactNode | ReactNode[]): ReactNode => (\n  <b>{chunks}</b>\n);\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport { FieldApi } from '@data-driven-forms/react-form-renderer/dist/cjs/field';\nimport { FormOptions } from '@data-driven-forms/react-form-renderer/dist/cjs/renderer-context';\nimport Schema from '@data-driven-forms/react-form-renderer/dist/cjs/schema';\nimport asyncFormValidator from '../utilities/async-form-validator';\nimport { LoadOptions, SelectOptions, AnyObject } from '../types/common-types';\n\ntype ResolveNewProcessProps = (\n  props: AnyObject,\n  fieldApi: FieldApi<{ id: string }[]>,\n  formOptions: FormOptions\n) => {\n  key: number;\n  loadOptions: LoadOptions;\n};\nconst resolveNewProcessProps: ResolveNewProcessProps = (\n  props,\n  _fieldApi,\n  formOptions\n) => {\n  const initialProcessess: { id: string }[] = formOptions.getState().values[\n    'initial-tags'\n  ];\n  return {\n    key: initialProcessess.length, // used to trigger options re-load and disable options update\n    loadOptions: (...args) =>\n      (props as { loadOptions: LoadOptions })\n        .loadOptions(...args)\n        .then((data) =>\n          data.map((option) => ({\n            ...option,\n            ...(initialProcessess.find(({ id }) => id === option.value) // we have to disable options that are already in the chip group\n              ? { isDisabled: true }\n              : {})\n          }))\n        )\n  };\n};\n\nconst createSchema = (\n  existingTagsMessage: SelectOptions,\n  loadTags: LoadOptions\n): Schema => ({\n  fields: [\n    {\n      component: componentTypes.SELECT,\n      name: 'new-tags',\n      label: '',\n      loadOptions: asyncFormValidator(loadTags),\n      multi: true,\n      isSearchable: true,\n      isClearable: true,\n      resolveProps: resolveNewProcessProps\n    },\n    {\n      component: 'initial-chips',\n      name: 'initial-tags',\n      label: existingTagsMessage\n    }\n  ]\n});\n\nexport default createSchema;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport difference from 'lodash/difference';\nimport {\n  Modal,\n  Stack,\n  StackItem,\n  TextContent,\n  Text\n} from '@patternfly/react-core';\nimport FormRenderer from '../common/form-renderer';\nimport createSchema from '../../forms/set-object-tags.schema';\nimport { WorkflowLoader } from '../../presentational-components/shared/loader-placeholders';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport actionMessages from '../../messages/actions.messages';\n\nconst TaggingModal = ({\n  loadTags,\n  onSubmit,\n  getInitialTags,\n  onClose,\n  title,\n  subTitle,\n  existingTagsMessage,\n  ...rest\n}) => {\n  const formatMessage = useFormatMessage();\n  const [data, setData] = useState();\n  useEffect(() => {\n    getInitialTags().then((data) => setData(data));\n  }, []);\n  const handleSubmit = (formData) => {\n    const unlinkArray = data\n      .filter(\n        ({ id }) =>\n          !formData['initial-tags'].find((process) => id === process.id)\n      )\n      .map(({ id }) => id);\n    /**\n     * prevent uneccesary unlink and link API calls of the same tag\n     */\n    const linkDiff = difference(formData['new-tags'], unlinkArray);\n    const unLinkDiff = difference(unlinkArray, formData['new-tags']);\n    const toLinkTags = linkDiff.filter(\n      (id) => !data.find((item) => item.id === id)\n    );\n    const toUnlinkTags = unLinkDiff.filter((id) =>\n      data.find((item) => item.id === id)\n    );\n    if (toUnlinkTags.length > 0 || toLinkTags.length > 0) {\n      return onSubmit(toLinkTags, toUnlinkTags);\n    }\n  };\n\n  return (\n    <Modal isOpen title={title} onClose={onClose} variant=\"small\">\n      {!data ? (\n        <WorkflowLoader />\n      ) : (\n        <Stack hasGutter>\n          <StackItem>\n            <TextContent>\n              <Text id=\"sub-title\">{subTitle}</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormRenderer\n              {...rest}\n              subscription={{ values: true }}\n              initialValues={{\n                'initial-tags': data\n              }}\n              schema={createSchema(existingTagsMessage, loadTags)}\n              onSubmit={handleSubmit}\n              onCancel={onClose}\n              clearedValue={[]}\n              templateProps={{\n                submitLabel: formatMessage(actionMessages.save),\n                disableSubmit: ['pristine']\n              }}\n            />\n          </StackItem>\n        </Stack>\n      )}\n    </Modal>\n  );\n};\n\nTaggingModal.propTypes = {\n  loadTags: PropTypes.func.isRequired,\n  getInitialTags: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  title: PropTypes.node.isRequired,\n  subTitle: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  existingTagsMessage: PropTypes.node.isRequired\n};\n\nexport default TaggingModal;\n","import axios, { AxiosResponse, AxiosRequestConfig, AxiosInstance } from 'axios';\nimport {\n  RequestApi,\n  WorkflowApi\n} from '@redhat-cloud-services/approval-client';\nimport {\n  PortfolioApi,\n  PortfolioItemApi,\n  OrderApi,\n  OrderItemApi,\n  IconApi,\n  ServicePlansApi,\n  OrderProcessApi\n} from '@redhat-cloud-services/catalog-client';\n\nimport {\n  CATALOG_API_BASE,\n  APPROVAL_API_BASE,\n  RBAC_API_BASE\n} from '../../utilities/constants';\nimport { GroupApi } from '@redhat-cloud-services/rbac-client';\nimport { stringify } from 'qs';\n\nexport interface ApiHeaders extends Headers {\n  'x-rh-insights-request-id': string;\n}\n\nexport interface ErrorResponse {\n  headers?: ApiHeaders;\n}\n\nexport interface ServerError {\n  response?: ErrorResponse;\n  status?: 403 | 404 | 401 | 400 | 500 | 200; // not a complete list, replace by library with complete interface\n  config?: AxiosRequestConfig;\n}\n\nconst axiosInstance: AxiosInstance = axios.create({\n  paramsSerializer: (params) => stringify(params)\n});\n\nconst resolveInterceptor = (response: AxiosResponse) =>\n  response.data || response;\nconst errorInterceptor = (error: ServerError = {}) => {\n  const requestId = error.response?.headers?.['x-rh-insights-request-id'];\n  throw requestId ? { ...error.response, requestId } : { ...error.response };\n};\n\nconst unauthorizedInterceptor = (error: ServerError = {}) => {\n  if (error.status === 403) {\n    throw {\n      ...error,\n      redirect: {\n        pathname: '/403',\n        message: error.config?.url\n      }\n    };\n  }\n\n  throw error;\n};\n\n// check identity before each request. If the token is expired it will log out user\naxiosInstance.interceptors.request.use(async (config) => {\n  await window.insights.chrome.auth.getUser();\n  return config;\n});\naxiosInstance.interceptors.response.use(resolveInterceptor);\naxiosInstance.interceptors.response.use(undefined, errorInterceptor);\naxiosInstance.interceptors.response.use(undefined, unauthorizedInterceptor);\n\nconst orderApi = new OrderApi(undefined, CATALOG_API_BASE, axiosInstance);\nconst orderItemApi = new OrderItemApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst portfolioApi = new PortfolioApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst portfolioItemApi = new PortfolioItemApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst requestsApi = new RequestApi(undefined, APPROVAL_API_BASE, axiosInstance);\nconst workflowApi = new WorkflowApi(\n  undefined,\n  APPROVAL_API_BASE,\n  axiosInstance\n);\nconst iconApi = new IconApi(undefined, CATALOG_API_BASE, axiosInstance);\nconst servicePlansApi = new ServicePlansApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst orderProcessApi = new OrderProcessApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\n\nexport function getPortfolioApi(): PortfolioApi {\n  return portfolioApi;\n}\n\nexport function getPortfolioItemApi(): PortfolioItemApi {\n  return portfolioItemApi;\n}\n\nexport function getOrderApi(): OrderApi {\n  return orderApi;\n}\n\nexport function getOrderItemApi(): OrderItemApi {\n  return orderItemApi;\n}\n\nexport function getRequestsApi(): RequestApi {\n  return requestsApi;\n}\n\nconst rbacGroupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getRbacGroupApi(): GroupApi {\n  return rbacGroupApi;\n}\n\nexport function getWorkflowApi(): WorkflowApi {\n  return workflowApi;\n}\n\nexport function getAxiosInstance(): AxiosInstance {\n  return axiosInstance;\n}\n\nexport function getIconApi(): IconApi {\n  return iconApi;\n}\n\nexport function getServicePlansApi(): ServicePlansApi {\n  return servicePlansApi;\n}\n\nexport function getOrderProcessApi(): OrderProcessApi {\n  return orderProcessApi;\n}\n\nconst grapqlInstance = axios.create();\ngrapqlInstance.interceptors.request.use(async (config) => {\n  await window.insights.chrome.auth.getUser();\n  return config;\n});\n/**\n * Graphql does not return error response when the qery fails.\n * Instead it returns 200 response with error object.\n * We catch it and throw it to trigger notification middleware\n */\ngrapqlInstance.interceptors.response.use(({ data }) => {\n  if (data.errors) {\n    throw {\n      message: data.errors[0].errorType,\n      data: data.errors[0].message\n    };\n  }\n\n  return data;\n});\n\nexport function getGraphqlInstance(): AxiosInstance {\n  return grapqlInstance;\n}\n","import { ApiMetadata } from '../../types/common-types';\nimport { SortByDirection } from '@patternfly/react-table';\n\nexport interface PaginationConfiguration extends ApiMetadata {\n  filter?: string;\n  sortDirection?: SortByDirection;\n}\n\nexport const defaultSettings: PaginationConfiguration = {\n  limit: 50,\n  offset: 0,\n  count: 0,\n  filter: ''\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0): number =>\n  Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset = 0): number => (page - 1) * offset;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\nimport { useHistory } from 'react-router-dom';\nimport {\n  listOrderProcesses,\n  getLinkedOrderProcesses\n} from '../../helpers/order-process/order-process-helper';\nimport { setOrderProcess } from '../../redux/actions/order-process-actions';\nimport { APP_NAME } from '../../utilities/constants';\nimport useQuery from '../../utilities/use-query';\nimport TaggingModal from '../common/tagging-modal';\nimport { Bold } from '../../presentational-components/shared/intl-rich-text-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\n\nconst SetOrderProcessModal = ({\n  pushParam,\n  objectType,\n  querySelector,\n  objectName\n}) => {\n  const dispatch = useDispatch();\n  const formatMessage = useFormatMessage();\n  const { push } = useHistory();\n  const onCancel = () => push(pushParam);\n  const [query] = useQuery([querySelector]);\n  const loadOrderProcesses = (filter) =>\n    listOrderProcesses(filter).then(({ data }) =>\n      data.map(({ name, id }) => ({ label: name, value: id }))\n    );\n\n  const onSubmit = (toLink, toUnlink) => {\n    onCancel();\n    dispatch(\n      setOrderProcess(toLink, toUnlink, {\n        object_type: objectType,\n        app_name: APP_NAME[objectType],\n        object_id: query[querySelector]\n      })\n    ).then(() =>\n      dispatch(\n        addNotification({\n          dismissable: true,\n          variant: 'success',\n          title: formatMessage(\n            orderProcessesMessages.setOrderProcessNotificationTitle\n          ),\n          description: formatMessage(\n            orderProcessesMessages.setOrderProcessNotificationDescription,\n            {\n              linked: toLink.length,\n              unlinked: toUnlink.length\n            }\n          )\n        })\n      )\n    );\n  };\n\n  return (\n    <TaggingModal\n      getInitialTags={() =>\n        getLinkedOrderProcesses(objectType, query[querySelector]).then(\n          ({ data }) => data\n        )\n      }\n      title={formatMessage(orderProcessesMessages.setOrderProcess)}\n      onClose={onCancel}\n      onSubmit={onSubmit}\n      loadTags={loadOrderProcesses}\n      existingTagsMessage={formatMessage(\n        orderProcessesMessages.currentOrderProcesses\n      )}\n      subTitle={formatMessage(orderProcessesMessages.setOrderProcessSubtitle, {\n        strong: Bold,\n        object: objectName()\n      })}\n    />\n  );\n};\n\nSetOrderProcessModal.propTypes = {\n  pushParam: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string\n  }).isRequired,\n  objectType: PropTypes.oneOf(['PortfolioItem', 'Portfolio']).isRequired,\n  objectName: PropTypes.func,\n  querySelector: PropTypes.string.isRequired\n};\n\nexport default SetOrderProcessModal;\n","import styled from 'styled-components';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\n\nconst SpinnerWrapper = styled(Bullseye)`\n  overflow: hidden;\n`;\n\nexport default SpinnerWrapper;\n","import {\n  getAxiosInstance,\n  getPortfolioApi,\n  getPortfolioItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { sanitizeValues } from '../shared/helpers';\nimport { defaultSettings } from '../shared/pagination';\nimport {\n  AnyObject,\n  ApiCollectionResponse,\n  RestorePortfolioItemConfig\n} from '../../types/common-types';\nimport {\n  Portfolio,\n  PortfolioItem,\n  RestoreKey\n} from '@redhat-cloud-services/catalog-client';\nimport { AxiosPromise, AxiosResponse } from 'axios';\nimport { Store } from 'redux';\nimport { Source } from '@redhat-cloud-services/sources-client';\n\nconst axiosInstance = getAxiosInstance();\nconst portfolioApi = getPortfolioApi();\nconst portfolioItemApi = getPortfolioItemApi();\n\nexport const listPortfolios = (\n  filters: AnyObject = {},\n  { limit, offset, sortDirection = 'asc' } = defaultSettings\n): Promise<Portfolio[]> => {\n  const filterQuery = Object.entries(filters).reduce((acc, [key, value]) => {\n    if (!value) {\n      return acc;\n    }\n\n    const partial =\n      key === 'sort_by'\n        ? `sort_by=${value}:${sortDirection}`\n        : `filter[${key}][contains_i]=${value}`;\n    return `${acc}&${partial}`;\n  }, '');\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios?limit=${limit}&offset=${offset}${filterQuery}`\n  );\n};\n\nexport const listPortfolioItems = (\n  limit = 50,\n  offset = 0,\n  filter = ''\n): Promise<ApiCollectionResponse<PortfolioItem>> => {\n  return axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n    )\n    .then(\n      (portfolioItems: ApiCollectionResponse<PortfolioItem & AnyObject>) => {\n        const portfolioReference = portfolioItems.data.reduce<AnyObject>(\n          (acc, curr, index) =>\n            curr.portfolio_id\n              ? {\n                  ...acc,\n                  [curr.portfolio_id]: acc[curr.portfolio_id]\n                    ? [...acc[curr.portfolio_id], index]\n                    : [index]\n                }\n              : acc,\n          {}\n        );\n        return axiosInstance\n          .get<ApiCollectionResponse<Portfolio>>(\n            `${CATALOG_API_BASE}/portfolios?${Object.keys(portfolioReference)\n              .map((id) => `filter[id][]=${id}`)\n              .join('&')}`\n          )\n          .then(({ data }) => ({\n            portfolioItems,\n            portfolioReference,\n            portfolios: data\n          }));\n      }\n    )\n    .then(({ portfolioItems, portfolioReference, portfolios }) => {\n      portfolios.forEach(\n        ({ id, name }) =>\n          id &&\n          portfolioReference[id] &&\n          portfolioReference[id].forEach((portfolioItemIndex: number) => {\n            portfolioItems.data[portfolioItemIndex].portfolioName = name;\n          })\n      );\n      return portfolioItems;\n    });\n};\n\nexport const getPortfolio = (portfolioId: string): AxiosPromise<Portfolio> =>\n  portfolioApi.showPortfolio(portfolioId);\n\nexport const getPortfolioItemsWithPortfolio = (\n  portfolioId: string,\n  { limit, offset, filter = '' } = defaultSettings\n): Promise<ApiCollectionResponse<PortfolioItem>> =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios/${portfolioId}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n\n// TO DO - change to use the API call that adds multiple items to a portfolio when available\nexport const addPortfolio = async (\n  portfolioData: Partial<Portfolio>,\n  items: string[]\n): Promise<Portfolio> => {\n  const portfolio = await portfolioApi.createPortfolio(portfolioData);\n  if (portfolio && items && items.length > 0) {\n    await addToPortfolio((portfolio as Portfolio).id!, items);\n  }\n\n  return (portfolio as unknown) as Promise<Portfolio>;\n};\n\nexport const addToPortfolio = (\n  portfolioId: string,\n  items: string[]\n): Promise<AxiosResponse<PortfolioItem>[]> =>\n  Promise.all(\n    items.map((item) =>\n      portfolioItemApi.createPortfolioItem({\n        portfolio_id: portfolioId,\n        service_offering_ref: item\n      })\n    )\n  );\n\nexport const updatePortfolio = (\n  { id, ...portfolioData }: Partial<Portfolio>,\n  store: Store\n): AxiosPromise<Portfolio> =>\n  portfolioApi.updatePortfolio(\n    id!,\n    sanitizeValues(portfolioData, 'Portfolio', store)\n  );\n\nexport const removePortfolio = (portfolioId: string): AxiosPromise =>\n  portfolioApi.destroyPortfolio(portfolioId);\n\nexport const removePortfolioItem = (\n  portfolioItemId: string\n): AxiosPromise<RestoreKey> =>\n  portfolioItemApi.destroyPortfolioItem(portfolioItemId);\n\nexport const removePortfolioItems = (portfolioItemIds: string[]) =>\n  Promise.all(\n    portfolioItemIds.map(async (itemId) => {\n      const { restore_key } = (await removePortfolioItem(itemId)) as RestoreKey;\n      return {\n        portfolioItemId: itemId,\n        restoreKey: restore_key\n      };\n    })\n  );\n\nexport const fetchProviderControlParameters = (\n  portfolioItemId: string\n): Promise<AnyObject> =>\n  axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}/provider_control_parameters`\n    )\n    .then((data: AnyObject) => ({\n      required: [],\n      ...data,\n      properties: {\n        ...data.properties,\n        namespace: {\n          ...data.properties.namespace,\n          enum: Array.from(new Set([...data.properties.namespace.enum]))\n        }\n      }\n    }));\n\nexport const updatePortfolioItem = (\n  { id, ...portfolioItem }: Partial<PortfolioItem>,\n  store: Store\n): AxiosPromise<PortfolioItem> =>\n  portfolioItemApi.updatePortfolioItem(\n    id!,\n    sanitizeValues(portfolioItem, 'PortfolioItem', store)\n  );\n\nexport const fetchPortfolioByName = (\n  name = ''\n): Promise<ApiCollectionResponse<Portfolio>> =>\n  axiosInstance.get(`${CATALOG_API_BASE}/portfolios`, {\n    params: {\n      filter: {\n        name\n      }\n    }\n  });\n\nexport const restorePortfolioItems = (\n  restoreData: RestorePortfolioItemConfig[]\n): Promise<AxiosResponse<PortfolioItem>[]> =>\n  Promise.all(\n    restoreData.map(({ portfolioItemId, restoreKey }) =>\n      portfolioItemApi.unDeletePortfolioItem(portfolioItemId, {\n        restore_key: restoreKey\n      })\n    )\n  );\n\nexport const copyPortfolio = (portfolioId: string): AxiosPromise<Portfolio> =>\n  portfolioApi.postCopyPortfolio(portfolioId);\n\nexport const copyPortfolioItem = (\n  portfolioItemId: string,\n  copyObject: Partial<PortfolioItem> = {}\n): AxiosPromise<PortfolioItem> =>\n  portfolioItemApi.postCopyPortfolioItem(portfolioItemId, copyObject);\n\nexport const resetPortfolioItemIcon = (iconId: string): AxiosPromise<void> =>\n  axiosInstance.delete(`${CATALOG_API_BASE}/icons/${iconId}`);\n\nexport const uploadPortfolioItemIcon = (\n  portfolioItemId: string,\n  file: File,\n  iconId?: string\n): Promise<void> => {\n  const data = new FormData();\n  data.append('content', file, file.name);\n  if (iconId) {\n    return axiosInstance.patch(`${CATALOG_API_BASE}/icons/${iconId}`, data);\n  }\n\n  data.append('portfolio_item_id', portfolioItemId);\n  return axiosInstance.post(`${CATALOG_API_BASE}/icons`, data, {\n    headers: {\n      accept: 'application/json',\n      'Content-Type': `multipart/form-data; boundary=${\n        (data as AnyObject)._boundary\n      }`\n    }\n  });\n};\n\nexport interface GetPortfolioItemDetailParams {\n  portfolioItem: string;\n  source: string;\n}\nexport const getPortfolioItemDetail = (\n  params: GetPortfolioItemDetailParams\n): Promise<[PortfolioItem, Source]> =>\n  Promise.all([\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/portfolio_items/${params.portfolioItem}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${params.source}`)\n      .catch((error) => {\n        if (error.status === 404) {\n          return {\n            object: 'platform',\n            notFound: true\n          };\n        }\n\n        throw error;\n      })\n  ]);\n\n// TODO move to portfolio reducer\ninterface PortfolioReducerPlaceholder {\n  selectedPortfolio?: Portfolio;\n  portfolios: ApiCollectionResponse<Portfolio>;\n}\n\nexport const getPortfolioFromState = (\n  portfolioReducer: PortfolioReducerPlaceholder,\n  portfolioId: string\n): Portfolio | undefined =>\n  portfolioReducer.selectedPortfolio &&\n  portfolioReducer.selectedPortfolio.id === portfolioId\n    ? portfolioReducer.selectedPortfolio\n    : portfolioReducer.portfolios.data.find(({ id }) => id === portfolioId);\n\nexport const undeletePortfolio = (\n  portfolioId: string,\n  restoreKey: string\n): Promise<Portfolio> =>\n  axiosInstance.post(`${CATALOG_API_BASE}/portfolios/${portfolioId}/undelete`, {\n    restore_key: restoreKey\n  });\n","import { createContext } from 'react';\n\nconst AppContext = createContext({});\n\nexport default AppContext;\n","export const FETCH_SERVICE_PLANS = 'FETCH_SERVICE_PLANS';\nexport const FETCH_SERVICE_PLAN_PARAMETERS = 'FETCH_SERVICE_PLAN_PARAMETERS';\nexport const SUBMIT_SERVICE_ORDER = 'SUBMIT_SERVICE_ORDER';\nexport const SET_SELECTED_PLAN = 'SET_SELECTED_PLAN';\nexport const LIST_ORDERS = 'LIST_ORDERS';\nexport const CANCEL_ORDER = 'CANCEL_ORDER';\nexport const SET_ORDERS = 'SET_ORDERS';\nexport const FETCH_ORDERS = 'FETCH_ORDERS';\n\nexport const FETCH_PLATFORM = 'FETCH_PLATFORM';\nexport const FETCH_PLATFORMS = 'FETCH_PLATFORMS';\nexport const FETCH_PLATFORM_ITEMS = 'FETCH_PLATFORM_ITEMS';\nexport const FETCH_PLATFORM_ITEM = 'FETCH_PLATFORM_ITEM';\nexport const FETCH_MULTIPLE_PLATFORM_ITEMS = 'FETCH_MULTIPLE_PLATFORM_ITEMS';\nexport const FILTER_PLATFORM_ITEMS = 'FILTER_PLATFORM_ITEMS';\nexport const FETCH_PLATFORM_INVENTORIES = 'FETCH_PLATFORM_INVENTORIES';\nexport const SET_INVENTORIES_LOADING_STATE = 'SET_INVENTORIES_LOADING_STATE';\n\nexport const FETCH_PORTFOLIOS = 'FETCH_PORTFOLIOS';\nexport const FETCH_PORTFOLIO_ITEM = 'FETCH_PORTFOLIO_ITEM';\nexport const FETCH_PORTFOLIO_ITEMS = 'FETCH_PORTFOLIO_ITEMS';\nexport const FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO =\n  'FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO';\nexport const FETCH_PORTFOLIO = 'FETCH_PORTFOLIO';\nexport const FILTER_PORTFOLIO_ITEMS = 'FILTER_PORTFOLIO_ITEMS';\nexport const ADD_PORTFOLIO = 'ADD_PORTFOLIO';\nexport const ADD_TO_PORTFOLIO = 'ADD_TO_PORTFOLIO';\nexport const UPDATE_PORTFOLIO = 'UPDATE_PORTFOLIO';\nexport const REMOVE_PORTFOLIO = 'REMOVE_PORTFOLIO';\nexport const REMOVE_PORTFOLIO_ITEMS = 'REMOVE_PORTFOLIO_ITEMS';\nexport const RESTORE_PORTFOLIO_ITEMS = 'RESTORE_PORTFOLIO_ITEMS';\nexport const RESET_SELECTED_PORTFOLIO = 'RESET_SELECTED_PORTFOLIO';\nexport const ADD_TEMPORARY_PORTFOLIO = 'ADD_TEMPORARY_PORTFOLIO';\nexport const UPDATE_TEMPORARY_PORTFOLIO = 'UPDATE_TEMPORARY_PORTFOLIO';\nexport const DELETE_TEMPORARY_PORTFOLIO = 'DELETE_TEMPORARY_PORTFOLIO';\nexport const RESTORE_PORTFOLIO_PREV_STATE = 'RESTORE_PORTFOLIO_PREV_STATE';\nexport const SET_PORTFOLIO_ITEMS = 'SET_PORTFOLIO_ITEMS';\nexport const UPDATE_TEMPORARY_PORTFOLIO_ITEM =\n  'UPDATE_TEMPORARY_PORTFOLIO_ITEM';\nexport const RESTORE_PORTFOLIO_ITEM_PREV_STATE =\n  'RESTORE_PORTFOLIO_ITEM_PREV_STATE';\nexport const UPDATE_PORTFOLIO_ITEM = 'UPDATE_PORTFOLIO_ITEM';\n\nexport const FETCH_RBAC_GROUPS = 'FETCH_RBAC_GROUPS';\n\nexport const SHARE_PORTFOLIO = 'SHARE_PORTFOLIO';\nexport const UNSHARE_PORTFOLIO = 'UNSHARE_PORTFOLIO';\nexport const QUERY_PORTFOLIO = 'QUERY_PORTFOLIO';\n\nexport const FETCH_REQUESTS = 'FETCH_REQUESTS';\nexport const FETCH_ORDER_ITEMS = 'FETCH_ORDER_ITEMS';\n\n/**\n * Global redux loading state\n */\nexport const SET_LOADING_STATE = 'SET_LOADING_STATE';\n\n/**\n * OpenApi action\n */\nexport const SET_OPENAPI_SCHEMA = '@@open-api/set-schema';\n\n/**\n * Orders actions\n * TODO Prefix existing action types\n */\nexport const SET_ORDER_DETAIL = '@@orders/set-order-detail';\nexport const FETCH_APPROVAL_REQUESTS = '@@orders/fetch-order-requests';\n\n/*\n * Portfolio actions\n */\nexport const SELECT_PORTFOLIO_ITEM = '@@portfolio/SELECT_PORTFOLIO_ITEM';\n\n/**\n * Sources actions\n */\nexport const FETCH_SERVICE_OFFERING = '@@sources/FETCH_SERVICE_OFFERING';\nexport const SET_SOURCETYPE_ICONS = '@@sources/SET_SOURCETYPE_ICONS';\n\n/**\n * Breadcrumbs actions\n */\nexport const INITIALIZE_BREADCRUMBS = '@@breadcrumbs/INITIALIZE_BREADCRUMBS';\n\n/**\n * In18l actions\n */\n\nexport const INITIALIZE_I18N = '@@i18l/INITIALIZE_I18N';\n\n/*\n * Order processes actions\n */\nexport const FETCH_ORDER_PROCESSES = '@@order_processes/FETCH_ORDER_PROCESSES';\nexport const ADD_ORDER_PROCESS = '@@order_processes/ADD_ORDER_PROCESS';\nexport const SORT_ORDER_PROCESSES = '@@order_processes/SORT_ORDER_PROCESSES';\nexport const SET_ORDER_PROCESS = '@@order_processes/SET_ORDER_PROCESS';\nexport const FETCH_ORDER_PROCESS = '@@order_processes/FETCH_ORDER_PROCESS';\nexport const REMOVE_ORDER_PROCESS = '@@order_processes/REMOVE_ORDER_PROCESS';\nexport const REMOVE_ORDER_PROCESSES =\n  '@@order_processes/REMOVE_ORDER_PROCESSES';\nexport const SET_FILTER_ORDER_PROCESSES =\n  '@@order_processes/SET_FILTER_ORDER_PROCESSES';\nexport const UPDATE_ORDER_PROCESS = '@@order_process/UPDATE_ORDER_PROCESS';\n","import { defineMessages } from 'react-intl';\n\nconst orderProcessesMessages = defineMessages({\n  noOrderProcessesDescription: {\n    id: 'order-proces.empty.no-order-processes',\n    defaultMessage: 'No order processes found.'\n  },\n  noOrderProcessesFilterDescription: {\n    id: 'order-process.empty.no-results',\n    defaultMessage: 'No order processes match your filter criteria.'\n  },\n  orderProcessesFilter: {\n    id: 'order-process.filter.placeholder',\n    defaultMessage: 'Filter by name'\n  },\n  title: {\n    id: 'order-process.toolbar.title',\n    defaultMessage: 'Order processes'\n  },\n  noOrderProcesses: {\n    id: 'order-process.toolbar.order-process',\n    defaultMessage: 'No order processes'\n  },\n  orderProcess: {\n    id: 'order-process.toolbar.order-process',\n    defaultMessage: 'Order process'\n  },\n  addProcessSuccessTitle: {\n    id: 'order-process.actions.addProcessSuccessTitle',\n    defaultMessage: 'Success adding order process'\n  },\n  addProcessSuccessDescription: {\n    id: 'order-process.actions.addProcessSuccessDescription',\n    defaultMessage: 'The order process was added successfully.'\n  },\n  setOrderProcess: {\n    id: 'order-process.actions.set',\n    defaultMessage: 'Set order processes'\n  },\n  setOrderProcessSubtitle: {\n    id: 'order-process.tags.set',\n    defaultMessage: 'Set order processes for <strong>{object}</strong>'\n  },\n  currentOrderProcesses: {\n    id: 'order-process.set-order-process.current',\n    defaultMessage: 'Current order processes'\n  },\n  setOrderProcessNotificationTitle: {\n    id: 'order-process.notification.title',\n    defaultMessage: 'Success updating order process'\n  },\n  setOrderProcessNotificationDescription: {\n    id: 'order-process.notification.description',\n    defaultMessage:\n      // eslint-disable-next-line max-len\n      '{linked, plural, =0 {} other {{linked, number} {linked, plural, one {order process was} other {order processes were}} linked.}} {unlinked, plural, =0{} other {{unlinked, number} {unlinked, plural, one {order process was} other {order processes were}} unlinked.}}'\n  },\n  orderProcessName: {\n    id: 'order-process.name',\n    defaultMessage: 'Order process name'\n  },\n  enterOrderProcessName: {\n    id: 'order-process.enterName',\n    defaultMessage: 'Enter a name for the order process'\n  },\n  orderProcesses: {\n    id: 'order-process.orderProcesses',\n    defaultMessage: 'order processes'\n  },\n  removeProcessSuccessTitle: {\n    id: 'order-process.removeProcessSuccessTitle',\n    defaultMessage: 'Success removing order process'\n  },\n  removeProcessSuccessDescription: {\n    id: 'order-process.removeProcessSuccessDescription',\n    defaultMessage: 'The order process was removed successfully.'\n  },\n  removeProcessesSuccessTitle: {\n    id: 'order-process.removeProcessesSuccessTitle',\n    defaultMessage: 'Success removing order processes'\n  },\n  removeProcessesSuccessDescription: {\n    id: 'order-process.removeProcessesSuccessDescription',\n    defaultMessage: 'The selected order processes were removed successfully.'\n  },\n  deleteOrderProcess: {\n    id: 'order-process.deleteProcessAriaMenu',\n    defaultMessage: 'Delete order processes'\n  },\n  removeProcessTitle: {\n    id: 'order-process.removeProcessTitle',\n    defaultMessage:\n      'Delete {count, plural, one {order process} other {order processes}}?'\n  },\n  removeProcessAriaLabel: {\n    id: 'order-process.removeProcessAriaLabel',\n    defaultMessage:\n      'Delete {count, plural, one {order process} other {order processes}} modal'\n  },\n  removeProcessDescription: {\n    id: 'order-process.removeProcessDescription',\n    defaultMessage: '{name} will be removed.'\n  },\n  updateProcessSuccessTitle: {\n    id: 'order-process.actions.updateProcessSuccessTitle',\n    defaultMessage: 'Order process {name} was updated'\n  },\n  updateOrderProcess: {\n    id: 'order-process.actions.updateOrderProcess',\n    defaultMessage: 'Edit order process'\n  },\n  createOrderProcess: {\n    id: 'order-process.actions.createOrderProcess',\n    defaultMessage: 'Create order process'\n  }\n});\n\nexport default orderProcessesMessages;\n","import { createBrowserHistory } from 'history';\n\nconst pathName = window.location.pathname.split('/');\npathName.shift();\n\nlet prefix = '/';\nif (pathName[0] === 'beta') {\n  prefix = `/${pathName.shift()}/`;\n}\n\n/**\n * Make sure that the [1] fragment is present in the pathname.\n * Otherwise we could end up with /undefined/ which will be transformed by the router to //\n */\nconst basename = `${prefix}${pathName[0]}/${pathName[1] ? pathName[1] : ''}`;\n\nconst catalogHistory = createBrowserHistory({\n  basename\n});\n\nexport const release = prefix;\nexport default catalogHistory;\n","import React, { useContext } from 'react';\nimport { Route } from 'react-router-dom';\nimport UserContext from '../user-context';\nimport PropTypes from 'prop-types';\nimport { hasPermission } from '../helpers/shared/helpers';\nimport { UnauthorizedRedirect } from '../smart-components/error-pages/error-redirects';\n\nconst ReidrectOnAccess = (props) => (\n  <Route {...props}>\n    <UnauthorizedRedirect />\n  </Route>\n);\n\nconst hasCapability = (userCapabilities, requiredCapabilities) =>\n  requiredCapabilities\n    ? Array.isArray(requiredCapabilities)\n      ? requiredCapabilities.some(\n          (capability) => userCapabilities[capability] !== false\n        )\n      : userCapabilities[requiredCapabilities] !== false\n    : true;\n\nconst CatalogRoute = ({\n  permissions,\n  userCapabilities,\n  requiredCapabilities,\n  ...props\n}) => {\n  const { permissions: userPermissions } = useContext(UserContext);\n  const hasAccess =\n    hasCapability(userCapabilities, requiredCapabilities) &&\n    hasPermission(userPermissions, permissions);\n\n  if (!hasAccess) {\n    return <ReidrectOnAccess {...props} />;\n  }\n\n  return <Route {...props} />;\n};\n\nCatalogRoute.propTypes = {\n  permissions: PropTypes.arrayOf(PropTypes.string),\n  userCapabilities: PropTypes.object,\n  requiredCapabilities: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ])\n};\n\nCatalogRoute.defaultProps = {\n  permissions: [],\n  userCapabilities: {}\n};\n\nexport default CatalogRoute;\n","import { defineMessages } from 'react-intl';\n\nconst portfolioMessages = defineMessages({\n  portfoliosTitle: {\n    id: 'portfolios.heading.title',\n    defaultMessage: 'Portfolios'\n  },\n  removeItemsNotification: {\n    id: 'portfolio.notifications.remove.portfolio-items',\n    defaultMessage:\n      'You have removed {count, plural, one {} other {<b>{count, number}</b>}} {count, plural, one {<b>{productName}</b>} other {<b>products</b>} } from the {portfolioName} portfolio. <a>Undo</a> if this was a mistake.' // eslint-disable-line max-len\n  },\n  removePortfolioNotification: {\n    id: 'portfolio.notifications.remove.portfolio',\n    defaultMessage:\n      'The portfolio was removed successfully. You can <a>Undo</a> this action if this was a mistake.'\n  },\n  modalCreateTitle: {\n    id: 'portfolio.modal.add.title',\n    defaultMessage: 'Create portfolio'\n  },\n  modalEditTitle: {\n    id: 'portfolio.modal.edit.title',\n    defaultMessage: 'Edit portfolio'\n  },\n  addProducts: {\n    id: 'portfolio.empty.add.products',\n    defaultMessage: 'Add products'\n  },\n  emptyNoProducts: {\n    id: 'portfolio.empty.no-products',\n    defaultMessage: 'No products in your portfolio'\n  },\n  portfoliosPlaceholder: {\n    id: 'portfolios.filters.placeholder',\n    defaultMessage: 'Filter by portfolio'\n  },\n  portfoliosNoData: {\n    id: 'portfolios.empty.noData.title',\n    defaultMessage: 'No portfolios'\n  },\n  portfoliosNoDataDescription: {\n    id: 'portfolios.empty.noData.description',\n    defaultMessage: 'No portfolios match your filter criteria.'\n  },\n  portfolioRemoveDescription: {\n    id: 'portfolio.remove.modal.description',\n    defaultMessage:\n      'This action will permanently delete portfolio {name} and its data.'\n  },\n  portfolioRemoveTitle: {\n    id: 'portfolio.remove.modal.title',\n    defaultMessage: 'Delete Portfolio?'\n  },\n  portfolioSharePermissions: {\n    id: 'portfolio.share.modal.permissions',\n    defaultMessage: 'Select the share permissions'\n  },\n  portfolioShareGroups: {\n    id: 'portfolio.share.modal.groups',\n    defaultMessage: 'Select a group'\n  },\n  portfolioShareTitle: {\n    id: 'portfolio.share.modal.title',\n    defaultMessage: 'Share portfolio'\n  },\n  portfolioShareApply: {\n    id: 'portfolio.share.modal.apply',\n    defaultMessage: 'Apply'\n  },\n  portfolioShareDescription: {\n    id: 'portfolio.share.modal.description',\n    defaultMessage: 'Share <strong>{name}</strong> portfolio'\n  },\n  addProducstPlatformTitle: {\n    id: 'portfolio.add.platform.title.empty',\n    defaultMessage: 'Please choose platform'\n  },\n  addProducstPlatformDescription: {\n    id: 'portfolio.add.platform.description.empty',\n    defaultMessage:\n      'In order to select products for your portfolio you must choose platform first'\n  },\n  addProducstFilterTitle: {\n    id: 'portfolio.add.platform.filter.empty',\n    defaultMessage: 'No products match filter parameters'\n  },\n  copyItemTitle: {\n    id: 'portfolio.item.copy',\n    defaultMessage: 'Copy product'\n  },\n  portfolioItemSurvey: {\n    id: 'portfolio.item.detail.actions.survey',\n    defaultMessage: 'Edit survey'\n  },\n  portfolioItemOrder: {\n    id: 'portfolio.item.detail.actions.order',\n    defaultMessage: 'Order'\n  },\n  portfolioItemIconTitle: {\n    id: 'portfolio.item.icon.upload.notification',\n    defaultMessage: 'Icon upload error'\n  },\n  portfolioItemOverview: {\n    id: 'portfolio.item.detail.overview',\n    defaultMessage: 'Overview'\n  },\n  portfolioItemSupport: {\n    id: 'portfolio.item.detail.support',\n    defaultMessage: 'Learn more'\n  },\n  portfolioItemDocumentation: {\n    id: 'portfolio.item.detail.documentation',\n    defaultMessage: 'Documentation'\n  },\n  portfolioItemDocLink: {\n    id: 'portfolio.item.detail.doclink',\n    defaultMessage: 'Doc link'\n  },\n  restoreSurvey: {\n    id: 'portfolio.item.survey.restore',\n    defaultMessage: 'Restore to Ansible Tower version'\n  },\n  surveyTitle: {\n    id: 'portfolio.item.survey.edit',\n    defaultMessage: 'Editing survey: {name}'\n  },\n  sourceUnavaiable: {\n    id: 'portfolio.detail.alert.source.unavailable',\n    defaultMessage: 'The platform for this product is unavailable'\n  },\n  objectUnavaiable: {\n    id: 'portfolio.detail.alert.unavailable',\n    defaultMessage: 'The {object} for this product is no longer available'\n  },\n  backToProducts: {\n    id: 'portfolio.detail.back-to-products',\n    defaultMessage: 'Back to products'\n  },\n  editProduct: {\n    id: 'portfolio.item.edit.title',\n    defaultMessage: 'Edit product'\n  },\n  shareTooltip: {\n    id: 'portfolio.share.add.tooltip',\n    defaultMessage: 'Share portfolio with selected group and permissions.'\n  },\n  shareErrorMissingGroup: {\n    id: 'portfolio.share.add.missing-group',\n    defaultMessage: 'Select group to share portfolio.'\n  },\n  shareErrorMissingPermission: {\n    id: 'portfolio.share.add.missing-permission',\n    defaultMessage: 'Assign permissions to selected group.'\n  },\n  shareErrorMissingData: {\n    id: 'portfolio.share.add.missing-data',\n    defaultMessage: 'Choose group and permissions.'\n  },\n  shareDuplicate: {\n    id: 'portfolio.share.add.duplicate',\n    defaultMessage: 'Portfolio is already shared with this group.'\n  },\n  noShares: {\n    id: 'portfolio.share.add.no-shares',\n    defaultMessage: 'To share portfolio select a group and permissions'\n  },\n  shareGroupsAccess: {\n    id: 'share.groups.access',\n    defaultMessage: 'Groups with access'\n  },\n  shareSuccessTitle: {\n    id: 'share.notification.success.title',\n    defaultMessage: 'Share permissions were updated successfully'\n  },\n  shareSuccessTitleOnlySharing: {\n    id: 'share.notification.success.share.title',\n    defaultMessage: 'Success sharing portfolio'\n  },\n  shareSuccessTitleOnlyUnsharing: {\n    id: 'share.notification.success.unshare.title',\n    defaultMessage: 'Success unsharing portfolio'\n  },\n  shareSuccessTitleOnlyChaningPermissions: {\n    id: 'share.notification.success.change-permission.title',\n    defaultMessage: 'Success changing permissions'\n  },\n  shareSuccessDescriptionOnlySharing: {\n    id: 'share.notification.success.share.description',\n    defaultMessage: 'Portfolio <b>{name}</b> was shared with {group}.'\n  },\n  shareSuccessDescriptionOnlyUnsharing: {\n    id: 'share.notification.success.unshare.description',\n    defaultMessage: 'Portfolio <b>{name}</b> was unshared with {group}.'\n  },\n  shareSuccessDescriptionOnlyChaningPermissions: {\n    id: 'share.notification.success.change-permission.description',\n    defaultMessage: 'Share permissions for <b>{group}</b> were updated.'\n  },\n  shareSuccessTwoGroup: {\n    id: 'share.notification.success.two-groups',\n    defaultMessage: '{group1} and {group2}'\n  },\n  shareSuccessMultipleGroups: {\n    id: 'share.notification.success.multiple-groups',\n    defaultMessage: '{count} groups'\n  },\n  addSuccessTitle: {\n    id: 'portfolio.add.success.title',\n    defaultMessage: 'Success adding portfolio'\n  },\n  addSuccessDescription: {\n    id: 'portfolio.add.success.description',\n    defaultMessage: 'Portfolio <b>{name}</b> was added successfully.'\n  }\n});\n\nexport default portfolioMessages;\n","export const CATALOG_API_BASE = `${process.env.BASE_PATH}/catalog/v1.2`;\nexport const SOURCES_API_BASE = `${process.env.BASE_PATH}/sources/v1.0`;\nexport const APPROVAL_API_BASE = `${process.env.BASE_PATH}/approval/v1.2`;\nexport const TOPOLOGICAL_INVENTORY_API_BASE = `${process.env.BASE_PATH}/topological-inventory/v1.0`;\nexport const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\nexport const permissionValues = ['order', 'read', 'update'];\n\nexport const permissionOptions = [\n  {\n    value: 'order,read,update',\n    label: 'Can order/edit'\n  },\n  {\n    value: 'order,read',\n    label: 'Can order/view'\n  }\n];\n\nexport const PORTFOLIO_RESOURCE_TYPE = 'Portfolio';\nexport const PORTFOLIO_ITEM_RESOURCE_TYPE = 'PortfolioItem';\nexport const INVENTORY_RESOURCE_TYPE = 'ServiceInventory';\nexport const DEFAULT_MAX_LENGTH = 64;\n\nexport const APP_NAME = {\n  Portfolio: 'catalog',\n  PortfolioItem: 'catalog',\n  ServiceInventory: 'topology'\n};\n\nexport const BEFORE_TYPE = 'before';\nexport const AFTER_TYPE = 'after';\n","import { getAxiosInstance, getOrderProcessApi } from '../shared/user-login';\nimport { defaultSettings } from '../shared/pagination';\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport {\n  OrderProcess,\n  ResourceObject\n} from '@redhat-cloud-services/catalog-client';\nimport {\n  ApiCollectionResponse,\n  ApiMetadata,\n  SelectOptions\n} from '../../types/common-types';\nimport { AxiosResponse } from 'axios';\nconst axiosInstance = getAxiosInstance();\nconst orderProcessApi = getOrderProcessApi();\n\nexport const listOrderProcesses = (\n  filter = '',\n  { limit, offset }: ApiMetadata = defaultSettings\n): Promise<ApiCollectionResponse<OrderProcess>> =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_processes?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n\nexport const loadProductOptions = (\n  filterValue = ''\n): Promise<SelectOptions> => {\n  return getAxiosInstance()\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items?filter[name][contains]=${filterValue}`\n    )\n    .then(({ data }) =>\n      data.map((item: { name: string; id: string }) => ({\n        label: item.name,\n        value: item.id\n      }))\n    );\n};\n\nexport const fetchOrderProcessByName = (\n  name: string\n): Promise<ApiCollectionResponse<OrderProcess>> => listOrderProcesses(name);\n\nexport const fetchOrderProcess = (id: string): Promise<OrderProcess> =>\n  (getOrderProcessApi().showOrderProcess(id) as unknown) as Promise<\n    OrderProcess\n  >;\n\nexport const setOrderProcesses = (\n  toTag: string[],\n  toUntag: string[],\n  resourceType: ResourceObject\n): Promise<AxiosResponse<void>[]> => {\n  const promises = [\n    ...toTag.map((id) =>\n      orderProcessApi.linkTagToOrderProcess(id, resourceType)\n    ),\n    ...toUntag.map((id) =>\n      orderProcessApi.unlinkTagFromOrderProcess(id, resourceType)\n    )\n  ];\n  return Promise.all(promises);\n};\n\nexport const getLinkedOrderProcesses = (\n  objectType: string,\n  objectId: string\n): Promise<OrderProcess> =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_processes?app_name=catalog&object_type=${objectType}&object_id=${objectId}`\n  );\n\nexport const removeOrderProcess = (processId: string): Promise<void> =>\n  (getOrderProcessApi().destroyOrderProcess(processId) as unknown) as Promise<\n    void\n  >;\n\nexport const removeOrderProcesses = (\n  selectedProcesses: string[]\n): Promise<AxiosResponse<void>[]> =>\n  Promise.all(\n    selectedProcesses.map(\n      async (processId) =>\n        await getOrderProcessApi().destroyOrderProcess(processId)\n    )\n  );\n\nexport const updateOrderProcess = async (\n  id: string,\n  {\n    before_portfolio_item_id,\n    after_portfolio_item_id,\n    ...data\n  }: Partial<OrderProcess>\n): Promise<OrderProcess> => {\n  const op = await getOrderProcessApi().updateOrderProcess(id, {\n    name: data.name,\n    description: data.description,\n    before_portfolio_item_id: before_portfolio_item_id || '',\n    after_portfolio_item_id: after_portfolio_item_id || ''\n  });\n\n  return op as OrderProcess;\n};\n\nexport const addOrderProcess = async ({\n  before_portfolio_item_id,\n  after_portfolio_item_id,\n  ...data\n}: Partial<OrderProcess>): Promise<[\n  OrderProcess,\n  OrderProcess | undefined\n]> => {\n  const op = await getOrderProcessApi().createOrderProcess({\n    name: data.name,\n    description: data.description\n  });\n\n  const promiseB =\n    before_portfolio_item_id !== undefined\n      ? getOrderProcessApi().addOrderProcessBeforeItem(\n          ((op as unknown) as OrderProcess).id as string,\n          { portfolio_item_id: before_portfolio_item_id }\n        )\n      : {};\n  const promiseA =\n    after_portfolio_item_id !== undefined\n      ? getOrderProcessApi().addOrderProcessAfterItem(\n          ((op as unknown) as OrderProcess).id as string,\n          { portfolio_item_id: after_portfolio_item_id }\n        )\n      : {};\n  return Promise.all([promiseA, promiseB]);\n};\n","import { Request } from '@redhat-cloud-services/approval-client';\nimport {\n  ServicePlan,\n  Order,\n  PortfolioItem,\n  Portfolio,\n  OrderItem\n} from '@redhat-cloud-services/catalog-client';\nimport { Source } from '@redhat-cloud-services/sources-client';\nimport {\n  FETCH_SERVICE_PLANS,\n  LIST_ORDERS,\n  FETCH_SERVICE_PLAN_PARAMETERS,\n  SUBMIT_SERVICE_ORDER,\n  SET_SELECTED_PLAN,\n  FETCH_REQUESTS,\n  FETCH_ORDER_ITEMS,\n  SET_LOADING_STATE,\n  SET_ORDERS,\n  FETCH_ORDERS,\n  SET_ORDER_DETAIL,\n  FETCH_APPROVAL_REQUESTS\n} from '../action-types';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport {\n  ApiCollectionResponse,\n  AnyObject,\n  ReduxActionHandler\n} from '../../types/common-types';\n\nexport interface CatalogOrder extends Order {\n  orderItems: OrderItem[];\n}\nexport interface OrderDetail extends AnyObject {\n  order: Order;\n  portfolioItem: PortfolioItem;\n  platform: Source;\n  portfolio: Portfolio;\n}\nexport interface OrderReducerState extends AnyObject {\n  servicePlans: ServicePlan[];\n  selectedPlan: ServicePlan;\n  isLoading: boolean;\n  requests: Request[];\n  orderDetail: OrderDetail;\n  orders: ApiCollectionResponse<CatalogOrder>;\n}\n// Initial State\nexport const orderInitialState: OrderReducerState = {\n  servicePlans: [],\n  selectedPlan: {},\n  isLoading: false,\n  requests: [],\n  orderDetail: {\n    order: {},\n    portfolioItem: {},\n    platform: {},\n    portfolio: {}\n  },\n  orders: {\n    data: [],\n    meta: { ...defaultSettings }\n  }\n};\n\nexport type OrderReducerActionHandler = ReduxActionHandler<OrderReducerState>;\n\nconst setLoadingState: OrderReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isLoading: payload\n});\nconst setServicePlans: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  servicePlans: payload,\n  isLoading: false\n});\nconst setListOrder: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  orders: payload,\n  isLoading: false\n});\nconst setPlanParameters: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  planParameters: payload,\n  isLoading: false\n});\nconst submitServiceOrder: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  ...payload,\n  isLoading: false\n});\nconst selectPlan: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  selectedPlan: payload,\n  isLoading: false\n});\nconst setRequests: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  requests: payload,\n  isLoading: false\n});\nconst setOrderItems: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  orderItems: payload,\n  isLoading: false\n});\nconst setOrders: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  orders: payload\n});\nconst setOrderDetail: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  orderDetail: payload\n});\nconst updateOrderApprovalRequests: OrderReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  orderDetail: {\n    ...state.orderDetail,\n    approvalRequest: payload\n  }\n});\n\nexport default {\n  [`${FETCH_SERVICE_PLANS}_PENDING`]: setLoadingState,\n  [`${FETCH_SERVICE_PLANS}_FULFILLED`]: setServicePlans,\n  [`${LIST_ORDERS}_PENDING`]: setLoadingState,\n  [`${LIST_ORDERS}_FULFILLED`]: setListOrder,\n  [`${FETCH_SERVICE_PLAN_PARAMETERS}_PENDING`]: setLoadingState,\n  [`${FETCH_SERVICE_PLAN_PARAMETERS}_FULFILLED`]: setPlanParameters,\n  [`${SUBMIT_SERVICE_ORDER}_PENDING`]: setLoadingState,\n  [`${SUBMIT_SERVICE_ORDER}_FULFILLED`]: submitServiceOrder,\n  [SET_SELECTED_PLAN]: selectPlan,\n  [`${FETCH_REQUESTS}_PENDING`]: setLoadingState,\n  [`${FETCH_REQUESTS}_FULFILLED`]: setRequests,\n  [`${FETCH_ORDER_ITEMS}_PENDING`]: setLoadingState,\n  [`${FETCH_ORDER_ITEMS}_FULFILLED`]: setOrderItems,\n  [SET_LOADING_STATE]: setLoadingState,\n  [`${FETCH_ORDERS}_FULFILLED`]: setOrders,\n  [`${FETCH_ORDERS}_PENDING`]: setLoadingState,\n  [SET_ORDERS]: setOrders,\n  [`${SET_ORDER_DETAIL}_FULFILLED`]: setOrderDetail,\n  [SET_ORDER_DETAIL]: setOrderDetail,\n  [`${FETCH_APPROVAL_REQUESTS}_FULFILLED`]: updateOrderApprovalRequests\n};\n","import {\n  FETCH_PLATFORM,\n  FETCH_PLATFORMS,\n  FETCH_PLATFORM_ITEMS,\n  FETCH_PLATFORM_ITEM,\n  FILTER_PLATFORM_ITEMS,\n  FETCH_MULTIPLE_PLATFORM_ITEMS,\n  SET_LOADING_STATE,\n  FETCH_PLATFORM_INVENTORIES,\n  SET_INVENTORIES_LOADING_STATE,\n  FETCH_SERVICE_OFFERING,\n  SET_SOURCETYPE_ICONS\n} from '../action-types';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport {\n  StringObject,\n  ApiCollectionResponse,\n  AnyObject,\n  ReduxActionHandler\n} from '../../types/common-types';\nimport {\n  Source,\n  ServiceOffering,\n  ServiceInventory\n} from '@redhat-cloud-services/sources-client';\n\nexport interface ServiceOfferingDetail {\n  service: ServiceOffering;\n  source: Source;\n}\nexport interface PlatformItemsObject {\n  [key: string]: ApiCollectionResponse<ServiceOffering>;\n}\nexport interface PlatformReducerState extends AnyObject {\n  platformIconMapping: StringObject;\n  sourceTypeIcons: StringObject;\n  isPlatformDataLoading: boolean;\n  selectedPlatform: Source;\n  platforms: Source[];\n  platformItems: PlatformItemsObject;\n  platformInventories: ApiCollectionResponse<ServiceInventory>;\n  platformItem: ServiceOffering;\n  platform: Source;\n  filterValue: string;\n  serviceOffering: ServiceOfferingDetail;\n}\nexport type PlatformReducerActionHandler = ReduxActionHandler<\n  PlatformReducerState\n>;\n\nexport const platformInitialState: PlatformReducerState = {\n  platformIconMapping: {},\n  sourceTypeIcons: {},\n  isPlatformDataLoading: false,\n  selectedPlatform: {},\n  platforms: [],\n  platformItems: {},\n  platformInventories: {\n    data: [],\n    meta: defaultSettings\n  },\n  platformItem: {},\n  platform: {},\n  filterValue: '',\n  serviceOffering: {\n    service: {},\n    source: {}\n  }\n};\n\nconst mapPlatformIcons = (\n  platformIconMapping: StringObject,\n  platforms: Source[],\n  sourceTypeIcons: StringObject\n) =>\n  platforms.reduce<StringObject>(\n    (acc, curr) =>\n      !acc[curr.id || 'undefined']\n        ? {\n            ...acc,\n            [curr.id || 'undefined']: sourceTypeIcons[\n              curr.source_type_id || 'undefined'\n            ]\n          }\n        : acc,\n    { ...platformIconMapping }\n  );\n\nconst setLoadingState: PlatformReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isPlatformDataLoading: payload\n});\nconst setPlatforms: PlatformReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  platforms: payload,\n  platformIconMapping: mapPlatformIcons(\n    state.platformIconMapping,\n    payload,\n    state.sourceTypeIcons\n  ),\n  isPlatformDataLoading: false\n});\nconst setPlatformItems: PlatformReducerActionHandler = (\n  state,\n  { payload, meta: { platformId } = {} }\n) => ({\n  ...state,\n  platformItems: {\n    ...state.platformItems,\n    [platformId!]: payload\n  },\n  isPlatformDataLoading: false\n});\nconst setMultiplePlatformItems: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  platformItems: {\n    ...state.platformItems,\n    ...payload\n  },\n  isPlatformDataLoading: false\n});\nconst setPortfolioItems: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  portfolioItem: payload,\n  isPlatformDataLoading: false\n});\nconst selectPlatform: PlatformReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  selectedPlatform: payload,\n  isLoading: false\n});\nconst filterPlatformItems: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  filterValue: payload\n});\nconst setInventoriesDataLoadingState: PlatformReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isInventoriesDataLoading: payload\n});\nconst setPlatformInventories: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  platformInventories: payload,\n  isInventoriesDataLoading: false\n});\nconst setServiceOffering: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  serviceOffering: payload\n});\nconst setSourceTypeIcons: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  sourceTypeIcons: payload\n});\n\nexport default {\n  [`${FETCH_PLATFORMS}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORMS}_FULFILLED`]: setPlatforms,\n  [`${FETCH_PLATFORM_ITEMS}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORM_ITEMS}_FULFILLED`]: setPlatformItems,\n  [`${FETCH_PLATFORM_ITEM}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORM_ITEM}_FULFILLED`]: setPortfolioItems,\n  [`${FETCH_PLATFORM}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORM}_FULFILLED`]: selectPlatform,\n  [`${FILTER_PLATFORM_ITEMS}_FULFILLED`]: filterPlatformItems,\n  [`${FETCH_MULTIPLE_PLATFORM_ITEMS}_FULFILLED`]: setMultiplePlatformItems,\n  [SET_LOADING_STATE]: setLoadingState,\n  [`${FETCH_PLATFORM_INVENTORIES}_PENDING`]: setInventoriesDataLoadingState,\n  [`${FETCH_PLATFORM_INVENTORIES}_FULFILLED`]: setPlatformInventories,\n  [SET_INVENTORIES_LOADING_STATE]: setInventoriesDataLoadingState,\n  [`${FETCH_SERVICE_OFFERING}_FULFILLED`]: setServiceOffering,\n  [SET_SOURCETYPE_ICONS]: setSourceTypeIcons\n};\n","import {\n  FETCH_ORDER_PROCESSES,\n  SORT_ORDER_PROCESSES,\n  SET_FILTER_ORDER_PROCESSES\n} from '../action-types';\nimport {\n  ApiCollectionResponse,\n  AnyObject,\n  ReduxActionHandler\n} from '../../types/common-types';\nimport { OrderProcess } from '@redhat-cloud-services/catalog-client';\n\nexport interface OrderProcessReducerState extends AnyObject {\n  orderProcesses: ApiCollectionResponse<OrderProcess>;\n  isLoading: boolean;\n  selectedOrderProcesses: string[];\n}\n\nexport type OrderProcessReducerActionHandler = ReduxActionHandler<\n  OrderProcessReducerState\n>;\n// Initial State\nexport const orderProcessInitialState: OrderProcessReducerState = {\n  orderProcesses: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 50,\n      offset: 0\n    }\n  },\n  filterValue: '',\n  isLoading: false,\n  sortBy: {\n    index: 0,\n    property: 'name',\n    direction: 'asc'\n  },\n  selectedOrderProcesses: []\n};\n\nconst setLoadingState: OrderProcessReducerActionHandler = (state) => ({\n  ...state,\n  isLoading: true\n});\nconst setOrderProcesses: OrderProcessReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  orderProcesses: payload,\n  isLoading: false\n});\nconst setSortOrderProcesses: OrderProcessReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  sortBy: payload,\n  orderProcesses: {\n    ...state.orderProcesses,\n    meta: {\n      ...state.orderProcesses.meta,\n      offset: 0\n    }\n  }\n});\nconst setFilterValue: OrderProcessReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  filterValue: payload,\n  orderProcesses: {\n    ...state.orderProcesses,\n    meta: {\n      ...state.orderProcesses.meta,\n      offset: 0\n    }\n  }\n});\n\nexport default {\n  [`${FETCH_ORDER_PROCESSES}_PENDING`]: setLoadingState,\n  [`${FETCH_ORDER_PROCESSES}_FULFILLED`]: setOrderProcesses,\n  [SORT_ORDER_PROCESSES]: setSortOrderProcesses,\n  [SET_FILTER_ORDER_PROCESSES]: setFilterValue\n};\n","import {\n  FETCH_PORTFOLIO,\n  FETCH_PORTFOLIOS,\n  FETCH_PORTFOLIO_ITEMS,\n  FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO,\n  FETCH_PORTFOLIO_ITEM,\n  FILTER_PORTFOLIO_ITEMS,\n  SELECT_PORTFOLIO_ITEM,\n  UPDATE_PORTFOLIO,\n  SET_LOADING_STATE,\n  REMOVE_PORTFOLIO_ITEMS,\n  RESET_SELECTED_PORTFOLIO,\n  ADD_TEMPORARY_PORTFOLIO,\n  UPDATE_TEMPORARY_PORTFOLIO,\n  DELETE_TEMPORARY_PORTFOLIO,\n  RESTORE_PORTFOLIO_PREV_STATE,\n  SET_PORTFOLIO_ITEMS,\n  UPDATE_TEMPORARY_PORTFOLIO_ITEM,\n  UPDATE_PORTFOLIO_ITEM,\n  RESTORE_PORTFOLIO_ITEM_PREV_STATE\n} from '../action-types';\nimport {\n  ApiCollectionResponse,\n  AnyObject,\n  ReduxActionHandler\n} from '../../types/common-types';\nimport {\n  PortfolioItem,\n  Portfolio\n} from '@redhat-cloud-services/catalog-client';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport interface PortfolioItemStateObject {\n  portfolioItem: PortfolioItem;\n}\nexport interface PortfolioReducerState extends AnyObject {\n  portfolioItems: ApiCollectionResponse<PortfolioItem>;\n  portfolioItem: PortfolioItemStateObject;\n  portfolios: ApiCollectionResponse<Portfolio>;\n  selectedPortfolio: Portfolio;\n  portfolio: Portfolio;\n  filterValue: string;\n  isLoading: boolean;\n}\n\nexport type PortfolioReducerActionHandler = ReduxActionHandler<\n  PortfolioReducerState\n>;\n\nexport const portfoliosInitialState: PortfolioReducerState = {\n  portfolioItems: {\n    data: [],\n    meta: { limit: 50, offset: 0, filter: '' }\n  },\n  portfolioItem: {\n    portfolioItem: {\n      metadata: {\n        user_capabilities: {},\n        statistics: {}\n      }\n    }\n  },\n  portfolios: {\n    data: [],\n    meta: defaultSettings\n  },\n  selectedPortfolio: {\n    metadata: {\n      user_capabilities: {},\n      statistics: {}\n    }\n  },\n  portfolio: {},\n  filterValue: '',\n  isLoading: false\n};\n\nconst setLoadingState: PortfolioReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isLoading: payload\n});\nconst setPortfolios: PortfolioReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  portfolios: payload,\n  isLoading: false\n});\nconst setPortfolioItems: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  portfolioItems: payload,\n  isLoading: false\n});\nconst setPortfolioItem: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  portfolioItem: payload,\n  isLoading: false\n});\nconst selectPortfolio: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  selectedPortfolio: payload,\n  isLoading: false\n});\nconst filterPortfolios: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  filterValue: payload\n});\nconst resetSelectedPortfolio: PortfolioReducerActionHandler = (state) => ({\n  ...state,\n  selectedPortfolio: { metadata: { user_capabilities: {}, statistics: {} } },\n  portfolioItems: portfoliosInitialState.portfolioItems\n});\n\n// these are optimistic UI updates that mutate the portfolio state immediately after user action.\n// State is synchronized with API after actions are sucesfull\nconst addTemporaryPortfolio: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  prevState: { ...state },\n  ...state,\n  portfolios: {\n    ...state.portfolios,\n    data: [\n      ...state.portfolios.data,\n      { ...payload, metadata: { user_capabilities: {}, statistics: {} } }\n    ]\n  }\n});\nconst updateTemporaryPortfolio: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  prevState: { ...state },\n  ...state,\n  selectedPortfolio: {\n    metadata: {\n      ...state.selectedPortfolio.metadata,\n      user_capabilities: {\n        // the client typings define metadaas object which will result it unknow property TS error. So we have to override it\n        ...(state.selectedPortfolio.metadata as AnyObject).user_capabilities\n      }\n    },\n    ...payload\n  },\n  portfolios: {\n    ...state.portfolios,\n    data: state.portfolios.data.map((item) =>\n      item.id === payload.id\n        ? {\n            ...item,\n            ...payload\n          }\n        : item\n    )\n  }\n});\n\nconst deleteTemporaryPortfolio: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  prevState: { ...state },\n  ...state,\n  selectedPortfolio: { metadata: { user_capabilities: {}, statistics: {} } },\n  portfolios: {\n    ...state.portfolios,\n    data: state.portfolios.data.filter(({ id }) => id !== payload)\n  }\n});\n\nconst updateTemporaryPortfolioItem: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  prevState: { ...state },\n  portfolioItem: {\n    ...state.portfolioItem,\n    portfolioItem: {\n      created_at: state.portfolioItem.portfolioItem.created_at,\n      updated_at: new Date().toString(),\n      ...payload\n    }\n  },\n  portfolioItems: {\n    ...state.portfolioItems,\n    data: state.portfolioItems.data.map((item) =>\n      item.id === payload.id\n        ? { created_at: item.created_at, ...payload }\n        : item\n    )\n  }\n});\n\nconst updatePortfolioItem: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  portfolioItem: {\n    ...state.portfolioItem,\n    portfolioItem: payload\n  },\n  portfolioItems: {\n    ...state.portfolioItems,\n    data: state.portfolioItems.data.map((item) =>\n      item.id === payload.id ? { ...payload } : item\n    )\n  }\n});\n\nconst restorePrevState: PortfolioReducerActionHandler = (state) =>\n  state.prevState ? { ...state.prevState } : { ...state };\n\nexport default {\n  [`${FETCH_PORTFOLIOS}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIOS}_FULFILLED`]: setPortfolios,\n  [`${FETCH_PORTFOLIO_ITEMS}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO_ITEMS}_FULFILLED`]: setPortfolioItems,\n  [`${FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO}_FULFILLED`]: setPortfolioItems,\n  [`${FETCH_PORTFOLIO_ITEM}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO_ITEM}_FULFILLED`]: setPortfolioItem,\n  [`${FETCH_PORTFOLIO}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO}_FULFILLED`]: selectPortfolio,\n  [FILTER_PORTFOLIO_ITEMS]: filterPortfolios,\n  [`${SELECT_PORTFOLIO_ITEM}_FULFILLED`]: setPortfolioItem,\n  [SELECT_PORTFOLIO_ITEM]: setPortfolioItem,\n  [`${UPDATE_PORTFOLIO}_FULFILLED`]: selectPortfolio,\n  [SET_LOADING_STATE]: setLoadingState,\n  [`${REMOVE_PORTFOLIO_ITEMS}_PENDING`]: setLoadingState,\n  [RESET_SELECTED_PORTFOLIO]: resetSelectedPortfolio,\n  [ADD_TEMPORARY_PORTFOLIO]: addTemporaryPortfolio,\n  [UPDATE_TEMPORARY_PORTFOLIO]: updateTemporaryPortfolio,\n  [DELETE_TEMPORARY_PORTFOLIO]: deleteTemporaryPortfolio,\n  [RESTORE_PORTFOLIO_PREV_STATE]: restorePrevState,\n  [SET_PORTFOLIO_ITEMS]: setPortfolioItems,\n  [UPDATE_TEMPORARY_PORTFOLIO_ITEM]: updateTemporaryPortfolioItem,\n  [RESTORE_PORTFOLIO_ITEM_PREV_STATE]: restorePrevState,\n  [UPDATE_PORTFOLIO_ITEM]: updatePortfolioItem\n};\n","import { Workflow } from '@redhat-cloud-services/approval-client';\nimport { SET_LOADING_STATE } from '../action-types';\nimport { ASYNC_ACTIONS } from '../action-types/approval-action-types';\nimport { AnyObject, ReduxActionHandler } from '../../types/common-types';\n\nexport interface ApprovalReducerState extends AnyObject {\n  isFetching: boolean;\n  isResolving: boolean;\n  workflows: Workflow[];\n  resolvedWorkflows: Workflow[];\n}\n\nexport type ApprovalReducerActionHandler = ReduxActionHandler<\n  ApprovalReducerState\n>;\n\nexport const approvalInitialState: ApprovalReducerState = {\n  isFetching: false,\n  isResolving: false,\n  workflows: [],\n  resolvedWorkflows: []\n};\n\nconst setLoadingState: ApprovalReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isFetching: payload\n});\nconst setWorkflows: ApprovalReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  isFetching: false,\n  workflows: payload\n});\nconst setResolvingState: ApprovalReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isResolving: payload\n});\nconst setResolvedWorkflows: ApprovalReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  isResolving: false,\n  resolvedWorkflows: payload\n});\n\nexport default {\n  [ASYNC_ACTIONS.FETCH_WORKFLOWS_PENDING]: setLoadingState,\n  [ASYNC_ACTIONS.FETCH_WORKFLOWS_FULFILLED]: setWorkflows,\n  [ASYNC_ACTIONS.RESOLVE_WORKFLOWS_PENDING]: setResolvingState,\n  [ASYNC_ACTIONS.RESOLVE_WORKFLOWS_FULFILLED]: setResolvedWorkflows,\n  [SET_LOADING_STATE]: setLoadingState\n};\n","import { FETCH_RBAC_GROUPS, SET_LOADING_STATE } from '../action-types';\nimport { Group } from '@redhat-cloud-services/rbac-client';\nimport { AnyObject, ReduxActionHandler } from '../../types/common-types';\n\nexport interface RbacReducerState extends AnyObject {\n  rbacGroups: Group[];\n  isLoading: boolean;\n}\n\nexport type RbacReducerActionHandler = ReduxActionHandler<RbacReducerState>;\nexport const rbacInitialState: RbacReducerState = {\n  rbacGroups: [],\n  isLoading: false\n};\n\nconst setLoadingState: RbacReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isLoading: payload\n});\nconst setRbacGroups: RbacReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  rbacGroups: payload,\n  isLoading: false\n});\n\nexport default {\n  [`${FETCH_RBAC_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_RBAC_GROUPS}_FULFILLED`]: setRbacGroups,\n  [SET_LOADING_STATE]: setLoadingState\n};\n","import { ShareInfo } from '@redhat-cloud-services/catalog-client';\nimport { QUERY_PORTFOLIO, SET_LOADING_STATE } from '../action-types';\nimport { ReduxActionHandler } from '../../types/common-types';\n\nexport interface ShareReducerState {\n  shareInfo: ShareInfo[];\n  isLoading: boolean;\n}\n\nexport type ShareReducerActionHandler = ReduxActionHandler<ShareReducerState>;\nexport const shareInfoInitialState: ShareReducerState = {\n  shareInfo: [],\n  isLoading: false\n};\n\nconst setLoadingState: ShareReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isLoading: payload\n});\nconst setShareInfo: ShareReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  shareInfo: payload,\n  isLoading: false\n});\n\nexport default {\n  [`${QUERY_PORTFOLIO}_PENDING`]: setLoadingState,\n  [`${QUERY_PORTFOLIO}_FULFILLED`]: setShareInfo,\n  [SET_LOADING_STATE]: setLoadingState\n};\n","import { SET_OPENAPI_SCHEMA } from '../action-types';\nimport { AnyObject, ReduxActionHandler } from '../../types/common-types';\n\nexport interface OpenApiReducerState extends AnyObject {\n  schema?: AnyObject;\n}\nexport type OpenApiReducerActionHandler = ReduxActionHandler<\n  OpenApiReducerState\n>;\n\nexport const openApiInitialState: OpenApiReducerState = {\n  schema: undefined\n};\nconst setSchema: OpenApiReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  schema: payload\n});\n\nexport default {\n  [SET_OPENAPI_SCHEMA]: setSchema\n};\n","import { SET_LOADING_STATE } from '../redux/action-types';\nimport { Dispatch } from 'redux';\nimport { ReduxAction } from '../types/common-types';\n\nconst loadingStateMiddleware = () => (dispatch: Dispatch) => (\n  action: ReduxAction\n): ReduxAction => {\n  if (action.type.match(/_REJECTED$/)) {\n    dispatch({ type: SET_LOADING_STATE, payload: false });\n  }\n\n  return dispatch(action);\n};\n\nexport default loadingStateMiddleware;\n","import { Dispatch } from 'redux';\nimport { ReduxAction } from '../types/common-types';\n\nconst emptyDataMiddleware = () => (dispatch: Dispatch) => (\n  action: ReduxAction\n): ReduxAction => {\n  const nextAction = { ...action };\n  if (\n    action.type.match(/_FULFILLED$/) &&\n    action.payload &&\n    action.meta &&\n    action.payload.data &&\n    action.payload.meta\n  ) {\n    const noFilter = Object.prototype.hasOwnProperty.call(\n      nextAction.meta,\n      'filters'\n    )\n      ? Object.values(nextAction.meta?.filters || {}).every(\n          (value?: string) => typeof value === 'undefined' || value.length === 0\n        )\n      : nextAction.meta?.filter?.length === 0;\n\n    nextAction.payload.meta.noData =\n      nextAction.payload.meta.count === 0 && noFilter;\n    return dispatch(nextAction);\n  }\n\n  return dispatch(nextAction);\n};\n\nexport default emptyDataMiddleware;\n","import { ReactNode } from 'react';\nimport { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport {\n  AnyObject,\n  ReduxActionHandler,\n  StringObject\n} from '../../types/common-types';\n\nexport interface BreadcrumbFragment {\n  pathname: string;\n  searchParams?: StringObject;\n  title?: ReactNode;\n}\nexport interface BreadcrumbsReducerState extends AnyObject {\n  fragments: BreadcrumbFragment[];\n}\n\nexport type BreadcrumbsReducerActionHandler = ReduxActionHandler<\n  BreadcrumbsReducerState\n>;\n\nexport const initialBreadcrumbsState: BreadcrumbsReducerState = {\n  fragments: []\n};\n\nconst initialize: BreadcrumbsReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  fragments: payload\n});\n\nexport default {\n  [INITIALIZE_BREADCRUMBS]: initialize\n};\n","import { IntlShape, MessageDescriptor } from 'react-intl';\nimport { INITIALIZE_I18N } from '../action-types';\nimport { AnyObject, ReduxActionHandler } from '../../types/common-types';\nimport { ReactNode } from 'react';\n\nexport type I18nReducerState = Partial<IntlShape> & AnyObject;\nexport type I18nReducerActionHandler = ReduxActionHandler<I18nReducerState>;\nexport type I18nFormatMessage = (\n  descriptor: MessageDescriptor,\n  values?: AnyObject\n) => ReactNode;\n\nexport const i18nInitialState: I18nReducerState = {\n  formatMessage: ({ defaultMessage = '' }) => defaultMessage\n};\nconst initialize: I18nReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  ...payload\n});\n\nexport default {\n  [INITIALIZE_I18N]: initialize\n};\n","import { encodeState } from '../routing/uri-state-manager';\nimport catalogHistory from '../routing/catalog-history';\nimport { Dispatch } from 'redux';\nimport { ReduxAction } from '../types/common-types';\n\nconst viewStateMiddleware = () => (dispatch: Dispatch) => (\n  action: ReduxAction\n): ReduxAction => {\n  if (\n    action.type.match(/_FULFILLED$/) &&\n    action?.payload?.meta &&\n    action?.meta?.storeState\n  ) {\n    const hash = encodeState(\n      {\n        ...action.meta,\n        ...action.payload.meta\n      },\n      action.meta.stateKey\n    );\n    /**\n     * Use replace event in case that app did not compute the viewState hash yet (eg. navigating in main menu).\n     * Use history replace event to prevent the multiple prev routes with the same pathname on stack witouth the hash param.\n     * The browser goBack method will now skip the non hash route.\n     * Users wont have to trigger the goBack action multiple times to get to the actual previous view.\n     */\n    const routingAction =\n      catalogHistory.location.hash && catalogHistory.location.hash !== hash\n        ? catalogHistory.push\n        : catalogHistory.replace;\n    routingAction({\n      pathname: catalogHistory.location.pathname,\n      search: catalogHistory.location.search,\n      hash\n    });\n  }\n\n  return dispatch(action);\n};\n\nexport default viewStateMiddleware;\n","import catalogHistory from '../routing/catalog-history';\nimport { Dispatch } from 'redux';\nimport { ReduxAction } from '../types/common-types';\n\nconst unAuthorizedMiddleware = () => (dispatch: Dispatch) => (\n  action: ReduxAction\n): ReduxAction | void => {\n  const nextAction = { ...action };\n  if (action.type.match(/_REJECTED$/) && action?.payload?.redirect) {\n    setTimeout(() => {\n      catalogHistory.push(action.payload.redirect.pathname, {\n        from: catalogHistory.location\n      });\n    });\n    return;\n  }\n\n  return dispatch(nextAction);\n};\n\nexport default unAuthorizedMiddleware;\n","import promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, {\n  applyReducerHash\n} from '@redhat-cloud-services/frontend-components-utilities/files/cjs/ReducerRegistry';\nimport notifications from '@redhat-cloud-services/frontend-components-notifications/cjs/notifications';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/cjs/notificationsMiddleware';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport orderReducer, {\n  orderInitialState\n} from '../redux/reducers/order-reducer';\nimport platformReducer, {\n  platformInitialState\n} from '../redux/reducers/platform-reducer';\nimport orderProcessReducer, {\n  orderProcessInitialState\n} from '../redux/reducers/order-process-reducer';\nimport portfolioReducer, {\n  portfoliosInitialState\n} from '../redux/reducers/portfolio-reducer';\nimport approvalReducer, {\n  approvalInitialState\n} from '../redux/reducers/approval-reducer';\nimport rbacReducer, { rbacInitialState } from '../redux/reducers/rbac-reducer';\nimport shareReducer, {\n  shareInfoInitialState\n} from '../redux/reducers/share-reducer';\nimport openApiReducer, {\n  openApiInitialState\n} from '../redux/reducers/open-api-reducer';\nimport loadingStateMiddleware from './loading-state-middleware';\nimport emptyDataMiddleware from './empty-data-middleware';\nimport breadcrumbsReducer, {\n  initialBreadcrumbsState\n} from '../redux/reducers/breadcrumbs-reducer';\nimport i18nReducer, { i18nInitialState } from '../redux/reducers/i18n-reducer';\nimport viewStateMiddleware from './view-state-middleware';\nimport unAuthorizedMiddleware from './unauthorized-middleware';\nimport { Store } from 'redux';\n\nconst prodMiddlewares = [\n  notificationsMiddleware({\n    errorTitleKey: ['errors', 'message', 'statusText'],\n    errorDescriptionKey: [\n      'data.errors[0].detail',\n      'data.errors',\n      'data.error',\n      'data.message',\n      'response.body.errors',\n      'data',\n      'errorMessage',\n      'stack'\n    ]\n  })\n];\n\nconst baseMiddlewares = [\n  thunk,\n  promiseMiddleware,\n  unAuthorizedMiddleware,\n  viewStateMiddleware,\n  loadingStateMiddleware,\n  emptyDataMiddleware\n];\nconst registerReducers = (registry: ReducerRegistry): void => {\n  registry.register({\n    orderReducer: applyReducerHash(orderReducer, orderInitialState),\n    platformReducer: applyReducerHash(platformReducer, platformInitialState),\n    orderProcessReducer: applyReducerHash(\n      orderProcessReducer,\n      orderProcessInitialState\n    ),\n    portfolioReducer: applyReducerHash(\n      portfolioReducer,\n      portfoliosInitialState\n    ),\n    approvalReducer: applyReducerHash(approvalReducer, approvalInitialState),\n    rbacReducer: applyReducerHash(rbacReducer, rbacInitialState),\n    shareReducer: applyReducerHash(shareReducer, shareInfoInitialState),\n    openApiReducer: applyReducerHash(openApiReducer, openApiInitialState),\n    breadcrumbsReducer: applyReducerHash(\n      breadcrumbsReducer,\n      initialBreadcrumbsState\n    ),\n    i18nReducer: applyReducerHash(i18nReducer, i18nInitialState),\n    notifications\n  });\n};\n\nexport default (isProd = false): Store => {\n  const registry = new ReducerRegistry({}, [\n    ...baseMiddlewares,\n    ...prodMiddlewares,\n    ...(isProd ? [] : [reduxLogger])\n  ]);\n  registerReducers(registry);\n  return registry.getStore() as Store;\n};\n\nexport const testStore = (): Store => {\n  const registry = new ReducerRegistry({}, [...baseMiddlewares]);\n  registerReducers(registry);\n  return registry.getStore() as Store;\n};\n","import React, { lazy, useEffect } from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport {\n  ADD_PORTFOLIO_ROUTE,\n  EDIT_PORTFOLIO_ROUTE,\n  PORTFOLIOS_ROUTE,\n  NESTED_EDIT_PORTFOLIO_ROUTE,\n  PORTFOLIO_ROUTE,\n  REMOVE_PORTFOLIO_ROUTE,\n  NESTED_REMOVE_PORTFOLIO_ROUTE,\n  SHARE_PORTFOLIO_ROUTE,\n  NESTED_SHARE_PORTFOLIO_ROUTE,\n  WORKFLOW_PORTFOLIO_ROUTE,\n  NESTED_WORKFLOW_PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  NESTED_EDIT_ORDER_PROCESS_ROUTE,\n  EDIT_ORDER_PROCESS_ROUTE\n} from '../../constants/routes';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport CatalogRoute from '../../routing/catalog-route';\nimport useQuery from '../../utilities/use-query';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { PORTFOLIO_RESOURCE_TYPE } from '../../utilities/constants';\nimport {\n  setOrFetchPortfolio,\n  resetSelectedPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport SetOrderProcessModal from '../order-process/set-order-process-modal';\n\nconst CopyPortfolioItemModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"copy-portfolio-item-modal\" */ '../portfolio/portfolio-item-detail/copy-portfolio-item-modal'\n  )\n);\n\nconst OrderModal = lazy(() =>\n  import(/* webpackChunkName: \"order-modal\" */ '../common/order-modal')\n);\n\nconst EditApprovalWorkflow = lazy(() =>\n  import(\n    /* webpackChunkName: \"edit-approval-workflow\" */ '../common/edit-approval-workflow'\n  )\n);\nconst SharePortfolioModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"share-portfolio\" */ '../portfolio/share-portfolio-modal'\n  )\n);\n\nconst RemovePortfolioModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"remove-portfolio\" */ '../portfolio/remove-portfolio-modal'\n  )\n);\n\nconst AddPortfolioModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"add-portfolio\" */ '../portfolio/add-portfolio-modal'\n  )\n);\n\nconst PortfolioRoutes = () => {\n  const viewState = useInitialUriHash();\n  const { pathname } = useLocation();\n\n  const portfolioItemId = useSelector(\n    (state) => state?.portfolioReducer?.portfolioItem?.portfolioItem?.id\n  );\n  const portfolioItemUserCapabilities = useSelector(\n    (state) =>\n      state?.portfolioReducer?.portfolioItem?.portfolioItem?.metadata\n        ?.user_capabilities,\n    shallowEqual\n  );\n  const portfolios = useSelector(\n    (state) => state?.portfolioReducer?.portfolios,\n    shallowEqual\n  );\n  const selectedPortfolio = useSelector(\n    (state) => state?.portfolioReducer?.selectedPortfolio,\n    shallowEqual\n  );\n\n  const { portfolioUserCapabilities, itemName } = useSelector((state) => ({\n    portfolioUserCapabilities:\n      state?.portfolioReducer?.selectedPortfolio?.metadata?.user_capabilities,\n    itemName: () => state?.portfolioReducer?.selectedPortfolio?.name\n  }));\n  const [{ portfolio: id }, search] = useQuery(['portfolio']);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (id && (!selectedPortfolio.id || id !== selectedPortfolio.id)) {\n      dispatch(setOrFetchPortfolio(id, portfolios));\n    }\n  }, [id]);\n\n  return (\n    <div>\n      <Switch>\n        <Route path={[ADD_PORTFOLIO_ROUTE, EDIT_PORTFOLIO_ROUTE]}>\n          <AddPortfolioModal\n            removeQuery\n            viewState={viewState?.portfolio}\n            closeTarget={PORTFOLIOS_ROUTE}\n          />\n        </Route>\n        <CatalogRoute\n          userCapabilities={portfolioUserCapabilities}\n          requiredCapabilities=\"update\"\n          exact\n          path={NESTED_EDIT_PORTFOLIO_ROUTE}\n        >\n          <AddPortfolioModal\n            closeTarget={{ pathname: PORTFOLIO_ROUTE, search }}\n          />\n        </CatalogRoute>\n        <Route path={REMOVE_PORTFOLIO_ROUTE}>\n          <RemovePortfolioModal viewState={viewState?.portfolio} />\n        </Route>\n        <CatalogRoute\n          userCapabilities={portfolioUserCapabilities}\n          requiredCapabilities=\"destroy\"\n          exact\n          path={NESTED_REMOVE_PORTFOLIO_ROUTE}\n        >\n          <RemovePortfolioModal />\n        </CatalogRoute>\n        <Route exact path={SHARE_PORTFOLIO_ROUTE}>\n          <SharePortfolioModal\n            closeUrl={PORTFOLIOS_ROUTE}\n            querySelector=\"portfolio\"\n            removeSearch\n            viewState={viewState?.portfolio}\n            portfolioName={itemName}\n          />\n        </Route>\n        <Route exact path={NESTED_SHARE_PORTFOLIO_ROUTE}>\n          <SharePortfolioModal\n            closeUrl={PORTFOLIO_ROUTE}\n            portfolioName={itemName}\n          />\n        </Route>\n        <Route exact path={WORKFLOW_PORTFOLIO_ROUTE}>\n          <EditApprovalWorkflow\n            pushParam={{ pathname: PORTFOLIOS_ROUTE }}\n            objectType={PORTFOLIO_RESOURCE_TYPE}\n            objectName={itemName}\n            querySelector=\"portfolio\"\n            removeSearch\n            keepHash\n            onClose={() => dispatch(resetSelectedPortfolio())}\n          />\n        </Route>\n        <Route exact path={NESTED_WORKFLOW_PORTFOLIO_ROUTE}>\n          <EditApprovalWorkflow\n            querySelector=\"portfolio\"\n            pushParam={{ pathname: PORTFOLIO_ROUTE, search }}\n            closeUrl={PORTFOLIO_ROUTE}\n            objectType={PORTFOLIO_RESOURCE_TYPE}\n            objectName={itemName}\n          />\n        </Route>\n        <Route exact path={`${PORTFOLIO_ITEM_ROUTE}/order`}>\n          <OrderModal closeUrl={PORTFOLIO_ITEM_ROUTE} />\n        </Route>\n        <Route\n          exact\n          path={[EDIT_ORDER_PROCESS_ROUTE, NESTED_EDIT_ORDER_PROCESS_ROUTE]}\n        >\n          <SetOrderProcessModal\n            querySelector=\"portfolio\"\n            objectType={PORTFOLIO_RESOURCE_TYPE}\n            objectName={itemName}\n            pushParam={{\n              pathname:\n                pathname === EDIT_ORDER_PROCESS_ROUTE\n                  ? PORTFOLIOS_ROUTE\n                  : PORTFOLIO_ROUTE,\n              search:\n                pathname === NESTED_EDIT_ORDER_PROCESS_ROUTE\n                  ? search\n                  : undefined\n            }}\n          />\n        </Route>\n\n        <CatalogRoute\n          path={`${PORTFOLIO_ITEM_ROUTE}/copy`}\n          requiredCapabilities=\"copy\"\n          userCapabilities={portfolioItemUserCapabilities}\n        >\n          {portfolioItemId && (\n            <CopyPortfolioItemModal\n              portfolioName={itemName()}\n              search={search}\n              portfolioItemId={portfolioItemId}\n              portfolioId={id}\n              closeUrl={PORTFOLIO_ITEM_ROUTE}\n            />\n          )}\n        </CatalogRoute>\n      </Switch>\n    </div>\n  );\n};\n\nexport default PortfolioRoutes;\n","import React, { lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { INVENTORY_RESOURCE_TYPE } from '../../utilities/constants';\nimport useQuery from '../../utilities/use-query';\nimport { useSelector } from 'react-redux';\n\nconst EditApprovalWorkflow = lazy(() =>\n  import(\n    /* webpackChunkName: \"edit-approval-workflow\" */ '../common/edit-approval-workflow'\n  )\n);\n\nconst PlatformRoutes = () => {\n  const [{ platform: id }] = useQuery(['platform']);\n  const { objectName } = useSelector((state) => {\n    const data = state?.platformReducer?.platformInventories?.data;\n    return {\n      objectName: data ? data.find((obj) => obj.id === id)?.name : 'inventory'\n    };\n  });\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/platform/platform-inventories/edit-workflow\">\n          <EditApprovalWorkflow\n            pushParam={{\n              pathname: '/platform/platform-inventories',\n              search: `?platform=${id}`\n            }}\n            objectType={INVENTORY_RESOURCE_TYPE}\n            objectName={objectName}\n            querySelector=\"inventory\"\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default PlatformRoutes;\n","import React, { Suspense } from 'react';\nimport PortfolioRoutes from './portfolio-routes';\nimport PlatformRoutes from './platform-routes';\n\nconst DialogRoutes = () => (\n  <Suspense fallback={<div></div>}>\n    <PortfolioRoutes />\n    <PlatformRoutes />\n  </Suspense>\n);\n\nexport default DialogRoutes;\n","import { Route, Switch, Redirect, useLocation } from 'react-router-dom';\nimport React, { lazy, Suspense } from 'react';\nimport some from 'lodash/some';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  ORDER_ROUTE\n} from './constants/routes';\nimport CatalogRoute from './routing/catalog-route';\nimport DialogRoutes from './smart-components/dialog-routes';\nconst CommonApiError = lazy(() =>\n  import(\n    /* webpackChunkName: \"error-page\" */ './smart-components/error-pages/common-api-error'\n  )\n);\n\nconst Products = lazy(() =>\n  import(\n    /* webpackChunkName: \"products\" */ './smart-components/products/products'\n  )\n);\nconst Platforms = lazy(() =>\n  import(\n    /* webpackChunkName: \"platforms\" */ './smart-components/platform/platforms'\n  )\n);\nconst Platform = lazy(() =>\n  import(\n    /* webpackChunkName: \"platform\" */ './smart-components/platform/platform'\n  )\n);\nconst Portfolios = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolios\" */ './smart-components/portfolio/portfolios'\n  )\n);\nconst Portfolio = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolio\" */ './smart-components/portfolio/portfolio'\n  )\n);\nconst Orders = lazy(() =>\n  import(/* webpackChunkName: \"orders\" */ './smart-components/order/orders')\n);\nconst OrderDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"order-detail\" */ './smart-components/order/order-detail/order-detail'\n  )\n);\nconst OrderProcesses = lazy(() =>\n  import(\n    /* webpackChunkName: \"order-processes\" */ './smart-components/order-process/order-processes'\n  )\n);\n\nconst paths = {\n  products: '/products',\n  platforms: '/platforms',\n  order_processes: '/order-processes',\n  platform: '/platform',\n  portfolios: PORTFOLIOS_ROUTE,\n  portfolio: PORTFOLIO_ROUTE,\n  orders: '/orders',\n  order: ORDER_ROUTE\n};\n\nconst errorPaths = ['/400', '/401', '/403', '/404'];\n\nexport const Routes = () => {\n  const { pathname } = useLocation();\n  return (\n    <Suspense fallback={<AppPlaceholder />}>\n      <Switch>\n        <CatalogRoute path={paths.products} component={Products} />\n        <CatalogRoute path={paths.portfolios} component={Portfolios} />\n        <CatalogRoute path={paths.portfolio} component={Portfolio} />\n        <CatalogRoute\n          permissions={['catalog:portfolios:create']}\n          path={paths.platforms}\n          component={Platforms}\n        />\n        <CatalogRoute\n          permissions={['catalog:portfolios:create']}\n          path={paths.platform}\n          component={Platform}\n        />\n        <CatalogRoute path={paths.order_processes} component={OrderProcesses} />\n        <CatalogRoute path={paths.orders} component={Orders} />\n        <CatalogRoute path={paths.order} component={OrderDetail} />\n        <Route path={errorPaths} component={CommonApiError} />\n        <Route\n          render={() =>\n            some(paths, (p) => p === pathname) ? null : (\n              <Redirect to={paths.portfolios} />\n            )\n          }\n        />\n      </Switch>\n      {/*\n       * We require the empty DIV around the dialog routes to avoid testing issues\n       * It does not have any visual effect on the application\n       * Emzyme simply cannot handle direct descendant of Suspense to be another Suspense\n       */}\n      <div>\n        <DialogRoutes />\n      </div>\n    </Suspense>\n  );\n};\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/cjs/NotificationPortal';\n\nimport { Routes } from './Routes';\nimport { MIN_SCREEN_HEIGHT } from './constants/ui-constants';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport {\n  SET_OPENAPI_SCHEMA,\n  SET_SOURCETYPE_ICONS,\n  INITIALIZE_I18N\n} from './redux/action-types';\n\nimport 'whatwg-fetch';\nimport smoothscroll from 'smoothscroll-polyfill';\n\n// react-int eng locale data\nimport { useIntl } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport { getAxiosInstance } from './helpers/shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from './utilities/constants';\nimport UserContext from './user-context';\n\nsmoothscroll.polyfill();\n\n/**\n * has to be in global context because nav listener is not a part of component lifecycle\n */\nlet ignoreRedirect = true;\n\nconst App = () => {\n  const [auth, setAuth] = useState(false);\n  const [userPermissions, setUserPermissions] = useState();\n  const [userIdentity, setUserIdentity] = useState({ identity: {} });\n  const [openApiSchema, setOpenApiSchema] = useState();\n  const dispatch = useDispatch();\n  const i18l = useIntl();\n  const history = useHistory();\n  let unregister;\n\n  useEffect(() => {\n    insights.chrome.init();\n    dispatch({ type: INITIALIZE_I18N, payload: i18l });\n    Promise.all([\n      getAxiosInstance()\n        .get(`${CATALOG_API_BASE}/openapi.json`)\n        .then((payload) => {\n          setOpenApiSchema(payload);\n          dispatch({ type: SET_OPENAPI_SCHEMA, payload });\n        }),\n      getAxiosInstance()\n        .get(`${SOURCES_API_BASE}/source_types`)\n        .then(({ data }) =>\n          dispatch({\n            type: SET_SOURCETYPE_ICONS,\n            payload: data.reduce(\n              (acc, curr) => ({\n                ...acc,\n                [curr.id]: curr.icon_url\n              }),\n              {}\n            )\n          })\n        ),\n      insights.chrome.auth.getUser().then((user) => {\n        setUserIdentity(user);\n        return insights.chrome\n          .getUserPermissions()\n          .then((data) => setUserPermissions(data));\n      })\n    ]).then(() => setAuth(true));\n\n    insights.chrome.identifyApp('catalog');\n    unregister = insights.chrome.on('APP_NAVIGATION', (event) => {\n      /**\n       * Handle navigation from insights main nav\n       * Uses React history directly instead of browser history to avoid template realod.\n       * only redirect after first application mount\n       */\n      if (!ignoreRedirect && event.domEvent) {\n        history.push(`/${event.navId}`);\n      }\n\n      ignoreRedirect = false;\n    });\n\n    return () => unregister();\n  }, []);\n\n  if (!auth) {\n    return <AppPlaceholder />;\n  }\n\n  return (\n    <UserContext.Provider\n      value={{ permissions: userPermissions, userIdentity, openApiSchema }}\n    >\n      <Fragment>\n        <NotificationsPortal />\n        <section className=\"pf-u-p-0 pf-u-ml-0 pf-l-page__main-section pf-c-page__main-section\">\n          <Grid style={{ minHeight: MIN_SCREEN_HEIGHT }}>\n            <GridItem sm={12} className=\"content-layout\">\n              <Routes />\n            </GridItem>\n          </Grid>\n        </section>\n      </Fragment>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n","export const MIN_SCREEN_HEIGHT = 'calc(100vh - 76px)';\n","import { createGlobalStyle } from 'styled-components';\n\n/**\n * Use direct css imports for FCE components\n * This will save some bundle size\n */\nimport '@redhat-cloud-services/frontend-components/components/ConditionalFilter.css';\nimport '@redhat-cloud-services/frontend-components/components/EmptyTable.css';\nimport '@redhat-cloud-services/frontend-components/components/PrimaryToolbar.css';\nimport '@redhat-cloud-services/frontend-components/components/Section.css';\nimport '@redhat-cloud-services/frontend-components/components/TableToolbar.css';\n\nconst GlobalStyle = createGlobalStyle`\n.disabled-link {\n  pointer-events: none\n}\n\n.font-14{\n  font-size: 14px;\n  color: var(--pf-global--Color--100);\n  font-weight: bold;\n  margin-bottom: 2px !important;\n}\n\n.flex-no-wrap {\n  flex-wrap: nowrap !important;\n  .flex-item-no-wrap {\n    align-self: flex-start;\n    white-space: nowrap;\n  }\n  .pf-c-form__actions {\n    flex-wrap: nowrap !important;\n  }\n}\n\n.orders-list {\n  background-color: var(--pf-global--BackgroundColor--100)\n}\n\n.share-column {\n  .pf-c-select_toggle-wrapper {\n    max-width: calc(100% - 70px);\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n}\n\n/**\n* Update DDF select styles for select component\n*/\n.ddorg__pf4-component-mapper__select-toggle.pf-c-select__toggle.pf-m-typeahead {\n  padding-top: 1px;\n  padding-bottom: 1px;\n}\n.ddorg__pf4-component-mapper__select-toggle {\n  min-height: 34px;\n}\n\n.filter-select {\n  width: 300px;\n  .pf-c-select__menu {\n    max-width: 100%\n  }\n  .pf-c-select__menu-item {\n    white-space: break-spaces;\n  }\n  .pf-c-select_toggle-wrapper {\n    max-width: calc(100% - 32px);\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n}\n\n//pf-4 fixes\n/**\n* non working pf display modifier: https://www.patternfly.org/v4/documentation/core/utilities/display#display-block\n*/\n.pf-m-grow {\n  flex-grow: 1;\n}\n\n.pf-c-breadcrumb__list, .overflow-wrap {\n  @supports not (overflow-wrap: anywhere) {\n    word-break: break-all;\n  }\n  @supports (overflow-wrap: anywhere) {\n    overflow-wrap: anywhere;\n  }\n}\n\na.pf-c-breadcrumb__item {\n  cursor: pointer;\n  >* {\n    cursor: pointer;\n  }\n}\n\n.pf4-hidefield-overlay{\n  .hide-indicator {\n    z-index: 1;\n  }\n  &::before {\n    z-index: 1;\n  }\n}\n/**\n * table vertical align defaults to baseline\n */\n.pf-c-table.orders-table tbody > tr > *{\n  vertical-align: inherit;\n}\n/**\n* End of PF4 fixes\n*/\n\n.icon-danger-fill {\n  fill: var(--pf-global--danger-color--100)\n}\n\n.pf-u-gg-md {\n  grid-gap: 16px !important;\n  gap: 16px;\n}\n\n.bottom-pagination-container {\n  width: 100%\n}\n\n.global-primary-background {\n  background-color: var(--pf-global--BackgroundColor--100)\n}\n\n.full-height {\n  min-height: 100%;\n}\n\n.content-layout {\n  display: flex;\n  flex-direction: column;\n}\n\n.pf-l-flex.align-items-center {\n  align-items: center;\n}\n\n/**\n * frontend components override\n */\n:root {\n  --ins-color--orange: #ec7a08;\n}\n\nbutton:focus {\n  outline: none;\n}\n\nsection.ins-l-content {\n  padding: var(--pf-global--spacer--lg); \n}\n\nsection.ins-l-button-group {\n  margin: 24px 0px;\n  margin: 1.5rem 0rem; \n}\n\nsection.ins-l-button-group > * {\n  display: inline; \n}\n\nsection.ins-l-button-group * + * {\n  margin-left: 5px;\n  margin-left: 0.3125rem; \n}\n\nsection.ins-l-icon-group * + * {\n  margin-left: 10px; \n}\n\nsection.ins-l-icon-group__with-major * + * {\n  margin-left: 7.5px; \n}\n\nsection.ins-l-icon-group__with-major .ins-battery:last-of-type {\n  padding-left: 15px;\n  border-left: 2px solid #eaeaea; \n}\n\nsection.ins-l-icon-group__with-major .ins-battery:last-of-type span.label {\n  font-weight: 500;\n  margin: 0 10px; \n}\n\n.ins-c-primary-toolbar__pagination {\n  margin-left: auto;\n}\n\n.ins-c-primary-toolbar .ins-c-primary-toolbar__group-filter {\n  margin-right: 7px;\n}\n\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { Router as ReactRouter } from 'react-router-dom';\nimport App from './App';\nimport AppContext from './app-context';\nimport GlobalStyle from './global-styles';\nimport catalogHistory, { release } from './routing/catalog-history';\n\nconst Router = () => (\n  <AppContext.Provider value={{ release }}>\n    <GlobalStyle />\n    <ReactRouter history={catalogHistory}>\n      <App />\n    </ReactRouter>\n  </AppContext.Provider>\n);\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './utilities/store';\nimport Router from './router';\nimport { IntlProvider } from 'react-intl';\n\nReactDOM.render(\n  <Provider store={store(true)}>\n    <IntlProvider locale=\"en\">\n      <Router />\n    </IntlProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n/**\n * Register simple service worker JS assets pre chache\n * If registration fails, the app will continue to work withouth any issues.\n * Service worker is generated by webpack and hould be ever avaiable only in production version of the app.\n * You don't yant your JS bundles to be cached in dev env.\n * You must test it locally in non HTTPS environment due to the insecure origin and self signed certificate issues cause by the PROXY.\n * These cannot be overcome due to xss security policy inside service workers browser implementaion to avoid potential securitu issues.\n */\nif (navigator.serviceWorker) {\n  navigator.serviceWorker\n    .register(\n      `${\n        window.location.pathname.includes('/beta') ? '/beta' : ''\n      }/apps/catalog/service-worker.js`\n    )\n    .then((...args) => console.log('Service worker registered with: ', args))\n    .catch(console.log);\n}\n","import { useLocation } from 'react-router-dom';\nimport { StringObject } from '../types/common-types';\n\ntype UseQueryValue = [StringObject, string | undefined, URLSearchParams];\ntype UseQuery = (requiredParams: string[]) => UseQueryValue;\n\nconst useQuery: UseQuery = (requiredParams = []) => {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search);\n  return [\n    requiredParams.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: query.get(curr)\n      }),\n      {}\n    ),\n    search,\n    query\n  ];\n};\n\nexport default useQuery;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport {\n  Bullseye,\n  Card,\n  CardBody,\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Grid,\n  GridItem,\n  Gallery,\n  GalleryItem,\n  Form,\n  FormGroup,\n  TextContent,\n  Text,\n  TextVariants,\n  ActionGroup,\n  Button\n} from '@patternfly/react-core';\nimport styled, { keyframes } from 'styled-components';\nimport { StyledToolbar } from '../styled-components/toolbars';\nimport actionMessages from '../../messages/actions.messages';\nimport formsMessages from '../../messages/forms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst wave = keyframes`\n  0% {\n    transform: translateX(-100%);\n  }\n  60% {\n    transform: translateX(100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n`;\n\nconst Skeleton = ({ component: Component = 'span', ...props }) => {\n  return (\n    <SkeletonContainer {...props}>\n      <Component />\n    </SkeletonContainer>\n  );\n};\n\nSkeleton.propTypes = {\n  component: PropTypes.string\n};\n\nconst SkeletonContainer = styled.div<{\n  width?: number | string;\n  height?: number | string;\n  secondaryColor?: string;\n}>`\n  & > * {\n    position: relative;\n    overflow: hidden;\n    width: ${({ width }) =>\n      width ? `${width}${typeof width === 'number' ? 'px' : ''}` : '100%'};\n    height: ${({ height }) =>\n      height ? `${height}${typeof height === 'number' ? 'px' : ''}` : '20px'};\n    display: block;\n    border-radius: 3px;\n    background-color: ${({ secondaryColor }) =>\n      secondaryColor ? secondaryColor : '#f3f3f3'};\n    &:after {\n      animation: 2s ${wave} linear 0.5s infinite;\n      background: linear-gradient(90deg, transparent, #ecebeb, transparent);\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      top: 0;\n      transform: translateX(-100%);\n      z-index: 1;\n    }\n  }\n`;\n\nexport interface CardLoaderProps {\n  items?: number;\n}\nexport const CardLoader: React.ComponentType<CardLoaderProps> = ({\n  items = 13\n}) => (\n  <Grid hasGutter>\n    <GridItem sm={12}>\n      <Section type=\"content\">\n        <Gallery hasGutter>\n          {[...Array(items)].map((_item, index) => (\n            <GalleryItem key={index}>\n              <Card style={{ height: 350 }}>\n                <CardBody>\n                  <Skeleton height={70} width=\"85%\" className=\"pf-u-mb-lg\" />\n                  <Skeleton height={5} width=\"90%\" className=\"pf-u-mb-sm\" />\n                  <Skeleton height={5} width=\"100%\" className=\"pf-u-mb-sm\" />\n                  <Skeleton height={5} width=\"76%\" className=\"pf-u-mb-sm\" />\n                </CardBody>\n              </Card>\n            </GalleryItem>\n          ))}\n        </Gallery>\n      </Section>\n    </GridItem>\n  </Grid>\n);\n\nexport const AppPlaceholder: React.ElementType = () => (\n  <section className=\"pf-u-m-0 pf-u-p-0 pf-l-page__main-section pf-c-page__main-section\">\n    <Skeleton height={32} className=\"pf-u-p-lg global-primary-background\" />\n    <div className=\"pf-u-mt-lg\">\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    </div>\n  </section>\n);\n\nexport const ToolbarTitlePlaceholder: React.ElementType = () => (\n  <Skeleton height={30} />\n);\n\nconst ProducLoaderColumn = styled.div`\n  width: 100%;\n  max-width: 250px;\n`;\n\nexport const ProductLoaderPlaceholder: React.ElementType = () => (\n  <Fragment>\n    <Skeleton height={70} className=\"pf-u-mb-xl\" />\n    <ProducLoaderColumn>\n      {[...Array(3)].map((_, index) => (\n        <Fragment key={index}>\n          <Skeleton height={8} className=\"pf-u-mb-sm\" />\n          <Skeleton height={8} className=\"pf-u-ml-md pf-u-mb-sm\" width=\"60%\" />\n          <Skeleton height={8} className=\"pf-u-ml-md pf-u-mb-sm\" width=\"50%\" />\n          <Skeleton height={8} className=\"pf-u-mb-sm\" width=\"80%\" />\n          <Skeleton height={8} className=\"pf-u-ml-md pf-u-mb-lg\" width=\"40%\" />\n        </Fragment>\n      ))}\n    </ProducLoaderColumn>\n  </Fragment>\n);\n\nexport interface IconPlaceholderProps {\n  height: number;\n}\nexport const IconPlaceholder: React.ElementType<IconPlaceholderProps> = ({\n  height\n}) => (\n  <svg height={height} width={height}>\n    <circle cx={height / 2} cy={height / 2} r={height / 2} fill=\"#ecebeb\" />\n  </svg>\n);\n\nexport const FormItemLoader: React.ElementType = () => (\n  <Skeleton height={38} className=\"pf-u-mb-lg\" />\n);\n\nexport const ShareLoader: React.ElementType = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Form>\n      <TextContent>\n        <Text component={TextVariants.small}>\n          {formatMessage(formsMessages.inviteGroup)}\n        </Text>\n      </TextContent>\n      <FormGroup fieldId=\"1\">\n        <FormItemLoader />\n      </FormGroup>\n      <TextContent>\n        <Text component={TextVariants.small}>\n          {formatMessage(formsMessages.groupsAccess)}\n        </Text>\n      </TextContent>\n      <FormGroup fieldId=\"3\">\n        <FormItemLoader />\n      </FormGroup>\n      <FormGroup fieldId=\"4\">\n        <FormItemLoader />\n      </FormGroup>\n    </Form>\n  );\n};\n\nexport const WorkflowLoader: React.ElementType = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Form>\n      <FormGroup fieldId=\"2\">\n        <FormItemLoader />\n      </FormGroup>\n      <ActionGroup>\n        <Button variant=\"primary\" isDisabled>\n          {formatMessage(actionMessages.save)}\n        </Button>\n      </ActionGroup>\n    </Form>\n  );\n};\n\nexport interface ListLoaderProps {\n  items?: number;\n}\nexport const ListLoader: React.ElementType<ListLoaderProps> = ({\n  items = 5\n}) => (\n  <DataList aria-label=\"list-loader\" aria-labelledby=\"datalist-placeholder\">\n    {[...Array(items)].map((_item, index) => (\n      <DataListItem key={index} aria-labelledby=\"datalist-item-placeholder\">\n        <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n          <DataListItemCells\n            dataListCells={[\n              <DataListCell key=\"1\">\n                <Skeleton height={67} />\n              </DataListCell>\n            ]}\n          />\n        </DataListItemRow>\n      </DataListItem>\n    ))}\n  </DataList>\n);\n\nexport const OrderDetailToolbarPlaceholder: React.ElementType = () => (\n  <Skeleton height={70} />\n);\n\nexport const PlatformToolbarPlaceholder: React.ElementType = () => (\n  <StyledToolbar className=\"pf-u-pr-lg pf-u-pl-lg pf-u-pb-md pf-u-pt-md\">\n    <Skeleton height={36} width={300} />\n  </StyledToolbar>\n);\n","export const ADD_PORTFOLIO_ROUTE = '/portfolios/add-portfolio';\nexport const ADD_PRODUCTS_ROUTE = '/portfolio/add-products';\nexport const EDIT_ORDER_PROCESS_ROUTE = '/portfolios/edit-order-process';\nexport const EDIT_PORTFOLIO_ROUTE = '/portfolios/edit';\nexport const EDIT_PORTFOLIO_WORKFLOW_ROUTE = '/portfolios/edit-workflow';\nexport const EDIT_SURVEY_ROUTE = '/portfolio/portfolio-item/edit-survey';\nexport const NESTED_EDIT_ORDER_PROCESS_ROUTE = '/portfolio/edit-order-process';\nexport const NESTED_EDIT_PORTFOLIO_ROUTE = '/portfolio/edit-portfolio';\nexport const NESTED_ORDER_PORTFOLIO_ROUTE = '/portfolio/order';\nexport const NESTED_REMOVE_PORTFOLIO_ROUTE = '/portfolio/remove-portfolio';\nexport const NESTED_SHARE_PORTFOLIO_ROUTE = '/portfolio/share-portfolio';\nexport const NESTED_WORKFLOW_PORTFOLIO_ROUTE = '/portfolio/edit-workflow';\nexport const ORDER_APPROVAL_ROUTE = '/order/approval';\nexport const ORDER_LIFECYCLE_ROUTE = '/order/lifecycle';\nexport const ORDER_ROUTE = '/order';\nexport const ORDERS_ROUTE = '/orders';\nexport const PLATFORM_INVENTORIES_ROUTE = '/platform/platform-inventories';\nexport const PLATFORM_ROUTE = '/platform';\nexport const PLATFORM_SERVICE_OFFERINGS_ROUTE = '/platform/service-offerings';\nexport const PLATFORM_TEMPLATES_ROUTE = '/platform/platform-templates';\nexport const PLATFORMS_ROUTE = '/platforms';\nexport const PORTFOLIO_ROUTE = '/portfolio';\nexport const PORTFOLIO_ITEM_ROUTE = '/portfolio/portfolio-item';\nexport const PORTFOLIO_ITEM_ROUTE_EDIT = '/portfolio/portfolio-item/edit';\nexport const PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE =\n  '/portfolio/portfolio-item/edit-order-process';\nexport const PORTFOLIOS_ROUTE = '/portfolios';\nexport const REMOVE_PORTFOLIO_ROUTE = '/portfolios/remove';\nexport const SHARE_PORTFOLIO_ROUTE = '/portfolios/share';\nexport const WORKFLOW_PORTFOLIO_ROUTE = '/portfolios/edit-workflow';\nexport const ORDER_PROCESSES_ROUTE = '/order-processes';\nexport const ADD_ORDER_PROCESS_ROUTE = '/order-processes/add-order-process';\nexport const REMOVE_ORDER_PROCESS_ROUTE = '/order-processes/remove';\nexport const UPDATE_ORDER_PROCESS_ROUTE = '/order-processes/update';\n","import { defineMessages } from 'react-intl';\n\nconst formsMessages = defineMessages({\n  orderProcessTitle: {\n    id: 'commonMessages.orderProcessesTitle',\n    defaultMessage: 'Order processes'\n  },\n  inviteGroup: {\n    id: 'forms.share.invite-group',\n    defaultMessage: 'Invite group'\n  },\n  groupsAccess: {\n    id: 'forms.groups-with-access',\n    defaultMessage: 'Groups with access'\n  },\n  groupsPlaceholder: {\n    id: 'share.groups.group.placeholder',\n    defaultMessage: 'Select group'\n  },\n  permissionsPlaceholder: {\n    id: 'share.groups.permissions.placeholder',\n    defaultMessage: 'Select permission'\n  },\n  nameTaken: {\n    id: 'forms.nameTaken',\n    defaultMessage: 'Name has already been taken'\n  },\n  currentBeforeProvision: {\n    id: 'forms.before.currentBeforeProducts',\n    defaultMessage: 'Current before provision'\n  },\n  currentAfterProvision: {\n    id: 'forms.after.currentAfterProvision',\n    defaultMessage: 'Current after provision'\n  },\n  beforeProvision: {\n    id: 'forms.before.beforeProvision',\n    defaultMessage: 'Before provision'\n  },\n  afterProvision: {\n    id: 'forms.after.setAfterProvision',\n    defaultMessage: 'After provision'\n  },\n  productsPlaceholder: {\n    id: 'forms.product.placeholder',\n    defaultMessage: 'Select product'\n  }\n});\n\nexport default formsMessages;\n","import React, { ComponentType } from 'react';\nimport styled from 'styled-components';\nimport { LevelItem, LevelItemProps } from '@patternfly/react-core';\n\nexport interface StyledLevelItemProps extends LevelItemProps {\n  alignStart?: boolean;\n  alignSelf?: string;\n  grow?: boolean;\n}\n\nexport const StyledLevelItem = styled<ComponentType<StyledLevelItemProps>>(\n  ({ alignStart, alignSelf, grow, ...props }) => <LevelItem {...props} />\n)`\n  align-self: ${({ alignSelf }) => (alignSelf ? alignSelf : 'inherit')};\n  align-items: ${({ alignStart }) =>\n    alignStart ? 'flex-start !important' : 'inherit'};\n  flex: ${({ grow }) => (grow ? '1' : '0')};\n`;\n","import { defineMessages } from 'react-intl';\n\nconst labelMessages = defineMessages({\n  shared: {\n    id: 'common.labels.shared',\n    defaultMessage: 'Shared'\n  },\n  portfolio: {\n    id: 'common.labels.portfolio',\n    defaultMessage: 'Portfolio'\n  },\n  platform: {\n    id: 'common.labels.platform',\n    defaultMessage: 'Platform'\n  },\n  name: {\n    id: 'common.labels.name',\n    defaultMessage: 'Name'\n  },\n  description: {\n    id: 'common.labels.description',\n    defaultMessage: 'Description'\n  },\n  loading: {\n    id: 'common.labels.loading',\n    defaultMessage: 'Loading'\n  },\n  cancel: {\n    id: 'common.labels.cancel',\n    defaultMessage: 'Cancel'\n  },\n  save: {\n    id: 'common.labels.save',\n    defaultMessage: 'Save'\n  },\n  confirm: {\n    id: 'common.labels.confirm',\n    defaultMessage: 'Confirm'\n  },\n  create: {\n    id: 'common.labels.create',\n    defaultMessage: 'Create'\n  },\n  owner: {\n    id: 'common.labels.owner',\n    defaultMessage: 'Owner'\n  },\n  sortBy: {\n    id: 'common.labels.sort-by',\n    defaultMessage: 'Sort by'\n  },\n  updated: {\n    id: 'common.labels.updated',\n    defaultMessage: 'Updated'\n  },\n  created: {\n    id: 'common.states.created',\n    defaultMessage: 'Created'\n  },\n  product: {\n    id: 'common.labels.product',\n    defaultMessage: 'Product'\n  },\n  status: {\n    id: 'common.labels.id',\n    defaultMessage: 'Status'\n  }\n});\n\nexport default labelMessages;\n","/* eslint-disable react/prop-types */\n/**\n * No prop types in TSX files are needed.\n * Props are defined via interface\n */\nimport React from 'react';\nimport { Store } from 'redux';\nimport get from 'lodash/get';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\n\nimport {\n  PORTFOLIO_ITEM_NULLABLE,\n  PORTFOLIO_NULLABLE\n} from '../../constants/nullable-attributes';\nimport { AnyObject, StringObject } from '../../types/common-types';\n\nexport const scrollToTop = (): void =>\n  document.getElementById('root')?.scrollTo({\n    behavior: 'smooth',\n    top: 0,\n    left: 0\n  });\n\nexport const filterServiceOffering = (\n  { display_name, name }: { display_name?: string; name: string },\n  filter: string\n): boolean => {\n  const filterAtrribute = display_name || name;\n  return filterAtrribute\n    .trim()\n    .toLowerCase()\n    .includes(filter.toLowerCase());\n};\n\nexport const udefinedToNull = (entity: AnyObject, keys: string[]): AnyObject =>\n  [...Object.keys(entity), ...keys].reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: entity[curr] === undefined ? null : entity[curr]\n    }),\n    {}\n  );\n\ninterface NullableMapper extends AnyObject {\n  PortfolioItem: string[];\n  Portfolio: string[];\n}\n\nconst nullableMapper: NullableMapper = {\n  PortfolioItem: PORTFOLIO_ITEM_NULLABLE,\n  Portfolio: PORTFOLIO_NULLABLE\n};\n\nexport const sanitizeValues = (\n  values: AnyObject,\n  entityType: string,\n  store: Store\n): AnyObject => {\n  const schemas = store.getState().openApiReducer.schema.components.schemas;\n  const permittedValues = Object.keys(values)\n    .filter((key) => !get(schemas, `${entityType}.properties.${key}.readOnly`))\n    .reduce(\n      (acc, curr) => (values[curr] ? { ...acc, [curr]: values[curr] } : acc),\n      {}\n    );\n  return udefinedToNull(permittedValues, nullableMapper[entityType]);\n};\n\nexport interface TimeAgoProps {\n  date: Date | string | number;\n}\n\nexport const TimeAgo: React.ComponentType<TimeAgoProps> = ({ date }) => (\n  <span key={`${date}`}>\n    <DateFormat date={date} type=\"relative\" />\n  </span>\n);\n\nconst sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nexport const readableBytes = (bytes: number): string => {\n  if (bytes === 0) {\n    return 'O B';\n  }\n\n  const i: number = Math.floor(Math.log(bytes) / Math.log(1024));\n\n  return `${Number((bytes / Math.pow(1024, i)).toFixed(2)) * 1} ${sizes[i]}`;\n};\n\nexport const hasPermission = (\n  userPermissions: StringObject[] = [],\n  permissions: string[] = []\n): boolean =>\n  permissions.every((permission) =>\n    userPermissions.find((item) => item.permission === permission)\n  );\n","export const PORTFOLIO_ITEM_NULLABLE = [\n  'name',\n  'description',\n  'long_description',\n  'distributor',\n  'documentation_url',\n  'support_url'\n];\n\nexport const PORTFOLIO_NULLABLE = ['description'];\n"],"sourceRoot":""}