{"version":3,"sources":["webpack:///./src/utilities/async-form-validator.js","webpack:///./src/messages/actions.messages.js","webpack:///./src/user-context.js","webpack:///./src/constants/routes.js","webpack:///./src/routing/uri-state-manager.js","webpack:///./src/redux/actions/portfolio-actions.js","webpack:///./src/messages/labels.messages.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/forms/form-fields/share-group-select.js","webpack:///./src/forms/form-fields/share-group-edit.js","webpack:///./src/messages/schemas.messages.js","webpack:///./src/utilities/translate-schema.js","webpack:///./src/forms/form-fields/copy-name-display.js","webpack:///./src/forms/form-fields/initial-chips.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/routing/use-initial-uri-hash.js","webpack:///./src/smart-components/error-pages/error-redirects.js","webpack:///./src/presentational-components/styled-components/toolbars.js","webpack:///./src/presentational-components/shared/intl-rich-text-components.js","webpack:///./src/redux/actions/order-process-actions.js","webpack:///./src/forms/set-object-tags.schema.js","webpack:///./src/smart-components/common/tagging-modal.js","webpack:///./src/redux/action-types.js","webpack:///./src/smart-components/order-process/set-order-process-modal.js","webpack:///./src/utilities/use-format-message.js","webpack:///./src/app-context.js","webpack:///./src/helpers/portfolio/portfolio-helper.js","webpack:///./src/helpers/shared/pagination.js","webpack:///./src/routing/catalog-route.js","webpack:///./src/messages/portfolio.messages.js","webpack:///./src/helpers/shared/user-login.js","webpack:///./src/redux/reducers/order-reducer.js","webpack:///./src/redux/reducers/platform-reducer.js","webpack:///./src/redux/reducers/order-process-reducer.js","webpack:///./src/redux/reducers/portfolio-reducer.js","webpack:///./src/redux/reducers/approval-reducer.js","webpack:///./src/redux/reducers/rbac-reducer.js","webpack:///./src/redux/reducers/share-reducer.js","webpack:///./src/redux/reducers/open-api-reducer.js","webpack:///./src/utilities/loading-state-middleware.js","webpack:///./src/utilities/empty-data-middleware.js","webpack:///./src/redux/reducers/breadcrumbs-reducer.js","webpack:///./src/redux/reducers/i18n-reducer.js","webpack:///./src/smart-components/dialog-routes/portfolio-routes.js","webpack:///./src/smart-components/dialog-routes/platform-routes.js","webpack:///./src/smart-components/dialog-routes/index.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/constants/ui-constants.js","webpack:///./src/global-styles.js","webpack:///./src/router.js","webpack:///./src/utilities/view-state-middleware.js","webpack:///./src/utilities/unauthorized-middleware.js","webpack:///./src/utilities/store.js","webpack:///./src/entry.js","webpack:///./src/utilities/constants.js","webpack:///./src/messages/order-processes.messages.js","webpack:///./src/helpers/order-process/order-process-helper.js","webpack:///./src/utilities/use-query.js","webpack:///./src/presentational-components/shared/loader-placeholders.js","webpack:///./src/presentational-components/styled-components/level.js","webpack:///./src/messages/forms.messages.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/constants/nullable-attributes.js","webpack:///./src/redux/action-types/approval-action-types.js","webpack:///./src/redux/action-types/action-types-helper.js"],"names":["asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","actionMessages","defineMessages","require","share","id","defaultMessage","copy","setApproval","edit","delete","save","UserContext","createContext","ADD_PORTFOLIO_ROUTE","ADD_PRODUCTS_ROUTE","EDIT_ORDER_PROCESS_ROUTE","EDIT_PORTFOLIO_ROUTE","EDIT_PORTFOLIO_WORKFLOW_ROUTE","EDIT_SURVEY_ROUTE","NESTED_EDIT_ORDER_PROCESS_ROUTE","NESTED_EDIT_PORTFOLIO_ROUTE","NESTED_REMOVE_PORTFOLIO_ROUTE","NESTED_SHARE_PORTFOLIO_ROUTE","NESTED_WORKFLOW_PORTFOLIO_ROUTE","ORDER_ROUTE","ORDERS_ROUTE","PLATFORM_INVENTORIES_ROUTE","PLATFORM_ROUTE","PLATFORM_SERVICE_OFFERINGS_ROUTE","PLATFORM_TEMPLATES_ROUTE","PLATFORMS_ROUTE","PORTFOLIO_ROUTE","PORTFOLIO_ITEM_ROUTE","PORTFOLIO_ITEM_ROUTE_EDIT","PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE","PORTFOLIOS_ROUTE","REMOVE_PORTFOLIO_ROUTE","SHARE_PORTFOLIO_ROUTE","WORKFLOW_PORTFOLIO_ROUTE","ORDER_PROCESSES_ROUTE","ADD_ORDER_PROCESS_ROUTE","decodeState","encodedState","JSON","parse","atob","decodeURIComponent","error","encodeState","state","stateKey","stateObject","window","location","hash","encodeURIComponent","btoa","stringify","console","warn","doFetchPortfolios","defaultSettings","filters","type","ActionTypes","meta","payload","PortfolioHelper","fetchPortfolios","dispatch","fetchPortfoliosWithState","storeState","fetchPortfolioItems","filter","limit","offset","fetchPortfolioItemsWithPortfolio","portfolioId","fetchSelectedPortfolio","addPortfolio","portfolioData","notification","notifications","fulfilled","addToPortfolio","items","variant","title","description","updatePortfolio","getState","then","ADD_NOTIFICATION","dismissable","undoRemovePortfolio","restoreKey","viewState","CLEAR_NOTIFICATIONS","portfolio","name","removePortfolio","restore_key","portfolioMessages","removePortfolioNotification","values","a","chunks","href","onClick","event","preventDefault","portfolioReducer","portfolios","data","length","removeProductsFromPortfolio","portfolioItems","portfolioName","firstSelectedProduct","selectedPortfolio","removeItemsNotification","count","productName","b","restoreData","err","undoRemoveProductsFromPortfolio","copyPortfolio","copyPortfolioItem","portfolioItemId","copyObject","newPortfolio","resetSelectedPortfolio","updatePortfolioItem","item","getPortfolioItemDetail","params","portfolioItem","source","setOrFetchPortfolio","existingPorfolio","find","labelMessages","shared","platform","loading","cancel","confirm","create","owner","sortBy","updated","created","product","status","createOptions","inputValue","isRequired","optionsMessages","selectOptions","undefined","value","label","choose","none","Select","input","isDisabled","isReadOnly","FieldProvider","multi","loadOptions","rest","formatMessage","useFormatMessage","useRef","defineMessage","useState","initialFetch","setInitialFetch","formOptions","useFormApi","loadOptionsOverride","initial","lookupArguments","Array","isArray","map","option","filterValue","initialOptions","hideSelectedOptions","menuIsPortal","onChange","change","args","isMulti","current","closeMenuOnSelect","propTypes","PropTypes","object","arrayOf","shape","any","string","bool","isSearchable","func","defaultProps","Pf4SelectWrapper","props","useFieldApi","componentType","helperText","hideLabel","dataType","initialKey","initialValue","showError","touched","FormGroup","fieldId","validated","helperTextInvalid","TextContent","Text","component","TextVariants","small","initialState","resetGroup","group","permission","shareReducer","NewGroupSelect","tooltipContent","permissions","addGroup","currentGroups","useReducer","shareErrorMissingPermission","shareErrorMissingGroup","shareTooltip","shareErrorMissingData","hasError","group_uuid","Level","grow","Grid","hasGutter","className","GridItem","span","key","isClearable","simpleValue","asyncFormValidator","placeholder","formsMessages","groupsPlaceholder","aria-live","shareDuplicate","permissionsPlaceholder","alignSelf","Tooltip","content","Button","groupName","array","ShareGroupSelect","fields","push","StyledText","styled","SharedGroup","remove","index","permissionVerbs","h4","number","ShareGroupEdit","noShares","shareGroupsAccess","schemasMessages","translateString","translateField","field","translateKeys","fieldCopy","forEach","Object","prototype","hasOwnProperty","call","translateSchema","schema","schemaCopy","CopyNameDisplay","getName","fieldSpy","setName","useEffect","InitialChips","ChipGroup","Chip","handleRemove","node","catalogComponentMapper","componentTypes","TEXT_FIELD","TextField","TEXTAREA","Textarea","PLAIN_TEXT","PlainText","SELECT","CHECKBOX","Checkbox","RADIO","Radio","SWITCH","Switch","SUB_FORM","SubForm","catalogValidatorMapper","validatorMapper","validatorTypes","EXACT_LENGTH","MAX_LENGTH","MIN_ITEMS","MIN_LENGTH","PATTERN","REQUIRED","URL","catalogValidatorAlias","FormRenderer","formContainer","templateProps","componentMapper","FormTemplate","oneOf","memo","useInitialUriHash","substring","UnauthorizedRedirect","useLocation","to","pathname","from","StyledToolbar","noWrap","StyledToolbarGroup","ToolbarGroup","TopToolbarWrapper","div","TopToolbarTitleContainer","Bold","fetchOrderProcesses","pagination","orderProcessReducer","orderProcesses","finalPagination","OrderProcessHelper","addOrderProcess","processData","intl","orderProcessesMessages","addProcessSuccessTitle","addProcessSuccessDescription","sortOrderProcesses","setOrderProcess","resolveNewProcessProps","_fieldApi","initialProcessess","createSchema","existingTagsMessage","loadTags","resolveProps","TaggingModal","onSubmit","getInitialTags","onClose","subTitle","setData","Modal","isOpen","Stack","StackItem","subscription","initialValues","formData","unlinkArray","process","linkDiff","difference","unLinkDiff","toLinkTags","toUnlinkTags","onCancel","clearedValue","submitLabel","disableSubmit","FETCH_SERVICE_PLANS","FETCH_SERVICE_PLAN_PARAMETERS","UPDATE_SERVICE_DATA","SUBMIT_SERVICE_ORDER","SET_SELECTED_PLAN","LIST_ORDERS","CANCEL_ORDER","SET_ORDERS","FETCH_ORDERS","FETCH_PLATFORM","FETCH_PLATFORMS","FETCH_PLATFORM_ITEMS","FETCH_PLATFORM_ITEM","FETCH_MULTIPLE_PLATFORM_ITEMS","FILTER_PLATFORM_ITEMS","FETCH_PLATFORM_INVENTORIES","SET_INVENTORIES_LOADING_STATE","FETCH_PORTFOLIOS","FETCH_PORTFOLIO_ITEM","FETCH_PORTFOLIO_ITEMS","FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO","FETCH_PORTFOLIO","FILTER_PORTFOLIO_ITEMS","ADD_PORTFOLIO","ADD_TO_PORTFOLIO","UPDATE_PORTFOLIO","REMOVE_PORTFOLIO","REMOVE_PORTFOLIO_ITEMS","RESTORE_PORTFOLIO_ITEMS","RESET_SELECTED_PORTFOLIO","ADD_TEMPORARY_PORTFOLIO","UPDATE_TEMPORARY_PORTFOLIO","DELETE_TEMPORARY_PORTFOLIO","RESTORE_PORTFOLIO_PREV_STATE","SET_PORTFOLIO_ITEMS","UPDATE_TEMPORARY_PORTFOLIO_ITEM","RESTORE_PORTFOLIO_ITEM_PREV_STATE","UPDATE_PORTFOLIO_ITEM","FETCH_RBAC_GROUPS","SHARE_PORTFOLIO","UNSHARE_PORTFOLIO","QUERY_PORTFOLIO","FETCH_REQUESTS","FETCH_ORDER_ITEMS","SET_LOADING_STATE","SET_OPENAPI_SCHEMA","SET_ORDER_DETAIL","FETCH_APPROVAL_REQUESTS","SELECT_PORTFOLIO_ITEM","FETCH_SERVICE_OFFERING","SET_SOURCETYPE_ICONS","INITIALIZE_BREADCRUMBS","INITIALIZE_I18N","FETCH_ORDER_PROCESSES","ADD_ORDER_PROCESS","SORT_ORDER_PROCESSES","SET_ORDER_PROCESS","SetOrderProcessModal","pushParam","objectType","querySelector","useDispatch","useHistory","useQuery","query","getLinkedOrderProcesses","toLink","toUnlink","object_type","app_name","APP_NAME","object_id","addNotification","setOrderProcessNotificationTitle","setOrderProcessNotificationDescription","linked","unlinked","listOrderProcesses","currentOrderProcesses","setOrderProcessSubtitle","strong","search","useIntl","message","internalValues","entries","reduce","acc","AppContext","axiosInstance","getAxiosInstance","portfolioApi","getPortfolioApi","portfolioItemApi","getPortfolioItemApi","listPortfolios","sortDirection","filterQuery","partial","get","CATALOG_API_BASE","listPortfolioItems","portfolioReference","curr","portfolio_id","keys","join","portfolioItemIndex","getPortfolio","showPortfolio","getPortfolioItemsWithPortfolio","createPortfolio","Promise","all","createPortfolioItem","service_offering_ref","store","sanitizeValues","destroyPortfolio","removePortfolioItem","destroyPortfolioItem","removePortfolioItems","portfolioItemIds","itemId","fetchPortfolioByName","restorePortfolioItems","unDeletePortfolioItem","postCopyPortfolio","postCopyPortfolioItem","uploadPortfolioItemIcon","file","iconId","FormData","append","patch","post","headers","accept","_boundary","SOURCES_API_BASE","notFound","getPortfolioFromState","undeletePortfolio","getCurrentPage","Math","floor","getNewPage","page","ReidrectOnAccess","CatalogRoute","userCapabilities","requiredCapabilities","userPermissions","useContext","some","capability","hasCapability","hasPermission","oneOfType","portfoliosTitle","modalCreateTitle","modalEditTitle","addProducts","emptyNoProducts","portfoliosPlaceholder","portfoliosNoData","portfoliosNoDataDescription","portfolioRemoveDescription","portfolioRemoveTitle","portfolioSharePermissions","portfolioShareGroups","portfolioShareTitle","portfolioShareApply","portfolioShareDescription","addProducstPlatformTitle","addProducstPlatformDescription","addProducstFilterTitle","copyItemTitle","portfolioItemSurvey","portfolioItemOrder","portfolioItemIconTitle","portfolioItemOverview","portfolioItemSupport","portfolioItemDocumentation","portfolioItemDocLink","restoreSurvey","surveyTitle","sourceUnavaiable","objectUnavaiable","backToProducts","editProduct","shareSuccessTitle","shareSuccessTitleOnlySharing","shareSuccessTitleOnlyUnsharing","shareSuccessTitleOnlyChaningPermissions","shareSuccessDescriptionOnlySharing","shareSuccessDescriptionOnlyUnsharing","shareSuccessDescriptionOnlyChaningPermissions","shareSuccessTwoGroup","shareSuccessMultipleGroups","addSuccessTitle","addSuccessDescription","axios","paramsSerializer","interceptors","request","use","config","insights","chrome","auth","getUser","response","requestId","redirect","url","orderApi","OrderApi","orderItemApi","OrderItemApi","PortfolioApi","PortfolioItemApi","workflowApi","RequestApi","APPROVAL_API_BASE","WorkflowApi","servicePlansApi","IconApi","ServicePlansApi","orderProcessApi","OrderProcessApi","getOrderApi","getOrderItemApi","rbacGroupApi","GroupApi","RBAC_API_BASE","getRbacGroupApi","getWorkflowApi","getServicePlansApi","getOrderProcessApi","grapqlInstance","getGraphqlInstance","errors","errorType","orderInitialState","servicePlans","selectedPlan","serviceData","isLoading","requests","orderDetail","order","orders","setLoadingState","setOrders","setOrderDetail","planParameters","orderItems","approvalRequest","platformInitialState","platformIconMapping","sourceTypeIcons","isPlatformDataLoading","selectedPlatform","platforms","platformItems","platformInventories","platformItem","serviceOffering","service","setInventoriesDataLoadingState","isInventoriesDataLoading","source_type_id","platformId","orderProcessInitialState","property","direction","SET_FILTER_ORDER_PROCESSES","portfoliosInitialState","metadata","user_capabilities","statistics","setPortfolioItems","setPortfolioItem","selectPortfolio","restorePrevState","prevState","created_at","updated_at","Date","toString","approvalInitialState","isFetching","isResolving","workflows","resolvedWorkflows","ASYNC_ACTIONS","FETCH_WORKFLOWS_PENDING","FETCH_WORKFLOWS_FULFILLED","RESOLVE_WORKFLOWS_PENDING","RESOLVE_WORKFLOWS_FULFILLED","rbacInitialState","rbacGroups","shareInfoInitialState","shareInfo","openApiInitialState","loadingStateMiddleware","action","match","emptyDataMiddleware","nextAction","noFilter","every","noData","initialBreadcrumbsState","fragments","i18nInitialState","CopyPortfolioItemModal","lazy","OrderModal","EditApprovalWorkflow","SharePortfolioModal","RemovePortfolioModal","AddPortfolioModal","PortfolioRoutes","useSelector","portfolioItemUserCapabilities","shallowEqual","portfolioUserCapabilities","itemName","path","removeQuery","closeTarget","exact","closeUrl","removeSearch","PORTFOLIO_RESOURCE_TYPE","objectName","keepHash","PlatformRoutes","platformReducer","obj","INVENTORY_RESOURCE_TYPE","DialogRoutes","fallback","CommonApiError","Products","Platforms","Platform","Portfolios","Portfolio","Orders","OrderDetail","OrderProcesses","paths","products","order_processes","errorPaths","Routes","render","p","smoothscroll","polyfill","ignoreRedirect","App","unregister","setAuth","setUserPermissions","identity","userIdentity","setUserIdentity","openApiSchema","setOpenApiSchema","i18l","history","init","icon_url","user","getUserPermissions","identifyApp","navigation","on","domEvent","navId","Provider","style","minHeight","sm","GlobalStyle","createGlobalStyle","pathName","split","shift","release","basename","catalogHistory","createBrowserHistory","Router","viewStateMiddleware","replace","unAuthorizedMiddleware","setTimeout","prodMiddlewares","notificationsMiddleware","errorTitleKey","errorDescriptionKey","baseMiddlewares","thunk","promiseMiddleware","registerReducers","registry","register","orderReducer","applyReducerHash","approvalReducer","rbacReducer","openApiReducer","breadcrumbsReducer","i18nReducer","ReactDOM","isProd","ReducerRegistry","reduxLogger","getStore","locale","document","getElementById","navigator","serviceWorker","includes","log","TOPOLOGICAL_INVENTORY_API_BASE","permissionValues","permissionOptions","PORTFOLIO_ITEM_RESOURCE_TYPE","DEFAULT_MAX_LENGTH","PortfolioItem","ServiceInventory","noOrderProcessesDescription","noOrderProcessesFilterDescription","orderProcessesFilter","noOrderProcesses","orderProcess","orderProcessName","enterOrderProcessName","fetchOrderProcessByName","createOrderProcess","setOrderProcesses","toTag","toUntag","resourceType","promises","linkTagToOrderProcess","unlinkTagFromOrderProcess","objectId","requiredParams","URLSearchParams","wave","keyframes","Skeleton","Component","SkeletonContainer","width","height","secondaryColor","CardLoader","_item","AppPlaceholder","ToolbarTitlePlaceholder","ProducLoaderColumn","ProductLoaderPlaceholder","_","IconPlaceholder","cx","cy","r","fill","FormItemLoader","ShareLoader","inviteGroup","groupsAccess","WorkflowLoader","ListLoader","aria-label","aria-labelledby","dataListCells","OrderDetailToolbarPlaceholder","PlatformToolbarPlaceholder","StyledLevelItem","alignStart","orderProcessTitle","nameTaken","scrollToTop","scrollTo","behavior","top","left","nullableMapper","entityType","entity","schemas","components","permittedValues","timeAgo","date","DateFormat","prefix"],"mappings":"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","file":"js/lib~App~06837ae4.4bbe1734b6b4730d23d6.js","sourcesContent":["import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","const { defineMessages } = require('react-intl');\n\nconst actionMessages = defineMessages({\n  share: {\n    id: 'common.actions.share',\n    defaultMessage: 'Share'\n  },\n  copy: {\n    id: 'common.actions.copy',\n    defaultMessage: 'Copy'\n  },\n  setApproval: {\n    id: 'common.actions.setApproval',\n    defaultMessage: 'Set approval'\n  },\n  edit: {\n    id: 'common.actions.edit',\n    defaultMessage: 'Edit'\n  },\n  delete: {\n    id: 'common.actions.delete',\n    defaultMessage: 'Delete'\n  },\n  save: {\n    id: 'common.actions.save',\n    defaultMessage: 'Save'\n  }\n});\n\nexport default actionMessages;\n","import { createContext } from 'react';\n\nconst UserContext = createContext({});\n\nexport default UserContext;\n","export const ADD_PORTFOLIO_ROUTE = '/portfolios/add-portfolio';\nexport const ADD_PRODUCTS_ROUTE = '/portfolio/add-products';\nexport const EDIT_ORDER_PROCESS_ROUTE = '/portfolios/edit-order-process';\nexport const EDIT_PORTFOLIO_ROUTE = '/portfolios/edit';\nexport const EDIT_PORTFOLIO_WORKFLOW_ROUTE = '/portfolios/edit-workflow';\nexport const EDIT_SURVEY_ROUTE = '/portfolio/portfolio-item/edit-survey';\nexport const NESTED_EDIT_ORDER_PROCESS_ROUTE = '/portfolio/edit-order-process';\nexport const NESTED_EDIT_PORTFOLIO_ROUTE = '/portfolio/edit-portfolio';\nexport const NESTED_ORDER_PORTFOLIO_ROUTE = '/portfolio/order';\nexport const NESTED_REMOVE_PORTFOLIO_ROUTE = '/portfolio/remove-portfolio';\nexport const NESTED_SHARE_PORTFOLIO_ROUTE = '/portfolio/share-portfolio';\nexport const NESTED_WORKFLOW_PORTFOLIO_ROUTE = '/portfolio/edit-workflow';\nexport const ORDER_APPROVAL_ROUTE = '/order/approval';\nexport const ORDER_LIFECYCLE_ROUTE = '/order/lifecycle';\nexport const ORDER_ROUTE = '/order';\nexport const ORDERS_ROUTE = '/orders';\nexport const PLATFORM_INVENTORIES_ROUTE = '/platform/platform-inventories';\nexport const PLATFORM_ROUTE = '/platform';\nexport const PLATFORM_SERVICE_OFFERINGS_ROUTE = '/platform/service-offerings';\nexport const PLATFORM_TEMPLATES_ROUTE = '/platform/platform-templates';\nexport const PLATFORMS_ROUTE = '/platforms';\nexport const PORTFOLIO_ROUTE = '/portfolio';\nexport const PORTFOLIO_ITEM_ROUTE = '/portfolio/portfolio-item';\nexport const PORTFOLIO_ITEM_ROUTE_EDIT = '/portfolio/portfolio-item/edit';\nexport const PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE =\n  '/portfolio/portfolio-item/edit-order-process';\nexport const PORTFOLIOS_ROUTE = '/portfolios';\nexport const REMOVE_PORTFOLIO_ROUTE = '/portfolios/remove';\nexport const SHARE_PORTFOLIO_ROUTE = '/portfolios/share';\nexport const WORKFLOW_PORTFOLIO_ROUTE = '/portfolios/edit-workflow';\nexport const ORDER_PROCESSES_ROUTE = '/order-processes';\nexport const ADD_ORDER_PROCESS_ROUTE = '/order-processes/add-order-process';\n","export const decodeState = (encodedState) => {\n  try {\n    return JSON.parse(atob(decodeURIComponent(encodedState)));\n  } catch (error) {\n    return undefined;\n  }\n};\n\nexport const encodeState = (state, stateKey) => {\n  const stateObject = stateKey\n    ? {\n        ...decodeState(window.location.hash),\n        [stateKey]: state\n      }\n    : state;\n  try {\n    return encodeURIComponent(btoa(JSON.stringify(stateObject)));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'View state is not a valid JSON, state has will not be generated. View state: ',\n      state\n    );\n    return '';\n  }\n};\n","import React from 'react';\nimport {\n  ADD_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications/cjs/actionTypes';\n\nimport * as ActionTypes from '../action-types';\nimport * as PortfolioHelper from '../../helpers/portfolio/portfolio-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport { FormattedMessage } from 'react-intl';\n\nexport const doFetchPortfolios = ({\n  filters,\n  ...options\n} = defaultSettings) => ({\n  type: ActionTypes.FETCH_PORTFOLIOS,\n  meta: { ...defaultSettings, filters, ...options },\n  payload: PortfolioHelper.listPortfolios(filters, options)\n});\n\nexport const fetchPortfolios = (options) => (dispatch) =>\n  dispatch(doFetchPortfolios(options));\n\nexport const fetchPortfoliosWithState = (\n  filters,\n  options = defaultSettings\n) => (dispatch) =>\n  dispatch(\n    doFetchPortfolios({\n      ...options,\n      filters,\n      storeState: true,\n      stateKey: 'portfolio'\n    })\n  );\n\nexport const fetchPortfolioItems = (\n  filter = '',\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS,\n  meta: { filter, storeState: true, stateKey: 'products' },\n  payload: PortfolioHelper.listPortfolioItems(\n    options.limit,\n    options.offset,\n    filter\n  )\n});\n\nexport const fetchPortfolioItemsWithPortfolio = (\n  portfolioId,\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolioItemsWithPortfolio(portfolioId, options),\n  meta: {\n    ...options,\n    storeState: true,\n    stateKey: 'portfolioItems'\n  }\n});\n\nexport const fetchSelectedPortfolio = (id) => ({\n  type: ActionTypes.FETCH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolio(id)\n});\n\nexport const searchPortfolioItems = (value) => ({\n  type: ActionTypes.FILTER_PORTFOLIO_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const addPortfolio = (portfolioData, notification) => ({\n  type: ActionTypes.ADD_PORTFOLIO,\n  payload: PortfolioHelper.addPortfolio(portfolioData),\n  meta: {\n    notifications: {\n      fulfilled: notification\n    }\n  }\n});\n\nexport const addToPortfolio = (portfolioId, items) => ({\n  type: ActionTypes.ADD_TO_PORTFOLIO,\n  payload: PortfolioHelper.addToPortfolio(portfolioId, items),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding products',\n        description: 'Products were successfully added to portfolio.'\n      }\n    }\n  }\n});\n\nexport const updatePortfolio = (portfolioData, options) => (\n  dispatch,\n  getState\n) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO,\n    payload: portfolioData\n  });\n\n  return PortfolioHelper.updatePortfolio(portfolioData, { getState })\n    .then(() => dispatch(doFetchPortfolios(options)))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          dismissable: true,\n          variant: 'success',\n          title: 'Success updating portfolio',\n          description: 'The portfolio was updated successfully.'\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const undoRemovePortfolio = (portfolioId, restoreKey, viewState) => (\n  dispatch\n) => {\n  dispatch({ type: CLEAR_NOTIFICATIONS });\n  return PortfolioHelper.undeletePortfolio(portfolioId, restoreKey).then(\n    (portfolio) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: `Portfolio ${portfolio.name} has been restored`\n        }\n      });\n      return dispatch(fetchPortfolios(viewState));\n    }\n  );\n};\n\nexport const removePortfolio = (portfolioId, viewState = {}) => (\n  dispatch,\n  getState\n) => {\n  dispatch({\n    type: ActionTypes.DELETE_TEMPORARY_PORTFOLIO,\n    payload: portfolioId\n  });\n  return dispatch({\n    type: ActionTypes.REMOVE_PORTFOLIO,\n    payload: PortfolioHelper.removePortfolio(portfolioId)\n      .then(({ restore_key }) => {\n        dispatch({\n          type: ADD_NOTIFICATION,\n          payload: {\n            variant: 'success',\n            title: 'Success removing portfolio',\n            dismissable: true,\n            description: (\n              <FormattedMessage\n                {...portfolioMessages.removePortfolioNotification}\n                values={{\n                  // eslint-disable-next-line react/display-name\n                  a: (chunks) => (\n                    <a\n                      href=\"#\"\n                      id={`undo-delete-portfolio-${portfolioId}`}\n                      onClick={(event) => {\n                        event.preventDefault();\n                        dispatch(\n                          undoRemovePortfolio(\n                            portfolioId,\n                            restore_key,\n                            viewState\n                          )\n                        );\n                      }}\n                    >\n                      {chunks}\n                    </a>\n                  )\n                }}\n              />\n            )\n          }\n        });\n        const { meta, data } = getState().portfolioReducer.portfolios;\n        return dispatch(\n          fetchPortfolios({\n            ...viewState,\n            ...meta,\n            offset: data.length === 0 ? 0 : meta.offset\n          })\n        );\n      })\n      .catch((error) => {\n        dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n        throw error;\n      })\n  });\n};\n\nexport const selectPortfolioItem = (portfolioItem) => ({\n  type: ActionTypes.SELECT_PORTFOLIO_ITEM,\n  payload: portfolioItem\n});\n\nexport const undoRemoveProductsFromPortfolio = (restoreData, portfolioId) => (\n  dispatch\n) => {\n  dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_PENDING` });\n  return PortfolioHelper.restorePortfolioItems(restoreData)\n    .then(() =>\n      dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .then(() => dispatch({ type: CLEAR_NOTIFICATIONS }))\n    .then(() => dispatch(fetchPortfolioItemsWithPortfolio(portfolioId)))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: 'Products have been restored'\n        }\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const removeProductsFromPortfolio = (\n  portfolioItems,\n  portfolioName,\n  firstSelectedProduct\n) => (dispatch, getState) => {\n  dispatch({\n    type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_PENDING`\n  });\n  const {\n    portfolioReducer: {\n      portfolioItems: { meta },\n      selectedPortfolio: { id: portfolioId }\n    }\n  } = getState();\n  return PortfolioHelper.removePortfolioItems(portfolioItems)\n    .then((data) =>\n      dispatch(\n        fetchPortfolioItemsWithPortfolio(portfolioId, {\n          offset: 0,\n          limit: meta.limit,\n          filter: ''\n        })\n      ).then(() => data)\n    )\n    .then((data) => {\n      return dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'Products removed',\n          dismissable: true,\n          description: (\n            <FormattedMessage\n              {...portfolioMessages.removeItemsNotification}\n              values={{\n                count: portfolioItems.length,\n                productName: firstSelectedProduct.name,\n                portfolioName,\n                // eslint-disable-next-line react/display-name\n                b: (chunks) => <b>{chunks}</b>,\n                // eslint-disable-next-line react/display-name\n                a: (chunks) => (\n                  <a\n                    href=\"#\"\n                    id={`restore-portfolio-item-${portfolioId}`}\n                    onClick={(event) => {\n                      event.preventDefault();\n                      dispatch(\n                        undoRemoveProductsFromPortfolio(data, portfolioId)\n                      );\n                    }}\n                  >\n                    {chunks}\n                  </a>\n                )\n              }}\n            />\n          )\n        }\n      });\n    })\n    .then(() =>\n      dispatch({ type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const copyPortfolio = (id) => (dispatch) => {\n  dispatch({ type: 'COPY_PORTFOLIO_PENDING' });\n  return PortfolioHelper.copyPortfolio(id)\n    .then((portfolio) => {\n      dispatch({ type: 'COPY_PORTFOLIO_FULFILLED' });\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a portfolio',\n          description: `${portfolio.name} has been copied.`,\n          dismissable: true\n        }\n      });\n      return portfolio;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_REJECTED', payload: err })\n    );\n};\n\nexport const copyPortfolioItem = (\n  portfolioItemId,\n  copyObject,\n  newPortfolio\n) => (dispatch) => {\n  return PortfolioHelper.copyPortfolioItem(portfolioItemId, copyObject)\n    .then((data) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a product',\n          description: `${data.name} has been copied into ${newPortfolio.name}`,\n          dismissable: true\n        }\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_ITEM_REJECTED', payload: err })\n    );\n};\n\nexport const resetSelectedPortfolio = () => ({\n  type: ActionTypes.RESET_SELECTED_PORTFOLIO\n});\n\nexport const updatePortfolioItem = (values) => (dispatch, getState) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM,\n    payload: values\n  });\n  return PortfolioHelper.updatePortfolioItem(values, { getState })\n    .then((data) => {\n      dispatch({ type: ActionTypes.UPDATE_PORTFOLIO_ITEM, payload: data });\n      return data;\n    })\n    .then((item) =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: `Product \"${item.name}\" was successfully updated`,\n          dismissable: true\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_ITEM_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const getPortfolioItemDetail = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_PENDING` });\n  return PortfolioHelper.getPortfolioItemDetail(params).then(\n    ([portfolioItem, source]) =>\n      dispatch({\n        type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_FULFILLED`,\n        payload: {\n          portfolioItem,\n          source\n        }\n      })\n  );\n};\n\nexport const setOrFetchPortfolio = (id, portfolios) => {\n  const existingPorfolio = portfolios?.data?.find(\n    (portfolio) => portfolio.id === id\n  );\n\n  if (existingPorfolio) {\n    return {\n      type: `${ActionTypes.FETCH_PORTFOLIO}_FULFILLED`,\n      payload: existingPorfolio\n    };\n  }\n\n  return fetchSelectedPortfolio(id);\n};\n","import { defineMessages } from 'react-intl';\n\nconst labelMessages = defineMessages({\n  shared: {\n    id: 'common.labels.shared',\n    defaultMessage: 'Shared'\n  },\n  portfolio: {\n    id: 'common.labels.portfolio',\n    defaultMessage: 'Portfolio'\n  },\n  platform: {\n    id: 'common.labels.platform',\n    defaultMessage: 'Platform'\n  },\n  name: {\n    id: 'common.labels.name',\n    defaultMessage: 'Name'\n  },\n  description: {\n    id: 'common.labels.description',\n    defaultMessage: 'Description'\n  },\n  loading: {\n    id: 'common.labels.loading',\n    defaultMessage: 'Loading'\n  },\n  cancel: {\n    id: 'common.labels.cancel',\n    defaultMessage: 'Cancel'\n  },\n  save: {\n    id: 'common.labels.save',\n    defaultMessage: 'Save'\n  },\n  confirm: {\n    id: 'common.labels.confirm',\n    defaultMessage: 'Confirm'\n  },\n  create: {\n    id: 'common.labels.create',\n    defaultMessage: 'Create'\n  },\n  owner: {\n    id: 'common.labels.owner',\n    defaultMessage: 'Owner'\n  },\n  sortBy: {\n    id: 'common.labels.sort-by',\n    defaultMessage: 'Sort by'\n  },\n  updated: {\n    id: 'common.labels.updated',\n    defaultMessage: 'Updated'\n  },\n  created: {\n    id: 'common.states.created',\n    defaultMessage: 'Created'\n  },\n  product: {\n    id: 'common.labels.product',\n    defaultMessage: 'Product'\n  },\n  status: {\n    id: 'common.labels.id',\n    defaultMessage: 'Status'\n  }\n});\n\nexport default labelMessages;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\nimport { InternalSelect } from '@data-driven-forms/pf4-component-mapper/dist/cjs/select';\nimport {\n  FormGroup,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\nimport { defineMessage } from 'react-intl';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst createOptions = (options, inputValue, isRequired, optionsMessages) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [...options];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [...selectOptions]\n    : [\n        { label: isRequired ? optionsMessages.choose : optionsMessages.none },\n        ...selectOptions\n      ];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  multi,\n  loadOptions,\n  meta,\n  ...rest\n}) => {\n  const formatMessage = useFormatMessage();\n  const optionsMessages = useRef({\n    none: formatMessage(\n      defineMessage({\n        id: 'forms.select.options.none',\n        defaultMessage: 'None'\n      })\n    ),\n    choose: formatMessage(\n      defineMessage({\n        id: 'forms.select.options.choose',\n        defaultMessage: 'Please choose'\n      })\n    )\n  });\n  const [initialFetch, setInitialFetch] = useState(true);\n  const formOptions = useFormApi();\n  let loadOptionsOverride = loadOptions;\n  if (loadOptions && meta.initial) {\n    const lookupArguments = Array.isArray(meta.initial)\n      ? meta.initial.map((option) =>\n          typeof option === 'object' ? option.value : option\n        )\n      : [meta.initial];\n    loadOptionsOverride = (filterValue) => {\n      return initialFetch\n        ? loadOptions(filterValue, lookupArguments).then((initialOptions) => {\n            return loadOptions(filterValue).then((options) => {\n              setInitialFetch(false);\n              return [\n                ...initialOptions,\n                ...options.filter(\n                  ({ value }) =>\n                    !initialOptions.find((option) => option.value === value)\n                )\n              ];\n            });\n          })\n        : loadOptions(filterValue);\n    };\n  }\n\n  return (\n    <InternalSelect\n      hideSelectedOptions={false}\n      menuIsPortal\n      {...input}\n      {...rest}\n      loadOptions={loadOptionsOverride}\n      onChange={(value, ...args) => {\n        if (rest.onChange) {\n          rest.onChange(value);\n          formOptions.change(input.name, value);\n        } else {\n          input.onChange(value, ...args);\n        }\n      }}\n      isMulti={multi}\n      options={\n        !loadOptions\n          ? createOptions(\n              options,\n              input.value,\n              isRequired,\n              optionsMessages.current\n            )\n          : undefined\n      }\n      isDisabled={isDisabled}\n      closeMenuOnSelect={!multi}\n    />\n  );\n};\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.any,\n      label: PropTypes.string.isRequired\n    })\n  ),\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  isSearchable: PropTypes.bool,\n  FieldProvider: PropTypes.any,\n  multi: PropTypes.bool,\n  loadOptions: PropTypes.func,\n  meta: PropTypes.shape({\n    initial: PropTypes.any\n  }).isRequired\n};\n\nSelect.defaultProps = {\n  isSearchable: false,\n  multi: false,\n  options: []\n};\n\nconst Pf4SelectWrapper = (props) => {\n  const {\n    componentType,\n    label,\n    isRequired,\n    helperText,\n    meta,\n    description,\n    hideLabel,\n    dataType,\n    initialKey,\n    id,\n    initialValue,\n    ...rest\n  } = useFieldApi(props);\n  const { error, touched } = meta;\n  const showError = touched && error;\n  const { name } = rest.input;\n\n  return (\n    <FormGroup\n      isRequired={isRequired}\n      label={!hideLabel && label}\n      fieldId={id || name}\n      validated={showError ? 'error' : 'default'}\n      helperText={helperText}\n      helperTextInvalid={meta.error}\n    >\n      {description && (\n        <TextContent>\n          <Text component={TextVariants.small}>{description}</Text>\n        </TextContent>\n      )}\n      <Select\n        id={id || name}\n        meta={meta}\n        label={label}\n        validated={showError ? 'error' : 'default'}\n        isRequired={isRequired}\n        {...rest}\n      />\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool,\n  dataType: PropTypes.string,\n  initialKey: PropTypes.any,\n  initialValue: PropTypes.any\n};\n\nexport default Pf4SelectWrapper;\n","import React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem, Button, Level, Tooltip } from '@patternfly/react-core';\nimport PlusIcon from '@patternfly/react-icons/dist/js/icons/plus-icon';\nimport { InternalSelect } from '@data-driven-forms/pf4-component-mapper/dist/cjs/select';\nimport FieldArray from '@data-driven-forms/react-form-renderer/dist/cjs/field-array';\n\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport formsMessages from '../../messages/forms.messages';\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport { StyledLevelItem } from '../../presentational-components/styled-components/level';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst initialState = {\n  /**\n   * This counter will re-initialize select components withouth having to re-initialize the whole form after new group was added\n   */\n  resetGroup: 0,\n  group: undefined,\n  permission: undefined\n};\n\nconst shareReducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'setGroup':\n      return { ...state, group: payload };\n    case 'setPermission':\n      return { ...state, permission: payload };\n    case 'resetField':\n      return {\n        group: undefined,\n        permission: undefined,\n        resetGroup: state.resetGroup + 1\n      };\n  }\n\n  return state;\n};\n\nexport const NewGroupSelect = ({\n  loadOptions,\n  permissions,\n  addGroup,\n  currentGroups\n}) => {\n  const [{ group, permission, resetGroup }, dispatch] = useReducer(\n    shareReducer,\n    initialState\n  );\n  const formatMessage = useFormatMessage();\n\n  let tooltipContent;\n  if (!group && !permission) {\n    tooltipContent = formatMessage(portfolioMessages.shareErrorMissingData);\n  } else if (group && !permission) {\n    tooltipContent = formatMessage(\n      portfolioMessages.shareErrorMissingPermission\n    );\n  } else if (permission && !group) {\n    tooltipContent = formatMessage(portfolioMessages.shareErrorMissingGroup);\n  } else {\n    tooltipContent = formatMessage(portfolioMessages.shareTooltip);\n  }\n\n  const hasError = !!currentGroups.find(\n    (item) => item.group_uuid === group?.value\n  );\n\n  return (\n    <Level>\n      <StyledLevelItem grow>\n        <Grid hasGutter className=\"share-column\">\n          <GridItem span={7}>\n            <InternalSelect\n              name=\"select-group\"\n              key={resetGroup}\n              isSearchable\n              isClearable\n              simpleValue={false}\n              menuIsPortal\n              loadOptions={asyncFormValidator(loadOptions)}\n              placeholder={formatMessage(formsMessages.groupsPlaceholder)}\n              onChange={(value) =>\n                dispatch({ type: 'setGroup', payload: value })\n              }\n              validated={hasError ? 'error' : 'default'}\n              value={group}\n            />\n            {hasError && (\n              <div\n                className=\"pf-c-form__helper-text pf-m-error\"\n                id=\"permission-helper\"\n                aria-live=\"polite\"\n              >\n                {formatMessage(portfolioMessages.shareDuplicate)}\n              </div>\n            )}\n          </GridItem>\n          <GridItem span={5}>\n            <InternalSelect\n              name=\"select-permission\"\n              options={permissions}\n              menuIsPortal\n              placeholder={formatMessage(formsMessages.permissionsPlaceholder)}\n              onChange={(value) =>\n                dispatch({ type: 'setPermission', payload: value })\n              }\n              value={permission}\n            />\n          </GridItem>\n        </Grid>\n      </StyledLevelItem>\n      <StyledLevelItem alignSelf=\"baseline\">\n        <Tooltip content={<p>{tooltipContent}</p>}>\n          <span>\n            <Button\n              id=\"add-new-group\"\n              variant=\"link\"\n              isDisabled={!group || !permission}\n              onClick={() => {\n                addGroup({\n                  groupName: group.label,\n                  group_uuid: group.value,\n                  permissions: permission\n                });\n                dispatch({ type: 'resetField' });\n              }}\n            >\n              <PlusIcon />\n            </Button>\n          </span>\n        </Tooltip>\n      </StyledLevelItem>\n    </Level>\n  );\n};\n\nNewGroupSelect.propTypes = {\n  loadOptions: PropTypes.func.isRequired,\n  permissions: PropTypes.any,\n  addGroup: PropTypes.func.isRequired,\n  currentGroups: PropTypes.array\n};\n\nconst ShareGroupSelect = (props) => (\n  <FieldArray name=\"shared-groups\">\n    {({ fields: { push, value } }) => (\n      <NewGroupSelect {...props} addGroup={push} currentGroups={value} />\n    )}\n  </FieldArray>\n);\n\nexport default ShareGroupSelect;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { InternalSelect } from '@data-driven-forms/pf4-component-mapper/dist/cjs/select';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\nimport FieldArray from '@data-driven-forms/react-form-renderer/dist/cjs/field-array';\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n  GridItem,\n  Grid,\n  Button,\n  Level\n} from '@patternfly/react-core';\nimport TrashIcon from '@patternfly/react-icons/dist/js/icons/trash-icon';\nimport { StyledLevelItem } from '../../presentational-components/styled-components/level';\nimport styled from 'styled-components';\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst StyledText = styled(Text)`\n  line-height: 36px !important;\n`;\n\nconst SharedGroup = ({ name, remove, index, permissionVerbs }) => {\n  const { input } = useFieldApi({ name });\n  return (\n    <Level>\n      <StyledLevelItem grow>\n        <Grid hasGutter className=\"share-column\">\n          <GridItem span={7}>\n            <TextContent>\n              <StyledText component={TextVariants.h4}>\n                {input.value.groupName}\n              </StyledText>\n            </TextContent>\n          </GridItem>\n          <GridItem span={5}>\n            <InternalSelect\n              name={name}\n              menuIsPortal\n              options={permissionVerbs}\n              value={input.value.permissions}\n              onChange={(permissions) =>\n                input.onChange({\n                  ...input.value,\n                  permissions\n                })\n              }\n            />\n          </GridItem>\n        </Grid>\n      </StyledLevelItem>\n      <StyledLevelItem>\n        <Button\n          id={`remove-share-${index}`}\n          variant=\"plain\"\n          onClick={() => remove(index)}\n        >\n          <TrashIcon />\n        </Button>\n      </StyledLevelItem>\n    </Level>\n  );\n};\n\nSharedGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  remove: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  permissionVerbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nconst ShareGroupEdit = ({ name, permissionVerbs }) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <FieldArray name={name}>\n      {({ fields: { map, remove, length } }) => (\n        <Fragment>\n          {length === 0 && (\n            <TextContent>\n              <Text>{formatMessage(portfolioMessages.noShares)}</Text>\n            </TextContent>\n          )}\n          {length > 0 && (\n            <TextContent>\n              <Text component=\"small\">\n                {formatMessage(portfolioMessages.shareGroupsAccess)}\n              </Text>\n            </TextContent>\n          )}\n          {map((name, index) => (\n            <SharedGroup\n              key={name}\n              name={name}\n              remove={remove}\n              index={index}\n              permissionVerbs={permissionVerbs}\n            />\n          ))}\n        </Fragment>\n      )}\n    </FieldArray>\n  );\n};\n\nShareGroupEdit.propTypes = {\n  permissionVerbs: PropTypes.array,\n  name: PropTypes.string.isRequired\n};\n\nexport default ShareGroupEdit;\n","const { defineMessages } = require('react-intl');\n\nconst schemasMessages = defineMessages({\n  'schemas.portfolio.name': {\n    id: 'schemas.portfolio.name',\n    defaultMessage: 'Name'\n  },\n  'schemas.portfolio.description': {\n    id: 'schemas.portfolio.description',\n    defaultMessage: 'Description'\n  },\n  'schemas.portfolio-item.name': {\n    id: 'schemas.portfolio-item.name',\n    defaultMessage: 'Name'\n  },\n  'schemas.portfolio-item.description': {\n    id: 'schemas.portfolio-item.description',\n    defaultMessage: 'Description'\n  },\n  'schemas.portfolio-item.long_description': {\n    id: 'schemas.portfolio-item.long_description',\n    defaultMessage: 'Long description'\n  },\n  'schemas.portfolio-item.vendor': {\n    id: 'schemas.portfolio-item.vendor',\n    defaultMessage: 'Vendor'\n  },\n  'schemas.portfolio-item.documentation_url': {\n    id: 'schemas.portfolio-item.documentation_url',\n    defaultMessage: 'Documentation URL'\n  },\n  'schemas.portfolio-item.support_url': {\n    id: 'schemas.portfolio-item.support_url',\n    defaultMessage: 'Support URL'\n  },\n  'share.new.description': {\n    id: 'share.new.description',\n    defaultMessage: 'Invite group'\n  }\n});\n\nexport default schemasMessages;\n","import schemasMessages from '../messages/schemas.messages';\n\nconst translateString = (string, formatMessage) => {\n  try {\n    return formatMessage(string);\n  } catch {\n    return string;\n  }\n};\n\nconst translateField = (field, formatMessage, translateKeys) => {\n  const fieldCopy = { ...field };\n  translateKeys.forEach((key) => {\n    if (\n      Object.prototype.hasOwnProperty.call(fieldCopy, key) &&\n      typeof fieldCopy[key] === 'string' &&\n      schemasMessages[fieldCopy[key]]\n    ) {\n      fieldCopy[key] = translateString(\n        schemasMessages[fieldCopy[key]],\n        formatMessage\n      );\n    }\n  });\n  if (\n    Object.prototype.hasOwnProperty.call(fieldCopy, 'options') &&\n    Array.isArray(fieldCopy.options)\n  ) {\n    fieldCopy.options = fieldCopy.options.map((option) =>\n      translateString(schemasMessages[option.label])\n        ? {\n            ...option,\n            label: translateString(schemasMessages[option.label], formatMessage)\n          }\n        : option\n    );\n  }\n\n  if (\n    Object.prototype.hasOwnProperty.call(fieldCopy, 'fields') &&\n    Array.isArray(fieldCopy.fields)\n  ) {\n    fieldCopy.fields = fieldCopy.fields.map((field) =>\n      translateField(field, formatMessage, translateKeys)\n    );\n  }\n\n  return fieldCopy;\n};\n\nconst translateSchema = (\n  schema,\n  formatMessage,\n  translateKeys = ['label', 'placeholder', 'title', 'description']\n) => {\n  const schemaCopy = { ...schema };\n  schemaCopy.fields = schemaCopy.fields.map((field) =>\n    translateField(field, formatMessage, translateKeys)\n  );\n  return schemaCopy;\n};\n\nexport default translateSchema;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\nimport { FormGroup, TextContent, Text } from '@patternfly/react-core';\nimport labelMessages from '../../messages/labels.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst CopyNameDisplay = ({ label, getName, fieldSpy }) => {\n  const formatMessage = useFormatMessage();\n  const [name, setName] = useState(formatMessage(labelMessages.loading));\n  const {\n    input: { value },\n    meta: { error }\n  } = useFieldApi({\n    name: fieldSpy\n  });\n  useEffect(() => {\n    getName(value).then((name) => {\n      setName(name);\n    });\n  }, [value]);\n\n  return (\n    <FormGroup label={label} helperText={error} fieldId={value}>\n      <TextContent>\n        <Text component=\"h6\">{name}</Text>\n      </TextContent>\n    </FormGroup>\n  );\n};\n\nCopyNameDisplay.propTypes = {\n  label: PropTypes.string.isRequired,\n  getName: PropTypes.func.isRequired,\n  fieldSpy: PropTypes.string.isRequired\n};\n\nexport default CopyNameDisplay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip, ChipGroup, FormGroup } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\n\nconst InitialChips = ({ name, label }) => {\n  const {\n    input: { value, onChange }\n  } = useFieldApi({ name });\n  const handleRemove = (id) => onChange(value.filter((item) => item.id !== id));\n  if (value?.length === 0) {\n    return null;\n  }\n\n  return (\n    <FormGroup label={label}>\n      <ChipGroup>\n        {value.map(({ name, id }) => (\n          <Chip key={id} onClick={() => handleRemove(id)}>\n            {name}\n          </Chip>\n        ))}\n      </ChipGroup>\n    </FormGroup>\n  );\n};\n\nInitialChips.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.node.isRequired\n};\n\nexport default InitialChips;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactFormRender from '@data-driven-forms/react-form-renderer/dist/cjs/form-renderer';\nimport validatorMapper from '@data-driven-forms/react-form-renderer/dist/cjs/validator-mapper';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport TextField from '@data-driven-forms/pf4-component-mapper/dist/cjs/text-field';\nimport Textarea from '@data-driven-forms/pf4-component-mapper/dist/cjs/textarea';\nimport SubForm from '@data-driven-forms/pf4-component-mapper/dist/cjs/sub-form';\nimport PlainText from '@data-driven-forms/pf4-component-mapper/dist/cjs/plain-text';\nimport Checkbox from '@data-driven-forms/pf4-component-mapper/dist/cjs/checkbox';\nimport Radio from '@data-driven-forms/pf4-component-mapper/dist/cjs/radio';\nimport Switch from '@data-driven-forms/pf4-component-mapper/dist/cjs/switch';\n\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\nimport ShareGroupSelect from '../../forms/form-fields/share-group-select';\nimport ShareGroupEdit from '../../forms/form-fields/share-group-edit';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport translateSchema from '../../utilities/translate-schema';\nimport Select from '@data-driven-forms/pf4-component-mapper/dist/cjs/select';\nimport CopyNameDisplay from '../../forms/form-fields/copy-name-display';\nimport InitialChips from '../../forms/form-fields/initial-chips';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nexport const catalogComponentMapper = {\n  [componentTypes.TEXT_FIELD]: TextField,\n  [componentTypes.TEXTAREA]: Textarea,\n  [componentTypes.PLAIN_TEXT]: PlainText,\n  [componentTypes.SELECT]: Pf4SelectWrapper,\n  [componentTypes.CHECKBOX]: Checkbox,\n  [componentTypes.RADIO]: Radio,\n  [componentTypes.SWITCH]: Switch,\n  [componentTypes.SUB_FORM]: SubForm,\n  'initial-select': Select,\n  'share-group-select': ShareGroupSelect,\n  'share-group-edit': ShareGroupEdit,\n  'copy-name-display': CopyNameDisplay,\n  'textarea-field': Textarea,\n  'select-field': Pf4SelectWrapper,\n  'initial-chips': InitialChips\n};\n\nconst catalogValidatorMapper = {\n  ...validatorMapper,\n  'exact-length-validator': validatorMapper[validatorTypes.EXACT_LENGTH],\n  'max-length-validator': validatorMapper[validatorTypes.MAX_LENGTH],\n  'min-items-validator': validatorMapper[validatorTypes.MIN_ITEMS],\n  'min-length-validator': validatorMapper[validatorTypes.MIN_LENGTH],\n  'pattern-validator': validatorMapper[validatorTypes.PATTERN],\n  'required-validator': validatorMapper[validatorTypes.REQUIRED],\n  'url-validator': validatorMapper[validatorTypes.URL]\n};\n\nexport const catalogValidatorAlias = {\n  'exact-length-validator': validatorTypes.EXACT_LENGTH,\n  'max-length-validator': validatorTypes.MAX_LENGTH,\n  'min-items-validator': validatorTypes.MIN_ITEMS,\n  'min-length-validator': validatorTypes.MIN_LENGTH,\n  'pattern-validator': validatorTypes.PATTERN,\n  'required-validator': validatorTypes.REQUIRED,\n  'url-validator': validatorTypes.URL\n};\n\nconst FormRenderer = ({ formContainer, templateProps, schema, ...rest }) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <div>\n      <ReactFormRender\n        componentMapper={catalogComponentMapper}\n        FormTemplate={(props) => <FormTemplate {...props} {...templateProps} />}\n        validatorMapper={catalogValidatorMapper}\n        schema={translateSchema(schema, formatMessage)}\n        {...rest}\n      />\n    </div>\n  );\n};\n\nFormRenderer.propTypes = {\n  formContainer: PropTypes.oneOf(['default', 'modal']),\n  templateProps: PropTypes.object,\n  schema: PropTypes.object.isRequired\n};\n\nFormRenderer.defaultProps = {\n  formContainer: 'default',\n  templateProps: {}\n};\n\nexport default memo(FormRenderer);\n","import { decodeState } from './uri-state-manager';\n\nconst useInitialUriHash = () => decodeState(window.location.hash.substring(1));\n\nexport default useInitialUriHash;\n","import React from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\n\nexport const UnauthorizedRedirect = () => {\n  const location = useLocation();\n  return (\n    <Redirect\n      to={{\n        pathname: '/403',\n        state: {\n          from: location\n        }\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Level, Toolbar, ToolbarGroup } from '@patternfly/react-core';\n\nexport const StyledToolbar = styled(({ noWrap, ...props }) => (\n  <Toolbar {...props} />\n))`\n  background-color: #ffffff;\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  position: relative;\n  top: 1px;\n  .pf-c-toolbar__content-section {\n    flex-wrap: ${({ noWrap }) => (noWrap ? 'nowrap' : 'wrap')};\n  }\n`;\n\nexport const StyledToolbarGroup = styled(ToolbarGroup)`\n  flex-wrap: wrap;\n`;\n\nexport const TopToolbarWrapper = styled.div`\n  background-color: #ffffff;\n  .pf-c-breadcrumb__item {\n    .active {\n      color: var(--pf-c-breadcrumb__item--Color);\n      text-decoration: none;\n      pointer-events: none;\n    }\n  }\n  h1,\n  h2 {\n    margin-bottom: 0 !important;\n    @supports not (overflow-wrap: anywhere) {\n      word-break: break-all;\n    }\n    @supports (overflow-wrap: anywhere) {\n      overflow-wrap: anywhere;\n    }\n  }\n  .top-toolbar-title {\n    min-width: 200px;\n  }\n  .top-toolbar-title-description {\n    word-break: break-word;\n  }\n  .ins-c-primary-toolbar {\n    padding: 0;\n  }\n  .pf-c-toolbar__content {\n    padding: 0;\n  }\n`;\n\nexport const TopToolbarTitleContainer = styled(Level)`\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n  }\n`;\n","import React from 'react';\n\nexport const Bold = (chunks) => <b>{chunks}</b>;\n","import * as ActionTypes from '../action-types';\nimport * as OrderProcessHelper from '../../helpers/order-process/order-process-helper';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\n\nexport const fetchOrderProcesses = (pagination) => (dispatch, getState) => {\n  const { sortBy, orderProcesses } = getState().orderProcessReducer;\n\n  let finalPagination = pagination;\n\n  if (!pagination && orderProcesses) {\n    const { limit, offset } = orderProcesses.meta;\n    finalPagination = { limit, offset };\n  }\n\n  return dispatch({\n    type: ActionTypes.FETCH_ORDER_PROCESSES,\n    meta: {\n      ...finalPagination,\n      filter: pagination?.filterValue || '',\n      storeState: true,\n      stateKey: 'orderProcesses'\n    },\n    payload: OrderProcessHelper.listOrderProcesses(\n      pagination?.filterValue,\n      finalPagination,\n      sortBy\n    )\n  });\n};\n\nexport const addOrderProcess = (processData, intl) => ({\n  type: ActionTypes.ADD_ORDER_PROCESS,\n  payload: OrderProcessHelper.addOrderProcess(processData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: intl.formatMessage(\n          orderProcessesMessages.addProcessSuccessTitle\n        ),\n        description: intl.formatMessage(\n          orderProcessesMessages.addProcessSuccessDescription\n        )\n      }\n    }\n  }\n});\n\nexport const sortOrderProcesses = (sortBy) => ({\n  type: ActionTypes.SORT_ORDER_PROCESSES,\n  payload: sortBy\n});\n\nexport const setOrderProcess = (...args) => ({\n  type: ActionTypes.SET_ORDER_PROCESS,\n  payload: OrderProcessHelper.setOrderProcesses(...args)\n});\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport asyncFormValidator from '../utilities/async-form-validator';\n\nconst resolveNewProcessProps = (props, _fieldApi, formOptions) => {\n  const initialProcessess = formOptions.getState().values['initial-tags'];\n  return {\n    key: initialProcessess.length, // used to trigger options re-load and disable options update\n    loadOptions: (...args) =>\n      props.loadOptions(...args).then((data) =>\n        data.map((option) => ({\n          ...option,\n          ...(initialProcessess.find(({ id }) => id === option.value) // we have to disable options that are already in the chip group\n            ? { isDisabled: true }\n            : {})\n        }))\n      )\n  };\n};\n\nconst createSchema = (existingTagsMessage, loadTags) => ({\n  fields: [\n    {\n      component: componentTypes.SELECT,\n      name: 'new-tags',\n      label: '',\n      loadOptions: asyncFormValidator(loadTags),\n      multi: true,\n      isSearchable: true,\n      isClearable: true,\n      resolveProps: resolveNewProcessProps\n    },\n    {\n      component: 'initial-chips',\n      name: 'initial-tags',\n      label: existingTagsMessage\n    }\n  ]\n});\n\nexport default createSchema;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport difference from 'lodash/difference';\nimport {\n  Modal,\n  Stack,\n  StackItem,\n  TextContent,\n  Text\n} from '@patternfly/react-core';\nimport FormRenderer from '../common/form-renderer';\nimport createSchema from '../../forms/set-object-tags.schema';\nimport { WorkflowLoader } from '../../presentational-components/shared/loader-placeholders';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport actionMessages from '../../messages/actions.messages';\n\nconst TaggingModal = ({\n  loadTags,\n  onSubmit,\n  getInitialTags,\n  onClose,\n  title,\n  subTitle,\n  existingTagsMessage,\n  ...rest\n}) => {\n  const formatMessage = useFormatMessage();\n  const [data, setData] = useState();\n  useEffect(() => {\n    getInitialTags().then((data) => setData(data));\n  }, []);\n  const handleSubmit = (formData) => {\n    const unlinkArray = data\n      .filter(\n        ({ id }) =>\n          !formData['initial-tags'].find((process) => id === process.id)\n      )\n      .map(({ id }) => id);\n    /**\n     * prevent uneccesary unlink and link API calls of the same tag\n     */\n    const linkDiff = difference(formData['new-tags'], unlinkArray);\n    const unLinkDiff = difference(unlinkArray, formData['new-tags']);\n    const toLinkTags = linkDiff.filter(\n      (id) => !data.find((item) => item.id === id)\n    );\n    const toUnlinkTags = unLinkDiff.filter((id) =>\n      data.find((item) => item.id === id)\n    );\n    if (toUnlinkTags.length > 0 || toLinkTags.length > 0) {\n      return onSubmit(toLinkTags, toUnlinkTags);\n    }\n  };\n\n  return (\n    <Modal isOpen title={title} onClose={onClose} variant=\"small\">\n      {!data ? (\n        <WorkflowLoader />\n      ) : (\n        <Stack hasGutter>\n          <StackItem>\n            <TextContent>\n              <Text id=\"sub-title\">{subTitle}</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormRenderer\n              {...rest}\n              subscription={{ values: true }}\n              initialValues={{\n                'initial-tags': data\n              }}\n              schema={createSchema(existingTagsMessage, loadTags)}\n              onSubmit={handleSubmit}\n              onCancel={onClose}\n              clearedValue={[]}\n              templateProps={{\n                submitLabel: formatMessage(actionMessages.save),\n                disableSubmit: ['pristine']\n              }}\n            />\n          </StackItem>\n        </Stack>\n      )}\n    </Modal>\n  );\n};\n\nTaggingModal.propTypes = {\n  loadTags: PropTypes.func.isRequired,\n  getInitialTags: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  title: PropTypes.node.isRequired,\n  subTitle: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  existingTagsMessage: PropTypes.node.isRequired\n};\n\nexport default TaggingModal;\n","export const FETCH_SERVICE_PLANS = 'FETCH_SERVICE_PLANS';\nexport const FETCH_SERVICE_PLAN_PARAMETERS = 'FETCH_SERVICE_PLAN_PARAMETERS';\nexport const UPDATE_SERVICE_DATA = 'UPDATE_SERVICE_DATA';\nexport const SUBMIT_SERVICE_ORDER = 'SUBMIT_SERVICE_ORDER';\nexport const SET_SELECTED_PLAN = 'SET_SELECTED_PLAN';\nexport const LIST_ORDERS = 'LIST_ORDERS';\nexport const CANCEL_ORDER = 'CANCEL_ORDER';\nexport const SET_ORDERS = 'SET_ORDERS';\nexport const FETCH_ORDERS = 'FETCH_ORDERS';\n\nexport const FETCH_PLATFORM = 'FETCH_PLATFORM';\nexport const FETCH_PLATFORMS = 'FETCH_PLATFORMS';\nexport const FETCH_PLATFORM_ITEMS = 'FETCH_PLATFORM_ITEMS';\nexport const FETCH_PLATFORM_ITEM = 'FETCH_PLATFORM_ITEM';\nexport const FETCH_MULTIPLE_PLATFORM_ITEMS = 'FETCH_MULTIPLE_PLATFORM_ITEMS';\nexport const FILTER_PLATFORM_ITEMS = 'FILTER_PLATFORM_ITEMS';\nexport const FETCH_PLATFORM_INVENTORIES = 'FETCH_PLATFORM_INVENTORIES';\nexport const SET_INVENTORIES_LOADING_STATE = 'SET_INVENTORIES_LOADING_STATE';\n\nexport const FETCH_PORTFOLIOS = 'FETCH_PORTFOLIOS';\nexport const FETCH_PORTFOLIO_ITEM = 'FETCH_PORTFOLIO_ITEM';\nexport const FETCH_PORTFOLIO_ITEMS = 'FETCH_PORTFOLIO_ITEMS';\nexport const FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO =\n  'FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO';\nexport const FETCH_PORTFOLIO = 'FETCH_PORTFOLIO';\nexport const FILTER_PORTFOLIO_ITEMS = 'FILTER_PORTFOLIO_ITEMS';\nexport const ADD_PORTFOLIO = 'ADD_PORTFOLIO';\nexport const ADD_TO_PORTFOLIO = 'ADD_TO_PORTFOLIO';\nexport const UPDATE_PORTFOLIO = 'UPDATE_PORTFOLIO';\nexport const REMOVE_PORTFOLIO = 'REMOVE_PORTFOLIO';\nexport const REMOVE_PORTFOLIO_ITEMS = 'REMOVE_PORTFOLIO_ITEMS';\nexport const RESTORE_PORTFOLIO_ITEMS = 'RESTORE_PORTFOLIO_ITEMS';\nexport const RESET_SELECTED_PORTFOLIO = 'RESET_SELECTED_PORTFOLIO';\nexport const ADD_TEMPORARY_PORTFOLIO = 'ADD_TEMPORARY_PORTFOLIO';\nexport const UPDATE_TEMPORARY_PORTFOLIO = 'UPDATE_TEMPORARY_PORTFOLIO';\nexport const DELETE_TEMPORARY_PORTFOLIO = 'DELETE_TEMPORARY_PORTFOLIO';\nexport const RESTORE_PORTFOLIO_PREV_STATE = 'RESTORE_PORTFOLIO_PREV_STATE';\nexport const SET_PORTFOLIO_ITEMS = 'SET_PORTFOLIO_ITEMS';\nexport const UPDATE_TEMPORARY_PORTFOLIO_ITEM =\n  'UPDATE_TEMPORARY_PORTFOLIO_ITEM';\nexport const RESTORE_PORTFOLIO_ITEM_PREV_STATE =\n  'RESTORE_PORTFOLIO_ITEM_PREV_STATE';\nexport const UPDATE_PORTFOLIO_ITEM = 'UPDATE_PORTFOLIO_ITEM';\n\nexport const FETCH_RBAC_GROUPS = 'FETCH_RBAC_GROUPS';\n\nexport const SHARE_PORTFOLIO = 'SHARE_PORTFOLIO';\nexport const UNSHARE_PORTFOLIO = 'UNSHARE_PORTFOLIO';\nexport const QUERY_PORTFOLIO = 'QUERY_PORTFOLIO';\n\nexport const FETCH_REQUESTS = 'FETCH_REQUESTS';\nexport const FETCH_ORDER_ITEMS = 'FETCH_ORDER_ITEMS';\n\n/**\n * Global redux loading state\n */\nexport const SET_LOADING_STATE = 'SET_LOADING_STATE';\n\n/**\n * OpenApi action\n */\nexport const SET_OPENAPI_SCHEMA = '@@open-api/set-schema';\n\n/**\n * Orders actions\n * TODO Prefix existing action types\n */\nexport const SET_ORDER_DETAIL = '@@orders/set-order-detail';\nexport const FETCH_APPROVAL_REQUESTS = '@@orders/fetch-order-requests';\n\n/*\n * Portfolio actions\n */\nexport const SELECT_PORTFOLIO_ITEM = '@@portfolio/SELECT_PORTFOLIO_ITEM';\n\n/**\n * Sources actions\n */\nexport const FETCH_SERVICE_OFFERING = '@@sources/FETCH_SERVICE_OFFERING';\nexport const SET_SOURCETYPE_ICONS = '@@sources/SET_SOURCETYPE_ICONS';\n\n/**\n * Breadcrumbs actions\n */\nexport const INITIALIZE_BREADCRUMBS = '@@breadcrumbs/INITIALIZE_BREADCRUMBS';\n\n/**\n * In18l actions\n */\n\nexport const INITIALIZE_I18N = '@@i18l/INITIALIZE_I18N';\n\n/*\n * Order processes actions\n */\nexport const FETCH_ORDER_PROCESSES = '@@order_processes/FETCH_ORDER_PROCESSES';\nexport const ADD_ORDER_PROCESS = '@@order_processes/ADD_ORDER_PROCESS';\nexport const SORT_ORDER_PROCESSES = '@@order_processes/SORT_ORDER_PROCESSES';\nexport const SET_ORDER_PROCESS = '@@order_processes/SET_ORDER_PROCESS';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\nimport { useHistory } from 'react-router-dom';\nimport {\n  listOrderProcesses,\n  getLinkedOrderProcesses\n} from '../../helpers/order-process/order-process-helper';\nimport { setOrderProcess } from '../../redux/actions/order-process-actions';\nimport { APP_NAME } from '../../utilities/constants';\nimport useQuery from '../../utilities/use-query';\nimport TaggingModal from '../common/tagging-modal';\nimport { Bold } from '../../presentational-components/shared/intl-rich-text-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\n\nconst SetOrderProcessModal = ({ pushParam, objectType, querySelector }) => {\n  const dispatch = useDispatch();\n  const formatMessage = useFormatMessage();\n  const { push } = useHistory();\n  const onCancel = () => push(pushParam);\n  const [query] = useQuery([querySelector]);\n  const loadOrderProcesses = (filter) =>\n    listOrderProcesses(filter).then(({ data }) =>\n      data.map(({ name, id }) => ({ label: name, value: id }))\n    );\n\n  const onSubmit = (toLink, toUnlink) => {\n    onCancel();\n    dispatch(\n      setOrderProcess(toLink, toUnlink, {\n        object_type: objectType,\n        app_name: APP_NAME[objectType],\n        object_id: query[querySelector]\n      })\n    ).then(() =>\n      dispatch(\n        addNotification({\n          dismissable: true,\n          variant: 'success',\n          title: formatMessage(\n            orderProcessesMessages.setOrderProcessNotificationTitle\n          ),\n          description: formatMessage(\n            orderProcessesMessages.setOrderProcessNotificationDescription,\n            {\n              linked: toLink.length,\n              unlinked: toUnlink.length\n            }\n          )\n        })\n      )\n    );\n  };\n\n  return (\n    <TaggingModal\n      getInitialTags={() =>\n        getLinkedOrderProcesses(objectType, query[querySelector]).then(\n          ({ data }) => data\n        )\n      }\n      title={formatMessage(orderProcessesMessages.setOrderProcess)}\n      onClose={onCancel}\n      onSubmit={onSubmit}\n      loadTags={loadOrderProcesses}\n      existingTagsMessage={formatMessage(\n        orderProcessesMessages.currentOrderProcesses\n      )}\n      subTitle={formatMessage(orderProcessesMessages.setOrderProcessSubtitle, {\n        strong: Bold,\n        objectType\n      })}\n    />\n  );\n};\n\nSetOrderProcessModal.propTypes = {\n  pushParam: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string\n  }).isRequired,\n  objectType: PropTypes.oneOf(['PortfolioItem', 'Portfolio']).isRequired,\n  querySelector: PropTypes.string.isRequired\n};\n\nexport default SetOrderProcessModal;\n","import React, { Fragment } from 'react';\nconst { useIntl } = require('react-intl');\n\nconst useFormatMessage = () => {\n  const { formatMessage } = useIntl();\n  return (message, values = {}) => {\n    const internalValues = Object.entries(values).reduce(\n      (acc, [key, value]) => {\n        return {\n          ...acc,\n          [key]:\n            typeof value === 'function'\n              ? (chunks) => <Fragment key={key}>{value(chunks)}</Fragment>\n              : value\n        };\n      },\n      {}\n    );\n    try {\n      return formatMessage(message, internalValues);\n    } catch (error) {\n      return `Unable to translate message. Definition: ${message}, values: ${values}, intl-error: ${error}`;\n    }\n  };\n};\n\nexport default useFormatMessage;\n","import { createContext } from 'react';\n\nconst AppContext = createContext({});\n\nexport default AppContext;\n","import {\n  getAxiosInstance,\n  getPortfolioApi,\n  getPortfolioItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { sanitizeValues } from '../shared/helpers';\nimport { defaultSettings } from '../shared/pagination';\n\nconst axiosInstance = getAxiosInstance();\nconst portfolioApi = getPortfolioApi();\nconst portfolioItemApi = getPortfolioItemApi();\n\nexport function listPortfolios(\n  filters = {},\n  { limit, offset, sortDirection = 'asc' } = defaultSettings\n) {\n  const filterQuery = Object.entries(filters).reduce((acc, [key, value]) => {\n    if (!value) {\n      return acc;\n    }\n\n    const partial =\n      key === 'sort_by'\n        ? `sort_by=${value}:${sortDirection}`\n        : `filter[${key}][contains_i]=${value}`;\n    return `${acc}&${partial}`;\n  }, '');\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios?limit=${limit}&offset=${offset}${filterQuery}`\n  );\n}\n\nexport function listPortfolioItems(limit = 50, offset = 0, filter = '') {\n  return axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n    )\n    .then((portfolioItems) => {\n      const portfolioReference = portfolioItems.data.reduce(\n        (acc, curr, index) =>\n          curr.portfolio_id\n            ? {\n                ...acc,\n                [curr.portfolio_id]: acc[curr.portfolio_id]\n                  ? [...acc[curr.portfolio_id], index]\n                  : [index]\n              }\n            : acc,\n        {}\n      );\n      return axiosInstance\n        .get(\n          `${CATALOG_API_BASE}/portfolios?${Object.keys(portfolioReference)\n            .map((id) => `filter[id][]=${id}`)\n            .join('&')}`\n        )\n        .then(({ data }) => ({\n          portfolioItems,\n          portfolioReference,\n          portfolios: data\n        }));\n    })\n    .then(({ portfolioItems, portfolioReference, portfolios }) => {\n      portfolios.forEach(\n        ({ id, name }) =>\n          portfolioReference[id] &&\n          portfolioReference[id].forEach((portfolioItemIndex) => {\n            portfolioItems.data[portfolioItemIndex].portfolioName = name;\n          })\n      );\n      return portfolioItems;\n    });\n}\n\nexport function getPortfolio(portfolioId) {\n  return portfolioApi.showPortfolio(portfolioId);\n}\n\nexport function getPortfolioItemsWithPortfolio(\n  portfolioId,\n  { limit, offset, filter = '' } = defaultSettings\n) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios/${portfolioId}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n}\n\n// TO DO - change to use the API call that adds multiple items to a portfolio when available\nexport async function addPortfolio(portfolioData, items) {\n  let portfolio = await portfolioApi.createPortfolio(portfolioData);\n  if (portfolio && items && items.length > 0) {\n    return addToPortfolio(portfolio, items);\n  }\n\n  return portfolio;\n}\n\nexport async function addToPortfolio(portfolioId, items) {\n  return Promise.all(\n    items.map((item) =>\n      portfolioItemApi.createPortfolioItem({\n        portfolio_id: portfolioId,\n        service_offering_ref: item\n      })\n    )\n  );\n}\n\nexport async function updatePortfolio({ id, ...portfolioData }, store) {\n  return await portfolioApi.updatePortfolio(\n    id,\n    sanitizeValues(portfolioData, 'Portfolio', store)\n  );\n}\n\nexport async function removePortfolio(portfolioId) {\n  return portfolioApi.destroyPortfolio(portfolioId);\n}\n\nexport async function removePortfolioItem(portfolioItemId) {\n  return portfolioItemApi.destroyPortfolioItem(portfolioItemId);\n}\n\nexport async function removePortfolioItems(portfolioItemIds) {\n  return Promise.all(\n    portfolioItemIds.map(async (itemId) => {\n      const { restore_key } = await removePortfolioItem(itemId);\n      return {\n        portfolioItemId: itemId,\n        restoreKey: restore_key\n      };\n    })\n  );\n}\n\nexport function fetchProviderControlParameters(portfolioItemId) {\n  return axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}/provider_control_parameters`\n    )\n    .then((data) => ({\n      required: [],\n      ...data,\n      properties: {\n        ...data.properties,\n        namespace: {\n          ...data.properties.namespace,\n          enum: Array.from(new Set([...data.properties.namespace.enum]))\n        }\n      }\n    }));\n}\n\nexport async function updatePortfolioItem({ id, ...portfolioItem }, store) {\n  return await portfolioItemApi.updatePortfolioItem(\n    id,\n    sanitizeValues(portfolioItem, 'PortfolioItem', store)\n  );\n}\n\nexport function fetchPortfolioByName(name = '') {\n  return axiosInstance.get(`${CATALOG_API_BASE}/portfolios`, {\n    params: {\n      filter: {\n        name\n      }\n    }\n  });\n}\n\nexport const restorePortfolioItems = (restoreData) =>\n  Promise.all(\n    restoreData.map(({ portfolioItemId, restoreKey }) =>\n      portfolioItemApi.unDeletePortfolioItem(portfolioItemId, {\n        restore_key: restoreKey\n      })\n    )\n  );\n\nexport const copyPortfolio = (portfolioId) =>\n  portfolioApi.postCopyPortfolio(portfolioId);\n\nexport const copyPortfolioItem = (portfolioItemId, copyObject = {}) =>\n  portfolioItemApi.postCopyPortfolioItem(portfolioItemId, copyObject);\n\nexport const uploadPortfolioItemIcon = (portfolioItemId, file, iconId) => {\n  let data = new FormData();\n  data.append('content', file, file.name);\n  if (iconId) {\n    return axiosInstance.patch(`${CATALOG_API_BASE}/icons/${iconId}`, data);\n  }\n\n  data.append('portfolio_item_id', portfolioItemId);\n  return axiosInstance.post(`${CATALOG_API_BASE}/icons`, data, {\n    headers: {\n      accept: 'application/json',\n      'Content-Type': `multipart/form-data; boundary=${data._boundary}`\n    }\n  });\n};\n\nexport const getPortfolioItemDetail = (params) =>\n  Promise.all([\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/portfolio_items/${params.portfolioItem}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${params.source}`)\n      .catch((error) => {\n        if (error.status === 404) {\n          return {\n            object: 'platform',\n            notFound: true\n          };\n        }\n\n        throw error;\n      })\n  ]);\n\nexport const getPortfolioFromState = (portfolioReducer, portfolioId) =>\n  portfolioReducer.selectedPortfolio &&\n  portfolioReducer.selectedPortfolio.id === portfolioId\n    ? portfolioReducer.selectedPortfolio\n    : portfolioReducer.portfolios.data.find(({ id }) => id === portfolioId);\n\nexport const undeletePortfolio = (portfolioId, restoreKey) =>\n  axiosInstance.post(`${CATALOG_API_BASE}/portfolios/${portfolioId}/undelete`, {\n    restore_key: restoreKey\n  });\n","export const defaultSettings = {\n  limit: 50,\n  offset: 0,\n  count: 0,\n  filter: ''\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0) =>\n  Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset) => (page - 1) * offset;\n","import React, { useContext } from 'react';\nimport { Route } from 'react-router-dom';\nimport UserContext from '../user-context';\nimport PropTypes from 'prop-types';\nimport { hasPermission } from '../helpers/shared/helpers';\nimport { UnauthorizedRedirect } from '../smart-components/error-pages/error-redirects';\n\nconst ReidrectOnAccess = (props) => (\n  <Route {...props}>\n    <UnauthorizedRedirect />\n  </Route>\n);\n\nconst hasCapability = (userCapabilities, requiredCapabilities) =>\n  requiredCapabilities\n    ? Array.isArray(requiredCapabilities)\n      ? requiredCapabilities.some(\n          (capability) => userCapabilities[capability] !== false\n        )\n      : userCapabilities[requiredCapabilities] !== false\n    : true;\n\nconst CatalogRoute = ({\n  permissions,\n  userCapabilities,\n  requiredCapabilities,\n  ...props\n}) => {\n  const { permissions: userPermissions } = useContext(UserContext);\n  const hasAccess =\n    hasCapability(userCapabilities, requiredCapabilities) &&\n    hasPermission(userPermissions, permissions);\n\n  if (!hasAccess) {\n    return <ReidrectOnAccess {...props} />;\n  }\n\n  return <Route {...props} />;\n};\n\nCatalogRoute.propTypes = {\n  permissions: PropTypes.arrayOf(PropTypes.string),\n  userCapabilities: PropTypes.object,\n  requiredCapabilities: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ])\n};\n\nCatalogRoute.defaultProps = {\n  permissions: [],\n  userCapabilities: {}\n};\n\nexport default CatalogRoute;\n","const { defineMessages } = require('react-intl');\n\nconst portfolioMessages = defineMessages({\n  portfoliosTitle: {\n    id: 'portfolios.heading.title',\n    defaultMessage: 'Portfolios'\n  },\n  removeItemsNotification: {\n    id: 'portfolio.notifications.remove.portfolio-items',\n    defaultMessage:\n      'You have removed {count, plural, one {} other {<b>{count, number}</b>}} {count, plural, one {<b>{productName}</b>} other {<b>products</b>} } from the {portfolioName} portfolio. <a>Undo</a> if this was a mistake.' // eslint-disable-line max-len\n  },\n  removePortfolioNotification: {\n    id: 'portfolio.notifications.remove.portfolio',\n    defaultMessage:\n      'The portfolio was removed successfully. You can <a>Undo</a> this action if this was a mistake.'\n  },\n  modalCreateTitle: {\n    id: 'portfolio.modal.add.title',\n    defaultMessage: 'Create portfolio'\n  },\n  modalEditTitle: {\n    id: 'portfolio.modal.edit.title',\n    defaultMessage: 'Edit portfolio'\n  },\n  addProducts: {\n    id: 'portfolio.empty.add.products',\n    defaultMessage: 'Add products'\n  },\n  emptyNoProducts: {\n    id: 'portfolio.empty.no-products',\n    defaultMessage: 'No products in your portfolio'\n  },\n  portfoliosPlaceholder: {\n    id: 'portfolios.filters.placeholder',\n    defaultMessage: 'Filter by portfolio'\n  },\n  portfoliosNoData: {\n    id: 'portfolios.empty.noData.title',\n    defaultMessage: 'No portfolios'\n  },\n  portfoliosNoDataDescription: {\n    id: 'portfolios.empty.noData.description',\n    defaultMessage: 'No portfolios match your filter criteria.'\n  },\n  portfolioRemoveDescription: {\n    id: 'portfolio.remove.modal.description',\n    defaultMessage:\n      'This action will permanently delete portfolio {name} and its data.'\n  },\n  portfolioRemoveTitle: {\n    id: 'portfolio.remove.modal.title',\n    defaultMessage: 'Delete Portfolio?'\n  },\n  portfolioSharePermissions: {\n    id: 'portfolio.share.modal.permissions',\n    defaultMessage: 'Select the share permissions'\n  },\n  portfolioShareGroups: {\n    id: 'portfolio.share.modal.groups',\n    defaultMessage: 'Select a group'\n  },\n  portfolioShareTitle: {\n    id: 'portfolio.share.modal.title',\n    defaultMessage: 'Share portfolio'\n  },\n  portfolioShareApply: {\n    id: 'portfolio.share.modal.apply',\n    defaultMessage: 'Apply'\n  },\n  portfolioShareDescription: {\n    id: 'portfolio.share.modal.description',\n    defaultMessage: 'Share <strong>{name}</strong> portfolio'\n  },\n  addProducstPlatformTitle: {\n    id: 'portfolio.add.platform.title.empty',\n    defaultMessage: 'Please choose platform'\n  },\n  addProducstPlatformDescription: {\n    id: 'portfolio.add.platform.description.empty',\n    defaultMessage:\n      'In order to select products for your portfolio you must choose platform first'\n  },\n  addProducstFilterTitle: {\n    id: 'portfolio.add.platform.filter.empty',\n    defaultMessage: 'No products match filter parameters'\n  },\n  copyItemTitle: {\n    id: 'portfolio.item.copy',\n    defaultMessage: 'Copy product'\n  },\n  portfolioItemSurvey: {\n    id: 'portfolio.item.detail.actions.survey',\n    defaultMessage: 'Edit survey'\n  },\n  portfolioItemOrder: {\n    id: 'portfolio.item.detail.actions.order',\n    defaultMessage: 'Order'\n  },\n  portfolioItemIconTitle: {\n    id: 'portfolio.item.icon.upload.notification',\n    defaultMessage: 'Icon upload error'\n  },\n  portfolioItemOverview: {\n    id: 'portfolio.item.detail.overview',\n    defaultMessage: 'Overview'\n  },\n  portfolioItemSupport: {\n    id: 'portfolio.item.detail.support',\n    defaultMessage: 'Learn more'\n  },\n  portfolioItemDocumentation: {\n    id: 'portfolio.item.detail.documentation',\n    defaultMessage: 'Documentation'\n  },\n  portfolioItemDocLink: {\n    id: 'portfolio.item.detail.doclink',\n    defaultMessage: 'Doc link'\n  },\n  restoreSurvey: {\n    id: 'portfolio.item.survey.restore',\n    defaultMessage: 'Restore to Ansible Tower version'\n  },\n  surveyTitle: {\n    id: 'portfolio.item.survey.edit',\n    defaultMessage: 'Editing survey: {name}'\n  },\n  sourceUnavaiable: {\n    id: 'portfolio.detail.alert.source.unavailable',\n    defaultMessage: 'The platform for this product is unavailable'\n  },\n  objectUnavaiable: {\n    id: 'portfolio.detail.alert.unavailable',\n    defaultMessage: 'The {object} for this product is no longer available'\n  },\n  backToProducts: {\n    id: 'portfolio.detail.back-to-products',\n    defaultMessage: 'Back to products'\n  },\n  editProduct: {\n    id: 'portfolio.item.edit.title',\n    defaultMessage: 'Edit product'\n  },\n  shareTooltip: {\n    id: 'portfolio.share.add.tooltip',\n    defaultMessage: 'Share portfolio with selected group and permissions.'\n  },\n  shareErrorMissingGroup: {\n    id: 'portfolio.share.add.missing-group',\n    defaultMessage: 'Select group to share portfolio.'\n  },\n  shareErrorMissingPermission: {\n    id: 'portfolio.share.add.missing-permission',\n    defaultMessage: 'Assign permissions to selected group.'\n  },\n  shareErrorMissingData: {\n    id: 'portfolio.share.add.missing-data',\n    defaultMessage: 'Choose group and permissions.'\n  },\n  shareDuplicate: {\n    id: 'portfolio.share.add.duplicate',\n    defaultMessage: 'Portfolio is already shared with this group.'\n  },\n  noShares: {\n    id: 'portfolio.share.add.no-shares',\n    defaultMessage: 'To share portfolio select a group and permissions'\n  },\n  shareGroupsAccess: {\n    id: 'share.groups.access',\n    defaultMessage: 'Groups with access'\n  },\n  shareSuccessTitle: {\n    id: 'share.notification.success.title',\n    defaultMessage: 'Share permissions were updated successfully'\n  },\n  shareSuccessTitleOnlySharing: {\n    id: 'share.notification.success.share.title',\n    defaultMessage: 'Success sharing portfolio'\n  },\n  shareSuccessTitleOnlyUnsharing: {\n    id: 'share.notification.success.unshare.title',\n    defaultMessage: 'Success unsharing portfolio'\n  },\n  shareSuccessTitleOnlyChaningPermissions: {\n    id: 'share.notification.success.change-permission.title',\n    defaultMessage: 'Success changing permissions'\n  },\n  shareSuccessDescriptionOnlySharing: {\n    id: 'share.notification.success.share.description',\n    defaultMessage: 'Portfolio <b>{name}</b> was shared with {group}.'\n  },\n  shareSuccessDescriptionOnlyUnsharing: {\n    id: 'share.notification.success.unshare.description',\n    defaultMessage: 'Portfolio <b>{name}</b> was unshared with {group}.'\n  },\n  shareSuccessDescriptionOnlyChaningPermissions: {\n    id: 'share.notification.success.change-permission.description',\n    defaultMessage: 'Share permissions for <b>{group}</b> were updated.'\n  },\n  shareSuccessTwoGroup: {\n    id: 'share.notification.success.two-groups',\n    defaultMessage: '{group1} and {group2}'\n  },\n  shareSuccessMultipleGroups: {\n    id: 'share.notification.success.multiple-groups',\n    defaultMessage: '{count} groups'\n  },\n  addSuccessTitle: {\n    id: 'portfolio.add.success.title',\n    defaultMessage: 'Success adding portfolio'\n  },\n  addSuccessDescription: {\n    id: 'portfolio.add.success.description',\n    defaultMessage: 'Portfolio <b>{name}</b> was added successfully.'\n  }\n});\n\nexport default portfolioMessages;\n","import axios from 'axios';\nimport {\n  RequestApi,\n  WorkflowApi\n} from '@redhat-cloud-services/approval-client';\nimport {\n  PortfolioApi,\n  PortfolioItemApi,\n  OrderApi,\n  OrderItemApi,\n  IconApi,\n  ServicePlansApi,\n  OrderProcessApi\n} from '@redhat-cloud-services/catalog-client';\n\nimport {\n  CATALOG_API_BASE,\n  APPROVAL_API_BASE,\n  RBAC_API_BASE\n} from '../../utilities/constants';\nimport { GroupApi } from '@redhat-cloud-services/rbac-client';\nimport { stringify } from 'qs';\n\nconst axiosInstance = axios.create({\n  paramsSerializer: (params) => stringify(params)\n});\n\nconst resolveInterceptor = (response) => response.data || response;\nconst errorInterceptor = (error = {}) => {\n  const requestId = error.response?.headers?.['x-rh-insights-request-id'];\n  throw requestId ? { ...error.response, requestId } : { ...error.response };\n};\n\nconst unauthorizedInterceptor = (error = {}) => {\n  if (error.status === 403) {\n    throw {\n      ...error,\n      redirect: {\n        pathname: '/403',\n        message: error.config?.url\n      }\n    };\n  }\n\n  throw error;\n};\n\n// check identity before each request. If the token is expired it will log out user\naxiosInstance.interceptors.request.use(async (config) => {\n  await window.insights.chrome.auth.getUser();\n  return config;\n});\naxiosInstance.interceptors.response.use(resolveInterceptor);\naxiosInstance.interceptors.response.use(null, errorInterceptor);\naxiosInstance.interceptors.response.use(null, unauthorizedInterceptor);\n\nconst orderApi = new OrderApi(undefined, CATALOG_API_BASE, axiosInstance);\nconst orderItemApi = new OrderItemApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst portfolioApi = new PortfolioApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst portfolioItemApi = new PortfolioItemApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst requestsApi = new RequestApi(undefined, APPROVAL_API_BASE, axiosInstance);\nconst workflowApi = new WorkflowApi(\n  undefined,\n  APPROVAL_API_BASE,\n  axiosInstance\n);\nconst iconApi = new IconApi(undefined, CATALOG_API_BASE, axiosInstance);\nconst servicePlansApi = new ServicePlansApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst orderProcessApi = new OrderProcessApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\n\nexport function getPortfolioApi() {\n  return portfolioApi;\n}\n\nexport function getPortfolioItemApi() {\n  return portfolioItemApi;\n}\n\nexport function getOrderApi() {\n  return orderApi;\n}\n\nexport function getOrderItemApi() {\n  return orderItemApi;\n}\n\nexport function getRequestsApi() {\n  return requestsApi;\n}\n\nconst rbacGroupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getRbacGroupApi() {\n  return rbacGroupApi;\n}\n\nexport function getWorkflowApi() {\n  return workflowApi;\n}\n\nexport function getAxiosInstance() {\n  return axiosInstance;\n}\n\nexport function getIconApi() {\n  return iconApi;\n}\n\nexport function getServicePlansApi() {\n  return servicePlansApi;\n}\n\nexport function getOrderProcessApi() {\n  return orderProcessApi;\n}\n\nconst grapqlInstance = axios.create();\ngrapqlInstance.interceptors.request.use(async (config) => {\n  await window.insights.chrome.auth.getUser();\n  return config;\n});\n/**\n * Graphql does not return error response when the qery fails.\n * Instead it returns 200 response with error object.\n * We catch it and throw it to trigger notification middleware\n */\ngrapqlInstance.interceptors.response.use(({ data }) => {\n  if (data.errors) {\n    throw {\n      message: data.errors[0].errorType,\n      data: data.errors[0].message\n    };\n  }\n\n  return data;\n});\n\nexport function getGraphqlInstance() {\n  return grapqlInstance;\n}\n","import {\n  FETCH_SERVICE_PLANS,\n  LIST_ORDERS,\n  FETCH_SERVICE_PLAN_PARAMETERS,\n  SUBMIT_SERVICE_ORDER,\n  UPDATE_SERVICE_DATA,\n  SET_SELECTED_PLAN,\n  FETCH_REQUESTS,\n  FETCH_ORDER_ITEMS,\n  SET_LOADING_STATE,\n  SET_ORDERS,\n  FETCH_ORDERS,\n  SET_ORDER_DETAIL,\n  FETCH_APPROVAL_REQUESTS\n} from '../action-types';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n// Initial State\nexport const orderInitialState = {\n  servicePlans: [],\n  selectedPlan: {},\n  serviceData: {},\n  isLoading: false,\n  requests: [],\n  orderDetail: {\n    order: {},\n    portfolioItem: {},\n    platform: {},\n    portfolio: {}\n  },\n  orders: {\n    data: [],\n    meta: { ...defaultSettings }\n  }\n};\n\nconst setLoadingState = (state, { payload = true }) => ({\n  ...state,\n  isLoading: payload\n});\nconst setServicePlans = (state, { payload }) => ({\n  ...state,\n  servicePlans: payload,\n  isLoading: false\n});\nconst setListOrder = (state, { payload }) => ({\n  ...state,\n  orders: payload,\n  isLoading: false\n});\nconst setPlanParameters = (state, { payload }) => ({\n  ...state,\n  planParameters: payload,\n  isLoading: false\n});\nconst submitServiceOrder = (state, { payload }) => ({\n  ...state,\n  ...payload,\n  isLoading: false\n});\nconst updateServiceData = (state, { payload }) => ({\n  ...state,\n  serviceData: payload,\n  isLoading: false\n});\nconst selectPlan = (state, { payload }) => ({\n  ...state,\n  selectedPlan: payload,\n  isLoading: false\n});\nconst setRequests = (state, { payload }) => ({\n  ...state,\n  requests: payload,\n  isLoading: false\n});\nconst setOrderItems = (state, { payload }) => ({\n  ...state,\n  orderItems: payload,\n  isLoading: false\n});\nconst setOrders = (state, { payload }) => ({ ...state, orders: payload });\nconst setOrderDetail = (state, { payload }) => ({\n  ...state,\n  orderDetail: payload\n});\nconst updateOrderApprovalRequests = (state, { payload }) => ({\n  ...state,\n  orderDetail: { ...state.orderDetail, approvalRequest: payload }\n});\n\nexport default {\n  [`${FETCH_SERVICE_PLANS}_PENDING`]: setLoadingState,\n  [`${FETCH_SERVICE_PLANS}_FULFILLED`]: setServicePlans,\n  [`${LIST_ORDERS}_PENDING`]: setLoadingState,\n  [`${LIST_ORDERS}_FULFILLED`]: setListOrder,\n  [`${FETCH_SERVICE_PLAN_PARAMETERS}_PENDING`]: setLoadingState,\n  [`${FETCH_SERVICE_PLAN_PARAMETERS}_FULFILLED`]: setPlanParameters,\n  [`${SUBMIT_SERVICE_ORDER}_PENDING`]: setLoadingState,\n  [`${SUBMIT_SERVICE_ORDER}_FULFILLED`]: submitServiceOrder,\n  [UPDATE_SERVICE_DATA]: updateServiceData,\n  [SET_SELECTED_PLAN]: selectPlan,\n  [`${FETCH_REQUESTS}_PENDING`]: setLoadingState,\n  [`${FETCH_REQUESTS}_FULFILLED`]: setRequests,\n  [`${FETCH_ORDER_ITEMS}_PENDING`]: setLoadingState,\n  [`${FETCH_ORDER_ITEMS}_FULFILLED`]: setOrderItems,\n  [SET_LOADING_STATE]: setLoadingState,\n  [`${FETCH_ORDERS}_FULFILLED`]: setOrders,\n  [`${FETCH_ORDERS}_PENDING`]: setLoadingState,\n  [SET_ORDERS]: setOrders,\n  [`${SET_ORDER_DETAIL}_FULFILLED`]: setOrderDetail,\n  [SET_ORDER_DETAIL]: setOrderDetail,\n  [`${FETCH_APPROVAL_REQUESTS}_FULFILLED`]: updateOrderApprovalRequests\n};\n","import {\n  FETCH_PLATFORM,\n  FETCH_PLATFORMS,\n  FETCH_PLATFORM_ITEMS,\n  FETCH_PLATFORM_ITEM,\n  FILTER_PLATFORM_ITEMS,\n  FETCH_MULTIPLE_PLATFORM_ITEMS,\n  SET_LOADING_STATE,\n  FETCH_PLATFORM_INVENTORIES,\n  SET_INVENTORIES_LOADING_STATE,\n  FETCH_SERVICE_OFFERING,\n  SET_SOURCETYPE_ICONS\n} from '../action-types';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\n// Initial State\nexport const platformInitialState = {\n  platformIconMapping: {},\n  sourceTypeIcons: {},\n  isPlatformDataLoading: false,\n  selectedPlatform: {},\n  platforms: [],\n  platformItems: {},\n  platformInventories: {\n    meta: defaultSettings\n  },\n  platformItem: {},\n  platform: {},\n  filterValue: '',\n  serviceOffering: {\n    service: {},\n    source: {}\n  }\n};\n\nconst mapPlatformIcons = (platformIconMapping, platforms, sourceTypeIcons) =>\n  platforms.reduce(\n    (acc, curr) =>\n      !acc[curr.id]\n        ? { ...acc, [curr.id]: sourceTypeIcons[curr.source_type_id] }\n        : acc,\n    { ...platformIconMapping }\n  );\n\nconst setLoadingState = (state, { payload = true }) => ({\n  ...state,\n  isPlatformDataLoading: payload\n});\nconst setPlatforms = (state, { payload }) => ({\n  ...state,\n  platforms: payload,\n  platformIconMapping: mapPlatformIcons(\n    state.platformIconMapping,\n    payload,\n    state.sourceTypeIcons\n  ),\n  isPlatformDataLoading: false\n});\nconst setPlatformItems = (state, { payload, meta: { platformId } }) => ({\n  ...state,\n  platformItems: { ...state.platformItems, [platformId]: payload },\n  isPlatformDataLoading: false\n});\nconst setMultiplePlatformItems = (state, { payload }) => ({\n  ...state,\n  platformItems: { ...state.platformItems, ...payload },\n  isPlatformDataLoading: false\n});\nconst setPortfolioItems = (state, { payload }) => ({\n  ...state,\n  portfolioItem: payload,\n  isPlatformDataLoading: false\n});\nconst selectPlatform = (state, { payload }) => ({\n  ...state,\n  selectedPlatform: payload,\n  isLoading: false\n});\nconst filterPlatformItems = (state, { payload }) => ({\n  ...state,\n  filterValue: payload\n});\nconst setInventoriesDataLoadingState = (state, { payload = true }) => ({\n  ...state,\n  isInventoriesDataLoading: payload\n});\nconst setPlatformInventories = (state, { payload }) => ({\n  ...state,\n  platformInventories: { ...state.platformInventories, ...payload },\n  isInventoriesDataLoading: false\n});\nconst setServiceOffering = (state, { payload }) => ({\n  ...state,\n  serviceOffering: payload\n});\nconst setSourceTypeIcons = (state, { payload }) => ({\n  ...state,\n  sourceTypeIcons: payload\n});\n\nexport default {\n  [`${FETCH_PLATFORMS}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORMS}_FULFILLED`]: setPlatforms,\n  [`${FETCH_PLATFORM_ITEMS}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORM_ITEMS}_FULFILLED`]: setPlatformItems,\n  [`${FETCH_PLATFORM_ITEM}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORM_ITEM}_FULFILLED`]: setPortfolioItems,\n  [`${FETCH_PLATFORM}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORM}_FULFILLED`]: selectPlatform,\n  [`${FILTER_PLATFORM_ITEMS}_FULFILLED`]: filterPlatformItems,\n  [`${FETCH_MULTIPLE_PLATFORM_ITEMS}_FULFILLED`]: setMultiplePlatformItems,\n  [SET_LOADING_STATE]: setLoadingState,\n  [`${FETCH_PLATFORM_INVENTORIES}_PENDING`]: setInventoriesDataLoadingState,\n  [`${FETCH_PLATFORM_INVENTORIES}_FULFILLED`]: setPlatformInventories,\n  [SET_INVENTORIES_LOADING_STATE]: setInventoriesDataLoadingState,\n  [`${FETCH_SERVICE_OFFERING}_FULFILLED`]: setServiceOffering,\n  [SET_SOURCETYPE_ICONS]: setSourceTypeIcons\n};\n","import {\n  FETCH_ORDER_PROCESSES,\n  SORT_ORDER_PROCESSES,\n  SET_FILTER_ORDER_PROCESSES\n} from '../../redux/action-types';\n\n// Initial State\nexport const orderProcessInitialState = {\n  orderProcesses: {\n    data: [],\n    meta: {\n      count: 0,\n      limit: 50,\n      offset: 0\n    }\n  },\n  filterValue: '',\n  isLoading: false,\n  sortBy: {\n    index: 0,\n    property: 'name',\n    direction: 'asc'\n  }\n};\n\nconst setLoadingState = (state) => ({ ...state, isLoading: true });\nconst setOrderProcesses = (state, { payload }) => ({\n  ...state,\n  orderProcesses: payload,\n  isLoading: false\n});\nconst setSortOrderProcesses = (state, { payload }) => ({\n  ...state,\n  sortBy: payload,\n  orderProcesses: {\n    ...state.orderProcesses,\n    meta: {\n      ...state.orderProcesses.meta,\n      offset: 0\n    }\n  }\n});\nconst setFilterValue = (state, { payload }) => ({\n  ...state,\n  filterValue: payload,\n  orderProcesses: {\n    ...state.orderProcesses,\n    meta: {\n      ...state.orderProcesses.meta,\n      offset: 0\n    }\n  }\n});\n\nexport default {\n  [`${FETCH_ORDER_PROCESSES}_PENDING`]: setLoadingState,\n  [`${FETCH_ORDER_PROCESSES}_FULFILLED`]: setOrderProcesses,\n  [SORT_ORDER_PROCESSES]: setSortOrderProcesses,\n  [SET_FILTER_ORDER_PROCESSES]: setFilterValue\n};\n","import {\n  FETCH_PORTFOLIO,\n  FETCH_PORTFOLIOS,\n  FETCH_PORTFOLIO_ITEMS,\n  FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO,\n  FETCH_PORTFOLIO_ITEM,\n  FILTER_PORTFOLIO_ITEMS,\n  SELECT_PORTFOLIO_ITEM,\n  UPDATE_PORTFOLIO,\n  SET_LOADING_STATE,\n  REMOVE_PORTFOLIO_ITEMS,\n  RESET_SELECTED_PORTFOLIO,\n  ADD_TEMPORARY_PORTFOLIO,\n  UPDATE_TEMPORARY_PORTFOLIO,\n  DELETE_TEMPORARY_PORTFOLIO,\n  RESTORE_PORTFOLIO_PREV_STATE,\n  SET_PORTFOLIO_ITEMS,\n  UPDATE_TEMPORARY_PORTFOLIO_ITEM,\n  UPDATE_PORTFOLIO_ITEM,\n  RESTORE_PORTFOLIO_ITEM_PREV_STATE\n} from '../action-types';\n\n// Initial State\nexport const portfoliosInitialState = {\n  portfolioItems: {\n    data: [],\n    meta: {\n      limit: 50,\n      offset: 0,\n      filter: ''\n    }\n  },\n  portfolioItem: {\n    portfolioItem: {\n      metadata: {\n        user_capabilities: {},\n        statistics: {}\n      }\n    }\n  },\n  portfolios: {\n    data: [],\n    meta: {\n      limit: 50,\n      offset: 0\n    }\n  },\n  selectedPortfolio: {\n    metadata: {\n      user_capabilities: {},\n      statistics: {}\n    }\n  },\n  portfolio: {},\n  filterValue: '',\n  isLoading: false\n};\n\nconst setLoadingState = (state, { payload = true }) => ({\n  ...state,\n  isLoading: payload\n});\nconst setPortfolios = (state, { payload }) => ({\n  ...state,\n  portfolios: payload,\n  isLoading: false\n});\nconst setPortfolioItems = (state, { payload }) => ({\n  ...state,\n  portfolioItems: payload,\n  isLoading: false\n});\nconst setPortfolioItem = (state, { payload }) => ({\n  ...state,\n  portfolioItem: payload,\n  isLoading: false\n});\nconst selectPortfolio = (state, { payload }) => ({\n  ...state,\n  selectedPortfolio: payload,\n  isLoading: false\n});\nconst filterPortfolios = (state, { payload }) => ({\n  ...state,\n  filterValue: payload\n});\nconst resetSelectedPortfolio = (state) => ({\n  ...state,\n  selectedPortfolio: { metadata: { user_capabilities: {}, statistics: {} } },\n  portfolioItems: portfoliosInitialState.portfolioItems\n});\n\n// these are optimistic UI updates that mutate the portfolio state immediately after user action.\n// State is synchronized with API after actions are sucesfull\nconst addTemporaryPortfolio = (state, { payload }) => ({\n  prevState: { ...state },\n  ...state,\n  portfolios: {\n    ...state.portfolios,\n    data: [\n      ...state.portfolios.data,\n      { ...payload, metadata: { user_capabilities: {}, statistics: {} } }\n    ]\n  }\n});\nconst updateTemporaryPortfolio = (state, { payload }) => ({\n  prevState: { ...state },\n  ...state,\n  selectedPortfolio: {\n    metadata: {\n      ...state.selectedPortfolio.metadata,\n      user_capabilities: {\n        ...state.selectedPortfolio.metadata.user_capabilities\n      }\n    },\n    ...payload\n  },\n  portfolios: {\n    ...state.portfolios,\n    data: state.portfolios.data.map((item) =>\n      item.id === payload.id\n        ? {\n            ...item,\n            ...payload\n          }\n        : item\n    )\n  }\n});\n\nconst deleteTemporaryPortfolio = (state, { payload }) => ({\n  prevState: { ...state },\n  ...state,\n  selectedPortfolio: { metadata: { user_capabilities: {}, statistics: {} } },\n  portfolios: {\n    ...state.portfolios,\n    data: state.portfolios.data.filter(({ id }) => id !== payload)\n  }\n});\n\nconst updateTemporaryPortfolioItem = (state, { payload }) => ({\n  ...state,\n  prevState: { ...state },\n  portfolioItem: {\n    ...state.portfolioItem,\n    portfolioItem: {\n      created_at: state.portfolioItem.portfolioItem.created_at,\n      updated_at: new Date().toString(),\n      ...payload\n    }\n  },\n  portfolioItems: {\n    ...state.portfolioItems,\n    data: state.portfolioItems.data.map((item) =>\n      item.id === payload.id\n        ? { created_at: item.created_at, ...payload }\n        : item\n    )\n  }\n});\n\nconst updatePortfolioItem = (state, { payload }) => ({\n  ...state,\n  portfolioItem: {\n    ...state.portfolioItem,\n    portfolioItem: payload\n  },\n  portfolioItems: {\n    ...state.portfolioItems,\n    data: state.portfolioItems.data.map((item) =>\n      item.id === payload.id ? { ...payload } : item\n    )\n  }\n});\n\nconst restorePrevState = (state) =>\n  state.prevState ? { ...state.prevState } : { ...state };\n\nexport default {\n  [`${FETCH_PORTFOLIOS}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIOS}_FULFILLED`]: setPortfolios,\n  [`${FETCH_PORTFOLIO_ITEMS}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO_ITEMS}_FULFILLED`]: setPortfolioItems,\n  [`${FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO}_FULFILLED`]: setPortfolioItems,\n  [`${FETCH_PORTFOLIO_ITEM}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO_ITEM}_FULFILLED`]: setPortfolioItem,\n  [`${FETCH_PORTFOLIO}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO}_FULFILLED`]: selectPortfolio,\n  [FILTER_PORTFOLIO_ITEMS]: filterPortfolios,\n  [`${SELECT_PORTFOLIO_ITEM}_FULFILLED`]: setPortfolioItem,\n  [SELECT_PORTFOLIO_ITEM]: setPortfolioItem,\n  [`${UPDATE_PORTFOLIO}_FULFILLED`]: selectPortfolio,\n  [SET_LOADING_STATE]: setLoadingState,\n  [`${REMOVE_PORTFOLIO_ITEMS}_PENDING`]: setLoadingState,\n  [RESET_SELECTED_PORTFOLIO]: resetSelectedPortfolio,\n  [ADD_TEMPORARY_PORTFOLIO]: addTemporaryPortfolio,\n  [UPDATE_TEMPORARY_PORTFOLIO]: updateTemporaryPortfolio,\n  [DELETE_TEMPORARY_PORTFOLIO]: deleteTemporaryPortfolio,\n  [RESTORE_PORTFOLIO_PREV_STATE]: restorePrevState,\n  [SET_PORTFOLIO_ITEMS]: setPortfolioItems,\n  [UPDATE_TEMPORARY_PORTFOLIO_ITEM]: updateTemporaryPortfolioItem,\n  [RESTORE_PORTFOLIO_ITEM_PREV_STATE]: restorePrevState,\n  [UPDATE_PORTFOLIO_ITEM]: updatePortfolioItem\n};\n","import { SET_LOADING_STATE } from '../action-types';\nimport { ASYNC_ACTIONS } from '../action-types/approval-action-types';\n\nexport const approvalInitialState = {\n  isFetching: false,\n  isResolving: false,\n  workflows: [],\n  resolvedWorkflows: []\n};\n\nconst setLoadingState = (state, { payload = true }) => ({\n  ...state,\n  isFetching: payload\n});\nconst setWorkflows = (state, { payload }) => ({\n  ...state,\n  isFetching: false,\n  workflows: payload\n});\nconst setResolvingState = (state, { payload = true }) => ({\n  ...state,\n  isResolving: payload\n});\nconst setResolvedWorkflows = (state, { payload }) => ({\n  ...state,\n  isResolving: false,\n  resolvedWorkflows: payload\n});\n\nexport default {\n  [ASYNC_ACTIONS.FETCH_WORKFLOWS_PENDING]: setLoadingState,\n  [ASYNC_ACTIONS.FETCH_WORKFLOWS_FULFILLED]: setWorkflows,\n  [ASYNC_ACTIONS.RESOLVE_WORKFLOWS_PENDING]: setResolvingState,\n  [ASYNC_ACTIONS.RESOLVE_WORKFLOWS_FULFILLED]: setResolvedWorkflows,\n  [SET_LOADING_STATE]: setLoadingState\n};\n","import { FETCH_RBAC_GROUPS, SET_LOADING_STATE } from '../action-types';\n\n// Initial State\nexport const rbacInitialState = {\n  rbacGroups: [],\n  isLoading: false\n};\n\nconst setLoadingState = (state, { payload = true }) => ({\n  ...state,\n  isLoading: payload\n});\nconst setRbacGroups = (state, { payload }) => ({\n  ...state,\n  rbacGroups: payload,\n  isLoading: false\n});\n\nexport default {\n  [`${FETCH_RBAC_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_RBAC_GROUPS}_FULFILLED`]: setRbacGroups,\n  [SET_LOADING_STATE]: setLoadingState\n};\n","import { QUERY_PORTFOLIO, SET_LOADING_STATE } from '../action-types';\n\n// Initial State\nexport const shareInfoInitialState = {\n  shareInfo: [],\n  isLoading: false\n};\n\nconst setLoadingState = (state, { payload = true }) => ({\n  ...state,\n  isLoading: payload\n});\nconst setShareInfo = (state, { payload }) => ({\n  ...state,\n  shareInfo: payload,\n  isLoading: false\n});\n\nexport default {\n  [`${QUERY_PORTFOLIO}_PENDING`]: setLoadingState,\n  [`${QUERY_PORTFOLIO}_FULFILLED`]: setShareInfo,\n  [SET_LOADING_STATE]: setLoadingState\n};\n","import { SET_OPENAPI_SCHEMA } from '../action-types';\n\nexport const openApiInitialState = {\n  schema: undefined\n};\nconst setSchema = (state, { payload }) => ({ ...state, schema: payload });\n\nexport default {\n  [SET_OPENAPI_SCHEMA]: setSchema\n};\n","import { SET_LOADING_STATE } from '../redux/action-types';\n\nconst loadingStateMiddleware = () => (dispatch) => (action) => {\n  if (action.type.match(/_REJECTED$/)) {\n    dispatch({ type: SET_LOADING_STATE, payload: false });\n  }\n\n  return dispatch(action);\n};\n\nexport default loadingStateMiddleware;\n","const emptyDataMiddleware = () => (dispatch) => (action) => {\n  const nextAction = { ...action };\n  if (\n    action.type.match(/_FULFILLED$/) &&\n    action.payload &&\n    action.meta &&\n    action.payload.data &&\n    action.payload.meta\n  ) {\n    const noFilter = Object.prototype.hasOwnProperty.call(\n      nextAction.meta,\n      'filters'\n    )\n      ? Object.values(nextAction.meta.filters || {}).every(\n          (value) => typeof value === 'undefined' || value.length === 0\n        )\n      : nextAction.meta?.filter?.length === 0;\n\n    nextAction.payload.meta.noData =\n      nextAction.payload.meta.count === 0 && noFilter;\n    return dispatch(nextAction);\n  }\n\n  return dispatch(nextAction);\n};\n\nexport default emptyDataMiddleware;\n","import { INITIALIZE_BREADCRUMBS } from '../action-types';\n\nexport const initialBreadcrumbsState = {\n  fragments: []\n};\n\nconst initialize = (state, { payload }) => ({ ...state, fragments: payload });\n\nexport default {\n  [INITIALIZE_BREADCRUMBS]: initialize\n};\n","import { INITIALIZE_I18N } from '../action-types';\n\nexport const i18nInitialState = {\n  formatMessage: ({ defaultMessage = '' }) => defaultMessage\n};\nconst initialize = (state, { payload }) => ({ ...state, ...payload });\n\nexport default {\n  [INITIALIZE_I18N]: initialize\n};\n","import React, { lazy, useEffect } from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport {\n  ADD_PORTFOLIO_ROUTE,\n  EDIT_PORTFOLIO_ROUTE,\n  PORTFOLIOS_ROUTE,\n  NESTED_EDIT_PORTFOLIO_ROUTE,\n  PORTFOLIO_ROUTE,\n  REMOVE_PORTFOLIO_ROUTE,\n  NESTED_REMOVE_PORTFOLIO_ROUTE,\n  SHARE_PORTFOLIO_ROUTE,\n  NESTED_SHARE_PORTFOLIO_ROUTE,\n  WORKFLOW_PORTFOLIO_ROUTE,\n  NESTED_WORKFLOW_PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  NESTED_EDIT_ORDER_PROCESS_ROUTE,\n  EDIT_ORDER_PROCESS_ROUTE\n} from '../../constants/routes';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport CatalogRoute from '../../routing/catalog-route';\nimport useQuery from '../../utilities/use-query';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { PORTFOLIO_RESOURCE_TYPE } from '../../utilities/constants';\nimport {\n  setOrFetchPortfolio,\n  resetSelectedPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport SetOrderProcessModal from '../order-process/set-order-process-modal';\n\nconst CopyPortfolioItemModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"copy-portfolio-item-modal\" */ '../portfolio/portfolio-item-detail/copy-portfolio-item-modal'\n  )\n);\n\nconst OrderModal = lazy(() =>\n  import(/* webpackChunkName: \"order-modal\" */ '../common/order-modal')\n);\n\nconst EditApprovalWorkflow = lazy(() =>\n  import(\n    /* webpackChunkName: \"edit-approval-workflow\" */ '../common/edit-approval-workflow'\n  )\n);\nconst SharePortfolioModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"share-portfolio\" */ '../portfolio/share-portfolio-modal'\n  )\n);\n\nconst RemovePortfolioModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"remove-portfolio\" */ '../portfolio/remove-portfolio-modal'\n  )\n);\n\nconst AddPortfolioModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"add-portfolio\" */ '../portfolio/add-portfolio-modal'\n  )\n);\n\nconst PortfolioRoutes = () => {\n  const viewState = useInitialUriHash();\n  const { pathname } = useLocation();\n\n  const portfolioItemId = useSelector(\n    (state) => state?.portfolioReducer?.portfolioItem?.portfolioItem?.id\n  );\n  const portfolioItemUserCapabilities = useSelector(\n    (state) =>\n      state?.portfolioReducer?.portfolioItem?.portfolioItem?.metadata\n        ?.user_capabilities,\n    shallowEqual\n  );\n  const portfolios = useSelector(\n    (state) => state?.portfolioReducer?.portfolios,\n    shallowEqual\n  );\n  const selectedPortfolio = useSelector(\n    (state) => state?.portfolioReducer?.selectedPortfolio,\n    shallowEqual\n  );\n\n  const { portfolioUserCapabilities, itemName } = useSelector((state) => ({\n    portfolioUserCapabilities:\n      state?.portfolioReducer?.selectedPortfolio?.metadata?.user_capabilities,\n    itemName: () => state?.portfolioReducer?.selectedPortfolio?.name\n  }));\n  const [{ portfolio: id }, search] = useQuery(['portfolio']);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (id && (!selectedPortfolio.id || id !== selectedPortfolio.id)) {\n      dispatch(setOrFetchPortfolio(id, portfolios));\n    }\n  }, [id]);\n\n  return (\n    <div>\n      <Switch>\n        <Route path={[ADD_PORTFOLIO_ROUTE, EDIT_PORTFOLIO_ROUTE]}>\n          <AddPortfolioModal\n            removeQuery\n            viewState={viewState?.portfolio}\n            closeTarget={PORTFOLIOS_ROUTE}\n          />\n        </Route>\n        <CatalogRoute\n          userCapabilities={portfolioUserCapabilities}\n          requiredCapabilities=\"update\"\n          exact\n          path={NESTED_EDIT_PORTFOLIO_ROUTE}\n        >\n          <AddPortfolioModal\n            closeTarget={{ pathname: PORTFOLIO_ROUTE, search }}\n          />\n        </CatalogRoute>\n        <Route path={REMOVE_PORTFOLIO_ROUTE}>\n          <RemovePortfolioModal viewState={viewState?.portfolio} />\n        </Route>\n        <CatalogRoute\n          userCapabilities={portfolioUserCapabilities}\n          requiredCapabilities=\"destroy\"\n          exact\n          path={NESTED_REMOVE_PORTFOLIO_ROUTE}\n        >\n          <RemovePortfolioModal />\n        </CatalogRoute>\n        <Route exact path={SHARE_PORTFOLIO_ROUTE}>\n          <SharePortfolioModal\n            closeUrl={PORTFOLIOS_ROUTE}\n            querySelector=\"portfolio\"\n            removeSearch\n            viewState={viewState?.portfolio}\n            portfolioName={itemName}\n          />\n        </Route>\n        <Route exact path={NESTED_SHARE_PORTFOLIO_ROUTE}>\n          <SharePortfolioModal\n            closeUrl={PORTFOLIO_ROUTE}\n            portfolioName={itemName}\n          />\n        </Route>\n        <Route exact path={WORKFLOW_PORTFOLIO_ROUTE}>\n          <EditApprovalWorkflow\n            pushParam={{ pathname: PORTFOLIOS_ROUTE }}\n            objectType={PORTFOLIO_RESOURCE_TYPE}\n            objectName={itemName}\n            querySelector=\"portfolio\"\n            removeSearch\n            keepHash\n            onClose={() => dispatch(resetSelectedPortfolio())}\n          />\n        </Route>\n        <Route exact path={NESTED_WORKFLOW_PORTFOLIO_ROUTE}>\n          <EditApprovalWorkflow\n            querySelector=\"portfolio\"\n            pushParam={{ pathname: PORTFOLIO_ROUTE, search }}\n            closeUrl={PORTFOLIO_ROUTE}\n            objectType={PORTFOLIO_RESOURCE_TYPE}\n            objectName={itemName}\n          />\n        </Route>\n        <Route exact path={`${PORTFOLIO_ITEM_ROUTE}/order`}>\n          <OrderModal closeUrl={PORTFOLIO_ITEM_ROUTE} />\n        </Route>\n        <Route\n          exact\n          path={[EDIT_ORDER_PROCESS_ROUTE, NESTED_EDIT_ORDER_PROCESS_ROUTE]}\n        >\n          <SetOrderProcessModal\n            querySelector=\"portfolio\"\n            objectType={PORTFOLIO_RESOURCE_TYPE}\n            pushParam={{\n              pathname:\n                pathname === EDIT_ORDER_PROCESS_ROUTE\n                  ? PORTFOLIOS_ROUTE\n                  : PORTFOLIO_ROUTE,\n              search:\n                pathname === NESTED_EDIT_ORDER_PROCESS_ROUTE\n                  ? search\n                  : undefined\n            }}\n          />\n        </Route>\n\n        <CatalogRoute\n          path={`${PORTFOLIO_ITEM_ROUTE}/copy`}\n          requiredCapabilities=\"copy\"\n          userCapabilities={portfolioItemUserCapabilities}\n        >\n          {portfolioItemId && (\n            <CopyPortfolioItemModal\n              portfolioName={itemName()}\n              search={search}\n              portfolioItemId={portfolioItemId}\n              portfolioId={id}\n              closeUrl={PORTFOLIO_ITEM_ROUTE}\n            />\n          )}\n        </CatalogRoute>\n      </Switch>\n    </div>\n  );\n};\n\nexport default PortfolioRoutes;\n","import React, { lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { INVENTORY_RESOURCE_TYPE } from '../../utilities/constants';\nimport useQuery from '../../utilities/use-query';\nimport { useSelector } from 'react-redux';\n\nconst EditApprovalWorkflow = lazy(() =>\n  import(\n    /* webpackChunkName: \"edit-approval-workflow\" */ '../common/edit-approval-workflow'\n  )\n);\n\nconst PlatformRoutes = () => {\n  const [{ platform: id }] = useQuery(['platform']);\n  const { objectName } = useSelector((state) => {\n    const data = state?.platformReducer?.platformInventories?.data;\n    return {\n      objectName: data ? data.find((obj) => obj.id === id)?.name : 'inventory'\n    };\n  });\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/platform/platform-inventories/edit-workflow\">\n          <EditApprovalWorkflow\n            pushParam={{\n              pathname: '/platform/platform-inventories',\n              search: `?platform=${id}`\n            }}\n            objectType={INVENTORY_RESOURCE_TYPE}\n            objectName={objectName}\n            querySelector=\"inventory\"\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default PlatformRoutes;\n","import React, { Suspense } from 'react';\nimport PortfolioRoutes from './portfolio-routes';\nimport PlatformRoutes from './platform-routes';\n\nconst DialogRoutes = () => (\n  <Suspense fallback={<div></div>}>\n    <PortfolioRoutes />\n    <PlatformRoutes />\n  </Suspense>\n);\n\nexport default DialogRoutes;\n","import { Route, Switch, Redirect, useLocation } from 'react-router-dom';\nimport React, { lazy, Suspense } from 'react';\nimport some from 'lodash/some';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  ORDER_ROUTE\n} from './constants/routes';\nimport CatalogRoute from './routing/catalog-route';\nimport DialogRoutes from './smart-components/dialog-routes';\nconst CommonApiError = lazy(() =>\n  import(\n    /* webpackChunkName: \"error-page\" */ './smart-components/error-pages/common-api-error'\n  )\n);\n\nconst Products = lazy(() =>\n  import(\n    /* webpackChunkName: \"products\" */ './smart-components/products/products'\n  )\n);\nconst Platforms = lazy(() =>\n  import(\n    /* webpackChunkName: \"platforms\" */ './smart-components/platform/platforms'\n  )\n);\nconst Platform = lazy(() =>\n  import(\n    /* webpackChunkName: \"platform\" */ './smart-components/platform/platform'\n  )\n);\nconst Portfolios = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolios\" */ './smart-components/portfolio/portfolios'\n  )\n);\nconst Portfolio = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolio\" */ './smart-components/portfolio/portfolio'\n  )\n);\nconst Orders = lazy(() =>\n  import(/* webpackChunkName: \"orders\" */ './smart-components/order/orders')\n);\nconst OrderDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"order-detail\" */ './smart-components/order/order-detail/order-detail'\n  )\n);\nconst OrderProcesses = lazy(() =>\n  import(\n    /* webpackChunkName: \"order-processes\" */ './smart-components/order-process/order-processes'\n  )\n);\n\nconst paths = {\n  products: '/products',\n  platforms: '/platforms',\n  order_processes: '/order-processes',\n  platform: '/platform',\n  portfolios: PORTFOLIOS_ROUTE,\n  portfolio: PORTFOLIO_ROUTE,\n  orders: '/orders',\n  order: ORDER_ROUTE\n};\n\nconst errorPaths = ['/400', '/401', '/403', '/404'];\n\nexport const Routes = () => {\n  const { pathname } = useLocation();\n  return (\n    <Suspense fallback={<AppPlaceholder />}>\n      <Switch>\n        <CatalogRoute path={paths.products} component={Products} />\n        <CatalogRoute path={paths.portfolios} component={Portfolios} />\n        <CatalogRoute path={paths.portfolio} component={Portfolio} />\n        <CatalogRoute\n          permissions={['catalog:portfolios:create']}\n          path={paths.platforms}\n          component={Platforms}\n        />\n        <CatalogRoute\n          permissions={['catalog:portfolios:create']}\n          path={paths.platform}\n          component={Platform}\n        />\n        <CatalogRoute path={paths.order_processes} component={OrderProcesses} />\n        <CatalogRoute path={paths.orders} component={Orders} />\n        <CatalogRoute path={paths.order} component={OrderDetail} />\n        <Route path={errorPaths} component={CommonApiError} />\n        <Route\n          render={() =>\n            some(paths, (p) => p === pathname) ? null : (\n              <Redirect to={paths.portfolios} />\n            )\n          }\n        />\n      </Switch>\n      {/*\n       * We require the empty DIV around the dialog routes to avoid testing issues\n       * It does not have any visual effect on the application\n       * Emzyme simply cannot handle direct descendant of Suspense to be another Suspense\n       */}\n      <div>\n        <DialogRoutes />\n      </div>\n    </Suspense>\n  );\n};\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/cjs/NotificationPortal';\n\nimport { Routes } from './Routes';\nimport { MIN_SCREEN_HEIGHT } from './constants/ui-constants';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport {\n  SET_OPENAPI_SCHEMA,\n  SET_SOURCETYPE_ICONS,\n  INITIALIZE_I18N\n} from './redux/action-types';\n\nimport 'whatwg-fetch';\nimport smoothscroll from 'smoothscroll-polyfill';\n\n// react-int eng locale data\nimport { useIntl } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport { getAxiosInstance } from './helpers/shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from './utilities/constants';\nimport UserContext from './user-context';\n\nsmoothscroll.polyfill();\n\n/**\n * has to be in global context because nav listener is not a part of component lifecycle\n */\nlet ignoreRedirect = true;\n\nconst App = () => {\n  const [auth, setAuth] = useState(false);\n  const [userPermissions, setUserPermissions] = useState();\n  const [userIdentity, setUserIdentity] = useState({ identity: {} });\n  const [openApiSchema, setOpenApiSchema] = useState();\n  const dispatch = useDispatch();\n  const i18l = useIntl();\n  const history = useHistory();\n  let unregister;\n\n  useEffect(() => {\n    insights.chrome.init();\n    dispatch({ type: INITIALIZE_I18N, payload: i18l });\n    Promise.all([\n      getAxiosInstance()\n        .get(`${CATALOG_API_BASE}/openapi.json`)\n        .then((payload) => {\n          setOpenApiSchema(payload);\n          dispatch({ type: SET_OPENAPI_SCHEMA, payload });\n        }),\n      getAxiosInstance()\n        .get(`${SOURCES_API_BASE}/source_types`)\n        .then(({ data }) =>\n          dispatch({\n            type: SET_SOURCETYPE_ICONS,\n            payload: data.reduce(\n              (acc, curr) => ({\n                ...acc,\n                [curr.id]: curr.icon_url\n              }),\n              {}\n            )\n          })\n        ),\n      insights.chrome.auth.getUser().then((user) => {\n        setUserIdentity(user);\n        return insights.chrome\n          .getUserPermissions()\n          .then((data) => setUserPermissions(data));\n      })\n    ]).then(() => setAuth(true));\n\n    insights.chrome.identifyApp('catalog');\n    insights.chrome.navigation([\n      {\n        id: 'products',\n        title: 'Products'\n      },\n      {\n        id: 'portfolios',\n        title: 'Portfolios'\n      },\n      {\n        id: 'platforms',\n        title: 'Platforms'\n      },\n      {\n        id: 'order-processes',\n        title: 'Order processes'\n      },\n      {\n        id: 'orders',\n        title: 'Orders'\n      }\n    ]);\n\n    unregister = insights.chrome.on('APP_NAVIGATION', (event) => {\n      /**\n       * Handle navigation from insights main nav\n       * Uses React history directly instead of browser history to avoid template realod.\n       * only redirect after first application mount\n       */\n      if (!ignoreRedirect && event.domEvent) {\n        history.push(`/${event.navId}`);\n      }\n\n      ignoreRedirect = false;\n    });\n\n    return () => unregister();\n  }, []);\n\n  if (!auth) {\n    return <AppPlaceholder />;\n  }\n\n  return (\n    <UserContext.Provider\n      value={{ permissions: userPermissions, userIdentity, openApiSchema }}\n    >\n      <Fragment>\n        <NotificationsPortal />\n        <section className=\"pf-u-p-0 pf-u-ml-0 pf-l-page__main-section pf-c-page__main-section\">\n          <Grid style={{ minHeight: MIN_SCREEN_HEIGHT }}>\n            <GridItem sm={12} className=\"content-layout\">\n              <Routes />\n            </GridItem>\n          </Grid>\n        </section>\n      </Fragment>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n","export const MIN_SCREEN_HEIGHT = 'calc(100vh - 76px)';\n","import { createGlobalStyle } from 'styled-components';\n\n/**\n * Use direct css imports for FCE components\n * This will save some bundle size\n */\nimport '@redhat-cloud-services/frontend-components/components/ConditionalFilter.css';\nimport '@redhat-cloud-services/frontend-components/components/EmptyTable.css';\nimport '@redhat-cloud-services/frontend-components/components/PrimaryToolbar.css';\nimport '@redhat-cloud-services/frontend-components/components/Section.css';\nimport '@redhat-cloud-services/frontend-components/components/TableToolbar.css';\n\nconst GlobalStyle = createGlobalStyle`\n.disabled-link {\n  pointer-events: none\n}\n\n.font-14{\n  font-size: 14px;\n  color: var(--pf-global--Color--100);\n  font-weight: bold;\n  margin-bottom: 2px !important;\n}\n\n.flex-no-wrap {\n  flex-wrap: nowrap !important;\n  .flex-item-no-wrap {\n    align-self: flex-start;\n    white-space: nowrap;\n  }\n  .pf-c-form__actions {\n    flex-wrap: nowrap !important;\n  }\n}\n\n.orders-list {\n  background-color: var(--pf-global--BackgroundColor--100)\n}\n\n.share-column {\n  .pf-c-select_toggle-wrapper {\n    max-width: calc(100% - 70px);\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n}\n\n/**\n* Update DDF select styles for select component\n*/\n.ddorg__pf4-component-mapper__select-toggle.pf-c-select__toggle.pf-m-typeahead {\n  padding-top: 1px;\n  padding-bottom: 1px;\n}\n.ddorg__pf4-component-mapper__select-toggle {\n  min-height: 34px;\n}\n\n.filter-select {\n  width: 300px;\n  .pf-c-select__menu {\n    max-width: 100%\n  }\n  .pf-c-select__menu-item {\n    white-space: break-spaces;\n  }\n  .pf-c-select_toggle-wrapper {\n    max-width: calc(100% - 32px);\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n}\n\n//pf-4 fixes\n/**\n* non working pf display modifier: https://www.patternfly.org/v4/documentation/core/utilities/display#display-block\n*/\n.pf-m-grow {\n  flex-grow: 1;\n}\n\n.pf-c-breadcrumb__list, .overflow-wrap {\n  @supports not (overflow-wrap: anywhere) {\n    word-break: break-all;\n  }\n  @supports (overflow-wrap: anywhere) {\n    overflow-wrap: anywhere;\n  }\n}\n\na.pf-c-breadcrumb__item {\n  cursor: pointer;\n  >* {\n    cursor: pointer;\n  }\n}\n\n.pf4-hidefield-overlay{\n  .hide-indicator {\n    z-index: 1;\n  }\n  &::before {\n    z-index: 1;\n  }\n}\n/**\n * table vertical align defaults to baseline\n */\n.pf-c-table.orders-table tbody > tr > *{\n  vertical-align: inherit;\n}\n/**\n* End of PF4 fixes\n*/\n\n.icon-danger-fill {\n  fill: var(--pf-global--danger-color--100)\n}\n\n.pf-u-gg-md {\n  grid-gap: 16px !important;\n  gap: 16px;\n}\n\n.bottom-pagination-container {\n  width: 100%\n}\n\n.global-primary-background {\n  background-color: var(--pf-global--BackgroundColor--100)\n}\n\n.full-height {\n  min-height: 100%;\n}\n\n.content-layout {\n  display: flex;\n  flex-direction: column;\n}\n\n.pf-l-flex.align-items-center {\n  align-items: center;\n}\n\n/**\n * frontend components override\n */\n:root {\n  --ins-color--orange: #ec7a08;\n}\n\nbutton:focus {\n  outline: none;\n}\n\nsection.ins-l-content {\n  padding: var(--pf-global--spacer--lg); \n}\n\nsection.ins-l-button-group {\n  margin: 24px 0px;\n  margin: 1.5rem 0rem; \n}\n\nsection.ins-l-button-group > * {\n  display: inline; \n}\n\nsection.ins-l-button-group * + * {\n  margin-left: 5px;\n  margin-left: 0.3125rem; \n}\n\nsection.ins-l-icon-group * + * {\n  margin-left: 10px; \n}\n\nsection.ins-l-icon-group__with-major * + * {\n  margin-left: 7.5px; \n}\n\nsection.ins-l-icon-group__with-major .ins-battery:last-of-type {\n  padding-left: 15px;\n  border-left: 2px solid #eaeaea; \n}\n\nsection.ins-l-icon-group__with-major .ins-battery:last-of-type span.label {\n  font-weight: 500;\n  margin: 0 10px; \n}\n\n.ins-c-primary-toolbar__pagination {\n  margin-left: auto;\n}\n\n.ins-c-primary-toolbar .ins-c-primary-toolbar__group-filter {\n  margin-right: 7px;\n}\n\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { Router as ReactRouter } from 'react-router-dom';\nimport App from './App';\nimport { createBrowserHistory } from 'history';\nimport AppContext from './app-context';\nimport GlobalStyle from './global-styles';\n\nconst pathName = window.location.pathname.split('/');\npathName.shift();\n\nlet release = '/';\nif (pathName[0] === 'beta') {\n  release = `/${pathName.shift()}/`;\n}\n\n/**\n * Make sure that the [1] fragment is present in the pathname.\n * Otherwise we could end up with /undefined/ which will be transformed by the router to //\n */\nconst basename = `${release}${pathName[0]}/${pathName[1] ? pathName[1] : ''}`;\n\nexport const catalogHistory = createBrowserHistory({\n  basename\n});\n\nconst Router = () => (\n  <AppContext.Provider value={{ release }}>\n    <GlobalStyle />\n    <ReactRouter history={catalogHistory}>\n      <App />\n    </ReactRouter>\n  </AppContext.Provider>\n);\n\nexport default Router;\n","import { encodeState } from '../routing/uri-state-manager';\nimport { catalogHistory } from '../router';\n\nconst viewStateMiddleware = () => (dispatch) => (action) => {\n  if (\n    action.type.match(/_FULFILLED$/) &&\n    action?.payload?.meta &&\n    action?.meta?.storeState\n  ) {\n    const hash = encodeState(\n      {\n        ...action.meta,\n        ...action.payload.meta\n      },\n      action.meta.stateKey\n    );\n    /**\n     * Use replace event in case that app did not compute the viewState hash yet (eg. navigating in main menu).\n     * Use history replace event to prevent the multiple prev routes with the same pathname on stack witouth the hash param.\n     * The browser goBack method will now skip the non hash route.\n     * Users wont have to trigger the goBack action multiple times to get to the actual previous view.\n     */\n    const routingAction =\n      catalogHistory.location.hash && catalogHistory.location.hash !== hash\n        ? catalogHistory.push\n        : catalogHistory.replace;\n    routingAction({\n      pathname: catalogHistory.location.pathname,\n      search: catalogHistory.location.search,\n      hash\n    });\n  }\n\n  return dispatch(action);\n};\n\nexport default viewStateMiddleware;\n","import { catalogHistory } from '../router';\n\nconst unAuthorizedMiddleware = () => (dispatch) => (action) => {\n  const nextAction = { ...action };\n  if (action.type.match(/_REJECTED$/) && action?.payload?.redirect) {\n    setTimeout(() => {\n      catalogHistory.push(action.payload.redirect.pathname, {\n        from: catalogHistory.location\n      });\n    });\n    return;\n  }\n\n  return dispatch(nextAction);\n};\n\nexport default unAuthorizedMiddleware;\n","import promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, {\n  applyReducerHash\n} from '@redhat-cloud-services/frontend-components-utilities/files/cjs/ReducerRegistry';\nimport notifications from '@redhat-cloud-services/frontend-components-notifications/cjs/notifications';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/cjs/notificationsMiddleware';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport orderReducer, {\n  orderInitialState\n} from '../redux/reducers/order-reducer';\nimport platformReducer, {\n  platformInitialState\n} from '../redux/reducers/platform-reducer';\nimport orderProcessReducer, {\n  orderProcessInitialState\n} from '../redux/reducers/order-process-reducer';\nimport portfolioReducer, {\n  portfoliosInitialState\n} from '../redux/reducers/portfolio-reducer';\nimport approvalReducer, {\n  approvalInitialState\n} from '../redux/reducers/approval-reducer';\nimport rbacReducer, { rbacInitialState } from '../redux/reducers/rbac-reducer';\nimport shareReducer, {\n  shareInfoInitialState\n} from '../redux/reducers/share-reducer';\nimport openApiReducer, {\n  openApiInitialState\n} from '../redux/reducers/open-api-reducer';\nimport loadingStateMiddleware from './loading-state-middleware';\nimport emptyDataMiddleware from './empty-data-middleware';\nimport breadcrumbsReducer, {\n  initialBreadcrumbsState\n} from '../redux/reducers/breadcrumbs-reducer';\nimport i18nReducer, { i18nInitialState } from '../redux/reducers/i18n-reducer';\nimport viewStateMiddleware from './view-state-middleware';\nimport unAuthorizedMiddleware from './unauthorized-middleware';\n\nconst prodMiddlewares = [\n  notificationsMiddleware({\n    errorTitleKey: ['errors', 'message', 'statusText'],\n    errorDescriptionKey: [\n      'data.errors[0].detail',\n      'data.errors',\n      'data.error',\n      'data.message',\n      'response.body.errors',\n      'data',\n      'errorMessage',\n      'stack'\n    ]\n  })\n];\n\nconst baseMiddlewares = [\n  thunk,\n  promiseMiddleware,\n  unAuthorizedMiddleware,\n  viewStateMiddleware,\n  loadingStateMiddleware,\n  emptyDataMiddleware\n];\nconst registerReducers = (registry) => {\n  registry.register({\n    orderReducer: applyReducerHash(orderReducer, orderInitialState),\n    platformReducer: applyReducerHash(platformReducer, platformInitialState),\n    orderProcessReducer: applyReducerHash(\n      orderProcessReducer,\n      orderProcessInitialState\n    ),\n    portfolioReducer: applyReducerHash(\n      portfolioReducer,\n      portfoliosInitialState\n    ),\n    approvalReducer: applyReducerHash(approvalReducer, approvalInitialState),\n    rbacReducer: applyReducerHash(rbacReducer, rbacInitialState),\n    shareReducer: applyReducerHash(shareReducer, shareInfoInitialState),\n    openApiReducer: applyReducerHash(openApiReducer, openApiInitialState),\n    breadcrumbsReducer: applyReducerHash(\n      breadcrumbsReducer,\n      initialBreadcrumbsState\n    ),\n    i18nReducer: applyReducerHash(i18nReducer, i18nInitialState),\n    notifications\n  });\n};\n\nexport default (isProd = false) => {\n  const registry = new ReducerRegistry({}, [\n    ...baseMiddlewares,\n    ...prodMiddlewares,\n    ...(isProd ? [] : [reduxLogger])\n  ]);\n  registerReducers(registry);\n  return registry.getStore();\n};\n\nexport const testStore = () => {\n  const registry = new ReducerRegistry({}, [...baseMiddlewares]);\n  registerReducers(registry);\n  return registry.getStore();\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './utilities/store';\nimport Router from './router';\nimport { IntlProvider } from 'react-intl';\n\nReactDOM.render(\n  <Provider store={store(true)}>\n    <IntlProvider locale=\"en\">\n      <Router />\n    </IntlProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n/**\n * Register simple service worker JS assets pre chache\n * If registration fails, the app will continue to work withouth any issues.\n * Service worker is generated by webpack and hould be ever avaiable only in production version of the app.\n * You don't yant your JS bundles to be cached in dev env.\n * You must test it locally in non HTTPS environment due to the insecure origin and self signed certificate issues cause by the PROXY.\n * These cannot be overcome due to xss security policy inside service workers browser implementaion to avoid potential securitu issues.\n */\nif (navigator.serviceWorker) {\n  navigator.serviceWorker\n    .register(\n      `${\n        window.location.pathname.includes('/beta') ? '/beta' : ''\n      }/apps/catalog/service-worker.js`\n    )\n    .then((...args) => console.log('Service worker registered with: ', args))\n    .catch(console.log);\n}\n","export const CATALOG_API_BASE = `${process.env.BASE_PATH}/catalog/v1.2`;\nexport const SOURCES_API_BASE = `${process.env.BASE_PATH}/sources/v1.0`;\nexport const APPROVAL_API_BASE = `${process.env.BASE_PATH}/approval/v1.2`;\nexport const TOPOLOGICAL_INVENTORY_API_BASE = `${process.env.BASE_PATH}/topological-inventory/v1.0`;\nexport const RBAC_API_BASE = `${process.env.BASE_PATH}/rbac/v1`;\nexport const permissionValues = ['order', 'read', 'update'];\n\nexport const permissionOptions = [\n  {\n    value: 'order,read,update',\n    label: 'Can order/edit'\n  },\n  {\n    value: 'order,read',\n    label: 'Can order/view'\n  }\n];\n\nexport const PORTFOLIO_RESOURCE_TYPE = 'Portfolio';\nexport const PORTFOLIO_ITEM_RESOURCE_TYPE = 'PortfolioItem';\nexport const INVENTORY_RESOURCE_TYPE = 'ServiceInventory';\nexport const DEFAULT_MAX_LENGTH = 64;\n\nexport const APP_NAME = {\n  Portfolio: 'catalog',\n  PortfolioItem: 'catalog',\n  ServiceInventory: 'topology'\n};\n","const { defineMessages } = require('react-intl');\n\nconst orderProcessesMessages = defineMessages({\n  noOrderProcessesDescription: {\n    id: 'order-proces.empty.no-order-processes',\n    defaultMessage: 'No order processes found.'\n  },\n  noOrderProcessesFilterDescription: {\n    id: 'order-process.empty.no-results',\n    defaultMessage: 'No order processes match your filter criteria.'\n  },\n  orderProcessesFilter: {\n    id: 'order-process.filter.placeholder',\n    defaultMessage: 'Filter by name'\n  },\n  title: {\n    id: 'order-process.toolbar.title',\n    defaultMessage: 'Order processes'\n  },\n  noOrderProcesses: {\n    id: 'order-process.toolbar.order-process',\n    defaultMessage: 'No order processes'\n  },\n  orderProcess: {\n    id: 'order-process.toolbar.order-process',\n    defaultMessage: 'Order process'\n  },\n  addProcessSuccessTitle: {\n    id: 'order-process.actions.addProcessSuccessTitle',\n    defaultMessage: 'Success adding order process'\n  },\n  addProcessSuccessDescription: {\n    id: 'order-process.actions.addProcessSuccessDescription',\n    defaultMessage: 'The order process was added successfully.'\n  },\n  setOrderProcess: {\n    id: 'order-process.actions.set',\n    defaultMessage: 'Set order processes'\n  },\n  setOrderProcessSubtitle: {\n    id: 'order-process.tags.set',\n    defaultMessage: 'Set order processes for <strong>{objectType}</strong>'\n  },\n  currentOrderProcesses: {\n    id: 'order-process.set-order-process.current',\n    defaultMessage: 'Current order processes'\n  },\n  setOrderProcessNotificationTitle: {\n    id: 'order-process.notification.title',\n    defaultMessage: 'Success updating order process'\n  },\n  setOrderProcessNotificationDescription: {\n    id: 'order-process.notification.description',\n    defaultMessage:\n      // eslint-disable-next-line max-len\n      '{linked, plural, =0 {} other {{linked, number} {linked, plural, one {order process was} other {order processes were}} linked.}} {unlinked, plural, =0{} other {{unlinked, number} {unlinked, plural, one {order process was} other {order processes were}} unlinked.}}'\n  },\n  orderProcessName: {\n    id: 'order-process.name',\n    defaultMessage: 'Order process name'\n  },\n  enterOrderProcessName: {\n    id: 'order-process.enterName',\n    defaultMessage: 'Enter a name for the order process'\n  }\n});\n\nexport default orderProcessesMessages;\n","import { getAxiosInstance, getOrderProcessApi } from '../shared/user-login';\nimport { defaultSettings } from '../shared/pagination';\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nconst axiosInstance = getAxiosInstance();\nconst orderProcessApi = getOrderProcessApi();\n\nexport function listOrderProcesses(\n  filter = '',\n  { limit, offset } = defaultSettings\n) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/order_processes?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n}\n\nexport function fetchOrderProcessByName(name) {\n  return listOrderProcesses(name);\n}\n\nexport function addOrderProcess(processData) {\n  return getOrderProcessApi().createOrderProcess(processData);\n}\n\nexport const setOrderProcesses = (toTag, toUntag, resourceType) => {\n  const promises = [\n    ...toTag.map((id) =>\n      orderProcessApi.linkTagToOrderProcess(id, resourceType)\n    ),\n    ...toUntag.map((id) =>\n      orderProcessApi.unlinkTagFromOrderProcess(id, resourceType)\n    )\n  ];\n  return Promise.all(promises);\n};\n\nexport const getLinkedOrderProcesses = (objectType, objectId) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_processes?app_name=catalog&object_type=${objectType}&object_id=${objectId}`\n  );\n","import { useLocation } from 'react-router-dom';\n\nconst useQuery = (requiredParams = []) => {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search);\n  return [\n    requiredParams.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: query.get(curr)\n      }),\n      {}\n    ),\n    search,\n    query\n  ];\n};\n\nexport default useQuery;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport {\n  Bullseye,\n  Card,\n  CardBody,\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Grid,\n  GridItem,\n  Gallery,\n  GalleryItem,\n  Form,\n  FormGroup,\n  TextContent,\n  Text,\n  TextVariants,\n  ActionGroup,\n  Button\n} from '@patternfly/react-core';\nimport styled, { keyframes } from 'styled-components';\nimport { StyledToolbar } from '../styled-components/toolbars';\nimport actionMessages from '../../messages/actions.messages';\nimport formsMessages from '../../messages/forms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst wave = keyframes`\n  0% {\n    transform: translateX(-100%);\n  }\n  60% {\n    transform: translateX(100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n`;\n\nconst Skeleton = ({ component: Component = 'span', ...props }) => {\n  return (\n    <SkeletonContainer {...props}>\n      <Component />\n    </SkeletonContainer>\n  );\n};\n\nSkeleton.propTypes = {\n  component: PropTypes.string\n};\n\nconst SkeletonContainer = styled.div`\n  & > * {\n    position: relative;\n    overflow: hidden;\n    width: ${({ width }) =>\n      width ? `${width}${typeof width === 'number' ? 'px' : ''}` : '100%'};\n    height: ${({ height }) =>\n      height ? `${height}${typeof height === 'number' ? 'px' : ''}` : '20px'};\n    display: block;\n    border-radius: 3px;\n    background-color: ${({ secondaryColor }) =>\n      secondaryColor ? secondaryColor : '#f3f3f3'};\n    &:after {\n      animation: 2s ${wave} linear 0.5s infinite;\n      background: linear-gradient(90deg, transparent, #ecebeb, transparent);\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      top: 0;\n      transform: translateX(-100%);\n      z-index: 1;\n    }\n  }\n`;\n\nexport const CardLoader = ({ items }) => (\n  <Grid hasGutter>\n    <GridItem sm={12}>\n      <Section type=\"content\">\n        <Gallery hasGutter>\n          {[...Array(items)].map((_item, index) => (\n            <GalleryItem key={index}>\n              <Card style={{ height: 350 }}>\n                <CardBody>\n                  <Skeleton height={70} width=\"85%\" className=\"pf-u-mb-lg\" />\n                  <Skeleton height={5} width=\"90%\" className=\"pf-u-mb-sm\" />\n                  <Skeleton height={5} width=\"100%\" className=\"pf-u-mb-sm\" />\n                  <Skeleton height={5} width=\"76%\" className=\"pf-u-mb-sm\" />\n                </CardBody>\n              </Card>\n            </GalleryItem>\n          ))}\n        </Gallery>\n      </Section>\n    </GridItem>\n  </Grid>\n);\n\nCardLoader.propTypes = {\n  items: PropTypes.number\n};\n\nCardLoader.defaultProps = {\n  items: 13\n};\n\nexport const AppPlaceholder = () => (\n  <section className=\"pf-u-m-0 pf-u-p-0 pf-l-page__main-section pf-c-page__main-section\">\n    <Skeleton height={32} className=\"pf-u-p-lg global-primary-background\" />\n    <div className=\"pf-u-mt-lg\">\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    </div>\n  </section>\n);\n\nexport const ToolbarTitlePlaceholder = () => <Skeleton height={30} />;\n\nconst ProducLoaderColumn = styled.div`\n  width: 100%;\n  max-width: 250px;\n`;\n\nexport const ProductLoaderPlaceholder = () => (\n  <Fragment>\n    <Skeleton height={70} className=\"pf-u-mb-xl\" />\n    <ProducLoaderColumn>\n      {[...Array(3)].map((_, index) => (\n        <Fragment key={index}>\n          <Skeleton height={8} className=\"pf-u-mb-sm\" />\n          <Skeleton height={8} className=\"pf-u-ml-md pf-u-mb-sm\" width=\"60%\" />\n          <Skeleton height={8} className=\"pf-u-ml-md pf-u-mb-sm\" width=\"50%\" />\n          <Skeleton height={8} className=\"pf-u-mb-sm\" width=\"80%\" />\n          <Skeleton height={8} className=\"pf-u-ml-md pf-u-mb-lg\" width=\"40%\" />\n        </Fragment>\n      ))}\n    </ProducLoaderColumn>\n  </Fragment>\n);\n\nexport const IconPlaceholder = ({ height }) => (\n  <svg height={height} width={height}>\n    <circle cx={height / 2} cy={height / 2} r={height / 2} fill=\"#ecebeb\" />\n  </svg>\n);\n\nIconPlaceholder.propTypes = {\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nIconPlaceholder.defaultProps = {\n  height: '40'\n};\n\nconst FormItemLoader = () => <Skeleton height={38} className=\"pf-u-mb-lg\" />;\n\nexport const ShareLoader = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Form>\n      <TextContent>\n        <Text component={TextVariants.small}>\n          {formatMessage(formsMessages.inviteGroup)}\n        </Text>\n      </TextContent>\n      <FormGroup fieldId=\"1\">\n        <FormItemLoader />\n      </FormGroup>\n      <TextContent>\n        <Text component={TextVariants.small}>\n          {formatMessage(formsMessages.groupsAccess)}\n        </Text>\n      </TextContent>\n      <FormGroup fieldId=\"3\">\n        <FormItemLoader />\n      </FormGroup>\n      <FormGroup fieldId=\"4\">\n        <FormItemLoader />\n      </FormGroup>\n    </Form>\n  );\n};\n\nexport const WorkflowLoader = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Form>\n      <FormGroup fieldId=\"2\">\n        <FormItemLoader />\n      </FormGroup>\n      <ActionGroup>\n        <Button variant=\"primary\" isDisabled>\n          {formatMessage(actionMessages.save)}\n        </Button>\n      </ActionGroup>\n    </Form>\n  );\n};\n\nexport const ListLoader = ({ items }) => (\n  <DataList aria-label=\"list-loader\" aria-labelledby=\"datalist-placeholder\">\n    {[...Array(items)].map((_item, index) => (\n      <DataListItem key={index} aria-labelledby=\"datalist-item-placeholder\">\n        <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n          <DataListItemCells\n            dataListCells={[\n              <DataListCell key=\"1\">\n                <Skeleton height={67} />\n              </DataListCell>\n            ]}\n          />\n        </DataListItemRow>\n      </DataListItem>\n    ))}\n  </DataList>\n);\n\nListLoader.propTypes = {\n  items: PropTypes.number\n};\n\nListLoader.defaultProps = {\n  items: 5\n};\n\nexport const OrderDetailToolbarPlaceholder = () => <Skeleton height={70} />;\n\nexport const PlatformToolbarPlaceholder = () => (\n  <StyledToolbar className=\"pf-u-pr-lg pf-u-pl-lg pf-u-pb-md pf-u-pt-md\">\n    <Skeleton height={36} width={300} />\n  </StyledToolbar>\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { LevelItem } from '@patternfly/react-core';\n\nexport const StyledLevelItem = styled(\n  ({ alignStart, alignSelf, grow, ...props }) => <LevelItem {...props} />\n)`\n  align-self: ${({ alignSelf }) => (alignSelf ? alignSelf : 'inherit')};\n  align-items: ${({ alignStart }) =>\n    alignStart ? 'flex-start !important' : 'inherit'};\n  flex: ${({ grow }) => (grow ? '1' : '0')};\n`;\n","const { defineMessages } = require('react-intl');\n\nconst formsMessages = defineMessages({\n  orderProcessTitle: {\n    id: 'commonMessages.orderProcessesTitle',\n    defaultMessage: 'Order processes'\n  },\n  inviteGroup: {\n    id: 'forms.share.invite-group',\n    defaultMessage: 'Invite group'\n  },\n  groupsAccess: {\n    id: 'forms.groups-with-access',\n    defaultMessage: 'Groups with access'\n  },\n  groupsPlaceholder: {\n    id: 'share.groups.group.placeholder',\n    defaultMessage: 'Select group'\n  },\n  permissionsPlaceholder: {\n    id: 'share.groups.permissions.placeholder',\n    defaultMessage: 'Select permission'\n  },\n  nameTaken: {\n    id: 'forms.nameTaken',\n    defaultMessage: 'Name has already been taken'\n  }\n});\n\nexport default formsMessages;\n","import React from 'react';\nimport get from 'lodash/get';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\n\nimport {\n  PORTFOLIO_ITEM_NULLABLE,\n  PORTFOLIO_NULLABLE\n} from '../../constants/nullable-attributes';\n\nexport const scrollToTop = () =>\n  document.getElementById('root').scrollTo({\n    behavior: 'smooth',\n    top: 0,\n    left: 0\n  });\n\nexport const filterServiceOffering = ({ display_name, name }, filter) => {\n  const filterAtrribute = display_name || name;\n  return filterAtrribute\n    .trim()\n    .toLowerCase()\n    .includes(filter.toLowerCase());\n};\n\nexport const allowNull = (wrappedPropTypes) => (props, propName, ...rest) => {\n  if (props[propName] === null) {\n    return null;\n  }\n\n  return wrappedPropTypes(props, propName, ...rest);\n};\n\nexport const udefinedToNull = (entity, keys) =>\n  [...Object.keys(entity), ...keys].reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: entity[curr] === undefined ? null : entity[curr]\n    }),\n    {}\n  );\n\nconst nullableMapper = {\n  PortfolioItem: PORTFOLIO_ITEM_NULLABLE,\n  Portfolio: PORTFOLIO_NULLABLE\n};\n\nexport const sanitizeValues = (values, entityType, store) => {\n  const schemas = store.getState().openApiReducer.schema.components.schemas;\n  const permittedValues = Object.keys(values)\n    .filter((key) => !get(schemas, `${entityType}.properties.${key}.readOnly`))\n    .reduce(\n      (acc, curr) => (values[curr] ? { ...acc, [curr]: values[curr] } : acc),\n      {}\n    );\n  return udefinedToNull(permittedValues, nullableMapper[entityType]);\n};\n\nexport const timeAgo = (date) => (\n  <span key={date}>\n    <DateFormat date={date} type=\"relative\" />\n  </span>\n);\n\nconst sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nexport const readableBytes = (bytes) => {\n  if (bytes === 0) {\n    return 'O B';\n  }\n\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\n\n  return (bytes / Math.pow(1024, i)).toFixed(2) * 1 + ' ' + sizes[i];\n};\n\nexport const hasPermission = (userPermissions = [], permissions = []) =>\n  permissions.every((permission) =>\n    userPermissions.find((item) => item.permission === permission)\n  );\n","export const PORTFOLIO_ITEM_NULLABLE = [\n  'name',\n  'description',\n  'long_description',\n  'distributor',\n  'documentation_url',\n  'support_url'\n];\n\nexport const PORTFOLIO_NULLABLE = ['description'];\n","import { createAsyncActionTypes } from './action-types-helper';\n\nconst APPROVAL_PREFIX = '@@catalog/approval/';\n\nconst asyncActionTypes = [\n  'FETCH_WORKFLOWS',\n  'UPDATE_WORKFLOWS',\n  'RESOLVE_WORKFLOWS'\n];\n\nexport const ASYNC_ACTIONS = {\n  ...createAsyncActionTypes(asyncActionTypes, APPROVAL_PREFIX)\n};\n","export const createAsyncActionTypes = (actionTypes, prefix) =>\n  actionTypes\n    .reduce(\n      (acc, curr) => [\n        ...acc,\n        ...[curr, `${curr}_PENDING`, `${curr}_FULFILLED`, `${curr}_REJECTED`]\n      ],\n      []\n    )\n    .reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: `${prefix}${curr}`\n      }),\n      {}\n    );\n"],"sourceRoot":""}