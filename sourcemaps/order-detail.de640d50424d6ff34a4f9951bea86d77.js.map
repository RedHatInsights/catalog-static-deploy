{"version":3,"file":"js/order-detail.1643309516607.7f8cceb6a3e98c63ed41.js","mappings":"kGAEAA,EAAQ,GAAsB,CAC5BC,KAAM,gBACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,+LACTC,QAAS,EACTC,QAAS,GAEXN,EAAQ,GAAgB,oBAAoCA,EAAQ,IACpEA,EAAA,GAAqBA,EAAQ,I,yHCHzBO,EAAkB,SAAyBC,GAC7C,IAAIC,EAAYD,EAAKC,UACjBC,EAAQF,EAAKE,MACbC,EAAyB,IAAWF,GACxC,OAAoB,kBAAoB,IAAO,CAC7CG,aAAc,KACdC,KAAM,MACNJ,UAAWE,EACX,cAAe,2BACd,IAAKD,EAAO,MAGjB,UACAH,EAAgBO,UAAY,CAC1BJ,MAAO,oBACPD,UAAW,a,+RCnBPM,GAAiB,QAAe,CACpCL,MAAO,CACLM,GAAI,sBACJC,eAAgB,SAElBC,QAAS,CACPF,GAAI,wBACJC,eAAgB,WAElBE,gBAAiB,CACfH,GAAI,iCACJC,eAAgB,oBAElBG,SAAU,CACRJ,GAAI,yBACJC,eAAgB,YAElBI,UAAW,CACTL,GAAI,0BACJC,eAAgB,aAElBK,OAAQ,CACNN,GAAI,uBACJC,eAAgB,UAElBM,UAAW,CACTP,GAAI,0BACJC,eAAgB,aAElBO,SAAU,CACRR,GAAI,yBACJC,eAAgB,YAElBQ,OAAQ,CACNT,GAAI,uBACJC,eAAgB,UAElBS,MAAO,CACLV,GAAI,sBACJC,eAAgB,SAElBU,QAAS,CACPX,GAAI,wBACJC,eAAgB,WAElBW,QAAS,CACPZ,GAAI,wBACJC,eAAgB,WAElBY,QAAS,CACPb,GAAI,wBACJC,eAAgB,WAElBa,SAAU,CACRd,GAAI,yBACJC,eAAgB,YAElBc,QAAS,CACPf,GAAI,wBACJC,eAAgB,aAIPe,EAAuB,SAClCC,GAEA,OAACA,EACGA,EAAMC,QAAQ,MAAO,IAAIA,QAAQ,MAAM,SAACC,GAAS,OAAAA,EAAKC,iBACtD,WAMN,QAAe,OAAKrB,GAAc,CAAEsB,QAAS,e,uICpE7C,SAP4B,QAAO,EAAAC,cAAP,CAAqB,I,EAAA,sE,EAAA,gBAC6B,iBACpB,eACF,eACL,O,uEAJF,E,IACrC,SAAC,G,IAAEpC,EAAM,SAAe,OAAP,SAAiB,MAAWA,EAAM,MAAQ,KAC1D,SAAC,GAAe,OAAP,SAAiB,OAAS,aACrC,SAAC,GAAe,OAAP,SAAiB,OAAS,aACnC,SAAC,GAAe,OAAP,SAAiB,EAAI,a,qBCSnCqC,EAAoB,SAAU,M,8FAAA,mDAAwB,yCAEnB,UAA7B,SAAC,GAAe,OAAP,SAAgB,QAwCrC,QAhCqD,SAAC,G,IACpDC,EAAG,MACH,IAAAtC,OAAAA,OAAM,IAAG,KAAE,EACXuC,EAAQ,WAEF,GAAwB,IAAAC,WAAS,GAAhCC,EAAQ,KAAEC,EAAS,KACpB,GAA0B,IAAAF,WAAS,GAAlCG,EAAS,KAAEC,EAAU,KACtBC,GAAsB,SAC1B,SAAC,GAAiD,OAAT,yCAErCC,EAAeP,EACjBM,EAAoBN,GACpB,EAEEQ,GAAc,UAAiB,EAAmBD,EAExD,OACE,kBAACT,EAAiB,CAACrC,OAAQA,IACvByC,GAAY,kBAAC,KAAe,CAACzC,OAAQA,IACvC,kBAAC,EAAmB,CAClBgD,UAAW,IACXC,UAAW,EACXC,QAAST,EACTzC,OAAQyC,EAAWzC,EAAS,EAC5BmD,QAAS,WAAM,OAAAP,GAAW,IAC1BQ,OAAQ,WAAM,OAAAV,GAAU,IACxBJ,KAAMA,GAAOK,EAAYI,EAAcT,M,0LChC/C,QAbmE,SAAC,G,IAClEe,EAAO,UAEDC,GAAgB,SACtB,OACE,kBAAC,EAAAC,MAAK,CAAC7C,aAAa,KAAKC,KAAK,OAC3B2C,EAAc,gBAA4B,CACzCxC,GAAIuC,M,eC6CZ,QA9CgE,SAAC,G,IAC/DtD,EAAI,OACJyD,EAAW,cACXC,EAAO,UACPC,EAAM,SAEAJ,GAAgB,SACtB,OACE,kBAAC,EAAAK,MAAK,CACJD,OAAQA,EACRD,QAASA,EACTjD,MAAM,IAAG,kBACO,eAChBoD,OACE,kBAAC,EAAAL,MAAK,CAAC5C,KAAK,MAAMD,aAAa,MAC7B,kBAAC,EAAAmD,wBAAuB,CAACC,MAAO,CAAEC,KAAM,aAAgB,IACvDT,EAAc,kBAGnBU,QAAQ,QACRC,QAAS,CACP,kBAAC,EAAAC,OAAM,CACLC,QAASX,EACTY,OAAQ,eACRC,IAAI,eACJvD,GAAG,eACHkD,QAAQ,UAEPV,EAAc,kBAEjB,kBAAC,EAAAY,OAAM,CACLC,QAASV,EACTW,OAAQ,aACRC,IAAI,aACJvD,GAAG,aACHkD,QAAQ,QAEPV,EAAc,kBAIlBA,EAAc,sBAAkC,CAAEvD,KAAI,M,0BC1CvDuE,EAAoB,CAAC,oBACrBC,EAAmB,CAAC,aAEpBC,EAAY,SAACzC,GAAe,YAAf,IAAAA,IAAAA,EAAA,IAAeuC,EAAkBG,SAAS1C,IAiF7D,QArEsE,SAAC,G,IACrEA,EAAK,QACLsB,EAAO,UACPqB,EAAiB,oBACjBC,EAAe,kBACfC,EAAW,cACXrC,EAAQ,WACR,IAAAsC,UAAAA,OAAS,IAAG,GAAK,EAGXvB,GAFE,YAEc,UAChBwB,GAAW,UACX,GAAwC,IAAAtC,WAAS,GAAhDuC,EAAe,KAAEC,EAAkB,KACpCC,GAAU,SACVC,EAAa,WACjB,OAAAL,GAAa9C,GAASwC,EAAiBE,SAAS1C,IAalD,OACE,kBAAC,EAAAoD,SAAQ,KACP,kBAAC,EAAgB,CACf1B,QAAS,WAAM,OAAAuB,GAAmB,IAClCtB,OAAQqB,EACRvB,YAAa,WACXwB,GAAmB,GACnBF,GAAS,QAAYzB,KAEvBtD,KAAM2E,IAER,kBAAC,EAAAU,YAAW,KACTZ,EAAUzC,IACT,kBAAC,EAAAmC,OAAM,CACLC,QAAS,WAAM,OAAAa,GAAmB,IAClCK,YAAab,EAAUzC,GACvBuD,KAAK,SACL/E,UAAU,aACVO,GAAG,sBACHsD,OAAO,uBAENd,EAAc,kBAGlB4B,KACC,kBAAC,EAAAhB,OAAM,CACLC,QAAS,WAAM,OArCP,SAChBS,EACAD,EACApC,GAEA0C,EAAQM,KAAK,CACXC,SAAU,KACVC,OAAQ,cAAcb,EAAW,mBAAmBD,EAAe,WAAWpC,IA8BzDmD,CAAUd,EAAaD,EAAiBpC,IACvD8C,YAAaH,IACbI,KAAK,SACL/E,UAAU,aACVO,GAAG,uBACHsD,OAAO,wBAENd,EAAc,iB,+PChC3B,QAnCiF,SAAC,G,IAChFsB,EAAW,cACXe,EAAO,UACPhB,EAAe,kBACfpC,EAAQ,WACRR,EAAK,QACL6D,EAAQ,WAEFtC,GAAgB,SACtB,OACE,kBAAC,EAAAuC,MAAK,CAACtF,UAAU,aAAauF,WAAS,GACrC,kBAAC,EAAAD,MAAK,CAACC,WAAS,GACd,kBAAC,IAAQ,CAACvD,SAAUA,EAAUvC,OAAQ,GAAIsC,IAAKsD,IAC/C,kBAAC,EAAArC,MAAK,CAAC7C,aAAa,KAAKC,KAAK,MAC5B,kBAAC,IAAW,CACV6E,SAAS,uCACTO,aAAc,CACZC,UAAWpB,EACXqB,OAAQ1D,EACR,iBAAkBoC,IAGnBgB,KAIP,kBAAC,EAAAO,UAAS,KACR,kBAAC,EAAAC,MAAK,KAAK,IAAkBpE,GAAM,CAAEiC,QAAQ,YAC1CV,EAAc,KAAe,OAAqBvB,S,iqBC7BvDqE,GAAoB,QAAO,IAAP,CAAmB,+JAKvCC,GAAkB,SAAO,SAAC,GAAY,aAAV,IAAeC,EAAK,IAAtB,gBAA6B,OAC3D,gCAAYA,MADU,CAEtB,+DACuE,UAArD,SAAC,GAAmB,OAAP,aAAqB,OAAS,aAGzDC,GAAgB,SAAO,SAAC,GAAY,aAAV,IAAeD,EAAK,IAAtB,gBAA6B,mCAAQA,MAA7C,CAAuD,+CACL,UAA5D,SAAC,GAAmB,OAAP,aAAqB,cAAgB,aAsF9D,QAvDmE,SAAC,G,IAClEE,EAAO,UACPC,EAAU,aAEJnD,GAAgB,SACdiC,GAAS,SAAoB,KAC/BmB,GAAkB,SACtB,SAAC,GAAsC,OAAT,4BAAwB,MAElD,GAAuB,IAAAC,eAArBnB,EAAQ,WAAEC,EAAM,SAElBmB,EAvCY,SAClB,EACAtD,G,IADEvB,QAAF,MAAwC,GAAE,GAAnC,MAEJ,OACH,CACE8E,KAAM,GACNrG,MAAO8C,EAAc,mBAEvB,CACEuD,KAAM,YACNrG,MAAO8C,EAAc,mBAEvB,CACEuD,KAAM,aACNrG,MAAO8C,EAAc,oBAEvB,CACEuD,KAAM,aACNrG,MAAO8C,EAAc,mBACrB+B,YAAY,QAAetD,KAoBZ+E,CADCJ,EAAe,MACGpD,GAChCyD,EAAYH,EAASI,WACvB,SAAC,G,IAAEH,EAAI,OAAO,OAAArB,EAASyB,MAAM,KAAKC,QAAUL,EAAK7E,QAAQ,IAAK,OAMhE,OAJA+E,EAAYA,EAAY,EAAIA,EAAY,EAKtC,yBAAKxG,UAAU,mCACb,wBAAIA,UAAU,mBACXqG,EAASO,KAAI,SAAC,EAA6BC,G,IAA3BP,EAAI,OAAErG,EAAK,QAAE6E,EAAU,aAAc,OACpD,kBAACkB,EAAa,CACZhG,UAAW,mBACT6G,IAAUL,EAAY,gBAAkB,IAE1C1B,WAAYA,GAAcoB,EAC1BpC,IAAKwC,GAAQO,GAEb,kBAACf,EAAe,GACd9F,UAAU,kBACV8E,WAAYA,GAAcoB,GACrBpB,GAAcoB,EAAa,CAAEY,UAAW,GAAM,GAAG,CACtDlD,QAAS,WAAM,OAjBzBoB,EAAK,CAAEC,SAAU,GAAGgB,EAAUI,EAiBUQ,GAjBSP,KAAQpB,OAAM,OAmBrD,kBAACW,EAAiB,GAChBkB,OAAK,EACLC,KAAG,EACHlC,WAAYA,GAAcoB,EAC1BjB,SAAU,GAAGgB,EAAUK,EACvBW,gBAAc,EACdC,gBAAgB,eACXpC,GAAcoB,EAAa,CAAEY,UAAW,GAAM,IAElD7G,W,gEClGjB,QARkC,SAAU,I,EAAA,iG,EAAA,iG,uEAAA,E,yBCkCtCkH,GAAmB,IAAAC,OAAK,WAC5B,mEAEIC,GAAiB,IAAAD,OAAK,WAC1B,mEAEIE,GAAiB,IAAAF,OAAK,WAC1B,6EAEIG,IAAe,IAAAH,OAAK,WACxB,mEAEII,GAAiB,CACrB,aACA,iBACA,WACA,YACA,SAgJF,SA7IyC,W,MACjCzE,GAAgB,SAChB,GAA8B,IAAAd,WAAS,GAAtCiE,EAAU,KAAEuB,EAAa,KACzBC,GAAe,OAA+BF,IAAe,GAC9DrB,GAAkB,SACtB,SAAC,GAAsC,OAAT,8BAE1B5B,GAAW,UACXoD,GAAmB,OAAe,CAACxB,KACzC,IAAAyB,YAAU,WAUR,OATAH,GAAc,GACdI,QAAQC,IAAI,CACVvD,GAAS,WAAiB,WAAoB,WAC9CA,GACE,WACI,QAAmBmD,IACnB,QAAkBA,MAEvBK,MAAK,WAAM,OAAAN,GAAc,MACrB,WAC2B,mBAArBE,GACTA,OAGH,IAEK,IAAAK,EAA8C7B,EAAe,MAAtD8B,EAAuC9B,EAAe,cAAvC+B,EAAwB/B,EAAe,SAA7BV,EAAcU,EAAe,UA8B/DgC,EA5Bc,WAClB,IAAMC,EAAW,CAACH,EAAeC,EAAUzC,GAAa,IAAI4C,QAC1D,SAAC,GAAiB,OAAP,cAEb,GAAwB,IAApBD,EAASE,OACX,OAAO,KAGT,IAAIC,EAAkB,GAOtB,OANIN,EAAcG,SAChBG,EAAgBvD,KAAKiD,EAAcO,QAEnCD,EAAkBH,EAASxB,KAAI,SAAC,GAAe,OAAP,YAIxC,kBAAC,EAAA6B,MAAK,CACJ3E,IAAI,uBACJL,QAAQ,UACRiF,UAAQ,EACRzI,MAAO8C,EAAc,oBAAgC,CACnD4F,QAASJ,EAAgBK,KAAK,MAC9BC,MAAON,EAAgBD,WAMHQ,GAE5B,OACE,kBAAC,EAAAlE,SAAQ,KACNsB,EACC,kBAAC,KAA6B,MAE9B,kBAAC,IAAU,KACT,kBAAC,EAAAZ,MAAK,CAACtF,UAAU,cACf,kBAAC,EAAA2F,UAAS,KACR,kBAAC,KAAa,CAAC3F,UAAU,eACzB,kBAAC,IAAW,CAACiF,SAAS,WACnBlC,EAAc,qBAIrB,kBAAC,EAAAuC,MAAK,CAACtF,UAAU,gBACdmI,EACC,kBAAC,EAAyB,KACvBA,GAGH,kBAAC,EAAAvD,SAAQ,KACP,kBAAC,EAAAe,UAAS,KACR,kBAAC,EAAgB,CAAC7C,QAASkF,EAAMzH,MAEnC,kBAAC,EAAAoF,UAAS,KACR,kBAAC,EAAmB,CAClBxB,kBAAmB8D,EAAczI,KACjCsD,QAASkF,EAAMzH,GACfiB,MAAOwG,EAAMxG,MACb4C,gBAAiB6D,EAAc1H,GAC/B8D,YAAaoB,MAAAA,OAAS,EAATA,EAAWlF,GACxByB,SAAUkG,MAAAA,OAAQ,EAARA,EAAU3H,GACpB+D,WAAiC,QAAtB,EAAA2D,EAAcc,gBAAQ,eAAEzE,aAAa,EAChDe,SAAU4C,EAAc5C,eAMhC8C,GACA,kBAAC,EAAsB,CACrB/D,gBAAiB6D,EAAc1H,GAC/B8D,YAAaoB,EAAUlF,GACvByB,SAAUkG,MAAAA,OAAQ,EAARA,EAAU3H,GACpB6E,QAAS6C,MAAAA,OAAa,EAAbA,EAAezI,KACxBgC,MAAOwG,EAAMxG,MACb6D,SAAU4C,EAAc5C,YAKhC,kBAAC,EAAA2D,MAAK,KACJ,kBAAC,EAAAC,UAAS,CAACjJ,UAAU,6BACnB,kBAAC,EAAe,CAACkG,WAAYA,EAAYD,QAAS,QAEpD,kBAAC,EAAAgD,UAAS,CAACjJ,UAAU,wDAClBkG,EACC,kBAAC,EAAAgD,SAAQ,KACP,kBAACC,EAAAA,QAAO,OAGV,kBAAC,EAAAC,SAAQ,CAACC,SAAU,+BAClB,kBAAC,EAAAC,OAAM,KACL,kBAAC,EAAAC,MAAK,CACJC,KAAS,KAAW,YACpBC,UAAWtC,IAEb,kBAAC,EAAAoC,MAAK,CAACC,KAAS,KAAW,cACzB,kBAAClC,EAAc,OAEjB,kBAAC,EAAAiC,MAAK,CAACC,KAAS,KAAW,cACzB,kBAACnC,EAAc,OAEjB,kBAAC,EAAAkC,MAAK,CAACC,KAAM,KAAaC,UAAWlC,Y,iFClJrD,QApBI,CACFmC,UAAW,CAAEC,KAAM,kBAAC,EAAAC,gBAAe,MAAKC,MAAO,SAC/C,mBAAoB,CAClBF,KAAM,kBAAC,EAAAG,UAAS,MAChBD,MAAO,QAETE,QAAS,CAAEJ,KAAM,kBAAC,EAAAK,eAAc,MAAKH,MAAO,QAC5CI,OAAQ,CAAEN,KAAM,kBAAC,EAAAO,sBAAqB,MAAKL,MAAO,OAClDM,SAAU,CAAER,KAAM,kBAAC,EAAArG,wBAAuB,MAAKuG,MAAO,UACtDO,QAAS,CAAET,KAAM,kBAAC,EAAAK,eAAc,MAAKH,MAAO,QAC5CQ,SAAU,CAAEV,KAAM,kBAAC,EAAAC,gBAAe,MAAKC,MAAO,SAC9CS,OAAQ,CAAEX,KAAM,kBAAC,EAAAO,sBAAqB,MAAKL,MAAO,OAClDU,MAAO,CAAEZ,KAAM,kBAAC,EAAAO,sBAAqB,MAAKL,MAAO,OACjDW,UAAW,CACTb,KAAM,kBAAC,EAAAG,UAAS,MAChBD,MAAO,QAETY,QAAS,CAAEd,KAAM,kBAAC,EAAArG,wBAAuB,MAAKuG,MAAO,U,2GCZ1Ca,GALC,KAKuB,CACnC,iBAAkB,CAAC,SAAU,aAC7B,cAAe,CAAC,SAAU,YAAa,oBAG5BC,IAAc,MACxB,MAAkB,SACjBC,GACc,OAAAA,IAAWC,iBAAiBC,kBAAkBtL,MAC9D,EAAC,MAAuB,SACtBoL,GACc,OAAAA,IAAWC,iBAAiB5C,cAAcA,cAAczI,MACxE,EAAC,MAAoB,WAAc,qBACnC,EAAC,MAAqB,WAAc,sBACpC,EAAC,MAAiB,SAChBoL,GACc,OAAAA,IAAWG,gBAAgBC,iBAAiBxL,MAC5D,EAAC,MAAmC,SAClCoL,GACc,OAAAA,IAAWG,gBAAgBE,gBAAgBC,QAAQ1L,MACnE,EAAC,MAAc,SACboL,GAEM,MAA2BA,IAAWO,aAAaC,YAAjDnD,EAAa,gBAAED,EAAK,QAC5B,OAAUC,EAAczI,KAAI,MAAMwI,EAAMzH,IAE1C,EAAC,MAA4B,WAAc,sB,GAGhC8K,IAAe,MACzB,MAAkB,CACjBpG,SAAU,KACVhF,MAAO,aACPuF,aAAc,IAEhB,EAAC,MAAiB,CAChBP,SAAU,KACVhF,MAAO,YACPuF,aAAc,IAEhB,EAAC,MAAc,CACbP,SAAU,KACVhF,MAAO,SACPuF,aAAc,I,oZC1DL8F,EAAiC,SAC5CrG,EACAC,GACG,YAFH,IAAAD,IAAAA,EAAA,SACA,IAAAC,IAAAA,EAAA,IACG,SACHX,EACAqG,GAEA,GAAwB,IAApB3F,EAASqD,OACX,OAAO/D,EAAS,CAAEQ,KAAM,KAAwBwG,QAAS,KAG3D,IAAMC,EAAmB,GACR,0BAAbvG,GACFuG,EAAOxG,KAAK,eAGVC,EAASwG,WAAW,0CACtBD,EAAO,GAAK,cACZA,EAAO,GAAK,aACRvG,EAASwG,WAAW,2CACtBD,EAAO,GAAK,oBAIZvG,EAASwG,WAAW,yBACtBD,EAAO,GAAK,cAId,IAAIE,GADJzG,EAAWA,EAASxD,QAAQ+J,EAAO,GAAI,KAEpC/J,QAAQ,MAAO,IACfiF,MAAM,KACNiF,QAA6B,SAACC,EAAKC,EAAMhF,G,QAClC5B,EAAW,IACf4B,EAAQ,GAAK+E,EAAI/E,EAAQ,GAAK+E,EAAI/E,EAAQ,GAAG5B,SAAW,IACvDuG,EAAO3E,GAAM,IAAIgF,EACdC,EAAiBnB,EACrB1F,GAEF,IAAK6G,EACH,OAAOF,EAGT,IAAMpG,EAAe,EAAH,KACZqB,EAAQ,IAAmB,QAAd,EAAA+E,EAAI/E,EAAQ,UAAE,eAAErB,eAC7BN,EAAO2G,KAAO,MAAIA,GAAO3G,EAAO2G,GAAK,GAAK,IAE3CnB,EAAoCmB,IACtCnB,EAAoCmB,GAAME,SAAQ,SAACjI,GAClD0B,EAAa1B,GAAOoB,EAAOpB,MAI1BuH,EAA8BpG,KACjC2G,EAAM,CAAEP,EAA8BpG,KAGxC,IAAM+G,EAAYF,EAAclB,GAEhC,OAAQoB,EAEJ,EAAD,KACMJ,GAAG,IACN,CACE3G,SAAQ,EACRO,aAAY,EACZvF,MAAO+L,K,GANXJ,IASH,IAML,OALIF,EAAOpD,OAAS,GAAM+C,EAA8BK,EAAO,GAAGzG,YAChEyG,EAAS,EAAH,CAAKL,EAA8BK,EAAO,GAAGzG,WAAcyG,GAAM,IAIlEnH,EAAS,CAAEQ,KAAM,KAAwBwG,QAASG,MCjD3D,QA7BuB,SACrBO,QAAA,IAAAA,IAAAA,EAAA,IAMA,IAAM1H,GAAW,UACX,GAAuB,IAAA6B,eAArBnB,EAAQ,WAAEC,EAAM,SACxB,GAA8B,IAA1B+G,EAAe3D,OACjB,OAAO/D,EACJ+G,EAA+B,GAAI,KAIxC,IAAM9F,EAAe,IAAI0G,gBAAgBhH,GACnCiH,EAA0B,GAShC,OARA3G,EAAauG,SAAQ,SAACK,EAAOtI,GAC3BqI,EAAarI,GAAOsI,MAGtB,IAAAxE,YAAU,WACRrD,EAAS+G,EAA+BrG,EAAUkH,M,+LACjD,EAAClH,GAAagH,GAAc,IAExB,WACL,OAAA1H,EAAU+G,EAA+B,GAAI,Q","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/angle-left-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/messages/states.messages.ts","webpack:///./src/presentational-components/styled-components/lazy-load-image.ts","webpack:///./src/presentational-components/shared/card-icon.tsx","webpack:///./src/smart-components/order/order-detail/order-detail-title.tsx","webpack:///./src/smart-components/order/cancel-order-modal.tsx","webpack:///./src/smart-components/order/order-detail/order-toolbar-actions.tsx","webpack:///./src/smart-components/order/order-detail/order-detail-information.tsx","webpack:///./src/smart-components/order/order-detail/order-detail-menu.tsx","webpack:///./src/presentational-components/styled-components/unavailable-alert-container.ts","webpack:///./src/smart-components/order/order-detail/order-detail.tsx","webpack:///./src/smart-components/order/order-status-mapper.tsx","webpack:///./src/helpers/shared/breadcrumbs-creators.ts","webpack:///./src/redux/actions/breadcrumbs-actions.ts","webpack:///./src/utilities/use-breadcrumbs.ts"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.AngleLeftIconConfig = {\n  name: 'AngleLeftIcon',\n  height: 512,\n  width: 256,\n  svgPath: 'M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.AngleLeftIcon = require('../createIcon').createIcon(exports.AngleLeftIconConfig);\nexports[\"default\"] = exports.AngleLeftIcon;","import React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Title } from \"@patternfly/react-core/dist/esm/components/Title/Title.js\";\n/**\n * This is the title section of the pageHeader\n */\n\nvar PageHeaderTitle = function PageHeaderTitle(_ref) {\n  var className = _ref.className,\n      title = _ref.title;\n  var pageHeaderTitleClasses = classNames(className);\n  return /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h1\",\n    size: \"2xl\",\n    className: pageHeaderTitleClasses,\n    \"widget-type\": \"InsightsPageHeaderTitle\"\n  }, \" \", title, \" \");\n};\n\nexport default PageHeaderTitle;\nPageHeaderTitle.propTypes = {\n  title: propTypes.node.isRequired,\n  className: propTypes.string\n};","import labelMessages from './labels.messages';\n\nimport { defineMessages } from 'react-intl';\n\nconst statesMessages = defineMessages({\n  title: {\n    id: 'common.states.title',\n    defaultMessage: 'State'\n  },\n  ordered: {\n    id: 'common.states.ordered',\n    defaultMessage: 'Ordered'\n  },\n  approvalPending: {\n    id: 'common.states.approval-pending',\n    defaultMessage: 'Approval Pending'\n  },\n  canceled: {\n    id: 'common.states.canceled',\n    defaultMessage: 'Canceled'\n  },\n  completed: {\n    id: 'common.states.completed',\n    defaultMessage: 'Completed'\n  },\n  failed: {\n    id: 'common.states.failed',\n    defaultMessage: 'Failed'\n  },\n  undecided: {\n    id: 'common.states.undecided',\n    defaultMessage: 'Undecided'\n  },\n  approved: {\n    id: 'common.states.approved',\n    defaultMessage: 'Approved'\n  },\n  denied: {\n    id: 'common.states.denied',\n    defaultMessage: 'Denied'\n  },\n  error: {\n    id: 'common.states.error',\n    defaultMessage: 'Error'\n  },\n  pending: {\n    id: 'common.states.pending',\n    defaultMessage: 'Pending'\n  },\n  skipped: {\n    id: 'common.states.skipped',\n    defaultMessage: 'Skipped'\n  },\n  started: {\n    id: 'common.states.started',\n    defaultMessage: 'Started'\n  },\n  notified: {\n    id: 'common.states.notified',\n    defaultMessage: 'Notified'\n  },\n  unknown: {\n    id: 'common.states.unknown',\n    defaultMessage: 'Unknown'\n  }\n});\n\nexport const getTranslatableState = (\n  state: string\n): keyof typeof statesMessages =>\n  (state\n    ? state.replace(/\\s/g, '').replace(/^./, (char) => char.toLowerCase())\n    : 'unknown') as keyof typeof statesMessages;\n\n/**\n * We must include the created state so the dynamic data from DB can look for these messages in one place\n * The created message is shared among other components and is just a state message\n */\nexport default { ...statesMessages, created: labelMessages.created };\n","import styled from 'styled-components';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst StyledLazyLoadImage = styled(LazyLoadImage)`\n  height: ${({ height, hidden }) => (hidden ? '0px' : `${height}px` || '40px')};\n  display: ${({ hidden }) => (hidden ? 'none' : 'inherit')};\n  float: ${({ hidden }) => (hidden ? 'left' : 'inherit')};\n  width: ${({ hidden }) => (hidden ? 0 : 'inherit')};\n`;\n\nexport default StyledLazyLoadImage;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\n\nimport { IconPlaceholder } from './loader-placeholders';\nimport CardIconDefault from '../../assets/images/card-icon-default.svg';\nimport CardIconDefaultS from '../../assets/images/card-icon-default-s.svg';\nimport StyledLazyLoadImage from '../styled-components/lazy-load-image';\nimport { CatalogRootState } from '../../types/redux';\nimport { StringObject } from '../../types/common-types';\nimport { isStandalone } from '../../helpers/shared/helpers';\n\ninterface CardIconContainerProps {\n  height: number;\n}\nconst CardIconContainer = styled.div<CardIconContainerProps>`\n  display: inline-block;\n  height: ${({ height }) => `${height}px`};\n`;\n\nexport interface CardIconProps {\n  src?: string;\n  height?: number;\n  sourceId?: string;\n}\nconst CardIcon: React.ComponentType<CardIconProps> = ({\n  src,\n  height = 40,\n  sourceId\n}) => {\n  const [isLoaded, setLoaded] = useState(false);\n  const [isUnknown, setUnknown] = useState(false);\n  const platformIconMapping = useSelector<CatalogRootState, StringObject>(\n    ({ platformReducer: { platformIconMapping } }) => platformIconMapping\n  );\n  const defaultIconI = sourceId\n    ? platformIconMapping[sourceId]\n    : CardIconDefault;\n\n  const defaultIcon = isStandalone() ? CardIconDefaultS : defaultIconI;\n\n  return (\n    <CardIconContainer height={height}>\n      {!isLoaded && <IconPlaceholder height={height} />}\n      <StyledLazyLoadImage\n        threshold={2000}\n        delayTime={0}\n        hidden={!isLoaded}\n        height={isLoaded ? height : 0}\n        onError={() => setUnknown(true)}\n        onLoad={() => setLoaded(true)}\n        src={!src || isUnknown ? defaultIcon : src}\n      />\n    </CardIconContainer>\n  );\n};\n\nexport default CardIcon;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { Title } from '@patternfly/react-core';\nimport ordersMessages from '../../../messages/orders.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\n\nconst OrderDetailTitle: React.ComponentType<{ orderId: string }> = ({\n  orderId\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Title headingLevel=\"h1\" size=\"3xl\">\n      {formatMessage(ordersMessages.detailTitle, {\n        id: orderId\n      })}\n    </Title>\n  );\n};\n\nexport default OrderDetailTitle;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Button, Modal, Title } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport ordersMessages from '../../messages/orders.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nexport interface CancelOrderModal {\n  name: string;\n  cancelOrder: () => void;\n  onClose: () => void;\n  isOpen?: boolean;\n}\nconst CancelOrderModal: React.ComponentType<CancelOrderModal> = ({\n  name,\n  cancelOrder,\n  onClose,\n  isOpen\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\" \"\n      aria-labelledby=\"cancel-order\"\n      header={\n        <Title size=\"2xl\" headingLevel=\"h2\">\n          <ExclamationTriangleIcon style={{ fill: '#F0AB00' }} />{' '}\n          {formatMessage(ordersMessages.cancelOrder)}\n        </Title>\n      }\n      variant=\"small\"\n      actions={[\n        <Button\n          onClick={cancelOrder}\n          ouiaId={'cancel-order'}\n          key=\"cancel-order\"\n          id=\"cancel-order\"\n          variant=\"danger\"\n        >\n          {formatMessage(ordersMessages.cancelOrder)}\n        </Button>,\n        <Button\n          onClick={onClose}\n          ouiaId={'keep-order'}\n          key=\"keep-order\"\n          id=\"keep-order\"\n          variant=\"link\"\n        >\n          {formatMessage(ordersMessages.keepOrder)}\n        </Button>\n      ]}\n    >\n      {formatMessage(ordersMessages.cancelDescription, { name })}\n    </Modal>\n  );\n};\n\nexport default CancelOrderModal;\n","/* eslint-disable react/prop-types */\nimport React, { useState, Fragment } from 'react';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useDispatch } from 'react-redux';\n\nimport { cancelOrder } from '../../../redux/actions/order-actions';\nimport CancelOrderModal from '../cancel-order-modal';\nimport ordersMessages from '../../../messages/orders.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport { PORTFOLIO_ITEM_ORDER_ROUTE } from '../../../constants/routes';\nimport useEnhancedHistory from '../../../utilities/use-enhanced-history';\n\nconst CANCELABLE_STATES = ['Approval Pending'];\nconst ORDERABLE_STATES = ['Completed'];\n\nconst canCancel = (state = '') => CANCELABLE_STATES.includes(state);\n\nexport interface OrderToolbarActions {\n  state?: string;\n  orderId: string;\n  portfolioItemName: string;\n  portfolioItemId: string;\n  portfolioId: string;\n  sourceId: string;\n  orderable: boolean;\n  icon_url: string;\n}\nconst OrderToolbarActions: React.ComponentType<OrderToolbarActions> = ({\n  state,\n  orderId,\n  portfolioItemName,\n  portfolioItemId,\n  portfolioId,\n  sourceId,\n  orderable = false,\n  icon_url\n}) => {\n  const formatMessage = useFormatMessage();\n  const dispatch = useDispatch();\n  const [cancelModalOpen, setCancelModalOpen] = useState(false);\n  const history = useEnhancedHistory();\n  const canReorder = () =>\n    orderable && state && ORDERABLE_STATES.includes(state);\n\n  const onReorder = (\n    portfolioId: string,\n    portfolioItemId: string,\n    sourceId: string\n  ) => {\n    history.push({\n      pathname: PORTFOLIO_ITEM_ORDER_ROUTE,\n      search: `?portfolio=${portfolioId}&portfolio-item=${portfolioItemId}&source=${sourceId}`\n    });\n  };\n\n  return (\n    <Fragment>\n      <CancelOrderModal\n        onClose={() => setCancelModalOpen(false)}\n        isOpen={cancelModalOpen}\n        cancelOrder={() => {\n          setCancelModalOpen(false);\n          dispatch(cancelOrder(orderId));\n        }}\n        name={portfolioItemName}\n      />\n      <ActionGroup>\n        {canCancel(state) && (\n          <Button\n            onClick={() => setCancelModalOpen(true)}\n            isDisabled={!canCancel(state)}\n            type=\"button\"\n            className=\"pf-u-mr-md\"\n            id=\"cancel-order-action\"\n            ouiaId=\"cancel-order-action\"\n          >\n            {formatMessage(ordersMessages.cancelOrder)}\n          </Button>\n        )}\n        {canReorder() && (\n          <Button\n            onClick={() => onReorder(portfolioId, portfolioItemId, sourceId)}\n            isDisabled={!canReorder()}\n            type=\"button\"\n            className=\"pf-u-mr-md\"\n            id=\"reorder-order-action\"\n            ouiaId=\"reorder-order-action\"\n          >\n            {formatMessage(ordersMessages.reOrder)}\n          </Button>\n        )}\n      </ActionGroup>\n    </Fragment>\n  );\n};\n\nexport default OrderToolbarActions;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { LevelItem, Level, Title, Label } from '@patternfly/react-core';\n\nimport CardIcon from '../../../presentational-components/shared/card-icon';\nimport { CATALOG_API_BASE } from '../../../utilities/constants';\nimport CatalogLink from '../../common/catalog-link';\nimport statesMessages, {\n  getTranslatableState\n} from '../../../messages/states.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport orderStatusMapper from '../order-status-mapper';\n\nexport interface OrderDetailInformationProps {\n  portfolioItemId: string;\n  sourceId: string;\n  jobName: string;\n  portfolioId: string;\n  state: keyof typeof orderStatusMapper;\n  icon_url: string;\n}\nconst OrderDetailInformation: React.ComponentType<OrderDetailInformationProps> = ({\n  portfolioId,\n  jobName,\n  portfolioItemId,\n  sourceId,\n  state,\n  icon_url\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Level className=\"pf-u-mt-sm\" hasGutter>\n      <Level hasGutter>\n        <CardIcon sourceId={sourceId} height={60} src={icon_url} />\n        <Title headingLevel=\"h2\" size=\"lg\">\n          <CatalogLink\n            pathname=\"/portfolios/portfolio/portfolio-item\"\n            searchParams={{\n              portfolio: portfolioId,\n              source: sourceId,\n              'portfolio-item': portfolioItemId\n            }}\n          >\n            {jobName}\n          </CatalogLink>\n        </Title>\n      </Level>\n      <LevelItem>\n        <Label {...orderStatusMapper[state]} variant=\"outline\">\n          {formatMessage(statesMessages[getTranslatableState(state)])}\n        </Label>\n      </LevelItem>\n    </Level>\n  );\n};\n\nexport default OrderDetailInformation;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport useEnhancedHistory from '../../../utilities/use-enhanced-history';\nimport CatalogLink from '../../common/catalog-link';\nimport ordersMessages from '../../../messages/orders.messages';\nimport { stateToDisplay } from '../../../helpers/shared/helpers';\n\n/**\n * Make sure to import correct Tabs styles\n */\nimport '@patternfly/react-styles/css/components/Tabs/tabs.css';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport { OrderStateEnum } from '@redhat-cloud-services/catalog-client';\nimport { FormatMessage } from '../../../types/common-types';\nimport { CatalogRootState } from '../../../types/redux';\nimport { OrderDetail } from '../../../redux/reducers/order-reducer';\n\nconst StyledCatalogLink = styled(CatalogLink)`\n  color: var(--pf-c-tabs__link--Color);\n  text-decoration: none;\n`;\n\nconst StyledTabButton = styled(({ isDisabled, ...props }) => (\n  <button {...props} />\n))`\n  pointer-events: ${({ isDisabled }) => (isDisabled ? 'none' : 'initial')};\n`;\n\nconst StyledTabItem = styled(({ isDisabled, ...props }) => <li {...props} />)`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n`;\n\nconst useNavItems = (\n  { state }: { state?: OrderStateEnum } = {},\n  formatMessage: FormatMessage\n) => [\n  {\n    link: '',\n    title: formatMessage(ordersMessages.orderDetails)\n  },\n  {\n    link: '/approval',\n    title: formatMessage(ordersMessages.menuApproval)\n  },\n  {\n    link: '/provision',\n    title: formatMessage(ordersMessages.menuProvision)\n  },\n  {\n    link: '/lifecycle',\n    title: formatMessage(ordersMessages.menuLifecycle),\n    isDisabled: stateToDisplay(state)\n  }\n];\n\nexport interface OrderDetailMenuProps {\n  baseUrl: string;\n  isFetching?: boolean;\n}\n\nconst OrderDetailMenu: React.ComponentType<OrderDetailMenuProps> = ({\n  baseUrl,\n  isFetching\n}) => {\n  const formatMessage = useFormatMessage();\n  const { push } = useEnhancedHistory();\n  const orderDetailData = useSelector<CatalogRootState, OrderDetail>(\n    ({ orderReducer: { orderDetail } }) => orderDetail || {}\n  );\n  const { pathname, search } = useLocation();\n  const { order } = orderDetailData;\n  const navItems = useNavItems(order, formatMessage);\n  let activeKey = navItems.findIndex(\n    ({ link }) => pathname.split('/').pop() === link.replace('/', '')\n  );\n  activeKey = activeKey > 0 ? activeKey : 0;\n  const handleTabClick = (tabIndex: number) =>\n    push({ pathname: `${baseUrl}${navItems[tabIndex].link}`, search });\n\n  return (\n    <div className=\"pf-c-tabs pf-u-pl-xl pf-u-pr-md\">\n      <ul className=\"pf-c-tabs__list\">\n        {navItems.map(({ link, title, isDisabled }, index) => (\n          <StyledTabItem\n            className={`pf-c-tabs__item${\n              index === activeKey ? ' pf-m-current' : ''\n            }`}\n            isDisabled={isDisabled || isFetching}\n            key={link || index}\n          >\n            <StyledTabButton\n              className=\"pf-c-tabs__link\"\n              isDisabled={isDisabled || isFetching}\n              {...(isDisabled || isFetching ? { tabIndex: -1 } : {})}\n              onClick={() => handleTabClick(index)}\n            >\n              <StyledCatalogLink\n                exact\n                nav\n                isDisabled={isDisabled || isFetching}\n                pathname={`${baseUrl}${link}`}\n                preserveSearch\n                activeClassName=\"pf-m-active\"\n                {...(isDisabled || isFetching ? { tabIndex: -1 } : {})}\n              >\n                {title}\n              </StyledCatalogLink>\n            </StyledTabButton>\n          </StyledTabItem>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default OrderDetailMenu;\n","import styled from 'styled-components';\n\nconst UnAvailableAlertContainer = styled.div`\n  width: 100%;\n  > *:not(:last-child) {\n    margin-bottom: 4px;\n    width: 100%;\n  }\n`;\n\nexport default UnAvailableAlertContainer;\n","import React, { useEffect, useState, Fragment, Suspense, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Level,\n  LevelItem,\n  Stack,\n  StackItem,\n  Bullseye,\n  Alert\n} from '@patternfly/react-core';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchOrderDetails } from '../../../redux/actions/order-actions';\nimport { fetchOrderDetails as fetchOrderDetailsS } from '../../../redux/actions/order-actions-s';\nimport OrderDetailTitle from './order-detail-title';\nimport OrderToolbarActions from './order-toolbar-actions';\nimport OrderDetailInformation from './order-detail-information';\nimport OrderDetailMenu from './order-detail-menu';\nimport { OrderDetailToolbarPlaceholder } from '../../../presentational-components/shared/loader-placeholders';\nimport useQuery from '../../../utilities/use-query';\nimport useBreadcrumbs from '../../../utilities/use-breadcrumbs';\nimport { fetchPlatforms } from '../../../redux/actions/platform-actions';\nimport { fetchPlatforms as fetchPlatformsS } from '../../../redux/actions/platform-actions-s';\nimport UnAvailableAlertContainer from '../../../presentational-components/styled-components/unavailable-alert-container';\nimport ordersMessages from '../../../messages/orders.messages';\nimport CatalogLink from '../../common/catalog-link';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport { CatalogRootState } from '../../../types/redux';\nimport { OrderDetail as OrderDetailType } from '../../../redux/reducers/order-reducer';\nimport { GetOrderDetailParams } from '../../../helpers/order/order-helper';\nimport { ORDER_ROUTE } from '../../../constants/routes';\nimport TopToolbar from '../../../presentational-components/shared/top-toolbar';\nimport { isStandalone } from '../../../helpers/shared/helpers';\n\nconst ApprovalRequests = lazy(() =>\n  import(/* webpackChunkName: \"approval-request\" */ './approval-request')\n);\nconst OrderLifecycle = lazy(() =>\n  import(/* webpackChunkName: \"order-lifecycle\" */ './order-lifecycle')\n);\nconst OrderProvision = lazy(() =>\n  import(/* webpackChunkName: \"order-provision\" */ './order-provision')\n);\nconst OrderDetails = lazy(() =>\n  import(/* webpackChunkName: \"order-details\" */ './order-details')\n);\nconst requiredParams = [\n  'order-item',\n  'portfolio-item',\n  'platform',\n  'portfolio',\n  'order'\n];\n\nconst OrderDetail: React.ComponentType = () => {\n  const formatMessage = useFormatMessage();\n  const [isFetching, setIsFetching] = useState(true);\n  const [queryValues] = useQuery<GetOrderDetailParams>(requiredParams);\n  const orderDetailData = useSelector<CatalogRootState, OrderDetailType>(\n    ({ orderReducer: { orderDetail } }) => orderDetail\n  );\n  const dispatch = useDispatch();\n  const resetBreadcrumbs = useBreadcrumbs([orderDetailData]);\n  useEffect(() => {\n    setIsFetching(true);\n    Promise.all([\n      dispatch(isStandalone() ? fetchPlatformsS() : fetchPlatforms()),\n      dispatch(\n        isStandalone()\n          ? fetchOrderDetailsS(queryValues)\n          : fetchOrderDetails(queryValues)\n      )\n    ]).then(() => setIsFetching(false));\n    return () => {\n      if (typeof resetBreadcrumbs === 'function') {\n        resetBreadcrumbs();\n      }\n    };\n  }, []);\n\n  const { order, portfolioItem, platform, portfolio } = orderDetailData;\n\n  const unAvailable = () => {\n    const notFound = [portfolioItem, platform, portfolio || {}].filter(\n      ({ notFound }) => notFound\n    );\n    if (notFound.length === 0) {\n      return null;\n    }\n\n    let notFoundObjects = [];\n    if (portfolioItem.notFound) {\n      notFoundObjects.push(portfolioItem.object);\n    } else {\n      notFoundObjects = notFound.map(({ object }) => object);\n    }\n\n    return (\n      <Alert\n        key=\"order-object-missing\"\n        variant=\"warning\"\n        isInline\n        title={formatMessage(ordersMessages.objectsNotFound, {\n          objects: notFoundObjects.join(', '),\n          count: notFoundObjects.length\n        })}\n      />\n    );\n  };\n\n  const unavailableMessages = unAvailable();\n  // @ts-ignore\n  return (\n    <Fragment>\n      {isFetching ? (\n        <OrderDetailToolbarPlaceholder />\n      ) : (\n        <TopToolbar>\n          <Level className=\"pf-u-mb-md\">\n            <LevelItem>\n              <AngleLeftIcon className=\"pf-u-mr-md\" />\n              <CatalogLink pathname=\"/orders\">\n                {formatMessage(ordersMessages.backToOrders)}\n              </CatalogLink>\n            </LevelItem>\n          </Level>\n          <Level className=\"flex-no-wrap\">\n            {unavailableMessages ? (\n              <UnAvailableAlertContainer>\n                {unavailableMessages}\n              </UnAvailableAlertContainer>\n            ) : (\n              <Fragment>\n                <LevelItem>\n                  <OrderDetailTitle orderId={order.id} />\n                </LevelItem>\n                <LevelItem>\n                  <OrderToolbarActions\n                    portfolioItemName={portfolioItem.name}\n                    orderId={order.id}\n                    state={order.state}\n                    portfolioItemId={portfolioItem.id}\n                    portfolioId={portfolio?.id}\n                    sourceId={platform?.id}\n                    orderable={portfolioItem.metadata?.orderable || false}\n                    icon_url={portfolioItem.icon_url}\n                  />\n                </LevelItem>\n              </Fragment>\n            )}\n          </Level>\n          {!unavailableMessages && (\n            <OrderDetailInformation\n              portfolioItemId={portfolioItem.id}\n              portfolioId={portfolio.id}\n              sourceId={platform?.id}\n              jobName={portfolioItem?.name}\n              state={order.state}\n              icon_url={portfolioItem.icon_url}\n            />\n          )}\n        </TopToolbar>\n      )}\n      <Stack>\n        <StackItem className=\"global-primary-background\">\n          <OrderDetailMenu isFetching={isFetching} baseUrl={ORDER_ROUTE} />\n        </StackItem>\n        <StackItem className=\"pf-u-pl-lg pf-u-pr-lg pf-u-mb-lg pf-u-mt-0 pf-u-pt-0\">\n          {isFetching ? (\n            <Bullseye>\n              <Spinner />\n            </Bullseye>\n          ) : (\n            <Suspense fallback={<div></div>}>\n              <Switch>\n                <Route\n                  path={`${ORDER_ROUTE}/approval`}\n                  component={ApprovalRequests}\n                />\n                <Route path={`${ORDER_ROUTE}/provision`}>\n                  <OrderProvision />\n                </Route>\n                <Route path={`${ORDER_ROUTE}/lifecycle`}>\n                  <OrderLifecycle />\n                </Route>\n                <Route path={ORDER_ROUTE} component={OrderDetails} />\n              </Switch>\n            </Suspense>\n          )}\n        </StackItem>\n      </Stack>\n    </Fragment>\n  );\n};\n\nexport default OrderDetail;\n","import React, { ReactNode } from 'react';\nimport {\n  ExclamationCircleIcon,\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n  ClockIcon,\n  PlusCircleIcon\n} from '@patternfly/react-icons';\n\nconst orderStatusMapper: {\n  Completed: { icon: ReactNode; color: 'green' };\n  Ordered: { icon: ReactNode; color: 'grey' };\n  Failed: { icon: ReactNode; color: 'red' };\n  Canceled: { icon: ReactNode; color: 'orange' };\n  Created: { icon: ReactNode; color: 'grey' };\n  'Approval Pending': { icon: ReactNode; color: 'blue' };\n  Approved: { icon: ReactNode; color: 'green' };\n  Denied: { icon: ReactNode; color: 'red' };\n  Undecided: { icon: ReactNode; color: 'blue' };\n  Unknown: { icon: ReactNode; color: 'grey' };\n  Error: { icon: ReactNode; color: 'red' };\n} = {\n  Completed: { icon: <CheckCircleIcon />, color: 'green' },\n  'Approval Pending': {\n    icon: <ClockIcon />,\n    color: 'blue'\n  },\n  Ordered: { icon: <PlusCircleIcon />, color: 'grey' },\n  Failed: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Canceled: { icon: <ExclamationTriangleIcon />, color: 'orange' },\n  Created: { icon: <PlusCircleIcon />, color: 'grey' },\n  Approved: { icon: <CheckCircleIcon />, color: 'green' },\n  Denied: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Error: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Undecided: {\n    icon: <ClockIcon />,\n    color: 'blue'\n  },\n  Unknown: { icon: <ExclamationTriangleIcon />, color: 'grey' }\n};\n\nexport default orderStatusMapper;\n","import {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  ORDER_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORMS_ROUTE,\n  ORDERS_ROUTE,\n  EDIT_SURVEY_ROUTE,\n  ADD_PRODUCTS_ROUTE,\n  PORTFOLIO_ITEM_ROUTE_EDIT\n} from '../../constants/routes';\nimport { PortfolioReducerState } from '../../redux/reducers/portfolio-reducer';\nimport { ReactNode } from 'react';\nimport { PlatformReducerState } from '../../redux/reducers/platform-reducer';\nimport { OrderReducerState } from '../../redux/reducers/order-reducer';\n\nexport const BASE_PORTFOLIO_FRAGMENTS = [\n  {\n    title: 'Portfolios',\n    pathname: PORTFOLIOS_ROUTE,\n    searchParams: {}\n  }\n];\n\nexport const ENTITIES_EXTRA_PARAMS = {\n  'portfolio-item': ['source', 'portfolio'],\n  'edit-survey': ['source', 'portfolio', 'portfolio-item']\n};\n\nexport const FRAGMENT_TITLE = {\n  [PORTFOLIO_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.selectedPortfolio.name,\n  [PORTFOLIO_ITEM_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.portfolioItem.portfolioItem.name,\n  [EDIT_SURVEY_ROUTE]: (): string => 'Edit survey',\n  [ADD_PRODUCTS_ROUTE]: (): string => 'Add products',\n  [PLATFORM_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.selectedPlatform.name,\n  [PLATFORM_SERVICE_OFFERINGS_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.serviceOffering.service.name,\n  [ORDER_ROUTE]: (\n    getState: () => { orderReducer: OrderReducerState }\n  ): ReactNode => {\n    const { portfolioItem, order } = getState().orderReducer.orderDetail;\n    return `${portfolioItem.name} # ${order.id}`;\n  },\n  [PORTFOLIO_ITEM_ROUTE_EDIT]: (): string => 'Edit product'\n};\n\nexport const FRAGMENT_PREFIX = {\n  [PORTFOLIO_ROUTE]: {\n    pathname: PORTFOLIOS_ROUTE,\n    title: 'Portfolios',\n    searchParams: {}\n  },\n  [PLATFORM_ROUTE]: {\n    pathname: PLATFORMS_ROUTE,\n    title: 'Platforms',\n    searchParams: {}\n  },\n  [ORDER_ROUTE]: {\n    pathname: ORDERS_ROUTE,\n    title: 'Orders',\n    searchParams: {}\n  }\n};\n","import { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport {\n  FRAGMENT_TITLE,\n  ENTITIES_EXTRA_PARAMS,\n  FRAGMENT_PREFIX\n} from '../../helpers/shared/breadcrumbs-creators';\nimport { Dispatch } from 'redux';\nimport { BreadcrumbFragment } from '../reducers/breadcrumbs-reducer';\nimport { GetReduxState } from '../../types/redux';\nimport { AnyObject, ReduxAction } from '../../types/common-types';\n\nexport const createBreadcrumbsFromLocations = (\n  pathname = '',\n  search: AnyObject = {}\n) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): ReduxAction<BreadcrumbFragment[]> => {\n  if (pathname.length === 0) {\n    return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: [] });\n  }\n\n  const prefix: string[] = [];\n  if (pathname === '/portfolios/portfolio') {\n    prefix.push('/portfolios');\n  }\n\n  if (pathname.startsWith('/portfolios/portfolio/portfolio-item')) {\n    prefix[0] = '/portfolios';\n    prefix[1] = '/portfolio';\n    if (pathname.startsWith('/portfolios/portfolio/portfolio-item/')) {\n      prefix[2] = '/portfolio-item';\n    }\n  }\n\n  if (pathname.startsWith('/platforms/platform')) {\n    prefix[0] = '/platforms';\n  }\n\n  pathname = pathname.replace(prefix[0], '');\n  let result = pathname\n    .replace(/^\\//, '')\n    .split('/')\n    .reduce<BreadcrumbFragment[]>((acc, curr, index) => {\n      const pathname = `${\n        index > 0 && acc[index - 1] ? acc[index - 1].pathname : ''\n      }${prefix[index]}/${curr}`;\n      const generateTitle = (FRAGMENT_TITLE[\n        pathname as keyof typeof FRAGMENT_TITLE\n      ] as unknown) as (getState: GetReduxState) => string;\n      if (!generateTitle) {\n        return acc;\n      }\n\n      const searchParams = {\n        ...(index > 0 && acc[index - 1]?.searchParams),\n        ...(search[curr] ? { [curr]: search[curr] } : {})\n      };\n      if ((ENTITIES_EXTRA_PARAMS as AnyObject)[curr]) {\n        (ENTITIES_EXTRA_PARAMS as AnyObject)[curr].forEach((key: string) => {\n          searchParams[key] = search[key];\n        });\n      }\n\n      if ((FRAGMENT_PREFIX as AnyObject)[pathname]) {\n        acc = [(FRAGMENT_PREFIX as AnyObject)[pathname]];\n      }\n\n      const currTitle = generateTitle(getState);\n\n      return !currTitle\n        ? acc\n        : [\n            ...acc,\n            {\n              pathname,\n              searchParams,\n              title: currTitle\n            }\n          ];\n    }, []);\n  if (result.length > 0 && (FRAGMENT_PREFIX as AnyObject)[result[0].pathname]) {\n    result = [(FRAGMENT_PREFIX as AnyObject)[result[0].pathname], ...result];\n  }\n\n  // if portfolio item, add the 2 breadcrumbs\n  return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: result });\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createBreadcrumbsFromLocations } from '../redux/actions/breadcrumbs-actions';\nimport { INITIALIZE_BREADCRUMBS } from '../redux/action-types';\nimport { AnyObject, ReduxAction } from '../types/common-types';\nimport { AnyAction } from 'redux';\n\nconst useBreadcrumbs = (\n  updateTriggers: any[] = []\n):\n  | (() => ReduxAction<{\n      type: typeof INITIALIZE_BREADCRUMBS;\n    }>)\n  | ReduxAction<{ type: typeof INITIALIZE_BREADCRUMBS }> => {\n  const dispatch = useDispatch();\n  const { pathname, search } = useLocation();\n  if (updateTriggers.length === 0) {\n    return dispatch(\n      (createBreadcrumbsFromLocations('', {}) as unknown) as AnyAction\n    );\n  }\n\n  const searchParams = new URLSearchParams(search);\n  const searchObject: AnyObject = {};\n  searchParams.forEach((value, key) => {\n    searchObject[key] = value;\n  });\n\n  useEffect(() => {\n    dispatch(createBreadcrumbsFromLocations(pathname, searchObject));\n  }, [pathname, ...updateTriggers]);\n\n  return () =>\n    dispatch((createBreadcrumbsFromLocations('', {}) as unknown) as AnyAction);\n};\n\nexport default useBreadcrumbs;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","PageHeaderTitle","_ref","className","title","pageHeaderTitleClasses","headingLevel","size","propTypes","statesMessages","id","defaultMessage","ordered","approvalPending","canceled","completed","failed","undecided","approved","denied","error","pending","skipped","started","notified","unknown","getTranslatableState","state","replace","char","toLowerCase","created","LazyLoadImage","CardIconContainer","src","sourceId","useState","isLoaded","setLoaded","isUnknown","setUnknown","platformIconMapping","defaultIconI","defaultIcon","threshold","delayTime","hidden","onError","onLoad","orderId","formatMessage","Title","cancelOrder","onClose","isOpen","Modal","header","ExclamationTriangleIcon","style","fill","variant","actions","Button","onClick","ouiaId","key","CANCELABLE_STATES","ORDERABLE_STATES","canCancel","includes","portfolioItemName","portfolioItemId","portfolioId","orderable","dispatch","cancelModalOpen","setCancelModalOpen","history","canReorder","Fragment","ActionGroup","isDisabled","type","push","pathname","search","onReorder","jobName","icon_url","Level","hasGutter","searchParams","portfolio","source","LevelItem","Label","StyledCatalogLink","StyledTabButton","props","StyledTabItem","baseUrl","isFetching","orderDetailData","useLocation","navItems","link","useNavItems","activeKey","findIndex","split","pop","map","index","tabIndex","exact","nav","preserveSearch","activeClassName","ApprovalRequests","lazy","OrderLifecycle","OrderProvision","OrderDetails","requiredParams","setIsFetching","queryValues","resetBreadcrumbs","useEffect","Promise","all","then","order","portfolioItem","platform","unavailableMessages","notFound","filter","length","notFoundObjects","object","Alert","isInline","objects","join","count","unAvailable","metadata","Stack","StackItem","Bullseye","Spinner","Suspense","fallback","Switch","Route","path","component","Completed","icon","CheckCircleIcon","color","ClockIcon","Ordered","PlusCircleIcon","Failed","ExclamationCircleIcon","Canceled","Created","Approved","Denied","Error","Undecided","Unknown","ENTITIES_EXTRA_PARAMS","FRAGMENT_TITLE","getState","portfolioReducer","selectedPortfolio","platformReducer","selectedPlatform","serviceOffering","service","orderReducer","orderDetail","FRAGMENT_PREFIX","createBreadcrumbsFromLocations","payload","prefix","startsWith","result","reduce","acc","curr","generateTitle","forEach","currTitle","updateTriggers","URLSearchParams","searchObject","value"],"sourceRoot":""}