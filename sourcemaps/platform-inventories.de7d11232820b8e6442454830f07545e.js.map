{"version":3,"file":"js/platform-inventories.1643640014705.20184267a9de9519f99f.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/search-icon.js","webpack:///./src/presentational-components/shared/content-list.tsx","webpack:///./src/smart-components/platform/platform-inventories.js","webpack:///./src/smart-components/platform/platform-table-helpers.js","webpack:///./src/messages/filtering.messages.ts","webpack:///./src/messages/platforms.messages.ts","webpack:///./src/presentational-components/shared/bottom-pagination-container.tsx","webpack:///./src/presentational-components/shared/content-gallery-empty-state.tsx"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.SearchIconConfig = {\n  name: 'SearchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.SearchIcon = require('../createIcon').createIcon(exports.SearchIconConfig);\nexports[\"default\"] = exports.SearchIcon;","/* eslint-disable react/prop-types */\nimport React, { Fragment, useState, useEffect, ReactNode } from 'react';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableVariant,\n  IActionsResolver,\n  IAreActionsDisabled,\n  IRow,\n  ICell\n} from '@patternfly/react-table';\n\nimport { ListLoader } from './loader-placeholders';\nimport filteringMessages from '../../messages/filtering.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst NoItems: React.ComponentType = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Text component={TextVariants.h1}>\n      {formatMessage(filteringMessages.noItems)}\n    </Text>\n  );\n};\n\nexport interface ContentListProps {\n  data: IRow[];\n  columns: (string | ICell)[];\n  isCompact?: boolean;\n  isLoading?: boolean;\n  actionResolver?: IActionsResolver;\n  areActionsDisabled?: IAreActionsDisabled;\n  borders?: boolean;\n  routes?: () => ReactNode;\n  titlePlural?: ReactNode;\n  renderEmptyState: () => ReactNode;\n  ouiaId?: string;\n}\n\nconst ContentList: React.ComponentType<ContentListProps> = ({\n  data,\n  columns,\n  isCompact = false,\n  isLoading = false,\n  actionResolver,\n  areActionsDisabled,\n  borders = true,\n  routes = () => null,\n  titlePlural,\n  renderEmptyState,\n  ouiaId\n}) => {\n  const [rows, setRows] = useState<IRow[]>([]);\n\n  useEffect(() => {\n    setRows(data);\n  }, [data]);\n\n  return isLoading ? (\n    <ListLoader />\n  ) : (\n    <Fragment>\n      {rows.length === 0 ? (\n        renderEmptyState ? (\n          renderEmptyState()\n        ) : (\n          <NoItems />\n        )\n      ) : (\n        <Fragment>\n          {routes()}\n          <Table\n            ouiaId={ouiaId}\n            aria-label={`${titlePlural} table`}\n            variant={isCompact ? TableVariant.compact : undefined}\n            borders={borders}\n            rows={rows}\n            cells={columns}\n            actionResolver={actionResolver}\n            areActionsDisabled={areActionsDisabled}\n          >\n            <TableHeader />\n            <TableBody />\n          </Table>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ContentList;\n","import React, { Fragment, useEffect, useReducer, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { isStandalone, scrollToTop } from '../../helpers/shared/helpers';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { fetchPlatformInventories } from '../../redux/actions/platform-actions';\nimport { fetchPlatformInventories as fetchPlatformInventoriesS } from '../../redux/actions/platform-actions-s';\nimport { createPlatformsFilterToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport ContentGaleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport ContentList from '../../presentational-components/shared/content-list';\nimport { createRows } from './platform-table-helpers.js';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useQuery from '../../utilities/use-query';\nimport labelMessages from '../../messages/labels.messages';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (id, value, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(\n      isStandalone()\n        ? fetchPlatformInventoriesS(id, value, meta)\n        : fetchPlatformInventories(id, value, meta)\n    ).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst platformInventoriesState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst PlatformInventories = () => {\n  const formatMessage = useFormatMessage();\n  const { current: columns } = useRef([\n    formatMessage(labelMessages.name),\n    formatMessage(labelMessages.description),\n    formatMessage(labelMessages.created),\n    formatMessage(platformsMessages.workflowColumn)\n  ]);\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch] = useReducer(\n    platformInventoriesState,\n    initialState\n  );\n  const { data, results, count, meta } = useSelector(\n    ({ platformReducer: { platformInventories } }) => platformInventories\n  );\n  const platform = useSelector(\n    ({ platformReducer: { selectedPlatform } }) => selectedPlatform\n  );\n  const dispatch = useDispatch();\n  const [{ platform: id }] = useQuery(['platform']);\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(\n      isStandalone()\n        ? fetchPlatformInventoriesS(id, filterValue, defaultSettings)\n        : fetchPlatformInventories(id, filterValue, defaultSettings)\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n  }, []);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      id,\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const actionResolver = (inventoryData) => {\n    return [\n      {\n        title: 'Set approval',\n        onClick: () =>\n          history.push({\n            pathname: '/platforms/platform/platform-inventories/edit-workflow',\n            search: `?platform=${id}&inventory=${inventoryData.id}`\n          })\n      }\n    ];\n  };\n\n  const dataSet = data ? data : results;\n  const metaInfo = meta ? meta : { count };\n  const inventoryRows = dataSet ? createRows(dataSet, filterValue) : [];\n  const title = platform ? platform.name : '';\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPlatformsFilterToolbarSchema({\n          onFilterChange: handleFilterChange,\n          searchValue: filterValue,\n          filterPlaceholder: formatMessage(platformsMessages.inventoriesFilter),\n          meta: metaInfo,\n          apiRequest: (_, options) =>\n            dispatch(\n              isStandalone()\n                ? fetchPlatformInventoriesS(id, filterValue, options)\n                : fetchPlatformInventories(id, filterValue, options)\n            )\n        })}\n      />\n      <Section type=\"content\">\n        <ContentList\n          ouiaId={'PlatformsTable'}\n          title={title}\n          data={inventoryRows}\n          columns={columns}\n          isLoading={isFetching || isFiltering}\n          actionResolver={actionResolver}\n          renderEmptyState={() => (\n            <ContentGaleryEmptyState\n              title=\"No inventories\"\n              Icon={SearchIcon}\n              description={\n                filterValue === ''\n                  ? formatMessage(platformsMessages.noInventoriesDescription)\n                  : formatMessage(\n                      platformsMessages.noInventoriesFilterDescription\n                    )\n              }\n            />\n          )}\n        />\n      </Section>\n\n      {metaInfo.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={metaInfo}\n            apiRequest={(_, options) =>\n              dispatch(\n                isStandalone()\n                  ? fetchPlatformInventoriesS(id, filterValue, options)\n                  : fetchPlatformInventories(id, filterValue, options)\n              )\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PlatformInventories;\n","import React, { Fragment } from 'react';\nimport { TimeAgo } from '../../helpers/shared/helpers';\n\nexport const createRows = (data) =>\n  data.reduce(\n    (acc, { id, name, description, created_at, workflow }, key) => [\n      ...acc,\n      {\n        id,\n        key,\n        isOpen: false,\n        cells: [\n          name,\n          description,\n          <Fragment key=\"date\">\n            <TimeAgo date={created_at} />\n          </Fragment>,\n          workflow\n        ]\n      }\n    ],\n    []\n  );\n","import { defineMessages } from 'react-intl';\n\nconst filteringMessages = defineMessages({\n  noItems: {\n    id: 'common.filtering.noItems',\n    defaultMessage: 'No items found'\n  },\n  filterByProduct: {\n    id: 'common.filtering.filterByProduct',\n    defaultMessage: 'Filter by product'\n  },\n  noResults: {\n    id: 'common.filtering.noResults',\n    defaultMessage: 'No results found'\n  },\n  noResultsDescription: {\n    id: 'common.filtering.noResultsDescription',\n    defaultMessage:\n      'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n  },\n  clearFilters: {\n    id: 'common.filtering.clear-filters',\n    defaultMessage: 'Clear all filters'\n  },\n  noProducts: {\n    id: 'common.filtering.no-products',\n    defaultMessage: 'No products yet'\n  },\n  noRecords: {\n    id: 'commonMessages.noRecords',\n    defaultMessage: 'No records'\n  },\n  filterByTitle: {\n    id: 'tableToolbar.filterByTitle',\n    defaultMessage: 'Filter by {title}'\n  },\n  noResultsFound: {\n    id: 'tableToolbar.noResultsFound',\n    defaultMessage: 'No results found'\n  },\n  noResult: {\n    id: 'tableToolbar.noResult',\n    defaultMessage: 'No {results}'\n  },\n  unknown: {\n    id: 'commonMessages.unknown',\n    defaultMessage: 'Unknown'\n  }\n});\n\nexport default filteringMessages;\n","import { defineMessages } from 'react-intl';\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  platformsNoDataDescription: {\n    id: 'platforms.list.configure-source',\n    defaultMessage:\n      'Ansible Automation Services Catalog can be added by following the'\n  },\n  platformsDocTitle: {\n    id: 'platforms.doc.title',\n    defaultMessage: 'Ansible Automation Platform 2.0 BETA documentation'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage: 'Go to Sources'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  },\n  platformVersion: {\n    id: 'platforms.version',\n    defaultMessage: 'Platform version'\n  },\n  ansibleVersion: {\n    id: 'platforms.ansible.version',\n    defaultMessage: 'Ansible version'\n  },\n  platformSummary: {\n    id: 'platforms.summary',\n    defaultMessage: 'Summary'\n  },\n  platformDetails: {\n    id: 'platforms.details',\n    defaultMessage: 'Details'\n  },\n  platformActivity: {\n    id: 'platforms.activity',\n    defaultMessage: 'Activity'\n  },\n  cloudConnectorId: {\n    id: 'platform.cloudConnectorId',\n    defaultMessage: 'RedHat Connect Client Id'\n  },\n  refreshState: {\n    id: 'platforms.refreshState',\n    defaultMessage: 'Refresh state'\n  },\n  refreshStarted: {\n    id: 'platforms.refreshStarted',\n    defaultMessage: 'Refresh started'\n  },\n  refreshFinished: {\n    id: 'platforms.refreshFinished',\n    defaultMessage: 'Refresh finished'\n  },\n  lastSuccessfulRefresh: {\n    id: 'platforms.lastSuccessfulRefresh',\n    defaultMessage: 'Last successful refresh'\n  },\n  lastChecked: {\n    id: 'platforms.lastChecked',\n    defaultMessage: 'Last checked'\n  },\n  lastAvailable: {\n    id: 'platforms.lastAvailable',\n    defaultMessage: 'Last available'\n  },\n  enabled: {\n    id: 'platforms.enabled',\n    defaultMessage: 'Enabled'\n  },\n  availabilityStatus: {\n    id: 'platforms.availabilityStatus',\n    defaultMessage: 'Availability status'\n  },\n  dateAdded: {\n    id: 'platforms.dateAdded',\n    defaultMessage: 'Date added'\n  },\n  refreshTooltip: {\n    id: 'platforms.refreshTooltip',\n    defaultMessage: 'Refresh platform'\n  },\n  lastRefreshMessage: {\n    id: 'platforms.lastRefreshMessage',\n    defaultMessage: 'Last refresh message'\n  },\n  availabilityMessage: {\n    id: 'platforms.availabilityMessage',\n    defaultMessage: 'Availability message'\n  }\n});\n\nexport default platformsMessages;\n","/* eslint-disable react/prop-types */\nimport React, { HTMLProps } from 'react';\nimport clsx from 'clsx';\n\nconst BottomPaginationContainer: React.ComponentType<HTMLProps<\n  HTMLDivElement\n>> = ({ children, className, ...props }) => (\n  <div\n    className={clsx(\n      'pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto',\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </div>\n);\n\nexport default BottomPaginationContainer;\n","/* eslint-disable react/prop-types */\nimport React, { ReactNode } from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants,\n  EmptyStateVariant\n} from '@patternfly/react-core';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nexport interface ContentGalleryEmptyStateProps {\n  title: string;\n  Icon: React.ComponentType;\n  description?: ReactNode;\n  PrimaryAction?: React.ComponentType;\n  renderDescription?: () => ReactNode;\n}\n\nconst ContentGalleryEmptyState: React.ComponentType<ContentGalleryEmptyStateProps> = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription = () => null\n}) => (\n  <div className=\"pf-u-mt-xl\">\n    <EmptyState variant=\"large\">\n      <EmptyStateIcon icon={Icon} />\n      <TextContent>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </TextContent>\n      <EmptyStateBody>\n        {description}\n        {renderDescription()}\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        {PrimaryAction && <PrimaryAction />}\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </div>\n);\n\nexport default ContentGalleryEmptyState;\n\nexport interface EmptyStatePrimaryAction {\n  url: string;\n  label: string;\n  hasPermission?: boolean;\n  id?: string;\n}\nexport const EmptyStatePrimaryAction: React.ComponentType<EmptyStatePrimaryAction> = ({\n  url,\n  label,\n  hasPermission = false,\n  id\n}) =>\n  hasPermission ? (\n    <CatalogLink id={id} pathname={url} preserveSearch>\n      <Button variant=\"primary\">{label}</Button>\n    </CatalogLink>\n  ) : null;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","NoItems","formatMessage","Text","component","TextVariants","data","columns","isCompact","isLoading","actionResolver","areActionsDisabled","borders","routes","titlePlural","renderEmptyState","ouiaId","useState","rows","setRows","useEffect","Fragment","length","Table","variant","TableVariant","undefined","cells","TableHeader","TableBody","initialState","filterValue","isOpen","isFetching","isFiltering","debouncedFilter","asyncFormValidator","id","value","dispatch","filteringCallback","meta","defaultSettings","isStandalone","fetchPlatformInventoriesS","fetchPlatformInventories","then","platformInventoriesState","state","action","type","payload","useFormatMessage","useRef","labelMessages","platformsMessages","current","useReducer","stateDispatch","useSelector","platformReducer","platformInventories","results","count","platform","selectedPlatform","useDispatch","useQuery","history","useHistory","scrollToTop","dataSet","metaInfo","inventoryRows","reduce","acc","key","description","created_at","workflow","date","createRows","title","schema","createPlatformsFilterToolbarSchema","onFilterChange","offset","searchValue","filterPlaceholder","apiRequest","_","options","Section","inventoryData","onClick","push","pathname","search","Icon","SearchIcon","dropDirection","noItems","defaultMessage","filterByProduct","noResults","noResultsDescription","clearFilters","noProducts","noRecords","filterByTitle","noResultsFound","noResult","unknown","workflowColumn","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","platformsNoDataDescription","platformsDocTitle","connectSource","contactAdmin","noPlatforms","offeringTitle","offeringParameters","platformVersion","ansibleVersion","platformSummary","platformDetails","platformActivity","cloudConnectorId","refreshState","refreshStarted","refreshFinished","lastSuccessfulRefresh","lastChecked","lastAvailable","enabled","availabilityStatus","dateAdded","refreshTooltip","lastRefreshMessage","availabilityMessage","children","className","props","PrimaryAction","renderDescription","EmptyState","EmptyStateIcon","icon","TextContent","EmptyStateBody","EmptyStateSecondaryActions","EmptyStatePrimaryAction","url","label","hasPermission","preserveSearch","Button"],"sourceRoot":""}