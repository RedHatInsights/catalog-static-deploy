{"version":3,"sources":["webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/toolbar/schemas/platforms-toolbar.schema.js","webpack:///./src/helpers/shared/breadcrumbs-creators.js","webpack:///./src/redux/actions/breadcrumbs-actions.js","webpack:///./src/utilities/use-breadcrumbs.js","webpack:///./src/smart-components/platform/platform.js"],"names":["AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","options","getNewPage","request","debouncePromise","direction","propTypes","PropTypes","shape","isRequired","func","any","string","bool","defaultProps","createPlatformsToolbarSchema","searchValue","onFilterChange","title","fields","component","toolbarComponentTypes","TOP_TOOLBAR","key","TOP_TOOLBAR_TITLE","LEVEL","LEVEL_ITEM","FILTER_TOOLBAR_ITEM","placeholder","createPlatformsTopToolbarSchema","paddingBottom","tabItems","AppTabs","createPlatformsFilterToolbarSchema","filterPlaceholder","TOOLBAR","ENTITIES_EXTRA_PARAMS","PORTFOLIOS_ROUTE","FRAGMENT_TITLE","PORTFOLIO_ROUTE","getState","portfolioReducer","selectedPortfolio","name","PORTFOLIO_ITEM_ROUTE","portfolioItem","EDIT_SURVEY_ROUTE","ADD_PRODUCTS_ROUTE","PLATFORM_ROUTE","platformReducer","selectedPlatform","PLATFORM_SERVICE_OFFERINGS_ROUTE","serviceOffering","service","ORDER_ROUTE","orderReducer","orderDetail","order","id","PORTFOLIO_ITEM_ROUTE_EDIT","FRAGMENT_PREFIX","pathname","searchParams","PLATFORMS_ROUTE","ORDERS_ROUTE","createBreadcrumbsFromLocations","search","dispatch","length","type","INITIALIZE_BREADCRUMBS","payload","result","replace","split","reduce","acc","curr","index","generateTitle","forEach","useBreadcrumbs","updateTriggers","useDispatch","useLocation","URLSearchParams","searchObject","value","useEffect","PlatformTemplates","lazy","PlatformInventories","ServiceOfferingDetail","eventKey","Platform","useQuery","platform","useSelector","resetBreadcrumbs","insights","chrome","appNavClick","secondaryNav","Promise","all","fetchSelectedPlatform","fetchPlatforms","scrollToTop","exact","path","PLATFORM_INVENTORIES_ROUTE","PLATFORM_TEMPLATES_ROUTE","schema","fallback"],"mappings":"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","file":"js/platform~91f4305a.b63391086e6e04a9a7e2.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import AppTabs from '../../presentational-components/shared/app-tabs';\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nexport const createPlatformsToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  title\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: 'Filter by platform'\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields: []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsTopToolbarSchema = ({\n  title,\n  paddingBottom,\n  tabItems\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      paddingBottom,\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL_ITEM,\n          key: 'tabs-level-item',\n          fields: tabItems\n            ? [\n                {\n                  component: AppTabs,\n                  key: 'platform-tabs',\n                  tabItems\n                }\n              ]\n            : []\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsFilterToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  meta,\n  apiRequest,\n  filterPlaceholder\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOOLBAR,\n      key: 'platforms-filter-toolbar',\n      className: 'pf-u-pt-md pf-u-pb-md pf-u-pr-lg pf-u-pl-lg',\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          className: 'pf-m-grow',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: filterPlaceholder\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields:\n                meta.count > 0\n                  ? [\n                      {\n                        component: AsyncPagination,\n                        key: 'platform-pagination',\n                        apiRequest,\n                        meta,\n                        isCompact: true\n                      }\n                    ]\n                  : []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n","import {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  ORDER_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORMS_ROUTE,\n  ORDERS_ROUTE,\n  EDIT_SURVEY_ROUTE,\n  ADD_PRODUCTS_ROUTE,\n  PORTFOLIO_ITEM_ROUTE_EDIT\n} from '../../constants/routes';\n\nexport const BASE_PORTFOLIO_FRAGMENTS = [\n  {\n    title: 'Portfolios',\n    pathname: PORTFOLIOS_ROUTE,\n    searchParams: {}\n  }\n];\n\nexport const ENTITIES_EXTRA_PARAMS = {\n  'portfolio-item': ['source']\n};\n\nexport const FRAGMENT_TITLE = {\n  [PORTFOLIO_ROUTE]: (getState) =>\n    getState().portfolioReducer.selectedPortfolio.name,\n  [PORTFOLIO_ITEM_ROUTE]: (getState) =>\n    getState().portfolioReducer.portfolioItem.portfolioItem.name,\n  [EDIT_SURVEY_ROUTE]: () => 'Edit survey',\n  [ADD_PRODUCTS_ROUTE]: () => 'Add products',\n  [PLATFORM_ROUTE]: (getState) =>\n    getState().platformReducer.selectedPlatform.name,\n  [PLATFORM_SERVICE_OFFERINGS_ROUTE]: (getState) =>\n    getState().platformReducer.serviceOffering.service.name,\n  [ORDER_ROUTE]: (getState) => {\n    const { portfolioItem, order } = getState().orderReducer.orderDetail;\n    return `${portfolioItem.name} # ${order.id}`;\n  },\n  [PORTFOLIO_ITEM_ROUTE_EDIT]: () => 'Edit product'\n};\n\nexport const FRAGMENT_PREFIX = {\n  [PORTFOLIO_ROUTE]: {\n    pathname: PORTFOLIOS_ROUTE,\n    title: 'Portfolios',\n    searchParams: {}\n  },\n  [PLATFORM_ROUTE]: {\n    pathname: PLATFORMS_ROUTE,\n    title: 'Platforms',\n    searchParams: {}\n  },\n  [ORDER_ROUTE]: {\n    pathname: ORDERS_ROUTE,\n    title: 'Orders',\n    searchParams: {}\n  }\n};\n","import { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport {\n  FRAGMENT_TITLE,\n  ENTITIES_EXTRA_PARAMS,\n  FRAGMENT_PREFIX\n} from '../../helpers/shared/breadcrumbs-creators';\n\nexport const createBreadcrumbsFromLocations = (pathname = '', search = {}) => (\n  dispatch,\n  getState\n) => {\n  if (pathname.length === 0) {\n    return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: [] });\n  }\n\n  let result = pathname\n    .replace(/^\\//, '')\n    .split('/')\n    .reduce((acc, curr, index) => {\n      const pathname = `${\n        index > 0 && acc[index - 1] ? acc[index - 1].pathname : ''\n      }/${curr}`;\n\n      const generateTitle = FRAGMENT_TITLE[pathname];\n      if (!generateTitle) {\n        return acc;\n      }\n\n      const searchParams = {\n        ...(index > 0 && acc[index - 1].searchParams),\n        ...(search[curr] ? { [curr]: search[curr] } : {})\n      };\n      if (ENTITIES_EXTRA_PARAMS[curr]) {\n        ENTITIES_EXTRA_PARAMS[curr].forEach((key) => {\n          searchParams[key] = search[key];\n        });\n      }\n\n      return [\n        ...acc,\n        {\n          pathname,\n          searchParams,\n          title: generateTitle(getState)\n        }\n      ];\n    }, []);\n  if (result.length > 0 && FRAGMENT_PREFIX[result[0].pathname]) {\n    result = [FRAGMENT_PREFIX[result[0].pathname], ...result];\n  }\n\n  return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: result });\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createBreadcrumbsFromLocations } from '../redux/actions/breadcrumbs-actions';\n\nconst useBreadcrumbs = (updateTriggers = []) => {\n  const dispatch = useDispatch();\n  const { pathname, search } = useLocation();\n  if (updateTriggers.length === 0) {\n    return dispatch(createBreadcrumbsFromLocations('', {}));\n  }\n\n  const searchParams = new URLSearchParams(search);\n  const searchObject = {};\n  searchParams.forEach((value, key) => {\n    searchObject[key] = value;\n  });\n\n  useEffect(() => {\n    dispatch(createBreadcrumbsFromLocations(pathname, searchObject));\n  }, [pathname, ...updateTriggers]);\n\n  return () => dispatch(createBreadcrumbsFromLocations('', {}));\n};\n\nexport default useBreadcrumbs;\n","import React, { Fragment, useEffect, lazy, Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport {\n  fetchSelectedPlatform,\n  fetchPlatforms\n} from '../../redux/actions/platform-actions';\nimport useQuery from '../../utilities/use-query';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useBreadcrumbs from '../../utilities/use-breadcrumbs';\nimport {\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORM_INVENTORIES_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_TEMPLATES_ROUTE\n} from '../../constants/routes';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { createPlatformsTopToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport { PlatformToolbarPlaceholder } from '../../presentational-components/shared/loader-placeholders';\n\nconst PlatformTemplates = lazy(() =>\n  import(/* webpackChunkName: \"platform-templates\" */ './platform-templates')\n);\n\nconst PlatformInventories = lazy(() =>\n  import(\n    /* webpackChunkName: \"platform-inventories\" */ './platform-inventories'\n  )\n);\n\nconst ServiceOfferingDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"service-offering-detail\" */ './service-offering/service-offering-detail'\n  )\n);\n\nconst tabItems = [\n  {\n    eventKey: 0,\n    title: 'Templates',\n    name: `/platform/platform-templates`\n  },\n  {\n    eventKey: 1,\n    title: 'Inventories',\n    name: `/platform/platform-inventories`\n  }\n];\n\nconst Platform = () => {\n  const dispatch = useDispatch();\n  const [{ platform }] = useQuery(['platform']);\n  const { selectedPlatform, serviceOffering } = useSelector(\n    ({ platformReducer: { selectedPlatform, serviceOffering } }) => ({\n      selectedPlatform,\n      serviceOffering\n    })\n  );\n\n  const resetBreadcrumbs = useBreadcrumbs([selectedPlatform, serviceOffering]);\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'platforms', secondaryNav: true });\n    Promise.all([\n      dispatch(fetchSelectedPlatform(platform)),\n      dispatch(fetchPlatforms())\n    ]);\n    scrollToTop();\n    return () => {\n      resetBreadcrumbs();\n    };\n  }, [platform]);\n\n  return (\n    <Fragment>\n      <Route\n        exact\n        path={[\n          PLATFORM_INVENTORIES_ROUTE,\n          PLATFORM_ROUTE,\n          PLATFORM_TEMPLATES_ROUTE,\n          `${PLATFORM_INVENTORIES_ROUTE}/*`\n        ]}\n      >\n        <ToolbarRenderer\n          schema={createPlatformsTopToolbarSchema({\n            title: selectedPlatform.name,\n            paddingBottom: false,\n            tabItems\n          })}\n        />\n      </Route>\n      <Suspense fallback={<PlatformToolbarPlaceholder />}>\n        <Switch>\n          <Route path={PLATFORM_SERVICE_OFFERINGS_ROUTE}>\n            <ServiceOfferingDetail />\n          </Route>\n          <Route path={PLATFORM_INVENTORIES_ROUTE}>\n            <PlatformInventories />\n          </Route>\n          <Route path={[PLATFORM_TEMPLATES_ROUTE, PLATFORM_ROUTE]}>\n            <PlatformTemplates />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Fragment>\n  );\n};\n\nexport default Platform;\n"],"sourceRoot":""}