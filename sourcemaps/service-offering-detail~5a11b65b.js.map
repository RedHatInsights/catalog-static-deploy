{"version":3,"sources":["webpack:///./src/messages/labels.messages.js","webpack:///./src/messages/platforms.messages.js","webpack:///./src/presentational-components/styled-components/level.js","webpack:///./src/smart-components/platform/service-offering/service-offering-detail.js"],"names":["labelMessages","defineMessages","shared","id","defaultMessage","portfolio","platform","name","description","loading","cancel","save","confirm","create","owner","sortBy","updated","created","platformsMessages","require","workflowColumn","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","configureSourceTitle","connectSource","contactAdmin","title","noPlatforms","offeringTitle","offeringParameters","StyledLevelItem","styled","alignStart","alignSelf","grow","props","requiredParams","ServiceOfferingDetail","formatMessage","useIntl","useQuery","queryValues","useState","isFetching","setIsFetching","dispatch","useDispatch","useSelector","platformReducer","serviceOffering","service","source","useEffect","fetchServiceOffering","then","className","hasGutter","sm","src","icon_url","height","component","md","lg","TextVariants","p","type","date","created_at","extra"],"mappings":"2FAAA,YAEMA,EAAgBC,yBAAe,CACnCC,OAAQ,CACNC,GAAI,uBACJC,eAAgB,UAElBC,UAAW,CACTF,GAAI,0BACJC,eAAgB,aAElBE,SAAU,CACRH,GAAI,yBACJC,eAAgB,YAElBG,KAAM,CACJJ,GAAI,qBACJC,eAAgB,QAElBI,YAAa,CACXL,GAAI,4BACJC,eAAgB,eAElBK,QAAS,CACPN,GAAI,wBACJC,eAAgB,WAElBM,OAAQ,CACNP,GAAI,uBACJC,eAAgB,UAElBO,KAAM,CACJR,GAAI,qBACJC,eAAgB,QAElBQ,QAAS,CACPT,GAAI,wBACJC,eAAgB,WAElBS,OAAQ,CACNV,GAAI,uBACJC,eAAgB,UAElBU,MAAO,CACLX,GAAI,sBACJC,eAAgB,SAElBW,OAAQ,CACNZ,GAAI,wBACJC,eAAgB,WAElBY,QAAS,CACPb,GAAI,wBACJC,eAAgB,WAElBa,QAAS,CACPd,GAAI,wBACJC,eAAgB,aAILJ,O,qCC3DTkB,GAAoBjB,EAFCkB,EAAQ,IAA3BlB,gBAEiC,CACvCmB,eAAgB,CACdjB,GAAI,wCACJC,eAAgB,YAElBiB,yBAA0B,CACxBlB,GAAI,4CACJC,eAAgB,yBAElBkB,+BAAgC,CAC9BnB,GAAI,wCACJC,eAAgB,8CAElBmB,kBAAmB,CACjBpB,GAAI,0CACJC,eAAgB,uBAElBoB,gBAAiB,CACfrB,GAAI,wCACJC,eAAgB,sBAElBqB,iBAAkB,CAChBtB,GAAI,kCACJC,eAAgB,gBAElBsB,uBAAwB,CACtBvB,GAAI,wCACJC,eAAgB,mCAElBuB,qBAAsB,CACpBxB,GAAI,kCACJC,eAAgB,8DAElBwB,cAAe,CACbzB,GAAI,gCACJC,eACE,gEAEJyB,aAAc,CACZ1B,GAAI,+BACJC,eACE,yEAEJ0B,MAAO,CACL3B,GAAI,kBACJC,eAAgB,aAElB2B,YAAa,CACX5B,GAAI,6BACJC,eAAgB,oBAElB4B,cAAe,CACb7B,GAAI,mCACJC,eAAgB,oBAElB6B,mBAAoB,CAClB9B,GAAI,0CACJC,eAAgB,sBAILc,O,gQC3DR,IAAMgB,EAAkBC,aAC7B,cAAGC,WAAH,EAAeC,UAAf,EAA0BC,KAA1B,IAAmCC,EAAnC,gDAA+C,kBAAC,YAAcA,KADjCJ,CAAH,KAGZ,gBAAGE,EAAH,EAAGA,UAAH,OAAoBA,GAAwB,aAC3C,qBAAGD,WACH,wBAA0B,aACjC,qBAAGE,KAAmB,IAAM,Q,+OCchCE,EAAiB,CAAC,UAAW,YA4FpBC,UA1Fe,WAAM,IAC1BC,EAAkBC,cAAlBD,cAD0B,EAEZE,YAASJ,GAAxBK,EAF2B,cAGEC,oBAAS,GAHX,WAG3BC,EAH2B,KAGfC,EAHe,KAI5BC,EAAWC,wBAJiB,EAKNC,uBAC1B,qBAAGC,gBAAmBC,mBADhBC,EAL0B,EAK1BA,QAASC,EALiB,EAKjBA,OAUjB,OANAC,qBAAU,WACRR,GAAc,GACdC,EAASQ,YAAqBZ,EAAYS,QAAST,EAAYvC,WAC5DoD,MAAK,kBAAMV,GAAc,MAD5B,OAES,kBAAMA,GAAc,QAC5B,CAACH,EAAYS,QAAST,EAAYvC,WACjCyC,EAEA,kBAAC,UAAD,CAASY,UAAU,mDACjB,kBAAC,IAAD,OAMJ,kBAAC,UAAD,CAASA,UAAU,yCACjB,kBAAC,OAAD,CAAMC,WAAS,EAACD,UAAU,aACxB,yBAAKA,UAAU,cACb,kBAAC,IAAD,OAEF,kBAAC,WAAD,CAAUE,GAAI,GAAIF,UAAU,cAC1B,kBAAC,QAAD,KACE,kBAAC,IAAD,CAAiBvB,YAAU,EAACuB,UAAU,aACpC,kBAAC,IAAD,CAAUG,IAAKP,EAAOQ,SAAUC,OAAQ,KACxC,kBAAC,cAAD,KACE,kBAAC,OAAD,CAAMC,UAAU,MAAMX,EAAQ/C,MAC9B,kBAAC,OAAD,CAAM0D,UAAU,SACbvB,EAAcxB,IAAkBc,oBAM3C,kBAAC,WAAD,CAAUkC,GAAI,EAAGC,GAAI,GACnB,kBAAC,cAAD,KACE,kBAAC,OAAD,CAAMR,UAAU,WACbjB,EAAc1C,IAAcM,WAE/B,kBAAC,OAAD,CACEH,GAAG,SACHwD,UAAU,gBACVM,UAAWG,eAAaC,GAEvBd,EAAOhD,MAEV,kBAAC,OAAD,CAAMoD,UAAU,WACbjB,EAAc1C,IAAciB,UAE/B,kBAAC,OAAD,CACEd,GAAG,aACHwD,UAAU,gBACVM,UAAWG,eAAaC,GAExB,kBAAC,aAAD,CAAYC,KAAK,WAAWC,KAAMjB,EAAQkB,gBAIhD,kBAAC,WAAD,CAAUN,GAAI,EAAGC,GAAI,IACnB,kBAAC,cAAD,KACE,kBAAC,OAAD,CAAMR,UAAU,WAAWjB,EAAc1C,IAAcO,OACvD,kBAAC,OAAD,CAAMJ,GAAG,cAAc8D,UAAWG,eAAaC,GAC5Cf,EAAQ/C,MAEX,kBAAC,OAAD,CAAMoD,UAAU,WACbjB,EAAc1C,IAAcQ,cAE/B,kBAAC,OAAD,CAAML,GAAG,mBAAmB8D,UAAWG,eAAaC,GACjDf,EAAQ9C,aAEX,wBAAImD,UAAU,iBACd,kBAAC,OAAD,CAAMM,UAAU,MACbvB,EAAcxB,IAAkBe,qBAEnC,kBAAC,IAAD,CAAe6B,IAAKR,EAAQmB","file":"js/service-offering-detail~5a11b65b.ad1c2d4078ebd069f7d9.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\nconst labelMessages = defineMessages({\n  shared: {\n    id: 'common.labels.shared',\n    defaultMessage: 'Shared'\n  },\n  portfolio: {\n    id: 'common.labels.portfolio',\n    defaultMessage: 'Portfolio'\n  },\n  platform: {\n    id: 'common.labels.platform',\n    defaultMessage: 'Platform'\n  },\n  name: {\n    id: 'common.labels.name',\n    defaultMessage: 'Name'\n  },\n  description: {\n    id: 'common.labels.description',\n    defaultMessage: 'Description'\n  },\n  loading: {\n    id: 'common.labels.loading',\n    defaultMessage: 'Loading'\n  },\n  cancel: {\n    id: 'common.labels.cancel',\n    defaultMessage: 'Cancel'\n  },\n  save: {\n    id: 'common.labels.save',\n    defaultMessage: 'Save'\n  },\n  confirm: {\n    id: 'common.labels.confirm',\n    defaultMessage: 'Confirm'\n  },\n  create: {\n    id: 'common.labels.create',\n    defaultMessage: 'Create'\n  },\n  owner: {\n    id: 'common.labels.owner',\n    defaultMessage: 'Owner'\n  },\n  sortBy: {\n    id: 'common.labels.sort-by',\n    defaultMessage: 'Sort by'\n  },\n  updated: {\n    id: 'common.labels.updated',\n    defaultMessage: 'Updated'\n  },\n  created: {\n    id: 'common.states.created',\n    defaultMessage: 'Created'\n  }\n});\n\nexport default labelMessages;\n","const { defineMessages } = require('react-intl');\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  configureSourceTitle: {\n    id: 'platforms.list.configure-source',\n    defaultMessage: 'Configure a source in order to add products to portfolios.'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage:\n      'To connect to a source, go to <a>Sources</a> under Settings.'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  }\n});\n\nexport default platformsMessages;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { LevelItem } from '@patternfly/react-core';\n\nexport const StyledLevelItem = styled(\n  ({ alignStart, alignSelf, grow, ...props }) => <LevelItem {...props} />\n)`\n  align-self: ${({ alignSelf }) => (alignSelf ? alignSelf : 'inherit')};\n  align-items: ${({ alignStart }) =>\n    alignStart ? 'flex-start !important' : 'inherit'};\n  flex: ${({ grow }) => (grow ? '1' : '0')};\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  TextContent,\n  Text,\n  TextVariants,\n  Level\n} from '@patternfly/react-core';\nimport ReactJsonView from 'react-json-view';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\n\nimport useQuery from '../../../utilities/use-query';\nimport { fetchServiceOffering } from '../../../redux/actions/platform-actions';\nimport { ProductLoaderPlaceholder } from '../../../presentational-components/shared/loader-placeholders';\nimport CardIcon from '../../../presentational-components/shared/card-icon';\nimport CatalogBreadcrumbs from '../../common/catalog-breadcrumbs';\nimport { StyledLevelItem } from '../../../presentational-components/styled-components/level';\nimport { useIntl } from 'react-intl';\nimport labelMessages from '../../../messages/labels.messages';\nimport platformsMessages from '../../../messages/platforms.messages';\n\nconst requiredParams = ['service', 'platform'];\n\nconst ServiceOfferingDetail = () => {\n  const { formatMessage } = useIntl();\n  const [queryValues] = useQuery(requiredParams);\n  const [isFetching, setIsFetching] = useState(true);\n  const dispatch = useDispatch();\n  const { service, source } = useSelector(\n    ({ platformReducer: { serviceOffering } }) => serviceOffering\n  );\n\n  useEffect(() => {\n    setIsFetching(true);\n    dispatch(fetchServiceOffering(queryValues.service, queryValues.platform))\n      .then(() => setIsFetching(false))\n      .catch(() => setIsFetching(false));\n  }, [queryValues.service, queryValues.platform]);\n  if (isFetching) {\n    return (\n      <Section className=\"global-primary-background full-height pf-u-p-lg\">\n        <ProductLoaderPlaceholder />\n      </Section>\n    );\n  }\n\n  return (\n    <Section className=\"global-primary-background full-height\">\n      <Grid hasGutter className=\"pf-u-p-lg\">\n        <div className=\"pf-u-mb-sm\">\n          <CatalogBreadcrumbs />\n        </div>\n        <GridItem sm={12} className=\"pf-u-mb-md\">\n          <Level>\n            <StyledLevelItem alignStart className=\"pf-l-flex\">\n              <CardIcon src={source.icon_url} height={64} />\n              <TextContent>\n                <Text component=\"h1\">{service.name}</Text>\n                <Text component=\"small\">\n                  {formatMessage(platformsMessages.offeringTitle)}\n                </Text>\n              </TextContent>\n            </StyledLevelItem>\n          </Level>\n        </GridItem>\n        <GridItem md={3} lg={2}>\n          <TextContent>\n            <Text className=\"font-14\">\n              {formatMessage(labelMessages.platform)}\n            </Text>\n            <Text\n              id=\"source\"\n              className=\"overflow-wrap\"\n              component={TextVariants.p}\n            >\n              {source.name}\n            </Text>\n            <Text className=\"font-14\">\n              {formatMessage(labelMessages.created)}\n            </Text>\n            <Text\n              id=\"created_at\"\n              className=\"overflow-wrap\"\n              component={TextVariants.p}\n            >\n              <DateFormat type=\"relative\" date={service.created_at} />\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem md={9} lg={10}>\n          <TextContent>\n            <Text className=\"font-14\">{formatMessage(labelMessages.name)}</Text>\n            <Text id=\"description\" component={TextVariants.p}>\n              {service.name}\n            </Text>\n            <Text className=\"font-14\">\n              {formatMessage(labelMessages.description)}\n            </Text>\n            <Text id=\"long_description\" component={TextVariants.p}>\n              {service.description}\n            </Text>\n            <hr className=\"pf-c-divider\" />\n            <Text component=\"h2\">\n              {formatMessage(platformsMessages.offeringParameters)}\n            </Text>\n            <ReactJsonView src={service.extra} />\n          </TextContent>\n        </GridItem>\n      </Grid>\n    </Section>\n  );\n};\n\nexport default ServiceOfferingDetail;\n"],"sourceRoot":""}