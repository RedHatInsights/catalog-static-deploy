{"version":3,"sources":["webpack:///./src/messages/platforms.messages.js","webpack:///./src/messages/states.messages.js","webpack:///./src/presentational-components/styled-components/level.js","webpack:///./src/smart-components/platform/service-offering/service-offering-detail.js"],"names":["platformsMessages","defineMessages","require","workflowColumn","id","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","configureSourceTitle","connectSource","contactAdmin","title","noPlatforms","offeringTitle","offeringParameters","statesMessages","ordered","approvalPending","canceled","completed","created","failed","undecided","approved","denied","error","getTranslatableState","state","replace","char","toLowerCase","StyledLevelItem","styled","alignStart","props","requiredParams","ServiceOfferingDetail","formatMessage","useIntl","useQuery","queryValues","useState","isFetching","setIsFetching","dispatch","useDispatch","useSelector","platformReducer","serviceOffering","service","source","useEffect","fetchServiceOffering","platform","then","className","hasGutter","sm","src","icon_url","height","component","name","md","lg","labelMessages","TextVariants","p","type","date","created_at","description","extra"],"mappings":"+FAEMA,GAAoBC,EAFCC,EAAQ,IAA3BD,gBAEiC,CACvCE,eAAgB,CACdC,GAAI,wCACJC,eAAgB,YAElBC,yBAA0B,CACxBF,GAAI,4CACJC,eAAgB,yBAElBE,+BAAgC,CAC9BH,GAAI,wCACJC,eAAgB,8CAElBG,kBAAmB,CACjBJ,GAAI,0CACJC,eAAgB,uBAElBI,gBAAiB,CACfL,GAAI,wCACJC,eAAgB,sBAElBK,iBAAkB,CAChBN,GAAI,kCACJC,eAAgB,gBAElBM,uBAAwB,CACtBP,GAAI,wCACJC,eAAgB,mCAElBO,qBAAsB,CACpBR,GAAI,kCACJC,eAAgB,8DAElBQ,cAAe,CACbT,GAAI,gCACJC,eACE,gEAEJS,aAAc,CACZV,GAAI,+BACJC,eACE,yEAEJU,MAAO,CACLX,GAAI,kBACJC,eAAgB,aAElBW,YAAa,CACXZ,GAAI,6BACJC,eAAgB,oBAElBY,cAAe,CACbb,GAAI,mCACJC,eAAgB,oBAElBa,mBAAoB,CAClBd,GAAI,0CACJC,eAAgB,sBAILL,O,uEC7DTmB,GAAiBlB,EAFIC,EAAQ,IAA3BD,gBAE8B,CACpCc,MAAO,CACLX,GAAI,sBACJC,eAAgB,SAElBe,QAAS,CACPhB,GAAI,wBACJC,eAAgB,WAElBgB,gBAAiB,CACfjB,GAAI,iCACJC,eAAgB,oBAElBiB,SAAU,CACRlB,GAAI,yBACJC,eAAgB,YAElBkB,UAAW,CACTnB,GAAI,0BACJC,eAAgB,aAElBmB,QAAS,CACPpB,GAAI,wBACJC,eAAgB,WAElBoB,OAAQ,CACNrB,GAAI,uBACJC,eAAgB,UAElBqB,UAAW,CACTtB,GAAI,0BACJC,eAAgB,aAElBsB,SAAU,CACRvB,GAAI,yBACJC,eAAgB,YAElBuB,OAAQ,CACNxB,GAAI,uBACJC,eAAgB,UAElBwB,MAAO,CACLzB,GAAI,sBACJC,eAAgB,WAIPyB,EAAuB,SAACC,GAAD,OAClCA,EAAMC,QAAQ,MAAO,IAAIA,QAAQ,MAAM,SAACC,GAAD,OAAUA,EAAKC,kBAEzCf,O,8NChDR,IAAMgB,EAAkBC,aAAO,cAAGC,WAAH,IAAkBC,EAAlB,6BACpC,kBAAC,YAAcA,KADcF,CAAH,KAGX,qBAAGC,WACH,wBAA0B,c,wPCiBrCE,EAAiB,CAAC,UAAW,YA4FpBC,UA1Fe,WAAM,IAC1BC,EAAkBC,cAAlBD,cAD0B,EAEZE,YAASJ,GAAxBK,EAF2B,cAGEC,oBAAS,GAHX,WAG3BC,EAH2B,KAGfC,EAHe,KAI5BC,EAAWC,wBAJiB,EAKNC,uBAC1B,qBAAGC,gBAAmBC,mBADhBC,EAL0B,EAK1BA,QAASC,EALiB,EAKjBA,OAUjB,OANAC,qBAAU,WACRR,GAAc,GACdC,EAASQ,YAAqBZ,EAAYS,QAAST,EAAYa,WAC5DC,MAAK,kBAAMX,GAAc,MAD5B,OAES,kBAAMA,GAAc,QAC5B,CAACH,EAAYS,QAAST,EAAYa,WACjCX,EAEA,kBAAC,UAAD,CAASa,UAAU,mDACjB,kBAAC,IAAD,OAMJ,kBAAC,UAAD,CAASA,UAAU,yCACjB,kBAAC,OAAD,CAAMC,WAAS,EAACD,UAAU,aACxB,yBAAKA,UAAU,cACb,kBAAC,IAAD,OAEF,kBAAC,WAAD,CAAUE,GAAI,GAAIF,UAAU,cAC1B,kBAAC,QAAD,KACE,kBAAC,IAAD,CAAiBtB,YAAU,EAACsB,UAAU,aACpC,kBAAC,IAAD,CAAUG,IAAKR,EAAOS,SAAUC,OAAQ,KACxC,kBAAC,cAAD,KACE,kBAAC,OAAD,CAAMC,UAAU,MAAMZ,EAAQa,MAC9B,kBAAC,OAAD,CAAMD,UAAU,SACbxB,EAAczC,IAAkBiB,oBAM3C,kBAAC,WAAD,CAAUkD,GAAI,EAAGC,GAAI,GACnB,kBAAC,cAAD,KACE,kBAAC,OAAD,CAAMT,UAAU,WACblB,EAAc4B,IAAcZ,WAE/B,kBAAC,OAAD,CACErD,GAAG,SACHuD,UAAU,gBACVM,UAAWK,eAAaC,GAEvBjB,EAAOY,MAEV,kBAAC,OAAD,CAAMP,UAAU,WACblB,EAActB,IAAeK,UAEhC,kBAAC,OAAD,CACEpB,GAAG,aACHuD,UAAU,gBACVM,UAAWK,eAAaC,GAExB,kBAAC,aAAD,CAAYC,KAAK,WAAWC,KAAMpB,EAAQqB,gBAIhD,kBAAC,WAAD,CAAUP,GAAI,EAAGC,GAAI,IACnB,kBAAC,cAAD,KACE,kBAAC,OAAD,CAAMT,UAAU,WAAWlB,EAAc4B,IAAcH,OACvD,kBAAC,OAAD,CAAM9D,GAAG,cAAc6D,UAAWK,eAAaC,GAC5ClB,EAAQa,MAEX,kBAAC,OAAD,CAAMP,UAAU,WACblB,EAAc4B,IAAcM,cAE/B,kBAAC,OAAD,CAAMvE,GAAG,mBAAmB6D,UAAWK,eAAaC,GACjDlB,EAAQsB,aAEX,wBAAIhB,UAAU,iBACd,kBAAC,OAAD,CAAMM,UAAU,MACbxB,EAAczC,IAAkBkB,qBAEnC,kBAAC,IAAD,CAAe4C,IAAKT,EAAQuB","file":"js/service-offering-detail~5a11b65b.3b2373e44e1f781ae39f.js","sourcesContent":["const { defineMessages } = require('react-intl');\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  configureSourceTitle: {\n    id: 'platforms.list.configure-source',\n    defaultMessage: 'Configure a source in order to add products to portfolios.'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage:\n      'To connect to a source, go to <a>Sources</a> under Settings.'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  }\n});\n\nexport default platformsMessages;\n","const { defineMessages } = require('react-intl');\n\nconst statesMessages = defineMessages({\n  title: {\n    id: 'common.states.title',\n    defaultMessage: 'State'\n  },\n  ordered: {\n    id: 'common.states.ordered',\n    defaultMessage: 'Ordered'\n  },\n  approvalPending: {\n    id: 'common.states.approval-pending',\n    defaultMessage: 'Approval Pending'\n  },\n  canceled: {\n    id: 'common.states.canceled',\n    defaultMessage: 'Canceled'\n  },\n  completed: {\n    id: 'common.states.completed',\n    defaultMessage: 'Completed'\n  },\n  created: {\n    id: 'common.states.created',\n    defaultMessage: 'Created'\n  },\n  failed: {\n    id: 'common.states.failed',\n    defaultMessage: 'Failed'\n  },\n  undecided: {\n    id: 'common.states.undecided',\n    defaultMessage: 'Undecided'\n  },\n  approved: {\n    id: 'common.states.approved',\n    defaultMessage: 'Approved'\n  },\n  denied: {\n    id: 'common.states.denied',\n    defaultMessage: 'Denied'\n  },\n  error: {\n    id: 'common.states.error',\n    defaultMessage: 'Error'\n  }\n});\n\nexport const getTranslatableState = (state) =>\n  state.replace(/\\s/g, '').replace(/^./, (char) => char.toLowerCase());\n\nexport default statesMessages;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { LevelItem } from '@patternfly/react-core';\n\nexport const StyledLevelItem = styled(({ alignStart, ...props }) => (\n  <LevelItem {...props} />\n))`\n  align-items: ${({ alignStart }) =>\n    alignStart ? 'flex-start !important' : 'inherit'};\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  TextContent,\n  Text,\n  TextVariants,\n  Level\n} from '@patternfly/react-core';\nimport ReactJsonView from 'react-json-view';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\n\nimport useQuery from '../../../utilities/use-query';\nimport { fetchServiceOffering } from '../../../redux/actions/platform-actions';\nimport { ProductLoaderPlaceholder } from '../../../presentational-components/shared/loader-placeholders';\nimport CardIcon from '../../../presentational-components/shared/card-icon';\nimport CatalogBreadcrumbs from '../../common/catalog-breadcrumbs';\nimport { StyledLevelItem } from '../../../presentational-components/styled-components/level';\nimport { useIntl } from 'react-intl';\nimport labelMessages from '../../../messages/labels.messages';\nimport statesMessages from '../../../messages/states.messages';\nimport platformsMessages from '../../../messages/platforms.messages';\n\nconst requiredParams = ['service', 'platform'];\n\nconst ServiceOfferingDetail = () => {\n  const { formatMessage } = useIntl();\n  const [queryValues] = useQuery(requiredParams);\n  const [isFetching, setIsFetching] = useState(true);\n  const dispatch = useDispatch();\n  const { service, source } = useSelector(\n    ({ platformReducer: { serviceOffering } }) => serviceOffering\n  );\n\n  useEffect(() => {\n    setIsFetching(true);\n    dispatch(fetchServiceOffering(queryValues.service, queryValues.platform))\n      .then(() => setIsFetching(false))\n      .catch(() => setIsFetching(false));\n  }, [queryValues.service, queryValues.platform]);\n  if (isFetching) {\n    return (\n      <Section className=\"global-primary-background full-height pf-u-p-lg\">\n        <ProductLoaderPlaceholder />\n      </Section>\n    );\n  }\n\n  return (\n    <Section className=\"global-primary-background full-height\">\n      <Grid hasGutter className=\"pf-u-p-lg\">\n        <div className=\"pf-u-mb-sm\">\n          <CatalogBreadcrumbs />\n        </div>\n        <GridItem sm={12} className=\"pf-u-mb-md\">\n          <Level>\n            <StyledLevelItem alignStart className=\"pf-l-flex\">\n              <CardIcon src={source.icon_url} height={64} />\n              <TextContent>\n                <Text component=\"h1\">{service.name}</Text>\n                <Text component=\"small\">\n                  {formatMessage(platformsMessages.offeringTitle)}\n                </Text>\n              </TextContent>\n            </StyledLevelItem>\n          </Level>\n        </GridItem>\n        <GridItem md={3} lg={2}>\n          <TextContent>\n            <Text className=\"font-14\">\n              {formatMessage(labelMessages.platform)}\n            </Text>\n            <Text\n              id=\"source\"\n              className=\"overflow-wrap\"\n              component={TextVariants.p}\n            >\n              {source.name}\n            </Text>\n            <Text className=\"font-14\">\n              {formatMessage(statesMessages.created)}\n            </Text>\n            <Text\n              id=\"created_at\"\n              className=\"overflow-wrap\"\n              component={TextVariants.p}\n            >\n              <DateFormat type=\"relative\" date={service.created_at} />\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem md={9} lg={10}>\n          <TextContent>\n            <Text className=\"font-14\">{formatMessage(labelMessages.name)}</Text>\n            <Text id=\"description\" component={TextVariants.p}>\n              {service.name}\n            </Text>\n            <Text className=\"font-14\">\n              {formatMessage(labelMessages.description)}\n            </Text>\n            <Text id=\"long_description\" component={TextVariants.p}>\n              {service.description}\n            </Text>\n            <hr className=\"pf-c-divider\" />\n            <Text component=\"h2\">\n              {formatMessage(platformsMessages.offeringParameters)}\n            </Text>\n            <ReactJsonView src={service.extra} />\n          </TextContent>\n        </GridItem>\n      </Grid>\n    </Section>\n  );\n};\n\nexport default ServiceOfferingDetail;\n"],"sourceRoot":""}