{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-core/dist/js/components/Text/TextList.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Text/TextListItem.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/info-icon.js","webpack:///./src/smart-components/order/order-detail/approval-request.js"],"names":["Object","defineProperty","exports","value","tslib_1","React","__importStar","react_styles_1","TextListVariants","TextList","_a","children","className","component","ul","props","__rest","Component","createElement","assign","css","displayName","TextListItemVariants","TextListItem","li","__esModule","InfoIconConfig","name","height","width","svgPath","yOffset","xOffset","transform","InfoIcon","createIcon","rowOrder","delay","ms","Promise","resolve","setTimeout","checkRequest","fetchRequests","a","result","data","length","isEmpty","approvalRequest","ApprovalRequests","formatMessage","useFormatMessage","dispatch","useDispatch","useState","sortBy","setSortBy","useSelector","orderReducer","orderDetail","order","platform","orderItem","portfolio","portfolioItem","useEffect","state","id","fetchApprovalRequests","direction","default","grow","size","headingLevel","ordersMessages","noApprovalRequests","columns","title","transforms","sortable","rows","map","request","key","color","statesMessages","date","type","sort","b","index","creatingApprovalRequest","hasGutter","md","lg","xl","TextVariants","h2","approvalTitle","dl","dt","labelMessages","product","dd","orderID","orderDate","created_at","variant","orderedByLabel","owner","approvalParameters","entries","service_parameters","activity","aria-label","onSort","_e","cells","SortByDirection","asc","reverse"],"mappings":"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","file":"js/approval-request~31ecd969.ac5687833211c242bc37.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nvar TextListVariants;\n(function (TextListVariants) {\n    TextListVariants[\"ul\"] = \"ul\";\n    TextListVariants[\"ol\"] = \"ol\";\n    TextListVariants[\"dl\"] = \"dl\";\n})(TextListVariants = exports.TextListVariants || (exports.TextListVariants = {}));\nexports.TextList = (_a) => {\n    var { children = null, className = '', component = TextListVariants.ul } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { \"data-pf-content\": true, className: react_styles_1.css(className) }), children));\n};\nexports.TextList.displayName = 'TextList';\n//# sourceMappingURL=TextList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nvar TextListItemVariants;\n(function (TextListItemVariants) {\n    TextListItemVariants[\"li\"] = \"li\";\n    TextListItemVariants[\"dt\"] = \"dt\";\n    TextListItemVariants[\"dd\"] = \"dd\";\n})(TextListItemVariants = exports.TextListItemVariants || (exports.TextListItemVariants = {}));\nexports.TextListItem = (_a) => {\n    var { children = null, className = '', component = TextListItemVariants.li } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { \"data-pf-content\": true, className: react_styles_1.css(className) }), children));\n};\nexports.TextListItem.displayName = 'TextListItem';\n//# sourceMappingURL=TextListItem.js.map","\"use strict\"\nexports.__esModule = true;\nexports.InfoIconConfig = {\n  name: 'InfoIcon',\n  height: 512,\n  width: 192,\n  svgPath: 'M20 424.229h20V279.771H20c-11.046 0-20-8.954-20-20V212c0-11.046 8.954-20 20-20h112c11.046 0 20 8.954 20 20v212.229h20c11.046 0 20 8.954 20 20V492c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20v-47.771c0-11.046 8.954-20 20-20zM96 0C56.235 0 24 32.235 24 72s32.235 72 72 72 72-32.235 72-72S135.764 0 96 0z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.InfoIcon = require('../createIcon').createIcon(exports.InfoIconConfig);\nexports[\"default\"] = exports.InfoIcon;","import React, { Fragment, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Bullseye,\n  Flex,\n  Spinner,\n  TextContent,\n  Text,\n  TextVariants,\n  TextList,\n  TextListVariants,\n  TextListItem,\n  TextListItemVariants,\n  Title,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Card,\n  CardBody\n} from '@patternfly/react-core';\n\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  sortable,\n  SortByDirection\n} from '@patternfly/react-table';\n\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\nimport InfoIcon from '@patternfly/react-icons/dist/js/icons/info-icon';\nimport { fetchApprovalRequests } from '../../../redux/actions/order-actions';\nimport ordersMessages from '../../../messages/orders.messages';\nimport statesMessages from '../../../messages/states.messages';\nimport labelMessages from '../../../messages/labels.messages';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport useFormatMessage from '../../../utilities/use-format-message';\n\nconst rowOrder = ['updated', 'group_name', 'state'];\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst checkRequest = async (fetchRequests) => {\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const result = await fetchRequests();\n    if (result?.data.length > 0) {\n      return 'Finished';\n    }\n\n    await delay(3000);\n  }\n};\n\nconst isEmpty = (approvalRequest) =>\n  !approvalRequest ||\n  !approvalRequest.data ||\n  approvalRequest.data.length === 0;\n\nconst ApprovalRequests = () => {\n  const formatMessage = useFormatMessage();\n  const dispatch = useDispatch();\n  const [sortBy, setSortBy] = useState({});\n  const {\n    order,\n    approvalRequest = { data: [] },\n    platform,\n    orderItem,\n    portfolio,\n    portfolioItem\n  } = useSelector(({ orderReducer: { orderDetail } }) => orderDetail);\n\n  useEffect(() => {\n    if (order.state !== 'Failed' && orderItem?.id && isEmpty(approvalRequest)) {\n      checkRequest(() => dispatch(fetchApprovalRequests(orderItem.id)));\n    }\n  }, []);\n\n  const handleSort = (_e, index, direction) => setSortBy({ index, direction });\n\n  if (order.state === 'Failed' && isEmpty(approvalRequest)) {\n    return (\n      <Bullseye id=\"no-approval-requests\">\n        <Flex direction={{ default: 'column' }} grow={{ default: 'grow' }}>\n          <Bullseye>\n            <InfoIcon size=\"xl\" />\n          </Bullseye>\n          <Bullseye>\n            <Title headingLevel=\"h1\" size=\"2xl\">\n              {formatMessage(ordersMessages.noApprovalRequests)}\n            </Title>\n          </Bullseye>\n        </Flex>\n      </Bullseye>\n    );\n  }\n\n  const columns = [\n    { title: 'Updated', transforms: [sortable] },\n    { title: 'Name', transforms: [sortable] },\n    'Status'\n  ];\n\n  const rows = approvalRequest.data\n    .map((request) =>\n      rowOrder.map((key) => {\n        if (key === 'state') {\n          return (\n            <Fragment>\n              {request[key] === 'completed' && (\n                <Fragment>\n                  <CheckCircleIcon color=\"var(--pf-global--success-color--100)\" />\n                  &nbsp;\n                </Fragment>\n              )}\n              {formatMessage(statesMessages[request[key]])}\n            </Fragment>\n          );\n        }\n\n        if (key === 'updated') {\n          /**\n           * The fragment here is required other wise the super smart PF table will delete the first React element\n           */\n          return (\n            <Fragment>\n              <DateFormat date={request[key]} type=\"exact\" />\n            </Fragment>\n          );\n        }\n\n        return request[key];\n      })\n    )\n    .sort((a, b) =>\n      a[sortBy.index] < b[sortBy.index]\n        ? -1\n        : a[sortBy.index] < b[sortBy.index]\n        ? 1\n        : 0\n    );\n\n  return (\n    <TextContent>\n      {isEmpty(approvalRequest) ? (\n        <Bullseye>\n          <Flex direction={{ default: 'column' }} grow={{ default: 'grow' }}>\n            <Bullseye id=\"creating-approval-request\">\n              <Title headingLevel=\"h1\" size=\"xl\">\n                {formatMessage(ordersMessages.creatingApprovalRequest)}\n              </Title>\n            </Bullseye>\n            <Bullseye>\n              <Spinner size=\"xl\" />\n            </Bullseye>\n          </Flex>\n        </Bullseye>\n      ) : (\n        <Grid hasGutter>\n          <GridItem md={12} lg={6} xl={4}>\n            <Stack hasGutter>\n              <StackItem>\n                <Card>\n                  <CardBody>\n                    <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n                      {formatMessage(ordersMessages.approvalTitle)}\n                    </Text>\n                    <TextList component={TextListVariants.dl}>\n                      <TextListItem component={TextListItemVariants.dt}>\n                        {formatMessage(labelMessages.product)}\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dd}>\n                        {portfolioItem.name}\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dt}>\n                        {formatMessage(ordersMessages.orderID)}\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dd}>\n                        {order.id}\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dt}>\n                        {formatMessage(ordersMessages.orderDate)}\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dd}>\n                        <DateFormat\n                          date={order.created_at}\n                          variant=\"relative\"\n                        />\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dt}>\n                        {formatMessage(ordersMessages.orderedByLabel)}\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dd}>\n                        {order.owner}\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dt}>\n                        {formatMessage(labelMessages.portfolio)}\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dd}>\n                        {portfolio.name}\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dt}>\n                        {formatMessage(labelMessages.platform)}\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dd}>\n                        {platform.name}\n                      </TextListItem>\n                    </TextList>\n                  </CardBody>\n                </Card>\n              </StackItem>\n              <StackItem>\n                <Card>\n                  <CardBody>\n                    <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n                      {formatMessage(ordersMessages.approvalParameters)}\n                    </Text>\n                    <TextList component={TextListVariants.dl}>\n                      {Object.entries(orderItem.service_parameters).map(\n                        ([key, value]) => (\n                          <Fragment key={key}>\n                            <TextListItem component={TextListItemVariants.dt}>\n                              {key}\n                            </TextListItem>\n                            <TextListItem component={TextListItemVariants.dd}>\n                              {value}\n                            </TextListItem>\n                          </Fragment>\n                        )\n                      )}\n                    </TextList>\n                  </CardBody>\n                </Card>\n              </StackItem>\n            </Stack>\n          </GridItem>\n          <GridItem md={12} lg={6} xl={8}>\n            <Card>\n              <CardBody>\n                <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n                  {formatMessage(ordersMessages.activity)}\n                </Text>\n                <Table\n                  aria-label=\"Approval request activity\"\n                  onSort={handleSort}\n                  sortBy={sortBy}\n                  cells={columns}\n                  rows={\n                    sortBy.direction === SortByDirection.asc\n                      ? rows\n                      : rows.reverse()\n                  }\n                >\n                  <TableHeader />\n                  <TableBody />\n                </Table>\n              </CardBody>\n            </Card>\n          </GridItem>\n        </Grid>\n      )}\n    </TextContent>\n  );\n};\n\nexport default ApprovalRequests;\n"],"sourceRoot":""}