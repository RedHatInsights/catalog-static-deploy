{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-core/dist/js/components/Checkbox/Checkbox.js","webpack:///./src/presentational-components/shared/card-checkbox.js","webpack:///./src/presentational-components/shared/service-offering-body.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/wrench-icon.js","webpack:///./src/smart-components/portfolio/portfolio-item.js","webpack:///./src/toolbar/schemas/portfolio-toolbar.schema.js","webpack:///./src/smart-components/portfolio/portfolio-empty-state.js","webpack:///./src/smart-components/portfolio/portfolio-items.js"],"names":["Object","defineProperty","exports","value","tslib_1","React","__importStar","check_1","__importDefault","react_styles_1","defaultOnChange","Checkbox","Component","props","super","this","handleChange","event","onChange","currentTarget","checked","_a","ariaLabel","className","isValid","isDisabled","isChecked","label","defaultChecked","description","__rest","checkedProps","includes","createElement","css","default","check","assign","checkInput","type","disabled","ref","elem","indeterminate","checkLabel","modifiers","htmlFor","id","checkDescription","displayName","defaultProps","CardCheckbox","handleCheck","onClick","stopPropagation","aria-label","propTypes","func","bool","string","ServiceOfferingCardBody","name","distributor","display_name","pathname","searchParams","preserveSearch","portfolioName","component","TextVariants","h3","title","small","toDisplay","PropTypes","long_description","shape","__esModule","WrenchIconConfig","height","width","svgPath","yOffset","xOffset","transform","WrenchIcon","createIcon","StyledLevel","styled","Level","PortfolioItem","removeInProgress","isSelected","src","CATALOG_API_BASE","sourceId","service_offering_source_ref","isSelectable","onSelect","platformId","orderUrl","portfolio_id","metadata","user_capabilities","destroy","isRequired","PortfolioActionsToolbar","editPortfolioRoute","workflowPortfolioRoute","removePortfolioRoute","copyInProgress","copyPortfolio","userCapabilities","copy","update","set_approval","useState","isOpen","setOpen","dropdownItems","push","DropdownItem","key","role","length","Dropdown","position","DropdownPosition","right","toggle","KebabToggle","onToggle","isPlain","createPortfolioToolbarSchema","addProductsRoute","sharePortfolioRoute","isLoading","removeProducts","itemsSelected","meta","fetchPortfolioItemsWithPortfolio","portfolioId","filterProps","searchValue","onFilterChange","placeholder","share","unshare","fields","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","noData","TOOLBAR","noWrap","createLinkButton","variant","hidden","TOOLBAR_ITEM","LEVEL","groupName","FILTER_TOOLBAR_ITEM","isClearable","count","BUTTON","LEVEL_ITEM","AsyncPagination","apiRequest","apiProps","isCompact","PortfolioEmptyState","url","handleFilterChange","emptyStateProps","PrimaryAction","hasPermission","Button","Icon","SearchIcon","PortfolioItems","routes","stateDispatch","state","isFetching","isFiltering","selectedItems","filterValue","useSelector","portfolioReducer","portfolioItems","data","selectedPortfolio","useRouteMatch","PORTFOLIO_ROUTE","useQuery","portfolio","dispatch","useDispatch","items","map","item","source","selectedItem","payload","schema","renderEmptyState","dropDirection","portfolioRoute","arrayOf"],"mappings":"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","file":"js/54.129f52a6b29140d16b5f.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst check_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Check/check\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\n// tslint:disable-next-line:no-empty\nconst defaultOnChange = () => { };\nclass Checkbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event.currentTarget.checked, event);\n        };\n    }\n    render() {\n        const _a = this.props, { 'aria-label': ariaLabel, className, onChange, isValid, isDisabled, isChecked, label, checked, defaultChecked, description } = _a, props = tslib_1.__rest(_a, ['aria-label', \"className\", \"onChange\", \"isValid\", \"isDisabled\", \"isChecked\", \"label\", \"checked\", \"defaultChecked\", \"description\"]);\n        const checkedProps = {};\n        if ([true, false].includes(checked) || isChecked === true) {\n            checkedProps.checked = checked || isChecked;\n        }\n        if (onChange !== defaultOnChange) {\n            checkedProps.checked = isChecked;\n        }\n        if ([false, true].includes(defaultChecked)) {\n            checkedProps.defaultChecked = defaultChecked;\n        }\n        checkedProps.checked = checkedProps.checked === null ? false : checkedProps.checked;\n        return (React.createElement(\"div\", { className: react_styles_1.css(check_1.default.check, className) },\n            React.createElement(\"input\", Object.assign({}, props, { className: react_styles_1.css(check_1.default.checkInput), type: \"checkbox\", onChange: this.handleChange, \"aria-invalid\": !isValid, \"aria-label\": ariaLabel, disabled: isDisabled, ref: elem => elem && (elem.indeterminate = isChecked === null) }, checkedProps)),\n            label && (React.createElement(\"label\", { className: react_styles_1.css(check_1.default.checkLabel, isDisabled && check_1.default.modifiers.disabled), htmlFor: props.id }, label)),\n            description && React.createElement(\"div\", { className: react_styles_1.css(check_1.default.checkDescription) }, description)));\n    }\n}\nexports.Checkbox = Checkbox;\nCheckbox.displayName = 'Checkbox';\nCheckbox.defaultProps = {\n    className: '',\n    isValid: true,\n    isDisabled: false,\n    isChecked: false,\n    onChange: defaultOnChange\n};\n//# sourceMappingURL=Checkbox.js.map","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CardCheckbox = ({ handleCheck, isChecked, id }) => (\n  <Checkbox\n    onClick={(event) => event.stopPropagation()}\n    isChecked={isChecked}\n    onChange={handleCheck}\n    aria-label=\"card checkbox\"\n    id={id}\n  />\n);\n\nCardCheckbox.propTypes = {\n  handleCheck: propTypes.func,\n  isChecked: propTypes.bool,\n  id: propTypes.string\n};\n\nexport default CardCheckbox;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ItemDetails from './card-common';\nimport ConditionalLink from './conditional-link';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { StyledCardBody } from '../styled-components/card';\n\nconst ServiceOfferingCardBody = ({\n  name,\n  display_name,\n  distributor,\n  pathname,\n  searchParams,\n  preserveSearch,\n  portfolioName,\n  ...props\n}) => (\n  <StyledCardBody>\n    <TextContent>\n      <ConditionalLink\n        pathname={pathname}\n        searchParams={searchParams}\n        preserveSearch={preserveSearch}\n      >\n        <Text component={TextVariants.h3} title={name}>\n          <EllipsisTextContainer>{name}</EllipsisTextContainer>\n        </Text>\n      </ConditionalLink>\n      {distributor && <Text component={TextVariants.small}>{distributor}</Text>}\n      {portfolioName && (\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component=\"small\">\n            Portfolio\n          </Text>\n          <Text>{portfolioName}</Text>\n        </Fragment>\n      )}\n    </TextContent>\n    <ItemDetails\n      toDisplay={[props.description ? 'description' : 'long_description']}\n      {...props}\n    />\n  </StyledCardBody>\n);\n\nServiceOfferingCardBody.propTypes = {\n  name: PropTypes.string,\n  display_name: PropTypes.string,\n  distributor: PropTypes.string,\n  long_description: PropTypes.string,\n  description: PropTypes.string,\n  pathname: PropTypes.string,\n  preserveSearch: PropTypes.bool,\n  searchParams: PropTypes.shape({ [PropTypes.string]: PropTypes.string }),\n  portfolioName: PropTypes.string\n};\n\nexport default ServiceOfferingCardBody;\n","\"use strict\"\nexports.__esModule = true;\nexports.WrenchIconConfig = {\n  name: 'WrenchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.WrenchIcon = require('../createIcon').createIcon(exports.WrenchIconConfig);\nexports[\"default\"] = exports.WrenchIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level } from '@patternfly/react-core';\n\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport CardCheckbox from '../../presentational-components/shared/card-checkbox';\nimport ServiceOfferingCardBody from '../../presentational-components/shared/service-offering-body';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../../presentational-components/styled-components/styled-gallery';\nimport styled from 'styled-components';\n\nconst StyledLevel = styled(Level)`\n  flex: 1;\n`;\n\nconst PortfolioItem = (props) => (\n  <StyledGalleryItem isDisabled={props.removeInProgress && props.isSelected}>\n    <StyledCard>\n      <CardHeader>\n        <StyledLevel>\n          <CardIcon\n            src={`${CATALOG_API_BASE}/portfolio_items/${props.id}/icon`}\n            sourceId={props.service_offering_source_ref}\n          />\n          {props.isSelectable && (\n            <CardCheckbox\n              handleCheck={() => props.onSelect(props.id)}\n              isChecked={props.isSelected}\n              id={props.id}\n            />\n          )}\n        </StyledLevel>\n      </CardHeader>\n      <ServiceOfferingCardBody {...props} />\n      <CardFooter></CardFooter>\n    </StyledCard>\n  </StyledGalleryItem>\n);\n\nPortfolioItem.propTypes = {\n  id: PropTypes.string,\n  platformId: PropTypes.string,\n  service_offering_source_ref: PropTypes.string,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  orderUrl: PropTypes.string,\n  removeInProgress: PropTypes.bool,\n  portfolio_id: PropTypes.string,\n  metadata: PropTypes.shape({\n    user_capabilities: PropTypes.shape({ destroy: PropTypes.bool }).isRequired\n  }).isRequired\n};\n\nexport default PortfolioItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  DropdownItem\n} from '@patternfly/react-core';\n\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport { createLinkButton } from '../helpers';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\n/**\n * Cannot be anonymous function. Requires Component.diplayName to work with PF4 refs\n */\nconst PortfolioActionsToolbar = ({\n  editPortfolioRoute,\n  workflowPortfolioRoute,\n  removePortfolioRoute,\n  copyInProgress,\n  copyPortfolio,\n  userCapabilities: { copy, destroy, update, set_approval }\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const dropdownItems = [];\n  if (copy) {\n    dropdownItems.push(\n      <DropdownItem\n        component=\"button\"\n        aria-label=\"Copy Portfolio\"\n        key=\"copy-portfolio\"\n        id=\"copy-portfolio\"\n        onClick={copyPortfolio}\n      >\n        Copy\n      </DropdownItem>\n    );\n  }\n\n  if (set_approval) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Set approval workflow\"\n        key=\"set-approval-portfolio-action\"\n        id=\"set-approval-portfolio-action\"\n        component={\n          <CatalogLink preserveSearch pathname={workflowPortfolioRoute}>\n            Set approval\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Edit Portfolio\"\n        key=\"edit-portfolio\"\n        id=\"edit-portfolio\"\n        component={\n          <CatalogLink\n            id=\"edit-portfolio\"\n            preserveSearch\n            pathname={editPortfolioRoute}\n          >\n            Edit\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (destroy) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Remove Portfolio\"\n        key=\"delete-portfolio\"\n        id=\"delete-portfolio\"\n        component={\n          <CatalogLink preserveSearch pathname={removePortfolioRoute}>\n            Delete\n          </CatalogLink>\n        }\n        role=\"link\"\n        className=\"pf-c-dropdown__menu-item\"\n      />\n    );\n  }\n\n  return dropdownItems.length === 0 ? null : (\n    <Dropdown\n      className=\"pf-u-ml-md\"\n      onSelect={() => setOpen(false)}\n      position={DropdownPosition.right}\n      toggle={\n        <KebabToggle\n          id=\"toggle-portfolio-actions\"\n          onToggle={setOpen}\n          isDisabled={copyInProgress}\n        />\n      }\n      isOpen={isOpen}\n      isPlain\n      dropdownItems={dropdownItems}\n    />\n  );\n};\n\nPortfolioActionsToolbar.propTypes = {\n  removePortfolioRoute: PropTypes.string.isRequired,\n  editPortfolioRoute: PropTypes.string.isRequired,\n  workflowPortfolioRoute: PropTypes.string.isRequired,\n  copyPortfolio: PropTypes.func.isRequired,\n  copyInProgress: PropTypes.bool,\n  userCapabilities: PropTypes.shape({\n    copy: PropTypes.bool,\n    update: PropTypes.bool,\n    destroy: PropTypes.bool,\n    set_approval: PropTypes.bool\n  }).isRequired\n};\n\nconst createPortfolioToolbarSchema = ({\n  title,\n  addProductsRoute,\n  copyPortfolio,\n  sharePortfolioRoute,\n  editPortfolioRoute,\n  workflowPortfolioRoute,\n  removePortfolioRoute,\n  copyInProgress,\n  isLoading,\n  removeProducts,\n  itemsSelected,\n  meta,\n  fetchPortfolioItemsWithPortfolio,\n  portfolioId,\n  description,\n  filterProps: { searchValue, onFilterChange, placeholder },\n  userCapabilities: { share, unshare, ...userCapabilities }\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'portfolio-top-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'portfolio-toolbar-title',\n          noData: meta.noData,\n          title,\n          description,\n          fields: [\n            {\n              component: toolbarComponentTypes.TOOLBAR,\n              key: 'portfolio-actions',\n              noWrap: true,\n              fields: [\n                createLinkButton({\n                  pathname: sharePortfolioRoute,\n                  preserveSearch: true,\n                  variant: 'secondary',\n                  title: 'Share',\n                  isDisabled: copyInProgress,\n                  key: 'portfolio-share-button',\n                  id: 'portfolio-share-button',\n                  hidden: !share && !unshare\n                }),\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'portfolio-actions-dropdown-item',\n                  fields: [\n                    {\n                      component: PortfolioActionsToolbar,\n                      editPortfolioRoute,\n                      workflowPortfolioRoute,\n                      removePortfolioRoute,\n                      copyPortfolio,\n                      copyInProgress,\n                      userCapabilities,\n                      key: 'portfolio-actions-dropdown'\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'portfolio-items-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'portfolio-items-actions',\n                  fields: [\n                    {\n                      groupName: 'filter-portfolio-items',\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      isClearable: true,\n                      key: 'portfolio-items-filter',\n                      searchValue,\n                      onFilterChange,\n                      placeholder\n                    },\n                    {\n                      hidden: meta.count === 0 || !userCapabilities.update,\n                      groupName: 'add-portfolio-items',\n                      key: 'portfolio-items-add-group',\n                      ...createLinkButton({\n                        preserveSearch: true,\n                        pathname: addProductsRoute,\n                        isDisabled: isLoading || copyInProgress,\n                        variant: 'primary',\n                        title: 'Add',\n                        key: 'add-products-button'\n                      })\n                    },\n                    {\n                      component: toolbarComponentTypes.TOOLBAR_ITEM,\n                      key: 'remove-products-item',\n                      hidden: meta.count === 0 || !userCapabilities.update,\n                      fields: [\n                        {\n                          component: toolbarComponentTypes.BUTTON,\n                          groupName: 'remove-portfolio-items',\n                          variant: 'link',\n                          title: 'Remove',\n                          key: 'remove-products-button',\n                          id: 'remove-products-button',\n                          isDisabled: !itemsSelected,\n                          onClick: removeProducts\n                        }\n                      ]\n                    }\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            key: 'portfolio-items-pagination',\n                            meta,\n                            apiRequest: fetchPortfolioItemsWithPortfolio,\n                            apiProps: portfolioId,\n                            isCompact: true\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, WrenchIcon } from '@patternfly/react-icons';\n\nimport ContentGalleryEmptyState, {\n  EmptyStatePrimaryAction\n} from '../../presentational-components/shared/content-gallery-empty-state';\nimport { Button } from '@patternfly/react-core';\n\nconst PortfolioEmptyState = ({\n  url,\n  handleFilterChange,\n  meta,\n  userCapabilities: { update }\n}) => {\n  const NoDataAction = () => (\n    <EmptyStatePrimaryAction\n      url={url}\n      label=\"Add products\"\n      id=\"add-products-to-portfolio\"\n      hasPermission={update}\n    />\n  );\n\n  const FilterAction = () => (\n    <Button\n      id=\"clear-portfolio-filter\"\n      variant=\"link\"\n      onClick={() => handleFilterChange('')}\n    >\n      Clear all filters\n    </Button>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? NoDataAction : FilterAction,\n    title: meta.noData ? 'No products yet' : 'No results found',\n    description: meta.noData\n      ? 'No products in your portfolio'\n      : 'No results match the filter criteria. Remove all filters or clear all filters to show results.',\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n  return <ContentGalleryEmptyState {...emptyStateProps} />;\n};\n\nPortfolioEmptyState.propTypes = {\n  url: PropTypes.string.isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n  meta: PropTypes.shape({\n    noData: PropTypes.bool\n  }).isRequired,\n  userCapabilities: PropTypes.shape({\n    update: PropTypes.bool\n  }).isRequired\n};\n\nexport default PortfolioEmptyState;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createPortfolioToolbarSchema from '../../toolbar/schemas/portfolio-toolbar.schema';\nimport PortfolioEmptyState from './portfolio-empty-state';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport PortfolioItem from './portfolio-item';\nimport { fetchPortfolioItemsWithPortfolio } from '../../redux/actions/portfolio-actions';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useQuery from '../../utilities/use-query';\nimport { PORTFOLIO_ROUTE } from '../../constants/routes';\n\nconst PortfolioItems = ({\n  routes,\n  handleFilterChange,\n  removeProducts,\n  copyPortfolio,\n  stateDispatch,\n  state: {\n    removeInProgress,\n    isFetching,\n    isFiltering,\n    copyInProgress,\n    selectedItems,\n    filterValue\n  }\n}) => {\n  const { data, meta, name, description, userCapabilities } = useSelector(\n    ({\n      portfolioReducer: {\n        portfolioItems: { data, meta },\n        selectedPortfolio: {\n          name,\n          description,\n          metadata: { user_capabilities }\n        }\n      }\n    }) => ({\n      data,\n      meta,\n      name,\n      description,\n      userCapabilities: user_capabilities\n    })\n  );\n  const { url } = useRouteMatch(PORTFOLIO_ROUTE);\n  const [{ portfolio: id }] = useQuery(['portfolio']);\n  const dispatch = useDispatch();\n\n  const items = data.map((item) => (\n    <PortfolioItem\n      key={item.id}\n      {...item}\n      pathname={`${url}/portfolio-item`}\n      searchParams={{\n        source: item.service_offering_source_ref,\n        'portfolio-item': item.id\n      }}\n      preserveSearch\n      isSelectable={userCapabilities.update}\n      onSelect={(selectedItem) =>\n        stateDispatch({ type: 'selectItem', payload: selectedItem })\n      }\n      isSelected={selectedItems.includes(item.id)}\n      removeInProgress={removeInProgress}\n    />\n  ));\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPortfolioToolbarSchema({\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterChange,\n            placeholder: 'Filter by product'\n          },\n          title: name,\n          description,\n          ...routes,\n          copyPortfolio,\n          isLoading: isFetching || isFiltering,\n          copyInProgress,\n          removeProducts: () => removeProducts(selectedItems),\n          itemsSelected: selectedItems.length > 0,\n          meta,\n          fetchPortfolioItemsWithPortfolio: (...args) =>\n            dispatch(fetchPortfolioItemsWithPortfolio(...args)),\n          portfolioId: id,\n          userCapabilities\n        })}\n      />\n      <ContentGallery\n        items={items}\n        isLoading={isFetching || isFiltering}\n        renderEmptyState={() => (\n          <PortfolioEmptyState\n            handleFilterChange={handleFilterChange}\n            meta={meta}\n            userCapabilities={userCapabilities}\n            url={routes.addProductsRoute}\n          />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiProps={id}\n            apiRequest={(...args) =>\n              dispatch(fetchPortfolioItemsWithPortfolio(...args))\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nPortfolioItems.propTypes = {\n  routes: PropTypes.shape({\n    addProductsRoute: PropTypes.string.isRequired,\n    portfolioRoute: PropTypes.string.isRequired\n  }).isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n  removeProducts: PropTypes.func.isRequired,\n  copyPortfolio: PropTypes.func.isRequired,\n  stateDispatch: PropTypes.func.isRequired,\n  state: PropTypes.shape({\n    removeInProgress: PropTypes.bool,\n    isFetching: PropTypes.bool,\n    isFiltering: PropTypes.bool,\n    copyInProgress: PropTypes.bool,\n    selectedItems: PropTypes.arrayOf(PropTypes.string),\n    filterValue: PropTypes.string\n  }).isRequired\n};\n\nexport default PortfolioItems;\n"],"sourceRoot":""}