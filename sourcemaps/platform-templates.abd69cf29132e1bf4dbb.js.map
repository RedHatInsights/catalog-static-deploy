{"version":3,"file":"js/platform-templates.3b91f07a71f54dc944f3.js","mappings":"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","sources":["webpack:///./src/smart-components/platform/platform-templates.js"],"sourcesContent":["import React, { Fragment, useEffect, useReducer } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { fetchPlatformItems } from '../../redux/actions/platform-actions';\nimport PlatformItem from '../../presentational-components/platform/platform-item';\nimport { createPlatformsFilterToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { Button } from '@patternfly/react-core';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useQuery from '../../utilities/use-query';\nimport { PLATFORM_SERVICE_OFFERINGS_ROUTE } from '../../constants/routes';\nimport filteringMessages from '../../messages/filtering.messages';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst platformItemsState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (id, value, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(fetchPlatformItems(id, value, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst PlatformTemplates = () => {\n  const formatMessage = useFormatMessage();\n  const [{ platform: id }] = useQuery(['platform']);\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch] = useReducer(\n    platformItemsState,\n    initialState\n  );\n  const { data, meta } = useSelector(({ platformReducer: { platformItems } }) =>\n    platformItems[id] ? platformItems[id] : { data: [], meta: defaultSettings }\n  );\n  const { platform, platformIconMapping } = useSelector(\n    ({ platformReducer: { selectedPlatform, platformIconMapping } }) => ({\n      platform: selectedPlatform,\n      platformIconMapping\n    })\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPlatformItems(id, filterValue, defaultSettings)).then(() =>\n      stateDispatch({ type: 'setFetching', payload: false })\n    );\n    scrollToTop();\n  }, [id]);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      id,\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const filteredItems = {\n    items: data\n      ? data.map((item) => (\n          <PlatformItem\n            key={item.id}\n            pathname={PLATFORM_SERVICE_OFFERINGS_ROUTE}\n            searchParams={{\n              service: item.id\n            }}\n            preserveSearch\n            src={platformIconMapping[id]}\n            {...item}\n          />\n        ))\n      : []\n  };\n\n  const title = platform ? platform.name : '';\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPlatformsFilterToolbarSchema({\n          onFilterChange: handleFilterChange,\n          searchValue: filterValue,\n          filterPlaceholder: formatMessage(platformsMessages.templatesFilter),\n          meta,\n          apiRequest: (_, options) =>\n            dispatch(fetchPlatformItems(id, filterValue, options))\n        })}\n      />\n      <ContentGallery\n        title={title}\n        isLoading={isFetching || isFiltering}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState\n            title={\n              filterValue === ''\n                ? formatMessage(platformsMessages.noTemplatesTitle)\n                : formatMessage(filteringMessages.noResults)\n            }\n            Icon={SearchIcon}\n            PrimaryAction={() =>\n              filterValue !== '' ? (\n                <Button\n                  ouiaId={'clear-filters'}\n                  onClick={() => handleFilterChange('')}\n                  variant=\"link\"\n                >\n                  {formatMessage(filteringMessages.clearFilters)}\n                </Button>\n              ) : null\n            }\n            description={\n              filterValue === ''\n                ? formatMessage(platformsMessages.noTemplatesDescription)\n                : formatMessage(filteringMessages.noResultsDescription)\n            }\n          />\n        )}\n        {...filteredItems}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiRequest={(_, options) =>\n              dispatch(fetchPlatformItems(id, filterValue, options))\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PlatformTemplates;\n"],"names":["initialState","filterValue","isOpen","isFetching","isFiltering","platformItemsState","state","action","type","payload","debouncedFilter","asyncFormValidator","id","value","dispatch","filteringCallback","meta","defaultSettings","fetchPlatformItems","then","formatMessage","useFormatMessage","useQuery","platform","useReducer","stateDispatch","useSelector","platformItems","platformReducer","data","selectedPlatform","platformIconMapping","useDispatch","useEffect","scrollToTop","handleFilterChange","offset","filteredItems","items","map","item","key","pathname","PLATFORM_SERVICE_OFFERINGS_ROUTE","searchParams","service","preserveSearch","src","title","name","Fragment","schema","createPlatformsFilterToolbarSchema","onFilterChange","searchValue","filterPlaceholder","platformsMessages","apiRequest","_","options","isLoading","renderEmptyState","filteringMessages","Icon","SearchIcon","PrimaryAction","Button","ouiaId","onClick","variant","description","count","dropDirection"],"sourceRoot":""}