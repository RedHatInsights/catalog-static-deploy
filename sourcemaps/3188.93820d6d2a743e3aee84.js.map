{"version":3,"file":"js/3188.1d112d2d88a71497c826.js","mappings":"0KA+CA,QAxBqF,SAAC,G,IACpFA,EAAK,QACLC,EAAI,OACJC,EAAW,cACXC,EAAa,gBACb,IAAAC,kBAAAA,OAAiB,IAAG,aAAM,aAAI,EAC1B,OACJ,yBAAKC,UAAU,cACb,kBAAC,EAAAC,WAAU,CAACC,QAAQ,SAClB,kBAAC,EAAAC,eAAc,CAACC,KAAMR,IACtB,kBAAC,EAAAS,YAAW,KACV,kBAAC,EAAAC,KAAI,CAACC,UAAW,EAAAC,aAAA,IAAkBb,IAErC,kBAAC,EAAAc,eAAc,KACZZ,EACAE,KAEH,kBAAC,EAAAW,2BAA0B,KACxBZ,GAAiB,kBAACA,EAAa,UAcjC,IAAMa,EAAwE,SAAC,G,IACpFC,EAAG,MACHC,EAAK,QACL,IAAAC,cAAAA,OAAa,IAAG,GAAK,EACrBC,EAAE,KAEF,OAAAD,EACE,kBAAC,IAAW,CAACC,GAAIA,EAAIC,SAAUJ,EAAKK,gBAAc,GAChD,kBAAC,EAAAC,OAAM,CAAChB,QAAQ,WAAWW,IAE3B","sources":["webpack:///./src/presentational-components/shared/content-gallery-empty-state.tsx"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { ReactNode } from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants,\n  EmptyStateVariant\n} from '@patternfly/react-core';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nexport interface ContentGalleryEmptyStateProps {\n  title: string;\n  Icon: React.ComponentType;\n  description?: ReactNode;\n  PrimaryAction?: React.ComponentType;\n  renderDescription?: () => ReactNode;\n}\n\nconst ContentGalleryEmptyState: React.ComponentType<ContentGalleryEmptyStateProps> = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription = () => null\n}) => (\n  <div className=\"pf-u-mt-xl\">\n    <EmptyState variant=\"large\">\n      <EmptyStateIcon icon={Icon} />\n      <TextContent>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </TextContent>\n      <EmptyStateBody>\n        {description}\n        {renderDescription()}\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        {PrimaryAction && <PrimaryAction />}\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </div>\n);\n\nexport default ContentGalleryEmptyState;\n\nexport interface EmptyStatePrimaryAction {\n  url: string;\n  label: string;\n  hasPermission?: boolean;\n  id?: string;\n}\nexport const EmptyStatePrimaryAction: React.ComponentType<EmptyStatePrimaryAction> = ({\n  url,\n  label,\n  hasPermission = false,\n  id\n}) =>\n  hasPermission ? (\n    <CatalogLink id={id} pathname={url} preserveSearch>\n      <Button variant=\"primary\">{label}</Button>\n    </CatalogLink>\n  ) : null;\n"],"names":["title","Icon","description","PrimaryAction","renderDescription","className","EmptyState","variant","EmptyStateIcon","icon","TextContent","Text","component","TextVariants","EmptyStateBody","EmptyStateSecondaryActions","EmptyStatePrimaryAction","url","label","hasPermission","id","pathname","preserveSearch","Button"],"sourceRoot":""}