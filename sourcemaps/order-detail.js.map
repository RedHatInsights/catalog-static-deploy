{"version":3,"sources":["webpack:///./src/utilities/use-query.js","webpack:///./src/presentational-components/shared/conditional-link.js","webpack:///./src/helpers/platform/platform-helper.js","webpack:///./src/redux/actions/platform-actions.js","webpack:///./src/smart-components/common/catalog-breadcrumbs.js","webpack:///./src/presentational-components/styled-components/lazy-load-image.js","webpack:///./src/presentational-components/shared/card-icon.js","webpack:///./src/assets/images/card-icon-default.svg","webpack:///./src/helpers/order/order-helper.js","webpack:///./src/presentational-components/order/order-notification.js","webpack:///./src/redux/actions/order-actions.js","webpack:///./src/helpers/shared/breadcrumbs-creators.js","webpack:///./src/redux/actions/breadcrumbs-actions.js","webpack:///./src/utilities/use-breadcrumbs.js","webpack:///./src/smart-components/order/order-detail/order-detail-title.js","webpack:///./src/smart-components/order/cancel-order-modal.js","webpack:///./src/smart-components/order/order-detail/order-toolbar-actions.js","webpack:///./src/smart-components/order/order-detail/order-detail-information.js","webpack:///./src/smart-components/order/order-detail/order-detail-menu.js","webpack:///./src/smart-components/order/order-detail/order-details.js","webpack:///./src/smart-components/order/order-detail/approval-request.js","webpack:///./src/smart-components/order/order-detail/order-lifecycle.js","webpack:///./src/presentational-components/styled-components/orders.js","webpack:///./src/presentational-components/styled-components/unavailable-alert-container.js","webpack:///./src/smart-components/order/order-detail/order-detail.js"],"names":["useQuery","requiredParams","useLocation","search","query","URLSearchParams","reduce","acc","curr","get","ConditionalLink","children","pathname","props","propTypes","PropTypes","string","oneOfType","node","arrayOf","isRequired","axiosInstance","getAxiosInstance","graphqlInstance","getGraphqlInstance","getPlatforms","post","SOURCES_API_BASE","then","data","application_types","sources","getPlatform","platformId","getPlatformItems","filter","options","filterQuery","TOPOLOGICAL_INVENTORY_API_BASE","limit","offset","getPlatformInventories","defaultSettings","getServiceOffering","serviceOfferingId","sourceId","Promise","all","source","source_type_id","icon_url","service","fetchPlatforms","dispatch","type","ActionTypes","PlatformHelper","payload","error","fetchPlatformItems","meta","fetchSelectedPlatform","id","fetchPlatformInventories","fetchServiceOffering","CatalogBreadcrumbs","fragments","useSelector","breadcrumbsReducer","length","map","index","title","searchParams","undefined","nav","exact","key","className","isActive","StyledLazyLoadImage","styled","LazyLoadImage","height","hidden","CardIconContainer","div","CardIcon","src","useState","isLoaded","setLoaded","isUnknown","setUnknown","platformIconMapping","platformReducer","defaultIcon","CardIconDefault","threshold","delayTime","onError","onLoad","style","object","number","defaultProps","module","exports","orderApi","getOrderApi","portfolioItemApi","getOrderItemApi","getPortfolioItemApi","getServicePlans","portfolioItemId","listServicePlans","sendSubmitOrder","a","service_parameters","providerControlParameters","parameters","createOrder","order","orderItem","count","provider_control_parameters","addToOrder","submitOrder","getOrderItems","orderIds","CATALOG_API_BASE","orderId","join","getOrderPortfolioItems","itemIds","itemId","OrderNotification","onClick","clearNotifications","to","ORDERS_ROUTE","func","fetchServicePlans","OrderHelper","apiProps","addNotification","variant","description","dismissable","cancelOrder","getState","orderDetail","orderReducer","state","approvalRequest","fetchOrders","filters","pagination","queryFilter","Object","entries","value","Array","isArray","orders","orderItems","portfolio_item_id","portfolioItems","order_id","fetchOrderDetails","params","status","notFound","platform","portfolio","portfolioItem","progressMessages","fetchApprovalRequests","orderItemId","err","ENTITIES_EXTRA_PARAMS","PORTFOLIOS_ROUTE","FRAGMENT_TITLE","PORTFOLIO_ROUTE","portfolioReducer","selectedPortfolio","name","PORTFOLIO_ITEM_ROUTE","EDIT_SURVEY_ROUTE","ADD_PRODUCTS_ROUTE","PLATFORM_ROUTE","selectedPlatform","PLATFORM_SERVICE_OFFERINGS_ROUTE","serviceOffering","ORDER_ROUTE","FRAGMENT_PREFIX","PLATFORMS_ROUTE","createBreadcrumbsFromLocations","INITIALIZE_BREADCRUMBS","result","replace","split","generateTitle","forEach","useBreadcrumbs","updateTriggers","useDispatch","searchObject","useEffect","OrderDetailTitle","portfolioItemName","Title","size","CancelOrderModal","onClose","isOpen","Modal","header","headingLevel","fill","isSmall","actions","Button","isFooterLeftAligned","bool","CANCELABLE_STATES","canCancel","includes","OrderToolbarActions","cancelModalOpen","setCancelModalOpen","ActionGroup","isDisabled","OrderDetailInformation","jobName","orderRequestDate","orderUpdateDate","owner","Split","SplitItem","Level","LevelItem","TextContent","Text","component","TextVariants","small","DateFormat","date","OrderDetailMenu","baseUrl","isFetching","navItems","link","useNavItems","Nav","NavList","tabIndex","preserveSearch","activeClassName","OrderDetails","h2","TextList","TextListVariants","dl","TextListItem","TextListItemVariants","dt","dd","created_at","delay","ms","resolve","setTimeout","checkRequest","fetchRequests","ApprovalRequests","Bullseye","Flex","breakpointMods","modifier","Spinner","request","target","rel","href","document","baseURI","approval_request_ref","reason","request_completed_at","OrderLifecycle","url","useRouteMatch","orderDetailData","external_url","OrderDetailStack","Stack","OrderDetailStackItem","StackItem","UnAvailableAlertContainer","OrderDetail","setIsFetching","queryValues","match","resetBreadcrumbs","insights","chrome","appNavClick","secondaryNav","keys","unAvailable","Alert","isInline","updated_at","gutter","path"],"mappings":"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","file":"js/order-detail.js","sourcesContent":["import { useLocation } from 'react-router-dom';\n\nconst useQuery = (requiredParams = []) => {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search);\n  return [\n    requiredParams.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: query.get(curr)\n      }),\n      {}\n    ),\n    search,\n    query\n  ];\n};\n\nexport default useQuery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ConditionalLink = ({ children, pathname, ...props }) =>\n  pathname ? (\n    <CatalogLink pathname={pathname} {...props}>\n      {children}\n    </CatalogLink>\n  ) : (\n    children\n  );\n\nConditionalLink.propTypes = {\n  pathname: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]).isRequired\n};\n\nexport default ConditionalLink;\n","import { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport {\n  TOPOLOGICAL_INVENTORY_API_BASE,\n  SOURCES_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nexport const getPlatforms = () => {\n  return graphqlInstance\n    .post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n    .then(({ data: { application_types } }) => application_types)\n    .then(([{ sources }]) => sources);\n};\n\nexport const getPlatform = (platformId) => {\n  return axiosInstance.get(`${SOURCES_API_BASE}/sources/${platformId}`);\n};\n\nexport const getPlatformItems = (platformId, filter, options) => {\n  const filterQuery = filter ? `&filter[name][contains_i]=${filter}` : '';\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_offerings?filter[archived_at][nil]${filterQuery}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings`\n    );\n  }\n};\n\nexport const getPlatformInventories = (\n  platformId,\n  filter = '',\n  options = defaultSettings\n) => {\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_inventories?filter[name][contains_i]=${filter}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_inventories?limit=${options.limit}&offset=${options.offset}`\n    );\n  }\n};\n\nexport const getServiceOffering = (serviceOfferingId, sourceId) =>\n  Promise.all([\n    axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings/${serviceOfferingId}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${sourceId}`)\n      .then((source) => {\n        return axiosInstance\n          .get(`${SOURCES_API_BASE}/source_types/${source.source_type_id}`)\n          .then(({ icon_url }) => ({\n            ...source,\n            icon_url\n          }));\n      })\n  ]).then(([service, source]) => ({\n    service,\n    source\n  }));\n","import * as ActionTypes from '../action-types';\nimport * as PlatformHelper from '../../helpers/platform/platform-helper';\n\nexport const fetchPlatforms = () => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_PLATFORMS}_PENDING` });\n  return PlatformHelper.getPlatforms()\n    .then((data) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_FULFILLED`,\n        payload: data\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchPlatformItems = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_ITEMS,\n  payload: PlatformHelper.getPlatformItems(platformId, filter, options),\n  meta: {\n    platformId,\n    filter,\n    ...options\n  }\n});\n\nexport const fetchMultiplePlatformItems = (platformsId) => {\n  const platformPromisses = platformsId.map((platformId) =>\n    PlatformHelper.getPlatformItems(platformId).then((data) => ({\n      [platformId]: data\n    }))\n  );\n  return {\n    type: ActionTypes.FETCH_MULTIPLE_PLATFORM_ITEMS,\n    payload: Promise.all(platformPromisses).then((data) =>\n      data.reduce(\n        (acc, curr) => ({\n          ...acc,\n          ...curr\n        }),\n        {}\n      )\n    )\n  };\n};\n\nexport const fetchSelectedPlatform = (id) => ({\n  type: ActionTypes.FETCH_PLATFORM,\n  payload: PlatformHelper.getPlatform(id)\n});\n\nexport const searchPlatformItems = (value) => ({\n  type: ActionTypes.FILTER_PLATFORM_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const fetchPlatformInventories = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_INVENTORIES,\n  payload: PlatformHelper.getPlatformInventories(platformId, filter, options)\n});\n\nexport const fetchServiceOffering = (...args) => ({\n  type: ActionTypes.FETCH_SERVICE_OFFERING,\n  payload: PlatformHelper.getServiceOffering(...args)\n});\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport ConditionalLink from '../../presentational-components/shared/conditional-link';\n\nconst CatalogBreadcrumbs = () => {\n  const fragments = useSelector(\n    ({ breadcrumbsReducer: { fragments } }) => fragments\n  );\n  if (fragments.length <= 1) {\n    return null;\n  }\n\n  return (\n    <Breadcrumb>\n      {fragments.map(({ title, pathname, searchParams }, index) => (\n        <ConditionalLink\n          pathname={!(fragments.length === index + 1) ? pathname : undefined}\n          searchParams={searchParams}\n          nav\n          exact\n          key={pathname}\n          className=\"pf-c-breadcrumb__item\"\n        >\n          <BreadcrumbItem isActive={fragments.length === index + 1}>\n            {title}\n          </BreadcrumbItem>\n        </ConditionalLink>\n      ))}\n    </Breadcrumb>\n  );\n};\n\nexport default CatalogBreadcrumbs;\n","import styled from 'styled-components';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst StyledLazyLoadImage = styled(LazyLoadImage)`\n  height: ${({ height, hidden }) => (hidden ? '0px' : `${height}px` || '40px')};\n  display: ${({ hidden }) => (hidden ? 'none' : 'inherit')};\n  float: ${({ hidden }) => (hidden ? 'left' : 'inherit')};\n  width: ${({ hidden }) => (hidden ? 0 : 'inherit')};\n`;\n\nexport default StyledLazyLoadImage;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\n\nimport { IconPlaceholder } from './loader-placeholders';\nimport CardIconDefault from '../../assets/images/card-icon-default.svg';\nimport StyledLazyLoadImage from '../styled-components/lazy-load-image';\n\nconst CardIconContainer = styled.div`\n  display: inline-block;\n  height: ${({ height }) => `${height}px`};\n`;\n\nconst CardIcon = ({ src, height, sourceId }) => {\n  const [isLoaded, setLoaded] = useState(false);\n  const [isUnknown, setUnknown] = useState(false);\n  const platformIconMapping = useSelector(\n    ({ platformReducer: { platformIconMapping } }) => platformIconMapping\n  );\n  const defaultIcon = sourceId\n    ? platformIconMapping[sourceId]\n    : CardIconDefault;\n\n  return (\n    <CardIconContainer height={height}>\n      {!isLoaded && <IconPlaceholder height={height} />}\n      <StyledLazyLoadImage\n        threshold={2000}\n        delayTime={0}\n        hidden={!isLoaded}\n        height={isLoaded ? height : 0}\n        onError={() => setUnknown(true)}\n        onLoad={() => setLoaded(true)}\n        src={!src || isUnknown ? defaultIcon : src}\n      />\n    </CardIconContainer>\n  );\n};\n\nCardIcon.propTypes = {\n  src: PropTypes.string,\n  platformId: PropTypes.string,\n  style: PropTypes.object,\n  height: PropTypes.number,\n  sourceId: PropTypes.string\n};\n\nCardIcon.defaultProps = {\n  style: {},\n  height: 40\n};\n\nexport default CardIcon;\n","module.exports = __webpack_public_path__ + \"fonts/card-icon-default.svg\";","/* eslint camelcase: 0 */\nimport {\n  getAxiosInstance,\n  getPortfolioItemApi,\n  getOrderApi,\n  getOrderItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nconst orderApi = getOrderApi();\nconst orderItemApi = getOrderItemApi();\nconst portfolioItemApi = getPortfolioItemApi();\nconst axiosInstance = getAxiosInstance();\n\nexport function getServicePlans(portfolioItemId) {\n  return portfolioItemApi.listServicePlans(portfolioItemId);\n}\n\nexport async function sendSubmitOrder({\n  service_parameters: { providerControlParameters, ...service_parameters },\n  ...parameters\n}) {\n  let order = await orderApi.createOrder();\n  let orderItem = {};\n  orderItem.count = 1;\n  orderItem = {\n    ...orderItem,\n    ...parameters,\n    service_parameters,\n    provider_control_parameters: providerControlParameters || {}\n  };\n  await orderApi.addToOrder(order.id, orderItem);\n  return orderApi.submitOrder(order.id);\n}\n\nexport function cancelOrder(orderId) {\n  return orderApi.cancelOrder(orderId);\n}\n\nconst getOrderItems = (orderIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items?${orderIds\n      .map((orderId) => `filter[order_id][]=${orderId}`)\n      .join('&')}`\n  );\n\nconst getOrderPortfolioItems = (itemIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items?${itemIds\n      .map((itemId) => `filter[id][]=${itemId}`)\n      .join('&')}`\n  );\n\nexport const getOrders = (filter = '', pagination = defaultSettings) =>\n  axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/orders?${filter}&limit=${pagination.limit}&offset=${pagination.offset}`\n    ) // eslint-disable-line max-len\n    .then((orders) =>\n      getOrderItems(orders.data.map(({ id }) => id)).then((orderItems) =>\n        getOrderPortfolioItems(\n          orderItems.data.map(({ portfolio_item_id }) => portfolio_item_id)\n        ).then((portfolioItems) => {\n          return {\n            portfolioItems,\n            ...orders,\n            data: orders.data.map((order) => ({\n              ...order,\n              orderItems: orderItems.data.filter(\n                ({ order_id }) => order_id === order.id\n              )\n            }))\n          };\n        })\n      )\n    );\n\nexport function getOrderApprovalRequests(orderItemId) {\n  return orderItemApi.listApprovalRequests(orderItemId);\n}\n\nexport const getOrderDetail = (params) => {\n  return Promise.all([\n    axiosInstance.get(`${CATALOG_API_BASE}/orders/${params.order}`),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}`\n    ),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/portfolio_items/${params['portfolio-item']}`)\n      .catch((error) => {\n        if (error.status === 404) {\n          return {\n            object: 'Portfolio item',\n            notFound: true\n          };\n        }\n\n        throw error;\n      }),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${params.platform}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Platform',\n            notFound: true\n          };\n        }\n\n        throw error;\n      }),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}/progress_messages`\n    ),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/portfolios/${params.portfolio}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Portfolio',\n            notFound: true\n          };\n        }\n\n        throw error;\n      }),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}/approval_requests`\n    )\n  ]);\n};\n\nexport const getApprovalRequests = (orderItemId) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items/${orderItemId}/approval_requests`\n  );\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport { ORDERS_ROUTE } from '../../constants/routes';\n\nconst OrderNotification = ({ id, dispatch }) => (\n  <Fragment>\n    You can track the progress of Order # {id} in your{' '}\n    <Link onClick={() => dispatch(clearNotifications())} to={ORDERS_ROUTE}>\n      Orders\n    </Link>{' '}\n    page.\n  </Fragment>\n);\n\nOrderNotification.propTypes = {\n  id: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default OrderNotification;\n","import React from 'react';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\n\nimport * as ActionTypes from '../action-types';\nimport * as OrderHelper from '../../helpers/order/order-helper';\nimport OrderNotification from '../../presentational-components/order/order-notification';\n\nexport const fetchServicePlans = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_SERVICE_PLANS,\n  payload: OrderHelper.getServicePlans(portfolioItemId)\n});\n\nexport const updateServiceData = (data) => ({\n  type: ActionTypes.UPDATE_SERVICE_DATA,\n  payload: { serviceData: data }\n});\n\nexport const setSelectedPlan = (data) => ({\n  type: ActionTypes.SET_SELECTED_PLAN,\n  payload: data\n});\n\nexport const sendSubmitOrder = (apiProps) => (dispatch) =>\n  dispatch({\n    type: ActionTypes.SUBMIT_SERVICE_ORDER,\n    payload: OrderHelper.sendSubmitOrder(apiProps).then(({ id }) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been accepted successfully',\n          description: <OrderNotification id={id} dispatch={dispatch} />,\n          dismissable: true\n        })\n      )\n    )\n  });\n\nexport const cancelOrder = (orderId) => (dispatch, getState) => {\n  dispatch({ type: `${ActionTypes.CANCEL_ORDER}_PENDING` });\n  const {\n    orderReducer: { orderDetail }\n  } = getState();\n  return OrderHelper.cancelOrder(orderId)\n    .then(() => {\n      orderDetail.order.state = 'Canceled';\n      if (\n        orderDetail.approvalRequest &&\n        orderDetail.approvalRequest.length > 0\n      ) {\n        orderDetail.approvalRequest[0].state = 'canceled';\n      }\n\n      dispatch({\n        type: ActionTypes.SET_ORDER_DETAIL,\n        payload: { ...orderDetail }\n      });\n      return orderDetail;\n    })\n    .then((orderDetail) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been canceled successfully',\n          description: `Order ${`Order #${orderDetail.order.id}`} was canceled.`,\n          dismissable: true\n        })\n      )\n    )\n    .then(() => dispatch({ type: `${ActionTypes.CANCEL_ORDER}_FULFILLED` }))\n    .catch((error) => {\n      dispatch({\n        type: `${ActionTypes.CANCEL_ORDER}_REJECTED`,\n        payload: error\n      });\n    });\n};\n\nexport const fetchOrders = (filters, pagination) => (dispatch) => {\n  const queryFilter = Object.entries(filters)\n    .filter(([, value]) => value && value.length > 0)\n    .map(([key, value]) =>\n      Array.isArray(value)\n        ? value.map((value) => `filter[${key}][]=${value}`).join('&')\n        : `filter[${key}][contains_i]=${value}`\n    )\n    .join('&');\n  dispatch({ type: `${ActionTypes.FETCH_ORDERS}_PENDING` });\n  return OrderHelper.getOrders(queryFilter, pagination)\n    .then(({ portfolioItems, ...orders }) => {\n      dispatch({\n        type: ActionTypes.SET_PORTFOLIO_ITEMS,\n        payload: portfolioItems\n      });\n      return dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_FULFILLED`,\n        meta: { filter: queryFilter },\n        payload: orders\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchOrderDetails = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SET_ORDER_DETAIL}_PENDING` });\n  return OrderHelper.getOrderDetail(params)\n    .then(\n      ([\n        order,\n        orderItem,\n        portfolioItem,\n        platform,\n        progressMessages,\n        portfolio,\n        approvalRequest\n      ]) =>\n        dispatch({\n          type: `${ActionTypes.SET_ORDER_DETAIL}_FULFILLED`,\n          payload: {\n            order,\n            orderItem,\n            portfolioItem,\n            platform,\n            progressMessages,\n            portfolio,\n            approvalRequest\n          }\n        })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.SET_ORDER_DETAIL}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchApprovalRequests = (orderItemId) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_PENDING` });\n  return OrderHelper.getApprovalRequests(orderItemId)\n    .then((data) => {\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_FULFILLED`,\n        payload: data\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n","import {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  ORDER_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORMS_ROUTE,\n  ORDERS_ROUTE,\n  EDIT_SURVEY_ROUTE,\n  ADD_PRODUCTS_ROUTE\n} from '../../constants/routes';\n\nexport const BASE_PORTFOLIO_FRAGMENTS = [\n  {\n    title: 'Portfolios',\n    pathname: PORTFOLIOS_ROUTE,\n    searchParams: {}\n  }\n];\n\nexport const ENTITIES_EXTRA_PARAMS = {\n  'portfolio-item': ['source']\n};\n\nexport const FRAGMENT_TITLE = {\n  [PORTFOLIO_ROUTE]: (getState) =>\n    getState().portfolioReducer.selectedPortfolio.name,\n  [PORTFOLIO_ITEM_ROUTE]: (getState) =>\n    getState().portfolioReducer.portfolioItem.portfolioItem.name,\n  [EDIT_SURVEY_ROUTE]: () => 'Edit survey',\n  [ADD_PRODUCTS_ROUTE]: () => 'Add products',\n  [PLATFORM_ROUTE]: (getState) =>\n    getState().platformReducer.selectedPlatform.name,\n  [PLATFORM_SERVICE_OFFERINGS_ROUTE]: (getState) =>\n    getState().platformReducer.serviceOffering.service.name,\n  [ORDER_ROUTE]: (getState) => {\n    const { portfolioItem, order } = getState().orderReducer.orderDetail;\n    return `${portfolioItem.name} # ${order.id}`;\n  }\n};\n\nexport const FRAGMENT_PREFIX = {\n  [PORTFOLIO_ROUTE]: {\n    pathname: PORTFOLIOS_ROUTE,\n    title: 'Portfolios',\n    searchParams: {}\n  },\n  [PLATFORM_ROUTE]: {\n    pathname: PLATFORMS_ROUTE,\n    title: 'Platforms',\n    searchParams: {}\n  },\n  [ORDER_ROUTE]: {\n    pathname: ORDERS_ROUTE,\n    title: 'Orders',\n    searchParams: {}\n  }\n};\n","import { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport {\n  FRAGMENT_TITLE,\n  ENTITIES_EXTRA_PARAMS,\n  FRAGMENT_PREFIX\n} from '../../helpers/shared/breadcrumbs-creators';\n\nexport const createBreadcrumbsFromLocations = (pathname = '', search = {}) => (\n  dispatch,\n  getState\n) => {\n  if (pathname.length === 0) {\n    return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: [] });\n  }\n\n  let result = pathname\n    .replace(/^\\//, '')\n    .split('/')\n    .reduce((acc, curr, index) => {\n      const pathname = `${\n        index > 0 && acc[index - 1] ? acc[index - 1].pathname : ''\n      }/${curr}`;\n\n      const generateTitle = FRAGMENT_TITLE[pathname];\n      if (!generateTitle) {\n        return acc;\n      }\n\n      const searchParams = {\n        ...(index > 0 && acc[index - 1].searchParams),\n        ...(search[curr] ? { [curr]: search[curr] } : {})\n      };\n      if (ENTITIES_EXTRA_PARAMS[curr]) {\n        ENTITIES_EXTRA_PARAMS[curr].forEach((key) => {\n          searchParams[key] = search[key];\n        });\n      }\n\n      return [\n        ...acc,\n        {\n          pathname,\n          searchParams,\n          title: generateTitle(getState)\n        }\n      ];\n    }, []);\n  if (result.length > 0 && FRAGMENT_PREFIX[result[0].pathname]) {\n    result = [FRAGMENT_PREFIX[result[0].pathname], ...result];\n  }\n\n  return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: result });\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createBreadcrumbsFromLocations } from '../redux/actions/breadcrumbs-actions';\n\nconst useBreadcrumbs = (updateTriggers = []) => {\n  const dispatch = useDispatch();\n  const { pathname, search } = useLocation();\n  if (updateTriggers.length === 0) {\n    return dispatch(createBreadcrumbsFromLocations('', {}));\n  }\n\n  const searchParams = new URLSearchParams(search);\n  const searchObject = {};\n  searchParams.forEach((value, key) => {\n    searchObject[key] = value;\n  });\n\n  useEffect(() => {\n    dispatch(createBreadcrumbsFromLocations(pathname, searchObject));\n  }, [pathname, ...updateTriggers]);\n\n  return () => dispatch(createBreadcrumbsFromLocations('', {}));\n};\n\nexport default useBreadcrumbs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Title } from '@patternfly/react-core';\n\nconst OrderDetailTitle = ({ portfolioItemName, orderId }) => (\n  <Title size=\"3xl\">\n    {portfolioItemName} - Order # {orderId}\n  </Title>\n);\n\nOrderDetailTitle.propTypes = {\n  portfolioItemName: PropTypes.string.isRequired,\n  orderId: PropTypes.string.isRequired\n};\n\nexport default OrderDetailTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, Title } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nconst CancelOrderModal = ({ name, cancelOrder, onClose, isOpen }) => (\n  <Modal\n    isOpen={isOpen}\n    onClose={onClose}\n    title=\" \"\n    header={\n      <Title size=\"2xl\" headingLevel=\"h2\">\n        <ExclamationTriangleIcon fill=\"#F0AB00\" /> Cancel order\n      </Title>\n    }\n    isSmall\n    actions={[\n      <Button\n        onClick={cancelOrder}\n        key=\"cancel-order\"\n        id=\"cancel-order\"\n        variant=\"danger\"\n      >\n        Cancel order\n      </Button>,\n      <Button onClick={onClose} key=\"keep-order\" id=\"keep-order\" variant=\"link\">\n        Keep order\n      </Button>\n    ]}\n    isFooterLeftAligned\n  >\n    Are you sure you want to cancel {name}?\n  </Modal>\n);\n\nCancelOrderModal.propTypes = {\n  name: PropTypes.string.isRequired,\n  cancelOrder: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool\n};\n\nexport default CancelOrderModal;\n","import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useDispatch } from 'react-redux';\n\nimport { cancelOrder } from '../../../redux/actions/order-actions';\nimport CancelOrderModal from '../cancel-order-modal';\n\nconst CANCELABLE_STATES = ['Approval Pending'];\n\nconst canCancel = (state) => CANCELABLE_STATES.includes(state);\n\nconst OrderToolbarActions = ({ state, orderId, portfolioItemName }) => {\n  const dispatch = useDispatch();\n  const [cancelModalOpen, setCancelModalOpen] = useState(false);\n  return (\n    <Fragment>\n      <CancelOrderModal\n        onClose={() => setCancelModalOpen(false)}\n        isOpen={cancelModalOpen}\n        cancelOrder={() => {\n          setCancelModalOpen(false);\n          dispatch(cancelOrder(orderId));\n        }}\n        name={portfolioItemName}\n      />\n      <ActionGroup>\n        <Button\n          onClick={() => setCancelModalOpen(true)}\n          isDisabled={!canCancel(state)}\n          type=\"button\"\n          className=\"pf-u-mr-md\"\n          id=\"cancel-order-action\"\n        >\n          Cancel order\n        </Button>\n        <Button isDisabled type=\"button\">\n          Reorder\n        </Button>\n      </ActionGroup>\n    </Fragment>\n  );\n};\n\nOrderToolbarActions.propTypes = {\n  state: PropTypes.string,\n  orderId: PropTypes.string.isRequired,\n  portfolioItemName: PropTypes.string.isRequired\n};\n\nexport default OrderToolbarActions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Split,\n  SplitItem,\n  LevelItem,\n  Level,\n  Title,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\n\nimport CardIcon from '../../../presentational-components/shared/card-icon';\nimport { CATALOG_API_BASE } from '../../../utilities/constants';\n\nconst OrderDetailInformation = ({\n  jobName,\n  state,\n  orderRequestDate,\n  orderUpdateDate,\n  owner,\n  portfolioItemId,\n  sourceId\n}) => (\n  <Split className=\"pf-u-mt-sm\">\n    <SplitItem className=\"pf-u-mr-md\">\n      <CardIcon\n        sourceId={sourceId}\n        height={60}\n        src={`${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}/icon`}\n      />\n    </SplitItem>\n    <SplitItem>\n      <Level>\n        <LevelItem className=\"pf-u-mr-lg\">\n          <Title headingLevel=\"h5\" size=\"md\">\n            {jobName}\n          </Title>\n        </LevelItem>\n        <LevelItem>\n          <Title headingLevel=\"h5\" size=\"md\">\n            Status:{' '}\n            {state === 'Failed' && (\n              <ExclamationCircleIcon className=\"pf-u-mr-sm icon-danger-fill\" />\n            )}{' '}\n            {state}\n          </Title>\n        </LevelItem>\n      </Level>\n      <Level>\n        <LevelItem className=\"pf-u-mr-lg\">\n          <TextContent>\n            <Text component={TextVariants.small}>\n              Ordered&nbsp;\n              <DateFormat date={orderRequestDate} type=\"relative\" />\n            </Text>\n          </TextContent>\n        </LevelItem>\n        <LevelItem className=\"pf-u-mr-lg\">\n          <TextContent>\n            <Text component={TextVariants.small}>Ordered by {owner}</Text>\n          </TextContent>\n        </LevelItem>\n        <LevelItem>\n          <TextContent>\n            <Text component={TextVariants.small}>\n              Last updated&nbsp;\n              <DateFormat date={orderUpdateDate} type=\"relative\" />\n            </Text>\n          </TextContent>\n        </LevelItem>\n      </Level>\n    </SplitItem>\n  </Split>\n);\n\nOrderDetailInformation.propTypes = {\n  portfolioItemId: PropTypes.string.isRequired,\n  sourceId: PropTypes.string.isRequired,\n  state: PropTypes.string.isRequired,\n  jobName: PropTypes.string.isRequired,\n  orderRequestDate: PropTypes.string.isRequired,\n  orderUpdateDate: PropTypes.string.isRequired,\n  owner: PropTypes.string.isRequired\n};\n\nexport default OrderDetailInformation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  TextContent,\n  Text,\n  TextVariants,\n  NavList,\n  Nav\n} from '@patternfly/react-core';\nimport CatalogLink from '../../common/catalog-link';\n\nconst useNavItems = ({ state } = {}) => [\n  {\n    link: '',\n    title: 'Order details'\n  },\n  {\n    link: '/approval',\n    title: 'Approval'\n  },\n  {\n    link: '/lifecycle',\n    title: 'Lifecycle',\n    isDisabled: state !== 'Completed'\n  }\n];\n\nconst OrderDetailMenu = ({ baseUrl, isFetching }) => {\n  const orderDetailData = useSelector(\n    ({ orderReducer: { orderDetail } }) => orderDetail || {}\n  );\n  const { order } = orderDetailData;\n  const navItems = useNavItems(order);\n  return (\n    <Nav>\n      <NavList className=\"orders-side-nav-list\">\n        <li className=\"pf-c-nav__item orders-nav-section-group\">\n          <TextContent>\n            <Text component={TextVariants.small}>Order steps</Text>\n          </TextContent>\n        </li>\n        {navItems.map(({ link, title, isDisabled }) => (\n          <li\n            key={link || title}\n            className={`pf-c-nav__item orders-side-nav-item orders-side-nav-category${\n              isDisabled || isFetching ? ' disabled' : ''\n            }`}\n            {...(isDisabled ? { tabIndex: -1 } : {})}\n          >\n            <CatalogLink\n              exact\n              nav\n              isDisabled={isDisabled}\n              pathname={`${baseUrl}${link}`}\n              preserveSearch\n              className=\"pf-c-nav__link orders-side-nav-link\"\n              activeClassName=\"pf-m-active\"\n              {...(isDisabled ? { tabIndex: -1 } : {})}\n            >\n              {title}\n            </CatalogLink>\n          </li>\n        ))}\n      </NavList>\n    </Nav>\n  );\n};\n\nOrderDetailMenu.propTypes = {\n  baseUrl: PropTypes.string.isRequired,\n  isFetching: PropTypes.bool\n};\n\nexport default OrderDetailMenu;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  TextContent,\n  Text,\n  TextVariants,\n  TextList,\n  TextListVariants,\n  TextListItem,\n  TextListItemVariants\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\n\nimport ReactJsonView from 'react-json-view';\n\nconst OrderDetails = () => {\n  const {\n    order,\n    platform,\n    progressMessages,\n    portfolio,\n    orderItem\n  } = useSelector(({ orderReducer: { orderDetail } }) => orderDetail);\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.h2}>Order details</Text>\n      <TextList component={TextListVariants.dl}>\n        <TextListItem component={TextListItemVariants.dt}>\n          Order ID\n        </TextListItem>\n        <TextListItem component={TextListItemVariants.dd}>\n          {order.id}\n        </TextListItem>\n        <TextListItem component={TextListItemVariants.dt}>Ordered</TextListItem>\n        <TextListItem component={TextListItemVariants.dd}>\n          <DateFormat date={order.created_at} variant=\"relative\" />\n        </TextListItem>\n        <TextListItem component={TextListItemVariants.dt}>\n          Portfolio\n        </TextListItem>\n        <TextListItem component={TextListItemVariants.dd}>\n          {portfolio.name}\n        </TextListItem>\n        <TextListItem component={TextListItemVariants.dt}>\n          Platform\n        </TextListItem>\n        <TextListItem component={TextListItemVariants.dd}>\n          {platform.name}\n        </TextListItem>\n      </TextList>\n      <hr className=\"pf-c-divider\" />\n      <Text component={TextVariants.h2}>Order parameters</Text>\n      <ReactJsonView src={orderItem.service_parameters} />\n      <Text component={TextVariants.h2}>Progress messages</Text>\n      <ReactJsonView src={progressMessages.data} />\n    </TextContent>\n  );\n};\n\nexport default OrderDetails;\n","import React, { Fragment, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Bullseye,\n  Flex,\n  Spinner,\n  TextContent,\n  Text,\n  TextVariants,\n  TextList,\n  TextListVariants,\n  TextListItem,\n  TextListItemVariants,\n  Title\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport InfoIcon from '@patternfly/react-icons/dist/js/icons/info-icon';\nimport { fetchApprovalRequests } from '../../../redux/actions/order-actions';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst checkRequest = async (fetchRequests) => {\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const result = await fetchRequests();\n    if (result.data.length > 0) {\n      return 'Finished';\n    }\n\n    await delay(3000);\n  }\n};\n\nconst ApprovalRequests = () => {\n  const dispatch = useDispatch();\n  const { order, approvalRequest, orderItem } = useSelector(\n    ({ orderReducer: { orderDetail } }) => orderDetail\n  );\n\n  useEffect(() => {\n    if (order.state !== 'Failed' && approvalRequest.data.length === 0) {\n      checkRequest(() => dispatch(fetchApprovalRequests(orderItem.id)));\n    }\n  }, []);\n\n  if (order.state === 'Failed' && approvalRequest.data.length === 0) {\n    return (\n      <Bullseye>\n        <Flex breakpointMods={[{ modifier: 'column' }, { modifier: 'grow' }]}>\n          <Bullseye>\n            <InfoIcon size=\"xl\" />\n          </Bullseye>\n          <Bullseye>\n            <Title>\n              We were unable to find any approval requests for this order.\n            </Title>\n          </Bullseye>\n        </Flex>\n      </Bullseye>\n    );\n  }\n\n  return (\n    <TextContent>\n      {approvalRequest.data.length === 0 ? (\n        <Bullseye>\n          <Flex breakpointMods={[{ modifier: 'column' }, { modifier: 'grow' }]}>\n            <Bullseye>\n              <Title>Creating approval request</Title>\n            </Bullseye>\n            <Bullseye>\n              <Spinner size=\"xl\" />\n            </Bullseye>\n          </Flex>\n        </Bullseye>\n      ) : (\n        <Fragment>\n          <Text component={TextVariants.h2}>Approval requests</Text>\n          {approvalRequest.data.map((request) => (\n            <TextList key={request.id} component={TextListVariants.dl}>\n              <TextListItem component={TextListItemVariants.dt}>\n                Request ID\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`${document.baseURI}ansible/catalog/approval/requests/detail/${request.approval_request_ref}`}\n                >\n                  {request.approval_request_ref}\n                </a>\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                Request created\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                <DateFormat date={order.created_at} variant=\"relative\" />\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                State\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                {request.state}\n              </TextListItem>\n              {request.reason && (\n                <Fragment>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Approval reason\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {request.reason}\n                  </TextListItem>\n                </Fragment>\n              )}\n              {request.request_completed_at && (\n                <Fragment>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Completed at\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    <DateFormat\n                      date={request.request_completed_at}\n                      variant=\"relative\"\n                    />\n                  </TextListItem>\n                </Fragment>\n              )}\n            </TextList>\n          ))}\n        </Fragment>\n      )}\n    </TextContent>\n  );\n};\n\nexport default ApprovalRequests;\n","import React from 'react';\nimport { Redirect, useRouteMatch } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ExternalLinkAlt from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\n\nimport useQuery from '../../../utilities/use-query';\nimport { ORDER_ROUTE } from '../../../constants/routes';\n\nconst OrderLifecycle = () => {\n  const [, search] = useQuery([]);\n  const { url } = useRouteMatch(ORDER_ROUTE);\n  const orderDetailData = useSelector(\n    ({ orderReducer: { orderDetail } }) => orderDetail || {}\n  );\n  const { order, orderItem } = orderDetailData;\n  if (order.state !== 'Completed') {\n    return (\n      <Redirect\n        to={{\n          pathname: url,\n          search\n        }}\n      />\n    );\n  }\n\n  return (\n    <div>\n      <a\n        href={orderItem.external_url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Manage product&nbsp;\n        <ExternalLinkAlt />\n      </a>\n    </div>\n  );\n};\n\nexport default OrderLifecycle;\n","import { Stack, StackItem } from '@patternfly/react-core';\nimport styled from 'styled-components';\n\nexport const OrderDetailStack = styled(Stack)`\n  background-color: var(--pf-global--Color--light-100);\n`;\n\nexport const OrderDetailStackItem = styled(StackItem)`\n  border-bottom: 2px solid var(--pf-global--Color--light-200);\n`;\n","import styled from 'styled-components';\n\nconst UnAvailableAlertContainer = styled.div`\n  width: 100%;\n  > *:not(:last-child) {\n    margin-bottom: 4px;\n    width: 100%;\n  }\n`;\n\nexport default UnAvailableAlertContainer;\n","import React, { useEffect, useState, Fragment } from 'react';\nimport { Route, Switch, useRouteMatch, Redirect } from 'react-router-dom';\nimport {\n  StackItem,\n  Level,\n  LevelItem,\n  Split,\n  SplitItem,\n  Bullseye,\n  Alert\n} from '@patternfly/react-core';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchOrderDetails } from '../../../redux/actions/order-actions';\nimport OrderDetailTitle from './order-detail-title';\nimport OrderToolbarActions from './order-toolbar-actions';\nimport OrderDetailInformation from './order-detail-information';\nimport OrderDetailMenu from './order-detail-menu';\nimport OrderDetails from './order-details';\nimport ApprovalRequests from './approval-request';\nimport { OrderDetailToolbarPlaceholder } from '../../../presentational-components/shared/loader-placeholders';\nimport useQuery from '../../../utilities/use-query';\nimport OrderLifecycle from './order-lifecycle';\nimport CatalogBreadcrumbs from '../../common/catalog-breadcrumbs';\nimport useBreadcrumbs from '../../../utilities/use-breadcrumbs';\nimport { fetchPlatforms } from '../../../redux/actions/platform-actions';\nimport { ORDER_ROUTE, ORDERS_ROUTE } from '../../../constants/routes';\nimport {\n  OrderDetailStack,\n  OrderDetailStackItem\n} from '../../../presentational-components/styled-components/orders';\nimport UnAvailableAlertContainer from '../../../presentational-components/styled-components/unavailable-alert-container';\n\nconst requiredParams = [\n  'order-item',\n  'portfolio-item',\n  'platform',\n  'portfolio',\n  'order'\n];\n\nconst OrderDetail = () => {\n  const [isFetching, setIsFetching] = useState(true);\n  const [queryValues] = useQuery(requiredParams);\n  const orderDetailData = useSelector(\n    ({ orderReducer: { orderDetail } }) => orderDetail || {}\n  );\n  const match = useRouteMatch(ORDER_ROUTE);\n  const dispatch = useDispatch();\n\n  const resetBreadcrumbs = useBreadcrumbs([orderDetailData]);\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'orders', secondaryNav: true });\n    setIsFetching(true);\n    Promise.all([\n      dispatch(fetchPlatforms()),\n      dispatch(fetchOrderDetails(queryValues))\n    ]).then(() => setIsFetching(false));\n    return () => resetBreadcrumbs();\n  }, []);\n\n  if (!isFetching && Object.keys(orderDetailData).length === 0) {\n    return <Redirect to={ORDERS_ROUTE} />;\n  }\n\n  const {\n    order,\n    portfolioItem,\n    platform,\n    orderItem,\n    portfolio\n  } = orderDetailData;\n\n  const unAvailable = [portfolioItem, platform, portfolio]\n    .filter(({ notFound }) => notFound)\n    .map(({ object }) => (\n      <Alert\n        key={object}\n        variant=\"warning\"\n        isInline\n        title={`The ${object} for this order is not available`}\n      />\n    ));\n\n  return (\n    <OrderDetailStack className=\"bg-fill\">\n      <OrderDetailStackItem className=\"pf-u-p-lg\">\n        {isFetching ? (\n          <OrderDetailToolbarPlaceholder />\n        ) : (\n          <Fragment>\n            <Level className=\"pf-u-mb-md\">\n              <CatalogBreadcrumbs />\n            </Level>\n            <Level>\n              {unAvailable.length > 0 ? (\n                <UnAvailableAlertContainer>\n                  {unAvailable}\n                </UnAvailableAlertContainer>\n              ) : (\n                <Fragment>\n                  <LevelItem>\n                    <OrderDetailTitle\n                      portfolioItemName={portfolioItem.name}\n                      orderId={order.id}\n                    />\n                  </LevelItem>\n                  <LevelItem>\n                    <OrderToolbarActions\n                      portfolioItemName={portfolioItem.name}\n                      orderId={order.id}\n                      state={order.state}\n                    />\n                  </LevelItem>\n                </Fragment>\n              )}\n            </Level>\n            {unAvailable.length === 0 && (\n              <Level>\n                <OrderDetailInformation\n                  portfolioItemId={portfolioItem.id}\n                  sourceId={platform.id}\n                  state={order.state}\n                  jobName={portfolioItem.name}\n                  orderRequestDate={order.created_at}\n                  orderUpdateDate={orderItem.updated_at}\n                  owner={order.owner}\n                />\n              </Level>\n            )}\n          </Fragment>\n        )}\n      </OrderDetailStackItem>\n      <StackItem className=\"pf-u-pt-xl\">\n        <Split gutter=\"md\" className=\"orders-nav-layout\">\n          <SplitItem className=\"order-detail-nav-cotainer\">\n            <OrderDetailMenu isFetching={isFetching} baseUrl={match.url} />\n          </SplitItem>\n          <SplitItem className=\"order-detail-content-cotainer\">\n            {isFetching ? (\n              <Bullseye>\n                <Spinner />\n              </Bullseye>\n            ) : (\n              <Switch>\n                <Route\n                  path={`${match.url}/approval`}\n                  component={ApprovalRequests}\n                />\n                <Route path={`${match.url}/lifecycle`}>\n                  <OrderLifecycle />\n                </Route>\n                <Route path={match.url} component={OrderDetails} />\n              </Switch>\n            )}\n          </SplitItem>\n        </Split>\n      </StackItem>\n    </OrderDetailStack>\n  );\n};\n\nexport default OrderDetail;\n"],"sourceRoot":""}