{"version":3,"sources":["webpack:///./src/utilities/use-query.js","webpack:///./src/utilities/async-form-validator.js","webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/toolbar/toolbar-mapper.js","webpack:///./src/utilities/use-enhanced-history.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/redux/actions/portfolio-actions.js","webpack:///./src/helpers/platform/platform-helper.js","webpack:///./src/redux/actions/platform-actions.js","webpack:///./src/presentational-components/shared/conditional-link.js","webpack:///./src/presentational-components/styled-components/toolbars.js","webpack:///./src/presentational-components/styled-components/lazy-load-image.js","webpack:///./src/presentational-components/shared/card-icon.js","webpack:///./src/smart-components/common/catalog-breadcrumbs.js","webpack:///./src/toolbar/toolbar-renderer.js","webpack:///./src/presentational-components/shared/pf4-select-wrapper.js","webpack:///./src/forms/form-fields/share-group-select.js","webpack:///./src/forms/form-fields/shage-group-edit.js","webpack:///./src/smart-components/common/form-renderer.js","webpack:///./src/helpers/portfolio/portfolio-helper.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/presentational-components/shared/app-tabs.js","webpack:///./src/presentational-components/styled-components/ellipsis-text-container.js","webpack:///./src/presentational-components/shared/content-gallery-empty-state.js","webpack:///./src/assets/images/card-icon-default.svg","webpack:///./src/presentational-components/styled-components/styled-gallery.js","webpack:///./src/smart-components/content-gallery/content-gallery.js","webpack:///./src/presentational-components/shared/card-common.js","webpack:///./src/presentational-components/styled-components/card.js","webpack:///./src/helpers/order/order-helper.js","webpack:///./src/presentational-components/order/order-notification.js","webpack:///./src/redux/actions/order-actions.js","webpack:///./src/presentational-components/shared/card-checkbox.js","webpack:///./src/presentational-components/shared/service-offering-body.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/forms/edit-workflow_form.schema.js","webpack:///./src/helpers/approval/approval-helper.js","webpack:///./src/smart-components/common/edit-approval-workflow.js","webpack:///./src/redux/actions/approval-actions.js","webpack:///./src/toolbar/helpers.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/wrench-icon.js","webpack:///./src/helpers/shared/breadcrumbs-creators.js","webpack:///./src/redux/actions/breadcrumbs-actions.js","webpack:///./src/utilities/use-breadcrumbs.js","webpack:///./src/presentational-components/styled-components/spinner-wrapper.js","webpack:///./src/smart-components/portfolio/portfolio-item.js","webpack:///./src/presentational-components/platform/platform-item.js","webpack:///./src/presentational-components/styled-components/level.js","webpack:///./src/smart-components/portfolio/remove-portfolio-modal.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/warning-triangle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/filter-icon.js","webpack:///./src/presentational-components/shared/button-with-spinner.js","webpack:///./src/forms/portfolio-share-form.schema.js","webpack:///./src/helpers/share/share-helper.js","webpack:///./src/redux/actions/share-actions.js","webpack:///./src/helpers/rbac/rbac-helper.js","webpack:///./src/smart-components/portfolio/share-portfolio-modal.js","webpack:///./src/forms/portfolio-form.schema.js","webpack:///./src/smart-components/portfolio/add-portfolio-modal.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/detail-toolbar-actions.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/icon-upload.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/portfolio-item-detail-toolbar.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/edit-icon.js","webpack:///./src/toolbar/schemas/portfolio-toolbar.schema.js","webpack:///./src/smart-components/common/order-modal.js","webpack:///./src/smart-components/portfolio/portfolio-empty-state.js","webpack:///./src/smart-components/portfolio/portfolio-items.js","webpack:///./src/smart-components/portfolio/add-products-to-portfolio/add-products-gallery.js","webpack:///./src/presentational-components/shared/filter-select.js","webpack:///./src/toolbar/schemas/add-products-toolbar.schema.js","webpack:///./src/smart-components/portfolio/add-products-to-portfolio/index.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/item-detail-info-bar.js","webpack:///./src/forms/edit-portfolio-item-form.schema.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/edit-portfolio-item.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/item-detail-description.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/copy-portfolio-item-modal.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/portfolio-item-detail.js","webpack:///./src/smart-components/portfolio/portfolio.js","webpack:///./src/helpers/shared/redux-mutators.js"],"names":["useQuery","requiredParams","useLocation","search","query","URLSearchParams","reduce","acc","curr","get","asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","FilterInputGroup","styled","div","FilterInput","TextInput","FilterIconsContainer","span","StyledCloseIcon","CloseIcon","StyledSearchIcon","SearchIcon","FilterToolbarItem","searchValue","onFilterChange","placeholder","isClearable","ToolbarItem","value","type","onChange","aria-label","width","height","onClick","propTypes","PropTypes","func","isRequired","string","bool","defaultProps","ToolbarButton","title","props","Button","toolbarMapper","TopToolbar","TopToolbarTitle","Toolbar","className","ToolbarGroup","Link","CatalogLink","Level","LevelItem","AppTabs","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","TOOLBAR","TOOLBAR_ITEM","TOOLBAR_GROUP","FILTER_TOOLBAR_ITEM","LINK","BUTTON","LEVEL","LEVEL_ITEM","TABS","useEnhancedHistory","removeSearch","history","useHistory","push","target","split","undefined","removeSearchQuery","AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","isCompact","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","getNewPage","request","debouncePromise","direction","shape","any","doFetchPortfolios","defaultSettings","filter","ActionTypes","payload","PortfolioHelper","fetchPortfolios","args","dispatch","fetchPortfolioItems","fetchPortfolioItemsWithPortfolio","portfolioId","fetchSelectedPortfolio","id","addPortfolio","portfolioData","items","isDisabled","isTemporary","then","error","notifications","fulfilled","variant","description","name","addToPortfolio","updatePortfolio","getState","ADD_NOTIFICATION","dismissable","removePortfolio","removeProductsFromPortfolio","portfolioItems","portfolioName","portfolioReducer","selectedPortfolio","data","defaultMessage","values","length","undo","href","event","preventDefault","restoreData","CLEAR_NOTIFICATIONS","err","undoRemoveProductsFromPortfolio","copyPortfolio","portfolio","copyPortfolioItem","portfolioItemId","copyObject","newPortfolio","resetSelectedPortfolio","updatePortfolioItem","item","getPortfolioItemDetail","params","portfolioItem","source","axiosInstance","getAxiosInstance","graphqlInstance","getGraphqlInstance","getPlatforms","post","SOURCES_API_BASE","application_types","sources","getPlatform","platformId","getPlatformItems","filterQuery","TOPOLOGICAL_INVENTORY_API_BASE","getPlatformInventories","getServiceOffering","serviceOfferingId","sourceId","Promise","all","source_type_id","icon_url","service","fetchPlatforms","PlatformHelper","fetchPlatformItems","fetchSelectedPlatform","fetchPlatformInventories","fetchServiceOffering","ConditionalLink","children","pathname","oneOfType","node","arrayOf","StyledToolbar","TopToolbarWrapper","TopToolbarTitleContainer","StyledLazyLoadImage","LazyLoadImage","hidden","CardIconContainer","CardIcon","src","useState","isLoaded","setLoaded","isUnknown","setUnknown","platformIconMapping","useSelector","platformReducer","defaultIcon","CardIconDefault","threshold","delayTime","onError","onLoad","style","object","CatalogBreadcrumbs","fragments","breadcrumbsReducer","map","index","searchParams","nav","exact","key","isActive","ToolbarContext","createContext","Component","component","Consumer","componentMapper","C","element","render","fields","field","ToolbarRenderer","schema","Provider","array","createOptions","inputValue","selectOptions","find","label","Select","input","isReadOnly","FieldProvider","change","formOptions","multi","rest","hideSelectedOptions","menuIsPortal","isMulti","closeMenuOnSelect","isSearchable","Pf4SelectWrapper","componentType","helperText","hideLabel","dataType","initialKey","initialValue","showError","touched","FormGroup","fieldId","isValid","helperTextInvalid","TextContent","Text","TextVariants","small","ShareGroupSelect","inputName","selectName","loadOptions","permissions","Grid","gutter","GridItem","asyncFormValidator","ShareGroupEdit","h4","FormContext","FormButton","formContainer","useContext","FormRenderer","formFieldsMapper","componentTypes","SELECT","layoutMapper","layoutComponents","oneOf","portfolioApi","getPortfolioApi","portfolioItemApi","getPortfolioItemApi","listPortfolios","CATALOG_API_BASE","listPortfolioItems","portfolioReference","portfolio_id","Object","keys","join","portfolios","forEach","portfolioItemIndex","getPortfolioItem","getPortfolio","showPortfolio","getPortfolioItemsWithPortfolio","a","async","createPortfolio","createPortfolioItem","service_offering_ref","store","sanitizeValues","destroyPortfolio","removePortfolioItem","destroyPortfolioItem","removePortfolioItems","portfolioItemIds","itemId","restore_key","restoreKey","fetchPortfolioByName","restorePortfolioItems","unDeletePortfolioItem","postCopyPortfolio","postCopyPortfolioItem","uploadPortfolioItemIcon","file","iconId","FormData","append","patch","headers","accept","_boundary","status","notFound","getPortfolioFromState","paddingBottom","breadcrumbs","breadcrumbsSpacing","noData","clsx","h2","p","tabItems","activeTab","includes","activeKey","eventKey","onSelect","tabIndex","EllipsisTextContainer","ContentGalleryEmptyState","Icon","PrimaryAction","renderDescription","icon","h1","EmptyStatePrimaryAction","url","hasPermission","preserveSearch","module","exports","StyledCard","Card","StyledGalleryItem","GalleryItem","NoItems","ContentGallery","isLoading","renderEmptyState","CardPropText","ItemDetails","toDisplay","prop","StyledCardBody","CardBody","orderApi","getOrderApi","getOrderItemApi","getRequestsApi","getServicePlans","listServicePlans","getOrderItems","orderIds","orderId","getOrderPortfolioItems","itemIds","OrderNotification","clearNotifications","to","ORDERS_ROUTE","fetchServicePlans","OrderHelper","sendSubmitOrder","service_parameters","providerControlParameters","parameters","createOrder","order","orderItem","provider_control_parameters","addToOrder","submitOrder","addNotification","cancelOrder","orderDetail","orderReducer","state","approvalRequest","fetchOrders","filters","pagination","queryFilter","entries","Array","isArray","orders","orderItems","portfolio_item_id","order_id","fetchOrderDetails","platform","progressMessages","fetchApprovalRequests","orderItemId","CardCheckbox","handleCheck","isChecked","stopPropagation","ServiceOfferingCardBody","distributor","display_name","h3","long_description","BottomPaginationContainer","editWorkflowSchema","loadWorkflows","loadWorkflowOptions","filterValue","APPROVAL_API_BASE","updateWorkflows","unlinkIds","linkIds","resourceObject","unlinkPromises","wf","getWorkflowApi","unlinkWorkflow","linkPromises","linkWorkflow","listWorkflowsForObject","objectQuery","appName","objectType","objectId","paginationQuery","initialState","isFetching","approvalState","action","EditApprovalWorkflow","removeQuery","querySelector","pushParam","objectName","useReducer","stateDispatch","approvalReducer","resolvedWorkflows","useDispatch","useEffect","ASYNC_ACTIONS","RESOLVE_WORKFLOWS","ApprovalHelper","APP_NAME","Modal","isOpen","onClose","isSmall","initialValues","selectedWorkflows","onSubmit","formData","formApi","initialWorkflows","newWorkflows","toUnlinkIds","toLinkIds","toUnlinkWorkflows","findIndex","w","toLinkWorkflows","object_type","app_name","object_id","UPDATE_WORKFLOWS","onCancel","editApprovalWorkflowSchema","buttonsLabels","submitLabel","createSingleItemGroup","groupName","createLinkButton","defineProperty","WrenchIconConfig","obj","_createIcon","__esModule","svgPath","yOffset","xOffset","transform","_default","ENTITIES_EXTRA_PARAMS","PORTFOLIOS_ROUTE","FRAGMENT_TITLE","PORTFOLIO_ROUTE","PORTFOLIO_ITEM_ROUTE","EDIT_SURVEY_ROUTE","ADD_PRODUCTS_ROUTE","PLATFORM_ROUTE","selectedPlatform","PLATFORM_SERVICE_OFFERINGS_ROUTE","serviceOffering","ORDER_ROUTE","FRAGMENT_PREFIX","PLATFORMS_ROUTE","createBreadcrumbsFromLocations","INITIALIZE_BREADCRUMBS","result","replace","generateTitle","useBreadcrumbs","updateTriggers","searchObject","SpinnerWrapper","Bullseye","PortfolioItem","removeInProgress","isSelected","service_offering_source_ref","isSelectable","orderUrl","PlatformItem","source_id","editMode","checked","onToggleItemSelect","service_offering_icon_id","StyledLevelItem","alignEnd","RemovePortfolioModal","goBack","isFooterLeftAligned","actions","size","fill","WarningTriangleIconConfig","FilterIconConfig","SpinnerButton","SpinnerLabel","showSpinner","ButtonWithSpinner","createPortfolioShareSchema","shareInfo","loadGroupOptions","permissionVerbs","groupFieldList","formSchema","newShareSchema","groupInfoFields","group","groupShareInfo","group_name","groupShareSchema","shareListSchema","userApi","getShareInfo","sharePortfolio","policy","group_uuids","group_uuid","unsharePortfolio","getRbacGroupApi","SharePortfolioModal","closeUrl","setFetching","shareReducer","ShareHelper","RBAC_API_BASE","uuid","fetchFilterGroups","permissionOptions","schemaType","sharePromises","share","initialPerm","sort","sharePermissions","permission","permissionValues","indexOf","groupPermissions","perm","debouncedValidator","trim","createPortfolioSchema","newRecord","TEXT_FIELD","validate","TEXTAREA","AddPortfolioModal","closeTarget","editVariant","Spinner","DetailToolbarActions","copyUrl","editUrl","workflowUrl","editSurveyUrl","setOpen","availability","marginLeft","Dropdown","isPlain","onToggle","position","DropdownPosition","right","toggle","KebabToggle","dropdownItems","DropdownItem","role","UploadButton","button","UploadIconWrapper","ImagePreview","img","IconUpload","uploadIcon","inputRef","useRef","image","setImage","isUploading","setIsUploading","files","errors","detail","ref","disabled","current","click","URL","createObjectURL","PortfolioItemIconItem","PortfolioItemDetailToolbar","product","minHeight","path","open","SurveyEditorDropdown","handleResetSurvey","setIsOpen","SurveyEditingToolbar","handleSaveSurvey","modified","Flex","EditIconConfig","PortfolioActionsToolbar","editPortfolioRoute","workflowPortfolioRoute","removePortfolioRoute","copyInProgress","PortfolioItemsActionsDropdown","removeProducts","itemsSelected","createPortfolioToolbarSchema","addProductsRoute","sharePortfolioRoute","filterProps","OrderModal","servicePlans","hideTitle","Split","SplitItem","isFilled","Title","headingLevel","create_json_schema","orderData","PortfolioEmptyState","handleFilterChange","emptyStateProps","WrenchIcon","PortfolioItems","routes","isFiltering","selectedItems","useRouteMatch","selectedItem","itemName","NESTED_EDIT_PORTFOLIO_ROUTE","NESTED_REMOVE_PORTFOLIO_ROUTE","NESTED_SHARE_PORTFOLIO_ROUTE","portfolioRoute","NESTED_WORKFLOW_PORTFOLIO_ROUTE","PORTFOLIO_RESOURCE_TYPE","NESTED_ORDER_PORTFOLIO_ROUTE","dropDirection","EmptyState","AddProductsGallery","checkedItems","ValueContainer","FilterSelect","components","simpleValue","createAddProductsSchema","onOptionSelect","onClickAddToPortfolio","renderGalleryItems","checkItem","filterServiceOffering","AddProductsToPortfolio","setSelectedPlatform","setCheckedItems","platforms","platformItems","isPlatformDataLoading","Section","slice","ItemDetailInfoBar","h6","DateFormat","date","created_at","updated_at","editPortfolioItemSchema","validatorTypes","REQUIRED","EditPortfolioItem","cancelUrl","owner","canReset","ItemDetailDescription","support_url","rel","documentation_url","PORTFOLIO_ITEM_RESOURCE_TYPE","loadPortfolios","copySchema","portfolioChange","nameFetching","ValueOnly","CopyPortfolioItemModal","submitting","setSubmitting","setName","setNameFetching","getPortfolioItemNextName","next_name","portfolio_item_name","disableSubmit","SurveyEditor","lazy","PortfolioItemDetail","setIsFetching","queryValues","availability_status","unavailable","Alert","isInline","fallback","md","debouncedFilter","filteringCallback","porftolioUiReducer","selectItem","setRemoveInProgress","removeSucessfull","setFilterValue","setCopyInProgress","setFilteringFlag","Portfolio","resetBreadcrumbs","insights","chrome","appNavClick","secondaryNav","scrollToTop","portfolioItemRoute","portfolioLoaded","products"],"mappings":"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","file":"js/portfolio.js","sourcesContent":["import { useLocation } from 'react-router-dom';\n\nconst useQuery = (requiredParams = []) => {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search);\n  return [\n    requiredParams.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: query.get(curr)\n      }),\n      {}\n    ),\n    search,\n    query\n  ];\n};\n\nexport default useQuery;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterInputGroup = styled.div`\n  position: relative;\n  width: 300px;\n  height: 36px;\n`;\n\nconst FilterInput = styled(TextInput)`\n  position: absolute;\n  width: 300px;\n  background: transparent;\n`;\n\nconst FilterIconsContainer = styled.span`\n  position: absolute;\n  right: 8px;\n  top: 8px;\n`;\n\nconst StyledCloseIcon = styled(CloseIcon)`\n  z-index: 1000;\n  fill: #72767b;\n  :hover {\n    fill: var(--pf-global--Color--100);\n    cursor: pointer;\n  }\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  z-index: 1000;\n  fill: #72767b;\n`;\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable\n}) => (\n  <ToolbarItem>\n    <FilterInputGroup>\n      <FilterInput\n        placeholder={placeholder}\n        value={searchValue}\n        type=\"text\"\n        onChange={onFilterChange}\n        aria-label={placeholder}\n      />\n      <FilterIconsContainer>\n        {(isClearable && searchValue && (\n          <StyledCloseIcon\n            width=\"16\"\n            height=\"16\"\n            onClick={() => onFilterChange('')}\n          />\n        )) || <StyledSearchIcon />}\n      </FilterIconsContainer>\n    </FilterInputGroup>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Level,\n  LevelItem,\n  ToolbarItem,\n  ToolbarGroup\n} from '@patternfly/react-core';\n\nimport FilterToolbarItem from '../presentational-components/shared/filter-toolbar-item';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../presentational-components/shared/top-toolbar';\nimport AppTabs from '../presentational-components/shared/app-tabs';\nimport CatalogLink from '../smart-components/common/catalog-link';\nimport { StyledToolbar } from '../presentational-components/styled-components/toolbars';\n\nconst ToolbarButton = ({ title, ...props }) => (\n  <Button {...props}>{title}</Button>\n);\n\nToolbarButton.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst AppToolbar = ({ ...props }) => (\n  <StyledToolbar className=\"pf-u-pr-lg\" {...props} />\n);\n\nconst toolbarMapper = {\n  TopToolbar,\n  TopToolbarTitle,\n  Toolbar: AppToolbar,\n  ToolbarGroup,\n  ToolbarItem,\n  FilterToolbarItem,\n  Link: CatalogLink,\n  Level,\n  LevelItem,\n  Button: ToolbarButton,\n  AppTabs\n};\n\nexport const toolbarComponentTypes = {\n  TOP_TOOLBAR: 'TopToolbar',\n  TOP_TOOLBAR_TITLE: 'TopToolbarTitle',\n  TOOLBAR: 'Toolbar',\n  TOOLBAR_ITEM: 'ToolbarItem',\n  TOOLBAR_GROUP: 'ToolbarGroup',\n  FILTER_TOOLBAR_ITEM: 'FilterToolbarItem',\n  LINK: 'Link',\n  BUTTON: 'Button',\n  LEVEL: 'Level',\n  LEVEL_ITEM: 'LevelItem',\n  TABS: 'AppTabs'\n};\n\nexport default toolbarMapper;\n","import { useHistory } from 'react-router-dom';\n\nconst removeSearchQuery = (target) => {\n  if (typeof target === 'string') {\n    return target.split('?')[0];\n  }\n\n  if (typeof target === 'object') {\n    return {\n      ...target,\n      search: undefined\n    };\n  }\n\n  return target;\n};\n\n/**\n * Wrapper around useHistory hook which adds aditional settings to standard history methods\n * @param {Boolean} removeSearch if true, using history navigation methods will remove search string from path\n */\nconst useEnhancedHistory = (removeSearch) => {\n  const history = useHistory();\n  return {\n    ...history,\n    push: (target) => {\n      if (removeSearch) {\n        return history.push(removeSearchQuery(target));\n      }\n\n      return history.push(target);\n    }\n  };\n};\n\nexport default useEnhancedHistory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  ADD_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport * as ActionTypes from '../action-types';\nimport * as PortfolioHelper from '../../helpers/portfolio/portfolio-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const doFetchPortfolios = ({\n  filter,\n  ...options\n} = defaultSettings) => ({\n  type: ActionTypes.FETCH_PORTFOLIOS,\n  meta: { filter },\n  payload: PortfolioHelper.listPortfolios(filter, options)\n});\n\nexport const fetchPortfolios = (...args) => (dispatch) => {\n  return dispatch(doFetchPortfolios(...args));\n};\n\nexport const fetchPortfolioItems = (\n  filter = '',\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS,\n  meta: { filter },\n  payload: PortfolioHelper.listPortfolioItems(\n    options.limit,\n    options.offset,\n    filter\n  )\n});\n\nexport const fetchPortfolioItem = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEM,\n  payload: PortfolioHelper.getPortfolioItem(portfolioItemId)\n});\n\nexport const fetchPortfolioItemsWithPortfolio = (\n  portfolioId,\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO,\n  meta: { filter: options.filter },\n  payload: PortfolioHelper.getPortfolioItemsWithPortfolio(portfolioId, options)\n});\n\nexport const fetchSelectedPortfolio = (id) => ({\n  type: ActionTypes.FETCH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolio(id)\n});\n\nexport const searchPortfolioItems = (value) => ({\n  type: ActionTypes.FILTER_PORTFOLIO_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const addPortfolio = (portfolioData, items) => (dispatch) => {\n  dispatch({\n    type: ActionTypes.ADD_TEMPORARY_PORTFOLIO,\n    payload: { ...portfolioData, isDisabled: true, isTemporary: true }\n  });\n  return dispatch({\n    type: ActionTypes.ADD_PORTFOLIO,\n    payload: PortfolioHelper.addPortfolio(\n      {\n        ...portfolioData\n      },\n      items\n    )\n      .then(() => dispatch(doFetchPortfolios()))\n      .catch((error) => {\n        dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n        throw error;\n      }),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: 'Success adding portfolio',\n          description: `Portfolio ${portfolioData.name} was added successfully.`\n        }\n      }\n    }\n  });\n};\n\nexport const addToPortfolio = (portfolioId, items) => ({\n  type: ActionTypes.ADD_TO_PORTFOLIO,\n  payload: PortfolioHelper.addToPortfolio(portfolioId, items),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding products',\n        description: 'Products were successfully added to portfolio.'\n      }\n    }\n  }\n});\n\nexport const updatePortfolio = (portfolioData) => (dispatch, getState) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO,\n    payload: portfolioData\n  });\n\n  return PortfolioHelper.updatePortfolio(portfolioData, { getState })\n    .then(() => dispatch(doFetchPortfolios()))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          dismissable: true,\n          variant: 'success',\n          title: 'Success updating portfolio',\n          description: 'The portfolio was updated successfully.'\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const removePortfolio = (portfolioId) => (dispatch) => {\n  dispatch({\n    type: ActionTypes.DELETE_TEMPORARY_PORTFOLIO,\n    payload: portfolioId\n  });\n  return dispatch({\n    type: ActionTypes.REMOVE_PORTFOLIO,\n    payload: PortfolioHelper.removePortfolio(portfolioId)\n      .then(() => dispatch(doFetchPortfolios()))\n      .catch((error) => {\n        dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n        throw error;\n      }),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: 'Success removing portfolio',\n          description: 'The portfolio was removed successfully.'\n        }\n      }\n    }\n  });\n};\n\nexport const selectPortfolioItem = (portfolioItem) => ({\n  type: ActionTypes.SELECT_PORTFOLIO_ITEM,\n  payload: portfolioItem\n});\n\nexport const undoRemoveProductsFromPortfolio = (restoreData, portfolioId) => (\n  dispatch\n) => {\n  dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_PENDING` });\n  return PortfolioHelper.restorePortfolioItems(restoreData)\n    .then(() =>\n      dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .then(() => dispatch({ type: CLEAR_NOTIFICATIONS }))\n    .then(() => dispatch(fetchPortfolioItemsWithPortfolio(portfolioId)))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: 'Products have been restored'\n        }\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const removeProductsFromPortfolio = (portfolioItems, portfolioName) => (\n  dispatch,\n  getState\n) => {\n  dispatch({\n    type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_PENDING`\n  });\n  const {\n    portfolioReducer: {\n      portfolioItems: { meta },\n      selectedPortfolio: { id: portfolioId }\n    }\n  } = getState();\n  return PortfolioHelper.removePortfolioItems(portfolioItems)\n    .then((data) =>\n      dispatch(\n        fetchPortfolioItemsWithPortfolio(portfolioId, {\n          offset: 0,\n          limit: meta.limit,\n          filter: ''\n        })\n      ).then(() => data)\n    )\n    .then((data) => {\n      return dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'Products removed',\n          dismissable: true,\n          description: (\n            <FormattedMessage\n              id=\"portfolio.remove-portfolio-items\"\n              defaultMessage={`You have removed {count, number} {count, plural,\n            one {product}\n            other {products}\n          } from the {portfolioName} portfolio. {undo} if this was a mistake.`}\n              values={{\n                count: portfolioItems.length,\n                portfolioName,\n                undo: (\n                  <a\n                    href=\"#\"\n                    onClick={(event) => {\n                      event.preventDefault();\n                      dispatch(\n                        undoRemoveProductsFromPortfolio(data, portfolioId)\n                      );\n                    }}\n                  >\n                    Undo\n                  </a>\n                )\n              }}\n            />\n          )\n        }\n      });\n    })\n    .then(() =>\n      dispatch({ type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const copyPortfolio = (id) => (dispatch) => {\n  dispatch({ type: 'COPY_PORTFOLIO_PENDING' });\n  return PortfolioHelper.copyPortfolio(id)\n    .then((portfolio) => {\n      dispatch({ type: 'COPY_PORTFOLIO_FULFILLED' });\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a portfolio',\n          description: `${portfolio.name} has been copied.`,\n          dismissable: true\n        }\n      });\n      return portfolio;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_REJECTED', payload: err })\n    );\n};\n\nexport const copyPortfolioItem = (\n  portfolioItemId,\n  copyObject,\n  newPortfolio\n) => (dispatch) => {\n  return PortfolioHelper.copyPortfolioItem(portfolioItemId, copyObject)\n    .then((data) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a product',\n          description: `${data.name} has been copied into ${newPortfolio.name}`,\n          dismissable: true\n        }\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_ITEM_REJECTED', payload: err })\n    );\n};\n\nexport const resetSelectedPortfolio = () => ({\n  type: ActionTypes.RESET_SELECTED_PORTFOLIO\n});\n\nexport const updatePortfolioItem = (values) => (dispatch, getState) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM,\n    payload: values\n  });\n  return PortfolioHelper.updatePortfolioItem(values, { getState })\n    .then(() => {\n      dispatch({ type: ActionTypes.UPDATE_PORTFOLIO_ITEM, payload: values });\n      return values;\n    })\n    .then((item) =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: `Portfolio item \"${item.name}\" was successfully updated`,\n          dismissable: true\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_ITEM_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const getPortfolioItemDetail = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_PENDING` });\n  return PortfolioHelper.getPortfolioItemDetail(params).then(\n    ([portfolioItem, portfolio, source]) =>\n      dispatch({\n        type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_FULFILLED`,\n        payload: {\n          portfolioItem,\n          portfolio,\n          source\n        }\n      })\n  );\n};\n","import { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport {\n  TOPOLOGICAL_INVENTORY_API_BASE,\n  SOURCES_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nexport const getPlatforms = () => {\n  return graphqlInstance\n    .post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n    .then(({ data: { application_types } }) => application_types)\n    .then(([{ sources }]) => sources);\n};\n\nexport const getPlatform = (platformId) => {\n  return axiosInstance.get(`${SOURCES_API_BASE}/sources/${platformId}`);\n};\n\nexport const getPlatformItems = (platformId, filter, options) => {\n  const filterQuery = filter ? `&filter[name][contains_i]=${filter}` : '';\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_offerings?filter[archived_at][nil]${filterQuery}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings`\n    );\n  }\n};\n\nexport const getPlatformInventories = (\n  platformId,\n  filter = '',\n  options = defaultSettings\n) => {\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_inventories?filter[name][contains_i]=${filter}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_inventories?limit=${options.limit}&offset=${options.offset}`\n    );\n  }\n};\n\nexport const getServiceOffering = (serviceOfferingId, sourceId) =>\n  Promise.all([\n    axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings/${serviceOfferingId}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${sourceId}`)\n      .then((source) => {\n        return axiosInstance\n          .get(`${SOURCES_API_BASE}/source_types/${source.source_type_id}`)\n          .then(({ icon_url }) => ({\n            ...source,\n            icon_url\n          }));\n      })\n  ]).then(([service, source]) => ({\n    service,\n    source\n  }));\n","import * as ActionTypes from '../action-types';\nimport * as PlatformHelper from '../../helpers/platform/platform-helper';\n\nconst doFetchPlatforms = () => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_PLATFORMS}_PENDING` });\n  return PlatformHelper.getPlatforms()\n    .then((data) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_FULFILLED`,\n        payload: data\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchPlatforms = () => (dispatch) => dispatch(doFetchPlatforms());\n\nexport const fetchPlatformItems = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_ITEMS,\n  payload: PlatformHelper.getPlatformItems(platformId, filter, options),\n  meta: {\n    platformId,\n    filter,\n    ...options\n  }\n});\n\nexport const fetchMultiplePlatformItems = (platformsId) => {\n  const platformPromisses = platformsId.map((platformId) =>\n    PlatformHelper.getPlatformItems(platformId).then((data) => ({\n      [platformId]: data\n    }))\n  );\n  return {\n    type: ActionTypes.FETCH_MULTIPLE_PLATFORM_ITEMS,\n    payload: Promise.all(platformPromisses).then((data) =>\n      data.reduce(\n        (acc, curr) => ({\n          ...acc,\n          ...curr\n        }),\n        {}\n      )\n    )\n  };\n};\n\nexport const fetchSelectedPlatform = (id) => ({\n  type: ActionTypes.FETCH_PLATFORM,\n  payload: PlatformHelper.getPlatform(id)\n});\n\nexport const searchPlatformItems = (value) => ({\n  type: ActionTypes.FILTER_PLATFORM_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const fetchPlatformInventories = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_INVENTORIES,\n  payload: PlatformHelper.getPlatformInventories(platformId, filter, options)\n});\n\nexport const fetchServiceOffering = (...args) => ({\n  type: ActionTypes.FETCH_SERVICE_OFFERING,\n  payload: PlatformHelper.getServiceOffering(...args)\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ConditionalLink = ({ children, pathname, ...props }) =>\n  pathname ? (\n    <CatalogLink pathname={pathname} {...props}>\n      {children}\n    </CatalogLink>\n  ) : (\n    children\n  );\n\nConditionalLink.propTypes = {\n  pathname: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]).isRequired\n};\n\nexport default ConditionalLink;\n","import styled from 'styled-components';\nimport { Toolbar, Level } from '@patternfly/react-core';\n\nexport const StyledToolbar = styled(Toolbar)`\n  background-color: #ffffff;\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  position: relative;\n  top: 1px;\n`;\n\nexport const TopToolbarWrapper = styled.div`\n  background-color: #ffffff;\n  .pf-c-breadcrumb__item {\n    .active {\n      color: var(--pf-c-breadcrumb__item--Color);\n      text-decoration: none;\n      pointer-events: none;\n    }\n  }\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  .top-toolbar-title {\n    min-width: 200px;\n  }\n  .top-toolbar-title-description {\n    word-break: break-word;\n  }\n`;\n\nexport const TopToolbarTitleContainer = styled(Level)`\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n  }\n`;\n","import styled from 'styled-components';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst StyledLazyLoadImage = styled(LazyLoadImage)`\n  height: ${({ height, hidden }) => (hidden ? '0px' : `${height}px` || '40px')};\n  display: ${({ hidden }) => (hidden ? 'none' : 'inherit')};\n  float: ${({ hidden }) => (hidden ? 'left' : 'inherit')};\n  width: ${({ hidden }) => (hidden ? 0 : 'inherit')};\n`;\n\nexport default StyledLazyLoadImage;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\n\nimport { IconPlaceholder } from './loader-placeholders';\nimport CardIconDefault from '../../assets/images/card-icon-default.svg';\nimport StyledLazyLoadImage from '../styled-components/lazy-load-image';\n\nconst CardIconContainer = styled.div`\n  display: inline-block;\n  height: ${({ height }) => `${height}px`};\n`;\n\nconst CardIcon = ({ src, height, sourceId }) => {\n  const [isLoaded, setLoaded] = useState(false);\n  const [isUnknown, setUnknown] = useState(false);\n  const platformIconMapping = useSelector(\n    ({ platformReducer: { platformIconMapping } }) => platformIconMapping\n  );\n  const defaultIcon = sourceId\n    ? platformIconMapping[sourceId]\n    : CardIconDefault;\n\n  return (\n    <CardIconContainer height={height}>\n      {!isLoaded && <IconPlaceholder height={height} />}\n      <StyledLazyLoadImage\n        threshold={2000}\n        delayTime={0}\n        hidden={!isLoaded}\n        height={isLoaded ? height : 0}\n        onError={() => setUnknown(true)}\n        onLoad={() => setLoaded(true)}\n        src={!src || isUnknown ? defaultIcon : src}\n      />\n    </CardIconContainer>\n  );\n};\n\nCardIcon.propTypes = {\n  src: PropTypes.string,\n  platformId: PropTypes.string,\n  style: PropTypes.object,\n  height: PropTypes.number,\n  sourceId: PropTypes.string\n};\n\nCardIcon.defaultProps = {\n  style: {},\n  height: 40\n};\n\nexport default CardIcon;\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport ConditionalLink from '../../presentational-components/shared/conditional-link';\n\nconst CatalogBreadcrumbs = () => {\n  const fragments = useSelector(\n    ({ breadcrumbsReducer: { fragments } }) => fragments\n  );\n  if (fragments.length <= 1) {\n    return null;\n  }\n\n  return (\n    <Breadcrumb>\n      {fragments.map(({ title, pathname, searchParams }, index) => (\n        <ConditionalLink\n          pathname={!(fragments.length === index + 1) ? pathname : undefined}\n          searchParams={searchParams}\n          nav\n          exact\n          key={pathname}\n          className=\"pf-c-breadcrumb__item\"\n        >\n          <BreadcrumbItem isActive={fragments.length === index + 1}>\n            {title}\n          </BreadcrumbItem>\n        </ConditionalLink>\n      ))}\n    </Breadcrumb>\n  );\n};\n\nexport default CatalogBreadcrumbs;\n","import React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport toolbarMapper from './toolbar-mapper';\n\nconst ToolbarContext = createContext();\n\nconst Component = ({ component, ...props }) => (\n  <ToolbarContext.Consumer>\n    {({ componentMapper }) => {\n      const C =\n        typeof component === 'string' ? componentMapper[component] : component;\n      return <C {...props} />;\n    }}\n  </ToolbarContext.Consumer>\n);\n\nComponent.propTypes = {\n  component: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.element\n  ]).isRequired\n};\n\n/**\n * Render loop that renders all toolbar components based on its type\n * @param {Array} fields list of React components to be rendered\n */\nconst render = (fields) =>\n  fields.hidden\n    ? null\n    : fields.map(({ fields, key, ...field }) =>\n        fields ? (\n          <Component key={key} {...field}>\n            {render(fields)}\n          </Component>\n        ) : (\n          <Component key={key} {...field} />\n        )\n      );\n\nconst ToolbarRenderer = ({ schema, componentMapper }) => (\n  <ToolbarContext.Provider value={{ render, componentMapper }}>\n    {render(schema.fields)}\n  </ToolbarContext.Provider>\n);\n\nToolbarRenderer.propTypes = {\n  schema: PropTypes.shape({\n    fields: PropTypes.array.isRequired\n  }).isRequired,\n  componentMapper: PropTypes.object\n};\n\nToolbarRenderer.defaultProps = {\n  componentMapper: toolbarMapper\n};\n\nexport default ToolbarRenderer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormGroup,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport { rawComponents } from '@data-driven-forms/pf4-component-mapper';\n\nconst createOptions = (options, inputValue, isRequired) => {\n  if (inputValue && isRequired) {\n    return options;\n  }\n\n  let selectOptions = [...options];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? [...selectOptions]\n    : [{ label: isRequired ? 'Please choose' : 'None' }, ...selectOptions];\n};\n\nconst Select = ({\n  input,\n  options,\n  isReadOnly,\n  isDisabled,\n  FieldProvider,\n  isRequired,\n  formOptions: { change },\n  multi,\n  ...rest\n}) => (\n  <rawComponents.Select\n    hideSelectedOptions={false}\n    menuIsPortal\n    {...input}\n    {...rest}\n    onChange={(value, ...args) => {\n      if (rest.onChange) {\n        rest.onChange(value);\n        change(input.name, value);\n      } else {\n        input.onChange(value, ...args);\n      }\n    }}\n    isMulti={multi}\n    options={createOptions(options, input.value, isRequired)}\n    isDisabled={isDisabled || isReadOnly}\n    closeMenuOnSelect={!multi}\n  />\n);\n\nSelect.propTypes = {\n  input: PropTypes.object.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.any,\n      label: PropTypes.string.isRequired\n    })\n  ),\n  isReadOnly: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isRequired: PropTypes.bool,\n  isSearchable: PropTypes.bool,\n  FieldProvider: PropTypes.any,\n  formOptions: PropTypes.shape({\n    change: PropTypes.func\n  }),\n  multi: PropTypes.bool\n};\n\nSelect.defaultProps = {\n  formOptions: {},\n  isSearchable: false,\n  multi: false,\n  options: []\n};\n\nconst Pf4SelectWrapper = ({\n  componentType,\n  label,\n  isRequired,\n  helperText,\n  meta,\n  description,\n  hideLabel,\n  formOptions,\n  dataType,\n  initialKey,\n  id,\n  initialValue,\n  ...rest\n}) => {\n  const { error, touched } = meta;\n  const showError = touched && error;\n  const { name } = rest.input;\n\n  return (\n    <FormGroup\n      isRequired={isRequired}\n      label={!hideLabel && label}\n      fieldId={id || name}\n      isValid={!showError}\n      helperText={helperText}\n      helperTextInvalid={meta.error}\n    >\n      {description && (\n        <TextContent>\n          <Text component={TextVariants.small}>{description}</Text>\n        </TextContent>\n      )}\n      <Select\n        formOptions={formOptions}\n        id={id || name}\n        label={label}\n        isValid={!showError}\n        isRequired={isRequired}\n        {...rest}\n      />\n    </FormGroup>\n  );\n};\n\nPf4SelectWrapper.propTypes = {\n  componentType: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.string,\n  meta: PropTypes.object,\n  description: PropTypes.string,\n  hideLabel: PropTypes.bool,\n  formOptions: PropTypes.object,\n  dataType: PropTypes.string,\n  initialKey: PropTypes.any,\n  initialValue: PropTypes.any\n};\n\nexport default Pf4SelectWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { rawComponents } from '@data-driven-forms/pf4-component-mapper';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport asyncFormValidator from '../../utilities/async-form-validator';\n\nexport const ShareGroupSelect = ({\n  FieldProvider,\n  inputName,\n  selectName,\n  loadOptions,\n  permissions\n}) => {\n  return (\n    <Grid gutter=\"md\" className=\"share-column\">\n      <GridItem span={7}>\n        <FieldProvider\n          name={inputName}\n          loadOptions={asyncFormValidator(loadOptions)}\n          render={({ input, ...props }) => (\n            <rawComponents.Select\n              isSearchable\n              isClearable\n              menuIsPortal\n              loadOptions={asyncFormValidator(loadOptions)}\n              placeholder=\"Select group\"\n              {...input}\n              {...props}\n            />\n          )}\n        />\n      </GridItem>\n      <GridItem span={5}>\n        <FieldProvider\n          name={selectName}\n          options={permissions}\n          menuIsPortal\n          render={({ input, ...props }) => (\n            <rawComponents.Select\n              placeholder=\"Select permission\"\n              {...input}\n              {...props}\n            />\n          )}\n        />\n      </GridItem>\n    </Grid>\n  );\n};\n\nShareGroupSelect.propTypes = {\n  FieldProvider: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n    .isRequired,\n  inputName: PropTypes.string.isRequired,\n  selectName: PropTypes.string.isRequired,\n  loadOptions: PropTypes.func.isRequired,\n  permissions: PropTypes.any\n};\n\nexport default ShareGroupSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { rawComponents } from '@data-driven-forms/pf4-component-mapper';\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n  GridItem,\n  Grid\n} from '@patternfly/react-core';\n\nconst ShareGroupEdit = ({ FieldProvider, label, ...props }) => {\n  return (\n    <Grid gutter=\"md\" className=\"share-column\">\n      <GridItem span={7}>\n        <TextContent>\n          <Text component={TextVariants.h4}>{label}</Text>\n        </TextContent>\n      </GridItem>\n      <GridItem span={5}>\n        <FieldProvider\n          {...props}\n          menuIsPortal\n          render={({ input, ...props }) => (\n            <rawComponents.Select {...input} {...props} />\n          )}\n        />\n      </GridItem>\n    </Grid>\n  );\n};\n\nShareGroupEdit.propTypes = {\n  FieldProvider: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n    .isRequired,\n  label: PropTypes.string.isRequired\n};\n\nexport default ShareGroupEdit;\n","import React, { createContext, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport ReactFormRender, {\n  componentTypes,\n  layoutComponents\n} from '@data-driven-forms/react-form-renderer';\nimport {\n  layoutMapper,\n  formFieldsMapper\n} from '@data-driven-forms/pf4-component-mapper';\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\nimport ShareGroupSelect from '../../forms/form-fields/share-group-select';\nimport ShareGroupEdit from '../../forms/form-fields/shage-group-edit';\n\nconst FormContext = createContext({});\n\nconst FormButton = ({ label, variant, ...props }) => {\n  const { formContainer } = useContext(FormContext);\n  return (\n    <Button\n      {...props}\n      variant={\n        formContainer === 'modal' && variant === undefined ? 'link' : variant\n      }\n    >\n      {label}\n    </Button>\n  );\n};\n\nFormButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  variant: PropTypes.string\n};\n\nconst FormRenderer = ({ componentMapper, formContainer, ...rest }) => {\n  return (\n    <div>\n      <FormContext.Provider value={{ formContainer }}>\n        <ReactFormRender\n          formFieldsMapper={{\n            ...formFieldsMapper,\n            ...componentMapper,\n            [componentTypes.SELECT]: Pf4SelectWrapper,\n            'share-group-select': ShareGroupSelect,\n            'share-group-edit': ShareGroupEdit\n          }}\n          layoutMapper={{\n            ...layoutMapper,\n            [layoutComponents.BUTTON]: FormButton\n          }}\n          {...rest}\n        />\n      </FormContext.Provider>\n    </div>\n  );\n};\n\nFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n  formContainer: PropTypes.oneOf(['default', 'modal'])\n};\n\nFormRenderer.defaultProps = {\n  componentMapper: {},\n  formContainer: 'default'\n};\n\nexport default FormRenderer;\n","import {\n  getAxiosInstance,\n  getPortfolioApi,\n  getPortfolioItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { sanitizeValues } from '../shared/helpers';\nimport { defaultSettings } from '../shared/pagination';\n\nconst axiosInstance = getAxiosInstance();\nconst portfolioApi = getPortfolioApi();\nconst portfolioItemApi = getPortfolioItemApi();\n\nexport function listPortfolios(\n  filter = '',\n  { limit, offset } = defaultSettings\n) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n}\n\nexport function listPortfolioItems(limit = 50, offset = 0, filter = '') {\n  return axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n    )\n    .then((portfolioItems) => {\n      const portfolioReference = portfolioItems.data.reduce(\n        (acc, curr, index) =>\n          curr.portfolio_id\n            ? {\n                ...acc,\n                [curr.portfolio_id]: acc[curr.portfolio_id]\n                  ? [...acc[curr.portfolio_id], index]\n                  : [index]\n              }\n            : acc,\n        {}\n      );\n      return axiosInstance\n        .get(\n          `${CATALOG_API_BASE}/portfolios?${Object.keys(portfolioReference)\n            .map((id) => `filter[id][]=${id}`)\n            .join('&')}`\n        )\n        .then(({ data }) => ({\n          portfolioItems,\n          portfolioReference,\n          portfolios: data\n        }));\n    })\n    .then(({ portfolioItems, portfolioReference, portfolios }) => {\n      portfolios.forEach(({ id, name }) =>\n        portfolioReference[id].forEach((portfolioItemIndex) => {\n          portfolioItems.data[portfolioItemIndex].portfolioName = name;\n        })\n      );\n      return portfolioItems;\n    });\n}\n\nexport function getPortfolioItem(portfolioItemId) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}`\n  );\n}\n\nexport function getPortfolio(portfolioId) {\n  return portfolioApi.showPortfolio(portfolioId);\n}\n\nexport function getPortfolioItemsWithPortfolio(\n  portfolioId,\n  { limit, offset, filter = '' } = defaultSettings\n) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios/${portfolioId}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n}\n\n// TO DO - change to use the API call that adds multiple items to a portfolio when available\nexport async function addPortfolio(portfolioData, items) {\n  let portfolio = await portfolioApi.createPortfolio(portfolioData);\n  if (!portfolio) {\n    return portfolio;\n  }\n\n  if (items && items.length > 0) {\n    return addToPortfolio(portfolio, items);\n  }\n}\n\nexport async function addToPortfolio(portfolioId, items) {\n  return Promise.all(\n    items.map((item) =>\n      portfolioItemApi.createPortfolioItem({\n        portfolio_id: portfolioId,\n        service_offering_ref: item\n      })\n    )\n  );\n}\n\nexport async function updatePortfolio({ id, ...portfolioData }, store) {\n  return await portfolioApi.updatePortfolio(\n    id,\n    sanitizeValues(portfolioData, 'Portfolio', store)\n  );\n}\n\nexport async function removePortfolio(portfolioId) {\n  await portfolioApi.destroyPortfolio(portfolioId);\n}\n\nexport async function removePortfolioItem(portfolioItemId) {\n  return portfolioItemApi.destroyPortfolioItem(portfolioItemId);\n}\n\nexport async function removePortfolioItems(portfolioItemIds) {\n  return Promise.all(\n    portfolioItemIds.map(async (itemId) => {\n      const { restore_key } = await removePortfolioItem(itemId);\n      return {\n        portfolioItemId: itemId,\n        restoreKey: restore_key\n      };\n    })\n  );\n}\n\nexport function fetchProviderControlParameters(portfolioItemId) {\n  return axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}/provider_control_parameters`\n    )\n    .then((data) => ({\n      required: [],\n      ...data,\n      properties: {\n        ...data.properties,\n        namespace: {\n          ...data.properties.namespace,\n          enum: Array.from(new Set([...data.properties.namespace.enum]))\n        }\n      }\n    }));\n}\n\nexport async function updatePortfolioItem({ id, ...portfolioItem }, store) {\n  return await portfolioItemApi.updatePortfolioItem(\n    id,\n    sanitizeValues(portfolioItem, 'PortfolioItem', store)\n  );\n}\n\nexport function fetchPortfolioByName(name = '') {\n  return axiosInstance.get(`${CATALOG_API_BASE}/portfolios`, {\n    params: {\n      filter: {\n        name\n      }\n    }\n  });\n}\n\nexport const restorePortfolioItems = (restoreData) =>\n  Promise.all(\n    restoreData.map(({ portfolioItemId, restoreKey }) =>\n      portfolioItemApi.unDeletePortfolioItem(portfolioItemId, {\n        restore_key: restoreKey\n      })\n    )\n  );\n\nexport const copyPortfolio = (portfolioId) =>\n  portfolioApi.postCopyPortfolio(portfolioId);\n\nexport const copyPortfolioItem = (portfolioItemId, copyObject = {}) =>\n  portfolioItemApi.postCopyPortfolioItem(portfolioItemId, copyObject);\n\nexport const uploadPortfolioItemIcon = (portfolioItemId, file, iconId) => {\n  let data = new FormData();\n  data.append('content', file, file.name);\n  if (iconId) {\n    return axiosInstance.patch(`${CATALOG_API_BASE}/icons/${iconId}`, data);\n  }\n\n  data.append('portfolio_item_id', portfolioItemId);\n  return axiosInstance.post(`${CATALOG_API_BASE}/icons`, data, {\n    headers: {\n      accept: 'application/json',\n      'Content-Type': `multipart/form-data; boundary=${data._boundary}`\n    }\n  });\n};\n\nexport const getPortfolioItemDetail = (params) =>\n  Promise.all([\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/portfolio_items/${params.portfolioItem}`\n    ),\n    axiosInstance.get(`${CATALOG_API_BASE}/portfolios/${params.portfolio}`),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${params.source}`)\n      .catch((error) => {\n        if (error.status === 404) {\n          return {\n            object: 'platform',\n            notFound: true\n          };\n        }\n\n        throw error;\n      })\n  ]);\n\nexport const getPortfolioFromState = (portfolioReducer, portfolioId) =>\n  portfolioReducer.selectedPortfolio &&\n  portfolioReducer.selectedPortfolio.id === portfolioId\n    ? portfolioReducer.selectedPortfolio\n    : portfolioReducer.portfolios.data.find(({ id }) => id === portfolioId);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport clsx from 'clsx';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport CatalogBreadcrumbs from '../../smart-components/common/catalog-breadcrumbs';\nimport {\n  TopToolbarWrapper,\n  TopToolbarTitleContainer\n} from '../styled-components/toolbars';\n\nconst TopToolbar = ({\n  children,\n  paddingBottom,\n  breadcrumbs,\n  breadcrumbsSpacing,\n  ...rest\n}) => (\n  <TopToolbarWrapper\n    className={`pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${\n      paddingBottom ? 'pf-u-pb-lg' : ''\n    }`}\n    {...rest}\n  >\n    {breadcrumbs && (\n      <div className=\"pf-u-mb-md\">\n        {' '}\n        <CatalogBreadcrumbs />\n      </div>\n    )}\n    {children}\n  </TopToolbarWrapper>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  paddingBottom: PropTypes.bool,\n  breadcrumbs: PropTypes.bool,\n  breadcrumbsSpacing: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: true,\n  breadcrumbs: true\n};\n\nexport default TopToolbar;\n\nexport const TopToolbarTitle = ({\n  title,\n  description,\n  children,\n  noData,\n  ...rest\n}) => (\n  <Fragment>\n    <TopToolbarTitleContainer\n      className={clsx({\n        'pf-u-mb-lg': !noData\n      })}\n      {...rest}\n    >\n      <LevelItem>\n        <TextContent className=\"top-toolbar-title\">\n          <Text component={TextVariants.h2} className=\"pf-u-m-0 pf-u-mr-md\">\n            {title}\n          </Text>\n          {description && (\n            <Text\n              className=\"top-toolbar-title-description\"\n              component={TextVariants.p}\n            >\n              {description}\n            </Text>\n          )}\n        </TextContent>\n      </LevelItem>\n      {children}\n    </TopToolbarTitleContainer>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  noData: PropTypes.bool\n};\n\nTopToolbarTitle.defaultProps = {\n  title: <ToolbarTitlePlaceholder />\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation } from 'react-router-dom';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nconst AppTabs = ({ tabItems }) => {\n  const { push } = useEnhancedHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) =>\n    push({ pathname: tabItems[tabIndex].name, search });\n\n  return (\n    <Tabs\n      activeKey={activeTab ? activeTab.eventKey : 0}\n      onSelect={handleTabClick}\n    >\n      {tabItems.map((item) => (\n        <Tab\n          title={item.title}\n          key={item.eventKey}\n          eventKey={item.eventKey}\n          name={item.name}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default AppTabs;\n","import styled from 'styled-components';\n\nconst EllipsisTextContainer = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nexport default EllipsisTextContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ContentGalleryEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <div className=\"pf-u-mt-xl\">\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={Icon} />\n      <TextContent>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </TextContent>\n      <EmptyStateBody>\n        {description}\n        {renderDescription()}\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        {PrimaryAction && <PrimaryAction />}\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </div>\n);\n\nContentGalleryEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nContentGalleryEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default ContentGalleryEmptyState;\n\nexport const EmptyStatePrimaryAction = ({\n  url,\n  label,\n  hasPermission = false\n}) =>\n  hasPermission && (\n    <CatalogLink pathname={url} preserveSearch>\n      <Button variant=\"primary\">{label}</Button>\n    </CatalogLink>\n  );\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\n","module.exports = __webpack_public_path__ + \"fonts/card-icon-default.svg\";","import styled from 'styled-components';\nimport { Card, GalleryItem } from '@patternfly/react-core';\n\nexport const StyledCard = styled(Card)`\n  height: 330px;\n  position: relative;\n`;\n\nexport const StyledGalleryItem = styled(GalleryItem)`\n  position: relative;\n  ::after {\n    display: ${({ isDisabled }) => (isDisabled ? 'block' : 'none')};\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    content: '';\n    background-color: rgba(210, 210, 210, 0.5);\n    z-index: 1;\n    cursor: progress;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport { Text, TextVariants, Gallery } from '@patternfly/react-core';\n\nimport { CardLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst NoItems = () => (\n  <div>\n    <Text component={TextVariants.h1}>No items found</Text>\n  </div>\n);\n\nconst ContentGallery = ({ isLoading, items, renderEmptyState }) =>\n  isLoading ? (\n    <CardLoader />\n  ) : items.length === 0 ? (\n    renderEmptyState ? (\n      renderEmptyState()\n    ) : (\n      <NoItems />\n    )\n  ) : (\n    <Section type=\"content\">\n      <Gallery gutter=\"md\" className=\"content-gallery\">\n        {items}\n      </Gallery>\n    </Section>\n  );\n\nContentGallery.propTypes = {\n  isLoading: PropTypes.bool,\n  items: PropTypes.array,\n  renderEmptyState: PropTypes.func\n};\nexport default ContentGallery;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst CardPropText = styled.div`\n  overflow: hidden;\n`;\n\nconst ItemDetails = ({ toDisplay = [], ...item }) =>\n  toDisplay.map((prop) => (\n    <CardPropText key={`card-prop-${prop}`}>{item[prop]}</CardPropText>\n  ));\n\nItemDetails.propTypes = {\n  toDisplay: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.arrayOf(PropTypes.node)\n    ])\n  )\n};\n\nItemDetails.defaultProps = {\n  toDisplay: []\n};\n\nexport default ItemDetails;\n","import styled from 'styled-components';\nimport { CardBody } from '@patternfly/react-core';\n\nexport const StyledCardBody = styled(CardBody)`\n  height: 230px;\n  overflow: hidden;\n  padding: 0;\n  margin: 0 24px 24px;\n`;\n","/* eslint camelcase: 0 */\nimport {\n  getAxiosInstance,\n  getPortfolioItemApi,\n  getOrderApi,\n  getRequestsApi,\n  getOrderItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nconst orderApi = getOrderApi();\nconst orderItemApi = getOrderItemApi();\nconst portfolioItemApi = getPortfolioItemApi();\nconst requestsApi = getRequestsApi();\nconst axiosInstance = getAxiosInstance();\n\nexport function getServicePlans(portfolioItemId) {\n  return portfolioItemApi.listServicePlans(portfolioItemId);\n}\n\nexport async function sendSubmitOrder({\n  service_parameters: { providerControlParameters, ...service_parameters },\n  ...parameters\n}) {\n  let order = await orderApi.createOrder();\n  let orderItem = {};\n  orderItem.count = 1;\n  orderItem = {\n    ...orderItem,\n    ...parameters,\n    service_parameters,\n    provider_control_parameters: providerControlParameters || {}\n  };\n  await orderApi.addToOrder(order.id, orderItem);\n  return orderApi.submitOrder(order.id);\n}\n\nexport function listRequests() {\n  return requestsApi.listRequests().then((data) => ({\n    ...data,\n    data: data.data.map(({ decision, ...item }) => ({\n      ...item,\n      state: decision\n    }))\n  }));\n}\n\nexport function cancelOrder(orderId) {\n  return orderApi.cancelOrder(orderId);\n}\n\nconst getOrderItems = (orderIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items?${orderIds\n      .map((orderId) => `filter[order_id][]=${orderId}`)\n      .join('&')}`\n  );\n\nconst getOrderPortfolioItems = (itemIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items?${itemIds\n      .map((itemId) => `filter[id][]=${itemId}`)\n      .join('&')}`\n  );\n\nexport const getOrders = (filter, pagination = defaultSettings) =>\n  axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/orders?${filter}&limit=${pagination.limit}&offset=${pagination.offset}`\n    ) // eslint-disable-line max-len\n    .then((orders) =>\n      getOrderItems(orders.data.map(({ id }) => id)).then((orderItems) =>\n        getOrderPortfolioItems(\n          orderItems.data.map(({ portfolio_item_id }) => portfolio_item_id)\n        ).then((portfolioItems) => {\n          return {\n            portfolioItems,\n            ...orders,\n            data: orders.data.map((order) => ({\n              ...order,\n              orderItems: orderItems.data.filter(\n                ({ order_id }) => order_id === order.id\n              )\n            }))\n          };\n        })\n      )\n    );\n\nexport function getOrderApprovalRequests(orderItemId) {\n  return orderItemApi.listApprovalRequests(orderItemId);\n}\n\nexport const getOrderDetail = (params) => {\n  return Promise.all([\n    axiosInstance.get(`${CATALOG_API_BASE}/orders/${params.order}`),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}`\n    ),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/portfolio_items/${params['portfolio-item']}`)\n      .catch((error) => {\n        if (error.status === 404) {\n          return {\n            object: 'Portfolio item',\n            notFound: true\n          };\n        }\n\n        throw error;\n      }),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${params.platform}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Platform',\n            notFound: true\n          };\n        }\n\n        throw error;\n      }),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}/progress_messages`\n    ),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/portfolios/${params.portfolio}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Portfolio',\n            notFound: true\n          };\n        }\n\n        throw error;\n      }),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}/approval_requests`\n    )\n  ]);\n};\n\nexport const getApprovalRequests = (orderItemId) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items/${orderItemId}/approval_requests`\n  );\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport { ORDERS_ROUTE } from '../../constants/routes';\n\nconst OrderNotification = ({ id, dispatch }) => (\n  <Fragment>\n    You can track the progress of Order # {id} in your{' '}\n    <Link onClick={() => dispatch(clearNotifications())} to={ORDERS_ROUTE}>\n      Orders\n    </Link>{' '}\n    page.\n  </Fragment>\n);\n\nOrderNotification.propTypes = {\n  id: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default OrderNotification;\n","import React from 'react';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\n\nimport * as ActionTypes from '../action-types';\nimport * as OrderHelper from '../../helpers/order/order-helper';\nimport OrderNotification from '../../presentational-components/order/order-notification';\n\nexport const fetchServicePlans = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_SERVICE_PLANS,\n  payload: OrderHelper.getServicePlans(portfolioItemId)\n});\n\nexport const updateServiceData = (data) => ({\n  type: ActionTypes.UPDATE_SERVICE_DATA,\n  payload: { serviceData: data }\n});\n\nexport const setSelectedPlan = (data) => ({\n  type: ActionTypes.SET_SELECTED_PLAN,\n  payload: data\n});\n\nexport const sendSubmitOrder = (apiProps) => (dispatch) =>\n  dispatch({\n    type: ActionTypes.SUBMIT_SERVICE_ORDER,\n    payload: OrderHelper.sendSubmitOrder(apiProps).then(({ id }) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been accepted successfully',\n          description: <OrderNotification id={id} dispatch={dispatch} />,\n          dismissable: true\n        })\n      )\n    )\n  });\n\nexport const fetchRequests = () => ({\n  type: ActionTypes.FETCH_REQUESTS,\n  payload: OrderHelper.listRequests()\n});\n\nexport const cancelOrder = (orderId) => (dispatch, getState) => {\n  dispatch({ type: `${ActionTypes.CANCEL_ORDER}_PENDING` });\n  const {\n    orderReducer: { orderDetail }\n  } = getState();\n  return OrderHelper.cancelOrder(orderId)\n    .then(() => {\n      orderDetail.order.state = 'Canceled';\n      if (\n        orderDetail.approvalRequest &&\n        orderDetail.approvalRequest.length > 0\n      ) {\n        orderDetail.approvalRequest[0].state = 'canceled';\n      }\n\n      dispatch({\n        type: ActionTypes.SET_ORDER_DETAIL,\n        payload: { ...orderDetail }\n      });\n      return orderDetail;\n    })\n    .then((orderDetail) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been canceled successfully',\n          description: `Order ${`Order #${orderDetail.order.id}`} was canceled.`,\n          dismissable: true\n        })\n      )\n    )\n    .then(() => dispatch({ type: `${ActionTypes.CANCEL_ORDER}_FULFILLED` }))\n    .catch((error) => {\n      dispatch({\n        type: `${ActionTypes.CANCEL_ORDER}_REJECTED`,\n        payload: error\n      });\n    });\n};\n\nexport const fetchOrders = (filters, pagination) => (dispatch) => {\n  const queryFilter = Object.entries(filters)\n    .filter(([, value]) => value && value.length > 0)\n    .map(([key, value]) =>\n      Array.isArray(value)\n        ? value.map((value) => `filter[${key}][]=${value}`).join('&')\n        : `filter[${key}][contains_i]=${value}`\n    )\n    .join('&');\n  dispatch({ type: `${ActionTypes.FETCH_ORDERS}_PENDING` });\n  return OrderHelper.getOrders(queryFilter, pagination)\n    .then(({ portfolioItems, ...orders }) => {\n      dispatch({\n        type: ActionTypes.SET_PORTFOLIO_ITEMS,\n        payload: portfolioItems\n      });\n      return dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_FULFILLED`,\n        meta: { filter: queryFilter },\n        payload: orders\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchOrderDetails = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SET_ORDER_DETAIL}_PENDING` });\n  return OrderHelper.getOrderDetail(params)\n    .then(\n      ([\n        order,\n        orderItem,\n        portfolioItem,\n        platform,\n        progressMessages,\n        portfolio,\n        approvalRequest\n      ]) =>\n        dispatch({\n          type: `${ActionTypes.SET_ORDER_DETAIL}_FULFILLED`,\n          payload: {\n            order,\n            orderItem,\n            portfolioItem,\n            platform,\n            progressMessages,\n            portfolio,\n            approvalRequest\n          }\n        })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.SET_ORDER_DETAIL}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchApprovalRequests = (orderItemId) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_PENDING` });\n  return OrderHelper.getApprovalRequests(orderItemId)\n    .then((data) => {\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_FULFILLED`,\n        payload: data\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CardCheckbox = ({ handleCheck, isChecked, id }) => (\n  <Checkbox\n    onClick={(event) => event.stopPropagation()}\n    isChecked={isChecked}\n    onChange={handleCheck}\n    aria-label=\"card checkbox\"\n    id={id}\n  />\n);\n\nCardCheckbox.propTypes = {\n  handleCheck: propTypes.func,\n  isChecked: propTypes.bool,\n  id: propTypes.string\n};\n\nexport default CardCheckbox;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ItemDetails from './card-common';\nimport ConditionalLink from './conditional-link';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { StyledCardBody } from '../styled-components/card';\n\nconst ServiceOfferingCardBody = ({\n  name,\n  display_name,\n  distributor,\n  pathname,\n  searchParams,\n  preserveSearch,\n  portfolioName,\n  ...props\n}) => (\n  <StyledCardBody>\n    <TextContent>\n      <ConditionalLink\n        pathname={pathname}\n        searchParams={searchParams}\n        preserveSearch={preserveSearch}\n      >\n        <Text component={TextVariants.h3} title={name}>\n          <EllipsisTextContainer>{name}</EllipsisTextContainer>\n        </Text>\n      </ConditionalLink>\n      {distributor && <Text component={TextVariants.small}>{distributor}</Text>}\n      {portfolioName && (\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component=\"small\">\n            Portfolio\n          </Text>\n          <Text>{portfolioName}</Text>\n        </Fragment>\n      )}\n    </TextContent>\n    <ItemDetails\n      toDisplay={[props.description ? 'description' : 'long_description']}\n      {...props}\n    />\n  </StyledCardBody>\n);\n\nServiceOfferingCardBody.propTypes = {\n  name: PropTypes.string,\n  display_name: PropTypes.string,\n  distributor: PropTypes.string,\n  long_description: PropTypes.string,\n  description: PropTypes.string,\n  pathname: PropTypes.string,\n  preserveSearch: PropTypes.bool,\n  searchParams: PropTypes.shape({ [PropTypes.string]: PropTypes.string }),\n  portfolioName: PropTypes.string\n};\n\nexport default ServiceOfferingCardBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    {children}\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","import { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport asyncFormValidator from '../utilities/async-form-validator';\n\nconst editWorkflowSchema = (loadWorkflows) => ({\n  fields: [\n    {\n      component: componentTypes.SELECT,\n      name: 'selectedWorkflows',\n      label: 'Select approval process',\n      loadOptions: asyncFormValidator(loadWorkflows),\n      multi: true,\n      isSearchable: true,\n      isClearable: true\n    }\n  ]\n});\n\nexport default editWorkflowSchema;\n","import { getWorkflowApi, getAxiosInstance } from '../shared/user-login';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nexport const getApprovalWorkflows = () => getWorkflowApi().listWorkflows();\n\nexport const loadWorkflowOptions = (filterValue = '') =>\n  getAxiosInstance()\n    .get(\n      `${APPROVAL_API_BASE}/workflows${\n        filterValue.length > 0 ? `/?filter[name][contains]=${filterValue}` : ''\n      }`\n    )\n    .then(({ data }) =>\n      data.map(({ id, name }) => ({ label: name, value: id }))\n    );\n\nexport const updateWorkflows = (unlinkIds, linkIds, resourceObject) => {\n  const unlinkPromises = unlinkIds\n    ? unlinkIds.map((wf) => getWorkflowApi().unlinkWorkflow(wf, resourceObject))\n    : [];\n  const linkPromises = linkIds\n    ? linkIds.map((wf) => getWorkflowApi().linkWorkflow(wf, resourceObject))\n    : [];\n  return Promise.all([...unlinkPromises, ...linkPromises]);\n};\n\nexport const listWorkflowsForObject = (\n  resourceObject,\n  pagination = { limit: defaultSettings.limit, offset: defaultSettings.offset },\n  filter = ''\n) => {\n  const objectQuery = `app_name=${resourceObject.appName}&object_type=${resourceObject.objectType}&object_id=${resourceObject.objectId}`;\n  const paginationQuery = `&limit=${pagination.limit}&offset=${pagination.offset}`;\n  const filterQuery = `&filter[name][contains]=${filter}`;\n  return getAxiosInstance().get(\n    `${APPROVAL_API_BASE}/workflows/?${objectQuery}${filterQuery}${paginationQuery}`\n  );\n};\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal } from '@patternfly/react-core';\nimport FormRenderer from '../common/form-renderer';\nimport editApprovalWorkflowSchema from '../../forms/edit-workflow_form.schema';\nimport {\n  listWorkflowsForObject,\n  updateWorkflows\n} from '../../redux/actions/approval-actions';\nimport { APP_NAME } from '../../utilities/constants';\nimport { loadWorkflowOptions } from '../../helpers/approval/approval-helper';\nimport { WorkflowLoader } from '../../presentational-components/shared/loader-placeholders';\nimport useQuery from '../../utilities/use-query';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nconst initialState = {\n  isFetching: true\n};\n\nconst approvalState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst EditApprovalWorkflow = ({\n  objectType,\n  removeQuery,\n  querySelector,\n  pushParam,\n  objectName = () => objectType\n}) => {\n  const [{ isFetching }, stateDispatch] = useReducer(\n    approvalState,\n    initialState\n  );\n  const { data, meta } = useSelector(\n    ({ approvalReducer: { resolvedWorkflows } }) => resolvedWorkflows\n  );\n  const dispatch = useDispatch();\n  const history = useEnhancedHistory(removeQuery);\n  const [query] = useQuery([querySelector]);\n\n  useEffect(() => {\n    dispatch(\n      listWorkflowsForObject(\n        {\n          objectType,\n          appName: APP_NAME[objectType],\n          objectId: query[querySelector]\n        },\n        meta\n      )\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const onSubmit = (formData, formApi) => {\n    const initialWorkflows =\n      formApi.getState().initialValues.selectedWorkflows || [];\n    const newWorkflows = formData.selectedWorkflows || [];\n\n    history.push(pushParam);\n    const toUnlinkWorkflows = initialWorkflows.filter(\n      (wf) => newWorkflows.findIndex((w) => w === wf) < 0\n    );\n    const toLinkWorkflows = newWorkflows.filter(\n      (wf) => initialWorkflows.findIndex((w) => w === wf) < 0\n    );\n\n    if (toUnlinkWorkflows.length > 0 || toLinkWorkflows.length > 0) {\n      dispatch(\n        updateWorkflows(toUnlinkWorkflows, toLinkWorkflows, {\n          object_type: objectType,\n          app_name: APP_NAME[objectType],\n          object_id: query[querySelector]\n        })\n      );\n    }\n  };\n\n  return (\n    <Modal\n      title={`Set approval process for ${objectName(query[querySelector])}`}\n      isOpen\n      onClose={() => history.push(pushParam)}\n      isSmall\n    >\n      {!isFetching ? (\n        <FormRenderer\n          initialValues={{\n            selectedWorkflows: data ? data.map((wf) => wf.id) : undefined\n          }}\n          onSubmit={onSubmit}\n          onCancel={() => history.push(pushParam)}\n          schema={editApprovalWorkflowSchema(loadWorkflowOptions)}\n          formContainer=\"modal\"\n          buttonsLabels={{ submitLabel: 'Save' }}\n        />\n      ) : (\n        <WorkflowLoader />\n      )}\n    </Modal>\n  );\n};\n\nEditApprovalWorkflow.propTypes = {\n  pushParam: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string\n    })\n  ]).isRequired,\n  objectType: PropTypes.string.isRequired,\n  objectName: PropTypes.func,\n  removeQuery: PropTypes.bool,\n  querySelector: PropTypes.oneOf(['portfolio', 'platform', 'inventory'])\n    .isRequired\n};\n\nexport default EditApprovalWorkflow;\n","import React, { Fragment } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ASYNC_ACTIONS } from '../action-types/approval-action-types';\nimport * as ApprovalHelper from '../../helpers/approval/approval-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/index';\n\nexport const fetchWorkflows = () => ({\n  type: ASYNC_ACTIONS.FETCH_WORKFLOWS,\n  payload: ApprovalHelper.getApprovalWorkflows().then(({ data }) => [\n    ...data.map(({ id, name }) => ({ value: id, label: name }))\n  ])\n});\n\nexport const updateWorkflows = (toUnlinkIds, toLinkIds, resourceObject) => (\n  dispatch\n) =>\n  dispatch({\n    type: ASYNC_ACTIONS.UPDATE_WORKFLOWS,\n    payload: ApprovalHelper.updateWorkflows(\n      toUnlinkIds,\n      toLinkIds,\n      resourceObject\n    ).then(() =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Success updating workflows',\n          dismissable: true,\n          description: (\n            <Fragment>\n              {toUnlinkIds.length > 0 ? (\n                <FormattedMessage\n                  id=\"workflows.update_workflows\"\n                  defaultMessage={`{count, number} {count, plural, one {workflow was}\n                    other {workflows were}} unlinked succesfully. `}\n                  values={{ count: toUnlinkIds.length }}\n                />\n              ) : (\n                ''\n              )}\n              {toLinkIds.length > 0 ? (\n                <FormattedMessage\n                  id=\"workflows.update_workflows\"\n                  defaultMessage={`{count, number} {count, plural, one {workflow was}\n                    other {workflows were}} linked succesfully.`}\n                  values={{ count: toLinkIds.length }}\n                />\n              ) : (\n                ''\n              )}\n            </Fragment>\n          )\n        })\n      )\n    )\n  });\n\nexport const listWorkflowsForObject = (\n  resourceObject,\n  meta = { limit: defaultSettings.limit, offset: defaultSettings.offset },\n  filter = ''\n) => ({\n  type: ASYNC_ACTIONS.RESOLVE_WORKFLOWS,\n  payload: ApprovalHelper.listWorkflowsForObject(resourceObject, meta, filter)\n});\n","import { toolbarComponentTypes } from './toolbar-mapper';\n\nexport const createSingleItemGroup = ({\n  groupName,\n  hidden = false,\n  ...item\n}) => ({\n  component: toolbarComponentTypes.TOOLBAR_GROUP,\n  key: `${groupName}/single-toolbar-item-group`,\n  fields: hidden\n    ? []\n    : [\n        {\n          component: toolbarComponentTypes.TOOLBAR_ITEM,\n          key: `${groupName}/single-toolbar-item`,\n          fields: [item]\n        }\n      ]\n});\n\nexport const createLinkButton = ({ pathname, preserveSearch, ...item }) => ({\n  component: toolbarComponentTypes.LINK,\n  pathname,\n  preserveSearch,\n  key: `${item.key}/button-link`,\n  isDisabled: item.isDisabled,\n  fields: [\n    {\n      component: toolbarComponentTypes.BUTTON,\n      ...item\n    }\n  ]\n});\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.WrenchIconConfig = void 0;\n\nvar _createIcon = _interopRequireDefault(require(\"../createIcon\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* This file is generated by createIcons.js any changes will be lost. */\nvar WrenchIconConfig = {\n  name: 'WrenchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z',\n  yOffset: '',\n  xOffset: '',\n  transform: ''\n};\nexports.WrenchIconConfig = WrenchIconConfig;\n\nvar _default = (0, _createIcon[\"default\"])(WrenchIconConfig);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=wrench-icon.js.map","import {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  ORDER_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORMS_ROUTE,\n  ORDERS_ROUTE,\n  EDIT_SURVEY_ROUTE,\n  ADD_PRODUCTS_ROUTE\n} from '../../constants/routes';\n\nexport const BASE_PORTFOLIO_FRAGMENTS = [\n  {\n    title: 'Portfolios',\n    pathname: PORTFOLIOS_ROUTE,\n    searchParams: {}\n  }\n];\n\nexport const ENTITIES_EXTRA_PARAMS = {\n  'portfolio-item': ['source']\n};\n\nexport const FRAGMENT_TITLE = {\n  [PORTFOLIO_ROUTE]: (getState) =>\n    getState().portfolioReducer.selectedPortfolio.name,\n  [PORTFOLIO_ITEM_ROUTE]: (getState) =>\n    getState().portfolioReducer.portfolioItem.portfolioItem.name,\n  [EDIT_SURVEY_ROUTE]: () => 'Edit survey',\n  [ADD_PRODUCTS_ROUTE]: () => 'Add products',\n  [PLATFORM_ROUTE]: (getState) =>\n    getState().platformReducer.selectedPlatform.name,\n  [PLATFORM_SERVICE_OFFERINGS_ROUTE]: (getState) =>\n    getState().platformReducer.serviceOffering.service.name,\n  [ORDER_ROUTE]: (getState) => {\n    const { portfolioItem, order } = getState().orderReducer.orderDetail;\n    return `${portfolioItem.name} # ${order.id}`;\n  }\n};\n\nexport const FRAGMENT_PREFIX = {\n  [PORTFOLIO_ROUTE]: {\n    pathname: PORTFOLIOS_ROUTE,\n    title: 'Portfolios',\n    searchParams: {}\n  },\n  [PLATFORM_ROUTE]: {\n    pathname: PLATFORMS_ROUTE,\n    title: 'Platforms',\n    searchParams: {}\n  },\n  [ORDER_ROUTE]: {\n    pathname: ORDERS_ROUTE,\n    title: 'Orders',\n    searchParams: {}\n  }\n};\n","import { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport {\n  FRAGMENT_TITLE,\n  ENTITIES_EXTRA_PARAMS,\n  FRAGMENT_PREFIX\n} from '../../helpers/shared/breadcrumbs-creators';\n\nexport const createBreadcrumbsFromLocations = (pathname = '', search = {}) => (\n  dispatch,\n  getState\n) => {\n  if (pathname.length === 0) {\n    return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: [] });\n  }\n\n  let result = pathname\n    .replace(/^\\//, '')\n    .split('/')\n    .reduce((acc, curr, index) => {\n      const pathname = `${\n        index > 0 && acc[index - 1] ? acc[index - 1].pathname : ''\n      }/${curr}`;\n\n      const generateTitle = FRAGMENT_TITLE[pathname];\n      if (!generateTitle) {\n        return acc;\n      }\n\n      const searchParams = {\n        ...(index > 0 && acc[index - 1].searchParams),\n        ...(search[curr] ? { [curr]: search[curr] } : {})\n      };\n      if (ENTITIES_EXTRA_PARAMS[curr]) {\n        ENTITIES_EXTRA_PARAMS[curr].forEach((key) => {\n          searchParams[key] = search[key];\n        });\n      }\n\n      return [\n        ...acc,\n        {\n          pathname,\n          searchParams,\n          title: generateTitle(getState)\n        }\n      ];\n    }, []);\n  if (result.length > 0 && FRAGMENT_PREFIX[result[0].pathname]) {\n    result = [FRAGMENT_PREFIX[result[0].pathname], ...result];\n  }\n\n  return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: result });\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createBreadcrumbsFromLocations } from '../redux/actions/breadcrumbs-actions';\n\nconst useBreadcrumbs = (updateTriggers = []) => {\n  const dispatch = useDispatch();\n  const { pathname, search } = useLocation();\n  if (updateTriggers.length === 0) {\n    return dispatch(createBreadcrumbsFromLocations('', {}));\n  }\n\n  const searchParams = new URLSearchParams(search);\n  const searchObject = {};\n  searchParams.forEach((value, key) => {\n    searchObject[key] = value;\n  });\n\n  useEffect(() => {\n    dispatch(createBreadcrumbsFromLocations(pathname, searchObject));\n  }, [pathname, ...updateTriggers]);\n\n  return () => dispatch(createBreadcrumbsFromLocations('', {}));\n};\n\nexport default useBreadcrumbs;\n","import styled from 'styled-components';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\n\nconst SpinnerWrapper = styled(Bullseye)`\n  overflow: hidden;\n`;\n\nexport default SpinnerWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level } from '@patternfly/react-core';\n\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport CardCheckbox from '../../presentational-components/shared/card-checkbox';\nimport ServiceOfferingCardBody from '../../presentational-components/shared/service-offering-body';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../../presentational-components/styled-components/styled-gallery';\n\nconst PortfolioItem = (props) => (\n  <StyledGalleryItem isDisabled={props.removeInProgress && props.isSelected}>\n    <StyledCard>\n      <CardHeader className=\"card_header\">\n        <Level>\n          <CardIcon\n            src={`${CATALOG_API_BASE}/portfolio_items/${props.id}/icon`}\n            sourceId={props.service_offering_source_ref}\n          />\n          {props.isSelectable && (\n            <CardCheckbox\n              handleCheck={() => props.onSelect(props.id)}\n              isChecked={props.isSelected}\n              id={props.id}\n            />\n          )}\n        </Level>\n      </CardHeader>\n      <ServiceOfferingCardBody {...props} />\n      <CardFooter></CardFooter>\n    </StyledCard>\n  </StyledGalleryItem>\n);\n\nPortfolioItem.propTypes = {\n  id: PropTypes.string,\n  platformId: PropTypes.string,\n  service_offering_source_ref: PropTypes.string,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  orderUrl: PropTypes.string,\n  removeInProgress: PropTypes.bool,\n  portfolio_id: PropTypes.string\n};\n\nexport default PortfolioItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level } from '@patternfly/react-core';\n\nimport CardIcon from '../shared/card-icon';\nimport CardCheckbox from '../shared/card-checkbox';\nimport ServiceOfferingCardBody from '../shared/service-offering-body';\nimport { StyledCard } from '../styled-components/styled-gallery';\n\nconst PlatformItem = ({ src, ...props }) => (\n  <StyledCard key={props.id}>\n    <CardHeader>\n      <Level>\n        <CardIcon height={40} sourceId={props.source_id} />\n        {props.editMode && (\n          <CardCheckbox\n            id={props.id}\n            isChecked={props.checked}\n            handleCheck={props.onToggleItemSelect}\n          />\n        )}\n      </Level>\n    </CardHeader>\n    <ServiceOfferingCardBody {...props} />\n    <CardFooter />\n  </StyledCard>\n);\n\nPlatformItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  service_offering_icon_id: PropTypes.string,\n  source_id: PropTypes.string,\n  platformId: PropTypes.string,\n  name: PropTypes.string,\n  editMode: PropTypes.bool,\n  checked: PropTypes.bool,\n  onToggleItemSelect: PropTypes.func,\n  src: PropTypes.string\n};\n\nexport default PlatformItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { LevelItem } from '@patternfly/react-core';\n\nexport const StyledLevelItem = styled(({ alignEnd, ...props }) => (\n  <LevelItem {...props} />\n))`\n  align-items: ${({ alignEnd }) => (alignEnd ? 'end !important' : 'inherit')};\n`;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { WarningTriangleIcon } from '@patternfly/react-icons';\nimport {\n  Modal,\n  Button,\n  Text,\n  TextVariants,\n  TextContent,\n  Split,\n  SplitItem\n} from '@patternfly/react-core';\nimport { removePortfolio } from '../../redux/actions/portfolio-actions';\nimport useQuery from '../../utilities/use-query';\nimport { getPortfolioFromState } from '../../helpers/portfolio/portfolio-helper';\nimport { PORTFOLIOS_ROUTE } from '../../constants/routes';\n\nconst RemovePortfolioModal = () => {\n  const [{ portfolio: portfolioId }] = useQuery(['portfolio']);\n  const dispatch = useDispatch();\n  const portfolio = useSelector(({ portfolioReducer }) =>\n    getPortfolioFromState(portfolioReducer, portfolioId)\n  );\n  const { push, goBack } = useHistory();\n  const onSubmit = () => {\n    push(PORTFOLIOS_ROUTE);\n    return dispatch(removePortfolio(portfolioId));\n  };\n\n  if (!portfolio) {\n    return null;\n  }\n\n  return (\n    <Modal\n      title=\"Delete Portfolio?\"\n      isOpen\n      isSmall\n      onClose={goBack}\n      isFooterLeftAligned\n      actions={[\n        <Button key=\"submit\" variant=\"danger\" type=\"button\" onClick={onSubmit}>\n          Confirm\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" type=\"button\" onClick={goBack}>\n          Cancel\n        </Button>\n      ]}\n    >\n      <Split gutter=\"md\">\n        <SplitItem>\n          <WarningTriangleIcon size=\"xl\" fill=\"#f0ab00\" />\n        </SplitItem>\n        <SplitItem>\n          <TextContent>\n            <Text component={TextVariants.p}>\n              This action will permanently delete portfolio {portfolio.name} and\n              its data.\n            </Text>\n          </TextContent>\n        </SplitItem>\n      </Split>\n    </Modal>\n  );\n};\n\nexport default RemovePortfolioModal;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.WarningTriangleIconConfig = void 0;\n\nvar _createIcon = _interopRequireDefault(require(\"../createIcon\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* This file is generated by createIcons.js any changes will be lost. */\nvar WarningTriangleIconConfig = {\n  name: 'WarningTriangleIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M511.488 949.321c6.656 0 13.093-0.878 19.456-2.487s12.142-4.169 17.481-7.461c5.998-3.365 11.118-7.314 15.506-11.995s8.119-10.021 11.483-15.945l437.979-842.24c6.656-11.995 9.801-23.918 9.509-35.913s-3.877-23.918-10.459-35.913c-3.365-5.998-7.168-11.118-11.483-15.506s-9.509-8.192-15.506-11.483c-5.339-2.706-10.971-4.827-16.969-6.51s-12.288-2.487-18.944-2.487h-876.032c-6.656 0-12.946 0.805-18.944 2.487s-11.63 3.803-16.969 6.51c-5.998 3.291-11.118 7.095-15.506 11.483s-8.192 9.509-11.483 15.506c-6.656 11.995-10.094 23.918-10.459 35.913s2.779 23.918 9.509 35.913l437.979 842.24c3.291 5.998 7.095 11.264 11.483 15.945s9.509 8.631 15.506 11.995c5.339 3.291 11.118 5.778 17.481 7.461s12.8 2.487 19.456 2.487zM132.974 73.289h759.296l-380.782 741.595-378.514-741.595zM583.387 156.526c-2.121-5.632-7.534-9.509-13.97-9.509-14.263 0-28.526 0-42.715 0-21.138 0-42.277 0-63.415 0-11.045 0-24.576 0.585-24.576 14.994 0 0 0 44.325 0 44.544 0 8.558 6.437 14.994 14.994 14.994 0 0 115.712 0 115.785 0 8.485 0 14.994-6.437 14.994-14.994 0 0 0-44.544 0-44.544 0-1.975-0.366-3.803-1.024-5.486zM583.826 301.934c-2.121-5.632-7.534-9.509-13.97-9.509-14.263 0-28.526 0-42.715 0-21.138 0-42.277 0-63.415 0-11.045 0-24.576 0.585-24.576 14.994 0 0 0 224.914 0 225.134 0 8.558 6.437 14.994 14.994 14.994 0 0 115.712 0 115.785 0 8.485 0 14.994-6.437 14.994-14.994 0 0 0-225.134 0-225.134 0-1.975-0.366-3.803-1.024-5.486z',\n  yOffset: '64',\n  xOffset: '',\n  transform: 'rotate(180 0 512) scale(-1 1)'\n};\nexports.WarningTriangleIconConfig = WarningTriangleIconConfig;\n\nvar _default = (0, _createIcon[\"default\"])(WarningTriangleIconConfig);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=warning-triangle-icon.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.FilterIconConfig = void 0;\n\nvar _createIcon = _interopRequireDefault(require(\"../createIcon\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* This file is generated by createIcons.js any changes will be lost. */\nvar FilterIconConfig = {\n  name: 'FilterIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z',\n  yOffset: '',\n  xOffset: '',\n  transform: ''\n};\nexports.FilterIconConfig = FilterIconConfig;\n\nvar _default = (0, _createIcon[\"default\"])(FilterIconConfig);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=filter-icon.js.map","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\n\nconst SpinnerButton = styled(Button)`\n  display: flex !important;\n  align-items: center;\n`;\n\nconst SpinnerLabel = styled.span`\n  margin-right: ${({ showSpinner }) => (showSpinner ? '8px' : '0')};\n`;\n\nconst ButtonWithSpinner = ({ children, showSpinner, isDisabled, ...props }) => (\n  <SpinnerButton {...props} isDisabled={isDisabled}>\n    <SpinnerLabel showSpinner={showSpinner}>{children}</SpinnerLabel>\n    {showSpinner && <Spinner size=\"md\" />}\n  </SpinnerButton>\n);\n\nButtonWithSpinner.propTypes = {\n  showSpinner: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  isDisabled: PropTypes.bool\n};\n\nButtonWithSpinner.defaultProps = {\n  showSpinner: false,\n  isDisabled: false\n};\n\nexport default ButtonWithSpinner;\n","/**\n * Creates a data-driven-form schema for sharing/un-sharing portfolio\n */\nconst newShareSchema = (loadGroupOptions, permissionVerbs) => ({\n  fields: [\n    {\n      component: 'sub-form',\n      description: 'Invite group',\n      name: 'new_share',\n      key: '1',\n      fields: [\n        {\n          name: 'group-selection',\n          component: 'share-group-select',\n          inputName: 'group_uuid',\n          selectName: 'permissions',\n          loadOptions: loadGroupOptions,\n          isSearchable: true,\n          permissions: permissionVerbs\n        }\n      ]\n    }\n  ]\n});\n\nconst groupListSchema = (groupFieldList) => ({\n  fields: [\n    {\n      component: 'sub-form',\n      description: 'Groups with access',\n      name: 'share_list',\n      key: 'share_list',\n      fields: [...groupFieldList]\n    }\n  ]\n});\n\nconst groupShareSchema = (groupShareInfo, permissionVerbs) => ({\n  component: 'sub-form',\n  name: `${groupShareInfo.group_name}`,\n  key: `${groupShareInfo.group_name}`,\n  fields: [\n    {\n      name: `${groupShareInfo.group_name}`,\n      label: `${groupShareInfo.group_name}`,\n      component: 'share-group-edit',\n      options: permissionVerbs,\n      isClearable: true\n    }\n  ]\n});\n\nexport const createPortfolioShareSchema = (\n  shareInfo,\n  loadGroupOptions,\n  permissionVerbs\n) => {\n  const formSchema = newShareSchema(loadGroupOptions, permissionVerbs);\n  const groupInfoFields = shareInfo.map((group) =>\n    groupShareSchema(group, permissionVerbs)\n  );\n  const shareListSchema = { ...groupListSchema([...groupInfoFields]) };\n  const portfolioSchema = {\n    fields: [...formSchema.fields, ...shareListSchema.fields]\n  };\n  return portfolioSchema;\n};\n","import { getAxiosInstance, getPortfolioApi } from '../shared/user-login';\nimport { CATALOG_API_BASE } from '../../utilities/constants';\n\nconst axiosInstance = getAxiosInstance();\nconst userApi = getPortfolioApi();\n\nexport async function getShareInfo(portfolioId) {\n  return await axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios/${portfolioId}/share_info`\n  );\n}\n\nexport async function sharePortfolio(data) {\n  let policy = {\n    permissions: data.permissions.split(','),\n    group_uuids: [data.group_uuid]\n  };\n  return await userApi.sharePortfolio(data.id, policy);\n}\n\nexport async function unsharePortfolio(data) {\n  let policy = {\n    permissions: data.permissions,\n    group_uuids: [data.group_uuid]\n  };\n  return await userApi.unsharePortfolio(data.id, policy);\n}\n","import * as ShareHelper from '../../helpers/share/share-helper';\nimport * as ActionTypes from '../action-types';\n\nexport const fetchShareInfo = (portfolioId) => ({\n  type: ActionTypes.QUERY_PORTFOLIO,\n  payload: ShareHelper.getShareInfo(portfolioId)\n});\n\nexport const sharePortfolio = (portfolioData) => ({\n  type: ActionTypes.SHARE_PORTFOLIO,\n  payload: ShareHelper.sharePortfolio({\n    ...portfolioData\n  }),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success sharing portfolio',\n        description: 'The portfolio was shared successfully.'\n      }\n    }\n  }\n});\n\nexport const unsharePortfolio = (portfolioData) => ({\n  type: ActionTypes.UNSHARE_PORTFOLIO,\n  payload: ShareHelper.unsharePortfolio({\n    ...portfolioData\n  }),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success unsharing portfolio',\n        description: 'The portfolio was unshared successfully.'\n      }\n    }\n  }\n});\n","import { getAxiosInstance, getRbacGroupApi } from '../shared/user-login';\nimport { RBAC_API_BASE } from '../../utilities/constants';\n\nconst api = getRbacGroupApi();\n\nexport async function getRbacGroups() {\n  return await api.listGroups();\n}\n\nexport const fetchFilterGroups = (filterValue = '') =>\n  getAxiosInstance()\n    .get(\n      `${RBAC_API_BASE}/groups/${\n        filterValue.length > 0 ? `?name=${filterValue}` : ''\n      }`\n    )\n    .then(({ data }) =>\n      data.map(({ uuid, name }) => ({ label: name, value: uuid }))\n    );\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FormRenderer from '../common/form-renderer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal } from '@patternfly/react-core';\nimport { createPortfolioShareSchema } from '../../forms/portfolio-share-form.schema';\nimport { fetchPortfolios } from '../../redux/actions/portfolio-actions';\nimport {\n  fetchShareInfo,\n  sharePortfolio,\n  unsharePortfolio\n} from '../../redux/actions/share-actions';\nimport { ShareLoader } from '../../presentational-components/shared/loader-placeholders';\nimport { permissionOptions, permissionValues } from '../../utilities/constants';\nimport { fetchFilterGroups } from '../../helpers/rbac/rbac-helper';\nimport useQuery from '../../utilities/use-query';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nconst SharePortfolioModal = ({ closeUrl, removeQuery }) => {\n  const dispatch = useDispatch();\n  const { push } = useEnhancedHistory(removeQuery);\n  const [{ portfolio }, search] = useQuery(['portfolio']);\n  const [isFetching, setFetching] = useState(true);\n  const initialValues = useSelector(({ portfolioReducer: { portfolios } }) =>\n    portfolios.data.find(({ id }) => id === portfolio)\n  );\n  const { shareInfo } = useSelector(({ shareReducer: { shareInfo } }) => ({\n    shareInfo\n  }));\n  useEffect(() => {\n    setFetching(true);\n    dispatch(fetchShareInfo(portfolio))\n      .then(() => setFetching(false))\n      .catch(() => setFetching(false));\n  }, []);\n\n  const initialShares = () => {\n    let initialGroupShareList = shareInfo.map((group) => {\n      const groupPermissions = group.permissions.filter(\n        (permission) => permissionValues.indexOf(permission) > -1\n      );\n      const groupName = group.group_name;\n      let options = permissionOptions.find(\n        (perm) => perm.value === groupPermissions.sort().join(',')\n      );\n      return {\n        [groupName]: options ? options.value : 'Unknown'\n      };\n    });\n    let initialShareList = initialGroupShareList.reduce(\n      (acc, curr) => ({ ...acc, ...curr }),\n      {}\n    );\n    return initialShareList;\n  };\n\n  const loadGroupOptions = (inputValue) => fetchFilterGroups(inputValue);\n\n  const onSubmit = (data) => {\n    let sharePromises = [];\n    if (data.group_uuid && data.permissions) {\n      sharePromises.push(dispatch(sharePortfolio(data)));\n    }\n\n    shareInfo.forEach((share) => {\n      let initialPerm = share.permissions.sort().join(',');\n      if (data[share.group_name] !== initialPerm) {\n        if (!data[share.group_name]) {\n          const sharePermissions = share.permissions.filter(\n            (permission) => permissionValues.indexOf(permission) > -1\n          );\n          sharePromises.push(\n            dispatch(\n              unsharePortfolio({\n                id: portfolio,\n                permissions: sharePermissions,\n                group_uuid: share.group_uuid\n              })\n            )\n          );\n        } else {\n          if (\n            share.permissions.length > data[share.group_name].split(',').length\n          ) {\n            sharePromises.push(\n              dispatch(\n                unsharePortfolio({\n                  id: portfolio,\n                  permissions: ['update'],\n                  group_uuid: share.group_uuid\n                })\n              )\n            );\n          } else {\n            sharePromises.push(\n              dispatch(\n                sharePortfolio({\n                  id: portfolio,\n                  permissions: data[share.group_name],\n                  group_uuid: share.group_uuid\n                })\n              )\n            );\n          }\n        }\n      }\n    });\n    push({ pathname: closeUrl, search });\n\n    return Promise.all(sharePromises).then(() => dispatch(fetchPortfolios()));\n  };\n\n  const onCancel = () => push({ pathname: closeUrl, search });\n\n  return (\n    <Modal title={'Share portfolio'} isOpen isSmall onClose={onCancel}>\n      {isFetching && <ShareLoader />}\n      {!isFetching && (\n        <FormRenderer\n          schema={createPortfolioShareSchema(\n            shareInfo,\n            loadGroupOptions,\n            permissionOptions\n          )}\n          schemaType=\"default\"\n          onSubmit={onSubmit}\n          onCancel={onCancel}\n          initialValues={{ ...initialValues, ...initialShares() }}\n          formContainer=\"modal\"\n          buttonsLabels={{ submitLabel: 'Send' }}\n        />\n      )}\n    </Modal>\n  );\n};\n\nSharePortfolioModal.propTypes = {\n  closeUrl: PropTypes.string.isRequired,\n  removeQuery: PropTypes.bool\n};\n\nexport default SharePortfolioModal;\n","import { componentTypes } from '@data-driven-forms/react-form-renderer';\n\nimport asyncFormValidator from '../utilities/async-form-validator';\nimport { fetchPortfolioByName } from '../helpers/portfolio/portfolio-helper';\n\nconst validateName = (name, portfolioId) =>\n  fetchPortfolioByName(name)\n    .then(({ data }) => {\n      if (!name || name.trim().length === 0) {\n        return 'Required';\n      }\n\n      return data.find(\n        (portfolio) => portfolio.name === name && portfolio.id !== portfolioId\n      )\n        ? 'Name has already been taken'\n        : undefined;\n    })\n    .catch((error) => error.data);\n\nconst debouncedValidator = asyncFormValidator(validateName);\n\n/**\n * Creates a data-driven-form schema for adding/editing portfolio\n * @param {bool} newRecord sets the variant of portfolio form\n * @param {Function} loadWorkflows async callback that loads workflows\n */\nexport const createPortfolioSchema = (newRecord, portfolioId) => ({\n  fields: [\n    {\n      label: 'Name',\n      name: 'name',\n      component: componentTypes.TEXT_FIELD,\n      isRequired: true,\n      validate: [(value) => debouncedValidator(value, portfolioId)]\n    },\n    {\n      label: 'Description',\n      component: componentTypes.TEXTAREA,\n      name: 'description'\n    }\n  ]\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal } from '@patternfly/react-core';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\n\nimport FormRenderer from '../common/form-renderer';\nimport { createPortfolioSchema } from '../../forms/portfolio-form.schema';\nimport {\n  addPortfolio,\n  updatePortfolio\n} from '../../redux/actions/portfolio-actions';\nimport useQuery from '../../utilities/use-query';\nimport { getPortfolioFromState } from '../../helpers/portfolio/portfolio-helper';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\nimport SpinnerWrapper from '../../presentational-components/styled-components/spinner-wrapper';\n\nconst AddPortfolioModal = ({ removeQuery, closeTarget }) => {\n  const dispatch = useDispatch();\n  const [{ portfolio: portfolioId }] = useQuery(['portfolio']);\n  const { push } = useEnhancedHistory(removeQuery);\n  const initialValues = useSelector(({ portfolioReducer }) =>\n    getPortfolioFromState(portfolioReducer, portfolioId)\n  );\n  const onSubmit = (data) => {\n    push(closeTarget);\n    return initialValues\n      ? dispatch(updatePortfolio(data))\n      : dispatch(addPortfolio(data));\n  };\n\n  const editVariant =\n    portfolioId && initialValues && Object.keys(initialValues).length > 0;\n\n  return (\n    <Modal\n      title={portfolioId ? 'Edit portfolio' : 'Create portfolio'}\n      isOpen\n      onClose={() => push(closeTarget)}\n      isSmall\n    >\n      {!portfolioId || editVariant ? (\n        <FormRenderer\n          schema={createPortfolioSchema(!initialValues, portfolioId)}\n          schemaType=\"default\"\n          onSubmit={onSubmit}\n          onCancel={() => push(closeTarget)}\n          initialValues={{ ...initialValues }}\n          formContainer=\"modal\"\n          buttonsLabels={{ submitLabel: portfolioId ? 'Save' : 'Create' }}\n        />\n      ) : (\n        <SpinnerWrapper className=\"pf-u-m-md\">\n          <Spinner />\n        </SpinnerWrapper>\n      )}\n    </Modal>\n  );\n};\n\nAddPortfolioModal.propTypes = {\n  removeQuery: PropTypes.bool,\n  closeTarget: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string\n    })\n  ]).isRequired\n};\n\nexport default AddPortfolioModal;\n","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  LevelItem\n} from '@patternfly/react-core';\nimport ButtonWithSpinner from '../../../presentational-components/shared/button-with-spinner';\nimport CatalogLink from '../../common/catalog-link';\n\nconst DetailToolbarActions = ({\n  copyUrl,\n  orderUrl,\n  editUrl,\n  workflowUrl,\n  editSurveyUrl,\n  isOpen,\n  setOpen,\n  isFetching,\n  availability\n}) => (\n  <Fragment>\n    <LevelItem>\n      <CatalogLink\n        isDisabled={isFetching || availability === 'unavailable'}\n        pathname={orderUrl}\n        preserveSearch\n      >\n        <ButtonWithSpinner\n          isDisabled={isFetching || availability === 'unavailable'}\n          showSpinner={isFetching}\n          variant=\"primary\"\n          id=\"order-portfolio-item\"\n        >\n          Order\n        </ButtonWithSpinner>\n      </CatalogLink>\n    </LevelItem>\n    {\n      <LevelItem style={{ marginLeft: 16 }}>\n        <Dropdown\n          isPlain\n          onToggle={setOpen}\n          onSelect={() => setOpen(false)}\n          position={DropdownPosition.right}\n          toggle={<KebabToggle onToggle={(isOpen) => setOpen(isOpen)} />}\n          isOpen={isOpen}\n          dropdownItems={[\n            <DropdownItem\n              aria-label=\"Edit Portfolio\"\n              key=\"edit-portfolio\"\n              component={\n                <CatalogLink pathname={editUrl} preserveSearch>\n                  Edit\n                </CatalogLink>\n              }\n              role=\"link\"\n            />,\n            <DropdownItem\n              aria-label=\"Copy Portfolio\"\n              key=\"copy-portfolio\"\n              component={\n                <CatalogLink pathname={copyUrl} preserveSearch>\n                  Copy\n                </CatalogLink>\n              }\n              role=\"link\"\n            />,\n            <DropdownItem\n              aria-label=\"Set approval\"\n              key=\"edit-approval_workflow\"\n              component={\n                <CatalogLink pathname={workflowUrl} preserveSearch>\n                  Set approval\n                </CatalogLink>\n              }\n              role=\"link\"\n            />,\n            <DropdownItem\n              aria-label=\"Edit survey\"\n              key=\"edit-survey\"\n              component={\n                <CatalogLink pathname={editSurveyUrl} preserveSearch>\n                  Edit survey\n                </CatalogLink>\n              }\n              role=\"link\"\n            />\n          ]}\n        />\n      </LevelItem>\n    }\n  </Fragment>\n);\n\nDetailToolbarActions.propTypes = {\n  orderUrl: PropTypes.string.isRequired,\n  editUrl: PropTypes.string.isRequired,\n  copyUrl: PropTypes.string.isRequired,\n  editSurveyUrl: PropTypes.string.isRequired,\n  workflowUrl: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool,\n  setOpen: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool,\n  availability: PropTypes.oneOf(['available', 'unavailable']).isRequired\n};\n\nDetailToolbarActions.defaultProps = {\n  isFetching: false\n};\n\nexport default DetailToolbarActions;\n","import React, { useState, useRef } from 'react';\nimport { EditIcon } from '@patternfly/react-icons';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport styled from 'styled-components';\n\nconst UploadButton = styled.button`\n  border: none;\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding-left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  svg {\n    background-color: rgba(255, 255, 255, 0.8);\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n`;\n\nconst UploadIconWrapper = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst ImagePreview = styled.img`\n  height: 64px;\n  max-width: 300px;\n  object-fit: cover;\n`;\n\nconst IconUpload = ({ uploadIcon, children }) => {\n  const inputRef = useRef();\n  const [image, setImage] = useState();\n  const [isUploading, setIsUploading] = useState(false);\n  const handleClick = () => inputRef.current.click();\n  const dispatch = useDispatch();\n\n  return (\n    <UploadIconWrapper>\n      <input\n        accept=\".png,.svg,.jpeg\"\n        onChange={(event) => {\n          setImage(event.target.files[0]);\n          setIsUploading(true);\n          uploadIcon(event.target.files[0])\n            .then(() => setIsUploading(false))\n            .catch((error) => {\n              dispatch(\n                addNotification({\n                  variant: 'danger',\n                  title: 'Icon upload error',\n                  description: error.data.errors[0].detail,\n                  dismissable: true\n                })\n              );\n              setImage(undefined);\n              setIsUploading(false);\n            });\n        }}\n        ref={inputRef}\n        type=\"file\"\n        id=\"icon-upload\"\n        hidden\n      />\n      <UploadButton disabled={isUploading} onClick={handleClick}>\n        {isUploading ? <Spinner size=\"md\" /> : <EditIcon size=\"sm\" />}\n      </UploadButton>\n      {!image && children}\n      {image && (\n        <ImagePreview\n          style={{ height: 64 }}\n          src={URL.createObjectURL(image)}\n          id={image.name}\n        />\n      )}\n    </UploadIconWrapper>\n  );\n};\n\nIconUpload.propTypes = {\n  uploadIcon: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default IconUpload;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Link } from 'react-router-dom';\nimport {\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Button,\n  Flex,\n  Dropdown,\n  KebabToggle,\n  DropdownItem\n} from '@patternfly/react-core';\n\nimport DetailToolbarActions from './detail-toolbar-actions';\nimport { CATALOG_API_BASE } from '../../../utilities/constants';\nimport CardIcon from '../../../presentational-components/shared/card-icon';\nimport TopToolbar from '../../../presentational-components/shared/top-toolbar';\nimport IconUpload from './icon-upload';\nimport ButtonWithSpinner from '../../../presentational-components/shared/button-with-spinner';\nimport { StyledLevelItem } from '../../../presentational-components/styled-components/level';\n\nconst PortfolioItemIconItem = ({ uploadIcon, id, sourceId }) => (\n  <IconUpload uploadIcon={uploadIcon}>\n    <CardIcon\n      src={`${CATALOG_API_BASE}/portfolio_items/${id}/icon`}\n      sourceId={sourceId}\n      height={64}\n    />\n  </IconUpload>\n);\n\nPortfolioItemIconItem.propTypes = {\n  uploadIcon: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  sourceId: PropTypes.string.isRequired\n};\n\nexport const PortfolioItemDetailToolbar = ({\n  url,\n  isOpen,\n  product,\n  setOpen,\n  isFetching,\n  uploadIcon,\n  availability\n}) => (\n  <TopToolbar breadcrumbsSpacing={false}>\n    <Level>\n      <StyledLevelItem alignEnd className=\"pf-l-flex\">\n        <PortfolioItemIconItem\n          uploadIcon={uploadIcon}\n          id={product.id}\n          sourceId={product.service_offering_source_ref}\n        />\n        <TextContent className=\"pf-u-ml-md\">\n          <Text component={TextVariants.h1}>{product.name}</Text>\n        </TextContent>\n      </StyledLevelItem>\n      <LevelItem style={{ minHeight: 36 }}>\n        <Level>\n          <Route\n            exact\n            path={url}\n            render={(...args) => (\n              <DetailToolbarActions\n                isOpen={isOpen}\n                setOpen={(open) => setOpen(open)}\n                orderUrl={`${url}/order`}\n                editUrl={`${url}/edit`}\n                copyUrl={`${url}/copy`}\n                editSurveyUrl={`${url}/edit-survey`}\n                workflowUrl={`${url}/edit-workflow`}\n                isFetching={isFetching}\n                availability={availability}\n                {...args}\n              />\n            )}\n          />\n        </Level>\n      </LevelItem>\n    </Level>\n    <Level>\n      <LevelItem>\n        <TextContent>\n          <Text component={TextVariants.small}>{product.distributor}</Text>\n        </TextContent>\n      </LevelItem>\n    </Level>\n  </TopToolbar>\n);\n\nPortfolioItemDetailToolbar.propTypes = {\n  url: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool,\n  product: PropTypes.shape({\n    distributor: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    service_offering_source_ref: PropTypes.string.isRequired\n  }).isRequired,\n  setOpen: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool,\n  uploadIcon: PropTypes.func.isRequired,\n  availability: PropTypes.oneOf(['available', 'unavailable']).isRequired\n};\n\nPortfolioItemDetailToolbar.defaultProps = {\n  isFetching: false\n};\n\nconst SurveyEditorDropdown = ({ handleResetSurvey }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  return (\n    <Dropdown\n      isOpen={isOpen}\n      isPlain\n      onSelect={() => setIsOpen(false)}\n      position=\"right\"\n      toggle={<KebabToggle onToggle={(isOpen) => setIsOpen(isOpen)} />}\n      dropdownItems={[\n        <DropdownItem\n          onClick={handleResetSurvey}\n          component=\"button\"\n          key=\"synchronize\"\n        >\n          Restore to Ansible Tower version\n        </DropdownItem>\n      ]}\n    />\n  );\n};\n\nSurveyEditorDropdown.propTypes = {\n  handleResetSurvey: PropTypes.func.isRequired\n};\n\nexport const SurveyEditingToolbar = ({\n  uploadIcon,\n  product,\n  handleSaveSurvey,\n  closeUrl,\n  search,\n  isFetching,\n  isValid,\n  modified,\n  handleResetSurvey\n}) => (\n  <TopToolbar breadcrumbsSpacing={false} breadcrumbs={true}>\n    <Level>\n      <StyledLevelItem alignEnd className=\"pf-l-flex\">\n        <PortfolioItemIconItem\n          uploadIcon={uploadIcon}\n          id={product.id}\n          sourceId={product.service_offering_source_ref}\n        />\n        <TextContent className=\"pf-u-ml-md\">\n          <Text component={TextVariants.h1}>\n            Editing survey: {product.name}\n          </Text>\n        </TextContent>\n      </StyledLevelItem>\n      <LevelItem>\n        <Flex className=\"align-items-center\">\n          <ButtonWithSpinner\n            variant=\"primary\"\n            showSpinner={isFetching}\n            isDisabled={isFetching || !isValid}\n            onClick={handleSaveSurvey}\n          >\n            Save\n          </ButtonWithSpinner>\n          <Link\n            to={{\n              pathname: closeUrl,\n              search\n            }}\n          >\n            <Button variant=\"link\">Cancel</Button>\n          </Link>\n          {modified && (\n            <SurveyEditorDropdown handleResetSurvey={handleResetSurvey} />\n          )}\n        </Flex>\n      </LevelItem>\n    </Level>\n  </TopToolbar>\n);\n\nSurveyEditingToolbar.propTypes = {\n  uploadIcon: PropTypes.func.isRequired,\n  product: PropTypes.object,\n  handleSaveSurvey: PropTypes.func.isRequired,\n  closeUrl: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired,\n  isFetching: PropTypes.bool,\n  isValid: PropTypes.bool,\n  modified: PropTypes.bool,\n  handleResetSurvey: PropTypes.func\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.EditIconConfig = void 0;\n\nvar _createIcon = _interopRequireDefault(require(\"../createIcon\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* This file is generated by createIcons.js any changes will be lost. */\nvar EditIconConfig = {\n  name: 'EditIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z',\n  yOffset: '',\n  xOffset: '',\n  transform: ''\n};\nexports.EditIconConfig = EditIconConfig;\n\nvar _default = (0, _createIcon[\"default\"])(EditIconConfig);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=edit-icon.js.map","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  DropdownItem\n} from '@patternfly/react-core';\n\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport { createSingleItemGroup, createLinkButton } from '../helpers';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\n/**\n * Cannot be anonymous function. Requires Component.diplayName to work with PF4 refs\n */\nconst PortfolioActionsToolbar = ({\n  editPortfolioRoute,\n  workflowPortfolioRoute,\n  removePortfolioRoute,\n  copyInProgress,\n  copyPortfolio\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  return (\n    <Dropdown\n      className=\"pf-u-ml-md\"\n      onSelect={() => setOpen(false)}\n      position={DropdownPosition.right}\n      toggle={<KebabToggle onToggle={setOpen} isDisabled={copyInProgress} />}\n      isOpen={isOpen}\n      isPlain\n      dropdownItems={[\n        <DropdownItem\n          component=\"button\"\n          aria-label=\"Copy Portfolio\"\n          key=\"copy-portfolio\"\n          onClick={copyPortfolio}\n        >\n          Copy\n        </DropdownItem>,\n        <DropdownItem\n          aria-label=\"Set approval workflow\"\n          key=\"edit-approval_workflow\"\n          component={\n            <CatalogLink preserveSearch pathname={workflowPortfolioRoute}>\n              Set approval\n            </CatalogLink>\n          }\n          role=\"link\"\n        />,\n        <DropdownItem\n          aria-label=\"Edit Portfolio\"\n          key=\"edit-portfolio\"\n          component={\n            <CatalogLink preserveSearch pathname={editPortfolioRoute}>\n              Edit\n            </CatalogLink>\n          }\n          role=\"link\"\n        />,\n        <DropdownItem\n          aria-label=\"Remove Portfolio\"\n          key=\"delete-portfolio\"\n          component={\n            <CatalogLink preserveSearch pathname={removePortfolioRoute}>\n              Delete\n            </CatalogLink>\n          }\n          role=\"link\"\n          className=\"pf-c-dropdown__menu-item\"\n        />\n      ]}\n    />\n  );\n};\n\nPortfolioActionsToolbar.propTypes = {\n  removePortfolioRoute: PropTypes.string.isRequired,\n  editPortfolioRoute: PropTypes.string.isRequired,\n  workflowPortfolioRoute: PropTypes.string.isRequired,\n  copyPortfolio: PropTypes.func.isRequired,\n  copyInProgress: PropTypes.bool\n};\n\nconst PortfolioItemsActionsDropdown = ({\n  removeProducts,\n  isDisabled,\n  itemsSelected,\n  hidden\n}) => {\n  const [isOpen, setOpen] = useState(false);\n\n  if (hidden) {\n    return null;\n  }\n\n  return (\n    <Dropdown\n      onSelect={() => setOpen(false)}\n      position={DropdownPosition.right}\n      toggle={\n        <KebabToggle\n          id=\"remove-products-dropdown-toggle\"\n          onToggle={(open) => setOpen(open)}\n          isDisabled={isDisabled}\n        />\n      }\n      isOpen={isOpen}\n      isPlain\n      dropdownItems={[\n        <DropdownItem\n          id=\"remove-products\"\n          isDisabled={!itemsSelected}\n          onClick={removeProducts}\n          aria-label=\"Remove products from portfolio\"\n          key=\"remove-products\"\n        >\n          Remove products\n        </DropdownItem>\n      ]}\n    />\n  );\n};\n\nPortfolioItemsActionsDropdown.propTypes = {\n  removeProducts: PropTypes.func.isRequired,\n  isDisabled: PropTypes.bool,\n  itemsSelected: PropTypes.bool,\n  hidden: PropTypes.bool\n};\n\nconst createPortfolioToolbarSchema = ({\n  title,\n  addProductsRoute,\n  copyPortfolio,\n  sharePortfolioRoute,\n  editPortfolioRoute,\n  workflowPortfolioRoute,\n  removePortfolioRoute,\n  copyInProgress,\n  isLoading,\n  removeProducts,\n  itemsSelected,\n  meta,\n  fetchPortfolioItemsWithPortfolio,\n  portfolioId,\n  description,\n  filterProps: { searchValue, onFilterChange, placeholder }\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'portfolio-top-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'portfolio-toolbar-title',\n          noData: meta.noData,\n          title,\n          description,\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'portfolio-actions',\n              fields: [\n                createLinkButton({\n                  pathname: sharePortfolioRoute,\n                  preserveSearch: true,\n                  variant: 'secondary',\n                  title: 'Share',\n                  isDisabled: copyInProgress,\n                  key: 'portfolio-share-button'\n                }),\n                {\n                  component: PortfolioActionsToolbar,\n                  editPortfolioRoute,\n                  workflowPortfolioRoute,\n                  removePortfolioRoute,\n                  copyPortfolio,\n                  copyInProgress,\n                  key: 'portfolio-actions-dropdown'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'portfolio-items-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'portfolio-items-actions',\n                  fields: [\n                    createSingleItemGroup({\n                      groupName: 'filter-portfolio-items',\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      isClearable: true,\n                      key: 'portfolio-items-filter',\n                      searchValue,\n                      onFilterChange,\n                      placeholder\n                    }),\n                    createSingleItemGroup({\n                      hidden: meta.count === 0,\n                      groupName: 'add-portfolio-items',\n                      key: 'portfolio-items-add-group',\n                      ...createLinkButton({\n                        preserveSearch: true,\n                        pathname: addProductsRoute,\n                        isDisabled: isLoading || copyInProgress,\n                        variant: 'primary',\n                        title: 'Add products',\n                        key: 'add-products-button'\n                      })\n                    }),\n                    {\n                      hidden: meta.count === 0,\n                      component: PortfolioItemsActionsDropdown,\n                      isDisabled: copyInProgress,\n                      key: 'remove-products-actions-dropdown',\n                      removeProducts,\n                      itemsSelected\n                    }\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            key: 'portfolio-items-pagination',\n                            meta,\n                            apiRequest: fetchPortfolioItemsWithPortfolio,\n                            apiProps: portfolioId,\n                            isCompact: true\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport {\n  Modal,\n  Level,\n  LevelItem,\n  Title,\n  TextContent,\n  Text,\n  TextVariants,\n  Split,\n  SplitItem\n} from '@patternfly/react-core';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\n\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport FormRenderer from './form-renderer';\nimport {\n  fetchServicePlans,\n  sendSubmitOrder\n} from '../../redux/actions/order-actions';\nimport SpinnerWrapper from '../../presentational-components/styled-components/spinner-wrapper';\n\nconst OrderModal = ({ closeUrl }) => {\n  const [isFetching, setFetching] = useState(true);\n  const { search } = useLocation();\n  const { push } = useHistory();\n  const dispatch = useDispatch();\n  const { portfolioItem } = useSelector(\n    ({ portfolioReducer: { portfolioItem } }) => portfolioItem\n  );\n  const servicePlans = useSelector(\n    ({ orderReducer: { servicePlans } }) => servicePlans\n  );\n\n  useEffect(() => {\n    dispatch(fetchServicePlans(portfolioItem.id)).then(() =>\n      setFetching(false)\n    );\n  }, []);\n\n  const onSubmit = (data) => {\n    dispatch(\n      sendSubmitOrder({\n        portfolio_item_id: portfolioItem.id,\n        service_parameters: data\n      })\n    );\n    push({\n      pathname: closeUrl,\n      search\n    });\n  };\n\n  return (\n    <Modal\n      isOpen\n      title=\"\"\n      hideTitle\n      onClose={() =>\n        push({\n          pathname: closeUrl,\n          search\n        })\n      }\n      isSmall\n    >\n      <div className=\"pf-u-mb-md\">\n        <Split>\n          <SplitItem className=\"pf-u-mr-sm\">\n            <CardIcon\n              height={64}\n              src={`${CATALOG_API_BASE}/portfolio_items/${portfolioItem.id}/icon`}\n              sourceId={portfolioItem.service_offering_source_ref}\n            />\n          </SplitItem>\n          <SplitItem isFilled>\n            <Level>\n              <LevelItem>\n                <Title headingLevel=\"h2\" size=\"3xl\">\n                  {portfolioItem.name}\n                </Title>\n              </LevelItem>\n            </Level>\n            <Level>\n              <LevelItem>\n                <TextContent>\n                  <Text component={TextVariants.small}>\n                    {portfolioItem.name}\n                  </Text>\n                </TextContent>\n              </LevelItem>\n            </Level>\n          </SplitItem>\n        </Split>\n      </div>\n      {isFetching ? (\n        <SpinnerWrapper className=\"pf-u-m-sm\">\n          <Spinner />\n        </SpinnerWrapper>\n      ) : (\n        <FormRenderer\n          schema={servicePlans[0].create_json_schema.schema}\n          onSubmit={onSubmit}\n          formContainer=\"modal\"\n        />\n      )}\n    </Modal>\n  );\n};\n\nOrderModal.propTypes = {\n  orderData: PropTypes.func,\n  closeUrl: PropTypes.string.isRequired\n};\n\nexport default OrderModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, WrenchIcon } from '@patternfly/react-icons';\n\nimport ContentGalleryEmptyState, {\n  EmptyStatePrimaryAction\n} from '../../presentational-components/shared/content-gallery-empty-state';\nimport { Button } from '@patternfly/react-core';\n\nconst PortfolioEmptyState = ({ url, handleFilterChange, meta }) => {\n  const NoDataAction = () => (\n    <EmptyStatePrimaryAction url={url} label=\"Add products\" />\n  );\n\n  const FilterAction = () => (\n    <Button variant=\"link\" onClick={() => handleFilterChange('')}>\n      Clear all filters\n    </Button>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? NoDataAction : FilterAction,\n    title: meta.noData ? 'No products yet' : 'No results found',\n    description: meta.noData\n      ? 'No products in your portfolio'\n      : 'No results match the filter criteria. Remove all filters or clear all filters to show results.',\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n  return <ContentGalleryEmptyState {...emptyStateProps} />;\n};\n\nPortfolioEmptyState.propTypes = {\n  url: PropTypes.string.isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n  meta: PropTypes.shape({\n    noData: PropTypes.bool\n  }).isRequired\n};\n\nexport default PortfolioEmptyState;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, useRouteMatch } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createPortfolioToolbarSchema from '../../toolbar/schemas/portfolio-toolbar.schema';\nimport AddPortfolioModal from './add-portfolio-modal';\nimport RemovePortfolioModal from './remove-portfolio-modal';\nimport SharePortfolioModal from './share-portfolio-modal';\nimport OrderModal from '../common/order-modal';\nimport PortfolioEmptyState from './portfolio-empty-state';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport EditApprovalWorkflow from '../common/edit-approval-workflow';\nimport { PORTFOLIO_RESOURCE_TYPE } from '../../utilities/constants';\nimport PortfolioItem from './portfolio-item';\nimport { fetchPortfolioItemsWithPortfolio } from '../../redux/actions/portfolio-actions';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useQuery from '../../utilities/use-query';\nimport {\n  PORTFOLIO_ROUTE,\n  NESTED_EDIT_PORTFOLIO_ROUTE,\n  NESTED_REMOVE_PORTFOLIO_ROUTE,\n  NESTED_SHARE_PORTFOLIO_ROUTE,\n  NESTED_WORKFLOW_PORTFOLIO_ROUTE,\n  NESTED_ORDER_PORTFOLIO_ROUTE\n} from '../../constants/routes';\n\nconst PortfolioItems = ({\n  routes,\n  handleFilterChange,\n  removeProducts,\n  copyPortfolio,\n  stateDispatch,\n  state: {\n    removeInProgress,\n    isFetching,\n    isFiltering,\n    copyInProgress,\n    selectedItems,\n    filterValue\n  }\n}) => {\n  const { data, meta, name, description } = useSelector(\n    ({\n      portfolioReducer: {\n        portfolioItems: { data, meta },\n        selectedPortfolio: { name, description }\n      }\n    }) => ({ data, meta, name, description })\n  );\n  const { url } = useRouteMatch(PORTFOLIO_ROUTE);\n  const [{ portfolio: id }, search] = useQuery(['portfolio']);\n  const dispatch = useDispatch();\n\n  const items = data.map((item) => (\n    <PortfolioItem\n      key={item.id}\n      {...item}\n      pathname={`${url}/portfolio-item`}\n      searchParams={{\n        source: item.service_offering_source_ref,\n        'portfolio-item': item.id\n      }}\n      preserveSearch\n      isSelectable\n      onSelect={(selectedItem) =>\n        stateDispatch({ type: 'selectItem', payload: selectedItem })\n      }\n      isSelected={selectedItems.includes(item.id)}\n      removeInProgress={removeInProgress}\n    />\n  ));\n\n  const itemName = () => name || 'portfolio';\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPortfolioToolbarSchema({\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterChange,\n            placeholder: 'Filter by product...'\n          },\n          title: name,\n          description,\n          ...routes,\n          copyPortfolio,\n          isLoading: isFetching || isFiltering,\n          copyInProgress,\n          removeProducts: () => removeProducts(selectedItems),\n          itemsSelected: selectedItems.length > 0,\n          meta,\n          fetchPortfolioItemsWithPortfolio: (...args) =>\n            dispatch(fetchPortfolioItemsWithPortfolio(...args)),\n          portfolioId: id\n        })}\n      />\n      <Route exact path={NESTED_EDIT_PORTFOLIO_ROUTE}>\n        <AddPortfolioModal\n          closeTarget={{ pathname: PORTFOLIO_ROUTE, search }}\n        />\n      </Route>\n      <Route\n        exact\n        path={NESTED_REMOVE_PORTFOLIO_ROUTE}\n        component={RemovePortfolioModal}\n      />\n      <Route\n        exact\n        path={NESTED_SHARE_PORTFOLIO_ROUTE}\n        render={(...args) => (\n          <SharePortfolioModal closeUrl={routes.portfolioRoute} {...args} />\n        )}\n      />\n      <Route\n        exact\n        path={NESTED_WORKFLOW_PORTFOLIO_ROUTE}\n        render={(...args) => (\n          <EditApprovalWorkflow\n            querySelector=\"portfolio\"\n            pushParam={{ pathname: routes.portfolioRoute, search }}\n            closeUrl={routes.portfolioRoute}\n            objectType={PORTFOLIO_RESOURCE_TYPE}\n            objectName={itemName}\n            {...args}\n          />\n        )}\n      />\n      <Route\n        exact\n        path={NESTED_ORDER_PORTFOLIO_ROUTE}\n        render={(props) => (\n          <OrderModal {...props} closeUrl={routes.portfolioRoute} />\n        )}\n      />\n      <ContentGallery\n        items={items}\n        isLoading={isFetching || isFiltering}\n        renderEmptyState={() => (\n          <PortfolioEmptyState\n            handleFilterChange={handleFilterChange}\n            meta={meta}\n            url={routes.addProductsRoute}\n          />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiProps={id}\n            apiRequest={(...args) =>\n              dispatch(fetchPortfolioItemsWithPortfolio(...args))\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nPortfolioItems.propTypes = {\n  routes: PropTypes.shape({\n    addProductsRoute: PropTypes.string.isRequired,\n    portfolioRoute: PropTypes.string.isRequired\n  }).isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n  removeProducts: PropTypes.func.isRequired,\n  copyPortfolio: PropTypes.func.isRequired,\n  stateDispatch: PropTypes.func.isRequired,\n  state: PropTypes.shape({\n    removeInProgress: PropTypes.bool,\n    isFetching: PropTypes.bool,\n    isFiltering: PropTypes.bool,\n    copyInProgress: PropTypes.bool,\n    selectedItems: PropTypes.arrayOf(PropTypes.string),\n    filterValue: PropTypes.string\n  }).isRequired\n};\n\nexport default PortfolioItems;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport ContentGallery from '../../content-gallery/content-gallery';\nimport ContentGalleryEmptyState from '../../../presentational-components/shared/content-gallery-empty-state';\n\nconst EmptyState = ({ platform }) => (\n  <ContentGalleryEmptyState\n    Icon={SearchIcon}\n    title={\n      platform\n        ? 'No products match filter parameters'\n        : 'Please choose platform'\n    }\n    description={\n      platform\n        ? 'Please try to extend your search parameters '\n        : 'In order to select products for your portfolio you must choose platform first'\n    }\n  />\n);\n\nEmptyState.propTypes = {\n  platform: PropTypes.any\n};\n\nconst AddProductsGallery = ({ platform, ...props }) => (\n  <ContentGallery\n    editMode={true}\n    {...props}\n    renderEmptyState={() => <EmptyState platform={platform} />}\n  />\n);\n\nAddProductsGallery.propTypes = {\n  checkedItems: PropTypes.arrayOf(PropTypes.string),\n  platform: PropTypes.any\n};\n\nAddProductsGallery.defaultProps = {\n  checkedItems: []\n};\n\nexport default AddProductsGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { rawComponents } from '@data-driven-forms/pf4-component-mapper';\nimport { FilterIcon } from '@patternfly/react-icons';\n\nconst ValueContainer = ({ children }) => (\n  <div className=\"filter-value-container\" style={{ position: 'absolute' }}>\n    <FilterIcon style={{ marginLeft: 6 }} fill=\"#393F44\" />\n    {children}\n  </div>\n);\n\nValueContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]).isRequired\n};\n\nconst FilterSelect = (props) => {\n  if (!props.options || props.options.length === 0) {\n    return (\n      <div\n        key=\"filter-select-placeholder\"\n        id=\"filter-select-placeholder\"\n        className=\"filter-select\"\n      >\n        <rawComponents.Select\n          components={{ ValueContainer }}\n          simpleValue={false}\n          options={[]}\n          isDisabled\n          onChange={() => {}}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div key=\"filter-select\" id=\"filter-select\" className=\"filter-select\">\n      <rawComponents.Select\n        components={{ ValueContainer }}\n        simpleValue={false}\n        {...props}\n      />\n    </div>\n  );\n};\n\nFilterSelect.propTypes = {\n  options: PropTypes.array\n};\n\nexport default FilterSelect;\n","import { toolbarComponentTypes } from '../toolbar-mapper';\nimport { createSingleItemGroup, createLinkButton } from '../helpers';\nimport FilterSelect from '../../presentational-components/shared/filter-select';\nimport ButtonWithSpinner from '../../presentational-components/shared/button-with-spinner';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nconst createAddProductsSchema = ({\n  options,\n  isFetching,\n  searchValue,\n  portfolioName,\n  itemsSelected,\n  onOptionSelect,\n  onFilterChange,\n  portfolioRoute,\n  onClickAddToPortfolio,\n  meta,\n  platformId,\n  fetchPlatformItems\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'add-products-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          title: `Add products: ${portfolioName}`,\n          key: 'add-products-title'\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'add-products-actions',\n          fields: [\n            {\n              component: toolbarComponentTypes.TOOLBAR,\n              key: 'add-products-actions-toolbar',\n              fields: [\n                {\n                  component: toolbarComponentTypes.TOOLBAR_GROUP,\n                  key: 'products-filter-group',\n                  fields: [\n                    {\n                      component: FilterSelect,\n                      key: 'select-platforms',\n                      id: 'products-platform-select',\n                      isMulti: false,\n                      placeholder: 'Filter by Platform',\n                      options,\n                      onChange: onOptionSelect\n                    },\n                    {\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      key: 'filter-products-input',\n                      onFilterChange,\n                      searchValue,\n                      placeholder: 'Filter products'\n                    }\n                  ]\n                },\n                createSingleItemGroup({\n                  groupName: 'cancel-group-item',\n                  ...createLinkButton({\n                    key: 'add-products-cancel-button',\n                    pathname: portfolioRoute,\n                    variant: 'link',\n                    'aria-label': 'Cancel Add products to Portfolio',\n                    preserveSearch: true,\n                    title: 'Cancel'\n                  })\n                }),\n                createSingleItemGroup({\n                  groupName: 'add-group-item',\n                  key: 'portfolio-items-add-group',\n                  component: ButtonWithSpinner,\n                  variant: 'primary',\n                  'aria-label': 'Add products to Portfolio',\n                  title: 'Add',\n                  type: 'button',\n                  onClick: onClickAddToPortfolio,\n                  isDisabled: !itemsSelected || isFetching,\n                  showSpinner: isFetching,\n                  children: 'Add'\n                })\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-item',\n              fields: meta\n                ? [\n                    {\n                      component: AsyncPagination,\n                      key: 'add-products-pagination',\n                      meta,\n                      apiProps: platformId,\n                      apiRequest: fetchPlatformItems,\n                      isCompact: true\n                    }\n                  ]\n                : []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createAddProductsSchema;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\n\nimport AddProductsGallery from './add-products-gallery';\nimport ToolbarRenderer from '../../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport { filterServiceOffering } from '../../../helpers/shared/helpers';\nimport PlatformItem from '../../../presentational-components/platform/platform-item';\nimport createAddProductsSchema from '../../../toolbar/schemas/add-products-toolbar.schema';\nimport {\n  fetchPlatformItems,\n  fetchPlatforms\n} from '../../../redux/actions/platform-actions';\nimport {\n  addToPortfolio,\n  fetchPortfolioItemsWithPortfolio\n} from '../../../redux/actions/portfolio-actions';\nimport AsyncPagination from '../../common/async-pagination';\nimport useEnhancedHistory from '../../../utilities/use-enhanced-history';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst renderGalleryItems = (items = [], checkItem, checkedItems, filter) =>\n  items\n    .filter((item) => filterServiceOffering(item, filter))\n    .map((item) => (\n      <PlatformItem\n        key={item.id}\n        {...item}\n        editMode\n        onToggleItemSelect={() => checkItem(item.id)}\n        checked={checkedItems.includes(item.id)}\n      />\n    ));\n\nconst AddProductsToPortfolio = ({ portfolioRoute }) => {\n  const [searchValue, handleFilterChange] = useState('');\n  const [selectedPlatform, setSelectedPlatform] = useState(undefined);\n  const [checkedItems, setCheckedItems] = useState([]);\n  const [isFetching, setFetching] = useState(false);\n  const { push } = useEnhancedHistory();\n  const dispatch = useDispatch();\n  const { portfolio, platforms, platformItems, isLoading } = useSelector(\n    ({\n      portfolioReducer: { selectedPortfolio },\n      platformReducer: { platforms, platformItems, isPlatformDataLoading }\n    }) => ({\n      platforms,\n      platformItems,\n      isLoading: isPlatformDataLoading,\n      portfolio: selectedPortfolio\n    })\n  );\n\n  useEffect(() => {\n    dispatch(fetchPlatforms());\n  }, []);\n\n  const checkItem = (itemId) => {\n    const index = checkedItems.indexOf(itemId);\n    return index > -1\n      ? [...checkedItems.slice(0, index), ...checkedItems.slice(index + 1)]\n      : [...checkedItems, itemId];\n  };\n\n  const items =\n    selectedPlatform && platformItems[selectedPlatform.id]\n      ? platformItems[selectedPlatform.id].data\n      : [];\n  const meta =\n    selectedPlatform &&\n    platformItems[selectedPlatform.id] &&\n    platformItems[selectedPlatform.id].meta;\n\n  const handleAddToPortfolio = () => {\n    setFetching(true);\n    return dispatch(addToPortfolio(portfolio.id, checkedItems))\n      .then(() => setFetching(false))\n      .then(() =>\n        push({ pathname: portfolioRoute, search: `?portfolio=${portfolio.id}` })\n      )\n      .then(() => dispatch(fetchPortfolioItemsWithPortfolio(portfolio.id)))\n      .catch(() => setFetching(false));\n  };\n\n  const onPlatformSelect = (platform) => {\n    setSelectedPlatform(platform);\n    dispatch(fetchPlatformItems(platform.id, null, defaultSettings));\n  };\n\n  return (\n    <Section>\n      <ToolbarRenderer\n        schema={createAddProductsSchema({\n          options: platforms.map((platform) => ({\n            value: platform.id,\n            label: platform.name,\n            id: platform.id\n          })),\n          isFetching,\n          portfolioName: (portfolio && portfolio.name) || '',\n          itemsSelected: checkedItems.length > 0,\n          onOptionSelect: onPlatformSelect,\n          onFilterChange: (value) => handleFilterChange(value),\n          portfolioRoute,\n          onClickAddToPortfolio: handleAddToPortfolio,\n          meta,\n          platformId: selectedPlatform && selectedPlatform.id,\n          searchValue,\n          fetchPlatformItems: (id, options) =>\n            fetchPlatformItems(id, searchValue, options)\n        })}\n      />\n      <AddProductsGallery\n        platform={!!selectedPlatform}\n        checkedItems={checkedItems}\n        isLoading={isLoading}\n        items={renderGalleryItems(\n          items,\n          (itemId) => setCheckedItems(checkItem(itemId)),\n          checkedItems,\n          searchValue\n        )}\n      />\n      {meta && meta.count > 0 && (\n        <div className=\"pf-u-p-lg global-primary-background content-layout\">\n          <AsyncPagination\n            meta={meta}\n            apiProps={selectedPlatform && selectedPlatform.id}\n            apiRequest={(id, options) =>\n              fetchPlatformItems(id, searchValue, options)\n            }\n            dropDirection=\"up\"\n          />\n        </div>\n      )}\n    </Section>\n  );\n};\n\nAddProductsToPortfolio.propTypes = {\n  portfolioRoute: PropTypes.string.isRequired\n};\n\nexport default AddProductsToPortfolio;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport EllipsisTextContainer from '../../../presentational-components/styled-components/ellipsis-text-container';\n\nconst ItemDetailInfoBar = ({ product, source, portfolio }) => (\n  <TextContent>\n    <Text id=\"source-name\" component={TextVariants.h6}>\n      <span>Platform</span>\n      <br />\n      <EllipsisTextContainer>\n        <span>{source.name}</span>\n      </EllipsisTextContainer>\n    </Text>\n    <Text id=\"portfolio-name\" component={TextVariants.h6}>\n      <span>Portfolio</span>\n      <br />\n      <EllipsisTextContainer>\n        <span>{portfolio.name}</span>\n      </EllipsisTextContainer>\n    </Text>\n    {product.distributor && (\n      <Text id=\"distributor\" component={TextVariants.h6}>\n        <span>Vendor</span>\n        <br />\n        <EllipsisTextContainer>\n          <span>{product.distributor}</span>\n        </EllipsisTextContainer>\n      </Text>\n    )}\n    <Text id=\"created_at\" component={TextVariants.h6}>\n      <span>Created at</span>\n      <br />\n      <EllipsisTextContainer>\n        <DateFormat variant=\"relative\" date={product.created_at} />\n      </EllipsisTextContainer>\n    </Text>\n  </TextContent>\n);\n\nItemDetailInfoBar.propTypes = {\n  product: PropTypes.shape({\n    distributor: PropTypes.string,\n    updated_at: PropTypes.string,\n    created_at: PropTypes.string.isRequired\n  }).isRequired,\n  source: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  }).isRequired,\n  portfolio: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  }).isRequired\n};\n\nexport default ItemDetailInfoBar;\n","import {\n  componentTypes,\n  validatorTypes\n} from '@data-driven-forms/react-form-renderer';\n\nconst editPortfolioItemSchema = {\n  fields: [\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Name',\n      isRequired: true,\n      validate: [{ type: validatorTypes.REQUIRED }]\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'description',\n      label: 'Description'\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'long_description',\n      label: 'Long description'\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'distributor',\n      label: 'Vendor'\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'documentation_url',\n      label: 'Documentation URL',\n      validate: [\n        {\n          type: validatorTypes.URL\n        }\n      ]\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'support_url',\n      label: 'Support URL',\n      validate: [\n        {\n          type: validatorTypes.URL\n        }\n      ]\n    }\n  ]\n};\n\nexport default editPortfolioItemSchema;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport FormRenderer from '../../common/form-renderer';\nimport editPortfolioItemSchema from '../../../forms/edit-portfolio-item-form.schema';\nimport { updatePortfolioItem } from '../../../redux/actions/portfolio-actions';\n\nconst EditPortfolioItem = ({\n  cancelUrl,\n  product: { owner, created_at, updated_at, ...product }\n}) => {\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n  const { search } = useLocation();\n  return (\n    <FormRenderer\n      initialValues={{ ...product }}\n      onSubmit={(values) => {\n        push({\n          pathname: cancelUrl,\n          search\n        });\n        return dispatch(updatePortfolioItem(values));\n      }}\n      canReset\n      onCancel={() =>\n        push({\n          pathname: cancelUrl,\n          search\n        })\n      }\n      schema={editPortfolioItemSchema}\n      buttonsLabels={{ submitLabel: 'Save' }}\n    />\n  );\n};\n\nEditPortfolioItem.propTypes = {\n  cancelUrl: PropTypes.string.isRequired,\n  product: PropTypes.object.isRequired\n};\n\nexport default EditPortfolioItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\n\nimport EditPortfolioItem from './edit-portfolio-item';\nimport EditApprovalWorkflow from '../../../smart-components/common/edit-approval-workflow';\nimport { PORTFOLIO_ITEM_RESOURCE_TYPE } from '../../../utilities/constants';\n\nconst ItemDetailDescription = ({ product, url, search }) => (\n  <Switch>\n    <Route\n      exact\n      path={`${url}`}\n      render={() => (\n        <TextContent>\n          {(product.description || product.long_description) && (\n            <Text component={TextVariants.h6}>Overview</Text>\n          )}\n          {product.description && (\n            <Text id=\"description\" component={TextVariants.p}>\n              {product.description}\n            </Text>\n          )}\n          {product.long_description && (\n            <Text id=\"long_description\" component={TextVariants.p}>\n              {product.long_description}\n            </Text>\n          )}\n          {product.support_url && (\n            <Text id=\"support_url\" component={TextVariants.p}>\n              <a\n                href={product.support_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn more\n              </a>\n            </Text>\n          )}\n          {product.documentation_url && (\n            <Fragment>\n              <Text component={TextVariants.h6}>Documentation</Text>\n              <Text id=\"documentation_url\" component={TextVariants.p}>\n                <a\n                  href={product.documentation_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Doc link\n                </a>\n              </Text>\n            </Fragment>\n          )}\n        </TextContent>\n      )}\n    />\n    <Route\n      exact\n      path={`${url}/edit`}\n      render={() => <EditPortfolioItem cancelUrl={url} product={product} />}\n    />\n    <Route exact path={`${url}/edit-workflow`}>\n      <EditApprovalWorkflow\n        pushParam={{ pathname: url, search }}\n        objectType={PORTFOLIO_ITEM_RESOURCE_TYPE}\n        objectId={product.id}\n        objectName={() => product.name}\n        querySelector=\"portfolio-item\"\n      />\n    </Route>\n  </Switch>\n);\n\nItemDetailDescription.propTypes = {\n  product: PropTypes.shape({\n    name: PropTypes.string,\n    long_description: PropTypes.string,\n    support_url: PropTypes.string,\n    documentation_url: PropTypes.string,\n    description: PropTypes.string,\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  url: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired\n};\n\nexport default ItemDetailDescription;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport {\n  FormGroup,\n  Modal,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport { componentTypes } from '@data-driven-forms/react-form-renderer';\n\nimport FormRenderer from '../../common/form-renderer';\nimport { getPortfolioItemApi } from '../../../helpers/shared/user-login';\nimport {\n  copyPortfolioItem,\n  fetchPortfolioItemsWithPortfolio\n} from '../../../redux/actions/portfolio-actions';\nimport asyncFormValidator from '../../../utilities/async-form-validator';\nimport {\n  listPortfolios,\n  getPortfolio\n} from '../../../helpers/portfolio/portfolio-helper';\nimport { PORTFOLIO_ITEM_ROUTE } from '../../../constants/routes';\n\nconst loadPortfolios = (filter) =>\n  listPortfolios(filter, { limit: 100, offset: 0 }).then(({ data }) =>\n    data.map(({ name, id }) => ({ value: id, label: name }))\n  );\n\nconst copySchema = (portfolioName, portfolioChange, nameFetching) => ({\n  fields: [\n    {\n      component: 'value-only',\n      name: 'portfolio_item_name',\n      label: 'Name',\n      value: portfolioName\n    },\n    {\n      component: componentTypes.SELECT,\n      name: 'portfolio_id',\n      label: 'Portfolio',\n      isRequired: true,\n      loadOptions: asyncFormValidator(loadPortfolios),\n      onChange: portfolioChange,\n      isDisabled: nameFetching,\n      isSearchable: true\n    }\n  ]\n});\n\nconst ValueOnly = ({ name, label, value }) => (\n  <FormGroup label={label} fieldId={name}>\n    <TextContent>\n      <Text component={TextVariants.h6}>{value}</Text>\n    </TextContent>\n  </FormGroup>\n);\n\nValueOnly.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired\n};\n\nconst CopyPortfolioItemModal = ({\n  portfolioId,\n  portfolioItemId,\n  closeUrl,\n  search\n}) => {\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n  const [submitting, setSubmitting] = useState(false);\n  const [name, setName] = useState();\n  const [nameFetching, setNameFetching] = useState(false);\n\n  useEffect(() => {\n    getPortfolioItemApi()\n      .getPortfolioItemNextName(portfolioItemId, portfolioId)\n      .then(({ next_name }) => setName(next_name));\n  }, []);\n  const onSubmit = async (values) => {\n    setSubmitting(true);\n    const portfolio = await getPortfolio(values.portfolio_id);\n    dispatch(copyPortfolioItem(portfolioItemId, values, portfolio))\n      .then(({ id, service_offering_source_ref }) =>\n        push({\n          pathname: PORTFOLIO_ITEM_ROUTE,\n          search: `?portfolio=${values.portfolio_id}&portfolio-item=${id}&source=${service_offering_source_ref}`\n        })\n      )\n      .then(\n        () =>\n          values.portfolio_id === portfolioId &&\n          dispatch(fetchPortfolioItemsWithPortfolio(portfolioId))\n      )\n      .catch(() => setSubmitting(false));\n  };\n\n  const portfolioChange = (portfolioId) => {\n    setNameFetching(true);\n    return getPortfolioItemApi()\n      .getPortfolioItemNextName(portfolioItemId, portfolioId)\n      .then(({ next_name }) => {\n        setName(next_name);\n      })\n      .then(() => setNameFetching(false));\n  };\n\n  return (\n    <Modal\n      isOpen\n      title=\"Copy product\"\n      onClose={() =>\n        push({\n          pathname: closeUrl,\n          search\n        })\n      }\n      isSmall\n    >\n      <FormRenderer\n        initialValues={{ portfolio_id: portfolioId, portfolio_item_name: name }}\n        schema={copySchema(name, portfolioChange, nameFetching)}\n        onSubmit={onSubmit}\n        onCancel={() =>\n          push({\n            pathname: closeUrl,\n            search\n          })\n        }\n        formContainer=\"modal\"\n        componentMapper={{ 'value-only': ValueOnly }}\n        buttonsLabels={{ submitLabel: 'Save' }}\n        disableSubmit={submitting ? ['pristine', 'diry'] : []}\n      />\n    </Modal>\n  );\n};\n\nCopyPortfolioItemModal.propTypes = {\n  closeUrl: PropTypes.string.isRequired,\n  portfolioId: PropTypes.string.isRequired,\n  portfolios: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  portfolioItemId: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired\n};\nexport default CopyPortfolioItemModal;\n","import React, { useEffect, useState, Fragment, lazy, Suspense } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { Grid, GridItem, Alert } from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\n\nimport OrderModal from '../../common/order-modal';\nimport ItemDetailInfoBar from './item-detail-info-bar';\nimport ItemDetailDescription from './item-detail-description';\nimport CopyPortfolioItemModal from './copy-portfolio-item-modal';\nimport { PortfolioItemDetailToolbar } from './portfolio-item-detail-toolbar';\nimport TopToolbar from '../../../presentational-components/shared/top-toolbar';\nimport { getPortfolioItemDetail } from '../../../redux/actions/portfolio-actions';\nimport {\n  ProductLoaderPlaceholder,\n  AppPlaceholder\n} from '../../../presentational-components/shared/loader-placeholders';\nimport { uploadPortfolioItemIcon } from '../../../helpers/portfolio/portfolio-helper';\nimport useQuery from '../../../utilities/use-query';\nimport { PORTFOLIO_ITEM_ROUTE } from '../../../constants/routes';\n\nconst SurveyEditor = lazy(() =>\n  import(\n    /* webpackChunkName: \"survey-editor\" */ '../../survey-editing/survey-editor'\n  )\n);\n\nconst requiredParams = ['portfolio', 'source', 'portfolio-item'];\n\nconst PortfolioItemDetail = () => {\n  const [isOpen, setOpen] = useState(false);\n  const [isFetching, setIsFetching] = useState(true);\n  const dispatch = useDispatch();\n  const [queryValues, search] = useQuery(requiredParams);\n  const { url } = useRouteMatch(PORTFOLIO_ITEM_ROUTE);\n  const { portfolioItem, portfolio, source } = useSelector(\n    ({ portfolioReducer: { portfolioItem } }) => portfolioItem\n  );\n\n  useEffect(() => {\n    setIsFetching(true);\n    dispatch(\n      getPortfolioItemDetail({\n        portfolioItem: queryValues['portfolio-item'],\n        ...queryValues\n      })\n    )\n      .then(() => setIsFetching(false))\n      .catch(() => setIsFetching(false));\n  }, [queryValues['portfolio-item']]);\n\n  if (isFetching || Object.keys(portfolioItem).length === 0) {\n    return (\n      <Section className=\"global-primary-background full-height\">\n        <TopToolbar>\n          <ProductLoaderPlaceholder />\n        </TopToolbar>\n      </Section>\n    );\n  }\n\n  const availability = source.availability_status || 'unavailable';\n\n  const unavailable = [source]\n    .filter(({ notFound }) => notFound)\n    .map(({ object }) => (\n      <Alert\n        className=\"pf-u-mb-sm\"\n        key={object}\n        variant=\"warning\"\n        isInline\n        title={`The ${object} for this product is no longer available`}\n      />\n    ));\n  const uploadIcon = (file) => uploadPortfolioItemIcon(portfolioItem.id, file);\n  return (\n    <Fragment>\n      <Switch>\n        <Route path={`${url}/edit-survey`}>\n          <Suspense fallback={<AppPlaceholder />}>\n            <SurveyEditor\n              closeUrl={url}\n              search={search}\n              uploadIcon={uploadIcon}\n              portfolioItem={portfolioItem}\n              portfolio={portfolio}\n            />\n          </Suspense>\n        </Route>\n        <Route>\n          <Section className=\"full-height global-primary-background\">\n            <PortfolioItemDetailToolbar\n              uploadIcon={uploadIcon}\n              url={url}\n              isOpen={isOpen}\n              product={portfolioItem}\n              setOpen={setOpen}\n              isFetching={isFetching}\n              availability={availability}\n            />\n            {unavailable.length > 0 && (\n              <div className=\"pf-u-mr-lg pf-u-ml-lg\">{unavailable}</div>\n            )}\n            {source.availability_status === 'unavailable' && (\n              <Alert\n                className=\"pf-u-ml-lg pf-u-mr-lg\"\n                id=\"unavailable-alert-info\"\n                variant=\"info\"\n                isInline\n                title=\"The platform for this product is unavailable\"\n              />\n            )}\n            <Grid className=\"pf-u-p-lg\">\n              <GridItem md={2}>\n                <ItemDetailInfoBar\n                  product={portfolioItem}\n                  portfolio={portfolio}\n                  source={source}\n                />\n              </GridItem>\n              <GridItem md={10}>\n                <Route path={`${url}/order`}>\n                  <OrderModal closeUrl={url} />\n                </Route>\n                <Route\n                  path={`${url}/copy`}\n                  render={(props) => (\n                    <CopyPortfolioItemModal\n                      {...props}\n                      search={search}\n                      portfolioItemId={portfolioItem.id}\n                      portfolioId={portfolio.id}\n                      closeUrl={url}\n                    />\n                  )}\n                />\n                <ItemDetailDescription\n                  product={portfolioItem}\n                  url={url}\n                  search={search}\n                />\n              </GridItem>\n            </Grid>\n          </Section>\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n};\n\nexport default PortfolioItemDetail;\n","import React, { useEffect, useReducer } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useRouteMatch, Route, Switch } from 'react-router-dom';\n\nimport PortfolioItems from './portfolio-items';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport AddProductsToPortfolio from './add-products-to-portfolio';\nimport { toggleArraySelection } from '../../helpers/shared/redux-mutators';\nimport PortfolioItemDetail from './portfolio-item-detail/portfolio-item-detail';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport {\n  copyPortfolio,\n  fetchPortfolios,\n  fetchSelectedPortfolio,\n  removeProductsFromPortfolio,\n  fetchPortfolioItemsWithPortfolio,\n  resetSelectedPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport useQuery from '../../utilities/use-query';\nimport useBreadcrumbs from '../../utilities/use-breadcrumbs';\nimport { PORTFOLIO_ROUTE } from '../../constants/routes';\n\nconst initialState = {\n  selectedItems: [],\n  removeInProgress: false,\n  filterValue: '',\n  copyInProgress: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (value, dispatch, filteringCallback, meta) => {\n    filteringCallback(true);\n    dispatch(fetchPortfolioItemsWithPortfolio(value, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst porftolioUiReducer = (state, { type, payload }) =>\n  ({\n    selectItem: {\n      ...state,\n      selectedItems: toggleArraySelection(state.selectedItems, payload)\n    },\n    setRemoveInProgress: { ...state, removeInProgress: payload },\n    removeSucessfull: { ...state, selectedItems: [], removeInProgress: false },\n    setFilterValue: { ...state, filterValue: payload, isFiltering: true },\n    setCopyInProgress: { ...state, copyInProgress: payload },\n    setIsFetching: { ...state, isFetching: payload },\n    setFilteringFlag: { ...state, isFiltering: payload }\n  }[type]);\n\nconst Portfolio = () => {\n  const [state, stateDispatch] = useReducer(porftolioUiReducer, initialState);\n  const [searchParams] = useQuery(['portfolio']);\n  const { portfolio: id } = searchParams;\n  const { url } = useRouteMatch(PORTFOLIO_ROUTE);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { portfolio, portfolioItem, meta } = useSelector(\n    ({\n      portfolioReducer: {\n        selectedPortfolio,\n        portfolioItem,\n        portfolioItems: { meta }\n      }\n    }) => ({\n      portfolio: selectedPortfolio,\n      portfolioItem,\n      meta\n    })\n  );\n\n  const resetBreadcrumbs = useBreadcrumbs([portfolio, portfolioItem]);\n\n  const fetchData = (apiProps) => {\n    stateDispatch({ type: 'setIsFetching', payload: true });\n    return Promise.all([\n      dispatch(fetchPlatforms()),\n      dispatch(fetchSelectedPortfolio(apiProps)),\n      dispatch(fetchPortfolioItemsWithPortfolio(apiProps))\n    ])\n      .then((data) => {\n        stateDispatch({ type: 'setIsFetching', payload: false });\n        return data;\n      })\n      .catch(() => stateDispatch({ type: 'setIsFetching', payload: false }));\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'portfolios', secondaryNav: true });\n  }, []);\n\n  useEffect(() => {\n    fetchData(id);\n    scrollToTop();\n    return () => {\n      resetBreadcrumbs();\n      dispatch(resetSelectedPortfolio());\n    };\n  }, [id]);\n\n  const handleCopyPortfolio = () => {\n    stateDispatch({ type: 'setCopyInProgress', payload: true });\n    return dispatch(copyPortfolio(id))\n      .then(({ id }) =>\n        history.push({\n          pathname: PORTFOLIO_ROUTE,\n          search: `?portfolio=${id}`\n        })\n      )\n      .then(() => stateDispatch({ type: 'setCopyInProgress', payload: false }))\n      .then(() => dispatch(fetchPortfolios()))\n      .catch(() =>\n        stateDispatch({ type: 'setCopyInProgress', payload: false })\n      );\n  };\n\n  const removeProducts = (products) => {\n    stateDispatch({ type: 'setRemoveInProgress', payload: true });\n    dispatch(removeProductsFromPortfolio(products, portfolio.name))\n      .then(() => stateDispatch({ type: 'removeSucessfull' }))\n      .catch(() =>\n        stateDispatch({ type: 'setRemoveInProgress', payload: false })\n      );\n  };\n\n  const handleFilterChange = (filter) => {\n    stateDispatch({ type: 'setFilterValue', payload: filter });\n    debouncedFilter(\n      id,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0,\n        filter\n      }\n    );\n  };\n\n  const routes = {\n    portfolioRoute: url,\n    addProductsRoute: `${url}/add-products`,\n    editPortfolioRoute: `${url}/edit-portfolio`,\n    removePortfolioRoute: `${url}/remove-portfolio`,\n    sharePortfolioRoute: `${url}/share-portfolio`,\n    workflowPortfolioRoute: `${url}/edit-workflow`,\n    portfolioItemRoute: `${url}/portfolio-item`\n  };\n\n  return (\n    <Switch>\n      <Route path={routes.addProductsRoute}>\n        <AddProductsToPortfolio portfolioRoute={routes.portfolioRoute} />\n      </Route>\n      <Route path={routes.portfolioItemRoute}>\n        <PortfolioItemDetail portfolioLoaded={!state.isFetching} />\n      </Route>\n      <Route path={routes.portfolioRoute}>\n        <PortfolioItems\n          routes={routes}\n          handleFilterChange={handleFilterChange}\n          removeProducts={removeProducts}\n          copyPortfolio={handleCopyPortfolio}\n          state={state}\n          stateDispatch={stateDispatch}\n        />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Portfolio;\n","export const toggleArraySelection = (items, item) =>\n  items.includes(item)\n    ? [\n        ...items.slice(0, items.indexOf(item)),\n        ...items.slice(items.indexOf(item) + 1)\n      ]\n    : [...items, item];\n"],"sourceRoot":""}