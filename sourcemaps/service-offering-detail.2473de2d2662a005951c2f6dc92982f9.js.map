{"version":3,"file":"js/service-offering-detail.1644477802690.4ca0fc007f5497cc133a.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Level/Level.js","webpack:///./src/smart-components/platform/service-offering/service-offering-detail.js","webpack:///./src/messages/platforms.messages.ts","webpack:///./src/presentational-components/styled-components/lazy-load-image.ts","webpack:///./src/presentational-components/shared/card-icon.tsx"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Level = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst level_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/layouts/Level/level\"));\nconst Level = (_a) => {\n    var { hasGutter, className = '', children = null } = _a, props = tslib_1.__rest(_a, [\"hasGutter\", \"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: react_styles_1.css(level_1.default.level, hasGutter && level_1.default.modifiers.gutter, className) }), children));\n};\nexports.Level = Level;\nexports.Level.displayName = 'Level';\n//# sourceMappingURL=Level.js.map","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  TextContent,\n  Text,\n  TextVariants,\n  Level\n} from '@patternfly/react-core';\nimport ReactJsonView from 'react-json-view';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nimport useQuery from '../../../utilities/use-query';\nimport { fetchServiceOffering } from '../../../redux/actions/platform-actions';\nimport { fetchServiceOffering as fetchServiceOfferingS } from '../../../redux/actions/platform-actions-s';\nimport { ProductLoaderPlaceholder } from '../../../presentational-components/shared/loader-placeholders';\nimport CardIcon from '../../../presentational-components/shared/card-icon';\nimport CatalogBreadcrumbs from '../../common/catalog-breadcrumbs';\nimport { StyledLevelItem } from '../../../presentational-components/styled-components/level';\nimport labelMessages from '../../../messages/labels.messages';\nimport platformsMessages from '../../../messages/platforms.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport { isStandalone } from '../../../helpers/shared/helpers';\n\nconst requiredParams = ['service', 'platform'];\n\nconst ServiceOfferingDetail = () => {\n  const formatMessage = useFormatMessage();\n  const [queryValues] = useQuery(requiredParams);\n  const [isFetching, setIsFetching] = useState(true);\n  const dispatch = useDispatch();\n  const { service, source } = useSelector(\n    ({ platformReducer: { serviceOffering } }) => serviceOffering\n  );\n\n  useEffect(() => {\n    setIsFetching(true);\n    dispatch(\n      isStandalone()\n        ? fetchServiceOfferingS(queryValues.service, queryValues.platform)\n        : fetchServiceOffering(queryValues.service, queryValues.platform)\n    )\n      .then(() => setIsFetching(false))\n      .catch(() => setIsFetching(false));\n  }, [queryValues.service, queryValues.platform]);\n  if (isFetching) {\n    return (\n      <Section className=\"global-primary-background full-height pf-u-p-lg\">\n        <ProductLoaderPlaceholder />\n      </Section>\n    );\n  }\n\n  return (\n    <Section type=\"content\" className=\"global-primary-background full-height\">\n      <Grid hasGutter className=\"pf-u-p-lg\">\n        <div className=\"pf-u-mb-sm\">\n          <CatalogBreadcrumbs />\n        </div>\n        <GridItem sm={12} className=\"pf-u-mb-md\">\n          <Level>\n            <StyledLevelItem grow alignStart className=\"pf-l-flex\">\n              <CardIcon src={source.icon_url} height={64} />\n              <TextContent>\n                <Text component=\"h1\">{service.name}</Text>\n                <Text component=\"small\">\n                  {formatMessage(platformsMessages.offeringTitle)}\n                </Text>\n              </TextContent>\n            </StyledLevelItem>\n          </Level>\n        </GridItem>\n        <GridItem md={3} lg={2}>\n          <TextContent>\n            <Text className=\"font-14\">\n              {formatMessage(labelMessages.platform)}\n            </Text>\n            <Text\n              id=\"source\"\n              className=\"overflow-wrap\"\n              component={TextVariants.p}\n            >\n              {source.name}\n            </Text>\n            <Text className=\"font-14\">\n              {formatMessage(labelMessages.created)}\n            </Text>\n            <Text\n              id=\"created_at\"\n              className=\"overflow-wrap\"\n              component={TextVariants.p}\n            >\n              <DateFormat type=\"relative\" date={service.created_at} />\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem md={9} lg={10}>\n          <TextContent>\n            <Text className=\"font-14\">{formatMessage(labelMessages.name)}</Text>\n            <Text id=\"description\" component={TextVariants.p}>\n              {service.name}\n            </Text>\n            <Text className=\"font-14\">\n              {formatMessage(labelMessages.description)}\n            </Text>\n            <Text id=\"long_description\" component={TextVariants.p}>\n              {service.description}\n            </Text>\n            {service.extra && (\n              <React.Fragment>\n                <hr className=\"pf-c-divider\" />\n                <Text component=\"h2\">\n                  {formatMessage(platformsMessages.offeringParameters)}\n                </Text>\n                <ReactJsonView src={service.extra} />\n              </React.Fragment>\n            )}\n          </TextContent>\n        </GridItem>\n      </Grid>\n    </Section>\n  );\n};\n\nexport default ServiceOfferingDetail;\n","import { defineMessages } from 'react-intl';\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  platformsNoDataDescription: {\n    id: 'platforms.list.configure-source',\n    defaultMessage:\n      'Ansible Automation Services Catalog can be added by following the'\n  },\n  platformsDocTitle: {\n    id: 'platforms.doc.title',\n    defaultMessage: 'Ansible Automation Platform 2.0 BETA documentation'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage: 'Go to Sources'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  },\n  platformVersion: {\n    id: 'platforms.version',\n    defaultMessage: 'Platform version'\n  },\n  ansibleVersion: {\n    id: 'platforms.ansible.version',\n    defaultMessage: 'Ansible version'\n  },\n  platformSummary: {\n    id: 'platforms.summary',\n    defaultMessage: 'Summary'\n  },\n  platformDetails: {\n    id: 'platforms.details',\n    defaultMessage: 'Details'\n  },\n  platformActivity: {\n    id: 'platforms.activity',\n    defaultMessage: 'Activity'\n  },\n  cloudConnectorId: {\n    id: 'platform.cloudConnectorId',\n    defaultMessage: 'RedHat Connect Client Id'\n  },\n  refreshState: {\n    id: 'platforms.refreshState',\n    defaultMessage: 'Refresh state'\n  },\n  refreshStarted: {\n    id: 'platforms.refreshStarted',\n    defaultMessage: 'Refresh started'\n  },\n  refreshFinished: {\n    id: 'platforms.refreshFinished',\n    defaultMessage: 'Refresh finished'\n  },\n  lastSuccessfulRefresh: {\n    id: 'platforms.lastSuccessfulRefresh',\n    defaultMessage: 'Last successful refresh'\n  },\n  lastChecked: {\n    id: 'platforms.lastChecked',\n    defaultMessage: 'Last checked'\n  },\n  lastAvailable: {\n    id: 'platforms.lastAvailable',\n    defaultMessage: 'Last available'\n  },\n  enabled: {\n    id: 'platforms.enabled',\n    defaultMessage: 'Enabled'\n  },\n  availabilityStatus: {\n    id: 'platforms.availabilityStatus',\n    defaultMessage: 'Availability status'\n  },\n  dateAdded: {\n    id: 'platforms.dateAdded',\n    defaultMessage: 'Date added'\n  },\n  refreshTooltip: {\n    id: 'platforms.refreshTooltip',\n    defaultMessage: 'Refresh platform'\n  },\n  lastRefreshMessage: {\n    id: 'platforms.lastRefreshMessage',\n    defaultMessage: 'Last refresh message'\n  },\n  availabilityMessage: {\n    id: 'platforms.availabilityMessage',\n    defaultMessage: 'Availability message'\n  }\n});\n\nexport default platformsMessages;\n","import styled from 'styled-components';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst StyledLazyLoadImage = styled(LazyLoadImage)`\n  height: ${({ height, hidden }) => (hidden ? '0px' : `${height}px` || '40px')};\n  display: ${({ hidden }) => (hidden ? 'none' : 'inherit')};\n  float: ${({ hidden }) => (hidden ? 'left' : 'inherit')};\n  width: ${({ hidden }) => (hidden ? 0 : 'inherit')};\n`;\n\nexport default StyledLazyLoadImage;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\n\nimport { IconPlaceholder } from './loader-placeholders';\nimport CardIconDefault from '../../assets/images/card-icon-default.svg';\nimport CardIconDefaultS from '../../assets/images/card-icon-default-s.svg';\nimport StyledLazyLoadImage from '../styled-components/lazy-load-image';\nimport { CatalogRootState } from '../../types/redux';\nimport { StringObject } from '../../types/common-types';\nimport { isStandalone } from '../../helpers/shared/helpers';\n\ninterface CardIconContainerProps {\n  height: number;\n}\nconst CardIconContainer = styled.div<CardIconContainerProps>`\n  display: inline-block;\n  height: ${({ height }) => `${height}px`};\n`;\n\nexport interface CardIconProps {\n  src?: string;\n  height?: number;\n  sourceId?: string;\n}\nconst CardIcon: React.ComponentType<CardIconProps> = ({\n  src,\n  height = 40,\n  sourceId\n}) => {\n  const [isLoaded, setLoaded] = useState(false);\n  const [isUnknown, setUnknown] = useState(false);\n  const platformIconMapping = useSelector<CatalogRootState, StringObject>(\n    ({ platformReducer: { platformIconMapping } }) => platformIconMapping\n  );\n  const defaultIconI = sourceId\n    ? platformIconMapping[sourceId]\n    : CardIconDefault;\n\n  const defaultIcon = isStandalone() ? CardIconDefaultS : defaultIconI;\n\n  return (\n    <CardIconContainer height={height}>\n      {!isLoaded && <IconPlaceholder height={height} />}\n      <StyledLazyLoadImage\n        threshold={2000}\n        delayTime={0}\n        hidden={!isLoaded}\n        height={isLoaded ? height : 0}\n        onError={() => setUnknown(true)}\n        onLoad={() => setLoaded(true)}\n        src={!src || isUnknown ? defaultIcon : src}\n      />\n    </CardIconContainer>\n  );\n};\n\nexport default CardIcon;\n"],"names":["exports","tslib_1","React","__importStar","react_styles_1","level_1","__importDefault","_a","hasGutter","className","children","props","__rest","createElement","Object","assign","css","default","level","modifiers","gutter","requiredParams","formatMessage","useFormatMessage","useQuery","queryValues","useState","isFetching","setIsFetching","dispatch","useDispatch","useSelector","platformReducer","serviceOffering","service","source","useEffect","isStandalone","fetchServiceOfferingS","platform","fetchServiceOffering","then","type","sm","grow","alignStart","src","icon_url","height","TextContent","Text","component","name","platformsMessages","md","lg","labelMessages","id","TextVariants","date","created_at","description","extra","workflowColumn","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","platformsNoDataDescription","platformsDocTitle","connectSource","contactAdmin","title","noPlatforms","offeringTitle","offeringParameters","platformVersion","ansibleVersion","platformSummary","platformDetails","platformActivity","cloudConnectorId","refreshState","refreshStarted","refreshFinished","lastSuccessfulRefresh","lastChecked","lastAvailable","enabled","availabilityStatus","dateAdded","refreshTooltip","lastRefreshMessage","availabilityMessage","LazyLoadImage","CardIconContainer","sourceId","isLoaded","setLoaded","isUnknown","setUnknown","platformIconMapping","defaultIconI","defaultIcon","threshold","delayTime","hidden","onError","onLoad"],"sourceRoot":""}