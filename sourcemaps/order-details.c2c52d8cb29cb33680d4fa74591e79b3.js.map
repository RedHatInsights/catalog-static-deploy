{"version":3,"file":"js/order-details.1643307617167.5d6f725d3c213ec8d63d.js","mappings":"qQA2HA,QA/F0C,WACxC,IAAMA,GAAgB,SAChB,GAMF,SACF,SAAC,GAAsC,OAAT,8BAN9BC,EAAK,QACLC,EAAQ,WACRC,EAAgB,mBAChBC,EAAS,YACTC,EAAS,YAKLC,IADW,UACAC,aAAaC,QAAQ,sBAClCL,MAAAA,OAAgB,EAAhBA,EAAkBM,QAClBN,MAAAA,OAAgB,EAAhBA,EAAkBO,MACtB,OACE,kBAAC,IAAO,CAACC,KAAK,WACZ,kBAAC,EAAAC,KAAI,CAACC,WAAS,GACb,kBAAC,EAAAC,SAAQ,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC3B,kBAAC,EAAAC,MAAK,KACJ,kBAAC,EAAAC,UAAS,KACR,kBAAC,EAAAC,KAAI,KACH,kBAAC,EAAAC,SAAQ,KACP,kBAAC,EAAAC,YAAW,KACV,kBAAC,EAAAC,KAAI,CAACC,UAAU,aAAaC,UAAW,EAAAC,aAAA,IACrC1B,EAAc,mBAEjB,kBAAC,EAAA2B,SAAQ,CAACF,UAAW,EAAAG,iBAAA,IACnB,kBAAC,EAAAC,aAAY,CAACJ,UAAW,EAAAK,qBAAA,IACtB9B,EAAc,cAEjB,kBAAC,EAAA6B,aAAY,CAACJ,UAAW,EAAAK,qBAAA,IACtB7B,EAAM8B,IAET,kBAAC,EAAAF,aAAY,CAACJ,UAAW,EAAAK,qBAAA,IACtB9B,EAAc,cAEjB,kBAAC,EAAA6B,aAAY,CAACJ,UAAW,EAAAK,qBAAA,IACvB,kBAAC,IAAU,CACTE,KAAM/B,EAAMgC,WACZC,QAAQ,cAGZ,kBAAC,EAAAL,aAAY,CAACJ,UAAW,EAAAK,qBAAA,IACtB9B,EAAc,gBAEjB,kBAAC,EAAA6B,aAAY,CAACJ,UAAW,EAAAK,qBAAA,IACtB1B,MAAAA,OAAS,EAATA,EAAW+B,MAEd,kBAAC,EAAAN,aAAY,CAACJ,UAAW,EAAAK,qBAAA,IACtB9B,EAAc,eAEjB,kBAAC,EAAA6B,aAAY,CAACJ,UAAW,EAAAK,qBAAA,KACtB5B,MAAAA,OAAQ,EAARA,EAAUiC,YAAQC,QAO/B,kBAAC,EAAAjB,UAAS,KACR,kBAAC,EAAAC,KAAI,KACH,kBAAC,EAAAC,SAAQ,KACP,kBAAC,EAAAC,YAAW,KACV,kBAAC,EAAAC,KAAI,CAACC,UAAU,aAAaC,UAAW,EAAAC,aAAA,IACrC1B,EAAc,uBAGnB,kBAAC,EAAAsB,YAAW,CAACE,UAAU,kBACpBnB,MAAAA,OAAS,EAATA,EAAWgC,qBACV,kBAAC,IAAa,CAACC,IAAKjC,EAAUgC,2BAQ5C,kBAAC,EAAAvB,SAAQ,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC3B,kBAAC,EAAAG,KAAI,KACH,kBAAC,EAAAC,SAAQ,KACP,kBAAC,EAAAC,YAAW,KACV,kBAAC,EAAAC,KAAI,CAACC,UAAU,aAAaC,UAAW,EAAAC,aAAA,IACrC1B,EAAc,6BAGlBM,GAAY,kBAAC,IAAa,CAACgC,IAAKhC","sources":["webpack:///./src/smart-components/order/order-detail/order-details.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  TextContent,\n  Text,\n  TextVariants,\n  TextList,\n  TextListVariants,\n  TextListItem,\n  TextListItemVariants,\n  Grid,\n  Card,\n  CardBody,\n  GridItem,\n  Stack,\n  StackItem\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nimport ReactJsonView from 'react-json-view';\nimport statesMessages from '../../../messages/states.messages';\nimport labelMessages from '../../../messages/labels.messages';\nimport ordersMessages from '../../../messages/orders.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport { OrderDetail } from '../../../redux/reducers/order-reducer';\nimport { CatalogRootState } from '../../../types/redux';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\nconst OrderDetails: React.ComponentType = () => {\n  const formatMessage = useFormatMessage();\n  const {\n    order,\n    platform,\n    progressMessages,\n    portfolio,\n    orderItem\n  } = useSelector<CatalogRootState, OrderDetail>(\n    ({ orderReducer: { orderDetail } }) => orderDetail\n  );\n  const dispatch = useDispatch();\n  const messages = localStorage.getItem('catalog_standalone')\n    ? progressMessages?.results\n    : progressMessages?.data;\n  return (\n    <Section type=\"content\">\n      <Grid hasGutter>\n        <GridItem md={12} lg={6} xl={4}>\n          <Stack>\n            <StackItem>\n              <Card>\n                <CardBody>\n                  <TextContent>\n                    <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n                      {formatMessage(ordersMessages.orderDetails)}\n                    </Text>\n                    <TextList component={TextListVariants.dl}>\n                      <TextListItem component={TextListItemVariants.dt}>\n                        {formatMessage(ordersMessages.orderID)}\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dd}>\n                        {order.id}\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dt}>\n                        {formatMessage(statesMessages.ordered)}\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dd}>\n                        <DateFormat\n                          date={order.created_at}\n                          variant=\"relative\"\n                        />\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dt}>\n                        {formatMessage(labelMessages.portfolio)}\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dd}>\n                        {portfolio?.name}\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dt}>\n                        {formatMessage(labelMessages.platform)}\n                      </TextListItem>\n                      <TextListItem component={TextListItemVariants.dd}>\n                        {platform?.name || undefined}\n                      </TextListItem>\n                    </TextList>\n                  </TextContent>\n                </CardBody>\n              </Card>\n            </StackItem>\n            <StackItem>\n              <Card>\n                <CardBody>\n                  <TextContent>\n                    <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n                      {formatMessage(ordersMessages.orderParameters)}\n                    </Text>\n                  </TextContent>\n                  <TextContent className=\"overflow-wrap\">\n                    {orderItem?.service_parameters && (\n                      <ReactJsonView src={orderItem.service_parameters} />\n                    )}\n                  </TextContent>\n                </CardBody>\n              </Card>\n            </StackItem>\n          </Stack>\n        </GridItem>\n        <GridItem md={12} lg={6} xl={8}>\n          <Card>\n            <CardBody>\n              <TextContent>\n                <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n                  {formatMessage(ordersMessages.orderProgressMessages)}\n                </Text>\n              </TextContent>\n              {messages && <ReactJsonView src={messages} />}\n            </CardBody>\n          </Card>\n        </GridItem>\n      </Grid>\n    </Section>\n  );\n};\n\nexport default OrderDetails;\n"],"names":["formatMessage","order","platform","progressMessages","portfolio","orderItem","messages","localStorage","getItem","results","data","type","Grid","hasGutter","GridItem","md","lg","xl","Stack","StackItem","Card","CardBody","TextContent","Text","className","component","TextVariants","TextList","TextListVariants","TextListItem","TextListItemVariants","id","date","created_at","variant","name","undefined","service_parameters","src"],"sourceRoot":""}