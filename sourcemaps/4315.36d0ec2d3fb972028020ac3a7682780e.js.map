{"version":3,"file":"js/4315.538b6ca969568e78063f.js","mappings":"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","sources":["webpack:///./src/presentational-components/shared/app-tabs.tsx","webpack:///./src/presentational-components/shared/conditional-link.tsx","webpack:///./src/presentational-components/shared/top-toolbar.tsx","webpack:///./src/helpers/platform/platform-helper.ts","webpack:///./src/redux/actions/platform-actions.ts","webpack:///./src/smart-components/common/catalog-breadcrumbs.tsx","webpack:///./src/smart-components/common/catalog-link.tsx","webpack:///./src/presentational-components/shared/filter-toolbar-item.tsx","webpack:///./src/toolbar/toolbar-mapper.tsx","webpack:///./src/toolbar/toolbar-renderer.tsx","webpack:///./src/utilities/use-enhanced-history.ts"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation } from 'react-router-dom';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nexport interface AppTabsProps {\n  tabItems: {\n    name: string;\n    eventKey: number;\n    title: string;\n    disabled?: boolean;\n  }[];\n}\nconst AppTabs: React.ComponentType<AppTabsProps> = ({ tabItems }) => {\n  const { push } = useEnhancedHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (\n    _event: React.MouseEvent<HTMLElement, MouseEvent>,\n    tabIndex: number | string\n  ) => push({ pathname: tabItems[tabIndex as number].name, search });\n\n  return (\n    <Tabs\n      activeKey={activeTab ? activeTab.eventKey : 0}\n      onSelect={handleTabClick}\n    >\n      {tabItems.map((item) => (\n        <Tab\n          title={item.title}\n          key={item.eventKey}\n          eventKey={item.eventKey}\n          name={item.name}\n          disabled={item.disabled}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nexport default AppTabs;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment } from 'react';\nimport CatalogLink, {\n  CatalogLinkProps\n} from '../../smart-components/common/catalog-link';\n\nexport interface ConditionalLinkProps\n  extends Omit<CatalogLinkProps, 'pathname'> {\n  pathname?: string;\n}\nconst ConditionalLink: React.ComponentType<ConditionalLinkProps> = ({\n  children,\n  pathname,\n  ...props\n}) => (\n  <Fragment>\n    {pathname ? (\n      <CatalogLink pathname={pathname} {...props}>\n        {children}\n      </CatalogLink>\n    ) : (\n      children\n    )}\n  </Fragment>\n);\n\nexport default ConditionalLink;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment, ReactNode, useContext } from 'react';\nimport {\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport clsx from 'clsx';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport CatalogBreadcrumbs from '../../smart-components/common/catalog-breadcrumbs';\nimport {\n  TopToolbarWrapper,\n  TopToolbarTitleContainer\n} from '../styled-components/toolbars';\nimport { BreadcrumbFragment } from '../../redux/reducers/breadcrumbs-reducer';\nimport { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport UserContext from '../../user-context';\n\nexport interface TopToolbarProps {\n  paddingBottom?: boolean;\n  breadcrumbs?: boolean;\n  breadcrumbfragments?: BreadcrumbFragment[];\n}\nconst TopToolbar: React.ComponentType<TopToolbarProps> = ({\n  children,\n  paddingBottom = true,\n  breadcrumbs = true,\n  breadcrumbfragments = [],\n  ...rest\n}) => {\n  const { standalone: standalone } = useContext(UserContext);\n  return (\n    <div className={clsx({ ['standalone-toolbar']: !!standalone })}>\n      <TopToolbarWrapper\n        className={`pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${\n          paddingBottom ? 'pf-u-pb-lg' : ''\n        }`}\n        {...rest}\n      >\n        {breadcrumbs && (\n          <div className=\"pf-u-mb-md\">\n            {' '}\n            <CatalogBreadcrumbs breadcrumbfragments={breadcrumbfragments} />\n          </div>\n        )}\n        {children}\n      </TopToolbarWrapper>\n    </div>\n  );\n};\n\nexport default TopToolbar;\n\nexport interface TopToolbarTitleProps {\n  title?: React.ElementType;\n  description?: ReactNode;\n  noData?: boolean;\n}\nexport const TopToolbarTitle: React.ComponentType<TopToolbarTitleProps> = ({\n  title = <ToolbarTitlePlaceholder />,\n  description,\n  children,\n  noData,\n  ...rest\n}) => (\n  <Fragment>\n    <TopToolbarTitleContainer\n      className={clsx({ 'pf-u-mb-lg': !noData, 'flex-no-wrap': true })}\n      {...rest}\n    >\n      <LevelItem>\n        <TextContent>\n          <PageHeaderTitle title={title} className=\"pf-u-m-0 pf-u-mr-md\" />\n          {description && <Text component={TextVariants.p}>{description}</Text>}\n        </TextContent>\n      </LevelItem>\n      <LevelItem className=\"flex-item-no-wrap\">{children}</LevelItem>\n    </TopToolbarTitleContainer>\n  </Fragment>\n);\n","import { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport {\n  CATALOG_INVENTORY_API_BASE,\n  SOURCES_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings, PaginationConfiguration } from '../shared/pagination';\nimport {\n  Source,\n  ServiceOffering,\n  ServiceInventory\n} from '@redhat-cloud-services/sources-client';\nimport { ApiCollectionResponse, SourceDetails } from '../../types/common-types';\nconst axiosInstance = getAxiosInstance();\nconst { post } = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nconst getSourcesDetails = (\n  sourceIds: string[]\n): Promise<ApiCollectionResponse<SourceDetails>> => {\n  return axiosInstance.get(\n    `${CATALOG_INVENTORY_API_BASE}/sources?limit=${sourceIds.length ||\n      defaultSettings.limit}${sourceIds.length ? '&' : ''}${sourceIds\n      .map((sourceId) => `filter[id][]=${sourceId}`)\n      .join('&')}`\n  );\n};\n\nexport const getPlatforms = (): Promise<SourceDetails> =>\n  post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n    .then(({ data: { application_types } }) => application_types)\n    .then(([{ sources }]) => {\n      return getSourcesDetails(sources.map((source: Source) => source.id)).then(\n        (sourceDetails) => {\n          return sources.map((source: Source) => ({\n            ...source,\n            ...sourceDetails.data.find(\n              (sourceDetail) => sourceDetail.id === source.id\n            )\n          }));\n        }\n      );\n    });\n\nexport const getPlatform = (platformId: string): Promise<Source> => {\n  return axiosInstance.get(\n    `${CATALOG_INVENTORY_API_BASE}/sources/${platformId}`\n  );\n};\n\nexport const refreshPlatform = (platformId: string): Promise<Source> => {\n  return axiosInstance.patch(\n    `${CATALOG_INVENTORY_API_BASE}/sources/${platformId}/refresh`\n  );\n};\n\nexport const getPlatformItems = (\n  platformId: string,\n  filter?: string,\n  options?: PaginationConfiguration\n): Promise<ApiCollectionResponse<ServiceOffering>> => {\n  const filterQuery = filter ? `&filter[name][contains_i]=${filter}` : '';\n  if (platformId) {\n    return axiosInstance.get(\n      `${CATALOG_INVENTORY_API_BASE}/sources/${platformId}/service_offerings?filter[archived_at][nil]${filterQuery}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(`${CATALOG_INVENTORY_API_BASE}/service_offerings`);\n  }\n};\n\nexport const getPlatformInventories = (\n  platformId: string,\n  filter = '',\n  options = defaultSettings\n): Promise<ApiCollectionResponse<ServiceInventory>> => {\n  if (platformId) {\n    return axiosInstance.get(\n      `${CATALOG_INVENTORY_API_BASE}/sources/${platformId}/service_inventories?filter[name][contains_i]=${filter}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${CATALOG_INVENTORY_API_BASE}/service_inventories?limit=${options.limit}&offset=${options.offset}`\n    );\n  }\n};\n\nexport const getServiceOffering = (\n  serviceOfferingId: string,\n  sourceId: string\n): Promise<{ service: ServiceOffering; source: Source }> =>\n  Promise.all([\n    axiosInstance.get(\n      `${CATALOG_INVENTORY_API_BASE}/service_offerings/${serviceOfferingId}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${sourceId}`)\n      .then((source) => {\n        return axiosInstance\n          .get(`${SOURCES_API_BASE}/source_types/${source.source_type_id}`)\n          .then(({ icon_url }) => ({\n            ...source,\n            icon_url\n          }));\n      })\n  ]).then(([service, source]: [ServiceOffering, Source]) => ({\n    service,\n    source\n  }));\n","import * as ActionTypes from '../action-types';\nimport * as PlatformHelper from '../../helpers/platform/platform-helper';\nimport { Dispatch } from 'redux';\nimport {\n  ServiceInventory,\n  ServiceOffering,\n  Source\n} from '@redhat-cloud-services/sources-client';\nimport { AsyncMiddlewareAction } from '../../types/redux';\nimport { ApiCollectionResponse, SourceDetails } from '../../types/common-types';\nimport { PaginationConfiguration } from '../../helpers/shared/pagination';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nexport const fetchPlatforms = () => (\n  dispatch: Dispatch\n): Promise<{ type: string; payload: SourceDetails }> => {\n  dispatch({ type: `${ActionTypes.FETCH_PLATFORMS}_PENDING` });\n  return PlatformHelper.getPlatforms()\n    .then((data) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_FULFILLED`,\n        payload: data\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchPlatformItems = (\n  platformId: string,\n  filter: string,\n  options: PaginationConfiguration\n): AsyncMiddlewareAction<ApiCollectionResponse<ServiceOffering>> => ({\n  type: ActionTypes.FETCH_PLATFORM_ITEMS,\n  payload: PlatformHelper.getPlatformItems(platformId, filter, options),\n  meta: {\n    platformId,\n    filter,\n    ...options\n  }\n});\n\nexport const fetchMultiplePlatformItems = (\n  platformsId: string[]\n): {\n  type: string;\n  payload: Promise<\n    [] | { [x: string]: ApiCollectionResponse<ServiceOffering> }\n  >;\n} => {\n  const platformPromisses = platformsId.map((platformId) =>\n    PlatformHelper.getPlatformItems(platformId).then((data) => ({\n      [platformId]: data\n    }))\n  );\n  return {\n    type: ActionTypes.FETCH_MULTIPLE_PLATFORM_ITEMS,\n    payload: Promise.all(platformPromisses).then((data) =>\n      data.reduce(\n        (acc, curr) => ({\n          ...acc,\n          ...curr\n        }),\n        {}\n      )\n    )\n  };\n};\n\nexport const fetchSelectedPlatform = (\n  id: string\n): AsyncMiddlewareAction<Source> => ({\n  type: ActionTypes.FETCH_PLATFORM,\n  payload: PlatformHelper.getPlatform(id)\n});\n\nexport const fetchPlatformInventories = (\n  platformId: string,\n  filter: string,\n  options: PaginationConfiguration\n): AsyncMiddlewareAction<ApiCollectionResponse<ServiceInventory>> => ({\n  type: ActionTypes.FETCH_PLATFORM_INVENTORIES,\n  payload: PlatformHelper.getPlatformInventories(platformId, filter, options)\n});\n\nexport const fetchServiceOffering = (\n  serviceOfferingId: string,\n  sourceId: string\n): AsyncMiddlewareAction<{ service: ServiceOffering; source: Source }> => ({\n  type: ActionTypes.FETCH_SERVICE_OFFERING,\n  payload: PlatformHelper.getServiceOffering(serviceOfferingId, sourceId)\n});\n\nexport const refreshPlatform = (platformId: string) => (\n  dispatch: Dispatch\n): AsyncMiddlewareAction => {\n  return dispatch({\n    type: ActionTypes.REFRESH_PLATFORM,\n    payload: PlatformHelper.refreshPlatform(platformId)\n      .then(() =>\n        dispatch(\n          addNotification({\n            variant: 'success',\n            title: 'Success starting the platform refresh',\n            dismissable: true,\n            description: 'The platform refresh started successfully'\n          })\n        )\n      )\n      .catch((error) => {\n        if (error.status === 429) {\n          dispatch(\n            addNotification({\n              variant: 'info',\n              title: 'Platform refresh in progress',\n              dismissable: true,\n              description: 'Platform refresh already running.'\n            })\n          );\n        } else {\n          dispatch({\n            type: `${ActionTypes.REFRESH_PLATFORM}_REJECTED`,\n            payload: error\n          });\n        }\n      })\n  });\n};\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport ConditionalLink from '../../presentational-components/shared/conditional-link';\nimport { BreadcrumbFragment } from '../../redux/reducers/breadcrumbs-reducer';\nimport { CatalogRootState } from '../../types/redux';\n\nexport interface CatalogBreadcrumbsProps {\n  breadcrumbfragments?: BreadcrumbFragment[];\n}\nconst CatalogBreadcrumbs: React.ComponentType<CatalogBreadcrumbsProps> = ({\n  breadcrumbfragments = []\n}) => {\n  let fragments = breadcrumbfragments;\n  if (breadcrumbfragments?.length < 1) {\n    fragments = useSelector<CatalogRootState, BreadcrumbFragment[]>(\n      ({ breadcrumbsReducer: { fragments } }) => fragments\n    );\n  }\n\n  if (fragments.length <= 1) {\n    return null;\n  }\n\n  return (\n    <Breadcrumb>\n      {fragments.map(({ title, pathname, searchParams }, index) => (\n        <ConditionalLink\n          pathname={!(fragments.length === index + 1) ? pathname : undefined}\n          searchParams={searchParams}\n          nav\n          exact\n          key={pathname}\n          className=\"pf-c-breadcrumb__item\"\n        >\n          <BreadcrumbItem\n            showDivider={index > 0}\n            isActive={fragments.length === index + 1}\n          >\n            {title}\n          </BreadcrumbItem>\n        </ConditionalLink>\n      ))}\n    </Breadcrumb>\n  );\n};\n\nexport default CatalogBreadcrumbs;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  Link,\n  NavLink,\n  useLocation,\n  LinkProps,\n  NavLinkProps\n} from 'react-router-dom';\nimport styled from 'styled-components';\nimport { StringObject } from '../../types/common-types';\n\nconst StyledLink = styled(({ isDisabled, ...props }) => <Link {...props} />)`\n  pointer-events: ${({ isDisabled }) => (isDisabled ? 'none' : 'initial')};\n`;\n\nconst StyledNavLink = styled(({ isDisabled, ...props }) => (\n  <NavLink {...props} />\n))`\n  pointer-events: ${({ isDisabled }) => (isDisabled ? 'none' : 'initial')};\n`;\n\nconst createSearchQuery = (\n  search: string,\n  searchParams: StringObject,\n  preserveSearch: boolean\n): string => {\n  const paramsQuery = Object.entries(searchParams)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&');\n  return preserveSearch\n    ? `${search}${paramsQuery.length > 0 ? `&${paramsQuery}` : ''}`\n    : paramsQuery.length > 0\n    ? `?${paramsQuery}`\n    : '';\n};\n\nexport type CatalogLinkTo =\n  | string\n  | { pathname: string; search?: string; hash?: string };\nexport interface CatalogLinkProps\n  extends Omit<LinkProps, 'to'>,\n    Omit<NavLinkProps, 'to'> {\n  pathname: string;\n  searchParams?: StringObject;\n  nav?: boolean;\n  preserveSearch?: boolean;\n  preserveHash?: boolean;\n  showDivider?: boolean;\n  to?: CatalogLinkTo;\n  isDisabled?: boolean;\n}\nconst CatalogLink: React.ComponentType<CatalogLinkProps> = ({\n  pathname,\n  searchParams = {},\n  nav = false,\n  preserveSearch = false,\n  preserveHash = false,\n  showDivider,\n  ...props\n}) => {\n  const { search, hash } = useLocation();\n  const Component = nav ? StyledNavLink : StyledLink;\n  const to = {\n    pathname,\n    search: createSearchQuery(search, searchParams, preserveSearch),\n    hash: preserveHash ? hash : undefined\n  };\n  return <Component {...props} to={to} />;\n};\n\nexport default CatalogLink;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport styled from 'styled-components';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterInputGroup = styled.div`\n  position: relative;\n  width: 300px;\n  height: 36px;\n`;\n\nconst FilterInput = styled(TextInput)`\n  position: absolute;\n  width: 300px;\n  padding-right: 34px;\n  background: transparent;\n`;\n\nconst FilterIconsContainer = styled.span`\n  position: absolute;\n  right: 8px;\n  top: 8px;\n`;\n\nconst StyledCloseIcon = styled(CloseIcon)`\n  z-index: 1000;\n  fill: #72767b;\n  :hover {\n    fill: var(--pf-global--Color--100);\n    cursor: pointer;\n  }\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  z-index: 1000;\n  fill: #72767b;\n`;\n\nexport interface FilterToolbarItemProps {\n  searchValue?: string;\n  onFilterChange: (value: string) => void;\n  placeholder?: string;\n  isClearable?: boolean;\n}\nconst FilterToolbarItem: React.ComponentType<FilterToolbarItemProps> = ({\n  searchValue = '',\n  onFilterChange,\n  placeholder,\n  isClearable = false,\n  ...rest\n}) => (\n  <ToolbarItem>\n    <FilterInputGroup>\n      <FilterInput\n        id=\"toolbar-filter\"\n        placeholder={placeholder}\n        value={searchValue}\n        type=\"text\"\n        onChange={onFilterChange}\n        aria-label={placeholder}\n        {...rest}\n      />\n      <FilterIconsContainer>\n        {(isClearable && searchValue && (\n          <StyledCloseIcon\n            width=\"16\"\n            height=\"16\"\n            onClick={() => onFilterChange('')}\n          />\n        )) || <StyledSearchIcon />}\n      </FilterIconsContainer>\n    </FilterInputGroup>\n  </ToolbarItem>\n);\n\nexport default FilterToolbarItem;\n","/* eslint-disable react/prop-types */\nimport React, { ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Label,\n  Level,\n  LevelItem,\n  ToolbarItem,\n  ToolbarContent,\n  ButtonProps,\n  LabelProps\n} from '@patternfly/react-core';\n\nimport FilterToolbarItem from '../presentational-components/shared/filter-toolbar-item';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../presentational-components/shared/top-toolbar';\nimport AppTabs from '../presentational-components/shared/app-tabs';\nimport CatalogLink from '../smart-components/common/catalog-link';\nimport {\n  StyledToolbar,\n  StyledToolbarGroup,\n  StyledToolbarProps\n} from '../presentational-components/styled-components/toolbars';\n\nexport interface ToolbarButtonProps extends Omit<ButtonProps, 'title'> {\n  title: ReactNode;\n}\n\nexport interface ToolbarLabelProps extends Omit<LabelProps, 'title'> {\n  title: ReactNode;\n}\n\nconst ToolbarButton: React.ComponentType<ToolbarButtonProps> = ({\n  title,\n  ...props\n}) => <Button {...props}>{title}</Button>;\n\nToolbarButton.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst ToolbarLabel: React.ComponentType<ToolbarLabelProps> = ({\n  title,\n  ...props\n}) => <Label {...props}>{title}</Label>;\n\nToolbarLabel.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst AppToolbar: React.ComponentType<StyledToolbarProps> = ({\n  children,\n  ...props\n}) => (\n  <StyledToolbar className=\"pf-u-p-0\" {...props}>\n    <ToolbarContent className=\"pf-u-pl-0\">{children}</ToolbarContent>\n  </StyledToolbar>\n);\nconst toolbarMapper = {\n  TopToolbar,\n  TopToolbarTitle,\n  Toolbar: AppToolbar,\n  ToolbarGroup: StyledToolbarGroup,\n  ToolbarItem,\n  FilterToolbarItem,\n  Link: CatalogLink,\n  Level,\n  LevelItem,\n  Button: ToolbarButton,\n  AppTabs,\n  Label: ToolbarLabel\n};\n\nexport const toolbarComponentTypes = {\n  TOP_TOOLBAR: 'TopToolbar',\n  TOP_TOOLBAR_TITLE: 'TopToolbarTitle',\n  TOOLBAR: 'Toolbar',\n  TOOLBAR_ITEM: 'ToolbarItem',\n  TOOLBAR_GROUP: 'ToolbarGroup',\n  FILTER_TOOLBAR_ITEM: 'FilterToolbarItem',\n  LINK: 'Link',\n  BUTTON: 'Button',\n  LEVEL: 'Level',\n  LEVEL_ITEM: 'LevelItem',\n  TABS: 'AppTabs',\n  LABEL: 'Label'\n};\n\nexport default toolbarMapper;\n","/* eslint-disable react/prop-types */\nimport React, { createContext, ReactNode } from 'react';\nimport toolbarMapper, { toolbarComponentTypes } from './toolbar-mapper';\nimport { AnyObject, ValueOf } from '../types/common-types';\n\nexport interface ToolbarField extends AnyObject {\n  component:\n    | ValueOf<typeof toolbarMapper>\n    | React.ComponentType\n    | ValueOf<typeof toolbarComponentTypes>;\n  hidden?: boolean;\n  fields?: ToolbarField[];\n  key: string;\n}\n\nexport interface ToolbarSchema {\n  fields: ToolbarField[];\n}\n\nconst ToolbarContext = createContext<{\n  render?: (fields: ToolbarField[]) => ReactNode;\n  componentMapper?: typeof toolbarMapper;\n}>({});\n\ninterface ComponentProps extends AnyObject {\n  component:\n    | ValueOf<typeof toolbarMapper>\n    | React.ComponentType\n    | ValueOf<typeof toolbarComponentTypes>;\n}\nconst Component: React.ComponentType<ComponentProps> = ({\n  component,\n  ...props\n}) => (\n  <ToolbarContext.Consumer>\n    {({ componentMapper }) => {\n      const C =\n        typeof component === 'string'\n          ? componentMapper &&\n            componentMapper[component as keyof typeof toolbarMapper]\n          : (component as React.ComponentType<any>);\n      return C ? <C {...props} /> : null;\n    }}\n  </ToolbarContext.Consumer>\n);\n\nconst render = (fields: ToolbarField[]): React.ReactNode =>\n  fields.map(({ hidden, fields, key, ...field }) =>\n    hidden ? null : fields ? (\n      <Component key={key} {...field}>\n        {render(fields)}\n      </Component>\n    ) : (\n      <Component key={key} {...field} />\n    )\n  );\n\nexport interface ToolbarRendererProps {\n  schema: ToolbarSchema;\n  componentMapper?: typeof toolbarMapper;\n}\nconst ToolbarRenderer: React.ComponentType<ToolbarRendererProps> = ({\n  schema,\n  componentMapper = toolbarMapper\n}) => (\n  <ToolbarContext.Provider value={{ render, componentMapper }}>\n    {render(schema.fields)}\n  </ToolbarContext.Provider>\n);\n\nexport default ToolbarRenderer;\n","import { useHistory } from 'react-router-dom';\nimport { History, Path } from 'history';\nimport { AnyObject } from '@data-driven-forms/react-form-renderer';\n\nexport type EnhancedHistoryPushtarget =\n  | Path\n  | { pathname: string; hash?: string; search?: string; state?: AnyObject };\n\nconst removeSearchQuery = (target: EnhancedHistoryPushtarget) => {\n  if (typeof target === 'string') {\n    return target.split('?')[0];\n  }\n\n  if (typeof target === 'object') {\n    return {\n      ...target,\n      search: undefined\n    };\n  }\n\n  return target;\n};\n\n/**\n * Wrapper around useHistory hook which adds aditional settings to standard history methods\n * @param {Boolean} removeSearch if true, using history navigation methods will remove search string from path\n * @param {Boolean} keepHash if true, using history navigation methods will not remove hash from URL\n */\nconst useEnhancedHistory = ({\n  removeSearch,\n  keepHash\n}: {\n  removeSearch?: boolean;\n  keepHash?: boolean;\n} = {}): History<History.UnknownFacade> => {\n  const history = useHistory();\n  return {\n    ...history,\n    push: (target: EnhancedHistoryPushtarget) => {\n      let internalTarget = target;\n      if (keepHash && history.location.hash.length > 0) {\n        internalTarget =\n          typeof internalTarget === 'object'\n            ? { ...internalTarget, hash: history.location.hash }\n            : `${internalTarget}${history.location.hash}`;\n      }\n\n      if (removeSearch) {\n        return history.push(removeSearchQuery(internalTarget));\n      }\n\n      return history.push(internalTarget);\n    }\n  };\n};\n\nexport default useEnhancedHistory;\n"],"names":["tabItems","push","useLocation","pathname","search","activeTab","find","name","includes","Tabs","activeKey","eventKey","onSelect","_event","tabIndex","map","item","Tab","title","key","disabled","children","props","Fragment","paddingBottom","breadcrumbs","breadcrumbfragments","rest","standalone","useContext","className","TopToolbarTitle","description","noData","LevelItem","TextContent","Text","component","TextVariants","axiosInstance","post","refreshPlatform","platformId","patch","getPlatformItems","filter","options","filterQuery","get","limit","offset","getPlatformInventories","getServiceOffering","serviceOfferingId","sourceId","Promise","all","then","source","source_type_id","icon_url","service","fetchPlatforms","dispatch","type","query","sourceIds","sources","id","length","join","sourceDetails","data","sourceDetail","payload","catch","error","fetchPlatformItems","meta","fetchSelectedPlatform","fetchPlatformInventories","fetchServiceOffering","variant","dismissable","status","fragments","Breadcrumb","index","searchParams","undefined","nav","exact","BreadcrumbItem","showDivider","isActive","StyledLink","Link","StyledNavLink","NavLink","createSearchQuery","preserveSearch","paramsQuery","Object","entries","preserveHash","hash","Component","to","FilterInputGroup","FilterInput","TextInput","FilterIconsContainer","StyledCloseIcon","CloseIcon","StyledSearchIcon","SearchIcon","ToolbarButton","Button","propTypes","ToolbarLabel","Label","toolbarMapper","TopToolbar","Toolbar","ToolbarContent","ToolbarGroup","ToolbarItem","FilterToolbarItem","searchValue","onFilterChange","placeholder","isClearable","value","onChange","width","height","onClick","Level","AppTabs","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","TOOLBAR","TOOLBAR_ITEM","TOOLBAR_GROUP","FILTER_TOOLBAR_ITEM","LINK","BUTTON","LEVEL","LEVEL_ITEM","TABS","LABEL","ToolbarContext","createContext","Consumer","componentMapper","C","render","fields","hidden","field","schema","Provider","removeSearch","keepHash","history","useHistory","target","internalTarget","location","split","removeSearchQuery"],"sourceRoot":""}