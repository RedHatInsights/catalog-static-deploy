{"version":3,"file":"js/platform.1644529017148.430f5cb450839737df1d.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Level/LevelItem.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/smart-components/platform/platform.js","webpack:///./src/toolbar/schemas/platforms-toolbar.schema.js","webpack:///./src/presentational-components/shared/app-tabs.tsx","webpack:///./src/smart-components/common/async-pagination.tsx","webpack:///./src/presentational-components/shared/filter-toolbar-item.tsx","webpack:///./src/toolbar/toolbar-mapper.tsx","webpack:///./src/toolbar/toolbar-renderer.tsx","webpack:///./src/helpers/shared/breadcrumbs-creators.ts","webpack:///./src/redux/actions/breadcrumbs-actions.ts","webpack:///./src/utilities/use-breadcrumbs.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LevelItem = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst LevelItem = (_a) => {\n    var { children = null } = _a, props = tslib_1.__rest(_a, [\"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props), children));\n};\nexports.LevelItem = LevelItem;\nexports.LevelItem.displayName = 'LevelItem';\n//# sourceMappingURL=LevelItem.js.map","import React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Title } from \"@patternfly/react-core/dist/esm/components/Title/Title.js\";\n/**\n * This is the title section of the pageHeader\n */\n\nvar PageHeaderTitle = function PageHeaderTitle(_ref) {\n  var className = _ref.className,\n      title = _ref.title;\n  var pageHeaderTitleClasses = classNames(className);\n  return /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h1\",\n    size: \"2xl\",\n    className: pageHeaderTitleClasses,\n    \"widget-type\": \"InsightsPageHeaderTitle\"\n  }, \" \", title, \" \");\n};\n\nexport default PageHeaderTitle;\nPageHeaderTitle.propTypes = {\n  title: propTypes.node.isRequired,\n  className: propTypes.string\n};","import React, { Fragment, useEffect, lazy, Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { isStandalone, scrollToTop } from '../../helpers/shared/helpers';\nimport {\n  fetchSelectedPlatform,\n  fetchPlatforms\n} from '../../redux/actions/platform-actions';\nimport {\n  fetchSelectedPlatform as fetchSelectedPlatformS,\n  fetchPlatforms as fetchPlatformsS\n} from '../../redux/actions/platform-actions-s';\n\nimport useQuery from '../../utilities/use-query';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useBreadcrumbs from '../../utilities/use-breadcrumbs';\nimport {\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORM_INVENTORIES_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_TEMPLATES_ROUTE,\n  PLATFORM_DETAILS_ROUTE\n} from '../../constants/routes';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { createPlatformsTopToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport { PlatformToolbarPlaceholder } from '../../presentational-components/shared/loader-placeholders';\nimport { LevelItem } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport labelMessages from '../../messages/labels.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst PlatformDetails = lazy(() =>\n  import(/* webpackChunkName: \"platform-details\" */ './platform-details')\n);\n\nconst PlatformTemplates = lazy(() =>\n  import(/* webpackChunkName: \"platform-templates\" */ './platform-templates')\n);\n\nconst PlatformInventories = lazy(() =>\n  import(\n    /* webpackChunkName: \"platform-inventories\" */ './platform-inventories'\n  )\n);\n\nconst ServiceOfferingDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"service-offering-detail\" */ './service-offering/service-offering-detail'\n  )\n);\n\nconst tabItems = [\n  {\n    eventKey: 0,\n    title: 'Templates',\n    name: `/platforms/platform/platform-templates`\n  },\n  {\n    eventKey: 1,\n    title: 'Inventories',\n    name: `/platforms/platform/platform-inventories`\n  },\n  {\n    eventKey: 2,\n    title: 'Summary',\n    name: `/platforms/platform/platform-details`\n  }\n];\n\nconst Platform = () => {\n  const dispatch = useDispatch();\n  const [{ platform }] = useQuery(['platform']);\n  const { selectedPlatform, serviceOffering } = useSelector(\n    ({ platformReducer: { selectedPlatform, serviceOffering } }) => ({\n      selectedPlatform,\n      serviceOffering\n    })\n  );\n\n  const resetBreadcrumbs = useBreadcrumbs([selectedPlatform, serviceOffering]);\n  const formatMessage = useFormatMessage();\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(\n        isStandalone()\n          ? fetchSelectedPlatformS(platform)\n          : fetchSelectedPlatform(platform)\n      ),\n      dispatch(isStandalone() ? fetchPlatformsS() : fetchPlatforms())\n    ]);\n    scrollToTop();\n    return () => {\n      resetBreadcrumbs();\n    };\n  }, [platform]);\n\n  const platformAvailable = (platform) => ({\n    color: platform.availability_status === 'available' ? 'green' : 'red',\n    icon: <InfoCircleIcon />,\n    title:\n      platform.availability_status === 'available'\n        ? formatMessage(labelMessages.available)\n        : formatMessage(labelMessages.notAvailable)\n  });\n\n  return (\n    <Fragment>\n      <Route\n        exact\n        path={[\n          PLATFORM_INVENTORIES_ROUTE,\n          PLATFORM_ROUTE,\n          PLATFORM_TEMPLATES_ROUTE,\n          PLATFORM_DETAILS_ROUTE,\n          `${PLATFORM_INVENTORIES_ROUTE}/*`\n        ]}\n      >\n        <LevelItem>\n          <ToolbarRenderer\n            schema={createPlatformsTopToolbarSchema({\n              title: selectedPlatform.name,\n              paddingBottom: false,\n              tabItems,\n              platformAvailable: () => platformAvailable(selectedPlatform)\n            })}\n          />\n        </LevelItem>\n      </Route>\n      <Suspense fallback={<PlatformToolbarPlaceholder />}>\n        <Switch>\n          <Route path={PLATFORM_SERVICE_OFFERINGS_ROUTE}>\n            <ServiceOfferingDetail />\n          </Route>\n          <Route path={PLATFORM_INVENTORIES_ROUTE}>\n            <PlatformInventories />\n          </Route>\n          <Route path={PLATFORM_DETAILS_ROUTE}>\n            <PlatformDetails />\n          </Route>\n          <Route path={[PLATFORM_TEMPLATES_ROUTE, PLATFORM_ROUTE]}>\n            <PlatformTemplates />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Fragment>\n  );\n};\n\nexport default Platform;\n","import AppTabs from '../../presentational-components/shared/app-tabs';\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nexport const createPlatformsToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  title\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: 'Filter by platform'\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields: []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsTopToolbarSchema = ({\n  title,\n  paddingBottom,\n  tabItems,\n  platformAvailable\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      paddingBottom,\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          fields: [\n            {\n              component: toolbarComponentTypes.TOOLBAR_GROUP,\n              key: 'platform-toolbar',\n              fields: [\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'platform-toolbar-group',\n                  fields: [\n                    {\n                      component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n                      key: 'platforms-toolbar-title',\n                      title\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.TOOLBAR_GROUP,\n              key: 'platform-toolbar',\n              alignment: 'alignRight',\n              fields: [\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'platform-label',\n                  alignment: 'alignRight',\n                  fields: [\n                    {\n                      component: toolbarComponentTypes.LABEL,\n                      key: 'platform-available-label',\n                      variant: 'outline',\n                      ...platformAvailable()\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          component: toolbarComponentTypes.LEVEL_ITEM,\n          key: 'tabs-level-item',\n          fields: tabItems\n            ? [\n                {\n                  component: AppTabs,\n                  key: 'platform-tabs',\n                  tabItems\n                }\n              ]\n            : []\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsFilterToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  meta,\n  apiRequest,\n  filterPlaceholder\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOOLBAR,\n      key: 'platforms-filter-toolbar',\n      className: 'pf-u-pt-md pf-u-pb-md pf-u-pr-lg pf-u-pl-lg',\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          className: 'pf-m-grow',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: filterPlaceholder\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields:\n                meta.count > 0\n                  ? [\n                      {\n                        component: AsyncPagination,\n                        key: 'platform-pagination',\n                        apiRequest,\n                        meta,\n                        isCompact: true\n                      }\n                    ]\n                  : []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation } from 'react-router-dom';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nexport interface AppTabsProps {\n  tabItems: {\n    name: string;\n    eventKey: number;\n    title: string;\n    disabled?: boolean;\n  }[];\n}\nconst AppTabs: React.ComponentType<AppTabsProps> = ({ tabItems }) => {\n  const { push } = useEnhancedHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (\n    _event: React.MouseEvent<HTMLElement, MouseEvent>,\n    tabIndex: number | string\n  ) => push({ pathname: tabItems[tabIndex as number].name, search });\n\n  return (\n    <Tabs\n      activeKey={activeTab ? activeTab.eventKey : 0}\n      onSelect={handleTabClick}\n    >\n      {tabItems.map((item) => (\n        <Tab\n          title={item.title}\n          key={item.eventKey}\n          eventKey={item.eventKey}\n          name={item.name}\n          disabled={item.disabled}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nexport default AppTabs;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { OnPerPageSelect, OnSetPage, Pagination } from '@patternfly/react-core';\n\nimport {\n  getCurrentPage,\n  getNewPage,\n  PaginationConfiguration\n} from '../../helpers/shared/pagination';\nimport { AnyObject } from '@data-driven-forms/react-form-renderer';\n\nexport interface AsyncPaginationProps<T = any> extends AnyObject {\n  meta: PaginationConfiguration;\n  apiRequest: (...args: any[]) => Promise<T>;\n  apiProps?: any;\n  className?: string;\n  isCompact?: boolean;\n}\nconst AsyncPagination: React.ComponentType<AsyncPaginationProps> = ({\n  meta: { limit = 50, count = 0, offset = 0 },\n  apiProps,\n  apiRequest,\n  className = '',\n  isCompact = false,\n  ...props\n}) => {\n  const handleOnPerPageSelect: OnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage: OnSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        dropDirection=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default AsyncPagination;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport styled from 'styled-components';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterInputGroup = styled.div`\n  position: relative;\n  width: 300px;\n  height: 36px;\n`;\n\nconst FilterInput = styled(TextInput)`\n  position: absolute;\n  width: 300px;\n  padding-right: 34px;\n  background: transparent;\n`;\n\nconst FilterIconsContainer = styled.span`\n  position: absolute;\n  right: 8px;\n  top: 8px;\n`;\n\nconst StyledCloseIcon = styled(CloseIcon)`\n  z-index: 1000;\n  fill: #72767b;\n  :hover {\n    fill: var(--pf-global--Color--100);\n    cursor: pointer;\n  }\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  z-index: 1000;\n  fill: #72767b;\n`;\n\nexport interface FilterToolbarItemProps {\n  searchValue?: string;\n  onFilterChange: (value: string) => void;\n  placeholder?: string;\n  isClearable?: boolean;\n}\nconst FilterToolbarItem: React.ComponentType<FilterToolbarItemProps> = ({\n  searchValue = '',\n  onFilterChange,\n  placeholder,\n  isClearable = false,\n  ...rest\n}) => (\n  <ToolbarItem>\n    <FilterInputGroup>\n      <FilterInput\n        id=\"toolbar-filter\"\n        placeholder={placeholder}\n        value={searchValue}\n        type=\"text\"\n        onChange={onFilterChange}\n        aria-label={placeholder}\n        {...rest}\n      />\n      <FilterIconsContainer>\n        {(isClearable && searchValue && (\n          <StyledCloseIcon\n            width=\"16\"\n            height=\"16\"\n            onClick={() => onFilterChange('')}\n          />\n        )) || <StyledSearchIcon />}\n      </FilterIconsContainer>\n    </FilterInputGroup>\n  </ToolbarItem>\n);\n\nexport default FilterToolbarItem;\n","/* eslint-disable react/prop-types */\nimport React, { ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Label,\n  Level,\n  LevelItem,\n  ToolbarItem,\n  ToolbarContent,\n  ButtonProps,\n  LabelProps\n} from '@patternfly/react-core';\n\nimport FilterToolbarItem from '../presentational-components/shared/filter-toolbar-item';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../presentational-components/shared/top-toolbar';\nimport AppTabs from '../presentational-components/shared/app-tabs';\nimport CatalogLink from '../smart-components/common/catalog-link';\nimport {\n  StyledToolbar,\n  StyledToolbarGroup,\n  StyledToolbarProps\n} from '../presentational-components/styled-components/toolbars';\n\nexport interface ToolbarButtonProps extends Omit<ButtonProps, 'title'> {\n  title: ReactNode;\n}\n\nexport interface ToolbarLabelProps extends Omit<LabelProps, 'title'> {\n  title: ReactNode;\n}\n\nconst ToolbarButton: React.ComponentType<ToolbarButtonProps> = ({\n  title,\n  ...props\n}) => <Button {...props}>{title}</Button>;\n\nToolbarButton.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst ToolbarLabel: React.ComponentType<ToolbarLabelProps> = ({\n  title,\n  ...props\n}) => <Label {...props}>{title}</Label>;\n\nToolbarLabel.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst AppToolbar: React.ComponentType<StyledToolbarProps> = ({\n  children,\n  ...props\n}) => (\n  <StyledToolbar className=\"pf-u-p-0\" {...props}>\n    <ToolbarContent className=\"pf-u-pl-0\">{children}</ToolbarContent>\n  </StyledToolbar>\n);\nconst toolbarMapper = {\n  TopToolbar,\n  TopToolbarTitle,\n  Toolbar: AppToolbar,\n  ToolbarGroup: StyledToolbarGroup,\n  ToolbarItem,\n  FilterToolbarItem,\n  Link: CatalogLink,\n  Level,\n  LevelItem,\n  Button: ToolbarButton,\n  AppTabs,\n  Label: ToolbarLabel\n};\n\nexport const toolbarComponentTypes = {\n  TOP_TOOLBAR: 'TopToolbar',\n  TOP_TOOLBAR_TITLE: 'TopToolbarTitle',\n  TOOLBAR: 'Toolbar',\n  TOOLBAR_ITEM: 'ToolbarItem',\n  TOOLBAR_GROUP: 'ToolbarGroup',\n  FILTER_TOOLBAR_ITEM: 'FilterToolbarItem',\n  LINK: 'Link',\n  BUTTON: 'Button',\n  LEVEL: 'Level',\n  LEVEL_ITEM: 'LevelItem',\n  TABS: 'AppTabs',\n  LABEL: 'Label'\n};\n\nexport default toolbarMapper;\n","/* eslint-disable react/prop-types */\nimport React, { createContext, ReactNode } from 'react';\nimport toolbarMapper, { toolbarComponentTypes } from './toolbar-mapper';\nimport { AnyObject, ValueOf } from '../types/common-types';\n\nexport interface ToolbarField extends AnyObject {\n  component:\n    | ValueOf<typeof toolbarMapper>\n    | React.ComponentType\n    | ValueOf<typeof toolbarComponentTypes>;\n  hidden?: boolean;\n  fields?: ToolbarField[];\n  key: string;\n}\n\nexport interface ToolbarSchema {\n  fields: ToolbarField[];\n}\n\nconst ToolbarContext = createContext<{\n  render?: (fields: ToolbarField[]) => ReactNode;\n  componentMapper?: typeof toolbarMapper;\n}>({});\n\ninterface ComponentProps extends AnyObject {\n  component:\n    | ValueOf<typeof toolbarMapper>\n    | React.ComponentType\n    | ValueOf<typeof toolbarComponentTypes>;\n}\nconst Component: React.ComponentType<ComponentProps> = ({\n  component,\n  ...props\n}) => (\n  <ToolbarContext.Consumer>\n    {({ componentMapper }) => {\n      const C =\n        typeof component === 'string'\n          ? componentMapper &&\n            componentMapper[component as keyof typeof toolbarMapper]\n          : (component as React.ComponentType<any>);\n      return C ? <C {...props} /> : null;\n    }}\n  </ToolbarContext.Consumer>\n);\n\nconst render = (fields: ToolbarField[]): React.ReactNode =>\n  fields.map(({ hidden, fields, key, ...field }) =>\n    hidden ? null : fields ? (\n      <Component key={key} {...field}>\n        {render(fields)}\n      </Component>\n    ) : (\n      <Component key={key} {...field} />\n    )\n  );\n\nexport interface ToolbarRendererProps {\n  schema: ToolbarSchema;\n  componentMapper?: typeof toolbarMapper;\n}\nconst ToolbarRenderer: React.ComponentType<ToolbarRendererProps> = ({\n  schema,\n  componentMapper = toolbarMapper\n}) => (\n  <ToolbarContext.Provider value={{ render, componentMapper }}>\n    {render(schema.fields)}\n  </ToolbarContext.Provider>\n);\n\nexport default ToolbarRenderer;\n","import {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  ORDER_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORMS_ROUTE,\n  ORDERS_ROUTE,\n  EDIT_SURVEY_ROUTE,\n  ADD_PRODUCTS_ROUTE,\n  PORTFOLIO_ITEM_ROUTE_EDIT\n} from '../../constants/routes';\nimport { PortfolioReducerState } from '../../redux/reducers/portfolio-reducer';\nimport { ReactNode } from 'react';\nimport { PlatformReducerState } from '../../redux/reducers/platform-reducer';\nimport { OrderReducerState } from '../../redux/reducers/order-reducer';\n\nexport const BASE_PORTFOLIO_FRAGMENTS = [\n  {\n    title: 'Portfolios',\n    pathname: PORTFOLIOS_ROUTE,\n    searchParams: {}\n  }\n];\n\nexport const ENTITIES_EXTRA_PARAMS = {\n  'portfolio-item': ['source', 'portfolio'],\n  'edit-survey': ['source', 'portfolio', 'portfolio-item']\n};\n\nexport const FRAGMENT_TITLE = {\n  [PORTFOLIO_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.selectedPortfolio.name,\n  [PORTFOLIO_ITEM_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.portfolioItem.portfolioItem.name,\n  [EDIT_SURVEY_ROUTE]: (): string => 'Edit survey',\n  [ADD_PRODUCTS_ROUTE]: (): string => 'Add products',\n  [PLATFORM_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.selectedPlatform.name,\n  [PLATFORM_SERVICE_OFFERINGS_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.serviceOffering.service.name,\n  [ORDER_ROUTE]: (\n    getState: () => { orderReducer: OrderReducerState }\n  ): ReactNode => {\n    const { portfolioItem, order } = getState().orderReducer.orderDetail;\n    return `${portfolioItem.name} # ${order.id}`;\n  },\n  [PORTFOLIO_ITEM_ROUTE_EDIT]: (): string => 'Edit product'\n};\n\nexport const FRAGMENT_PREFIX = {\n  [PORTFOLIO_ROUTE]: {\n    pathname: PORTFOLIOS_ROUTE,\n    title: 'Portfolios',\n    searchParams: {}\n  },\n  [PLATFORM_ROUTE]: {\n    pathname: PLATFORMS_ROUTE,\n    title: 'Platforms',\n    searchParams: {}\n  },\n  [ORDER_ROUTE]: {\n    pathname: ORDERS_ROUTE,\n    title: 'Orders',\n    searchParams: {}\n  }\n};\n","import { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport {\n  FRAGMENT_TITLE,\n  ENTITIES_EXTRA_PARAMS,\n  FRAGMENT_PREFIX\n} from '../../helpers/shared/breadcrumbs-creators';\nimport { Dispatch } from 'redux';\nimport { BreadcrumbFragment } from '../reducers/breadcrumbs-reducer';\nimport { GetReduxState } from '../../types/redux';\nimport { AnyObject, ReduxAction } from '../../types/common-types';\n\nexport const createBreadcrumbsFromLocations = (\n  pathname = '',\n  search: AnyObject = {}\n) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): ReduxAction<BreadcrumbFragment[]> => {\n  if (pathname.length === 0) {\n    return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: [] });\n  }\n\n  const prefix: string[] = [];\n  if (pathname === '/portfolios/portfolio') {\n    prefix.push('/portfolios');\n  }\n\n  if (pathname.startsWith('/portfolios/portfolio/portfolio-item')) {\n    prefix[0] = '/portfolios';\n    prefix[1] = '/portfolio';\n    if (pathname.startsWith('/portfolios/portfolio/portfolio-item/')) {\n      prefix[2] = '/portfolio-item';\n    }\n  }\n\n  if (pathname.startsWith('/platforms/platform')) {\n    prefix[0] = '/platforms';\n  }\n\n  pathname = pathname.replace(prefix[0], '');\n  let result = pathname\n    .replace(/^\\//, '')\n    .split('/')\n    .reduce<BreadcrumbFragment[]>((acc, curr, index) => {\n      const pathname = `${\n        index > 0 && acc[index - 1] ? acc[index - 1].pathname : ''\n      }${prefix[index]}/${curr}`;\n      const generateTitle = (FRAGMENT_TITLE[\n        pathname as keyof typeof FRAGMENT_TITLE\n      ] as unknown) as (getState: GetReduxState) => string;\n      if (!generateTitle) {\n        return acc;\n      }\n\n      const searchParams = {\n        ...(index > 0 && acc[index - 1]?.searchParams),\n        ...(search[curr] ? { [curr]: search[curr] } : {})\n      };\n      if ((ENTITIES_EXTRA_PARAMS as AnyObject)[curr]) {\n        (ENTITIES_EXTRA_PARAMS as AnyObject)[curr].forEach((key: string) => {\n          searchParams[key] = search[key];\n        });\n      }\n\n      if ((FRAGMENT_PREFIX as AnyObject)[pathname]) {\n        acc = [(FRAGMENT_PREFIX as AnyObject)[pathname]];\n      }\n\n      const currTitle = generateTitle(getState);\n\n      return !currTitle\n        ? acc\n        : [\n            ...acc,\n            {\n              pathname,\n              searchParams,\n              title: currTitle\n            }\n          ];\n    }, []);\n  if (result.length > 0 && (FRAGMENT_PREFIX as AnyObject)[result[0].pathname]) {\n    result = [(FRAGMENT_PREFIX as AnyObject)[result[0].pathname], ...result];\n  }\n\n  // if portfolio item, add the 2 breadcrumbs\n  return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: result });\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createBreadcrumbsFromLocations } from '../redux/actions/breadcrumbs-actions';\nimport { INITIALIZE_BREADCRUMBS } from '../redux/action-types';\nimport { AnyObject, ReduxAction } from '../types/common-types';\nimport { AnyAction } from 'redux';\n\nconst useBreadcrumbs = (\n  updateTriggers: any[] = []\n):\n  | (() => ReduxAction<{\n      type: typeof INITIALIZE_BREADCRUMBS;\n    }>)\n  | ReduxAction<{ type: typeof INITIALIZE_BREADCRUMBS }> => {\n  const dispatch = useDispatch();\n  const { pathname, search } = useLocation();\n  if (updateTriggers.length === 0) {\n    return dispatch(\n      (createBreadcrumbsFromLocations('', {}) as unknown) as AnyAction\n    );\n  }\n\n  const searchParams = new URLSearchParams(search);\n  const searchObject: AnyObject = {};\n  searchParams.forEach((value, key) => {\n    searchObject[key] = value;\n  });\n\n  useEffect(() => {\n    dispatch(createBreadcrumbsFromLocations(pathname, searchObject));\n  }, [pathname, ...updateTriggers]);\n\n  return () =>\n    dispatch((createBreadcrumbsFromLocations('', {}) as unknown) as AnyAction);\n};\n\nexport default useBreadcrumbs;\n"],"names":["exports","tslib_1","React","__importStar","_a","children","props","__rest","createElement","Object","assign","PageHeaderTitle","_ref","className","title","pageHeaderTitleClasses","headingLevel","size","propTypes","PlatformDetails","lazy","PlatformTemplates","PlatformInventories","ServiceOfferingDetail","tabItems","eventKey","name","dispatch","useDispatch","useQuery","platform","useSelector","platformReducer","selectedPlatform","serviceOffering","resetBreadcrumbs","useBreadcrumbs","formatMessage","useFormatMessage","useEffect","Promise","all","isStandalone","fetchSelectedPlatformS","fetchSelectedPlatform","fetchPlatformsS","fetchPlatforms","scrollToTop","Fragment","Route","exact","path","PLATFORM_INVENTORIES_ROUTE","PLATFORM_ROUTE","PLATFORM_TEMPLATES_ROUTE","PLATFORM_DETAILS_ROUTE","schema","createPlatformsTopToolbarSchema","paddingBottom","platformAvailable","color","availability_status","icon","labelMessages","Suspense","fallback","Switch","PLATFORM_SERVICE_OFFERINGS_ROUTE","createPlatformsToolbarSchema","searchValue","onFilterChange","fields","component","toolbarComponentTypes","key","placeholder","alignment","variant","AppTabs","createPlatformsFilterToolbarSchema","meta","apiRequest","filterPlaceholder","count","AsyncPagination","isCompact","push","useLocation","pathname","search","activeTab","find","includes","Tabs","activeKey","onSelect","_event","tabIndex","map","item","Tab","disabled","limit","offset","apiProps","Pagination","perPage","itemCount","onPerPageSelect","page","onSetPage","number","debounce","options","request","dropDirection","FilterInputGroup","FilterInput","TextInput","FilterIconsContainer","StyledCloseIcon","CloseIcon","StyledSearchIcon","SearchIcon","ToolbarButton","Button","ToolbarLabel","Label","toolbarMapper","TopToolbar","TopToolbarTitle","Toolbar","ToolbarContent","ToolbarGroup","ToolbarItem","FilterToolbarItem","isClearable","rest","id","value","type","onChange","width","height","onClick","Link","Level","LevelItem","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","TOOLBAR","TOOLBAR_ITEM","TOOLBAR_GROUP","FILTER_TOOLBAR_ITEM","LINK","BUTTON","LEVEL","LEVEL_ITEM","TABS","LABEL","ToolbarContext","createContext","Component","Consumer","componentMapper","C","render","hidden","field","Provider","ENTITIES_EXTRA_PARAMS","FRAGMENT_TITLE","getState","portfolioReducer","selectedPortfolio","portfolioItem","service","orderReducer","orderDetail","order","FRAGMENT_PREFIX","searchParams","createBreadcrumbsFromLocations","length","payload","prefix","startsWith","result","replace","split","reduce","acc","curr","index","generateTitle","forEach","currTitle","updateTriggers","URLSearchParams","searchObject"],"sourceRoot":""}