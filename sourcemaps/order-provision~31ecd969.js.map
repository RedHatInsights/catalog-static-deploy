{"version":3,"sources":["webpack:///./src/smart-components/order/order-detail/order-provision.tsx","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/info-icon.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/layouts/Flex/Flex.js"],"names":["formatMessage","isFetching","setIsFetching","dispatch","order","orderProvision","Promise","all","id","then","state","orderItems","length","isEmpty","direction","default","grow","size","headingLevel","noOrderProvision","rows","map","item","orderItemName","str","translatableState","title","className","component","small","date","updated_at","type","process_scope","charAt","toUpperCase","slice","variant","createOrderItemRow","fetchingOrderProvision","h2","activity","cells","exports","__esModule","InfoIconConfig","name","height","width","svgPath","yOffset","xOffset","InfoIcon","createIcon","Flex","_a","children","spacer","spaceItems","shrink","flex","alignItems","alignContent","alignSelf","align","justifyContent","display","fullWidth","flexWrap","props","Object","assign","displayName"],"mappings":"0gBAyLe,UArI6B,WAC1C,IAAMA,EAAgB,cAChB,EAA8B,oBAAS,GAAtCC,EAAU,KAAEC,EAAa,KAC1BC,EAAW,wBACTC,EAAU,uBAChB,SAAC,GAAsC,OAAT,8BAC/B,MAEKC,EAAiB,uBACrB,SAAC,GAAyC,OAAT,iCASnC,GAPA,qBAAU,WACRH,GAAc,GACdI,QAAQC,IAAI,CAACJ,EAAS,YAAoBC,EAAMI,OAAOC,MAAK,WAC1D,OAAAP,GAAc,QAEf,IAEiB,WAAhBE,EAAMM,OAvBI,SAACL,GACf,OAACA,IACAA,EAAeM,YACqB,IAArCN,EAAeM,WAAWC,OAoBMC,CAAQR,GACtC,OACE,kBAAC,IAAQ,CAACG,GAAG,sBACX,kBAAC,IAAI,CAACM,UAAW,CAAEC,QAAS,UAAYC,KAAM,CAAED,QAAS,SACvD,kBAAC,IAAQ,KACP,kBAAC,IAAQ,CAACE,KAAK,QAEjB,kBAAC,IAAQ,KACP,kBAAC,IAAK,CAACC,aAAa,KAAKD,KAAK,OAC3BjB,EAAc,IAAemB,sBAQ1C,IAyDMC,EAAOf,EAAeM,WAAWU,KAAI,SAACC,GAE1C,OAlDyB,SACzBA,EACAC,EACAvB,GAEA,IAdkBwB,EAcZC,EAAoB,YACxBH,EAAKZ,OAEP,MAAO,CACL,CACEgB,MACE,kBAAC,IAAI,CAACC,UAAU,YAAYC,UAAW,IAAaC,OAClD,kBAAC,aAAU,CAACC,KAAMR,EAAKS,WAAYC,KAAK,YAI9C,CACEN,MACE,kBAAC,IAAI,CAACC,UAAU,YAAYC,UAAW,IAAaC,OAClD,kBAAC,IAAS,MA5BAL,EA4BaF,EAAKW,eA5BLT,aAAG,EAAHA,EAAKU,OAAO,GAAGC,gBAAgBX,aAAG,EAAHA,EAAKY,MAAM,QAgCvE,CACEV,MACE,kBAAC,IAAI,CAACC,UAAU,YAAYC,UAAW,IAAaC,OAClD,kBAAC,IAAS,KAAEN,KAKlB,CACEG,MACE,kBAAC,IAAS,KACR,kBAAC,IAAK,KACA,IACFJ,EAAKZ,OACN,CACD2B,QAAQ,YAEPrC,EAAc,IAAeyB,QAUjCa,CAAmBhB,EADJ,cAAcA,EAAKd,GACMR,MAGjD,OACE,kBAAC,IAAW,KACTC,EACC,kBAAC,IAAQ,KACP,kBAAC,IAAI,CAACa,UAAW,CAAEC,QAAS,UAAYC,KAAM,CAAED,QAAS,SACvD,kBAAC,IAAQ,CAACP,GAAG,4BACX,kBAAC,IAAK,CAACU,aAAa,KAAKD,KAAK,MAC3BjB,EAAc,IAAeuC,0BAGlC,kBAAC,IAAQ,KACP,kBAAC,IAAO,CAACtB,KAAK,UAKpB,kBAAC,IAAI,KACH,kBAAC,IAAQ,KACP,kBAAC,IAAI,CAACU,UAAU,aAAaC,UAAW,IAAaY,IAClDxC,EAAc,IAAeyC,WAEhC,kBAAC,IAAK,cACO,8BACXC,MAnFI,CACd,CAAEhB,MAAO,WACT,CAAEA,MAAO,QACT,CAAEA,MAAO,YACT,CAAEA,MAAO,UAgFCN,KAAMA,GAEN,kBAAC,IAAW,MACZ,kBAAC,IAAS,Y,iCC/KxBuB,EAAQC,YAAa,EACrBD,EAAQE,eAAiB,CACvBC,KAAM,WACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,uTACTC,QAAS,EACTC,QAAS,GAEXR,EAAQS,SAAW,EAAQ,IAAiBC,WAAWV,EAAQE,gBAC/DF,EAAiB,QAAIA,EAAQS,U,iCCX7B,qFAKO,MAAME,EAAQC,IACjB,IAAI,SAAEC,EAAW,KAAI,UAAE7B,EAAY,GAAE,OAAE8B,EAAM,WAAEC,EAAU,KAAE1C,EAAI,OAAE2C,EAAM,KAAEC,EAAI,UAAE9C,EAAS,WAAE+C,EAAU,aAAEC,EAAY,UAAEC,EAAS,MAAEC,EAAK,eAAEC,EAAc,QAAEC,EAAO,UAAEC,EAAS,SAAEC,GAAab,EAAIc,EAAQ,iBAAOd,EAAI,CAAC,WAAY,YAAa,SAAU,aAAc,OAAQ,SAAU,OAAQ,YAAa,aAAc,eAAgB,YAAa,QAAS,iBAAkB,UAAW,YAAa,aACrY,OAAQ,gBAAoB,MAAOe,OAAOC,OAAO,CAAE5C,UAAW,cAAI,IAAOiC,KAAM,YAAqBH,EAAQ,KAAS,YAAqBC,EAAY,KAAS,YAAqB1C,EAAM,KAAS,YAAqB2C,EAAQ,KAAS,YAAqBC,EAAM,KAAS,YAAqB9C,EAAW,KAAS,YAAqB+C,EAAY,KAAS,YAAqBC,EAAc,KAAS,YAAqBC,EAAW,KAAS,YAAqBC,EAAO,KAAS,YAAqBC,EAAgB,KAAS,YAAqBC,EAAS,KAAS,YAAqBC,EAAW,KAAS,YAAqBC,EAAU,KAASzC,IAAc0C,GAAQb,IAE1pBF,EAAKkB,YAAc","file":"js/order-provision~31ecd969.3026090b0504155472c7.js","sourcesContent":["import React, { ReactNode, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Bullseye,\n  Card,\n  CardBody,\n  Flex,\n  Label,\n  Spinner,\n  Text,\n  TextContent,\n  TextVariants,\n  Title\n} from '@patternfly/react-core';\n\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableText\n} from '@patternfly/react-table';\n\nimport InfoIcon from '@patternfly/react-icons/dist/js/icons/info-icon';\nimport { fetchOrderProvision } from '../../../redux/actions/order-actions';\nimport ordersMessages from '../../../messages/orders.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport { CatalogRootState } from '../../../types/redux';\nimport {\n  OrderDetail,\n  OrderProvisionType\n} from '../../../redux/reducers/order-reducer';\nimport statesMessages, {\n  getTranslatableState\n} from '../../../messages/states.messages';\nimport orderStatusMapper from '../order-status-mapper';\nimport {\n  OrderItem,\n  OrderItemStateEnum\n} from '@redhat-cloud-services/catalog-client';\nimport { FormatMessage } from '../../../types/common-types';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\n\n/**\n * We are using type conversion of **request as StringObject** because the generated client does not have correct states listed\n * Probably a discrepancy inside the OpenAPI spec\n */\n\nconst isEmpty = (orderProvision?: OrderProvisionType) =>\n  !orderProvision ||\n  !orderProvision.orderItems ||\n  orderProvision.orderItems.length === 0;\n\nconst OrderProvision: React.ComponentType = () => {\n  const formatMessage = useFormatMessage();\n  const [isFetching, setIsFetching] = useState(true);\n  const dispatch = useDispatch();\n  const { order } = useSelector<CatalogRootState, OrderDetail>(\n    ({ orderReducer: { orderDetail } }) => orderDetail\n  );\n\n  const orderProvision = useSelector<CatalogRootState, OrderProvisionType>(\n    ({ orderReducer: { orderProvision } }) => orderProvision\n  );\n  useEffect(() => {\n    setIsFetching(true);\n    Promise.all([dispatch(fetchOrderProvision(order.id))]).then(() =>\n      setIsFetching(false)\n    );\n  }, []);\n\n  if (order.state === 'Failed' && isEmpty(orderProvision)) {\n    return (\n      <Bullseye id=\"no-order-provision\">\n        <Flex direction={{ default: 'column' }} grow={{ default: 'grow' }}>\n          <Bullseye>\n            <InfoIcon size=\"xl\" />\n          </Bullseye>\n          <Bullseye>\n            <Title headingLevel=\"h1\" size=\"2xl\">\n              {formatMessage(ordersMessages.noOrderProvision)}\n            </Title>\n          </Bullseye>\n        </Flex>\n      </Bullseye>\n    );\n  }\n\n  const capitalize = (str: any) => str?.charAt(0).toUpperCase() + str?.slice(1);\n\n  const columns = [\n    { title: 'Updated' },\n    { title: 'Type' },\n    { title: 'Activity' },\n    { title: 'State' }\n  ];\n\n  const createOrderItemRow = (\n    item: OrderItem,\n    orderItemName: string,\n    formatMessage: FormatMessage\n  ): { title: ReactNode }[] => {\n    const translatableState = getTranslatableState(\n      item.state as OrderItemStateEnum\n    );\n    return [\n      {\n        title: (\n          <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n            <DateFormat date={item.updated_at} type=\"exact\" />\n          </Text>\n        )\n      },\n      {\n        title: (\n          <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n            <TableText>{capitalize(item.process_scope)}</TableText>\n          </Text>\n        )\n      },\n      {\n        title: (\n          <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n            <TableText>{orderItemName}</TableText>\n          </Text>\n        )\n      },\n\n      {\n        title: (\n          <TableText>\n            <Label\n              {...orderStatusMapper[\n                item.state as keyof typeof orderStatusMapper\n              ]}\n              variant=\"outline\"\n            >\n              {formatMessage(statesMessages[translatableState])}\n            </Label>\n          </TableText>\n        )\n      }\n    ];\n  };\n\n  const rows = orderProvision.orderItems.map((item) => {\n    const orderItemName = `Order item ${item.id}`;\n    return createOrderItemRow(item, orderItemName, formatMessage);\n  });\n\n  return (\n    <TextContent>\n      {isFetching ? (\n        <Bullseye>\n          <Flex direction={{ default: 'column' }} grow={{ default: 'grow' }}>\n            <Bullseye id=\"fetching-order-provision\">\n              <Title headingLevel=\"h1\" size=\"xl\">\n                {formatMessage(ordersMessages.fetchingOrderProvision)}\n              </Title>\n            </Bullseye>\n            <Bullseye>\n              <Spinner size=\"xl\" />\n            </Bullseye>\n          </Flex>\n        </Bullseye>\n      ) : (\n        <Card>\n          <CardBody>\n            <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n              {formatMessage(ordersMessages.activity)}\n            </Text>\n            <Table\n              aria-label=\"Order provisioning activity\"\n              cells={columns}\n              rows={rows}\n            >\n              <TableHeader />\n              <TableBody />\n            </Table>\n          </CardBody>\n        </Card>\n      )}\n    </TextContent>\n  );\n};\n\nexport default OrderProvision;\n","\"use strict\"\nexports.__esModule = true;\nexports.InfoIconConfig = {\n  name: 'InfoIcon',\n  height: 512,\n  width: 192,\n  svgPath: 'M20 424.229h20V279.771H20c-11.046 0-20-8.954-20-20V212c0-11.046 8.954-20 20-20h112c11.046 0 20 8.954 20 20v212.229h20c11.046 0 20 8.954 20 20V492c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20v-47.771c0-11.046 8.954-20 20-20zM96 0C56.235 0 24 32.235 24 72s32.235 72 72 72 72-32.235 72-72S135.764 0 96 0z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.InfoIcon = require('../createIcon').createIcon(exports.InfoIconConfig);\nexports[\"default\"] = exports.InfoIcon;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/layouts/Flex/flex';\nimport { formatBreakpointMods } from '../../helpers/util';\nexport const Flex = (_a) => {\n    var { children = null, className = '', spacer, spaceItems, grow, shrink, flex, direction, alignItems, alignContent, alignSelf, align, justifyContent, display, fullWidth, flexWrap } = _a, props = __rest(_a, [\"children\", \"className\", \"spacer\", \"spaceItems\", \"grow\", \"shrink\", \"flex\", \"direction\", \"alignItems\", \"alignContent\", \"alignSelf\", \"align\", \"justifyContent\", \"display\", \"fullWidth\", \"flexWrap\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.flex, formatBreakpointMods(spacer, styles), formatBreakpointMods(spaceItems, styles), formatBreakpointMods(grow, styles), formatBreakpointMods(shrink, styles), formatBreakpointMods(flex, styles), formatBreakpointMods(direction, styles), formatBreakpointMods(alignItems, styles), formatBreakpointMods(alignContent, styles), formatBreakpointMods(alignSelf, styles), formatBreakpointMods(align, styles), formatBreakpointMods(justifyContent, styles), formatBreakpointMods(display, styles), formatBreakpointMods(fullWidth, styles), formatBreakpointMods(flexWrap, styles), className) }, props), children));\n};\nFlex.displayName = 'Flex';\n//# sourceMappingURL=Flex.js.map"],"sourceRoot":""}