{"version":3,"file":"js/products.1644520912534.b1ff59e26e5b0b310782.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Level/Level.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/wrench-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/toolbar/schemas/products-toolbar.schema.js","webpack:///./src/messages/products.messages.ts","webpack:///./src/smart-components/products/products.js","webpack:///./src/messages/platforms.messages.ts","webpack:///./src/presentational-components/shared/app-tabs.tsx","webpack:///./src/presentational-components/shared/filter-toolbar-item.tsx","webpack:///./src/toolbar/toolbar-mapper.tsx","webpack:///./src/toolbar/toolbar-renderer.tsx"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Level = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst level_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/layouts/Level/level\"));\nconst Level = (_a) => {\n    var { hasGutter, className = '', children = null } = _a, props = tslib_1.__rest(_a, [\"hasGutter\", \"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: react_styles_1.css(level_1.default.level, hasGutter && level_1.default.modifiers.gutter, className) }), children));\n};\nexports.Level = Level;\nexports.Level.displayName = 'Level';\n//# sourceMappingURL=Level.js.map","\"use strict\"\nexports.__esModule = true;\nexports.WrenchIconConfig = {\n  name: 'WrenchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.WrenchIcon = require('../createIcon').createIcon(exports.WrenchIconConfig);\nexports[\"default\"] = exports.WrenchIcon;","import React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Title } from \"@patternfly/react-core/dist/esm/components/Title/Title.js\";\n/**\n * This is the title section of the pageHeader\n */\n\nvar PageHeaderTitle = function PageHeaderTitle(_ref) {\n  var className = _ref.className,\n      title = _ref.title;\n  var pageHeaderTitleClasses = classNames(className);\n  return /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h1\",\n    size: \"2xl\",\n    className: pageHeaderTitleClasses,\n    \"widget-type\": \"InsightsPageHeaderTitle\"\n  }, \" \", title, \" \");\n};\n\nexport default PageHeaderTitle;\nPageHeaderTitle.propTypes = {\n  title: propTypes.node.isRequired,\n  className: propTypes.string\n};","import { toolbarComponentTypes } from '../toolbar-mapper';\n\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nconst createPortfolioToolbarSchema = ({\n  meta,\n  fetchProducts,\n  isLoading,\n  filterProps: { searchValue, onFilterChange, placeholder }\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'products-top-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'products-toolbar-title',\n          title: 'Products',\n          description: 'All products collected from your portfolios',\n          noData: meta.noData\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'Products-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'main-portfolio-toolbar',\n                  fields: [\n                    {\n                      groupName: 'filter-group',\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      key: 'filter-input',\n                      searchValue,\n                      onFilterChange,\n                      placeholder,\n                      isClearable: true\n                    }\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            key: 'products-pagination',\n                            meta,\n                            apiProps: searchValue,\n                            apiRequest: fetchProducts,\n                            isDisabled: isLoading,\n                            isCompact: true\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","import { defineMessages } from 'react-intl';\n\nconst productsMessages = defineMessages({\n  addSource: {\n    id: 'products.empty.add-source',\n    defaultMessage: 'Add source'\n  },\n  configureSource: {\n    id: 'products.empty.configure-source',\n    defaultMessage: 'Configure a source and add products into portfolios.'\n  },\n  title: {\n    id: 'products.toolbar.title',\n    defaultMessage: 'Products'\n  }\n});\n\nexport default productsMessages;\n","import React, { useContext, useEffect, useReducer, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { WrenchIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport { fetchPortfolioItems } from '../../redux/actions/portfolio-actions';\nimport { fetchPortfolioItems as fetchPortfolioItemsS } from '../../redux/actions/portfolio-actions-s';\nimport { isStandalone, scrollToTop } from '../../helpers/shared/helpers';\nimport PortfolioItem from '../portfolio/portfolio-item';\nimport createProductsToolbarSchema from '../../toolbar/schemas/products-toolbar.schema';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport { fetchPlatforms as fetchPlatformsS } from '../../redux/actions/platform-actions-s';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport {\n  Button,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport AppContext from '../../app-context';\nimport AsyncPagination from '../common/async-pagination';\nimport { PORTFOLIO_ITEM_ROUTE } from '../../constants/routes';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport UserContext from '../../user-context';\nimport filteringMessages from '../../messages/filtering.messages';\nimport productsMessages from '../../messages/products.messages';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst debouncedFilter = asyncFormValidator(\n  (value, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(\n      isStandalone()\n        ? fetchPortfolioItemsS(value, defaultSettings)\n        : fetchPortfolioItems(value, defaultSettings)\n    ).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst buildItemLink = ({ portfolio_id, id, service_offering_source_ref }) => {\n  if (portfolio_id && id && service_offering_source_ref) {\n    return {\n      pathname: portfolio_id && PORTFOLIO_ITEM_ROUTE,\n      searchParams: {\n        portfolio: portfolio_id,\n        'portfolio-item': id,\n        source: service_offering_source_ref,\n        'from-products': 'true'\n      }\n    };\n  }\n\n  return {};\n};\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst productsState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n  }\n\n  return state;\n};\n\nconst Products = () => {\n  const formatMessage = useFormatMessage();\n  const viewState = useInitialUriHash();\n  const { release } = useContext(AppContext);\n  const [{ isFetching, filterValue, isFiltering }, stateDispatch] = useReducer(\n    productsState,\n    {\n      ...initialState,\n      filterValue: viewState?.products?.filter || ''\n    }\n  );\n  const {\n    userIdentity: {\n      identity: {\n        user: { is_org_admin }\n      }\n    }\n  } = useContext(UserContext);\n  const dispatch = useDispatch();\n  const products = useSelector(\n    ({ portfolioReducer: { portfolioItems } }) => portfolioItems\n  );\n  const meta = products.meta || { count: products.count };\n  const data = products.data || products.results;\n  useEffect(() => {\n    Promise.all([\n      dispatch(\n        isStandalone()\n          ? fetchPortfolioItemsS(\n              viewState?.products?.filter,\n              viewState?.products\n            )\n          : fetchPortfolioItems(\n              viewState?.products?.filter,\n              viewState?.products\n            )\n      ),\n      dispatch(isStandalone() ? fetchPlatformsS() : fetchPlatforms())\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n  }, []);\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(value, dispatch, (isFiltering) =>\n      stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  const galleryItems = data.map((item) => (\n    <PortfolioItem\n      key={item.id}\n      pathname={item.portfolio_id && PORTFOLIO_ITEM_ROUTE}\n      {...buildItemLink(item)}\n      {...item}\n      toDisplay={[]}\n    />\n  ));\n\n  const SourcesAction = () =>\n    is_org_admin && (\n      <a href={`${release}settings/sources/new`}>\n        <Button ouiaId={'add-source'} variant=\"primary\">\n          {formatMessage(productsMessages.addSource)}\n        </Button>\n      </a>\n    );\n\n  const FilterAction = () => (\n    <Button\n      ouiaId={'clear-filter'}\n      variant=\"link\"\n      onClick={() => handleFilterItems('')}\n    >\n      {formatMessage(filteringMessages.clearFilters)}\n    </Button>\n  );\n\n  const renderEmptyStateDescription = () => (\n    <Fragment>\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {meta.noData\n            ? formatMessage(productsMessages.configureSource)\n            : formatMessage(filteringMessages.noResultsDescription)}\n        </Text>\n        {is_org_admin ? (\n          <Text component={TextVariants.p}>\n            {formatMessage(platformsMessages.connectSource, {\n              // eslint-disable-next-line react/display-name\n              a: (chunks) => (\n                <Fragment>\n                  <a href={`${document.baseURI}settings/sources`}>{chunks}</a>\n                </Fragment>\n              )\n            })}\n          </Text>\n        ) : (\n          <Text>{formatMessage(platformsMessages.contactAdmin)}</Text>\n        )}\n      </TextContent>\n    </Fragment>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? SourcesAction : FilterAction,\n    title: meta.noData\n      ? formatMessage(filteringMessages.noProducts)\n      : formatMessage(filteringMessages.noResults),\n    renderDescription: renderEmptyStateDescription,\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createProductsToolbarSchema({\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterItems,\n            placeholder: formatMessage(filteringMessages.filterByProduct)\n          },\n          title: formatMessage(productsMessages.title),\n          isLoading: isFiltering || isFetching,\n          meta,\n          fetchProducts: isStandalone()\n            ? (...args) => dispatch(fetchPortfolioItemsS(...args))\n            : (...args) => dispatch(fetchPortfolioItems(...args))\n        })}\n      />\n      <ContentGallery\n        isLoading={isFiltering || isFetching}\n        items={galleryItems}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState {...emptyStateProps} />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiRequest={(_e, options) =>\n              dispatch(\n                isStandalone()\n                  ? fetchPortfolioItemsS(viewState?.products?.filter, options)\n                  : fetchPortfolioItems(viewState?.products?.filter, options)\n              )\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Products;\n","import { defineMessages } from 'react-intl';\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  platformsNoDataDescription: {\n    id: 'platforms.list.configure-source',\n    defaultMessage:\n      'Ansible Automation Services Catalog can be added by following the'\n  },\n  platformsDocTitle: {\n    id: 'platforms.doc.title',\n    defaultMessage: 'Ansible Automation Platform 2.0 BETA documentation'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage: 'Go to Sources'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  },\n  platformVersion: {\n    id: 'platforms.version',\n    defaultMessage: 'Platform version'\n  },\n  ansibleVersion: {\n    id: 'platforms.ansible.version',\n    defaultMessage: 'Ansible version'\n  },\n  platformSummary: {\n    id: 'platforms.summary',\n    defaultMessage: 'Summary'\n  },\n  platformDetails: {\n    id: 'platforms.details',\n    defaultMessage: 'Details'\n  },\n  platformActivity: {\n    id: 'platforms.activity',\n    defaultMessage: 'Activity'\n  },\n  cloudConnectorId: {\n    id: 'platform.cloudConnectorId',\n    defaultMessage: 'RedHat Connect Client Id'\n  },\n  refreshState: {\n    id: 'platforms.refreshState',\n    defaultMessage: 'Refresh state'\n  },\n  refreshStarted: {\n    id: 'platforms.refreshStarted',\n    defaultMessage: 'Refresh started'\n  },\n  refreshFinished: {\n    id: 'platforms.refreshFinished',\n    defaultMessage: 'Refresh finished'\n  },\n  lastSuccessfulRefresh: {\n    id: 'platforms.lastSuccessfulRefresh',\n    defaultMessage: 'Last successful refresh'\n  },\n  lastChecked: {\n    id: 'platforms.lastChecked',\n    defaultMessage: 'Last checked'\n  },\n  lastAvailable: {\n    id: 'platforms.lastAvailable',\n    defaultMessage: 'Last available'\n  },\n  enabled: {\n    id: 'platforms.enabled',\n    defaultMessage: 'Enabled'\n  },\n  availabilityStatus: {\n    id: 'platforms.availabilityStatus',\n    defaultMessage: 'Availability status'\n  },\n  dateAdded: {\n    id: 'platforms.dateAdded',\n    defaultMessage: 'Date added'\n  },\n  refreshTooltip: {\n    id: 'platforms.refreshTooltip',\n    defaultMessage: 'Refresh platform'\n  },\n  lastRefreshMessage: {\n    id: 'platforms.lastRefreshMessage',\n    defaultMessage: 'Last refresh message'\n  },\n  availabilityMessage: {\n    id: 'platforms.availabilityMessage',\n    defaultMessage: 'Availability message'\n  }\n});\n\nexport default platformsMessages;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation } from 'react-router-dom';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nexport interface AppTabsProps {\n  tabItems: {\n    name: string;\n    eventKey: number;\n    title: string;\n    disabled?: boolean;\n  }[];\n}\nconst AppTabs: React.ComponentType<AppTabsProps> = ({ tabItems }) => {\n  const { push } = useEnhancedHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (\n    _event: React.MouseEvent<HTMLElement, MouseEvent>,\n    tabIndex: number | string\n  ) => push({ pathname: tabItems[tabIndex as number].name, search });\n\n  return (\n    <Tabs\n      activeKey={activeTab ? activeTab.eventKey : 0}\n      onSelect={handleTabClick}\n    >\n      {tabItems.map((item) => (\n        <Tab\n          title={item.title}\n          key={item.eventKey}\n          eventKey={item.eventKey}\n          name={item.name}\n          disabled={item.disabled}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nexport default AppTabs;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport styled from 'styled-components';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterInputGroup = styled.div`\n  position: relative;\n  width: 300px;\n  height: 36px;\n`;\n\nconst FilterInput = styled(TextInput)`\n  position: absolute;\n  width: 300px;\n  padding-right: 34px;\n  background: transparent;\n`;\n\nconst FilterIconsContainer = styled.span`\n  position: absolute;\n  right: 8px;\n  top: 8px;\n`;\n\nconst StyledCloseIcon = styled(CloseIcon)`\n  z-index: 1000;\n  fill: #72767b;\n  :hover {\n    fill: var(--pf-global--Color--100);\n    cursor: pointer;\n  }\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  z-index: 1000;\n  fill: #72767b;\n`;\n\nexport interface FilterToolbarItemProps {\n  searchValue?: string;\n  onFilterChange: (value: string) => void;\n  placeholder?: string;\n  isClearable?: boolean;\n}\nconst FilterToolbarItem: React.ComponentType<FilterToolbarItemProps> = ({\n  searchValue = '',\n  onFilterChange,\n  placeholder,\n  isClearable = false,\n  ...rest\n}) => (\n  <ToolbarItem>\n    <FilterInputGroup>\n      <FilterInput\n        id=\"toolbar-filter\"\n        placeholder={placeholder}\n        value={searchValue}\n        type=\"text\"\n        onChange={onFilterChange}\n        aria-label={placeholder}\n        {...rest}\n      />\n      <FilterIconsContainer>\n        {(isClearable && searchValue && (\n          <StyledCloseIcon\n            width=\"16\"\n            height=\"16\"\n            onClick={() => onFilterChange('')}\n          />\n        )) || <StyledSearchIcon />}\n      </FilterIconsContainer>\n    </FilterInputGroup>\n  </ToolbarItem>\n);\n\nexport default FilterToolbarItem;\n","/* eslint-disable react/prop-types */\nimport React, { ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Label,\n  Level,\n  LevelItem,\n  ToolbarItem,\n  ToolbarContent,\n  ButtonProps,\n  LabelProps\n} from '@patternfly/react-core';\n\nimport FilterToolbarItem from '../presentational-components/shared/filter-toolbar-item';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../presentational-components/shared/top-toolbar';\nimport AppTabs from '../presentational-components/shared/app-tabs';\nimport CatalogLink from '../smart-components/common/catalog-link';\nimport {\n  StyledToolbar,\n  StyledToolbarGroup,\n  StyledToolbarProps\n} from '../presentational-components/styled-components/toolbars';\n\nexport interface ToolbarButtonProps extends Omit<ButtonProps, 'title'> {\n  title: ReactNode;\n}\n\nexport interface ToolbarLabelProps extends Omit<LabelProps, 'title'> {\n  title: ReactNode;\n}\n\nconst ToolbarButton: React.ComponentType<ToolbarButtonProps> = ({\n  title,\n  ...props\n}) => <Button {...props}>{title}</Button>;\n\nToolbarButton.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst ToolbarLabel: React.ComponentType<ToolbarLabelProps> = ({\n  title,\n  ...props\n}) => <Label {...props}>{title}</Label>;\n\nToolbarLabel.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst AppToolbar: React.ComponentType<StyledToolbarProps> = ({\n  children,\n  ...props\n}) => (\n  <StyledToolbar className=\"pf-u-p-0\" {...props}>\n    <ToolbarContent className=\"pf-u-pl-0\">{children}</ToolbarContent>\n  </StyledToolbar>\n);\nconst toolbarMapper = {\n  TopToolbar,\n  TopToolbarTitle,\n  Toolbar: AppToolbar,\n  ToolbarGroup: StyledToolbarGroup,\n  ToolbarItem,\n  FilterToolbarItem,\n  Link: CatalogLink,\n  Level,\n  LevelItem,\n  Button: ToolbarButton,\n  AppTabs,\n  Label: ToolbarLabel\n};\n\nexport const toolbarComponentTypes = {\n  TOP_TOOLBAR: 'TopToolbar',\n  TOP_TOOLBAR_TITLE: 'TopToolbarTitle',\n  TOOLBAR: 'Toolbar',\n  TOOLBAR_ITEM: 'ToolbarItem',\n  TOOLBAR_GROUP: 'ToolbarGroup',\n  FILTER_TOOLBAR_ITEM: 'FilterToolbarItem',\n  LINK: 'Link',\n  BUTTON: 'Button',\n  LEVEL: 'Level',\n  LEVEL_ITEM: 'LevelItem',\n  TABS: 'AppTabs',\n  LABEL: 'Label'\n};\n\nexport default toolbarMapper;\n","/* eslint-disable react/prop-types */\nimport React, { createContext, ReactNode } from 'react';\nimport toolbarMapper, { toolbarComponentTypes } from './toolbar-mapper';\nimport { AnyObject, ValueOf } from '../types/common-types';\n\nexport interface ToolbarField extends AnyObject {\n  component:\n    | ValueOf<typeof toolbarMapper>\n    | React.ComponentType\n    | ValueOf<typeof toolbarComponentTypes>;\n  hidden?: boolean;\n  fields?: ToolbarField[];\n  key: string;\n}\n\nexport interface ToolbarSchema {\n  fields: ToolbarField[];\n}\n\nconst ToolbarContext = createContext<{\n  render?: (fields: ToolbarField[]) => ReactNode;\n  componentMapper?: typeof toolbarMapper;\n}>({});\n\ninterface ComponentProps extends AnyObject {\n  component:\n    | ValueOf<typeof toolbarMapper>\n    | React.ComponentType\n    | ValueOf<typeof toolbarComponentTypes>;\n}\nconst Component: React.ComponentType<ComponentProps> = ({\n  component,\n  ...props\n}) => (\n  <ToolbarContext.Consumer>\n    {({ componentMapper }) => {\n      const C =\n        typeof component === 'string'\n          ? componentMapper &&\n            componentMapper[component as keyof typeof toolbarMapper]\n          : (component as React.ComponentType<any>);\n      return C ? <C {...props} /> : null;\n    }}\n  </ToolbarContext.Consumer>\n);\n\nconst render = (fields: ToolbarField[]): React.ReactNode =>\n  fields.map(({ hidden, fields, key, ...field }) =>\n    hidden ? null : fields ? (\n      <Component key={key} {...field}>\n        {render(fields)}\n      </Component>\n    ) : (\n      <Component key={key} {...field} />\n    )\n  );\n\nexport interface ToolbarRendererProps {\n  schema: ToolbarSchema;\n  componentMapper?: typeof toolbarMapper;\n}\nconst ToolbarRenderer: React.ComponentType<ToolbarRendererProps> = ({\n  schema,\n  componentMapper = toolbarMapper\n}) => (\n  <ToolbarContext.Provider value={{ render, componentMapper }}>\n    {render(schema.fields)}\n  </ToolbarContext.Provider>\n);\n\nexport default ToolbarRenderer;\n"],"names":["exports","tslib_1","React","__importStar","react_styles_1","level_1","__importDefault","_a","hasGutter","className","children","props","__rest","createElement","Object","assign","css","default","level","modifiers","gutter","name","height","width","svgPath","yOffset","xOffset","PageHeaderTitle","_ref","title","pageHeaderTitleClasses","headingLevel","size","propTypes","meta","fetchProducts","isLoading","filterProps","searchValue","onFilterChange","placeholder","fields","component","toolbarComponentTypes","key","description","noData","groupName","isClearable","count","AsyncPagination","apiProps","apiRequest","isDisabled","isCompact","addSource","id","defaultMessage","configureSource","debouncedFilter","asyncFormValidator","value","dispatch","filteringCallback","isStandalone","fetchPortfolioItemsS","defaultSettings","fetchPortfolioItems","then","initialState","filterValue","isOpen","isFetching","isFiltering","productsState","state","action","type","payload","formatMessage","useFormatMessage","viewState","useInitialUriHash","release","useContext","AppContext","useReducer","products","filter","stateDispatch","is_org_admin","UserContext","userIdentity","identity","user","useDispatch","useSelector","portfolioReducer","portfolioItems","data","results","useEffect","Promise","all","fetchPlatformsS","fetchPlatforms","scrollToTop","handleFilterItems","galleryItems","map","item","pathname","portfolio_id","PORTFOLIO_ITEM_ROUTE","service_offering_source_ref","searchParams","portfolio","source","toDisplay","emptyStateProps","PrimaryAction","href","Button","ouiaId","variant","productsMessages","onClick","filteringMessages","renderDescription","Fragment","TextContent","Text","TextVariants","platformsMessages","a","chunks","document","baseURI","Icon","WrenchIcon","SearchIcon","schema","createProductsToolbarSchema","items","renderEmptyState","dropDirection","_e","options","workflowColumn","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","platformsNoDataDescription","platformsDocTitle","connectSource","contactAdmin","noPlatforms","offeringTitle","offeringParameters","platformVersion","ansibleVersion","platformSummary","platformDetails","platformActivity","cloudConnectorId","refreshState","refreshStarted","refreshFinished","lastSuccessfulRefresh","lastChecked","lastAvailable","enabled","availabilityStatus","dateAdded","refreshTooltip","lastRefreshMessage","availabilityMessage","tabItems","push","useLocation","search","activeTab","find","includes","Tabs","activeKey","eventKey","onSelect","_event","tabIndex","Tab","disabled","FilterInputGroup","FilterInput","TextInput","FilterIconsContainer","StyledCloseIcon","CloseIcon","StyledSearchIcon","ToolbarButton","ToolbarLabel","Label","toolbarMapper","TopToolbar","TopToolbarTitle","Toolbar","ToolbarContent","ToolbarGroup","ToolbarItem","FilterToolbarItem","rest","onChange","Link","Level","LevelItem","AppTabs","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","TOOLBAR","TOOLBAR_ITEM","TOOLBAR_GROUP","FILTER_TOOLBAR_ITEM","LINK","BUTTON","LEVEL","LEVEL_ITEM","TABS","LABEL","ToolbarContext","createContext","Component","Consumer","componentMapper","C","render","hidden","field","Provider"],"sourceRoot":""}