{"version":3,"file":"js/portfolio.1639690367948.fdae01a15ad6bed4f174.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/angle-left-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/smart-components/portfolio/portfolio.js","webpack:///./src/helpers/shared/redux-mutators.ts","webpack:///./src/utilities/use-is-mounted.js","webpack:///./src/presentational-components/portfolio/back-to-products.tsx","webpack:///./src/helpers/shared/breadcrumbs-creators.ts","webpack:///./src/redux/actions/breadcrumbs-actions.ts","webpack:///./src/utilities/use-breadcrumbs.ts"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.AngleLeftIconConfig = {\n  name: 'AngleLeftIcon',\n  height: 512,\n  width: 256,\n  svgPath: 'M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.AngleLeftIcon = require('../createIcon').createIcon(exports.AngleLeftIconConfig);\nexports[\"default\"] = exports.AngleLeftIcon;","import React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Title } from \"@patternfly/react-core/dist/esm/components/Title/Title.js\";\n/**\n * This is the title section of the pageHeader\n */\n\nvar PageHeaderTitle = function PageHeaderTitle(_ref) {\n  var className = _ref.className,\n      title = _ref.title;\n  var pageHeaderTitleClasses = classNames(className);\n  return /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h1\",\n    size: \"2xl\",\n    className: pageHeaderTitleClasses,\n    \"widget-type\": \"InsightsPageHeaderTitle\"\n  }, \" \", title, \" \");\n};\n\nexport default PageHeaderTitle;\nPageHeaderTitle.propTypes = {\n  title: propTypes.node.isRequired,\n  className: propTypes.string\n};","import React, { useEffect, useReducer, lazy, Suspense } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useRouteMatch, Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport { toggleArraySelection } from '../../helpers/shared/redux-mutators';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport { fetchPlatforms as fetchPlatformsS } from '../../redux/actions/platform-actions';\nimport {\n  copyPortfolio,\n  fetchPortfolios,\n  fetchSelectedPortfolio,\n  removeProductsFromPortfolio,\n  resetSelectedPortfolio,\n  fetchPortfolioItemsWithPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport {\n  copyPortfolio as copyPortfolioS,\n  fetchPortfolios as fetchPortfoliosS,\n  fetchSelectedPortfolio as fetchSelectedPortfolioS,\n  removeProductsFromPortfolio as removeProductsFromPortfolioS,\n  resetSelectedPortfolio as resetSelectedPortfolioS,\n  fetchPortfolioItemsWithPortfolio as fetchPortfolioItemsWithPortfolioS\n} from '../../redux/actions/portfolio-actions-s';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport useQuery from '../../utilities/use-query';\nimport useBreadcrumbs from '../../utilities/use-breadcrumbs';\nimport { PORTFOLIO_ROUTE } from '../../constants/routes';\nimport { UnauthorizedRedirect } from '../error-pages/error-redirects';\nimport CatalogRoute from '../../routing/catalog-route';\nimport useIsMounted from '../../utilities/use-is-mounted';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { toolbarComponentTypes } from '../../toolbar/toolbar-mapper';\nimport BackToProducts from '../../presentational-components/portfolio/back-to-products';\n\n/**\n * Fake the toolbar until the chunk is loaded\n */\nconst PortfolioSuspenseFallback = ({ fromProducts, title, description }) => (\n  <ToolbarRenderer\n    schema={{\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR,\n          breadcrumbs: !fromProducts,\n          key: 'portfolio-top-toolbar',\n          fields: [\n            {\n              component: BackToProducts,\n              key: 'back-to-products',\n              hidden: !fromProducts\n            },\n            {\n              component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n              key: 'portfolio-toolbar-title',\n              title,\n              description\n            }\n          ]\n        }\n      ]\n    }}\n  />\n);\n\nPortfolioSuspenseFallback.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  fromProducts: PropTypes.bool\n};\n\nconst PortfolioItems = lazy(() =>\n  /* webpackChunkName: \"portfolio-items\" */ import('./portfolio-items')\n);\n\nconst PortfolioItemDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolio-item-detail\" */\n    './portfolio-item-detail/portfolio-item-detail'\n  )\n);\nconst AddProductsToPortfolio = lazy(() =>\n  import(\n    /* webpackChunkName: \"add-products-to-portfolio\" */\n    './add-products-to-portfolio'\n  )\n);\nconst initialState = {\n  selectedItems: [],\n  firstSelectedProduct: undefined,\n  removeInProgress: false,\n  filterValue: '',\n  copyInProgress: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (value, dispatch, filteringCallback, meta) => {\n    filteringCallback(true);\n    dispatch(\n      window.catalog?.standalone\n        ? fetchPortfolioItemsWithPortfolioS(value, meta)\n        : fetchPortfolioItemsWithPortfolio(value, meta)\n    ).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst porftolioUiReducer = (state, { type, payload = {} }) =>\n  ({\n    selectItem: {\n      ...state,\n      selectedItems: toggleArraySelection(\n        state.selectedItems,\n        payload.selectedItem\n      ),\n      firstSelectedProduct: payload.product || state.firstSelectedProduct\n    },\n    setRemoveInProgress: { ...state, removeInProgress: payload },\n    removeSuccessful: { ...state, selectedItems: [], removeInProgress: false },\n    setFilterValue: { ...state, filterValue: payload, isFiltering: true },\n    setCopyInProgress: { ...state, copyInProgress: payload },\n    setIsFetching: { ...state, isFetching: payload },\n    setFilteringFlag: { ...state, isFiltering: payload }\n  }[type]);\n\nconst Portfolio = () => {\n  const viewState = useInitialUriHash();\n  const [state, stateDispatch] = useReducer(porftolioUiReducer, {\n    ...initialState,\n    filterValue: viewState?.portfolioItems?.filter || ''\n  });\n  const [searchParams] = useQuery(['portfolio', 'from-products']);\n  const { portfolio: id, 'from-products': fromProducts } = searchParams;\n  const { url } = useRouteMatch(PORTFOLIO_ROUTE);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isMounted = useIsMounted();\n  const { portfolio, portfolioItem, meta } = useSelector(\n    ({\n      portfolioReducer: {\n        selectedPortfolio,\n        portfolioItem,\n        portfolioItems: { meta }\n      }\n    }) => ({\n      portfolio: selectedPortfolio,\n      portfolioItem,\n      meta\n    })\n  );\n\n  const resetBreadcrumbs = useBreadcrumbs([portfolio, portfolioItem]);\n\n  const fetchData = (portfolioId) => {\n    stateDispatch({ type: 'setIsFetching', payload: true });\n    return Promise.all([\n      dispatch(\n        window.catalog?.standalone ? fetchPlatformsS() : fetchPlatforms()\n      ),\n      dispatch(\n        window?.catalog?.standalone\n          ? fetchSelectedPortfolioS(portfolioId)\n          : fetchSelectedPortfolio(portfolioId)\n      ),\n      dispatch(\n        window?.catalog?.standalone\n          ? fetchPortfolioItemsWithPortfolioS(\n              portfolioId,\n              viewState?.portfolioItems\n            )\n          : fetchPortfolioItemsWithPortfolio(\n              portfolioId,\n              viewState?.portfolioItems\n            )\n      )\n    ])\n      .then((data) => {\n        if (isMounted.current) {\n          stateDispatch({ type: 'setIsFetching', payload: false });\n        }\n\n        return data;\n      })\n      .catch(() => stateDispatch({ type: 'setIsFetching', payload: false }));\n  };\n\n  useEffect(() => {\n    fetchData(id);\n    scrollToTop();\n\n    return () => {\n      resetBreadcrumbs();\n      dispatch(\n        window.catalog?.standalone\n          ? resetSelectedPortfolioS()\n          : resetSelectedPortfolio()\n      );\n    };\n  }, []);\n\n  useEffect(() => {\n    if (\n      isMounted.current === true &&\n      !state.isFetching &&\n      history.location.pathname === PORTFOLIO_ROUTE\n    ) {\n      fetchData(id);\n      scrollToTop();\n    }\n  }, [id, history.location.pathname]);\n\n  const handleCopyPortfolio = () => {\n    stateDispatch({ type: 'setCopyInProgress', payload: true });\n    return dispatch(\n      window.catalog?.standalone ? copyPortfolioS(id) : copyPortfolio(id)\n    )\n      .then(({ id }) =>\n        history.push({\n          pathname: PORTFOLIO_ROUTE,\n          search: `?portfolio=${id}`\n        })\n      )\n      .then(() => stateDispatch({ type: 'setCopyInProgress', payload: false }))\n      .then(() =>\n        dispatch(\n          window.catalog?.standalone ? fetchPortfoliosS : fetchPortfolios\n        )\n      )\n      .catch(() =>\n        stateDispatch({ type: 'setCopyInProgress', payload: false })\n      );\n  };\n\n  const removeProducts = (products) => {\n    stateDispatch({ type: 'setRemoveInProgress', payload: true });\n    dispatch(\n      window.catalog?.standalone\n        ? removeProductsFromPortfolioS(\n            products,\n            portfolio.name,\n            state.firstSelectedProduct\n          )\n        : removeProductsFromPortfolio(\n            products,\n            portfolio.name,\n            state.firstSelectedProduct\n          )\n    )\n      .then(() => stateDispatch({ type: 'removeSucessfull' }))\n      .catch(() =>\n        stateDispatch({ type: 'setRemoveInProgress', payload: false })\n      );\n  };\n\n  const handleFilterChange = (filter) => {\n    stateDispatch({ type: 'setFilterValue', payload: filter });\n    debouncedFilter(\n      id,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0,\n        filter\n      }\n    );\n  };\n\n  const routes = {\n    portfolioRoute: url,\n    addProductsRoute: `${url}/add-products`,\n    editPortfolioRoute: `${url}/edit-portfolio`,\n    removePortfolioRoute: `${url}/remove-portfolio`,\n    sharePortfolioRoute: `${url}/share-portfolio`,\n    workflowPortfolioRoute: `${url}/edit-workflow`,\n    portfolioItemRoute: `${url}/portfolio-item`\n  };\n\n  if (portfolio.metadata?.user_capabilities?.show === false) {\n    return <UnauthorizedRedirect />;\n  }\n\n  return (\n    <Suspense\n      fallback={\n        <PortfolioSuspenseFallback\n          fromProducts={fromProducts === 'true'}\n          title={portfolio.name}\n          description={portfolio.description}\n        />\n      }\n    >\n      <Switch>\n        <CatalogRoute\n          path={routes.addProductsRoute}\n          userCapabilities={portfolio.metadata?.user_capabilities}\n          requiredCapabilities=\"update\"\n        >\n          <AddProductsToPortfolio portfolioRoute={routes.portfolioRoute} />\n        </CatalogRoute>\n        <Route path={routes.portfolioItemRoute}>\n          <PortfolioItemDetail portfolioLoaded={!state?.isFetching} />\n        </Route>\n        <Route path={routes.portfolioRoute}>\n          <PortfolioItems\n            routes={routes}\n            fromProducts={fromProducts === 'true'}\n            handleFilterChange={handleFilterChange}\n            removeProducts={(products) => removeProducts(products)}\n            copyPortfolio={handleCopyPortfolio}\n            state={state}\n            stateDispatch={stateDispatch}\n          />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Portfolio;\n","export const toggleArraySelection = (items: string[], item: string): string[] =>\n  items.includes(item)\n    ? [\n        ...items.slice(0, items.indexOf(item)),\n        ...items.slice(items.indexOf(item) + 1)\n      ]\n    : [...items, item];\n","import { useRef, useEffect } from 'react';\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => (isMounted.current = false);\n  }, []);\n  return isMounted;\n};\n\nexport default useIsMounted;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\n\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst BackToProducts: React.ComponentType = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <div className=\"pf-u-mb-md\">\n      <AngleLeftIcon className=\"pf-u-mr-sm\" />\n      <Button\n        variant=\"link\"\n        ouiaId={'back-to-products'}\n        component={() => (\n          <CatalogLink pathname=\"/products\">\n            {formatMessage(portfolioMessages.backToProducts)}\n          </CatalogLink>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default BackToProducts;\n","import {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  ORDER_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORMS_ROUTE,\n  ORDERS_ROUTE,\n  EDIT_SURVEY_ROUTE,\n  ADD_PRODUCTS_ROUTE,\n  PORTFOLIO_ITEM_ROUTE_EDIT\n} from '../../constants/routes';\nimport { PortfolioReducerState } from '../../redux/reducers/portfolio-reducer';\nimport { ReactNode } from 'react';\nimport { PlatformReducerState } from '../../redux/reducers/platform-reducer';\nimport { OrderReducerState } from '../../redux/reducers/order-reducer';\n\nexport const BASE_PORTFOLIO_FRAGMENTS = [\n  {\n    title: 'Portfolios',\n    pathname: PORTFOLIOS_ROUTE,\n    searchParams: {}\n  }\n];\n\nexport const ENTITIES_EXTRA_PARAMS = {\n  'portfolio-item': ['source', 'portfolio'],\n  'edit-survey': ['source', 'portfolio', 'portfolio-item']\n};\n\nexport const FRAGMENT_TITLE = {\n  [PORTFOLIO_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.selectedPortfolio.name,\n  [PORTFOLIO_ITEM_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.portfolioItem.portfolioItem.name,\n  [EDIT_SURVEY_ROUTE]: (): string => 'Edit survey',\n  [ADD_PRODUCTS_ROUTE]: (): string => 'Add products',\n  [PLATFORM_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.selectedPlatform.name,\n  [PLATFORM_SERVICE_OFFERINGS_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.serviceOffering.service.name,\n  [ORDER_ROUTE]: (\n    getState: () => { orderReducer: OrderReducerState }\n  ): ReactNode => {\n    const { portfolioItem, order } = getState().orderReducer.orderDetail;\n    return `${portfolioItem.name} # ${order.id}`;\n  },\n  [PORTFOLIO_ITEM_ROUTE_EDIT]: (): string => 'Edit product'\n};\n\nexport const FRAGMENT_PREFIX = {\n  [PORTFOLIO_ROUTE]: {\n    pathname: PORTFOLIOS_ROUTE,\n    title: 'Portfolios',\n    searchParams: {}\n  },\n  [PLATFORM_ROUTE]: {\n    pathname: PLATFORMS_ROUTE,\n    title: 'Platforms',\n    searchParams: {}\n  },\n  [ORDER_ROUTE]: {\n    pathname: ORDERS_ROUTE,\n    title: 'Orders',\n    searchParams: {}\n  }\n};\n","import { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport {\n  FRAGMENT_TITLE,\n  ENTITIES_EXTRA_PARAMS,\n  FRAGMENT_PREFIX\n} from '../../helpers/shared/breadcrumbs-creators';\nimport { Dispatch } from 'redux';\nimport { BreadcrumbFragment } from '../reducers/breadcrumbs-reducer';\nimport { GetReduxState } from '../../types/redux';\nimport { AnyObject, ReduxAction } from '../../types/common-types';\n\nexport const createBreadcrumbsFromLocations = (\n  pathname = '',\n  search: AnyObject = {}\n) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): ReduxAction<BreadcrumbFragment[]> => {\n  if (pathname.length === 0) {\n    return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: [] });\n  }\n\n  const prefix: string[] = [];\n  if (pathname === '/portfolios/portfolio') {\n    prefix.push('/portfolios');\n  }\n\n  if (pathname.startsWith('/portfolios/portfolio/portfolio-item')) {\n    prefix[0] = '/portfolios';\n    prefix[1] = '/portfolio';\n    if (pathname.startsWith('/portfolios/portfolio/portfolio-item/')) {\n      prefix[2] = '/portfolio-item';\n    }\n  }\n\n  if (pathname.startsWith('/platforms/platform')) {\n    prefix[0] = '/platforms';\n  }\n\n  pathname = pathname.replace(prefix[0], '');\n  let result = pathname\n    .replace(/^\\//, '')\n    .split('/')\n    .reduce<BreadcrumbFragment[]>((acc, curr, index) => {\n      const pathname = `${\n        index > 0 && acc[index - 1] ? acc[index - 1].pathname : ''\n      }${prefix[index]}/${curr}`;\n      const generateTitle = (FRAGMENT_TITLE[\n        pathname as keyof typeof FRAGMENT_TITLE\n      ] as unknown) as (getState: GetReduxState) => string;\n      if (!generateTitle) {\n        return acc;\n      }\n\n      const searchParams = {\n        ...(index > 0 && acc[index - 1]?.searchParams),\n        ...(search[curr] ? { [curr]: search[curr] } : {})\n      };\n      if ((ENTITIES_EXTRA_PARAMS as AnyObject)[curr]) {\n        (ENTITIES_EXTRA_PARAMS as AnyObject)[curr].forEach((key: string) => {\n          searchParams[key] = search[key];\n        });\n      }\n\n      if ((FRAGMENT_PREFIX as AnyObject)[pathname]) {\n        acc = [(FRAGMENT_PREFIX as AnyObject)[pathname]];\n      }\n\n      const currTitle = generateTitle(getState);\n\n      return !currTitle\n        ? acc\n        : [\n            ...acc,\n            {\n              pathname,\n              searchParams,\n              title: currTitle\n            }\n          ];\n    }, []);\n  if (result.length > 0 && (FRAGMENT_PREFIX as AnyObject)[result[0].pathname]) {\n    result = [(FRAGMENT_PREFIX as AnyObject)[result[0].pathname], ...result];\n  }\n\n  // if portfolio item, add the 2 breadcrumbs\n  return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: result });\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createBreadcrumbsFromLocations } from '../redux/actions/breadcrumbs-actions';\nimport { INITIALIZE_BREADCRUMBS } from '../redux/action-types';\nimport { AnyObject, ReduxAction } from '../types/common-types';\nimport { AnyAction } from 'redux';\n\nconst useBreadcrumbs = (\n  updateTriggers: any[] = []\n):\n  | (() => ReduxAction<{\n      type: typeof INITIALIZE_BREADCRUMBS;\n    }>)\n  | ReduxAction<{ type: typeof INITIALIZE_BREADCRUMBS }> => {\n  const dispatch = useDispatch();\n  const { pathname, search } = useLocation();\n  if (updateTriggers.length === 0) {\n    return dispatch(\n      (createBreadcrumbsFromLocations('', {}) as unknown) as AnyAction\n    );\n  }\n\n  const searchParams = new URLSearchParams(search);\n  const searchObject: AnyObject = {};\n  searchParams.forEach((value, key) => {\n    searchObject[key] = value;\n  });\n\n  useEffect(() => {\n    dispatch(createBreadcrumbsFromLocations(pathname, searchObject));\n  }, [pathname, ...updateTriggers]);\n\n  return () =>\n    dispatch((createBreadcrumbsFromLocations('', {}) as unknown) as AnyAction);\n};\n\nexport default useBreadcrumbs;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","PageHeaderTitle","_ref","className","title","pageHeaderTitleClasses","headingLevel","size","propTypes","PortfolioSuspenseFallback","fromProducts","description","schema","fields","component","toolbarComponentTypes","breadcrumbs","key","BackToProducts","hidden","PropTypes","PortfolioItems","lazy","PortfolioItemDetail","AddProductsToPortfolio","initialState","selectedItems","firstSelectedProduct","undefined","removeInProgress","filterValue","copyInProgress","isFetching","isFiltering","debouncedFilter","asyncFormValidator","value","dispatch","filteringCallback","meta","window","catalog","standalone","fetchPortfolioItemsWithPortfolioS","fetchPortfolioItemsWithPortfolio","then","porftolioUiReducer","state","items","item","type","payload","selectItem","selectedItem","includes","slice","indexOf","product","setRemoveInProgress","removeSuccessful","setFilterValue","setCopyInProgress","setIsFetching","setFilteringFlag","viewState","useInitialUriHash","useReducer","portfolioItems","filter","stateDispatch","useQuery","searchParams","id","portfolio","url","useRouteMatch","PORTFOLIO_ROUTE","history","useHistory","useDispatch","isMounted","useIsMounted","useSelector","portfolioReducer","selectedPortfolio","portfolioItem","resetBreadcrumbs","useBreadcrumbs","fetchData","portfolioId","Promise","all","fetchPlatformsS","fetchSelectedPortfolioS","fetchSelectedPortfolio","data","current","useEffect","scrollToTop","resetSelectedPortfolioS","resetSelectedPortfolio","location","pathname","routes","portfolioRoute","addProductsRoute","editPortfolioRoute","removePortfolioRoute","sharePortfolioRoute","workflowPortfolioRoute","portfolioItemRoute","metadata","user_capabilities","show","Suspense","fallback","Switch","path","userCapabilities","requiredCapabilities","Route","portfolioLoaded","handleFilterChange","offset","removeProducts","products","removeProductsFromPortfolioS","removeProductsFromPortfolio","copyPortfolio","copyPortfolioS","push","search","fetchPortfoliosS","fetchPortfolios","useRef","formatMessage","Button","variant","ouiaId","ENTITIES_EXTRA_PARAMS","FRAGMENT_TITLE","getState","platformReducer","selectedPlatform","serviceOffering","service","orderReducer","orderDetail","order","FRAGMENT_PREFIX","createBreadcrumbsFromLocations","length","prefix","startsWith","result","replace","split","reduce","acc","curr","index","generateTitle","forEach","currTitle","updateTriggers","useLocation","URLSearchParams","searchObject"],"sourceRoot":""}