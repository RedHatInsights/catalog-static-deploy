{"version":3,"sources":["webpack:///./src/messages/orders.messages.js","webpack:///./src/helpers/order/order-helper.js","webpack:///./src/presentational-components/order/order-notification.js","webpack:///./src/redux/actions/order-actions.js"],"names":["ordersMessages","defineMessages","require","orderedBy","id","defaultMessage","orderedByLabel","lastUpdated","compositeTitle","detailTitle","orderSuccess","noOrdersTitle","noOrdersDescription","noApprovalRequests","creatingApprovalRequest","approvalTitle","approvalDetail","approvalCreated","approvalReason","approvalCompleted","orderDetails","menuApproval","menuLifecycle","menuSteps","objectsNotFound","orderID","orderParameters","orderProgressMessages","lifecycleLink","cancelOrder","keepOrder","cancelDescription","backToOrders","approvalProduct","orderDate","approvalParameters","activity","orderApi","getOrderApi","portfolioItemApi","getOrderItemApi","getPortfolioItemApi","axiosInstance","getAxiosInstance","graphqlInstance","getGraphqlInstance","getServicePlans","portfolioItemId","listServicePlans","sendSubmitOrder","a","service_parameters","providerControlParameters","parameters","createOrder","order","orderItem","count","provider_control_parameters","addToOrder","orderItemResponse","submitOrder","then","getOrderItems","orderIds","get","CATALOG_API_BASE","map","orderId","join","getOrderPortfolioItems","itemIds","itemId","getOrders","filter","pagination","defaultSettings","limit","offset","orders","data","orderItems","portfolio_item_id","portfolioItems","order_id","getApprovalRequests","orderItemId","promises","requestId","parent_id","approval_request_ref","post","APPROVAL_API_BASE","query","requests","Promise","all","actions","updated","length","pop","created_at","undefined","OrderNotification","dispatch","portfolioId","platformId","useFormatMessage","formatMessage","link","chunks","onClick","clearNotifications","to","pathname","ORDER_ROUTE","search","propTypes","PropTypes","string","isRequired","func","fetchServicePlans","type","ActionTypes","payload","OrderHelper","apiProps","portfolioItem","addNotification","variant","title","description","portfolio_id","service_offering_source_ref","dismissable","getState","orderDetail","orderReducer","state","approvalRequest","error","fetchOrders","filters","queryFilter","Object","entries","value","key","Array","isArray","meta","storeState","stateKey","fetchOrderDetails","params","detailPromises","status","object","notFound","push","platform","SOURCES_API_BASE","portfolio","progressMessages","fetchApprovalRequests","err"],"mappings":"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","file":"js/lib~order-detail~order-modal~91f4305a.7c98ed4787acb7c858bb.js","sourcesContent":["const { defineMessages } = require('react-intl');\n\nconst ordersMessages = defineMessages({\n  orderedBy: {\n    id: 'orders.common.orderedBy',\n    defaultMessage: 'Ordered by {owner}'\n  },\n  orderedByLabel: {\n    id: 'orders.approval.orderedBy',\n    defaultMessage: 'Ordered by'\n  },\n  lastUpdated: {\n    id: 'orders.common.lastUpdated',\n    defaultMessage: 'Last updated'\n  },\n  compositeTitle: {\n    id: 'orders.common.compositeTitle',\n    defaultMessage: '{name} - Order # {id}'\n  },\n  detailTitle: {\n    id: 'orders.detail.title',\n    defaultMessage: 'Order ID {id}'\n  },\n  orderSuccess: {\n    id: 'orders.notification.success',\n    defaultMessage:\n      'You can track the progress of Order # {id} in your <link>Orders</link> page.'\n  },\n  noOrdersTitle: {\n    id: 'orders.list.empty.title',\n    defaultMessage: 'No orders'\n  },\n  noOrdersDescription: {\n    id: 'orders.list.empty.description',\n    defaultMessage: 'No orders have been created.'\n  },\n  noApprovalRequests: {\n    id: 'orders.approval.no-requests',\n    defaultMessage:\n      'We were unable to find any approval requests for this order.'\n  },\n  creatingApprovalRequest: {\n    id: 'orders.approval.creating',\n    defaultMessage: 'Creating approval request'\n  },\n  approvalTitle: {\n    id: 'orders.approval.title',\n    defaultMessage: 'Summary'\n  },\n  approvalDetail: {\n    id: 'orders.approval.view-detail',\n    // eslint-disable-next-line quotes\n    defaultMessage: \"View this order's approval request details\"\n  },\n  approvalCreated: {\n    id: 'orders.approval.details.created',\n    defaultMessage: 'Request created'\n  },\n  approvalReason: {\n    id: 'orders.approval.details.reason',\n    defaultMessage: 'Approval reason'\n  },\n  approvalCompleted: {\n    id: 'orders.approval.details.completed',\n    defaultMessage: 'Completed at'\n  },\n  orderDetails: {\n    id: 'orders.common.details',\n    defaultMessage: 'Order details'\n  },\n  menuApproval: {\n    id: 'orders.menu.approval',\n    defaultMessage: 'Approval'\n  },\n  menuLifecycle: {\n    id: 'orders.menu.lifecycle',\n    defaultMessage: 'Lifecycle'\n  },\n  menuSteps: {\n    id: 'orders.menu.steps',\n    defaultMessage: 'Order steps'\n  },\n  objectsNotFound: {\n    id: 'order.detail.not-found',\n    defaultMessage:\n      'The {objects} for this order {count, plural, one {is} other {are}} not available'\n  },\n  orderID: {\n    id: 'orders.order.detail.ID',\n    defaultMessage: 'Order ID'\n  },\n  orderParameters: {\n    id: 'orders.order.detail.parameters',\n    defaultMessage: 'Order parameters'\n  },\n  orderProgressMessages: {\n    id: 'orders.order.detail.messages',\n    defaultMessage: 'Progress messages'\n  },\n  lifecycleLink: {\n    id: 'orders.order.lifecicle.link',\n    defaultMessage: 'Manage product'\n  },\n  cancelOrder: {\n    id: 'orders.actions.cancel',\n    defaultMessage: 'Cancel order'\n  },\n  keepOrder: {\n    id: 'orders.actions.keep',\n    defaultMessage: 'Keep order'\n  },\n  cancelDescription: {\n    id: 'orders.cancel.description',\n    defaultMessage: 'Are you sure you want to cancel {name}?'\n  },\n  backToOrders: {\n    id: 'orders.toolbar.backLink',\n    defaultMessage: 'Back to orders'\n  },\n  approvalProduct: {\n    id: 'orders.approval.product',\n    defaultMessage: 'Product'\n  },\n  orderDate: {\n    id: 'orders.approval.order-date',\n    defaultMessage: 'Order date'\n  },\n  approvalParameters: {\n    id: 'orders.approval.parameters',\n    defaultMessage: 'Parameters'\n  },\n  activity: {\n    id: 'orders.approval.activity',\n    defaultMessage: 'Activity'\n  }\n});\n\nexport default ordersMessages;\n","/* eslint camelcase: 0 */\nimport {\n  getAxiosInstance,\n  getPortfolioItemApi,\n  getOrderApi,\n  getOrderItemApi,\n  getGraphqlInstance\n} from '../shared/user-login';\nimport {\n  CATALOG_API_BASE,\n  SOURCES_API_BASE,\n  APPROVAL_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nconst orderApi = getOrderApi();\nconst orderItemApi = getOrderItemApi();\nconst portfolioItemApi = getPortfolioItemApi();\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nexport function getServicePlans(portfolioItemId) {\n  return portfolioItemApi.listServicePlans(portfolioItemId);\n}\n\nexport async function sendSubmitOrder({\n  service_parameters: { providerControlParameters, ...service_parameters },\n  ...parameters\n}) {\n  let order = await orderApi.createOrder();\n  let orderItem = {};\n  orderItem.count = 1;\n  orderItem = {\n    ...orderItem,\n    ...parameters,\n    service_parameters,\n    provider_control_parameters: providerControlParameters || {}\n  };\n  const orderItemResponse = await orderApi.addToOrder(order.id, orderItem);\n  return orderApi\n    .submitOrder(order.id)\n    .then((order) => ({ ...order, orderItem: orderItemResponse }));\n}\n\nexport function cancelOrder(orderId) {\n  return orderApi.cancelOrder(orderId);\n}\n\nconst getOrderItems = (orderIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items?${orderIds\n      .map((orderId) => `filter[order_id][]=${orderId}`)\n      .join('&')}`\n  );\n\nconst getOrderPortfolioItems = (itemIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items?${itemIds\n      .map((itemId) => `filter[id][]=${itemId}`)\n      .join('&')}`\n  );\n\nexport const getOrders = (filter = '', pagination = defaultSettings) =>\n  axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/orders?${filter}&limit=${pagination.limit}&offset=${pagination.offset}`\n    ) // eslint-disable-line max-len\n    .then((orders) =>\n      getOrderItems(orders.data.map(({ id }) => id)).then((orderItems) =>\n        getOrderPortfolioItems(\n          orderItems.data.map(({ portfolio_item_id }) => portfolio_item_id)\n        ).then((portfolioItems) => {\n          return {\n            portfolioItems,\n            ...orders,\n            data: orders.data.map((order) => ({\n              ...order,\n              orderItems: orderItems.data.filter(\n                ({ order_id }) => order_id === order.id\n              )\n            }))\n          };\n        })\n      )\n    );\n\nexport function getOrderApprovalRequests(orderItemId) {\n  return orderItemApi.listApprovalRequests(orderItemId);\n}\n\nexport const getOrderDetail = (params) => {\n  let detailPromises = [\n    axiosInstance.get(`${CATALOG_API_BASE}/orders/${params.order}`),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/order_items/${params['order-item']}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Order item',\n            notFound: true\n          };\n        }\n\n        throw error;\n      }),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/portfolio_items/${params['portfolio-item']}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Product',\n            notFound: true\n          };\n        }\n\n        throw error;\n      })\n  ];\n\n  detailPromises.push(\n    params.platform && params.platform !== 'undefined'\n      ? axiosInstance\n          .get(`${SOURCES_API_BASE}/sources/${params.platform}`)\n          .catch((error) => {\n            if (error.status === 404 || error.status === 400) {\n              return {\n                object: 'Platform',\n                notFound: true\n              };\n            }\n\n            throw error;\n          })\n      : {\n          object: 'Platform',\n          notFound: true\n        }\n  );\n\n  detailPromises.push(\n    axiosInstance\n      .get(\n        `${CATALOG_API_BASE}/order_items/${params['order-item']}/progress_messages`\n      )\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {};\n        }\n\n        throw error;\n      })\n  );\n\n  detailPromises.push(\n    params.portfolio && params.portfolio !== 'undefined'\n      ? axiosInstance\n          .get(`${CATALOG_API_BASE}/portfolios/${params.portfolio}`)\n          .catch((error) => {\n            if (error.status === 404 || error.status === 400) {\n              return {\n                object: 'Portfolio',\n                notFound: true\n              };\n            }\n\n            throw error;\n          })\n      : { object: 'Portfolio', notFound: true }\n  );\n\n  return Promise.all(detailPromises);\n};\n\nconst APPROVAL_REQUESTER_PERSONA = 'approval/requester';\nconst requestTranscriptQuery = (parent_id) => `query {\n  requests(id: \"${parent_id}\") {\n    group_name\n    state\n    actions {\n      created_at\n    }\n  }\n}`;\nconst fetchRequestTranscript = (requestId) =>\n  graphqlInstance\n    .post(\n      `${APPROVAL_API_BASE}/graphql`,\n      { query: requestTranscriptQuery(requestId) },\n      { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA }\n    )\n    .then(({ data: { requests } }) => requests);\n\nexport const getApprovalRequests = (orderItemId) =>\n  axiosInstance\n    .get(`${CATALOG_API_BASE}/order_items/${orderItemId}/approval_requests`)\n    .then(({ data }) => {\n      const promises = data.map(({ approval_request_ref }) =>\n        fetchRequestTranscript(approval_request_ref)\n      );\n      return Promise.all(promises).then((requests) => {\n        const data = requests?.[0]?.map(({ actions, ...request }) => ({\n          ...request,\n          updated: actions?.length > 0 ? actions.pop().created_at : undefined\n        }));\n        return { data: data || [] };\n      });\n    });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport { ORDER_ROUTE } from '../../constants/routes';\nimport ordersMessages from '../../messages/orders.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst OrderNotification = ({\n  id,\n  dispatch,\n  portfolioItemId,\n  portfolioId,\n  platformId,\n  orderItemId\n}) => {\n  const formatMessage = useFormatMessage();\n  return formatMessage(ordersMessages.orderSuccess, {\n    id,\n    // eslint-disable-next-line react/display-name\n    link: (chunks) => (\n      <Link\n        onClick={() => dispatch(clearNotifications())}\n        to={{\n          pathname: ORDER_ROUTE,\n          search: `?order=${id}&order-item=${orderItemId}&portfolio-item=${portfolioItemId}&platform=${platformId}&portfolio=${portfolioId}`\n        }}\n      >\n        {chunks}\n      </Link>\n    )\n  });\n};\n\nOrderNotification.propTypes = {\n  id: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  portfolioItemId: PropTypes.string.isRequired,\n  portfolioId: PropTypes.string.isRequired,\n  platformId: PropTypes.string.isRequired,\n  orderItemId: PropTypes.string.isRequired\n};\n\nexport default OrderNotification;\n","import React from 'react';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\n\nimport * as ActionTypes from '../action-types';\nimport * as OrderHelper from '../../helpers/order/order-helper';\nimport OrderNotification from '../../presentational-components/order/order-notification';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const fetchServicePlans = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_SERVICE_PLANS,\n  payload: OrderHelper.getServicePlans(portfolioItemId)\n});\n\nexport const updateServiceData = (data) => ({\n  type: ActionTypes.UPDATE_SERVICE_DATA,\n  payload: { serviceData: data }\n});\n\nexport const setSelectedPlan = (data) => ({\n  type: ActionTypes.SET_SELECTED_PLAN,\n  payload: data\n});\n\nexport const sendSubmitOrder = (apiProps, portfolioItem) => (dispatch) =>\n  dispatch({\n    type: ActionTypes.SUBMIT_SERVICE_ORDER,\n    payload: OrderHelper.sendSubmitOrder(apiProps).then(({ id, orderItem }) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been accepted successfully',\n          description: (\n            <OrderNotification\n              id={id}\n              dispatch={dispatch}\n              portfolioItemId={portfolioItem.id}\n              portfolioId={portfolioItem.portfolio_id}\n              platformId={portfolioItem.service_offering_source_ref}\n              orderItemId={orderItem.id}\n            />\n          ),\n          dismissable: true\n        })\n      )\n    )\n  });\n\nexport const cancelOrder = (orderId) => (dispatch, getState) => {\n  dispatch({ type: `${ActionTypes.CANCEL_ORDER}_PENDING` });\n  const {\n    orderReducer: { orderDetail }\n  } = getState();\n  return OrderHelper.cancelOrder(orderId)\n    .then(() => {\n      orderDetail.order.state = 'Canceled';\n      if (\n        orderDetail.approvalRequest &&\n        orderDetail.approvalRequest.length > 0\n      ) {\n        orderDetail.approvalRequest[0].state = 'canceled';\n      }\n\n      dispatch({\n        type: ActionTypes.SET_ORDER_DETAIL,\n        payload: { ...orderDetail }\n      });\n      return orderDetail;\n    })\n    .then((orderDetail) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been canceled successfully',\n          description: `Order ${`Order #${orderDetail.order.id}`} was canceled.`,\n          dismissable: true\n        })\n      )\n    )\n    .then(() => dispatch({ type: `${ActionTypes.CANCEL_ORDER}_FULFILLED` }))\n    .catch((error) => {\n      dispatch({\n        type: `${ActionTypes.CANCEL_ORDER}_REJECTED`,\n        payload: error\n      });\n    });\n};\n\nexport const fetchOrders = (filters, pagination = defaultSettings) => (\n  dispatch\n) => {\n  const queryFilter = Object.entries(filters)\n    .filter(([, value]) => value && value.length > 0)\n    .map(([key, value]) =>\n      Array.isArray(value)\n        ? value.map((value) => `filter[${key}][]=${value}`).join('&')\n        : `filter[${key}][contains_i]=${value}`\n    )\n    .join('&');\n  dispatch({ type: `${ActionTypes.FETCH_ORDERS}_PENDING` });\n  return OrderHelper.getOrders(queryFilter, pagination)\n    .then(({ portfolioItems, ...orders }) => {\n      dispatch({\n        type: ActionTypes.SET_PORTFOLIO_ITEMS,\n        payload: portfolioItems\n      });\n      return dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_FULFILLED`,\n        meta: {\n          ...pagination,\n          filter: queryFilter,\n          filters,\n          storeState: true,\n          stateKey: 'orders'\n        },\n        payload: orders\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchOrderDetails = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SET_ORDER_DETAIL}_PENDING` });\n  return OrderHelper.getOrderDetail(params)\n    .then(\n      ([\n        order,\n        orderItem,\n        portfolioItem,\n        platform,\n        progressMessages,\n        portfolio,\n        approvalRequest\n      ]) =>\n        dispatch({\n          type: `${ActionTypes.SET_ORDER_DETAIL}_FULFILLED`,\n          payload: {\n            order,\n            orderItem,\n            portfolioItem,\n            platform,\n            progressMessages,\n            portfolio,\n            approvalRequest\n          }\n        })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.SET_ORDER_DETAIL}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchApprovalRequests = (orderItemId) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_PENDING` });\n  return OrderHelper.getApprovalRequests(orderItemId)\n    .then((data) => {\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_FULFILLED`,\n        payload: data\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n"],"sourceRoot":""}