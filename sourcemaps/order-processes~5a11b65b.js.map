{"version":3,"sources":["webpack:///./src/utilities/async-form-validator.js","webpack:///./src/messages/filtering.messages.js","webpack:///./src/messages/labels.messages.js","webpack:///./src/redux/actions/order-process-actions.js","webpack:///./src/smart-components/order-process/order-process-table-helpers.js","webpack:///./src/messages/order-processes.messages.js","webpack:///./src/presentational-components/shared/table-toolbar-view.js","webpack:///./src/presentational-components/shared/table-empty-state.js","webpack:///./src/smart-components/order-process/order-processes.js"],"names":["asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","filteringMessages","defineMessages","require","noItems","id","defaultMessage","filterByProduct","noResults","noResultsDescription","clearFilters","noProducts","noRecords","filterByTitle","noResultsFound","noResult","unknown","labelMessages","shared","portfolio","platform","name","description","loading","cancel","save","confirm","fetchOrderProcesses","pagination","dispatch","getState","orderProcessReducer","sortBy","workflows","filterValue","finalPagination","meta","limit","offset","type","ActionTypes","payload","OrderProcessHelper","setFilterValueOrderProcesses","createRows","data","reduce","acc","key","created_at","isOpen","cells","timeAgo","orderProcessesMessages","noOrderProcessesDescription","noOrderProcessesFilterDescription","orderProcessesFilter","title","noOrderProcesses","orderProcesses","orderProcess","TableToolbarView","columns","fetchData","toolbarButtons","actionResolver","routes","plural","onFilterChange","isLoading","renderEmptyState","onSort","activeFiltersConfig","filterConfig","intl","useIntl","useState","rows","setRows","useEffect","paginationConfig","itemCount","count","page","getCurrentPage","perPage","onSetPage","_e","getNewPage","onPerPageSelect","size","isDisabled","Section","page-type","PrimaryToolbar","className","actionsConfig","dropdownProps","position","actions","items","label","formatMessage","filterValues","placeholder","onChange","_event","value","length","Table","aria-label","dropDirection","variant","isCompact","propTypes","func","isRequired","array","shape","number","string","singular","bool","object","defaultProps","requests","defaultSettings","isSelectable","TableEmptyState","Icon","PrimaryAction","renderDescription","EmptyTable","centered","EmptyState","EmptyStateIcon","icon","TextContent","Text","component","TextVariants","h1","EmptyStateBody","EmptyStateSecondaryActions","PropTypes","any","transforms","sortable","debouncedFilter","asyncFormValidator","filter","filteringCallback","then","prepareChips","category","chips","orderProcessesState","state","action","isFetching","isFiltering","OrderProcesses","useSelector","filterValueRedux","shallowEqual","useReducer","initialState","stateDispatch","useDispatch","updateOrderProcesses","insights","chrome","appNavClick","secondaryNav","scrollToTop","handleFilterChange","index","direction","property","sortOrderProcesses","titlePlural","titleSingular","SearchIcon","Button","onClick","filters","onDelete"],"mappings":"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","file":"js/order-processes~5a11b65b.a8ab93cf66d29400ee3a.js","sourcesContent":["import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","const { defineMessages } = require('react-intl');\n\nconst filteringMessages = defineMessages({\n  noItems: {\n    id: 'common.filtering.noItems',\n    defaultMessage: 'No items found'\n  },\n  filterByProduct: {\n    id: 'common.filtering.filterByProduct',\n    defaultMessage: 'Filter by product'\n  },\n  noResults: {\n    id: 'common.filtering.noResults',\n    defaultMessage: 'No results found'\n  },\n  noResultsDescription: {\n    id: 'common.filtering.noResultsDescription',\n    defaultMessage:\n      'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n  },\n  clearFilters: {\n    id: 'common.filtering.clear-filters',\n    defaultMessage: 'Clear all filters'\n  },\n  noProducts: {\n    id: 'common.filtering.no-products',\n    defaultMessage: 'No products yet'\n  },\n  noRecords: {\n    id: 'commonMessages.noRecords',\n    defaultMessage: 'No records'\n  },\n  filterByTitle: {\n    id: 'tableToolbar.filterByTitle',\n    defaultMessage: 'Filter by {title}'\n  },\n  noResultsFound: {\n    id: 'tableToolbar.noResultsFound',\n    defaultMessage: 'No results found'\n  },\n  noResult: {\n    id: 'tableToolbar.noResult',\n    defaultMessage: 'No {results}'\n  },\n  unknown: {\n    id: 'commonMessages.unknown',\n    defaultMessage: 'Unknown'\n  }\n});\n\nexport default filteringMessages;\n","import { defineMessages } from 'react-intl';\n\nconst labelMessages = defineMessages({\n  shared: {\n    id: 'common.labels.shared',\n    defaultMessage: 'Shared'\n  },\n  portfolio: {\n    id: 'common.labels.portfolio',\n    defaultMessage: 'Portfolio'\n  },\n  platform: {\n    id: 'common.labels.platform',\n    defaultMessage: 'Platform'\n  },\n  name: {\n    id: 'common.labels.name',\n    defaultMessage: 'Name'\n  },\n  description: {\n    id: 'common.labels.description',\n    defaultMessage: 'Description'\n  },\n  loading: {\n    id: 'common.labels.loading',\n    defaultMessage: 'Loading'\n  },\n  cancel: {\n    id: 'common.labels.cancel',\n    defaultMessage: 'Cancel'\n  },\n  save: {\n    id: 'common.labels.save',\n    defaultMessage: 'Save'\n  },\n  confirm: {\n    id: 'common.labels.confirm',\n    defaultMessage: 'Confirm'\n  }\n});\n\nexport default labelMessages;\n","import * as ActionTypes from '../action-types';\nimport * as OrderProcessHelper from '../../helpers/order-process/order-process-helper';\n\nexport const fetchOrderProcesses = (pagination) => (dispatch, getState) => {\n  const { sortBy, workflows, filterValue } = getState().orderProcessReducer;\n\n  let finalPagination = pagination;\n\n  if (!pagination && workflows) {\n    const { limit, offset } = workflows.meta;\n    finalPagination = { limit, offset };\n  }\n\n  return dispatch({\n    type: ActionTypes.FETCH_ORDER_PROCESSES,\n    payload: OrderProcessHelper.listOrderProcesses(\n      filterValue,\n      finalPagination,\n      sortBy\n    )\n  });\n};\n\nexport const sortOrderProcesses = (sortBy) => ({\n  type: ActionTypes.SORT_ORDER_PROCESSES,\n  payload: sortBy\n});\n\nexport const setFilterValueOrderProcesses = (filterValue) => ({\n  type: ActionTypes.SET_FILTER_ORDER_PROCESSES,\n  payload: filterValue\n});\n","import { timeAgo } from '../../helpers/shared/helpers';\n\nexport const createRows = (data) =>\n  data.reduce(\n    (acc, { id, name, description, created_at }, key) => [\n      ...acc,\n      {\n        id,\n        key,\n        isOpen: false,\n        cells: [name, description, timeAgo(created_at)]\n      }\n    ],\n    []\n  );\n","const { defineMessages } = require('react-intl');\n\nconst orderProcessesMessages = defineMessages({\n  noOrderProcessesDescription: {\n    id: 'order-proces.empty.no-order-processes',\n    defaultMessage: 'No order processes found.'\n  },\n  noOrderProcessesFilterDescription: {\n    id: 'order-process.empty.no-results',\n    defaultMessage: 'No order processes match your filter criteria.'\n  },\n  orderProcessesFilter: {\n    id: 'order-process.filter.placeholder',\n    defaultMessage: 'Filter by name'\n  },\n  title: {\n    id: 'order-process.toolbar.title',\n    defaultMessage: 'Order processes'\n  },\n  noOrderProcesses: {\n    id: 'order-process.toolbar.order-process',\n    defaultMessage: 'No order processes'\n  },\n  orderProcesses: {\n    id: 'order-process.toolbar.order-processes',\n    defaultMessage: 'Order processes'\n  },\n  orderProcess: {\n    id: 'order-process.toolbar.order-process',\n    defaultMessage: 'Order process'\n  },\n  created_at: {\n    id: 'order-process.table.created_at',\n    defaultMessage: 'Created'\n  }\n});\n\nexport default orderProcessesMessages;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport {\n  defaultSettings,\n  getCurrentPage,\n  getNewPage\n} from '../../helpers/shared/pagination';\nimport { ListLoader } from './loader-placeholders';\nimport { useIntl } from 'react-intl';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/PrimaryToolbar';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\n\nexport const TableToolbarView = ({\n  createRows,\n  columns,\n  fetchData,\n  toolbarButtons,\n  data,\n  actionResolver,\n  routes,\n  plural,\n  pagination,\n  filterValue,\n  onFilterChange,\n  isLoading,\n  renderEmptyState,\n  sortBy,\n  onSort,\n  activeFiltersConfig,\n  filterConfig\n}) => {\n  const intl = useIntl();\n  const [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    setRows(createRows(data));\n  }, [data]);\n\n  const paginationConfig = {\n    itemCount: pagination.count,\n    page: getCurrentPage(pagination.limit, pagination.offset),\n    perPage: pagination.limit,\n    onSetPage: (_e, page) =>\n      fetchData({ ...pagination, offset: getNewPage(page, pagination.limit) }),\n    onPerPageSelect: (_e, size) => fetchData({ ...pagination, limit: size }),\n    isDisabled: isLoading\n  };\n\n  const renderToolbar = () => (\n    <PrimaryToolbar\n      className=\"pf-u-p-lg\"\n      pagination={paginationConfig}\n      {...(toolbarButtons && {\n        actionsConfig: {\n          dropdownProps: {\n            position: 'right'\n          },\n          actions: [toolbarButtons()]\n        }\n      })}\n      filterConfig={{\n        items: [\n          {\n            label: intl.formatMessage({\n              id: 'name',\n              defaultMessage: 'Name'\n            }),\n            filterValues: {\n              id: 'filter-by-name',\n              placeholder: intl.formatMessage(\n                orderProcessesMessages.orderProcessesFilter\n              ),\n              'aria-label': intl.formatMessage(\n                orderProcessesMessages.orderProcessesFilter\n              ),\n              onChange: (_event, value) => onFilterChange(value),\n              value: filterValue\n            }\n          },\n          ...filterConfig\n        ]\n      }}\n      activeFiltersConfig={activeFiltersConfig}\n    />\n  );\n\n  return (\n    <Section type=\"content\" page-type={`tab-${plural}`} id={`tab-${plural}`}>\n      {routes()}\n      {renderToolbar(isLoading)}\n      {isLoading && <ListLoader />}\n      {!isLoading && rows.length === 0 ? (\n        renderEmptyState()\n      ) : (\n        <Fragment>\n          {!isLoading && (\n            <Table\n              aria-label={`${plural} table`}\n              rows={rows}\n              cells={columns}\n              actionResolver={actionResolver}\n              className=\"pf-u-pt-0\"\n              sortBy={sortBy}\n              onSort={onSort}\n            >\n              <TableHeader />\n              <TableBody />\n            </Table>\n          )}\n          {pagination.count > 0 && (\n            <PrimaryToolbar\n              className=\"pf-u-pl-lg pf-u-pr-lg\"\n              pagination={{\n                ...paginationConfig,\n                dropDirection: 'up',\n                variant: 'bottom',\n                isCompact: false\n              }}\n            />\n          )}\n        </Fragment>\n      )}\n    </Section>\n  );\n};\n\nTableToolbarView.propTypes = {\n  createRows: propTypes.func.isRequired,\n  columns: propTypes.array.isRequired,\n  toolbarButtons: propTypes.func,\n  fetchData: propTypes.func.isRequired,\n  data: propTypes.array,\n  pagination: propTypes.shape({\n    limit: propTypes.number,\n    offset: propTypes.number,\n    count: propTypes.number\n  }),\n  plural: propTypes.string,\n  singular: propTypes.string,\n  routes: propTypes.func,\n  actionResolver: propTypes.func,\n  filterValue: propTypes.string,\n  onFilterChange: propTypes.func,\n  isLoading: propTypes.bool,\n  renderEmptyState: propTypes.func,\n  sortBy: propTypes.object,\n  onSort: propTypes.func,\n  activeFiltersConfig: propTypes.object,\n  filterConfig: propTypes.array\n};\n\nTableToolbarView.defaultProps = {\n  requests: [],\n  isLoading: false,\n  pagination: defaultSettings,\n  isSelectable: null,\n  routes: () => null,\n  renderEmptyState: () => null,\n  filterConfig: []\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/components/cjs/EmptyTable';\n\nconst TableEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <EmptyTable centered aria-label=\"No records\">\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={Icon} />\n      <TextContent>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </TextContent>\n      <EmptyStateBody>\n        {description}\n        {renderDescription && renderDescription()}\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        {PrimaryAction && <PrimaryAction />}\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </EmptyTable>\n);\n\nTableEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default TableEmptyState;\n","import React, { Fragment, useEffect, useReducer } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport {\n  Button,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { sortable } from '@patternfly/react-table';\nimport {\n  fetchOrderProcesses,\n  sortOrderProcesses,\n  setFilterValueOrderProcesses\n} from '../../redux/actions/order-process-actions';\nimport { createRows } from './order-process-table-helpers';\nimport { TableToolbarView } from '../../presentational-components/shared/table-toolbar-view';\nimport TopToolbar from '../../presentational-components/shared/top-toolbar';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport TableEmptyState from '../../presentational-components/shared/table-empty-state';\nimport { useIntl } from 'react-intl';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\nimport filteringMessages from '../../messages/filtering.messages';\nimport labelMessages from '../../messages/labels.messages';\n\nconst columns = (intl) => [\n  {\n    title: intl.formatMessage(labelMessages.name),\n    transforms: [sortable]\n  },\n  {\n    title: intl.formatMessage(labelMessages.description),\n    transforms: [sortable]\n  },\n  {\n    title: intl.formatMessage(orderProcessesMessages.created_at),\n    transforms: [sortable]\n  }\n];\n\nconst debouncedFilter = asyncFormValidator(\n  (filter, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(setFilterValueOrderProcesses(filter, meta));\n    return dispatch(fetchOrderProcesses(meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst prepareChips = (filterValue, intl) =>\n  filterValue\n    ? [\n        {\n          category: intl.formatMessage(labelMessages.name),\n          key: 'name',\n          chips: [{ name: filterValue, value: filterValue }]\n        }\n      ]\n    : [];\n\nconst initialState = (filterValue = '') => ({\n  filterValue,\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n});\n\nconst orderProcessesState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst OrderProcesses = () => {\n  const {\n    orderProcesses: { data, meta },\n    sortBy,\n    filterValueRedux\n  } = useSelector(\n    ({\n      orderProcessReducer: {\n        orderProcesses,\n        sortBy,\n        filterValue: filterValueRedux\n      }\n    }) => ({ orderProcesses, sortBy, filterValueRedux }),\n    shallowEqual\n  );\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch] = useReducer(\n    orderProcessesState,\n    initialState(filterValueRedux)\n  );\n\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  const updateOrderProcesses = (pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    return dispatch(fetchOrderProcesses(pagination))\n      .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n      .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'order-processes', secondaryNav: true });\n    updateOrderProcesses(defaultSettings);\n    scrollToTop();\n  }, []);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      { ...meta, offset: 0 }\n    );\n  };\n\n  const onSort = (_e, index, direction, { property }) => {\n    dispatch(sortOrderProcesses({ index, direction, property }));\n    return updateOrderProcesses();\n  };\n\n  return (\n    <Fragment>\n      <TopToolbar>\n        <TextContent className=\"pf-u-ml-md\">\n          <Text component={TextVariants.h1}>\n            {intl.formatMessage(orderProcessesMessages.title)}\n          </Text>\n        </TextContent>\n      </TopToolbar>\n      <TableToolbarView\n        sortBy={sortBy}\n        onSort={onSort}\n        data={data}\n        createRows={createRows}\n        columns={columns(intl)}\n        fetchData={updateOrderProcesses}\n        titlePlural={intl.formatMessage(orderProcessesMessages.orderProcesses)}\n        titleSingular={intl.formatMessage(orderProcessesMessages.orderProcess)}\n        pagination={meta}\n        filterValue={filterValue}\n        onFilterChange={handleFilterChange}\n        isLoading={isFetching || isFiltering}\n        renderEmptyState={() => (\n          <TableEmptyState\n            title={\n              filterValue === ''\n                ? intl.formatMessage(orderProcessesMessages.noOrderProcesses)\n                : intl.formatMessage(filteringMessages.noResultsFound)\n            }\n            Icon={SearchIcon}\n            PrimaryAction={() =>\n              filterValue !== '' ? (\n                <Button onClick={() => handleFilterChange('')} variant=\"link\">\n                  {intl.formatMessage(filteringMessages.clearFilters)}\n                </Button>\n              ) : null\n            }\n            description={\n              filterValue === ''\n                ? intl.formatMessage(orderProcessesMessages.noOrderProcesses)\n                : intl.formatMessage(filteringMessages.noResultsDescription)\n            }\n          />\n        )}\n        activeFiltersConfig={{\n          filters: prepareChips(filterValue, intl),\n          onDelete: () => handleFilterChange('')\n        }}\n      />\n    </Fragment>\n  );\n};\n\nexport default OrderProcesses;\n"],"sourceRoot":""}