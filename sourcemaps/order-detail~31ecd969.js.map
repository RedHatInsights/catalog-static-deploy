{"version":3,"sources":["webpack:///./src/smart-components/order/order-detail/order-detail-title.tsx","webpack:///./src/smart-components/order/cancel-order-modal.tsx","webpack:///./src/smart-components/order/order-detail/order-toolbar-actions.tsx","webpack:///./src/smart-components/order/order-detail/order-detail-information.tsx","webpack:///./src/smart-components/order/order-detail/order-detail-menu.tsx","webpack:///./src/presentational-components/styled-components/unavailable-alert-container.ts","webpack:///./src/smart-components/order/order-detail/order-detail.tsx","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/angle-left-icon.js","webpack:///./src/messages/states.messages.ts","webpack:///./src/smart-components/order/order-status-mapper.tsx","webpack:///./src/helpers/shared/breadcrumbs-creators.ts","webpack:///./src/redux/actions/breadcrumbs-actions.ts","webpack:///./src/utilities/use-breadcrumbs.ts","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Title/Title.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/clock-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/plus-circle-icon.js"],"names":["orderId","formatMessage","Title","headingLevel","size","detailTitle","id","name","cancelOrder","onClose","isOpen","Modal","title","header","style","fill","variant","actions","Button","onClick","ouiaId","key","keepOrder","cancelDescription","CANCELABLE_STATES","ORDERABLE_STATES","canCancel","state","includes","portfolioItemName","portfolioItemId","portfolioId","sourceId","orderable","dispatch","cancelModalOpen","setCancelModalOpen","history","canReorder","ActionGroup","isDisabled","type","className","push","pathname","search","onReorder","reOrder","jobName","Level","hasGutter","height","src","searchParams","portfolio","source","LevelItem","Label","StyledCatalogLink","StyledTabButton","props","StyledTabItem","baseUrl","isFetching","orderDetailData","navItems","link","orderDetails","menuApproval","menuProvision","menuLifecycle","useNavItems","activeKey","findIndex","split","pop","replace","map","index","tabIndex","exact","nav","preserveSearch","activeClassName","div","ApprovalRequests","OrderLifecycle","OrderProvision","OrderDetails","requiredParams","setIsFetching","queryValues","resetBreadcrumbs","window","insights","chrome","appNavClick","secondaryNav","Promise","all","then","order","portfolioItem","platform","unavailableMessages","notFound","filter","length","notFoundObjects","object","Alert","isInline","objectsNotFound","objects","join","count","unAvailable","Stack","StackItem","backToOrders","metadata","Bullseye","Spinner","fallback","path","component","exports","__esModule","AngleLeftIconConfig","width","svgPath","yOffset","xOffset","AngleLeftIcon","createIcon","statesMessages","defaultMessage","ordered","approvalPending","canceled","completed","failed","undecided","approved","denied","error","pending","skipped","started","notified","unknown","getTranslatableState","char","toLowerCase","created","orderStatusMapper","Completed","icon","color","Ordered","Failed","Canceled","Created","Approved","Denied","Error","Undecided","Unknown","ENTITIES_EXTRA_PARAMS","FRAGMENT_TITLE","getState","portfolioReducer","selectedPortfolio","platformReducer","selectedPlatform","serviceOffering","service","orderReducer","orderDetail","FRAGMENT_PREFIX","createBreadcrumbsFromLocations","payload","result","reduce","acc","curr","generateTitle","forEach","updateTriggers","URLSearchParams","searchObject","value","TitleSizes","headingLevelSizeMap","_a","children","HeadingLevel","Object","assign","modifiers","displayName","ClockIcon","PlusCircleIcon"],"mappings":"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","file":"js/order-detail~31ecd969.6b3970679e88089e0cbe.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { Title } from '@patternfly/react-core';\nimport ordersMessages from '../../../messages/orders.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\n\nconst OrderDetailTitle: React.ComponentType<{ orderId: string }> = ({\n  orderId\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Title headingLevel=\"h1\" size=\"3xl\">\n      {formatMessage(ordersMessages.detailTitle, {\n        id: orderId\n      })}\n    </Title>\n  );\n};\n\nexport default OrderDetailTitle;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Button, Modal, Title } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport ordersMessages from '../../messages/orders.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nexport interface CancelOrderModal {\n  name: string;\n  cancelOrder: () => void;\n  onClose: () => void;\n  isOpen?: boolean;\n}\nconst CancelOrderModal: React.ComponentType<CancelOrderModal> = ({\n  name,\n  cancelOrder,\n  onClose,\n  isOpen\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\" \"\n      aria-labelledby=\"cancel-order\"\n      header={\n        <Title size=\"2xl\" headingLevel=\"h2\">\n          <ExclamationTriangleIcon style={{ fill: '#F0AB00' }} />{' '}\n          {formatMessage(ordersMessages.cancelOrder)}\n        </Title>\n      }\n      variant=\"small\"\n      actions={[\n        <Button\n          onClick={cancelOrder}\n          ouiaId={'cancel-order'}\n          key=\"cancel-order\"\n          id=\"cancel-order\"\n          variant=\"danger\"\n        >\n          {formatMessage(ordersMessages.cancelOrder)}\n        </Button>,\n        <Button\n          onClick={onClose}\n          ouiaId={'keep-order'}\n          key=\"keep-order\"\n          id=\"keep-order\"\n          variant=\"link\"\n        >\n          {formatMessage(ordersMessages.keepOrder)}\n        </Button>\n      ]}\n    >\n      {formatMessage(ordersMessages.cancelDescription, { name })}\n    </Modal>\n  );\n};\n\nexport default CancelOrderModal;\n","/* eslint-disable react/prop-types */\nimport React, { useState, Fragment } from 'react';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useDispatch } from 'react-redux';\n\nimport { cancelOrder } from '../../../redux/actions/order-actions';\nimport CancelOrderModal from '../cancel-order-modal';\nimport ordersMessages from '../../../messages/orders.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport { PORTFOLIO_ITEM_ORDER_ROUTE } from '../../../constants/routes';\nimport useEnhancedHistory from '../../../utilities/use-enhanced-history';\n\nconst CANCELABLE_STATES = ['Approval Pending'];\nconst ORDERABLE_STATES = ['Completed'];\n\nconst canCancel = (state = '') => CANCELABLE_STATES.includes(state);\n\nexport interface OrderToolbarActions {\n  state?: string;\n  orderId: string;\n  portfolioItemName: string;\n  portfolioItemId: string;\n  portfolioId: string;\n  sourceId: string;\n  orderable: boolean;\n}\nconst OrderToolbarActions: React.ComponentType<OrderToolbarActions> = ({\n  state,\n  orderId,\n  portfolioItemName,\n  portfolioItemId,\n  portfolioId,\n  sourceId,\n  orderable = false\n}) => {\n  const formatMessage = useFormatMessage();\n  const dispatch = useDispatch();\n  const [cancelModalOpen, setCancelModalOpen] = useState(false);\n  const history = useEnhancedHistory();\n  const canReorder = () =>\n    orderable && state && ORDERABLE_STATES.includes(state);\n\n  const onReorder = (\n    portfolioId: string,\n    portfolioItemId: string,\n    sourceId: string\n  ) => {\n    history.push({\n      pathname: PORTFOLIO_ITEM_ORDER_ROUTE,\n      search: `?portfolio=${portfolioId}&portfolio-item=${portfolioItemId}&source=${sourceId}`\n    });\n  };\n\n  return (\n    <Fragment>\n      <CancelOrderModal\n        onClose={() => setCancelModalOpen(false)}\n        isOpen={cancelModalOpen}\n        cancelOrder={() => {\n          setCancelModalOpen(false);\n          dispatch(cancelOrder(orderId));\n        }}\n        name={portfolioItemName}\n      />\n      <ActionGroup>\n        {canCancel(state) && (\n          <Button\n            onClick={() => setCancelModalOpen(true)}\n            isDisabled={!canCancel(state)}\n            type=\"button\"\n            className=\"pf-u-mr-md\"\n            id=\"cancel-order-action\"\n            ouiaId=\"cancel-order-action\"\n          >\n            {formatMessage(ordersMessages.cancelOrder)}\n          </Button>\n        )}\n        {canReorder() && (\n          <Button\n            onClick={() => onReorder(portfolioId, portfolioItemId, sourceId)}\n            isDisabled={!canReorder()}\n            type=\"button\"\n            className=\"pf-u-mr-md\"\n            id=\"reorder-order-action\"\n            ouiaId=\"reorder-order-action\"\n          >\n            {formatMessage(ordersMessages.reOrder)}\n          </Button>\n        )}\n      </ActionGroup>\n    </Fragment>\n  );\n};\n\nexport default OrderToolbarActions;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { LevelItem, Level, Title, Label } from '@patternfly/react-core';\n\nimport CardIcon from '../../../presentational-components/shared/card-icon';\nimport { CATALOG_API_BASE } from '../../../utilities/constants';\nimport CatalogLink from '../../common/catalog-link';\nimport statesMessages, {\n  getTranslatableState\n} from '../../../messages/states.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport orderStatusMapper from '../order-status-mapper';\n\nexport interface OrderDetailInformationProps {\n  portfolioItemId: string;\n  sourceId: string;\n  jobName: string;\n  portfolioId: string;\n  state: keyof typeof orderStatusMapper;\n}\nconst OrderDetailInformation: React.ComponentType<OrderDetailInformationProps> = ({\n  portfolioId,\n  jobName,\n  portfolioItemId,\n  sourceId,\n  state\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Level className=\"pf-u-mt-sm\" hasGutter>\n      <Level hasGutter>\n        <CardIcon\n          sourceId={sourceId}\n          height={60}\n          src={`${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}/icon`}\n        />\n        <Title headingLevel=\"h2\" size=\"lg\">\n          <CatalogLink\n            pathname=\"/portfolio/portfolio-item\"\n            searchParams={{\n              portfolio: portfolioId,\n              source: sourceId,\n              'portfolio-item': portfolioItemId\n            }}\n          >\n            {jobName}\n          </CatalogLink>\n        </Title>\n      </Level>\n      <LevelItem>\n        <Label {...orderStatusMapper[state]} variant=\"outline\">\n          {formatMessage(statesMessages[getTranslatableState(state)])}\n        </Label>\n      </LevelItem>\n    </Level>\n  );\n};\n\nexport default OrderDetailInformation;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport useEnhancedHistory from '../../../utilities/use-enhanced-history';\nimport CatalogLink from '../../common/catalog-link';\nimport ordersMessages from '../../../messages/orders.messages';\nimport { stateToDisplay } from '../../../helpers/shared/helpers';\n\n/**\n * Make sure to import correct Tabs styles\n */\nimport '@patternfly/react-styles/css/components/Tabs/tabs.css';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport { OrderStateEnum } from '@redhat-cloud-services/catalog-client';\nimport { FormatMessage } from '../../../types/common-types';\nimport { CatalogRootState } from '../../../types/redux';\nimport { OrderDetail } from '../../../redux/reducers/order-reducer';\n\nconst StyledCatalogLink = styled(CatalogLink)`\n  color: var(--pf-c-tabs__link--Color);\n  text-decoration: none;\n`;\n\nconst StyledTabButton = styled(({ isDisabled, ...props }) => (\n  <button {...props} />\n))`\n  pointer-events: ${({ isDisabled }) => (isDisabled ? 'none' : 'initial')};\n`;\n\nconst StyledTabItem = styled(({ isDisabled, ...props }) => <li {...props} />)`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n`;\n\nconst useNavItems = (\n  { state }: { state?: OrderStateEnum } = {},\n  formatMessage: FormatMessage\n) => [\n  {\n    link: '',\n    title: formatMessage(ordersMessages.orderDetails)\n  },\n  {\n    link: '/approval',\n    title: formatMessage(ordersMessages.menuApproval)\n  },\n  {\n    link: '/provision',\n    title: formatMessage(ordersMessages.menuProvision)\n  },\n  {\n    link: '/lifecycle',\n    title: formatMessage(ordersMessages.menuLifecycle),\n    isDisabled: stateToDisplay(state)\n  }\n];\n\nexport interface OrderDetailMenuProps {\n  baseUrl: string;\n  isFetching?: boolean;\n}\n\nconst OrderDetailMenu: React.ComponentType<OrderDetailMenuProps> = ({\n  baseUrl,\n  isFetching\n}) => {\n  const formatMessage = useFormatMessage();\n  const { push } = useEnhancedHistory();\n  const orderDetailData = useSelector<CatalogRootState, OrderDetail>(\n    ({ orderReducer: { orderDetail } }) => orderDetail || {}\n  );\n  const { pathname, search } = useLocation();\n  const { order } = orderDetailData;\n  const navItems = useNavItems(order, formatMessage);\n  let activeKey = navItems.findIndex(\n    ({ link }) => pathname.split('/').pop() === link.replace('/', '')\n  );\n  activeKey = activeKey > 0 ? activeKey : 0;\n  const handleTabClick = (tabIndex: number) =>\n    push({ pathname: `${baseUrl}${navItems[tabIndex].link}`, search });\n\n  return (\n    <div className=\"pf-c-tabs pf-u-pl-md pf-u-pr-md\">\n      <ul className=\"pf-c-tabs__list\">\n        {navItems.map(({ link, title, isDisabled }, index) => (\n          <StyledTabItem\n            className={`pf-c-tabs__item${\n              index === activeKey ? ' pf-m-current' : ''\n            }`}\n            isDisabled={isDisabled || isFetching}\n            key={link || index}\n          >\n            <StyledTabButton\n              className=\"pf-c-tabs__link\"\n              isDisabled={isDisabled || isFetching}\n              {...(isDisabled || isFetching ? { tabIndex: -1 } : {})}\n              onClick={() => handleTabClick(index)}\n            >\n              <StyledCatalogLink\n                exact\n                nav\n                isDisabled={isDisabled || isFetching}\n                pathname={`${baseUrl}${link}`}\n                preserveSearch\n                activeClassName=\"pf-m-active\"\n                {...(isDisabled || isFetching ? { tabIndex: -1 } : {})}\n              >\n                {title}\n              </StyledCatalogLink>\n            </StyledTabButton>\n          </StyledTabItem>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default OrderDetailMenu;\n","import styled from 'styled-components';\n\nconst UnAvailableAlertContainer = styled.div`\n  width: 100%;\n  > *:not(:last-child) {\n    margin-bottom: 4px;\n    width: 100%;\n  }\n`;\n\nexport default UnAvailableAlertContainer;\n","import React, { useEffect, useState, Fragment, Suspense, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Level,\n  LevelItem,\n  Stack,\n  StackItem,\n  Bullseye,\n  Alert\n} from '@patternfly/react-core';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchOrderDetails } from '../../../redux/actions/order-actions';\nimport OrderDetailTitle from './order-detail-title';\nimport OrderToolbarActions from './order-toolbar-actions';\nimport OrderDetailInformation from './order-detail-information';\nimport OrderDetailMenu from './order-detail-menu';\nimport { OrderDetailToolbarPlaceholder } from '../../../presentational-components/shared/loader-placeholders';\nimport useQuery from '../../../utilities/use-query';\nimport useBreadcrumbs from '../../../utilities/use-breadcrumbs';\nimport { fetchPlatforms } from '../../../redux/actions/platform-actions';\nimport UnAvailableAlertContainer from '../../../presentational-components/styled-components/unavailable-alert-container';\nimport ordersMessages from '../../../messages/orders.messages';\nimport CatalogLink from '../../common/catalog-link';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport { CatalogRootState } from '../../../types/redux';\nimport { OrderDetail as OrderDetailType } from '../../../redux/reducers/order-reducer';\nimport { GetOrderDetailParams } from '../../../helpers/order/order-helper';\nimport { ORDER_ROUTE } from '../../../constants/routes';\n\nconst ApprovalRequests = lazy(() =>\n  import(/* webpackChunkName: \"approval-request\" */ './approval-request')\n);\nconst OrderLifecycle = lazy(() =>\n  import(/* webpackChunkName: \"order-lifecycle\" */ './order-lifecycle')\n);\nconst OrderProvision = lazy(() =>\n  import(/* webpackChunkName: \"order-provision\" */ './order-provision')\n);\nconst OrderDetails = lazy(() =>\n  import(/* webpackChunkName: \"order-details\" */ './order-details')\n);\nconst requiredParams = [\n  'order-item',\n  'portfolio-item',\n  'platform',\n  'portfolio',\n  'order'\n];\n\nconst OrderDetail: React.ComponentType = () => {\n  const formatMessage = useFormatMessage();\n  const [isFetching, setIsFetching] = useState(true);\n  const [queryValues] = useQuery<GetOrderDetailParams>(requiredParams);\n  const orderDetailData = useSelector<CatalogRootState, OrderDetailType>(\n    ({ orderReducer: { orderDetail } }) => orderDetail\n  );\n  const dispatch = useDispatch();\n  const resetBreadcrumbs = useBreadcrumbs([orderDetailData]);\n  useEffect(() => {\n    window.insights.chrome.appNavClick({ id: 'orders', secondaryNav: true });\n    setIsFetching(true);\n    Promise.all([\n      dispatch(fetchPlatforms()),\n      dispatch(fetchOrderDetails(queryValues))\n    ]).then(() => setIsFetching(false));\n    return () => {\n      if (typeof resetBreadcrumbs === 'function') {\n        resetBreadcrumbs();\n      }\n    };\n  }, []);\n\n  const { order, portfolioItem, platform, portfolio } = orderDetailData;\n\n  const unAvailable = () => {\n    const notFound = [portfolioItem, platform, portfolio || {}].filter(\n      ({ notFound }) => notFound\n    );\n    if (notFound.length === 0) {\n      return null;\n    }\n\n    let notFoundObjects = [];\n    if (portfolioItem.notFound) {\n      notFoundObjects.push(portfolioItem.object);\n    } else {\n      notFoundObjects = notFound.map(({ object }) => object);\n    }\n\n    return (\n      <Alert\n        key=\"order-object-missing\"\n        variant=\"warning\"\n        isInline\n        title={formatMessage(ordersMessages.objectsNotFound, {\n          objects: notFoundObjects.join(', '),\n          count: notFoundObjects.length\n        })}\n      />\n    );\n  };\n\n  const unavailableMessages = unAvailable();\n  return (\n    <Stack>\n      <StackItem className=\"pf-u-p-lg global-primary-background\">\n        {isFetching ? (\n          <OrderDetailToolbarPlaceholder />\n        ) : (\n          <Fragment>\n            <Level className=\"pf-u-mb-md\">\n              <LevelItem>\n                <AngleLeftIcon className=\"pf-u-mr-md\" />\n                <CatalogLink pathname=\"/orders\">\n                  {formatMessage(ordersMessages.backToOrders)}\n                </CatalogLink>\n              </LevelItem>\n            </Level>\n            <Level className=\"flex-no-wrap\">\n              {unavailableMessages ? (\n                <UnAvailableAlertContainer>\n                  {unavailableMessages}\n                </UnAvailableAlertContainer>\n              ) : (\n                <Fragment>\n                  <LevelItem>\n                    <OrderDetailTitle orderId={order.id} />\n                  </LevelItem>\n                  <LevelItem>\n                    <OrderToolbarActions\n                      portfolioItemName={portfolioItem.name}\n                      orderId={order.id}\n                      state={order.state}\n                      portfolioItemId={portfolioItem.id}\n                      portfolioId={portfolio.id}\n                      sourceId={platform.id}\n                      orderable={portfolioItem.metadata?.orderable || false}\n                    />\n                  </LevelItem>\n                </Fragment>\n              )}\n            </Level>\n            {!unavailableMessages && (\n              <OrderDetailInformation\n                portfolioItemId={portfolioItem.id}\n                portfolioId={portfolio.id}\n                sourceId={platform.id}\n                jobName={portfolioItem.name}\n                state={order.state}\n              />\n            )}\n          </Fragment>\n        )}\n      </StackItem>\n      <StackItem>\n        <Stack hasGutter>\n          <StackItem className=\"global-primary-background\">\n            <OrderDetailMenu isFetching={isFetching} baseUrl={ORDER_ROUTE} />\n          </StackItem>\n          <StackItem className=\"pf-u-pl-lg pf-u-pr-lg pf-u-mb-lg\">\n            {isFetching ? (\n              <Bullseye>\n                <Spinner />\n              </Bullseye>\n            ) : (\n              <Suspense fallback={<div></div>}>\n                <Switch>\n                  <Route\n                    path={`${ORDER_ROUTE}/approval`}\n                    component={ApprovalRequests}\n                  />\n                  <Route path={`${ORDER_ROUTE}/provision`}>\n                    <OrderProvision />\n                  </Route>\n                  <Route path={`${ORDER_ROUTE}/lifecycle`}>\n                    <OrderLifecycle />\n                  </Route>\n                  <Route path={ORDER_ROUTE} component={OrderDetails} />\n                </Switch>\n              </Suspense>\n            )}\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default OrderDetail;\n","\"use strict\"\nexports.__esModule = true;\nexports.AngleLeftIconConfig = {\n  name: 'AngleLeftIcon',\n  height: 512,\n  width: 256,\n  svgPath: 'M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.AngleLeftIcon = require('../createIcon').createIcon(exports.AngleLeftIconConfig);\nexports[\"default\"] = exports.AngleLeftIcon;","import labelMessages from './labels.messages';\n\nimport { defineMessages } from 'react-intl';\n\nconst statesMessages = defineMessages({\n  title: {\n    id: 'common.states.title',\n    defaultMessage: 'State'\n  },\n  ordered: {\n    id: 'common.states.ordered',\n    defaultMessage: 'Ordered'\n  },\n  approvalPending: {\n    id: 'common.states.approval-pending',\n    defaultMessage: 'Approval Pending'\n  },\n  canceled: {\n    id: 'common.states.canceled',\n    defaultMessage: 'Canceled'\n  },\n  completed: {\n    id: 'common.states.completed',\n    defaultMessage: 'Completed'\n  },\n  failed: {\n    id: 'common.states.failed',\n    defaultMessage: 'Failed'\n  },\n  undecided: {\n    id: 'common.states.undecided',\n    defaultMessage: 'Undecided'\n  },\n  approved: {\n    id: 'common.states.approved',\n    defaultMessage: 'Approved'\n  },\n  denied: {\n    id: 'common.states.denied',\n    defaultMessage: 'Denied'\n  },\n  error: {\n    id: 'common.states.error',\n    defaultMessage: 'Error'\n  },\n  pending: {\n    id: 'common.states.pending',\n    defaultMessage: 'Pending'\n  },\n  skipped: {\n    id: 'common.states.skipped',\n    defaultMessage: 'Skipped'\n  },\n  started: {\n    id: 'common.states.started',\n    defaultMessage: 'Started'\n  },\n  notified: {\n    id: 'common.states.notified',\n    defaultMessage: 'Notified'\n  },\n  unknown: {\n    id: 'common.states.unknown',\n    defaultMessage: 'Unknown'\n  }\n});\n\nexport const getTranslatableState = (\n  state: string\n): keyof typeof statesMessages =>\n  (state\n    ? state.replace(/\\s/g, '').replace(/^./, (char) => char.toLowerCase())\n    : 'unknown') as keyof typeof statesMessages;\n\n/**\n * We must include the created state so the dynamic data from DB can look for these messages in one place\n * The created message is shared among other components and is just a state message\n */\nexport default { ...statesMessages, created: labelMessages.created };\n","import React, { ReactNode } from 'react';\nimport {\n  ExclamationCircleIcon,\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n  ClockIcon,\n  PlusCircleIcon\n} from '@patternfly/react-icons';\n\nconst orderStatusMapper: {\n  Completed: { icon: ReactNode; color: 'green' };\n  Ordered: { icon: ReactNode; color: 'grey' };\n  Failed: { icon: ReactNode; color: 'red' };\n  Canceled: { icon: ReactNode; color: 'orange' };\n  Created: { icon: ReactNode; color: 'grey' };\n  'Approval Pending': { icon: ReactNode; color: 'blue' };\n  Approved: { icon: ReactNode; color: 'green' };\n  Denied: { icon: ReactNode; color: 'red' };\n  Undecided: { icon: ReactNode; color: 'blue' };\n  Unknown: { icon: ReactNode; color: 'grey' };\n  Error: { icon: ReactNode; color: 'red' };\n} = {\n  Completed: { icon: <CheckCircleIcon />, color: 'green' },\n  'Approval Pending': {\n    icon: <ClockIcon />,\n    color: 'blue'\n  },\n  Ordered: { icon: <PlusCircleIcon />, color: 'grey' },\n  Failed: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Canceled: { icon: <ExclamationTriangleIcon />, color: 'orange' },\n  Created: { icon: <PlusCircleIcon />, color: 'grey' },\n  Approved: { icon: <CheckCircleIcon />, color: 'green' },\n  Denied: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Error: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Undecided: {\n    icon: <ClockIcon />,\n    color: 'blue'\n  },\n  Unknown: { icon: <ExclamationTriangleIcon />, color: 'grey' }\n};\n\nexport default orderStatusMapper;\n","import {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  ORDER_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORMS_ROUTE,\n  ORDERS_ROUTE,\n  EDIT_SURVEY_ROUTE,\n  ADD_PRODUCTS_ROUTE,\n  PORTFOLIO_ITEM_ROUTE_EDIT\n} from '../../constants/routes';\nimport { PortfolioReducerState } from '../../redux/reducers/portfolio-reducer';\nimport { ReactNode } from 'react';\nimport { PlatformReducerState } from '../../redux/reducers/platform-reducer';\nimport { OrderReducerState } from '../../redux/reducers/order-reducer';\n\nexport const BASE_PORTFOLIO_FRAGMENTS = [\n  {\n    title: 'Portfolios',\n    pathname: PORTFOLIOS_ROUTE,\n    searchParams: {}\n  }\n];\n\nexport const ENTITIES_EXTRA_PARAMS = {\n  'portfolio-item': ['source']\n};\n\nexport const FRAGMENT_TITLE = {\n  [PORTFOLIO_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.selectedPortfolio.name,\n  [PORTFOLIO_ITEM_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.portfolioItem.portfolioItem.name,\n  [EDIT_SURVEY_ROUTE]: (): string => 'Edit survey',\n  [ADD_PRODUCTS_ROUTE]: (): string => 'Add products',\n  [PLATFORM_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.selectedPlatform.name,\n  [PLATFORM_SERVICE_OFFERINGS_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.serviceOffering.service.name,\n  [ORDER_ROUTE]: (\n    getState: () => { orderReducer: OrderReducerState }\n  ): ReactNode => {\n    const { portfolioItem, order } = getState().orderReducer.orderDetail;\n    return `${portfolioItem.name} # ${order.id}`;\n  },\n  [PORTFOLIO_ITEM_ROUTE_EDIT]: (): string => 'Edit product'\n};\n\nexport const FRAGMENT_PREFIX = {\n  [PORTFOLIO_ROUTE]: {\n    pathname: PORTFOLIOS_ROUTE,\n    title: 'Portfolios',\n    searchParams: {}\n  },\n  [PLATFORM_ROUTE]: {\n    pathname: PLATFORMS_ROUTE,\n    title: 'Platforms',\n    searchParams: {}\n  },\n  [ORDER_ROUTE]: {\n    pathname: ORDERS_ROUTE,\n    title: 'Orders',\n    searchParams: {}\n  }\n};\n","import { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport {\n  FRAGMENT_TITLE,\n  ENTITIES_EXTRA_PARAMS,\n  FRAGMENT_PREFIX\n} from '../../helpers/shared/breadcrumbs-creators';\nimport { Dispatch } from 'redux';\nimport { BreadcrumbFragment } from '../reducers/breadcrumbs-reducer';\nimport { GetReduxState } from '../../types/redux';\nimport { AnyObject, ReduxAction } from '../../types/common-types';\n\nexport const createBreadcrumbsFromLocations = (\n  pathname = '',\n  search: AnyObject = {}\n) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): ReduxAction<BreadcrumbFragment[]> => {\n  if (pathname.length === 0) {\n    return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: [] });\n  }\n\n  let result = pathname\n    .replace(/^\\//, '')\n    .split('/')\n    .reduce<BreadcrumbFragment[]>((acc, curr, index) => {\n      const pathname = `${\n        index > 0 && acc[index - 1] ? acc[index - 1].pathname : ''\n      }/${curr}`;\n\n      const generateTitle = (FRAGMENT_TITLE[\n        pathname as keyof typeof FRAGMENT_TITLE\n      ] as unknown) as (getState: GetReduxState) => string;\n      if (!generateTitle) {\n        return acc;\n      }\n\n      const searchParams = {\n        ...(index > 0 && acc[index - 1].searchParams),\n        ...(search[curr] ? { [curr]: search[curr] } : {})\n      };\n      if ((ENTITIES_EXTRA_PARAMS as AnyObject)[curr]) {\n        (ENTITIES_EXTRA_PARAMS as AnyObject)[curr].forEach((key: string) => {\n          searchParams[key] = search[key];\n        });\n      }\n\n      return [\n        ...acc,\n        {\n          pathname,\n          searchParams,\n          title: generateTitle(getState)\n        }\n      ];\n    }, []);\n  if (result.length > 0 && (FRAGMENT_PREFIX as AnyObject)[result[0].pathname]) {\n    result = [(FRAGMENT_PREFIX as AnyObject)[result[0].pathname], ...result];\n  }\n\n  return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: result });\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createBreadcrumbsFromLocations } from '../redux/actions/breadcrumbs-actions';\nimport { INITIALIZE_BREADCRUMBS } from '../redux/action-types';\nimport { AnyObject, ReduxAction } from '../types/common-types';\nimport { AnyAction } from 'redux';\n\nconst useBreadcrumbs = (\n  updateTriggers: any[] = []\n):\n  | (() => ReduxAction<{\n      type: typeof INITIALIZE_BREADCRUMBS;\n    }>)\n  | ReduxAction<{ type: typeof INITIALIZE_BREADCRUMBS }> => {\n  const dispatch = useDispatch();\n  const { pathname, search } = useLocation();\n  if (updateTriggers.length === 0) {\n    return dispatch(\n      (createBreadcrumbsFromLocations('', {}) as unknown) as AnyAction\n    );\n  }\n\n  const searchParams = new URLSearchParams(search);\n  const searchObject: AnyObject = {};\n  searchParams.forEach((value, key) => {\n    searchObject[key] = value;\n  });\n\n  useEffect(() => {\n    dispatch(createBreadcrumbsFromLocations(pathname, searchObject));\n  }, [pathname, ...updateTriggers]);\n\n  return () =>\n    dispatch((createBreadcrumbsFromLocations('', {}) as unknown) as AnyAction);\n};\n\nexport default useBreadcrumbs;\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Title/title';\nexport var TitleSizes;\n(function (TitleSizes) {\n    TitleSizes[\"md\"] = \"md\";\n    TitleSizes[\"lg\"] = \"lg\";\n    TitleSizes[\"xl\"] = \"xl\";\n    TitleSizes[\"2xl\"] = \"2xl\";\n    TitleSizes[\"3xl\"] = \"3xl\";\n    TitleSizes[\"4xl\"] = \"4xl\";\n})(TitleSizes || (TitleSizes = {}));\nvar headingLevelSizeMap;\n(function (headingLevelSizeMap) {\n    headingLevelSizeMap[\"h1\"] = \"2xl\";\n    headingLevelSizeMap[\"h2\"] = \"xl\";\n    headingLevelSizeMap[\"h3\"] = \"lg\";\n    headingLevelSizeMap[\"h4\"] = \"md\";\n    headingLevelSizeMap[\"h5\"] = \"md\";\n    headingLevelSizeMap[\"h6\"] = \"md\";\n})(headingLevelSizeMap || (headingLevelSizeMap = {}));\nexport const Title = (_a) => {\n    var { className = '', children = '', headingLevel: HeadingLevel, size = headingLevelSizeMap[HeadingLevel] } = _a, props = __rest(_a, [\"className\", \"children\", \"headingLevel\", \"size\"]);\n    return (React.createElement(HeadingLevel, Object.assign({}, props, { className: css(styles.title, size && styles.modifiers[size], className) }), children));\n};\nTitle.displayName = 'Title';\n//# sourceMappingURL=Title.js.map","import { createIcon } from '../createIcon';\n\nexport const ClockIconConfig = {\n  name: 'ClockIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256,8C119,8,8,119,8,256S119,504,256,504,504,393,504,256,393,8,256,8Zm92.49,313h0l-20,25a16,16,0,0,1-22.49,2.5h0l-67-49.72a40,40,0,0,1-15-31.23V112a16,16,0,0,1,16-16h32a16,16,0,0,1,16,16V256l58,42.5A16,16,0,0,1,348.49,321Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ClockIcon = createIcon(ClockIconConfig);\n\nexport default ClockIcon;","import { createIcon } from '../createIcon';\n\nexport const PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PlusCircleIcon = createIcon(PlusCircleIconConfig);\n\nexport default PlusCircleIcon;"],"sourceRoot":""}