{"version":3,"file":"js/add-products-to-portfolio.1644526703147.21308c29e9a145323a28.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/filter-icon.js","webpack:///./src/smart-components/portfolio/add-products-to-portfolio/add-products-gallery.js","webpack:///./src/presentational-components/shared/filter-select.tsx","webpack:///./src/toolbar/schemas/add-products-toolbar.schema.js","webpack:///./src/smart-components/portfolio/add-products-to-portfolio/index.js","webpack:///./src/toolbar/helpers.js","webpack:///./src/presentational-components/shared/button-with-spinner.tsx","webpack:///./src/smart-components/common/async-pagination.tsx"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.FilterIconConfig = {\n  name: 'FilterIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.FilterIcon = require('../createIcon').createIcon(exports.FilterIconConfig);\nexports[\"default\"] = exports.FilterIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, FilterIcon } from '@patternfly/react-icons';\n\nimport ContentGallery from '../../content-gallery/content-gallery';\nimport ContentGalleryEmptyState from '../../../presentational-components/shared/content-gallery-empty-state';\nimport filteringMessages from '../../../messages/filtering.messages';\nimport portfolioMessages from '../../../messages/portfolio.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\n\nconst EmptyState = ({ platform }) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <ContentGalleryEmptyState\n      Icon={platform ? SearchIcon : FilterIcon}\n      title={\n        platform\n          ? formatMessage(portfolioMessages.addProducstFilterTitle)\n          : formatMessage(portfolioMessages.addProducstPlatformTitle)\n      }\n      description={\n        platform\n          ? formatMessage(filteringMessages.noResultsDescription)\n          : formatMessage(portfolioMessages.addProducstPlatformDescription)\n      }\n    />\n  );\n};\n\nEmptyState.propTypes = {\n  platform: PropTypes.any\n};\n\nconst AddProductsGallery = ({ platform, ...props }) => (\n  <ContentGallery\n    editMode={true}\n    {...props}\n    renderEmptyState={() => <EmptyState platform={platform} />}\n  />\n);\n\nAddProductsGallery.propTypes = {\n  checkedItems: PropTypes.arrayOf(PropTypes.string),\n  platform: PropTypes.any\n};\n\nAddProductsGallery.defaultProps = {\n  checkedItems: []\n};\n\nexport default AddProductsGallery;\n","/* eslint-disable react/prop-types */\nimport React, { useState, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  InternalSelect,\n  InternalSelectProps\n} from '@data-driven-forms/pf4-component-mapper/select';\nimport isEqual from 'lodash/isEqual';\n\nconst FilterSelect: React.ComponentType<InternalSelectProps> = ({\n  onChange,\n  ...props\n}) => {\n  const [stateValue, setValue] = useState(undefined);\n  return (\n    <div key=\"filter-select\" id=\"filter-select\" className=\"filter-select\">\n      <InternalSelect\n        isDisabled={!props.options || props.options.length === 0}\n        name=\"filter-select\"\n        simpleValue={false}\n        onChange={(value) => {\n          onChange && onChange(value || stateValue);\n          setValue(value || stateValue);\n        }}\n        value={stateValue}\n        {...props}\n      />\n    </div>\n  );\n};\n\nFilterSelect.propTypes = {\n  options: PropTypes.array,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default memo(FilterSelect, (prevProps, nextProps) =>\n  isEqual(prevProps.options, nextProps.options)\n);\n","import { toolbarComponentTypes } from '../toolbar-mapper';\nimport { createLinkButton } from '../helpers';\nimport FilterSelect from '../../presentational-components/shared/filter-select';\nimport ButtonWithSpinner from '../../presentational-components/shared/button-with-spinner';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nconst createAddProductsSchema = ({\n  options,\n  isFetching,\n  searchValue,\n  portfolioName,\n  itemsSelected,\n  onOptionSelect,\n  onFilterChange,\n  portfolioRoute,\n  onClickAddToPortfolio,\n  meta,\n  platformId,\n  fetchPlatformItems\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'add-products-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          title: `Add products: ${portfolioName}`,\n          key: 'add-products-title'\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'add-products-actions',\n          fields: [\n            {\n              component: toolbarComponentTypes.TOOLBAR,\n              key: 'add-products-actions-toolbar',\n              fields: [\n                {\n                  component: toolbarComponentTypes.TOOLBAR_GROUP,\n                  key: 'products-filter-group',\n                  fields: [\n                    {\n                      component: FilterSelect,\n                      key: 'select-platforms',\n                      id: 'products-platform-select',\n                      isMulti: false,\n                      isSearchable: true,\n                      placeholder: 'Filter by Platform',\n                      options,\n                      onChange: onOptionSelect\n                    },\n                    {\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      key: 'filter-products-input',\n                      onFilterChange,\n                      searchValue,\n                      isDisabled: !platformId,\n                      placeholder: 'Filter products'\n                    }\n                  ]\n                },\n                {\n                  groupName: 'cancel-group-item',\n                  ...createLinkButton({\n                    key: 'add-products-cancel-button',\n                    pathname: portfolioRoute,\n                    variant: 'link',\n                    'aria-label': 'Cancel Add products to Portfolio',\n                    preserveSearch: true,\n                    title: 'Cancel'\n                  })\n                },\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'add-group-item',\n                  fields: [\n                    {\n                      key: 'portfolio-items-add-group',\n                      component: ButtonWithSpinner,\n                      variant: 'primary',\n                      'aria-label': 'Add products to Portfolio',\n                      title: 'Add',\n                      type: 'button',\n                      onClick: onClickAddToPortfolio,\n                      isDisabled: !itemsSelected || isFetching,\n                      showSpinner: isFetching,\n                      children: 'Add',\n                      id: 'add-products-to-portfolio'\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-item',\n              fields: meta\n                ? [\n                    {\n                      component: AsyncPagination,\n                      key: 'add-products-pagination',\n                      meta,\n                      apiProps: platformId,\n                      apiRequest: fetchPlatformItems,\n                      isCompact: true\n                    }\n                  ]\n                : []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createAddProductsSchema;\n","import React, { useState, useEffect, useReducer, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AddProductsGallery from './add-products-gallery';\nimport ToolbarRenderer from '../../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport PlatformItem from '../../../presentational-components/platform/platform-item';\nimport createAddProductsSchema from '../../../toolbar/schemas/add-products-toolbar.schema';\nimport {\n  fetchPlatformItems,\n  fetchPlatforms\n} from '../../../redux/actions/platform-actions';\nimport {\n  fetchPlatformItems as fetchPlatformItemsS,\n  fetchPlatforms as fetchPlatformsS\n} from '../../../redux/actions/platform-actions-s';\nimport {\n  addToPortfolio,\n  fetchPortfolioItemsWithPortfolio\n} from '../../../redux/actions/portfolio-actions';\nimport {\n  addToPortfolio as addToPortfolioS,\n  fetchPortfolioItemsWithPortfolio as fetchPortfolioItemsWithPortfolioS\n} from '../../../redux/actions/portfolio-actions-s';\nimport AsyncPagination from '../../common/async-pagination';\nimport useEnhancedHistory from '../../../utilities/use-enhanced-history';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BottomPaginationContainer from '../../../presentational-components/shared/bottom-pagination-container';\nimport asyncFormValidator from '../../../utilities/async-form-validator';\nimport { isStandalone } from '../../../helpers/shared/helpers';\n\nconst renderGalleryItems = (items = [], checkItem, checkedItems) => {\n  return items.map((item) => (\n    <PlatformItem\n      key={item.id}\n      {...item}\n      editMode\n      onToggleItemSelect={() => checkItem(item.id)}\n      checked={checkedItems.includes(item.id)}\n    />\n  ));\n};\n\nconst initialState = {\n  filterValue: '',\n  isFetching: false,\n  isFiltering: false\n};\n\nconst addProductsState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n  }\n\n  return state;\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (id, filter, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(\n      isStandalone()\n        ? fetchPlatformItemsS(id, filter, { ...meta, filter })\n        : fetchPlatformItems(id, filter, { ...meta, filter })\n    ).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst AddProductsToPortfolio = ({ portfolioRoute }) => {\n  const [selectedPlatform, setSelectedPlatform] = useState(undefined);\n  const [checkedItems, setCheckedItems] = useState([]);\n  const [{ filterValue, isFetching }, stateDispatch] = useReducer(\n    addProductsState,\n    initialState\n  );\n  const { push } = useEnhancedHistory();\n  const dispatch = useDispatch();\n  const { portfolio, platforms, platformItems, isLoading } = useSelector(\n    ({\n      portfolioReducer: { selectedPortfolio },\n      platformReducer: { platforms, platformItems, isPlatformDataLoading }\n    }) => ({\n      platforms,\n      platformItems,\n      isLoading: isPlatformDataLoading,\n      portfolio: selectedPortfolio\n    })\n  );\n\n  useEffect(() => {\n    dispatch(isStandalone() ? fetchPlatformsS() : fetchPlatforms());\n  }, []);\n\n  const checkItem = (itemId) => {\n    const index = checkedItems.indexOf(itemId);\n    return index > -1\n      ? [...checkedItems.slice(0, index), ...checkedItems.slice(index + 1)]\n      : [...checkedItems, itemId];\n  };\n\n  const items = () => {\n    if (selectedPlatform && platformItems[selectedPlatform.id]) {\n      return isStandalone()\n        ? platformItems[selectedPlatform.id].results\n        : platformItems[selectedPlatform.id].data;\n    }\n\n    return [];\n  };\n\n  const meta =\n    selectedPlatform &&\n    platformItems[selectedPlatform.id] &&\n    (isStandalone()\n      ? platformItems[selectedPlatform.id].meta\n      : { count: platformItems[selectedPlatform.id].count });\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      selectedPlatform.id,\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const handleAddToPortfolio = () => {\n    dispatch({ type: 'setFetching', payload: true });\n    return dispatch(\n      isStandalone()\n        ? addToPortfolioS(\n            portfolio.id,\n            items().filter((platformItem) =>\n              checkedItems.includes(platformItem.id)\n            )\n          )\n        : addToPortfolio(portfolio.id, checkedItems)\n    )\n      .then(() => dispatch({ type: 'setFetching', payload: false }))\n      .then(() =>\n        push({ pathname: portfolioRoute, search: `?portfolio=${portfolio.id}` })\n      )\n      .then(() =>\n        dispatch(\n          isStandalone()\n            ? fetchPortfolioItemsWithPortfolioS(portfolio.id)\n            : fetchPortfolioItemsWithPortfolio(portfolio.id)\n        )\n      )\n      .catch(() => dispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const onPlatformSelect = (platform) => {\n    setSelectedPlatform(platform);\n    dispatch(\n      isStandalone()\n        ? fetchPlatformItemsS(platform.id, filterValue, defaultSettings)\n        : fetchPlatformItems(platform.id, filterValue, defaultSettings)\n    );\n  };\n\n  const options =\n    platforms.results && platforms.results.length > 0\n      ? platforms.results.map((platform) => ({\n          value: platform.id,\n          label: platform.name,\n          id: platform.id\n        }))\n      : [];\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createAddProductsSchema({\n          options,\n          isFetching,\n          portfolioName: (portfolio && portfolio.name) || '',\n          itemsSelected: checkedItems.length > 0,\n          onOptionSelect: onPlatformSelect,\n          onFilterChange: (value) => handleFilterItems(value),\n          portfolioRoute,\n          onClickAddToPortfolio: handleAddToPortfolio,\n          meta,\n          platformId: selectedPlatform && selectedPlatform.id,\n          searchValue: filterValue,\n          fetchPlatformItems: (id, options) =>\n            dispatch(\n              isStandalone()\n                ? fetchPlatformItemsS(id, filterValue, options)\n                : fetchPlatformItems(id, filterValue, options)\n            )\n        })}\n      />\n      <AddProductsGallery\n        platform={!!selectedPlatform}\n        checkedItems={checkedItems}\n        isLoading={isLoading}\n        items={renderGalleryItems(\n          items(),\n          (itemId) => setCheckedItems(checkItem(itemId)),\n          checkedItems\n        )}\n      />\n      {meta && meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            meta={meta}\n            apiProps={selectedPlatform && selectedPlatform.id}\n            apiRequest={(id, options) =>\n              isStandalone()\n                ? fetchPlatformItemsS(id, filterValue, options)\n                : fetchPlatformItems(id, filterValue, options)\n            }\n            dropDirection=\"up\"\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nAddProductsToPortfolio.propTypes = {\n  portfolioRoute: PropTypes.string.isRequired\n};\n\nexport default AddProductsToPortfolio;\n","import { toolbarComponentTypes } from './toolbar-mapper';\n\nexport const createLinkButton = ({\n  pathname,\n  preserveSearch,\n  id,\n  ...item\n}) => ({\n  component: toolbarComponentTypes.TOOLBAR_ITEM,\n  key: `${item.key}/button-link`,\n  fields: [\n    {\n      component: toolbarComponentTypes.LINK,\n      pathname,\n      preserveSearch,\n      key: `${item.key}/button-link`,\n      isDisabled: item.isDisabled,\n      id,\n      fields: [\n        {\n          component: toolbarComponentTypes.BUTTON,\n          ...item\n        }\n      ]\n    }\n  ]\n});\n","/* eslint-disable react/prop-types */\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { Button } from '@patternfly/react-core';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\nimport { AnyObject } from '../../types/common-types';\n\nconst SpinnerButton = styled(Button)`\n  display: flex !important;\n  align-items: center;\n`;\n\nconst SpinnerLabel = styled.span<{ showSpinner: boolean }>`\n  margin-right: ${({ showSpinner }) => (showSpinner ? '8px' : '0')};\n`;\n\nexport interface ButtonWithSpinnerProps extends AnyObject {\n  showSpinner?: boolean;\n  isDisabled?: boolean;\n}\nconst ButtonWithSpinner = forwardRef<HTMLButtonElement, ButtonWithSpinnerProps>(\n  ({ children, showSpinner = false, isDisabled = false, ...props }, ref) => (\n    <SpinnerButton ref={ref} {...props} isDisabled={isDisabled}>\n      <SpinnerLabel showSpinner={showSpinner}>{children}</SpinnerLabel>\n      {showSpinner && <Spinner size=\"md\" />}\n    </SpinnerButton>\n  )\n);\n\nButtonWithSpinner.displayName = 'ButtonWithSpinner';\n\nexport default ButtonWithSpinner;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { OnPerPageSelect, OnSetPage, Pagination } from '@patternfly/react-core';\n\nimport {\n  getCurrentPage,\n  getNewPage,\n  PaginationConfiguration\n} from '../../helpers/shared/pagination';\nimport { AnyObject } from '@data-driven-forms/react-form-renderer';\n\nexport interface AsyncPaginationProps<T = any> extends AnyObject {\n  meta: PaginationConfiguration;\n  apiRequest: (...args: any[]) => Promise<T>;\n  apiProps?: any;\n  className?: string;\n  isCompact?: boolean;\n}\nconst AsyncPagination: React.ComponentType<AsyncPaginationProps> = ({\n  meta: { limit = 50, count = 0, offset = 0 },\n  apiProps,\n  apiRequest,\n  className = '',\n  isCompact = false,\n  ...props\n}) => {\n  const handleOnPerPageSelect: OnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage: OnSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        dropDirection=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default AsyncPagination;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","EmptyState","platform","formatMessage","useFormatMessage","Icon","SearchIcon","FilterIcon","title","portfolioMessages","description","filteringMessages","propTypes","PropTypes","AddProductsGallery","props","editMode","renderEmptyState","checkedItems","defaultProps","FilterSelect","onChange","useState","undefined","stateValue","setValue","key","id","className","isDisabled","options","length","simpleValue","value","memo","prevProps","nextProps","isFetching","searchValue","portfolioName","itemsSelected","onOptionSelect","onFilterChange","portfolioRoute","onClickAddToPortfolio","meta","platformId","fetchPlatformItems","fields","component","toolbarComponentTypes","isMulti","isSearchable","placeholder","groupName","createLinkButton","pathname","variant","preserveSearch","ButtonWithSpinner","type","onClick","showSpinner","children","AsyncPagination","apiProps","apiRequest","isCompact","renderGalleryItems","items","checkItem","map","item","onToggleItemSelect","checked","includes","initialState","filterValue","isFiltering","addProductsState","state","action","payload","debouncedFilter","asyncFormValidator","filter","dispatch","filteringCallback","defaultSettings","isStandalone","fetchPlatformItemsS","then","AddProductsToPortfolio","selectedPlatform","setSelectedPlatform","setCheckedItems","useReducer","stateDispatch","push","useEnhancedHistory","useDispatch","useSelector","selectedPortfolio","portfolioReducer","platformReducer","platforms","platformItems","isLoading","isPlatformDataLoading","portfolio","useEffect","fetchPlatformsS","fetchPlatforms","results","data","count","label","Fragment","schema","createAddProductsSchema","offset","handleFilterItems","addToPortfolioS","platformItem","addToPortfolio","search","fetchPortfolioItemsWithPortfolioS","fetchPortfolioItemsWithPortfolio","itemId","index","indexOf","slice","dropDirection","SpinnerButton","Button","SpinnerLabel","forwardRef","ref","Spinner","size","displayName","limit","Pagination","perPage","itemCount","onPerPageSelect","_event","page","onSetPage","number","debounce","request"],"sourceRoot":""}