{"version":3,"sources":["webpack:///./src/presentational-components/shared/button-with-spinner.js","webpack:///./src/presentational-components/styled-components/level.js","webpack:///./src/forms/edit-workflow_form.schema.js","webpack:///./src/helpers/approval/approval-helper.js","webpack:///./src/smart-components/common/edit-approval-workflow.js","webpack:///./src/redux/actions/approval-actions.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/detail-toolbar-actions.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/icon-upload.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/portfolio-item-detail-toolbar.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/item-detail-info-bar.js","webpack:///./src/forms/edit-portfolio-item-form.schema.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/edit-portfolio-item.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/item-detail-description.js","webpack:///./src/smart-components/portfolio/portfolio-item-detail/portfolio-item-detail.js"],"names":["SpinnerButton","styled","Button","SpinnerLabel","span","showSpinner","ButtonWithSpinner","children","isDisabled","props","size","propTypes","PropTypes","bool","oneOfType","node","arrayOf","defaultProps","StyledLevelItem","alignStart","editWorkflowSchema","loadWorkflows","fields","component","componentTypes","SELECT","name","label","loadOptions","asyncFormValidator","multi","isSearchable","isClearable","loadWorkflowOptions","filterValue","initialLookup","initialLookupQuery","map","workflow","join","getAxiosInstance","get","APPROVAL_API_BASE","then","data","id","value","updateWorkflows","unlinkIds","linkIds","resourceObject","unlinkPromises","wf","getWorkflowApi","unlinkWorkflow","linkPromises","linkWorkflow","Promise","all","listWorkflowsForObject","pagination","limit","defaultSettings","offset","filter","objectQuery","appName","objectType","objectId","paginationQuery","filterQuery","initialState","isFetching","approvalState","state","action","type","payload","EditApprovalWorkflow","removeQuery","keepHash","querySelector","pushParam","objectName","useReducer","stateDispatch","useSelector","approvalReducer","resolvedWorkflows","meta","dispatch","useDispatch","history","useEnhancedHistory","useQuery","query","useEffect","ASYNC_ACTIONS","RESOLVE_WORKFLOWS","ApprovalHelper","APP_NAME","Modal","title","isOpen","onClose","push","variant","Stack","hasGutter","StackItem","TextContent","Text","initialValues","selectedWorkflows","undefined","onSubmit","formData","formApi","initialWorkflows","getState","newWorkflows","toUnlinkIds","toLinkIds","toUnlinkWorkflows","findIndex","w","toLinkWorkflows","length","object_type","app_name","object_id","UPDATE_WORKFLOWS","addNotification","dismissable","description","defaultMessage","values","count","onCancel","schema","editApprovalWorkflowSchema","formContainer","buttonsLabels","submitLabel","string","shape","pathname","isRequired","search","func","oneOf","DetailToolbarActions","copyUrl","orderUrl","editUrl","workflowUrl","editSurveyUrl","setOpen","availability","userCapabilities","update","copy","set_approval","dropdownItems","DropdownItem","aria-label","key","preserveSearch","role","LevelItem","style","marginLeft","Dropdown","isPlain","onToggle","onSelect","position","DropdownPosition","right","toggle","KebabToggle","UploadButton","button","UploadIconWrapper","div","ImagePreview","img","IconUpload","uploadIcon","inputRef","useRef","useState","image","setImage","isUploading","setIsUploading","accept","onChange","event","target","files","error","errors","detail","ref","hidden","disabled","onClick","current","click","Spinner","height","src","URL","createObjectURL","PortfolioItemIconItem","sourceId","CATALOG_API_BASE","PortfolioItemDetailToolbar","url","product","breadcrumbsSpacing","Level","className","service_offering_source_ref","TextVariants","h1","minHeight","exact","path","render","args","open","distributor","object","SurveyEditorDropdown","handleResetSurvey","setIsOpen","SurveyEditingToolbar","handleSaveSurvey","closeUrl","isValid","modified","breadcrumbs","Flex","to","ItemDetailInfoBar","source","portfolio","p","DateFormat","date","created_at","updated_at","editPortfolioItemSchema","TEXT_FIELD","validate","validatorTypes","REQUIRED","EditPortfolioItem","cancelUrl","owner","useHistory","useLocation","updatePortfolioItem","metadata","user_capabilities","ItemDetailDescription","long_description","h6","support_url","href","rel","documentation_url","requiredCapabilities","PORTFOLIO_ITEM_RESOURCE_TYPE","SurveyEditor","lazy","requiredParams","PortfolioItemDetail","setIsFetching","queryValues","useRouteMatch","PORTFOLIO_ITEM_ROUTE","portfolioReducer","portfolioItem","selectedPortfolio","getPortfolioItemDetail","Object","keys","Section","availability_status","unavailable","notFound","Alert","isInline","file","uploadPortfolioItemIcon","fallback","Grid","GridItem","md","lg"],"mappings":"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","file":"js/portfolio-item-detail~5a4d8549.f399edc2a704bc42ee65.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\n\nconst SpinnerButton = styled(Button)`\n  display: flex !important;\n  align-items: center;\n`;\n\nconst SpinnerLabel = styled.span`\n  margin-right: ${({ showSpinner }) => (showSpinner ? '8px' : '0')};\n`;\n\nconst ButtonWithSpinner = ({ children, showSpinner, isDisabled, ...props }) => (\n  <SpinnerButton {...props} isDisabled={isDisabled}>\n    <SpinnerLabel showSpinner={showSpinner}>{children}</SpinnerLabel>\n    {showSpinner && <Spinner size=\"md\" />}\n  </SpinnerButton>\n);\n\nButtonWithSpinner.propTypes = {\n  showSpinner: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  isDisabled: PropTypes.bool\n};\n\nButtonWithSpinner.defaultProps = {\n  showSpinner: false,\n  isDisabled: false\n};\n\nexport default ButtonWithSpinner;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { LevelItem } from '@patternfly/react-core';\n\nexport const StyledLevelItem = styled(({ alignStart, ...props }) => (\n  <LevelItem {...props} />\n))`\n  align-items: ${({ alignStart }) =>\n    alignStart ? 'flex-start !important' : 'inherit'};\n`;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport asyncFormValidator from '../utilities/async-form-validator';\n\nconst editWorkflowSchema = (loadWorkflows) => ({\n  fields: [\n    {\n      component: componentTypes.SELECT,\n      name: 'selectedWorkflows',\n      label: '',\n      loadOptions: asyncFormValidator(loadWorkflows),\n      multi: true,\n      isSearchable: true,\n      isClearable: true\n    }\n  ]\n});\n\nexport default editWorkflowSchema;\n","import { getWorkflowApi, getAxiosInstance } from '../shared/user-login';\nimport { APPROVAL_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nexport const getApprovalWorkflows = () => getWorkflowApi().listWorkflows();\n\nexport const loadWorkflowOptions = (filterValue = '', initialLookup = []) => {\n  const initialLookupQuery = initialLookup\n    .map((workflow) => `filter[id][]=${workflow}`)\n    .join('&');\n\n  return getAxiosInstance()\n    .get(\n      `${APPROVAL_API_BASE}/workflows?filter[name][contains]=${filterValue}&${initialLookupQuery ||\n        ''}`\n    )\n    .then(({ data }) =>\n      data.map(({ id, name }) => ({ label: name, value: id }))\n    );\n};\n\nexport const updateWorkflows = (unlinkIds, linkIds, resourceObject) => {\n  const unlinkPromises = unlinkIds\n    ? unlinkIds.map((wf) => getWorkflowApi().unlinkWorkflow(wf, resourceObject))\n    : [];\n  const linkPromises = linkIds\n    ? linkIds.map((wf) => getWorkflowApi().linkWorkflow(wf, resourceObject))\n    : [];\n  return Promise.all([...unlinkPromises, ...linkPromises]);\n};\n\nexport const listWorkflowsForObject = (\n  resourceObject,\n  pagination = { limit: defaultSettings.limit, offset: defaultSettings.offset },\n  filter = ''\n) => {\n  const objectQuery = `app_name=${resourceObject.appName}&object_type=${resourceObject.objectType}&object_id=${resourceObject.objectId}`;\n  const paginationQuery = `&limit=${pagination.limit}&offset=${pagination.offset}`;\n  const filterQuery = `&filter[name][contains]=${filter}`;\n  return getAxiosInstance().get(\n    `${APPROVAL_API_BASE}/workflows?${objectQuery}${filterQuery}${paginationQuery}`\n  );\n};\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Modal,\n  TextContent,\n  Text,\n  Stack,\n  StackItem\n} from '@patternfly/react-core';\nimport FormRenderer from '../common/form-renderer';\nimport editApprovalWorkflowSchema from '../../forms/edit-workflow_form.schema';\nimport {\n  listWorkflowsForObject,\n  updateWorkflows\n} from '../../redux/actions/approval-actions';\nimport { APP_NAME } from '../../utilities/constants';\nimport { loadWorkflowOptions } from '../../helpers/approval/approval-helper';\nimport { WorkflowLoader } from '../../presentational-components/shared/loader-placeholders';\nimport useQuery from '../../utilities/use-query';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nconst initialState = {\n  isFetching: true\n};\n\nconst approvalState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst EditApprovalWorkflow = ({\n  objectType,\n  removeQuery,\n  keepHash,\n  querySelector,\n  pushParam,\n  objectName = () => objectType\n}) => {\n  const [{ isFetching }, stateDispatch] = useReducer(\n    approvalState,\n    initialState\n  );\n  const { data, meta } = useSelector(\n    ({ approvalReducer: { resolvedWorkflows } }) => resolvedWorkflows\n  );\n  const dispatch = useDispatch();\n  const history = useEnhancedHistory({ removeQuery, keepHash });\n  const [query] = useQuery([querySelector]);\n\n  useEffect(() => {\n    dispatch(\n      listWorkflowsForObject(\n        {\n          objectType,\n          appName: APP_NAME[objectType],\n          objectId: query[querySelector]\n        },\n        meta\n      )\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const onSubmit = (formData, formApi) => {\n    const initialWorkflows =\n      formApi.getState().initialValues.selectedWorkflows || [];\n    const newWorkflows = formData.selectedWorkflows || [];\n\n    history.push(pushParam);\n    const toUnlinkWorkflows = initialWorkflows.filter(\n      (wf) => newWorkflows.findIndex((w) => w === wf) < 0\n    );\n    const toLinkWorkflows = newWorkflows.filter(\n      (wf) => initialWorkflows.findIndex((w) => w === wf) < 0\n    );\n\n    if (toUnlinkWorkflows.length > 0 || toLinkWorkflows.length > 0) {\n      dispatch(\n        updateWorkflows(toUnlinkWorkflows, toLinkWorkflows, {\n          object_type: objectType,\n          app_name: APP_NAME[objectType],\n          object_id: query[querySelector]\n        })\n      );\n    }\n  };\n\n  return (\n    <Modal\n      title=\"Set approval process\"\n      isOpen\n      onClose={() => history.push(pushParam)}\n      variant=\"small\"\n    >\n      {isFetching && <WorkflowLoader />}\n      {!isFetching && (\n        <Stack hasGutter>\n          <StackItem>\n            <TextContent>\n              <Text>\n                Select approval processes for{' '}\n                <strong>{objectName(query[querySelector])}</strong>\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormRenderer\n              initialValues={{\n                selectedWorkflows: data ? data.map((wf) => wf.id) : undefined\n              }}\n              onSubmit={onSubmit}\n              onCancel={() => history.push(pushParam)}\n              schema={editApprovalWorkflowSchema(loadWorkflowOptions)}\n              formContainer=\"modal\"\n              buttonsLabels={{ submitLabel: 'Save' }}\n            />\n          </StackItem>\n        </Stack>\n      )}\n    </Modal>\n  );\n};\n\nEditApprovalWorkflow.propTypes = {\n  pushParam: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string\n    })\n  ]).isRequired,\n  objectType: PropTypes.string.isRequired,\n  objectName: PropTypes.func,\n  removeQuery: PropTypes.bool,\n  querySelector: PropTypes.oneOf([\n    'portfolio',\n    'platform',\n    'inventory',\n    'portfolio-item'\n  ]).isRequired,\n  keepHash: PropTypes.bool\n};\n\nEditApprovalWorkflow.defaultProps = {\n  keepHash: false\n};\n\nexport default EditApprovalWorkflow;\n","import React, { Fragment } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ASYNC_ACTIONS } from '../action-types/approval-action-types';\nimport * as ApprovalHelper from '../../helpers/approval/approval-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\n\nexport const fetchWorkflows = () => ({\n  type: ASYNC_ACTIONS.FETCH_WORKFLOWS,\n  payload: ApprovalHelper.getApprovalWorkflows().then(({ data }) => [\n    ...data.map(({ id, name }) => ({ value: id, label: name }))\n  ])\n});\n\nexport const updateWorkflows = (toUnlinkIds, toLinkIds, resourceObject) => (\n  dispatch\n) =>\n  dispatch({\n    type: ASYNC_ACTIONS.UPDATE_WORKFLOWS,\n    payload: ApprovalHelper.updateWorkflows(\n      toUnlinkIds,\n      toLinkIds,\n      resourceObject\n    ).then(() =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Success updating approval process',\n          dismissable: true,\n          description: (\n            <Fragment>\n              {toUnlinkIds.length > 0 ? (\n                <FormattedMessage\n                  id=\"workflows.update_workflows\"\n                  defaultMessage={`{count, number} {count, plural, one {approval process was}\n                    other {approval processes were}} unlinked successfully. `}\n                  values={{ count: toUnlinkIds.length }}\n                />\n              ) : (\n                ''\n              )}\n              {toLinkIds.length > 0 ? (\n                <FormattedMessage\n                  id=\"workflows.update_workflows\"\n                  defaultMessage={`{count, number} {count, plural, one {approval process was}\n                    other {approval processes were}} linked successfully.`}\n                  values={{ count: toLinkIds.length }}\n                />\n              ) : (\n                ''\n              )}\n            </Fragment>\n          )\n        })\n      )\n    )\n  });\n\nexport const listWorkflowsForObject = (\n  resourceObject,\n  meta = { limit: defaultSettings.limit, offset: defaultSettings.offset },\n  filter = ''\n) => ({\n  type: ASYNC_ACTIONS.RESOLVE_WORKFLOWS,\n  payload: ApprovalHelper.listWorkflowsForObject(resourceObject, meta, filter)\n});\n","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  LevelItem\n} from '@patternfly/react-core';\nimport ButtonWithSpinner from '../../../presentational-components/shared/button-with-spinner';\nimport CatalogLink from '../../common/catalog-link';\n\nconst DetailToolbarActions = ({\n  copyUrl,\n  orderUrl,\n  editUrl,\n  workflowUrl,\n  editSurveyUrl,\n  isOpen,\n  setOpen,\n  isFetching,\n  availability,\n  userCapabilities: { update, copy, set_approval }\n}) => {\n  const dropdownItems = [];\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Edit Portfolio\"\n        key=\"edit-portfolio-item\"\n        id=\"edit-portfolio-item\"\n        component={\n          <CatalogLink pathname={editUrl} preserveSearch>\n            Edit\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (copy) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Copy Portfolio\"\n        key=\"copy-portfolio-item\"\n        id=\"copy-portfolio-item\"\n        component={\n          <CatalogLink pathname={copyUrl} preserveSearch>\n            Copy\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (set_approval) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Set approval\"\n        key=\"set-approval_workflow\"\n        id=\"set-approval_workflow\"\n        component={\n          <CatalogLink pathname={workflowUrl} preserveSearch>\n            Set approval\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Edit survey\"\n        key=\"edit-survey\"\n        id=\"edit-survey\"\n        component={\n          <CatalogLink pathname={editSurveyUrl} preserveSearch>\n            Edit survey\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  return (\n    <Fragment>\n      <LevelItem>\n        <CatalogLink\n          isDisabled={isFetching || availability === 'unavailable'}\n          pathname={orderUrl}\n          preserveSearch\n        >\n          <ButtonWithSpinner\n            isDisabled={isFetching || availability === 'unavailable'}\n            showSpinner={isFetching}\n            variant=\"primary\"\n            id=\"order-portfolio-item\"\n          >\n            Order\n          </ButtonWithSpinner>\n        </CatalogLink>\n      </LevelItem>\n      <LevelItem style={{ marginLeft: 16 }}>\n        {dropdownItems.length > 0 && (\n          <Dropdown\n            isPlain\n            onToggle={setOpen}\n            onSelect={() => setOpen(false)}\n            position={DropdownPosition.right}\n            toggle={\n              <KebabToggle\n                id=\"portfolio-item-actions-toggle\"\n                onToggle={(isOpen) => setOpen(isOpen)}\n              />\n            }\n            isOpen={isOpen}\n            dropdownItems={dropdownItems}\n          />\n        )}\n      </LevelItem>\n    </Fragment>\n  );\n};\n\nDetailToolbarActions.propTypes = {\n  orderUrl: PropTypes.string.isRequired,\n  editUrl: PropTypes.string.isRequired,\n  copyUrl: PropTypes.string.isRequired,\n  editSurveyUrl: PropTypes.string.isRequired,\n  workflowUrl: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool,\n  setOpen: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool,\n  availability: PropTypes.oneOf(['available', 'unavailable']).isRequired,\n  userCapabilities: PropTypes.shape({\n    update: PropTypes.bool,\n    copy: PropTypes.bool,\n    set_approval: PropTypes.bool\n  }).isRequired\n};\n\nDetailToolbarActions.defaultProps = {\n  isFetching: false\n};\n\nexport default DetailToolbarActions;\n","import React, { useState, useRef } from 'react';\nimport { EditIcon } from '@patternfly/react-icons';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport styled from 'styled-components';\n\nconst UploadButton = styled.button`\n  border: none;\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding-left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  svg {\n    background-color: rgba(255, 255, 255, 0.8);\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n`;\n\nconst UploadIconWrapper = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst ImagePreview = styled.img`\n  height: 64px;\n  max-width: 300px;\n  object-fit: cover;\n`;\n\nconst IconUpload = ({ uploadIcon, children }) => {\n  const inputRef = useRef();\n  const [image, setImage] = useState();\n  const [isUploading, setIsUploading] = useState(false);\n  const handleClick = () => inputRef.current.click();\n  const dispatch = useDispatch();\n\n  return (\n    <UploadIconWrapper>\n      <input\n        accept=\".png,.svg,.jpeg\"\n        onChange={(event) => {\n          setImage(event.target.files[0]);\n          setIsUploading(true);\n          uploadIcon(event.target.files[0])\n            .then(() => setIsUploading(false))\n            .catch((error) => {\n              dispatch(\n                addNotification({\n                  variant: 'danger',\n                  title: 'Icon upload error',\n                  description: error.data.errors[0].detail,\n                  dismissable: true\n                })\n              );\n              setImage(undefined);\n              setIsUploading(false);\n            });\n        }}\n        ref={inputRef}\n        type=\"file\"\n        id=\"icon-upload\"\n        hidden\n      />\n      <UploadButton disabled={isUploading} onClick={handleClick}>\n        {isUploading ? <Spinner size=\"md\" /> : <EditIcon size=\"sm\" />}\n      </UploadButton>\n      {!image && children}\n      {image && (\n        <ImagePreview\n          style={{ height: 64 }}\n          src={URL.createObjectURL(image)}\n          id={image.name}\n        />\n      )}\n    </UploadIconWrapper>\n  );\n};\n\nIconUpload.propTypes = {\n  uploadIcon: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default IconUpload;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Link } from 'react-router-dom';\nimport {\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Button,\n  Flex,\n  Dropdown,\n  KebabToggle,\n  DropdownItem\n} from '@patternfly/react-core';\n\nimport DetailToolbarActions from './detail-toolbar-actions';\nimport { CATALOG_API_BASE } from '../../../utilities/constants';\nimport CardIcon from '../../../presentational-components/shared/card-icon';\nimport TopToolbar from '../../../presentational-components/shared/top-toolbar';\nimport IconUpload from './icon-upload';\nimport ButtonWithSpinner from '../../../presentational-components/shared/button-with-spinner';\nimport { StyledLevelItem } from '../../../presentational-components/styled-components/level';\n\nconst PortfolioItemIconItem = ({ uploadIcon, id, sourceId }) => (\n  <IconUpload uploadIcon={uploadIcon}>\n    <CardIcon\n      src={`${CATALOG_API_BASE}/portfolio_items/${id}/icon`}\n      sourceId={sourceId}\n      height={64}\n    />\n  </IconUpload>\n);\n\nPortfolioItemIconItem.propTypes = {\n  uploadIcon: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  sourceId: PropTypes.string.isRequired\n};\n\nexport const PortfolioItemDetailToolbar = ({\n  url,\n  isOpen,\n  product,\n  setOpen,\n  isFetching,\n  uploadIcon,\n  availability,\n  userCapabilities\n}) => (\n  <TopToolbar breadcrumbsSpacing={false}>\n    <Level className=\"flex-no-wrap\">\n      <StyledLevelItem alignStart className=\"pf-l-flex\">\n        {userCapabilities.update ? (\n          <PortfolioItemIconItem\n            uploadIcon={uploadIcon}\n            id={product.id}\n            sourceId={product.service_offering_source_ref}\n          />\n        ) : (\n          <CardIcon\n            src={`${CATALOG_API_BASE}/portfolio_items/${product.id}/icon`}\n            sourceId={product.service_offering_source_ref}\n            height={64}\n          />\n        )}\n        <TextContent className=\"pf-u-ml-md\">\n          <Text component={TextVariants.h1}>{product.name}</Text>\n        </TextContent>\n      </StyledLevelItem>\n      <LevelItem style={{ minHeight: 36 }} className=\"flex-item-no-wrap\">\n        <Level className=\"flex-no-wrap\">\n          <Route\n            exact\n            path={url}\n            render={(...args) => (\n              <DetailToolbarActions\n                isOpen={isOpen}\n                setOpen={(open) => setOpen(open)}\n                orderUrl={`${url}/order`}\n                editUrl={`${url}/edit`}\n                copyUrl={`${url}/copy`}\n                editSurveyUrl={`${url}/edit-survey`}\n                workflowUrl={`${url}/edit-workflow`}\n                isFetching={isFetching}\n                availability={availability}\n                userCapabilities={userCapabilities}\n                {...args}\n              />\n            )}\n          />\n        </Level>\n      </LevelItem>\n    </Level>\n  </TopToolbar>\n);\n\nPortfolioItemDetailToolbar.propTypes = {\n  url: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool,\n  product: PropTypes.shape({\n    distributor: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    service_offering_source_ref: PropTypes.string.isRequired\n  }).isRequired,\n  setOpen: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool,\n  uploadIcon: PropTypes.func.isRequired,\n  availability: PropTypes.oneOf(['available', 'unavailable']).isRequired,\n  userCapabilities: PropTypes.object\n};\n\nPortfolioItemDetailToolbar.defaultProps = {\n  isFetching: false\n};\n\nconst SurveyEditorDropdown = ({ handleResetSurvey }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  return (\n    <Dropdown\n      isOpen={isOpen}\n      isPlain\n      onSelect={() => setIsOpen(false)}\n      position=\"right\"\n      toggle={<KebabToggle onToggle={(isOpen) => setIsOpen(isOpen)} />}\n      dropdownItems={[\n        <DropdownItem\n          onClick={handleResetSurvey}\n          component=\"button\"\n          key=\"synchronize\"\n        >\n          Restore to Ansible Tower version\n        </DropdownItem>\n      ]}\n    />\n  );\n};\n\nSurveyEditorDropdown.propTypes = {\n  handleResetSurvey: PropTypes.func.isRequired\n};\n\nexport const SurveyEditingToolbar = ({\n  uploadIcon,\n  product,\n  handleSaveSurvey,\n  closeUrl,\n  search,\n  isFetching,\n  isValid,\n  modified,\n  handleResetSurvey\n}) => (\n  <TopToolbar breadcrumbsSpacing={false} breadcrumbs={true}>\n    <Level>\n      <StyledLevelItem alignStart className=\"pf-l-flex\">\n        <PortfolioItemIconItem\n          uploadIcon={uploadIcon}\n          id={product.id}\n          sourceId={product.service_offering_source_ref}\n        />\n        <TextContent className=\"pf-u-ml-md\">\n          <Text component={TextVariants.h1}>\n            Editing survey: {product.name}\n          </Text>\n        </TextContent>\n      </StyledLevelItem>\n      <LevelItem>\n        <Flex className=\"align-items-center\">\n          <ButtonWithSpinner\n            variant=\"primary\"\n            showSpinner={isFetching}\n            isDisabled={isFetching || !isValid}\n            onClick={handleSaveSurvey}\n          >\n            Save\n          </ButtonWithSpinner>\n          <Link\n            to={{\n              pathname: closeUrl,\n              search\n            }}\n          >\n            <Button variant=\"link\">Cancel</Button>\n          </Link>\n          {modified && (\n            <SurveyEditorDropdown handleResetSurvey={handleResetSurvey} />\n          )}\n        </Flex>\n      </LevelItem>\n    </Level>\n  </TopToolbar>\n);\n\nSurveyEditingToolbar.propTypes = {\n  uploadIcon: PropTypes.func.isRequired,\n  product: PropTypes.object,\n  handleSaveSurvey: PropTypes.func.isRequired,\n  closeUrl: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired,\n  isFetching: PropTypes.bool,\n  isValid: PropTypes.bool,\n  modified: PropTypes.bool,\n  handleResetSurvey: PropTypes.func\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\n\nconst ItemDetailInfoBar = ({ product, source, portfolio }) => (\n  <TextContent className=\"pf-u-mb-md\">\n    <Text className=\"font-14\">Platform</Text>\n    <Text id=\"source-name\" className=\"overflow-wrap\" component={TextVariants.p}>\n      {source.name}\n    </Text>\n    <Text className=\"font-14\">Portfolio</Text>\n    <Text\n      id=\"portfolio-name\"\n      className=\"overflow-wrap\"\n      component={TextVariants.p}\n    >\n      {portfolio.name}\n    </Text>\n    {product.distributor && (\n      <span id=\"distributor\">\n        <Text className=\"font-14\">Vendor</Text>\n        <Text className=\"overflow-wrap\" component={TextVariants.p}>\n          {product.distributor}\n        </Text>\n      </span>\n    )}\n    <Text className=\"font-14\">Created</Text>\n    <Text id=\"created_at\" component={TextVariants.p}>\n      <DateFormat variant=\"relative\" date={product.created_at} />\n    </Text>\n  </TextContent>\n);\n\nItemDetailInfoBar.propTypes = {\n  product: PropTypes.shape({\n    distributor: PropTypes.string,\n    updated_at: PropTypes.string,\n    created_at: PropTypes.string.isRequired\n  }).isRequired,\n  source: PropTypes.shape({\n    name: PropTypes.string\n  }).isRequired,\n  portfolio: PropTypes.shape({\n    name: PropTypes.string\n  }).isRequired\n};\n\nexport default ItemDetailInfoBar;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\n\nconst editPortfolioItemSchema = {\n  fields: [\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Name',\n      isRequired: true,\n      validate: [{ type: validatorTypes.REQUIRED }]\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'description',\n      label: 'Description'\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'long_description',\n      label: 'Long description'\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'distributor',\n      label: 'Vendor'\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'documentation_url',\n      label: 'Documentation URL',\n      validate: [\n        {\n          type: validatorTypes.URL\n        }\n      ]\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'support_url',\n      label: 'Support URL',\n      validate: [\n        {\n          type: validatorTypes.URL\n        }\n      ]\n    }\n  ]\n};\n\nexport default editPortfolioItemSchema;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport FormRenderer from '../../common/form-renderer';\nimport editPortfolioItemSchema from '../../../forms/edit-portfolio-item-form.schema';\nimport { updatePortfolioItem } from '../../../redux/actions/portfolio-actions';\n\nconst EditPortfolioItem = ({\n  cancelUrl,\n  product: { owner, created_at, updated_at, ...product },\n  userCapabilities\n}) => {\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n  const { search } = useLocation();\n  return (\n    <FormRenderer\n      initialValues={{ ...product }}\n      onSubmit={(values) => {\n        push({\n          pathname: cancelUrl,\n          search\n        });\n        return dispatch(\n          updatePortfolioItem({\n            ...values,\n            metadata: { user_capabilities: userCapabilities }\n          })\n        );\n      }}\n      schema={editPortfolioItemSchema}\n      onCancel={() =>\n        push({\n          pathname: cancelUrl,\n          search\n        })\n      }\n    />\n  );\n};\n\nEditPortfolioItem.propTypes = {\n  cancelUrl: PropTypes.string.isRequired,\n  product: PropTypes.object.isRequired,\n  userCapabilities: PropTypes.object.isRequired\n};\n\nexport default EditPortfolioItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\n\nimport EditPortfolioItem from './edit-portfolio-item';\nimport EditApprovalWorkflow from '../../../smart-components/common/edit-approval-workflow';\nimport { PORTFOLIO_ITEM_RESOURCE_TYPE } from '../../../utilities/constants';\nimport CatalogRoute from '../../../routing/catalog-route';\n\nconst ItemDetailDescription = ({ userCapabilities, product, url, search }) => (\n  <Switch>\n    <Route\n      exact\n      path={url}\n      render={() => (\n        <TextContent>\n          {(product.description || product.long_description) && (\n            <Text component={TextVariants.h6}>Overview</Text>\n          )}\n          {product.description && (\n            <Text id=\"description\" component={TextVariants.p}>\n              {product.description}\n            </Text>\n          )}\n          {product.long_description && (\n            <Text id=\"long_description\" component={TextVariants.p}>\n              {product.long_description}\n            </Text>\n          )}\n          {product.support_url && (\n            <Text id=\"support_url\" component={TextVariants.p}>\n              <a\n                href={product.support_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn more\n              </a>\n            </Text>\n          )}\n          {product.documentation_url && (\n            <Fragment>\n              <Text component={TextVariants.h6}>Documentation</Text>\n              <Text id=\"documentation_url\" component={TextVariants.p}>\n                <a\n                  href={product.documentation_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Doc link\n                </a>\n              </Text>\n            </Fragment>\n          )}\n        </TextContent>\n      )}\n    />\n    <CatalogRoute\n      exact\n      path={`${url}/edit`}\n      requiredCapabilities=\"update\"\n      userCapabilities={userCapabilities}\n    >\n      <EditPortfolioItem\n        cancelUrl={url}\n        product={product}\n        userCapabilities={userCapabilities}\n      />\n    </CatalogRoute>\n    <Route exact path={`${url}/edit-workflow`}>\n      <EditApprovalWorkflow\n        pushParam={{ pathname: url, search }}\n        objectType={PORTFOLIO_ITEM_RESOURCE_TYPE}\n        objectId={product.id}\n        objectName={() => product.name}\n        querySelector=\"portfolio-item\"\n      />\n    </Route>\n  </Switch>\n);\n\nItemDetailDescription.propTypes = {\n  product: PropTypes.shape({\n    name: PropTypes.string,\n    long_description: PropTypes.string,\n    support_url: PropTypes.string,\n    documentation_url: PropTypes.string,\n    description: PropTypes.string,\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  url: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired,\n  userCapabilities: PropTypes.object.isRequired\n};\n\nexport default ItemDetailDescription;\n","import React, { useEffect, useState, Fragment, lazy, Suspense } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { Grid, GridItem, Alert } from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\n\nimport ItemDetailInfoBar from './item-detail-info-bar';\nimport ItemDetailDescription from './item-detail-description';\nimport { PortfolioItemDetailToolbar } from './portfolio-item-detail-toolbar';\nimport TopToolbar from '../../../presentational-components/shared/top-toolbar';\nimport { getPortfolioItemDetail } from '../../../redux/actions/portfolio-actions';\nimport {\n  ProductLoaderPlaceholder,\n  AppPlaceholder\n} from '../../../presentational-components/shared/loader-placeholders';\nimport { uploadPortfolioItemIcon } from '../../../helpers/portfolio/portfolio-helper';\nimport useQuery from '../../../utilities/use-query';\nimport { PORTFOLIO_ITEM_ROUTE } from '../../../constants/routes';\nimport CatalogRoute from '../../../routing/catalog-route';\n\nconst SurveyEditor = lazy(() =>\n  import(\n    /* webpackChunkName: \"survey-editor\" */ '../../survey-editing/survey-editor'\n  )\n);\n\nconst requiredParams = ['portfolio', 'source', 'portfolio-item'];\n\nconst PortfolioItemDetail = () => {\n  const [isOpen, setOpen] = useState(false);\n  const [isFetching, setIsFetching] = useState(true);\n  const dispatch = useDispatch();\n  const [queryValues, search] = useQuery(requiredParams);\n  const { url } = useRouteMatch(PORTFOLIO_ITEM_ROUTE);\n  const {\n    portfolioItem: {\n      metadata: { user_capabilities: userCapabilities },\n      ...portfolioItem\n    },\n    source\n  } = useSelector(({ portfolioReducer: { portfolioItem } }) => portfolioItem);\n  const portfolio = useSelector(\n    ({ portfolioReducer: { selectedPortfolio } }) => selectedPortfolio\n  );\n\n  useEffect(() => {\n    setIsFetching(true);\n    dispatch(\n      getPortfolioItemDetail({\n        portfolioItem: queryValues['portfolio-item'],\n        ...queryValues\n      })\n    )\n      .then(() => setIsFetching(false))\n      .catch(() => setIsFetching(false));\n  }, [queryValues['portfolio-item']]);\n\n  if (isFetching || Object.keys(portfolioItem).length === 0) {\n    return (\n      <Section className=\"global-primary-background full-height\">\n        <TopToolbar>\n          <ProductLoaderPlaceholder />\n        </TopToolbar>\n      </Section>\n    );\n  }\n\n  const availability = source.availability_status || 'unavailable';\n  const unavailable = [source]\n    .filter(({ notFound }) => notFound)\n    .map(({ object }) => (\n      <Alert\n        className=\"pf-u-mb-sm\"\n        key={object}\n        variant=\"warning\"\n        isInline\n        title={`The ${object} for this product is no longer available`}\n      />\n    ));\n  const uploadIcon = (file) => uploadPortfolioItemIcon(portfolioItem.id, file);\n  return (\n    <Fragment>\n      <Switch>\n        <CatalogRoute\n          requiredCapabilities=\"update\"\n          userCapabilities={userCapabilities}\n          path={`${url}/edit-survey`}\n        >\n          <Suspense fallback={<AppPlaceholder />}>\n            <SurveyEditor\n              closeUrl={url}\n              search={search}\n              uploadIcon={uploadIcon}\n              portfolioItem={portfolioItem}\n              portfolio={portfolio}\n            />\n          </Suspense>\n        </CatalogRoute>\n        <Route>\n          <Section className=\"full-height global-primary-background\">\n            <PortfolioItemDetailToolbar\n              uploadIcon={uploadIcon}\n              url={url}\n              isOpen={isOpen}\n              product={portfolioItem}\n              setOpen={setOpen}\n              isFetching={isFetching}\n              availability={availability}\n              userCapabilities={userCapabilities}\n            />\n            {unavailable.length > 0 && (\n              <div className=\"pf-u-mr-lg pf-u-ml-lg\">{unavailable}</div>\n            )}\n            {source.availability_status === 'unavailable' && (\n              <Alert\n                className=\"pf-u-ml-lg pf-u-mr-lg\"\n                id=\"unavailable-alert-info\"\n                variant=\"info\"\n                isInline\n                title=\"The platform for this product is unavailable\"\n              />\n            )}\n            <Grid hasGutter className=\"pf-u-p-lg\">\n              <GridItem md={3} lg={2}>\n                <ItemDetailInfoBar\n                  product={portfolioItem}\n                  portfolio={portfolio}\n                  source={source}\n                />\n              </GridItem>\n              <GridItem md={9} lg={10}>\n                <ItemDetailDescription\n                  product={portfolioItem}\n                  userCapabilities={userCapabilities}\n                  url={url}\n                  search={search}\n                />\n              </GridItem>\n            </Grid>\n          </Section>\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n};\n\nexport default PortfolioItemDetail;\n"],"sourceRoot":""}