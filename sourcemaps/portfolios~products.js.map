{"version":3,"sources":["webpack:///./src/utilities/async-form-validator.js","webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/toolbar/toolbar-mapper.js","webpack:///./src/utilities/use-enhanced-history.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/redux/actions/portfolio-actions.js","webpack:///./src/presentational-components/shared/conditional-link.js","webpack:///./src/presentational-components/styled-components/toolbars.js","webpack:///./src/smart-components/common/catalog-breadcrumbs.js","webpack:///./src/toolbar/toolbar-renderer.js","webpack:///./src/helpers/portfolio/portfolio-helper.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/presentational-components/shared/app-tabs.js","webpack:///./src/presentational-components/styled-components/ellipsis-text-container.js","webpack:///./src/presentational-components/shared/content-gallery-empty-state.js","webpack:///./src/presentational-components/styled-components/styled-gallery.js","webpack:///./src/smart-components/content-gallery/content-gallery.js","webpack:///./src/presentational-components/shared/card-common.js","webpack:///./src/presentational-components/styled-components/card.js","webpack:///./src/toolbar/helpers.js"],"names":["asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","FilterInputGroup","styled","div","FilterInput","TextInput","FilterIconsContainer","span","StyledCloseIcon","CloseIcon","StyledSearchIcon","SearchIcon","FilterToolbarItem","searchValue","onFilterChange","placeholder","isClearable","ToolbarItem","value","type","onChange","aria-label","width","height","onClick","propTypes","PropTypes","func","isRequired","string","bool","defaultProps","ToolbarButton","title","props","Button","toolbarMapper","TopToolbar","TopToolbarTitle","Toolbar","className","ToolbarGroup","Link","CatalogLink","Level","LevelItem","AppTabs","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","TOOLBAR","TOOLBAR_ITEM","TOOLBAR_GROUP","FILTER_TOOLBAR_ITEM","LINK","BUTTON","LEVEL","LEVEL_ITEM","TABS","useEnhancedHistory","removeSearch","history","useHistory","push","target","split","search","undefined","removeSearchQuery","AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","isCompact","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","getNewPage","request","debouncePromise","direction","shape","any","doFetchPortfolios","defaultSettings","filter","ActionTypes","payload","PortfolioHelper","fetchPortfolios","args","dispatch","fetchPortfolioItems","fetchPortfolioItemsWithPortfolio","portfolioId","fetchSelectedPortfolio","id","addPortfolio","portfolioData","items","isDisabled","isTemporary","then","error","notifications","fulfilled","variant","description","name","addToPortfolio","updatePortfolio","getState","ADD_NOTIFICATION","dismissable","removePortfolio","removeProductsFromPortfolio","portfolioItems","portfolioName","portfolioReducer","selectedPortfolio","data","defaultMessage","values","length","undo","href","event","preventDefault","restoreData","CLEAR_NOTIFICATIONS","err","undoRemoveProductsFromPortfolio","copyPortfolio","portfolio","copyPortfolioItem","portfolioItemId","copyObject","newPortfolio","resetSelectedPortfolio","updatePortfolioItem","item","getPortfolioItemDetail","params","portfolioItem","source","ConditionalLink","children","pathname","oneOfType","node","arrayOf","StyledToolbar","TopToolbarWrapper","TopToolbarTitleContainer","CatalogBreadcrumbs","fragments","useSelector","breadcrumbsReducer","map","index","searchParams","nav","exact","key","isActive","ToolbarContext","createContext","Component","component","Consumer","componentMapper","C","element","render","fields","hidden","field","ToolbarRenderer","schema","Provider","array","object","axiosInstance","getAxiosInstance","portfolioApi","getPortfolioApi","portfolioItemApi","getPortfolioItemApi","listPortfolios","get","CATALOG_API_BASE","listPortfolioItems","portfolioReference","reduce","acc","curr","portfolio_id","Object","keys","join","portfolios","forEach","portfolioItemIndex","getPortfolioItem","getPortfolio","showPortfolio","getPortfolioItemsWithPortfolio","a","async","createPortfolio","Promise","all","createPortfolioItem","service_offering_ref","store","sanitizeValues","destroyPortfolio","removePortfolioItem","destroyPortfolioItem","removePortfolioItems","portfolioItemIds","itemId","restore_key","restoreKey","fetchPortfolioByName","restorePortfolioItems","unDeletePortfolioItem","postCopyPortfolio","postCopyPortfolioItem","uploadPortfolioItemIcon","file","iconId","FormData","append","patch","post","headers","accept","_boundary","SOURCES_API_BASE","status","notFound","getPortfolioFromState","find","paddingBottom","breadcrumbs","rest","breadcrumbsSpacing","noData","clsx","TextVariants","h2","p","tabItems","useLocation","activeTab","includes","activeKey","eventKey","onSelect","tabIndex","EllipsisTextContainer","ContentGalleryEmptyState","Icon","PrimaryAction","renderDescription","icon","h1","EmptyStatePrimaryAction","url","label","hasPermission","preserveSearch","StyledCard","Card","StyledGalleryItem","GalleryItem","NoItems","ContentGallery","isLoading","renderEmptyState","gutter","CardPropText","ItemDetails","toDisplay","prop","StyledCardBody","CardBody","createSingleItemGroup","groupName","createLinkButton"],"mappings":"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","file":"js/portfolios~products.js","sourcesContent":["import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterInputGroup = styled.div`\n  position: relative;\n  width: 300px;\n  height: 36px;\n`;\n\nconst FilterInput = styled(TextInput)`\n  position: absolute;\n  width: 300px;\n  background: transparent;\n`;\n\nconst FilterIconsContainer = styled.span`\n  position: absolute;\n  right: 8px;\n  top: 8px;\n`;\n\nconst StyledCloseIcon = styled(CloseIcon)`\n  z-index: 1000;\n  fill: #72767b;\n  :hover {\n    fill: var(--pf-global--Color--100);\n    cursor: pointer;\n  }\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  z-index: 1000;\n  fill: #72767b;\n`;\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable\n}) => (\n  <ToolbarItem>\n    <FilterInputGroup>\n      <FilterInput\n        placeholder={placeholder}\n        value={searchValue}\n        type=\"text\"\n        onChange={onFilterChange}\n        aria-label={placeholder}\n      />\n      <FilterIconsContainer>\n        {(isClearable && searchValue && (\n          <StyledCloseIcon\n            width=\"16\"\n            height=\"16\"\n            onClick={() => onFilterChange('')}\n          />\n        )) || <StyledSearchIcon />}\n      </FilterIconsContainer>\n    </FilterInputGroup>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Level,\n  LevelItem,\n  ToolbarItem,\n  ToolbarGroup\n} from '@patternfly/react-core';\n\nimport FilterToolbarItem from '../presentational-components/shared/filter-toolbar-item';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../presentational-components/shared/top-toolbar';\nimport AppTabs from '../presentational-components/shared/app-tabs';\nimport CatalogLink from '../smart-components/common/catalog-link';\nimport { StyledToolbar } from '../presentational-components/styled-components/toolbars';\n\nconst ToolbarButton = ({ title, ...props }) => (\n  <Button {...props}>{title}</Button>\n);\n\nToolbarButton.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst AppToolbar = ({ ...props }) => (\n  <StyledToolbar className=\"pf-u-pr-lg\" {...props} />\n);\n\nconst toolbarMapper = {\n  TopToolbar,\n  TopToolbarTitle,\n  Toolbar: AppToolbar,\n  ToolbarGroup,\n  ToolbarItem,\n  FilterToolbarItem,\n  Link: CatalogLink,\n  Level,\n  LevelItem,\n  Button: ToolbarButton,\n  AppTabs\n};\n\nexport const toolbarComponentTypes = {\n  TOP_TOOLBAR: 'TopToolbar',\n  TOP_TOOLBAR_TITLE: 'TopToolbarTitle',\n  TOOLBAR: 'Toolbar',\n  TOOLBAR_ITEM: 'ToolbarItem',\n  TOOLBAR_GROUP: 'ToolbarGroup',\n  FILTER_TOOLBAR_ITEM: 'FilterToolbarItem',\n  LINK: 'Link',\n  BUTTON: 'Button',\n  LEVEL: 'Level',\n  LEVEL_ITEM: 'LevelItem',\n  TABS: 'AppTabs'\n};\n\nexport default toolbarMapper;\n","import { useHistory } from 'react-router-dom';\n\nconst removeSearchQuery = (target) => {\n  if (typeof target === 'string') {\n    return target.split('?')[0];\n  }\n\n  if (typeof target === 'object') {\n    return {\n      ...target,\n      search: undefined\n    };\n  }\n\n  return target;\n};\n\n/**\n * Wrapper around useHistory hook which adds aditional settings to standard history methods\n * @param {Boolean} removeSearch if true, using history navigation methods will remove search string from path\n */\nconst useEnhancedHistory = (removeSearch) => {\n  const history = useHistory();\n  return {\n    ...history,\n    push: (target) => {\n      if (removeSearch) {\n        return history.push(removeSearchQuery(target));\n      }\n\n      return history.push(target);\n    }\n  };\n};\n\nexport default useEnhancedHistory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  ADD_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport * as ActionTypes from '../action-types';\nimport * as PortfolioHelper from '../../helpers/portfolio/portfolio-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const doFetchPortfolios = ({\n  filter,\n  ...options\n} = defaultSettings) => ({\n  type: ActionTypes.FETCH_PORTFOLIOS,\n  meta: { filter },\n  payload: PortfolioHelper.listPortfolios(filter, options)\n});\n\nexport const fetchPortfolios = (...args) => (dispatch) => {\n  return dispatch(doFetchPortfolios(...args));\n};\n\nexport const fetchPortfolioItems = (\n  filter = '',\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS,\n  meta: { filter },\n  payload: PortfolioHelper.listPortfolioItems(\n    options.limit,\n    options.offset,\n    filter\n  )\n});\n\nexport const fetchPortfolioItem = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEM,\n  payload: PortfolioHelper.getPortfolioItem(portfolioItemId)\n});\n\nexport const fetchPortfolioItemsWithPortfolio = (\n  portfolioId,\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO,\n  meta: { filter: options.filter },\n  payload: PortfolioHelper.getPortfolioItemsWithPortfolio(portfolioId, options)\n});\n\nexport const fetchSelectedPortfolio = (id) => ({\n  type: ActionTypes.FETCH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolio(id)\n});\n\nexport const searchPortfolioItems = (value) => ({\n  type: ActionTypes.FILTER_PORTFOLIO_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const addPortfolio = (portfolioData, items) => (dispatch) => {\n  dispatch({\n    type: ActionTypes.ADD_TEMPORARY_PORTFOLIO,\n    payload: { ...portfolioData, isDisabled: true, isTemporary: true }\n  });\n  return dispatch({\n    type: ActionTypes.ADD_PORTFOLIO,\n    payload: PortfolioHelper.addPortfolio(\n      {\n        ...portfolioData\n      },\n      items\n    )\n      .then(() => dispatch(doFetchPortfolios()))\n      .catch((error) => {\n        dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n        throw error;\n      }),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: 'Success adding portfolio',\n          description: `Portfolio ${portfolioData.name} was added successfully.`\n        }\n      }\n    }\n  });\n};\n\nexport const addToPortfolio = (portfolioId, items) => ({\n  type: ActionTypes.ADD_TO_PORTFOLIO,\n  payload: PortfolioHelper.addToPortfolio(portfolioId, items),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding products',\n        description: 'Products were successfully added to portfolio.'\n      }\n    }\n  }\n});\n\nexport const updatePortfolio = (portfolioData) => (dispatch, getState) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO,\n    payload: portfolioData\n  });\n\n  return PortfolioHelper.updatePortfolio(portfolioData, { getState })\n    .then(() => dispatch(doFetchPortfolios()))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          dismissable: true,\n          variant: 'success',\n          title: 'Success updating portfolio',\n          description: 'The portfolio was updated successfully.'\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const removePortfolio = (portfolioId) => (dispatch) => {\n  dispatch({\n    type: ActionTypes.DELETE_TEMPORARY_PORTFOLIO,\n    payload: portfolioId\n  });\n  return dispatch({\n    type: ActionTypes.REMOVE_PORTFOLIO,\n    payload: PortfolioHelper.removePortfolio(portfolioId)\n      .then(() => dispatch(doFetchPortfolios()))\n      .catch((error) => {\n        dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n        throw error;\n      }),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: 'Success removing portfolio',\n          description: 'The portfolio was removed successfully.'\n        }\n      }\n    }\n  });\n};\n\nexport const selectPortfolioItem = (portfolioItem) => ({\n  type: ActionTypes.SELECT_PORTFOLIO_ITEM,\n  payload: portfolioItem\n});\n\nexport const undoRemoveProductsFromPortfolio = (restoreData, portfolioId) => (\n  dispatch\n) => {\n  dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_PENDING` });\n  return PortfolioHelper.restorePortfolioItems(restoreData)\n    .then(() =>\n      dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .then(() => dispatch({ type: CLEAR_NOTIFICATIONS }))\n    .then(() => dispatch(fetchPortfolioItemsWithPortfolio(portfolioId)))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: 'Products have been restored'\n        }\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const removeProductsFromPortfolio = (portfolioItems, portfolioName) => (\n  dispatch,\n  getState\n) => {\n  dispatch({\n    type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_PENDING`\n  });\n  const {\n    portfolioReducer: {\n      portfolioItems: { meta },\n      selectedPortfolio: { id: portfolioId }\n    }\n  } = getState();\n  return PortfolioHelper.removePortfolioItems(portfolioItems)\n    .then((data) =>\n      dispatch(\n        fetchPortfolioItemsWithPortfolio(portfolioId, {\n          offset: 0,\n          limit: meta.limit,\n          filter: ''\n        })\n      ).then(() => data)\n    )\n    .then((data) => {\n      return dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'Products removed',\n          dismissable: true,\n          description: (\n            <FormattedMessage\n              id=\"portfolio.remove-portfolio-items\"\n              defaultMessage={`You have removed {count, number} {count, plural,\n            one {product}\n            other {products}\n          } from the {portfolioName} portfolio. {undo} if this was a mistake.`}\n              values={{\n                count: portfolioItems.length,\n                portfolioName,\n                undo: (\n                  <a\n                    href=\"#\"\n                    onClick={(event) => {\n                      event.preventDefault();\n                      dispatch(\n                        undoRemoveProductsFromPortfolio(data, portfolioId)\n                      );\n                    }}\n                  >\n                    Undo\n                  </a>\n                )\n              }}\n            />\n          )\n        }\n      });\n    })\n    .then(() =>\n      dispatch({ type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const copyPortfolio = (id) => (dispatch) => {\n  dispatch({ type: 'COPY_PORTFOLIO_PENDING' });\n  return PortfolioHelper.copyPortfolio(id)\n    .then((portfolio) => {\n      dispatch({ type: 'COPY_PORTFOLIO_FULFILLED' });\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a portfolio',\n          description: `${portfolio.name} has been copied.`,\n          dismissable: true\n        }\n      });\n      return portfolio;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_REJECTED', payload: err })\n    );\n};\n\nexport const copyPortfolioItem = (\n  portfolioItemId,\n  copyObject,\n  newPortfolio\n) => (dispatch) => {\n  return PortfolioHelper.copyPortfolioItem(portfolioItemId, copyObject)\n    .then((data) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a product',\n          description: `${data.name} has been copied into ${newPortfolio.name}`,\n          dismissable: true\n        }\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_ITEM_REJECTED', payload: err })\n    );\n};\n\nexport const resetSelectedPortfolio = () => ({\n  type: ActionTypes.RESET_SELECTED_PORTFOLIO\n});\n\nexport const updatePortfolioItem = (values) => (dispatch, getState) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM,\n    payload: values\n  });\n  return PortfolioHelper.updatePortfolioItem(values, { getState })\n    .then(() => {\n      dispatch({ type: ActionTypes.UPDATE_PORTFOLIO_ITEM, payload: values });\n      return values;\n    })\n    .then((item) =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: `Portfolio item \"${item.name}\" was successfully updated`,\n          dismissable: true\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_ITEM_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const getPortfolioItemDetail = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_PENDING` });\n  return PortfolioHelper.getPortfolioItemDetail(params).then(\n    ([portfolioItem, portfolio, source]) =>\n      dispatch({\n        type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_FULFILLED`,\n        payload: {\n          portfolioItem,\n          portfolio,\n          source\n        }\n      })\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ConditionalLink = ({ children, pathname, ...props }) =>\n  pathname ? (\n    <CatalogLink pathname={pathname} {...props}>\n      {children}\n    </CatalogLink>\n  ) : (\n    children\n  );\n\nConditionalLink.propTypes = {\n  pathname: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]).isRequired\n};\n\nexport default ConditionalLink;\n","import styled from 'styled-components';\nimport { Toolbar, Level } from '@patternfly/react-core';\n\nexport const StyledToolbar = styled(Toolbar)`\n  background-color: #ffffff;\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  position: relative;\n  top: 1px;\n`;\n\nexport const TopToolbarWrapper = styled.div`\n  background-color: #ffffff;\n  .pf-c-breadcrumb__item {\n    .active {\n      color: var(--pf-c-breadcrumb__item--Color);\n      text-decoration: none;\n      pointer-events: none;\n    }\n  }\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  .top-toolbar-title {\n    min-width: 200px;\n  }\n  .top-toolbar-title-description {\n    word-break: break-word;\n  }\n`;\n\nexport const TopToolbarTitleContainer = styled(Level)`\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n  }\n`;\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport ConditionalLink from '../../presentational-components/shared/conditional-link';\n\nconst CatalogBreadcrumbs = () => {\n  const fragments = useSelector(\n    ({ breadcrumbsReducer: { fragments } }) => fragments\n  );\n  if (fragments.length <= 1) {\n    return null;\n  }\n\n  return (\n    <Breadcrumb>\n      {fragments.map(({ title, pathname, searchParams }, index) => (\n        <ConditionalLink\n          pathname={!(fragments.length === index + 1) ? pathname : undefined}\n          searchParams={searchParams}\n          nav\n          exact\n          key={pathname}\n          className=\"pf-c-breadcrumb__item\"\n        >\n          <BreadcrumbItem isActive={fragments.length === index + 1}>\n            {title}\n          </BreadcrumbItem>\n        </ConditionalLink>\n      ))}\n    </Breadcrumb>\n  );\n};\n\nexport default CatalogBreadcrumbs;\n","import React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport toolbarMapper from './toolbar-mapper';\n\nconst ToolbarContext = createContext();\n\nconst Component = ({ component, ...props }) => (\n  <ToolbarContext.Consumer>\n    {({ componentMapper }) => {\n      const C =\n        typeof component === 'string' ? componentMapper[component] : component;\n      return <C {...props} />;\n    }}\n  </ToolbarContext.Consumer>\n);\n\nComponent.propTypes = {\n  component: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.element\n  ]).isRequired\n};\n\n/**\n * Render loop that renders all toolbar components based on its type\n * @param {Array} fields list of React components to be rendered\n */\nconst render = (fields) =>\n  fields.hidden\n    ? null\n    : fields.map(({ fields, key, ...field }) =>\n        fields ? (\n          <Component key={key} {...field}>\n            {render(fields)}\n          </Component>\n        ) : (\n          <Component key={key} {...field} />\n        )\n      );\n\nconst ToolbarRenderer = ({ schema, componentMapper }) => (\n  <ToolbarContext.Provider value={{ render, componentMapper }}>\n    {render(schema.fields)}\n  </ToolbarContext.Provider>\n);\n\nToolbarRenderer.propTypes = {\n  schema: PropTypes.shape({\n    fields: PropTypes.array.isRequired\n  }).isRequired,\n  componentMapper: PropTypes.object\n};\n\nToolbarRenderer.defaultProps = {\n  componentMapper: toolbarMapper\n};\n\nexport default ToolbarRenderer;\n","import {\n  getAxiosInstance,\n  getPortfolioApi,\n  getPortfolioItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { sanitizeValues } from '../shared/helpers';\nimport { defaultSettings } from '../shared/pagination';\n\nconst axiosInstance = getAxiosInstance();\nconst portfolioApi = getPortfolioApi();\nconst portfolioItemApi = getPortfolioItemApi();\n\nexport function listPortfolios(\n  filter = '',\n  { limit, offset } = defaultSettings\n) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n}\n\nexport function listPortfolioItems(limit = 50, offset = 0, filter = '') {\n  return axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n    )\n    .then((portfolioItems) => {\n      const portfolioReference = portfolioItems.data.reduce(\n        (acc, curr, index) =>\n          curr.portfolio_id\n            ? {\n                ...acc,\n                [curr.portfolio_id]: acc[curr.portfolio_id]\n                  ? [...acc[curr.portfolio_id], index]\n                  : [index]\n              }\n            : acc,\n        {}\n      );\n      return axiosInstance\n        .get(\n          `${CATALOG_API_BASE}/portfolios?${Object.keys(portfolioReference)\n            .map((id) => `filter[id][]=${id}`)\n            .join('&')}`\n        )\n        .then(({ data }) => ({\n          portfolioItems,\n          portfolioReference,\n          portfolios: data\n        }));\n    })\n    .then(({ portfolioItems, portfolioReference, portfolios }) => {\n      portfolios.forEach(({ id, name }) =>\n        portfolioReference[id].forEach((portfolioItemIndex) => {\n          portfolioItems.data[portfolioItemIndex].portfolioName = name;\n        })\n      );\n      return portfolioItems;\n    });\n}\n\nexport function getPortfolioItem(portfolioItemId) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}`\n  );\n}\n\nexport function getPortfolio(portfolioId) {\n  return portfolioApi.showPortfolio(portfolioId);\n}\n\nexport function getPortfolioItemsWithPortfolio(\n  portfolioId,\n  { limit, offset, filter = '' } = defaultSettings\n) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios/${portfolioId}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n}\n\n// TO DO - change to use the API call that adds multiple items to a portfolio when available\nexport async function addPortfolio(portfolioData, items) {\n  let portfolio = await portfolioApi.createPortfolio(portfolioData);\n  if (!portfolio) {\n    return portfolio;\n  }\n\n  if (items && items.length > 0) {\n    return addToPortfolio(portfolio, items);\n  }\n}\n\nexport async function addToPortfolio(portfolioId, items) {\n  return Promise.all(\n    items.map((item) =>\n      portfolioItemApi.createPortfolioItem({\n        portfolio_id: portfolioId,\n        service_offering_ref: item\n      })\n    )\n  );\n}\n\nexport async function updatePortfolio({ id, ...portfolioData }, store) {\n  return await portfolioApi.updatePortfolio(\n    id,\n    sanitizeValues(portfolioData, 'Portfolio', store)\n  );\n}\n\nexport async function removePortfolio(portfolioId) {\n  await portfolioApi.destroyPortfolio(portfolioId);\n}\n\nexport async function removePortfolioItem(portfolioItemId) {\n  return portfolioItemApi.destroyPortfolioItem(portfolioItemId);\n}\n\nexport async function removePortfolioItems(portfolioItemIds) {\n  return Promise.all(\n    portfolioItemIds.map(async (itemId) => {\n      const { restore_key } = await removePortfolioItem(itemId);\n      return {\n        portfolioItemId: itemId,\n        restoreKey: restore_key\n      };\n    })\n  );\n}\n\nexport function fetchProviderControlParameters(portfolioItemId) {\n  return axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}/provider_control_parameters`\n    )\n    .then((data) => ({\n      required: [],\n      ...data,\n      properties: {\n        ...data.properties,\n        namespace: {\n          ...data.properties.namespace,\n          enum: Array.from(new Set([...data.properties.namespace.enum]))\n        }\n      }\n    }));\n}\n\nexport async function updatePortfolioItem({ id, ...portfolioItem }, store) {\n  return await portfolioItemApi.updatePortfolioItem(\n    id,\n    sanitizeValues(portfolioItem, 'PortfolioItem', store)\n  );\n}\n\nexport function fetchPortfolioByName(name = '') {\n  return axiosInstance.get(`${CATALOG_API_BASE}/portfolios`, {\n    params: {\n      filter: {\n        name\n      }\n    }\n  });\n}\n\nexport const restorePortfolioItems = (restoreData) =>\n  Promise.all(\n    restoreData.map(({ portfolioItemId, restoreKey }) =>\n      portfolioItemApi.unDeletePortfolioItem(portfolioItemId, {\n        restore_key: restoreKey\n      })\n    )\n  );\n\nexport const copyPortfolio = (portfolioId) =>\n  portfolioApi.postCopyPortfolio(portfolioId);\n\nexport const copyPortfolioItem = (portfolioItemId, copyObject = {}) =>\n  portfolioItemApi.postCopyPortfolioItem(portfolioItemId, copyObject);\n\nexport const uploadPortfolioItemIcon = (portfolioItemId, file, iconId) => {\n  let data = new FormData();\n  data.append('content', file, file.name);\n  if (iconId) {\n    return axiosInstance.patch(`${CATALOG_API_BASE}/icons/${iconId}`, data);\n  }\n\n  data.append('portfolio_item_id', portfolioItemId);\n  return axiosInstance.post(`${CATALOG_API_BASE}/icons`, data, {\n    headers: {\n      accept: 'application/json',\n      'Content-Type': `multipart/form-data; boundary=${data._boundary}`\n    }\n  });\n};\n\nexport const getPortfolioItemDetail = (params) =>\n  Promise.all([\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/portfolio_items/${params.portfolioItem}`\n    ),\n    axiosInstance.get(`${CATALOG_API_BASE}/portfolios/${params.portfolio}`),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${params.source}`)\n      .catch((error) => {\n        if (error.status === 404) {\n          return {\n            object: 'platform',\n            notFound: true\n          };\n        }\n\n        throw error;\n      })\n  ]);\n\nexport const getPortfolioFromState = (portfolioReducer, portfolioId) =>\n  portfolioReducer.selectedPortfolio &&\n  portfolioReducer.selectedPortfolio.id === portfolioId\n    ? portfolioReducer.selectedPortfolio\n    : portfolioReducer.portfolios.data.find(({ id }) => id === portfolioId);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport clsx from 'clsx';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport CatalogBreadcrumbs from '../../smart-components/common/catalog-breadcrumbs';\nimport {\n  TopToolbarWrapper,\n  TopToolbarTitleContainer\n} from '../styled-components/toolbars';\n\nconst TopToolbar = ({\n  children,\n  paddingBottom,\n  breadcrumbs,\n  breadcrumbsSpacing,\n  ...rest\n}) => (\n  <TopToolbarWrapper\n    className={`pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${\n      paddingBottom ? 'pf-u-pb-lg' : ''\n    }`}\n    {...rest}\n  >\n    {breadcrumbs && (\n      <div className=\"pf-u-mb-md\">\n        {' '}\n        <CatalogBreadcrumbs />\n      </div>\n    )}\n    {children}\n  </TopToolbarWrapper>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  paddingBottom: PropTypes.bool,\n  breadcrumbs: PropTypes.bool,\n  breadcrumbsSpacing: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: true,\n  breadcrumbs: true\n};\n\nexport default TopToolbar;\n\nexport const TopToolbarTitle = ({\n  title,\n  description,\n  children,\n  noData,\n  ...rest\n}) => (\n  <Fragment>\n    <TopToolbarTitleContainer\n      className={clsx({\n        'pf-u-mb-lg': !noData\n      })}\n      {...rest}\n    >\n      <LevelItem>\n        <TextContent className=\"top-toolbar-title\">\n          <Text component={TextVariants.h2} className=\"pf-u-m-0 pf-u-mr-md\">\n            {title}\n          </Text>\n          {description && (\n            <Text\n              className=\"top-toolbar-title-description\"\n              component={TextVariants.p}\n            >\n              {description}\n            </Text>\n          )}\n        </TextContent>\n      </LevelItem>\n      {children}\n    </TopToolbarTitleContainer>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  noData: PropTypes.bool\n};\n\nTopToolbarTitle.defaultProps = {\n  title: <ToolbarTitlePlaceholder />\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation } from 'react-router-dom';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nconst AppTabs = ({ tabItems }) => {\n  const { push } = useEnhancedHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) =>\n    push({ pathname: tabItems[tabIndex].name, search });\n\n  return (\n    <Tabs\n      activeKey={activeTab ? activeTab.eventKey : 0}\n      onSelect={handleTabClick}\n    >\n      {tabItems.map((item) => (\n        <Tab\n          title={item.title}\n          key={item.eventKey}\n          eventKey={item.eventKey}\n          name={item.name}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default AppTabs;\n","import styled from 'styled-components';\n\nconst EllipsisTextContainer = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nexport default EllipsisTextContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ContentGalleryEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <div className=\"pf-u-mt-xl\">\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={Icon} />\n      <TextContent>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </TextContent>\n      <EmptyStateBody>\n        {description}\n        {renderDescription()}\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        {PrimaryAction && <PrimaryAction />}\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </div>\n);\n\nContentGalleryEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nContentGalleryEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default ContentGalleryEmptyState;\n\nexport const EmptyStatePrimaryAction = ({\n  url,\n  label,\n  hasPermission = false\n}) =>\n  hasPermission && (\n    <CatalogLink pathname={url} preserveSearch>\n      <Button variant=\"primary\">{label}</Button>\n    </CatalogLink>\n  );\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\n","import styled from 'styled-components';\nimport { Card, GalleryItem } from '@patternfly/react-core';\n\nexport const StyledCard = styled(Card)`\n  height: 330px;\n  position: relative;\n`;\n\nexport const StyledGalleryItem = styled(GalleryItem)`\n  position: relative;\n  ::after {\n    display: ${({ isDisabled }) => (isDisabled ? 'block' : 'none')};\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    content: '';\n    background-color: rgba(210, 210, 210, 0.5);\n    z-index: 1;\n    cursor: progress;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport { Text, TextVariants, Gallery } from '@patternfly/react-core';\n\nimport { CardLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst NoItems = () => (\n  <div>\n    <Text component={TextVariants.h1}>No items found</Text>\n  </div>\n);\n\nconst ContentGallery = ({ isLoading, items, renderEmptyState }) =>\n  isLoading ? (\n    <CardLoader />\n  ) : items.length === 0 ? (\n    renderEmptyState ? (\n      renderEmptyState()\n    ) : (\n      <NoItems />\n    )\n  ) : (\n    <Section type=\"content\">\n      <Gallery gutter=\"md\" className=\"content-gallery\">\n        {items}\n      </Gallery>\n    </Section>\n  );\n\nContentGallery.propTypes = {\n  isLoading: PropTypes.bool,\n  items: PropTypes.array,\n  renderEmptyState: PropTypes.func\n};\nexport default ContentGallery;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst CardPropText = styled.div`\n  overflow: hidden;\n`;\n\nconst ItemDetails = ({ toDisplay = [], ...item }) =>\n  toDisplay.map((prop) => (\n    <CardPropText key={`card-prop-${prop}`}>{item[prop]}</CardPropText>\n  ));\n\nItemDetails.propTypes = {\n  toDisplay: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.arrayOf(PropTypes.node)\n    ])\n  )\n};\n\nItemDetails.defaultProps = {\n  toDisplay: []\n};\n\nexport default ItemDetails;\n","import styled from 'styled-components';\nimport { CardBody } from '@patternfly/react-core';\n\nexport const StyledCardBody = styled(CardBody)`\n  height: 230px;\n  overflow: hidden;\n  padding: 0;\n  margin: 0 24px 24px;\n`;\n","import { toolbarComponentTypes } from './toolbar-mapper';\n\nexport const createSingleItemGroup = ({\n  groupName,\n  hidden = false,\n  ...item\n}) => ({\n  component: toolbarComponentTypes.TOOLBAR_GROUP,\n  key: `${groupName}/single-toolbar-item-group`,\n  fields: hidden\n    ? []\n    : [\n        {\n          component: toolbarComponentTypes.TOOLBAR_ITEM,\n          key: `${groupName}/single-toolbar-item`,\n          fields: [item]\n        }\n      ]\n});\n\nexport const createLinkButton = ({ pathname, preserveSearch, ...item }) => ({\n  component: toolbarComponentTypes.LINK,\n  pathname,\n  preserveSearch,\n  key: `${item.key}/button-link`,\n  isDisabled: item.isDisabled,\n  fields: [\n    {\n      component: toolbarComponentTypes.BUTTON,\n      ...item\n    }\n  ]\n});\n"],"sourceRoot":""}