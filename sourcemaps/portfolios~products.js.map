{"version":3,"sources":["webpack:///./src/smart-components/common/catalog-link.js","webpack:///./src/utilities/async-form-validator.js","webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/toolbar/toolbar-mapper.js","webpack:///./src/utilities/use-enhanced-history.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/redux/actions/portfolio-actions.js","webpack:///./src/presentational-components/shared/conditional-link.js","webpack:///./src/helpers/shared/helpers.js","webpack:///./src/constants/nullable-attributes.js","webpack:///./src/toolbar/toolbar-renderer.js","webpack:///./src/smart-components/common/catalog-breadcrumbs.js","webpack:///./src/helpers/portfolio/portfolio-helper.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/presentational-components/shared/app-tabs.js","webpack:///./src/presentational-components/shared/content-gallery-empty-state.js","webpack:///./src/smart-components/content-gallery/content-gallery.js","webpack:///./src/presentational-components/shared/card-common.js","webpack:///./src/toolbar/helpers.js"],"names":["createSearchQuery","search","searchParams","preserveSearch","paramsQuery","Object","entries","map","key","value","join","length","CatalogLink","pathname","nav","props","useLocation","Component","NavLink","Link","to","propTypes","PropTypes","string","isRequired","shape","bool","defaultProps","asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","FilterToolbarItem","searchValue","onFilterChange","placeholder","isClearable","ToolbarItem","className","TextInput","type","onChange","aria-label","width","height","onClick","func","ToolbarButton","title","Button","toolbarMapper","TopToolbar","TopToolbarTitle","Toolbar","ToolbarGroup","Level","LevelItem","AppTabs","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","TOOLBAR","TOOLBAR_ITEM","TOOLBAR_GROUP","FILTER_TOOLBAR_ITEM","LINK","BUTTON","LEVEL","LEVEL_ITEM","TABS","useEnhancedHistory","removeSearch","history","useHistory","push","target","split","undefined","removeSearchQuery","AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","isCompact","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","getNewPage","request","debouncePromise","direction","any","doFetchPortfolios","defaultSettings","filter","ActionTypes","payload","PortfolioHelper","fetchPortfolios","args","dispatch","fetchPortfolioItems","fetchPortfolioItemsWithPortfolio","portfolioId","fetchSelectedPortfolio","id","addPortfolio","portfolioData","items","isDisabled","isTemporary","then","error","notifications","fulfilled","variant","description","name","addToPortfolio","updatePortfolio","getState","ADD_NOTIFICATION","dismissable","removePortfolio","removeProductsFromPortfolio","portfolioItems","portfolioName","portfolioReducer","selectedPortfolio","data","defaultMessage","values","undo","href","event","preventDefault","restoreData","CLEAR_NOTIFICATIONS","err","undoRemoveProductsFromPortfolio","copyPortfolio","portfolio","copyPortfolioItem","portfolioItemId","copyObject","newPortfolio","resetSelectedPortfolio","updatePortfolioItem","item","getPortfolioItemDetail","params","portfolioItem","source","ConditionalLink","children","oneOfType","node","arrayOf","scrollToTop","document","getElementById","scrollTo","behavior","top","left","filterServiceOffering","display_name","trim","toLowerCase","includes","nullableMapper","PortfolioItem","Portfolio","sanitizeValues","entityType","store","entity","keys","schemas","openApiReducer","schema","components","permittedValues","get","reduce","acc","curr","timeAgo","date","DateFormat","ToolbarContext","createContext","component","Consumer","componentMapper","C","element","render","fields","hidden","field","ToolbarRenderer","Provider","array","object","CatalogBreadcrumbs","fragments","useSelector","breadcrumbsReducer","index","exact","isActive","axiosInstance","getAxiosInstance","portfolioApi","getPortfolioApi","portfolioItemApi","getPortfolioItemApi","listPortfolios","CATALOG_API_BASE","listPortfolioItems","getPortfolioItem","getPortfolio","showPortfolio","getPortfolioItemsWithPortfolio","a","async","createPortfolio","Promise","all","createPortfolioItem","portfolio_id","service_offering_ref","destroyPortfolio","removePortfolioItem","destroyPortfolioItem","removePortfolioItems","portfolioItemIds","itemId","restore_key","restoreKey","fetchPortfolioByName","restorePortfolioItems","unDeletePortfolioItem","postCopyPortfolio","postCopyPortfolioItem","uploadPortfolioItemIcon","file","iconId","FormData","append","patch","post","headers","accept","_boundary","SOURCES_API_BASE","getPortfolioFromState","portfolios","find","paddingBottom","breadcrumbs","rest","breadcrumbsSpacing","noData","clsx","TextVariants","h2","p","tabItems","activeTab","activeKey","eventKey","onSelect","tabIndex","ContentGalleryEmptyState","Icon","PrimaryAction","renderDescription","icon","h1","EmptyStatePrimaryAction","url","label","NoItems","ContentGallery","isLoading","renderEmptyState","gutter","ItemDetails","toDisplay","prop","createSingleItemGroup","groupName","createLinkButton"],"mappings":"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","file":"js/portfolios~products.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, NavLink, useLocation } from 'react-router-dom';\n\nconst createSearchQuery = (search, searchParams, preserveSearch) => {\n  const paramsQuery = Object.entries(searchParams)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&');\n  return preserveSearch\n    ? `${search}${paramsQuery.length > 0 ? `&${paramsQuery}` : ''}`\n    : paramsQuery.length > 0\n    ? `?${paramsQuery}`\n    : '';\n};\n\nconst CatalogLink = ({\n  pathname,\n  searchParams,\n  nav,\n  preserveSearch,\n  ...props\n}) => {\n  const { search } = useLocation();\n  const Component = nav ? NavLink : Link;\n  const to = {\n    pathname,\n    search: createSearchQuery(search, searchParams, preserveSearch)\n  };\n  return <Component to={to} {...props} />;\n};\n\nCatalogLink.propTypes = {\n  pathname: PropTypes.string.isRequired,\n  searchParams: PropTypes.shape({\n    [PropTypes.string]: PropTypes.string\n  }),\n  nav: PropTypes.bool,\n  preserveSearch: PropTypes.bool\n};\n\nCatalogLink.defaultProps = {\n  nav: false,\n  preserveSearch: false,\n  searchParams: {}\n};\n\nexport default CatalogLink;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable\n}) => (\n  <ToolbarItem>\n    <div className=\"toolbar-filter-input-group\">\n      <TextInput\n        placeholder={placeholder}\n        value={searchValue}\n        type=\"text\"\n        onChange={onFilterChange}\n        aria-label={placeholder}\n      />\n      <span className=\"filter-icons-container\">\n        {(isClearable && searchValue && (\n          <CloseIcon\n            className=\"clear-filter\"\n            width=\"16\"\n            height=\"16\"\n            onClick={() => onFilterChange('')}\n          />\n        )) || <SearchIcon />}\n      </span>\n    </div>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Level,\n  LevelItem,\n  Toolbar,\n  ToolbarItem,\n  ToolbarGroup\n} from '@patternfly/react-core';\n\nimport FilterToolbarItem from '../presentational-components/shared/filter-toolbar-item';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../presentational-components/shared/top-toolbar';\nimport AppTabs from '../presentational-components/shared/app-tabs';\nimport CatalogLink from '../smart-components/common/catalog-link';\n\nconst ToolbarButton = ({ title, ...props }) => (\n  <Button {...props}>{title}</Button>\n);\n\nToolbarButton.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst AppToolbar = ({ ...props }) => (\n  <Toolbar className=\"pf-u-pr-lg toolbar\" {...props} />\n);\n\nconst toolbarMapper = {\n  TopToolbar,\n  TopToolbarTitle,\n  Toolbar: AppToolbar,\n  ToolbarGroup,\n  ToolbarItem,\n  FilterToolbarItem,\n  Link: CatalogLink,\n  Level,\n  LevelItem,\n  Button: ToolbarButton,\n  AppTabs\n};\n\nexport const toolbarComponentTypes = {\n  TOP_TOOLBAR: 'TopToolbar',\n  TOP_TOOLBAR_TITLE: 'TopToolbarTitle',\n  TOOLBAR: 'Toolbar',\n  TOOLBAR_ITEM: 'ToolbarItem',\n  TOOLBAR_GROUP: 'ToolbarGroup',\n  FILTER_TOOLBAR_ITEM: 'FilterToolbarItem',\n  LINK: 'Link',\n  BUTTON: 'Button',\n  LEVEL: 'Level',\n  LEVEL_ITEM: 'LevelItem',\n  TABS: 'AppTabs'\n};\n\nexport default toolbarMapper;\n","import { useHistory } from 'react-router-dom';\n\nconst removeSearchQuery = (target) => {\n  if (typeof target === 'string') {\n    return target.split('?')[0];\n  }\n\n  if (typeof target === 'object') {\n    return {\n      ...target,\n      search: undefined\n    };\n  }\n\n  return target;\n};\n\n/**\n * Wrapper around useHistory hook which adds aditional settings to standard history methods\n * @param {Boolean} removeSearch if true, using history navigation methods will remove search string from path\n */\nconst useEnhancedHistory = (removeSearch) => {\n  const history = useHistory();\n  return {\n    ...history,\n    push: (target) => {\n      if (removeSearch) {\n        return history.push(removeSearchQuery(target));\n      }\n\n      return history.push(target);\n    }\n  };\n};\n\nexport default useEnhancedHistory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  ADD_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport * as ActionTypes from '../action-types';\nimport * as PortfolioHelper from '../../helpers/portfolio/portfolio-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const doFetchPortfolios = ({\n  filter,\n  ...options\n} = defaultSettings) => ({\n  type: ActionTypes.FETCH_PORTFOLIOS,\n  meta: { filter },\n  payload: PortfolioHelper.listPortfolios(filter, options)\n});\n\nexport const fetchPortfolios = (...args) => (dispatch) => {\n  return dispatch(doFetchPortfolios(...args));\n};\n\nexport const fetchPortfolioItems = (\n  filter = '',\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS,\n  meta: { filter },\n  payload: PortfolioHelper.listPortfolioItems(\n    options.limit,\n    options.offset,\n    filter\n  )\n});\n\nexport const fetchPortfolioItem = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEM,\n  payload: PortfolioHelper.getPortfolioItem(portfolioItemId)\n});\n\nexport const fetchPortfolioItemsWithPortfolio = (\n  portfolioId,\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO,\n  meta: { filter: options.filter },\n  payload: PortfolioHelper.getPortfolioItemsWithPortfolio(portfolioId, options)\n});\n\nexport const fetchSelectedPortfolio = (id) => ({\n  type: ActionTypes.FETCH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolio(id)\n});\n\nexport const searchPortfolioItems = (value) => ({\n  type: ActionTypes.FILTER_PORTFOLIO_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const addPortfolio = (portfolioData, items) => (dispatch) => {\n  dispatch({\n    type: ActionTypes.ADD_TEMPORARY_PORTFOLIO,\n    payload: { ...portfolioData, isDisabled: true, isTemporary: true }\n  });\n  return dispatch({\n    type: ActionTypes.ADD_PORTFOLIO,\n    payload: PortfolioHelper.addPortfolio(\n      {\n        ...portfolioData\n      },\n      items\n    )\n      .then(() => dispatch(doFetchPortfolios()))\n      .catch((error) => {\n        dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n        throw error;\n      }),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: 'Success adding portfolio',\n          description: `Portfolio ${portfolioData.name} was added successfully.`\n        }\n      }\n    }\n  });\n};\n\nexport const addToPortfolio = (portfolioId, items) => ({\n  type: ActionTypes.ADD_TO_PORTFOLIO,\n  payload: PortfolioHelper.addToPortfolio(portfolioId, items),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding products',\n        description: 'Products were successfully added to portfolio.'\n      }\n    }\n  }\n});\n\nexport const updatePortfolio = (portfolioData) => (dispatch, getState) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO,\n    payload: portfolioData\n  });\n\n  return PortfolioHelper.updatePortfolio(portfolioData, { getState })\n    .then(() => dispatch(doFetchPortfolios()))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          dismissable: true,\n          variant: 'success',\n          title: 'Success updating portfolio',\n          description: 'The portfolio was updated successfully.'\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const removePortfolio = (portfolioId) => (dispatch) => {\n  dispatch({\n    type: ActionTypes.DELETE_TEMPORARY_PORTFOLIO,\n    payload: portfolioId\n  });\n  return dispatch({\n    type: ActionTypes.REMOVE_PORTFOLIO,\n    payload: PortfolioHelper.removePortfolio(portfolioId)\n      .then(() => dispatch(doFetchPortfolios()))\n      .catch((error) => {\n        dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n        throw error;\n      }),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: 'Success removing portfolio',\n          description: 'The portfolio was removed successfully.'\n        }\n      }\n    }\n  });\n};\n\nexport const selectPortfolioItem = (portfolioItem) => ({\n  type: ActionTypes.SELECT_PORTFOLIO_ITEM,\n  payload: portfolioItem\n});\n\nexport const undoRemoveProductsFromPortfolio = (restoreData, portfolioId) => (\n  dispatch\n) => {\n  dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_PENDING` });\n  return PortfolioHelper.restorePortfolioItems(restoreData)\n    .then(() =>\n      dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .then(() => dispatch({ type: CLEAR_NOTIFICATIONS }))\n    .then(() => dispatch(fetchPortfolioItemsWithPortfolio(portfolioId)))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: 'Products have been restored'\n        }\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const removeProductsFromPortfolio = (portfolioItems, portfolioName) => (\n  dispatch,\n  getState\n) => {\n  dispatch({\n    type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_PENDING`\n  });\n  const {\n    portfolioReducer: {\n      portfolioItems: { meta },\n      selectedPortfolio: { id: portfolioId }\n    }\n  } = getState();\n  return PortfolioHelper.removePortfolioItems(portfolioItems)\n    .then((data) =>\n      dispatch(\n        fetchPortfolioItemsWithPortfolio(portfolioId, {\n          offset: 0,\n          limit: meta.limit,\n          filter: ''\n        })\n      ).then(() => data)\n    )\n    .then((data) => {\n      return dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'Products removed',\n          dismissable: true,\n          description: (\n            <FormattedMessage\n              id=\"portfolio.remove-portfolio-items\"\n              defaultMessage={`You have removed {count, number} {count, plural,\n            one {product}\n            other {products}\n          } from the {portfolioName} portfolio. {undo} if this was a mistake.`}\n              values={{\n                count: portfolioItems.length,\n                portfolioName,\n                undo: (\n                  <a\n                    href=\"#\"\n                    onClick={(event) => {\n                      event.preventDefault();\n                      dispatch(\n                        undoRemoveProductsFromPortfolio(data, portfolioId)\n                      );\n                    }}\n                  >\n                    Undo\n                  </a>\n                )\n              }}\n            />\n          )\n        }\n      });\n    })\n    .then(() =>\n      dispatch({ type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const copyPortfolio = (id) => (dispatch) => {\n  dispatch({ type: 'COPY_PORTFOLIO_PENDING' });\n  return PortfolioHelper.copyPortfolio(id)\n    .then((portfolio) => {\n      dispatch({ type: 'COPY_PORTFOLIO_FULFILLED' });\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a portfolio',\n          description: `${portfolio.name} has been copied.`,\n          dismissable: true\n        }\n      });\n      return portfolio;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_REJECTED', payload: err })\n    );\n};\n\nexport const copyPortfolioItem = (\n  portfolioItemId,\n  copyObject,\n  newPortfolio\n) => (dispatch) => {\n  return PortfolioHelper.copyPortfolioItem(portfolioItemId, copyObject)\n    .then((data) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a product',\n          description: `${data.name} has been copied into ${newPortfolio.name}`,\n          dismissable: true\n        }\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_ITEM_REJECTED', payload: err })\n    );\n};\n\nexport const resetSelectedPortfolio = () => ({\n  type: ActionTypes.RESET_SELECTED_PORTFOLIO\n});\n\nexport const updatePortfolioItem = (values) => (dispatch, getState) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM,\n    payload: values\n  });\n  return PortfolioHelper.updatePortfolioItem(values, { getState })\n    .then(() => {\n      dispatch({ type: ActionTypes.UPDATE_PORTFOLIO_ITEM, payload: values });\n      return values;\n    })\n    .then((item) =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: `Portfolio item \"${item.name}\" was successfully updated`,\n          dismissable: true\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_ITEM_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const getPortfolioItemDetail = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_PENDING` });\n  return PortfolioHelper.getPortfolioItemDetail(params).then(\n    ([portfolioItem, portfolio, source]) =>\n      dispatch({\n        type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_FULFILLED`,\n        payload: {\n          portfolioItem,\n          portfolio,\n          source\n        }\n      })\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ConditionalLink = ({ children, pathname, ...props }) =>\n  pathname ? (\n    <CatalogLink pathname={pathname} {...props}>\n      {children}\n    </CatalogLink>\n  ) : (\n    children\n  );\n\nConditionalLink.propTypes = {\n  pathname: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]).isRequired\n};\n\nexport default ConditionalLink;\n","import React from 'react';\nimport get from 'lodash/get';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\n\nimport {\n  PORTFOLIO_ITEM_NULLABLE,\n  PORTFOLIO_NULLABLE\n} from '../../constants/nullable-attributes';\n\nexport const scrollToTop = () =>\n  document.getElementById('root').scrollTo({\n    behavior: 'smooth',\n    top: 0,\n    left: 0\n  });\n\nexport const filterServiceOffering = ({ display_name, name }, filter) => {\n  const filterAtrribute = display_name || name;\n  return filterAtrribute\n    .trim()\n    .toLowerCase()\n    .includes(filter.toLowerCase());\n};\n\nexport const allowNull = (wrappedPropTypes) => (props, propName, ...rest) => {\n  if (props[propName] === null) {\n    return null;\n  }\n\n  return wrappedPropTypes(props, propName, ...rest);\n};\n\nexport const udefinedToNull = (entity, keys) =>\n  [...Object.keys(entity), ...keys].reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: entity[curr] === undefined ? null : entity[curr]\n    }),\n    {}\n  );\n\nconst nullableMapper = {\n  PortfolioItem: PORTFOLIO_ITEM_NULLABLE,\n  Portfolio: PORTFOLIO_NULLABLE\n};\n\nexport const sanitizeValues = (values, entityType, store) => {\n  const schemas = store.getState().openApiReducer.schema.components.schemas;\n  const permittedValues = Object.keys(values)\n    .filter((key) => !get(schemas, `${entityType}.properties.${key}.readOnly`))\n    .reduce(\n      (acc, curr) => (values[curr] ? { ...acc, [curr]: values[curr] } : acc),\n      {}\n    );\n  return udefinedToNull(permittedValues, nullableMapper[entityType]);\n};\n\nexport const timeAgo = (date) => (\n  <span key={date}>\n    <DateFormat date={date} type=\"relative\" />\n  </span>\n);\n\nconst sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nexport const readableBytes = (bytes) => {\n  if (bytes === 0) {\n    return 'O B';\n  }\n\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\n\n  return (bytes / Math.pow(1024, i)).toFixed(2) * 1 + ' ' + sizes[i];\n};\n","export const PORTFOLIO_ITEM_NULLABLE = [\n  'name',\n  'description',\n  'long_description',\n  'distributor',\n  'documentation_url',\n  'support_url'\n];\n\nexport const PORTFOLIO_NULLABLE = ['description'];\n","import React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport toolbarMapper from './toolbar-mapper';\n\nconst ToolbarContext = createContext();\n\nconst Component = ({ component, ...props }) => (\n  <ToolbarContext.Consumer>\n    {({ componentMapper }) => {\n      const C =\n        typeof component === 'string' ? componentMapper[component] : component;\n      return <C {...props} />;\n    }}\n  </ToolbarContext.Consumer>\n);\n\nComponent.propTypes = {\n  component: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.element\n  ]).isRequired\n};\n\n/**\n * Render loop that renders all toolbar components based on its type\n * @param {Array} fields list of React components to be rendered\n */\nconst render = (fields) =>\n  fields.hidden\n    ? null\n    : fields.map(({ fields, key, ...field }) =>\n        fields ? (\n          <Component key={key} {...field}>\n            {render(fields)}\n          </Component>\n        ) : (\n          <Component key={key} {...field} />\n        )\n      );\n\nconst ToolbarRenderer = ({ schema, componentMapper }) => (\n  <ToolbarContext.Provider value={{ render, componentMapper }}>\n    {render(schema.fields)}\n  </ToolbarContext.Provider>\n);\n\nToolbarRenderer.propTypes = {\n  schema: PropTypes.shape({\n    fields: PropTypes.array.isRequired\n  }).isRequired,\n  componentMapper: PropTypes.object\n};\n\nToolbarRenderer.defaultProps = {\n  componentMapper: toolbarMapper\n};\n\nexport default ToolbarRenderer;\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport ConditionalLink from '../../presentational-components/shared/conditional-link';\n\nconst CatalogBreadcrumbs = () => {\n  const fragments = useSelector(\n    ({ breadcrumbsReducer: { fragments } }) => fragments\n  );\n  if (fragments.length <= 1) {\n    return null;\n  }\n\n  return (\n    <Breadcrumb>\n      {fragments.map(({ title, pathname, searchParams }, index) => (\n        <ConditionalLink\n          pathname={!(fragments.length === index + 1) ? pathname : undefined}\n          searchParams={searchParams}\n          nav\n          exact\n          key={pathname}\n          className=\"pf-c-breadcrumb__item\"\n        >\n          <BreadcrumbItem isActive={fragments.length === index + 1}>\n            {title}\n          </BreadcrumbItem>\n        </ConditionalLink>\n      ))}\n    </Breadcrumb>\n  );\n};\n\nexport default CatalogBreadcrumbs;\n","import {\n  getAxiosInstance,\n  getPortfolioApi,\n  getPortfolioItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { sanitizeValues } from '../shared/helpers';\nimport { defaultSettings } from '../shared/pagination';\n\nconst axiosInstance = getAxiosInstance();\nconst portfolioApi = getPortfolioApi();\nconst portfolioItemApi = getPortfolioItemApi();\n\nexport function listPortfolios(\n  filter = '',\n  { limit, offset } = defaultSettings\n) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n}\n\nexport function listPortfolioItems(limit = 50, offset = 0, filter = '') {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n}\n\nexport function getPortfolioItem(portfolioItemId) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}`\n  );\n}\n\nexport function getPortfolio(portfolioId) {\n  return portfolioApi.showPortfolio(portfolioId);\n}\n\nexport function getPortfolioItemsWithPortfolio(\n  portfolioId,\n  { limit, offset, filter = '' } = defaultSettings\n) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios/${portfolioId}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n}\n\n// TO DO - change to use the API call that adds multiple items to a portfolio when available\nexport async function addPortfolio(portfolioData, items) {\n  let portfolio = await portfolioApi.createPortfolio(portfolioData);\n  if (!portfolio) {\n    return portfolio;\n  }\n\n  if (items && items.length > 0) {\n    return addToPortfolio(portfolio, items);\n  }\n}\n\nexport async function addToPortfolio(portfolioId, items) {\n  return Promise.all(\n    items.map((item) =>\n      portfolioItemApi.createPortfolioItem({\n        portfolio_id: portfolioId,\n        service_offering_ref: item\n      })\n    )\n  );\n}\n\nexport async function updatePortfolio({ id, ...portfolioData }, store) {\n  return await portfolioApi.updatePortfolio(\n    id,\n    sanitizeValues(portfolioData, 'Portfolio', store)\n  );\n}\n\nexport async function removePortfolio(portfolioId) {\n  await portfolioApi.destroyPortfolio(portfolioId);\n}\n\nexport async function removePortfolioItem(portfolioItemId) {\n  return portfolioItemApi.destroyPortfolioItem(portfolioItemId);\n}\n\nexport async function removePortfolioItems(portfolioItemIds) {\n  return Promise.all(\n    portfolioItemIds.map(async (itemId) => {\n      const { restore_key } = await removePortfolioItem(itemId);\n      return {\n        portfolioItemId: itemId,\n        restoreKey: restore_key\n      };\n    })\n  );\n}\n\nexport function fetchProviderControlParameters(portfolioItemId) {\n  return axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}/provider_control_parameters`\n    )\n    .then((data) => ({\n      required: [],\n      ...data,\n      properties: {\n        ...data.properties,\n        namespace: {\n          ...data.properties.namespace,\n          enum: Array.from(new Set([...data.properties.namespace.enum]))\n        }\n      }\n    }));\n}\n\nexport async function updatePortfolioItem({ id, ...portfolioItem }, store) {\n  return await portfolioItemApi.updatePortfolioItem(\n    id,\n    sanitizeValues(portfolioItem, 'PortfolioItem', store)\n  );\n}\n\nexport function fetchPortfolioByName(name = '') {\n  return axiosInstance.get(`${CATALOG_API_BASE}/portfolios`, {\n    params: {\n      filter: {\n        name\n      }\n    }\n  });\n}\n\nexport const restorePortfolioItems = (restoreData) =>\n  Promise.all(\n    restoreData.map(({ portfolioItemId, restoreKey }) =>\n      portfolioItemApi.unDeletePortfolioItem(portfolioItemId, {\n        restore_key: restoreKey\n      })\n    )\n  );\n\nexport const copyPortfolio = (portfolioId) =>\n  portfolioApi.postCopyPortfolio(portfolioId);\n\nexport const copyPortfolioItem = (portfolioItemId, copyObject = {}) =>\n  portfolioItemApi.postCopyPortfolioItem(portfolioItemId, copyObject);\n\nexport const uploadPortfolioItemIcon = (portfolioItemId, file, iconId) => {\n  let data = new FormData();\n  data.append('content', file, file.name);\n  if (iconId) {\n    return axiosInstance.patch(`${CATALOG_API_BASE}/icons/${iconId}`, data);\n  }\n\n  data.append('portfolio_item_id', portfolioItemId);\n  return axiosInstance.post(`${CATALOG_API_BASE}/icons`, data, {\n    headers: {\n      accept: 'application/json',\n      'Content-Type': `multipart/form-data; boundary=${data._boundary}`\n    }\n  });\n};\n\nexport const getPortfolioItemDetail = (params) =>\n  Promise.all([\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/portfolio_items/${params.portfolioItem}`\n    ),\n    axiosInstance.get(`${CATALOG_API_BASE}/portfolios/${params.portfolio}`),\n    axiosInstance.get(`${SOURCES_API_BASE}/sources/${params.source}`)\n  ]);\n\nexport const getPortfolioFromState = (portfolioReducer, portfolioId) =>\n  portfolioReducer.selectedPortfolio &&\n  portfolioReducer.selectedPortfolio.id === portfolioId\n    ? portfolioReducer.selectedPortfolio\n    : portfolioReducer.portfolios.data.find(({ id }) => id === portfolioId);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport clsx from 'clsx';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport CatalogBreadcrumbs from '../../smart-components/common/catalog-breadcrumbs';\n\nconst TopToolbar = ({\n  children,\n  paddingBottom,\n  breadcrumbs,\n  breadcrumbsSpacing,\n  ...rest\n}) => (\n  <div\n    className={`pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${\n      paddingBottom ? 'pf-u-pb-lg' : ''\n    } top-toolbar`}\n    {...rest}\n  >\n    {breadcrumbs && (\n      <div className=\"pf-u-mb-md\">\n        {' '}\n        <CatalogBreadcrumbs />\n      </div>\n    )}\n    {children}\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  paddingBottom: PropTypes.bool,\n  breadcrumbs: PropTypes.bool,\n  breadcrumbsSpacing: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: true,\n  breadcrumbs: true\n};\n\nexport default TopToolbar;\n\nexport const TopToolbarTitle = ({\n  title,\n  description,\n  children,\n  noData,\n  ...rest\n}) => (\n  <Fragment>\n    <Level\n      className={clsx('top-toolbar-title-container', {\n        'pf-u-mb-lg': !noData\n      })}\n      {...rest}\n    >\n      <LevelItem>\n        <TextContent className=\"top-toolbar-title\">\n          <Text component={TextVariants.h2} className=\"pf-u-m-0 pf-u-mr-md\">\n            {title}\n          </Text>\n          {description && (\n            <Text\n              className=\"top-toolbar-title-description\"\n              component={TextVariants.p}\n            >\n              {description}\n            </Text>\n          )}\n        </TextContent>\n      </LevelItem>\n      {children}\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  noData: PropTypes.bool\n};\n\nTopToolbarTitle.defaultProps = {\n  title: <ToolbarTitlePlaceholder />\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation } from 'react-router-dom';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nconst AppTabs = ({ tabItems }) => {\n  const { push } = useEnhancedHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) =>\n    push({ pathname: tabItems[tabIndex].name, search });\n\n  return (\n    <Tabs\n      activeKey={activeTab ? activeTab.eventKey : 0}\n      onSelect={handleTabClick}\n    >\n      {tabItems.map((item) => (\n        <Tab\n          title={item.title}\n          key={item.eventKey}\n          eventKey={item.eventKey}\n          name={item.name}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default AppTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ContentGalleryEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <div className=\"pf-u-mt-xl\">\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={Icon} />\n      <TextContent>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </TextContent>\n      <EmptyStateBody>\n        {description}\n        {renderDescription()}\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        {PrimaryAction && <PrimaryAction />}\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </div>\n);\n\nContentGalleryEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nContentGalleryEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default ContentGalleryEmptyState;\n\nexport const EmptyStatePrimaryAction = ({ url, label }) => (\n  <CatalogLink pathname={url} preserveSearch>\n    <Button variant=\"primary\">{label}</Button>\n  </CatalogLink>\n);\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport { Text, TextVariants, Gallery } from '@patternfly/react-core';\n\nimport { CardLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst NoItems = () => (\n  <div>\n    <Text component={TextVariants.h1}>No items found</Text>\n  </div>\n);\n\nconst ContentGallery = ({ isLoading, items, renderEmptyState }) =>\n  isLoading ? (\n    <CardLoader />\n  ) : items.length === 0 ? (\n    renderEmptyState ? (\n      renderEmptyState()\n    ) : (\n      <NoItems />\n    )\n  ) : (\n    <Section type=\"content\">\n      <Gallery gutter=\"md\" className=\"content-gallery\">\n        {items}\n      </Gallery>\n    </Section>\n  );\n\nContentGallery.propTypes = {\n  isLoading: PropTypes.bool,\n  items: PropTypes.array,\n  renderEmptyState: PropTypes.func\n};\nexport default ContentGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ItemDetails = ({ toDisplay = [], ...item }) =>\n  toDisplay.map((prop) => (\n    <div className=\"card-prop-text\" key={`card-prop-${prop}`}>\n      {item[prop]}\n    </div>\n  ));\n\nItemDetails.propTypes = {\n  toDisplay: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.arrayOf(PropTypes.node)\n    ])\n  )\n};\n\nItemDetails.defaultProps = {\n  toDisplay: []\n};\n\nexport default ItemDetails;\n","import { toolbarComponentTypes } from './toolbar-mapper';\n\nexport const createSingleItemGroup = ({\n  groupName,\n  hidden = false,\n  ...item\n}) => ({\n  component: toolbarComponentTypes.TOOLBAR_GROUP,\n  key: `${groupName}/single-toolbar-item-group`,\n  fields: hidden\n    ? []\n    : [\n        {\n          component: toolbarComponentTypes.TOOLBAR_ITEM,\n          key: `${groupName}/single-toolbar-item`,\n          fields: [item]\n        }\n      ]\n});\n\nexport const createLinkButton = ({ pathname, preserveSearch, ...item }) => ({\n  component: toolbarComponentTypes.LINK,\n  pathname,\n  preserveSearch,\n  key: `${item.key}/button-link`,\n  className: item.isDisabled ? 'disabled-link' : '',\n  fields: [\n    {\n      component: toolbarComponentTypes.BUTTON,\n      ...item\n    }\n  ]\n});\n"],"sourceRoot":""}