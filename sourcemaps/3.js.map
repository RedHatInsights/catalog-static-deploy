{"version":3,"sources":["webpack:///./src/Helpers/Order/OrderHelper.js","webpack:///./src/PresentationalComponents/Platform/platformcard.scss","webpack:///./src/PresentationalComponents/Shared/ImageWithDefault.js","webpack:///./src/SmartComponents/Common/MainModal.js","webpack:///./src/SmartComponents/Common/ModalTypes.js","webpack:///./src/SmartComponents/Common/OrderModal.js","webpack:///./src/SmartComponents/Order/OrderServiceFormConstants.js","webpack:///./src/SmartComponents/Order/OrderServiceFormStepConfiguration.js","webpack:///./src/SmartComponents/Order/OrderServiceFormStepInformation.js","webpack:///./src/SmartComponents/Order/orderservice.scss","webpack:///./src/Utilities/jschema.scss","webpack:///./src/assets/images/vendor-openshift.svg","webpack:///./src/redux/Actions/OrderActions.js"],"names":["api","ServicePortalApi","sspDefaultClient","instance","basePath","SERVICE_PORTAL_API_BASE","getServicePlans","portfolioItemId","fetchPlansWithPortfolioItemId","listOrders","sendSubmitOrder","parameters","newOrder","order","orderItem","count","provider_control_parameters","namespace","portfolio_item_id","service_plan_ref","service_parameters","addToOrder","id","submitOrder","ImageWithDefault","src","props","propTypes","string","isRequired","MODAL_TYPES","modalTypes","orderModal","mapStateToProps","mainModalReducer","MainModalContainer","state","modalIsOpen","closeModal","bind","nextProps","setState","modalProps","open","modalType","SpecifiedModal","title","React","Component","PropTypes","shape","bool","func","node","connect","OrderModal","serviceData","activeStepIndex","prevState","componentPage","StepComponent","showOrder","steps","OrderServiceFormSteps","servicedata","imageUrl","CatItemSvg","name","renderStepPage","page","length","onNext","orderData","object","stepParametersValid","fulfilled","error","orderReducer","isLoading","selectedItem","servicePlans","step","label","OrderServiceFormStepInformation","subSteps","OrderServiceFormStepConfiguration","selectedPlanIdx","plan","option","selectedId","onChange","description","arg","event","planId","currentTarget","value","findIndex","handlePlanChange","map","optionRow","data","service_plan_id","hideModal","fetchPlans","console","log","planOptions","create_json_schema","onSubmit","array","defaultProps","mapDispatchToProps","dispatch","fetchServicePlans","type","ActionTypes","payload","OrderHelper","fetchOrderList","then","updateServiceData","setSelectedPlan","apiProps"],"mappings":"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","file":"js/3.js","sourcesContent":["/* eslint camelcase: 0 */\nimport * as ServicePortalApi from '@manageiq/service-portal-api';\nimport { SERVICE_PORTAL_API_BASE } from '../../Utilities/Constants';\n\nlet api = new ServicePortalApi.AdminsApi();\n\nconst sspDefaultClient = ServicePortalApi.ApiClient.instance;\nsspDefaultClient.basePath = SERVICE_PORTAL_API_BASE;\n\nexport function getServicePlans(portfolioItemId) {\n  return api.fetchPlansWithPortfolioItemId(portfolioItemId);\n}\n\nexport function listOrders() {\n  return api.listOrders();\n}\n\nexport async function sendSubmitOrder(parameters) {\n  let order = await api.newOrder();\n  let orderItem = new ServicePortalApi.OrderItem;\n  orderItem.count = 1;\n  orderItem.provider_control_parameters =  { namespace: 'default' };\n  orderItem.portfolio_item_id = parameters.portfolio_item_id;\n  orderItem.service_plan_ref = parameters.service_plan_ref;\n  orderItem.service_parameters = parameters.service_parameters;\n  await api.addToOrder(order.id, orderItem);\n  return api.submitOrder(order.id);\n}\n","// extracted by mini-css-extract-plugin","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst ImageWithDefault = ({ src, ...props }) => <img src={ src } { ...props } />;\n\nImageWithDefault.propTypes = {\n  src: propTypes.string.isRequired\n};\n\nexport default ImageWithDefault;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Modal } from '@patternfly/react-core';\n\nimport { default as modalTypes } from './ModalTypes';\n\n// why ???\nconst MODAL_TYPES = {\n  order: modalTypes.orderModal\n};\n\nconst mapStateToProps = ({ mainModalReducer }) => ({ ...mainModalReducer });\n\n// TO DO define hide on click outside the model\nclass MainModalContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalIsOpen: false\n    };\n    // transform class properties\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps !== this.props) {\n      this.setState({\n        modalIsOpen: nextProps.modalProps.open\n      });\n    }\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n    this.props.modalProps.closeModal();\n  }\n\n  render() {\n    if (!this.props.modalType) {\n      // why? this should fail, should be required props oneOf\n      return null;\n    }\n\n    const SpecifiedModal = MODAL_TYPES[this.props.modalType];\n    return (\n      <div>\n        <Modal isOpen={ this.props.modalProps.open }\n          id='mainModal' title={ this.props.title || '' }\n          className=\"modal-dialog modal-lg\"\n          onClose={ this.closeModal }>\n          <SpecifiedModal\n            closeModal={ this.closeModal }\n            { ...this.props.modalProps }\n          />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nMainModalContainer.propTypes = {\n  modalProps: PropTypes.shape({\n    open: PropTypes.bool,\n    closeModal: PropTypes.func.isRequired\n  }).isRequired,\n  modalType: PropTypes.node,\n  title: PropTypes.string\n};\n\nexport default connect(mapStateToProps)(MainModalContainer);\n","import orderModal from './OrderModal';\n\n// not type but some mappers\nconst modalTypes = {\n  orderModal\n};\n\nexport default modalTypes;\n","import React, { Component } from 'react';\nimport { Button, CardHeader } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport '../Order/orderservice.scss';\nimport propTypes from 'prop-types';\nimport { OrderServiceFormSteps } from '../Order/OrderServiceFormConstants';\nimport CatItemSvg from '../../assets/images/vendor-openshift.svg';\nimport ImageWithDefault from '../../PresentationalComponents/Shared/ImageWithDefault';\n\nclass OrderModal extends Component {\n  state = {\n    serviceData: {},\n    activeStepIndex: 0\n  };\n\n  onNext = () => this.setState((prevState) => ({ activeStepIndex: prevState.activeStepIndex + 1 }));\n\n  renderStepPage = (componentPage, props) => {\n    const StepComponent = componentPage;\n    return (<StepComponent { ...props } />);\n  };\n\n  render() {\n    const showOrder = this.props.open;\n\n    if (!showOrder) {\n      return null;\n    }\n\n    const { activeStepIndex } = this.state;\n    const steps = OrderServiceFormSteps;\n\n    return (\n      <React.Fragment>\n        <CardHeader className=\"order_header\">\n          <ImageWithDefault src = { this.props.servicedata.imageUrl || CatItemSvg } width=\"40\" />\n          { this.props.servicedata.name }\n        </CardHeader>\n        { this.renderStepPage(steps[activeStepIndex].page, this.props.servicedata) }\n        { (activeStepIndex < steps.length - 1) &&\n            <Button variant=\"primary\" aria-label=\"Order portfolio item\" onClick={ this.onNext }>\n              Order\n            </Button>\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nOrderModal.propTypes = {\n  orderData: propTypes.func,\n  showOrder: propTypes.bool,\n  servicedata: propTypes.object,\n  stepParametersValid: propTypes.bool,\n  fulfilled: propTypes.bool,\n  error: propTypes.bool,\n  open: propTypes.bool\n};\n\nconst mapStateToProps = ({ orderReducer: { isLoading, selectedItem, servicePlans }}) => ({\n  isLoading,\n  selectedItem,\n  servicePlans\n});\n\nexport default connect(mapStateToProps)(OrderModal);\n","import OrderServiceFormStepInformation from './OrderServiceFormStepInformation';\nimport OrderServiceFormStepConfiguration from './OrderServiceFormStepConfiguration';\n\nconst OrderServiceFormSteps = [\n  {\n    step: 1,\n    label: '1',\n    title: 'Information',\n    page: OrderServiceFormStepInformation,\n    subSteps: []\n  },\n  {\n    step: 2,\n    label: '2',\n    title: 'Configuration',\n    page: OrderServiceFormStepConfiguration,\n    subSteps: []\n  }\n];\n\nexport { OrderServiceFormSteps };\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Bullseye, Radio, Form, Title, Stack, StackItem } from '@patternfly/react-core';\nimport '../../Utilities/jschema.scss';\nimport { fetchServicePlans, sendSubmitOrder } from '../../redux/Actions/OrderActions';\nimport FormRenderer from '../Common/FormRenderer';\n\nclass OrderServiceFormStepConfiguration extends React.Component {\n  state = {\n    showOrder: false,\n    selectedPlanIdx: 0\n  };\n\n  optionRow = (plan, option, selectedId, onChange) =>\n    <Radio id={ plan.id }\n      key={ plan.id }\n      value={ plan.id }\n      checked={ selectedId === plan.id }\n      name={ plan.name }\n      aria-label={ plan.description }\n      onChange={ onChange }\n      label={ plan.description } />;\n\n  componentDidMount() {\n    const { id } = this.props;\n    this.props.fetchPlans(id);\n  }\n\n  handlePlanChange = (arg, event) =>  {\n    const planId = event.currentTarget.value;\n    this.setState({ selectedPlanIdx: this.props.servicePlans.findIndex(plan=> plan.id === planId) });\n  };\n\n  planOptions = () => {\n    let selectedId = this.props.servicePlans[this.state.selectedPlanIdx].id;\n    let onChange = this.handlePlanChange;\n\n    return this.props.servicePlans.map((plan, option) => this.optionRow(plan, option, selectedId, onChange));\n  }\n\n  onSubmit = (data) => {\n    const portfolioItemId = this.props.id;\n    const service_plan_id = this.props.servicePlans[this.state.selectedPlanIdx].id;\n    this.props.sendSubmitOrder({ portfolio_item_id: portfolioItemId, service_plan_ref: service_plan_id, service_parameters: data });\n    this.props.hideModal();\n  };\n\n  render() {\n    console.log('service plan', this.props);\n    if (!this.props.isLoading) {\n      return (\n        <React.Fragment>\n          <Stack gutter={ 'md' } className=\"order_card\">\n            <StackItem>\n              <Title size={ 'lg' } > Configuration </Title>\n            </StackItem>\n            <StackItem>\n              <Form>\n                { (this.props.servicePlans.length > 1) &&\n                        <div>\n                          <Title size={ 'md' }>Select Plan:</Title>\n                          <div>{ this.planOptions() }</div>\n                        </div>\n                }\n                { (!this.props.isLoading && this.props.servicePlans.length > 0) &&\n                  <FormRenderer\n                    schema={ this.props.servicePlans[this.state.selectedPlanIdx].create_json_schema }\n                    onSubmit={ this.onSubmit }\n                    schemaType=\"mozilla\"\n                    formContainer=\"modal\"\n                  />\n                }\n              </Form>\n            </StackItem>\n          </Stack>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <Form>\n        <Bullseye>\n          <div>\n            { this.props.isLoading && (<span color={ '#00b9e4' }> Loading...</span>) }\n          </div>\n        </Bullseye>\n      </Form>\n    );\n  }\n}\n\nOrderServiceFormStepConfiguration.propTypes = {\n  orderData: propTypes.func,\n  fetchPlans: propTypes.func,\n  hideModal: propTypes.func,\n  showOrder: propTypes.bool,\n  isLoading: propTypes.bool,\n  serviceData: propTypes.object,\n  servicePlans: propTypes.array,\n  stepParametersValid: propTypes.bool,\n  fulfilled: propTypes.bool,\n  error: propTypes.bool,\n  imageUrl: propTypes.string,\n  id: propTypes.string,\n  name: propTypes.string,\n  sendSubmitOrder: propTypes.func.isRequired\n};\n\nOrderServiceFormStepConfiguration.defaultProps = {\n  servicePlans: []\n};\n\nconst mapStateToProps = ({ orderReducer: { isLoading, servicePlans }}) => ({\n  isLoading,\n  servicePlans\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPlans: (portfolioItemId) => dispatch(fetchServicePlans(portfolioItemId)),\n  sendSubmitOrder: data => dispatch(sendSubmitOrder(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderServiceFormStepConfiguration);\n","import React from 'react';\nimport { CardBody } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './orderservice.scss';\n\nclass OrderServiceFormStepInformation extends React.Component {\n  state = {\n    showOrder: false,\n    activeStepIndex: 0,\n    stepParametersValid: false\n  };\n\n  render() {\n    return (\n      <CardBody className=\"order_card\">\n        { this.props.description }\n      </CardBody>\n    );\n  }\n}\n\nOrderServiceFormStepInformation.propTypes = {\n  orderData: propTypes.func,\n  showOrder: propTypes.bool,\n  serviceData: propTypes.object,\n  stepParametersValid: propTypes.bool,\n  fulfilled: propTypes.bool,\n  error: propTypes.bool,\n  imageUrl: propTypes.string,\n  description: propTypes.string,\n  name: propTypes.string\n};\n\nconst mapStateToProps = ({ orderReducer: { serviceData }}) => ({ serviceData });\n\nexport default connect(mapStateToProps)(OrderServiceFormStepInformation);\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","module.exports = __webpack_public_path__ + \"fonts/vendor-openshift.svg\";","import * as ActionTypes from '../ActionTypes';\nimport * as OrderHelper from '../../Helpers/Order/OrderHelper';\n\nexport const fetchServicePlans = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_SERVICE_PLANS,\n  payload: OrderHelper.getServicePlans(portfolioItemId)\n});\n\nexport const fetchOrderList = () => ({\n  type: ActionTypes.LIST_ORDERS,\n  payload: OrderHelper.listOrders().then(({ data }) => data)\n});\n\nexport const updateServiceData = (data) => ({\n  type: ActionTypes.UPDATE_SERVICE_DATA,\n  payload: { serviceData: data }\n});\n\nexport const setSelectedPlan = (data) => ({\n  type: ActionTypes.SET_SELECTED_PLAN,\n  payload: data\n});\n\nexport const sendSubmitOrder = apiProps => ({\n  type: ActionTypes.SUBMIT_SERVICE_ORDER,\n  payload: OrderHelper.sendSubmitOrder(apiProps)\n});\n"],"sourceRoot":""}