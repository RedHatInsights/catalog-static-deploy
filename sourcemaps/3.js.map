{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/extends.js","webpack:///./src/Helpers/Shared/helpers.js","webpack:///./src/PresentationalComponents/Platform/PlatformItem.js","webpack:///./src/PresentationalComponents/Platform/PlatformToolbar.js","webpack:///./src/PresentationalComponents/Platform/platformcard.scss","webpack:///./src/PresentationalComponents/Shared/CardCheckbox.js","webpack:///./src/PresentationalComponents/Shared/CardCommon.js","webpack:///./src/PresentationalComponents/Shared/ImageWithDefault.js","webpack:///./src/SmartComponents/ContentGallery/ContentGallery.js","webpack:///./src/SmartComponents/ContentGallery/content-gallery.scss","webpack:///./src/SmartComponents/Platform/Platform.js","webpack:///./src/SmartComponents/Platform/platform.scss","webpack:///./src/assets/images/vendor-openshift.svg"],"names":["scrollToTop","document","getElementById","scrollTo","behavior","top","left","TO_DISPLAY","PlatformItem","isOpen","props","id","imageUrl","CatItemSvg","editMode","checked","onToggleItemSelect","name","React","Component","propTypes","string","bool","func","PlatformToolbar","searchValue","backgroundColor","CardCheckbox","type","onChange","float","PropTypes","isRequired","PropLine","value","oneOfType","number","arrayOf","node","ItemDetails","toDisplay","item","map","prop","defaultProps","ImageWithDefault","src","ContentGallery","isLoading","items","length","array","Platform","platformId","filteredItems","apiProps","fetchSelectedPlatform","fetchPlatformItems","fetchData","match","params","prevProps","platformItems","data","isPlatformDataLoading","title","platform","marginLeft","paddingLeft","paddingTop","mapStateToProps","platformReducer","selectedPlatform","mapDispatchToProps","dispatch","object","shape","connect"],"mappings":";;;;;;;;;AAAA;AACA;AACA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,0B;;;;;;;;;;;;AClBA;AAAA;AAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAMC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,QAAhC,CAAyC;AACxEC,YAAQ,EAAE,QAD8D;AAExEC,OAAG,EAAE,CAFmE;AAGxEC,QAAI,EAAE;AAHkE,GAAzC,CAAN;AAAA,CAApB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMC,UAAU,GAAG,CAAE,aAAF,CAAnB;;IAEMC,Y;;;;;;;;;;;;;;;;;;2QACM;AACNC,YAAM,EAAE;AADF,K;;;;;;;6BAIC;AACP,aACE,2DAAC,gEAAD;AAAU,WAAG,EAAG,KAAKC,KAAL,CAAWC,EAA3B;AAAgC,UAAE,EAAG,CAArC;AAAyC,UAAE,EAAG,CAA9C;AAAkD,UAAE,EAAG,CAAvD;AAA2D,UAAE,EAAG;AAAhE,SACE,2DAAC,4DAAD;AAAM,WAAG,EAAG,KAAKD,KAAL,CAAWC;AAAvB,SACE,2DAAC,kEAAD;AAAY,iBAAS,EAAC;AAAtB,SACE,2DAAC,iEAAD;AAAkB,WAAG,EAAG,KAAKD,KAAL,CAAWE,QAAX,IAAuBC,2EAA/C;AAA4D,aAAK,EAAC,IAAlE;AAAuE,cAAM,EAAC;AAA9E,QADF,EAEI,KAAKH,KAAL,CAAWI,QAAX,IACA,2DAAC,6DAAD;AACE,UAAE,EAAG,KAAKJ,KAAL,CAAWC,EADlB;AAEE,eAAO,EAAG,KAAKD,KAAL,CAAWK,OAFvB;AAGE,gBAAQ,EAAG,KAAKL,KAAL,CAAWM;AAHxB,QAHJ,CADF,EAWE,2DAAC,gEAAD;AAAU,iBAAS,EAAC;AAApB,SACE,uEAAM,KAAKN,KAAL,CAAWO,IAAjB,CADF,EAEE,2DAAC,oFAAD,4EAAkB,KAAKP,KAAvB;AAA+B,iBAAS,EAAGH;AAA3C,SAFF,CAXF,EAeE,2DAAC,kEAAD,OAfF,CADF,CADF;AAqBD;;;;EA3BsBW,4CAAK,CAACC,S;;AA8BjCX,YAAY,CAACY,SAAb,GAAyB;AACvBR,UAAQ,EAAEQ,kDAAS,CAACC,MADG;AAEvBV,IAAE,EAAES,kDAAS,CAACC,MAFS;AAGvBJ,MAAI,EAAEG,kDAAS,CAACC,MAHO;AAIvBP,UAAQ,EAAEM,kDAAS,CAACE,IAJG;AAKvBP,SAAO,EAAEK,kDAAS,CAACE,IALI;AAMvBN,oBAAkB,EAAEI,kDAAS,CAACG;AANP,CAAzB;AASef,2EAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AAEA;;;;IAGMgB,e;;;;;;;;;;;;;;;;;;2QACM;AACNC,iBAAW,EAAE;AADP,K;;;;;;;6BAIC;AACP,aACE,2DAAC,8DAAD;AAAS,aAAK,EAAG;AAAEC,yBAAe,EAAE;AAAnB;AAAjB,SACE,2DAAC,mEAAD;AAAc,iBAAS,EAAG;AAA1B,SACE,2DAAC,kEAAD;AAAa,iBAAS,EAAG;AAAzB,SACE;AAAK,iBAAS,EAAC;AAAf,SACE;AAAO,iBAAS,EAAC,mBAAjB;AACE,aAAK,EAAC,MADR;AACe,YAAI,EAAC,MADpB;AAC2B,UAAE,EAAC,YAD9B;AAEE,YAAI,EAAC,qBAFP;AAGE,mBAAW,EAAC,WAHd;AAIE,sBAAW;AAJb,QADF,EAOE,2DAAC,6DAAD;AAAQ,eAAO,EAAC,UAAhB;AAA2B,UAAE,EAAC;AAA9B,SACE;AAAG,iBAAS,EAAC,eAAb;AAA6B,uBAAY;AAAzC,QADF,CAPF,CADF,CADF,CADF,CADF;AAkBD;;;;EAxByBP,+C;;AAyB7B;AAEcK,8EAAf,E;;;;;;;;;;;ACjCA,uC;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA,IAAMG,YAAY,GAAG,SAAfA,YAAe;AAAA,uBAAGC,IAAH;AAAA,MAAGA,IAAH,0BAAU,UAAV;AAAA,MAAsBjB,EAAtB,QAAsBA,EAAtB;AAAA,MAA0BkB,QAA1B,QAA0BA,QAA1B;AAAA,0BAAoCd,OAApC;AAAA,MAAoCA,OAApC,6BAA8C,KAA9C;AAAA,SACnB;AAAK,SAAK,EAAG;AAAEe,WAAK,EAAE;AAAT;AAAb,KACE;AACE,QAAI,EAAGF,IADT;AAEE,MAAE,EAAKjB,EAFT;AAGE,WAAO,EAAGI,OAHZ;AAIE,YAAQ,EAAGc,QAJb;AAKE,kBAAW;AALb,IADF,CADmB;AAAA,CAArB;;AAYAF,YAAY,CAACP,SAAb,GAAyB;AACvBQ,MAAI,EAAEG,iDAAS,CAACV,MADO;AAEvBV,IAAE,EAAEoB,iDAAS,CAACV,MAAV,CAAiBW,UAFE;AAGvBjB,SAAO,EAAEgB,iDAAS,CAACT,IAHI;AAIvBO,UAAQ,EAAEE,iDAAS,CAACR,IAAV,CAAeS;AAJF,CAAzB;AAOeL,2EAAf,E;;;;;;;;;;;;;;;;;;;;ACtBA;CAGA;;AACA,IAAMM,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAe;AAAK,aAAS,EAAG;AAAjB,KAAkCA,KAAlC,CAAf;AAAA,CAAjB;;AAEAD,QAAQ,CAACb,SAAT,GAAqB;AACnBc,OAAK,EAAEH,iDAAS,CAACI,SAAV,CAAoB,CACzBJ,iDAAS,CAACV,MADe,EAEzBU,iDAAS,CAACK,MAFe,EAGzBL,iDAAS,CAACM,OAAV,CAAkBN,iDAAS,CAACI,SAAV,CAAoB,CACpCJ,iDAAS,CAACM,OAAV,CAAkBN,iDAAS,CAACO,IAA5B,CADoC,EAEpCP,iDAAS,CAACO,IAF0B,CAApB,CAAlB,CAHyB,CAApB,EAOJN;AARgB,CAArB;;AAWA,IAAMO,WAAW,GAAG,SAAdA,WAAc;AAAA,8BAAGC,SAAH;AAAA,MAAGA,SAAH,gCAAe,EAAf;AAAA,MAAsBC,IAAtB;;AAAA,SAClB,wEACID,SAAS,CAACE,GAAV,CAAc,UAAAC,IAAI;AAAA,WAAI,2DAAC,QAAD;AAAU,SAAG,sBAAgBA,IAAhB,CAAb;AAAsC,WAAK,EAAGF,IAAI,CAACE,IAAD;AAAlD,MAAJ;AAAA,GAAlB,CADJ,CADkB;AAAA,CAApB;;AAMAJ,WAAW,CAACnB,SAAZ,GAAwB;AACtBoB,WAAS,EAAET,iDAAS,CAACM,OAAV,CAAkBN,iDAAS,CAACV,MAA5B;AADW,CAAxB;AAIAkB,WAAW,CAACK,YAAZ,GAA2B;AACzBJ,WAAS,EAAE;AADc,CAA3B;AAIeD,0EAAf,E;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;;AAEA,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,GAAH,QAAGA,GAAH;AAAA,MAAWpC,KAAX;;AAAA,SAAuB;AAAK,OAAG,EAAGoC;AAAX,KAAsBpC,KAAtB,EAAvB;AAAA,CAAzB;;AAEAmC,gBAAgB,CAACzB,SAAjB,GAA6B;AAC3B0B,KAAG,EAAE1B,iDAAS,CAACC,MAAV,CAAiBW;AADK,CAA7B;AAIea,+EAAf,E;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;CAGA;;AACA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,OAA0B;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAC/C,MAAID,SAAS,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,MAAhB,IAA0B,CAA3C,EAA8C;AAC5C,WACE,wEACE,sEADF,EAEE,wEACIF,SAAS,IAAK,uFADlB,CAFF,EAKE,2DAAC,sFAAD;AAAS,UAAI,EAAC;AAAd,OACE,2DAAC,2DAAD;AAAM,YAAM,EAAC;AAAb,OACIC,KADJ,CADF,CALF,CADF;AAaD,GAdD,MAeK,IAAI,CAACD,SAAL,EAAgB;AACnB,WACE,2DAAC,sFAAD;AAAS,UAAI,EAAC;AAAd,OACE,uEADF,CADF;AAMD;AACF,CAxBD;;AA0BAD,cAAc,CAAC3B,SAAf,GAA2B;AACzB4B,WAAS,EAAE5B,iDAAS,CAACE,IADI;AAEzB2B,OAAK,EAAE7B,iDAAS,CAAC+B;AAFQ,CAA3B;AAIeJ,6EAAf,E;;;;;;;;;;;ACrCA,uC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMK,Q;;;;;;;;;;;;;;;;;;2QACI;AACNC,gBAAU,EAAE,EADN;AAENC,mBAAa,EAAE;AAFT,K;;;;;;;8BAKEC,Q,EAAU;AAClB,WAAK7C,KAAL,CAAW8C,qBAAX,CAAiCD,QAAjC;AACA,WAAK7C,KAAL,CAAW+C,kBAAX,CAA8BF,QAA9B;AACD;;;wCAEmB;AAClB,WAAKG,SAAL,CAAe,KAAKhD,KAAL,CAAWiD,KAAX,CAAiBC,MAAjB,CAAwBjD,EAAvC;AACAX,kFAAW;AACZ;;;uCAEkB6D,S,EAAW;AAC5B,UAAIA,SAAS,CAACF,KAAV,CAAgBC,MAAhB,CAAuBjD,EAAvB,KAA8B,KAAKD,KAAL,CAAWiD,KAAX,CAAiBC,MAAjB,CAAwBjD,EAA1D,EAA8D;AAC5D,aAAK+C,SAAL,CAAe,KAAKhD,KAAL,CAAWiD,KAAX,CAAiBC,MAAjB,CAAwBjD,EAAvC;AACAX,oFAAW;AACZ;AACF;;;6BAEQ;AACP,UAAIsD,aAAa,GAAG;AAClBL,aAAK,EAAE,KAAKvC,KAAL,CAAWoD,aAAX,CAAyBpB,GAAzB,CAA6B,UAAAqB,IAAI;AAAA,iBAAI,2DAAC,wFAAD;AAAc,eAAG,EAAGA,IAAI,CAACpD;AAAzB,aAAmCoD,IAAnC,EAAJ;AAAA,SAAjC,CADW;AAElBf,iBAAS,EAAE,KAAKtC,KAAL,CAAWsD;AAFJ,OAApB;AAKA,UAAIC,KAAK,GAAG,KAAKvD,KAAL,CAAWwD,QAAX,GAAsB,KAAKxD,KAAL,CAAWwD,QAAX,CAAoBjD,IAA1C,GAAiD,EAA7D;AAEA,aACE,2DAAC,oFAAD;AAAM,aAAK,EAAG;AAAEkD,oBAAU,EAAE,CAAd;AAAiBC,qBAAW,EAAE,CAA9B;AAAiCC,oBAAU,EAAE;AAA7C;AAAd,SACE,2DAAC,2FAAD,OADF,EAEE;AAAK,aAAK,EAAG;AAAEF,oBAAU,EAAE,EAAd;AAAkBE,oBAAU,EAAE;AAA9B;AAAb,SACIJ,KAAK,IAAM,2DAAC,6DAAD;AAAO,YAAI,EAAG;AAAd,cAA0BA,KAA1B,CADf,CAFF,EAKE,2DAAC,uFAAD,EAAqBX,aAArB,CALF,CADF;AASD;;;;EAxCoBnC,+C;;AA2CvB,IAAMmD,eAAe,GAAG,SAAlBA,eAAkB;AAAA,kCAAGC,eAAH;AAAA,MAAsBC,gBAAtB,wBAAsBA,gBAAtB;AAAA,MAAwCV,aAAxC,wBAAwCA,aAAxC;AAAA,MAAuDE,qBAAvD,wBAAuDA,qBAAvD;AAAA,SAAqF;AAC3GE,YAAQ,EAAEM,gBADiG;AAE3GV,iBAAa,EAAEU,gBAAgB,IAAIV,aAAa,CAACU,gBAAgB,CAAC7D,EAAlB,CAF2D;AAG3GqD,yBAAqB,EAAE,CAACQ,gBAAD,IAAqBR;AAH+D,GAArF;AAAA,CAAxB;;AAMA,IAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtClB,yBAAqB,EAAE,+BAAAH,UAAU;AAAA,aAAIqB,QAAQ,CAAClB,6FAAqB,CAACH,UAAD,CAAtB,CAAZ;AAAA,KADK;AAEtCI,sBAAkB,EAAE,4BAAAF,QAAQ;AAAA,aAAImB,QAAQ,CAACjB,0FAAkB,CAACF,QAAD,CAAnB,CAAZ;AAAA;AAFU,GAAL;AAAA,CAAnC;;AAKAH,QAAQ,CAAChC,SAAT,GAAqB;AACnBkC,eAAa,EAAEvB,kDAAS,CAAC4C,MADN;AAEnBX,uBAAqB,EAAEjC,kDAAS,CAACT,IAFd;AAGnBqC,OAAK,EAAE5B,kDAAS,CAAC4C,MAHE;AAInBlB,oBAAkB,EAAE1B,kDAAS,CAACR,IAAV,CAAeS,UAJhB;AAKnBwB,uBAAqB,EAAEzB,kDAAS,CAACR,IALd;AAMnB2C,UAAQ,EAAEnC,kDAAS,CAAC6C,KAAV,CAAgB;AACxB3D,QAAI,EAAEc,kDAAS,CAACV;AADQ,GAAhB,CANS;AASnByC,eAAa,EAAE/B,kDAAS,CAACoB;AATN,CAArB;AAYAC,QAAQ,CAACR,YAAT,GAAwB;AACtBkB,eAAa,EAAE;AADO,CAAxB;AAIee,0HAAO,CAACP,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrB,QAA7C,CAAf,E;;;;;;;;;;;AClFA,uC;;;;;;;;;;;ACAA,iBAAiB,qBAAuB,gC","file":"js/3.js","sourcesContent":["function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","export const scrollToTop = () => document.getElementById('root').scrollTo({\n  behavior: 'smooth',\n  top: 0,\n  left: 0\n});\n","import React from 'react';\nimport './platformcard.scss';\nimport propTypes from 'prop-types';\nimport CatItemSvg from '../../assets/images/vendor-openshift.svg';\nimport ImageWithDefault from '../Shared/ImageWithDefault';\nimport { GridItem, Card, CardHeader, CardBody, CardFooter } from '@patternfly/react-core';\nimport ItemDetails from '../../PresentationalComponents/Shared/CardCommon';\nimport CardCheckbox from '../Shared/CardCheckbox';\n\nconst TO_DISPLAY = [ 'description' ];\n\nclass PlatformItem extends React.Component {\n    state = {\n      isOpen: true\n    };\n\n    render() {\n      return (\n        <GridItem key={ this.props.id } sm={ 6 } md={ 4 } lg={ 4 } xl={ 3 }>\n          <Card key={ this.props.id }>\n            <CardHeader className=\"pcard_header\">\n              <ImageWithDefault src={ this.props.imageUrl || CatItemSvg } width=\"30\" height=\"20\" />\n              { this.props.editMode && (\n                <CardCheckbox\n                  id={ this.props.id }\n                  checked={ this.props.checked }\n                  onChange={ this.props.onToggleItemSelect }\n                />\n              ) }\n            </CardHeader>\n            <CardBody className=\"pcard_body\">\n              <h4>{ this.props.name }</h4>\n              <ItemDetails { ...this.props } toDisplay={ TO_DISPLAY } />\n            </CardBody>\n            <CardFooter/>\n          </Card>\n        </GridItem>\n      );\n    };\n}\n\nPlatformItem.propTypes = {\n  imageUrl: propTypes.string,\n  id: propTypes.string,\n  name: propTypes.string,\n  editMode: propTypes.bool,\n  checked: propTypes.bool,\n  onToggleItemSelect: propTypes.func\n};\n\nexport default PlatformItem;\n","import React, { Component } from 'react';\nimport { Toolbar, ToolbarGroup, ToolbarItem, Button } from '@patternfly/react-core';\n\n/**\n * TODO Use PF4 input components\n */\nclass PlatformToolbar extends Component {\n    state = {\n      searchValue: ''\n    };\n\n    render() {\n      return (\n        <Toolbar style={ { backgroundColor: '#FFFFFF' } }>\n          <ToolbarGroup className={ 'pf-u-ml-on-md' }>\n            <ToolbarItem className={ 'pf-u-ml-sm pf-u-my-sm' }>\n              <div className=\"pf-c-input-group\">\n                <input className=\"pf-c-form-control\"\n                  input=\"true\" type=\"text\" id=\"searchItem\"\n                  name=\"searchPlatformItems\"\n                  placeholder=\"Filter...\"\n                  aria-label=\"filter input with platform button\"\n                />\n                <Button variant=\"tertiary\" id=\"filterPlatformButton\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\n                </Button>\n              </div>\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>);\n    };\n};\n\nexport default PlatformToolbar;\n","// extracted by mini-css-extract-plugin","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CardCheckbox = ({ type = 'checkbox', id, onChange, checked = false }) => (\n  <div style={ { float: 'right' } }>\n    <input\n      type={ type }\n      id = { id }\n      checked={ checked }\n      onChange={ onChange }\n      aria-label=\"card checkbox\"\n    />\n  </div>\n);\n\nCardCheckbox.propTypes = {\n  type: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default CardCheckbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// This whole thing is a bit strange\nconst PropLine = ({ value }) => <div className = \"card_element\">{ value }</div>;\n\nPropLine.propTypes = {\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node\n    ]))\n  ]).isRequired\n};\n\nconst ItemDetails = ({ toDisplay = [], ...item }) => (\n  <div>\n    { toDisplay.map(prop => <PropLine key={ `card-prop-${prop}` } value={ item[prop] } />) }\n  </div>\n);\n\nItemDetails.propTypes = {\n  toDisplay: PropTypes.arrayOf(PropTypes.string)\n};\n\nItemDetails.defaultProps = {\n  toDisplay: []\n};\n\nexport default ItemDetails;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst ImageWithDefault = ({ src, ...props }) => <img src={ src } { ...props } />;\n\nImageWithDefault.propTypes = {\n  src: propTypes.string.isRequired\n};\n\nexport default ImageWithDefault;\n","import React from 'react';\nimport './content-gallery.scss';\nimport propTypes from 'prop-types';\nimport { Section } from '@red-hat-insights/insights-frontend-components';\nimport { Grid } from '@patternfly/react-core';\n\n// swap loading?\nconst ContentGallery = ({ isLoading, items }) => {\n  if (isLoading || (items && items.length) > 0) {\n    return (\n      <div>\n        <br />\n        <div>\n          { isLoading && (<span> Loading...</span>) }\n        </div>\n        <Section type='content'>\n          <Grid gutter='md' >\n            { items }\n          </Grid>\n        </Section>\n      </div>\n    );\n  }\n  else if (!isLoading) {\n    return (\n      <Section type='content'>\n        <div>\n        </div>\n      </Section>\n    );\n  }\n};\n\nContentGallery.propTypes = {\n  isLoading: propTypes.bool,\n  items: propTypes.array\n};\nexport default ContentGallery;\n","// extracted by mini-css-extract-plugin","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { Main } from '@red-hat-insights/insights-frontend-components';\nimport { fetchSelectedPlatform, fetchPlatformItems } from '../../redux/Actions/PlatformActions';\nimport ContentGallery from '../../SmartComponents/ContentGallery/ContentGallery';\nimport PlatformToolbar from '../../PresentationalComponents/Platform/PlatformToolbar';\nimport PlatformItem from '../../PresentationalComponents/Platform/PlatformItem';\nimport { scrollToTop } from '../../Helpers/Shared/helpers';\nimport './platform.scss';\n\nclass Platform extends Component {\n  state = {\n    platformId: '',\n    filteredItems: []\n  };\n\n  fetchData(apiProps) {\n    this.props.fetchSelectedPlatform(apiProps);\n    this.props.fetchPlatformItems(apiProps);\n  }\n\n  componentDidMount() {\n    this.fetchData(this.props.match.params.id);\n    scrollToTop();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      this.fetchData(this.props.match.params.id);\n      scrollToTop();\n    }\n  }\n\n  render() {\n    let filteredItems = {\n      items: this.props.platformItems.map(data => <PlatformItem key={ data.id } { ...data } />),\n      isLoading: this.props.isPlatformDataLoading\n    };\n\n    let title = this.props.platform ? this.props.platform.name : '';\n\n    return (\n      <Main style={ { marginLeft: 0, paddingLeft: 0, paddingTop: 0 } }>\n        <PlatformToolbar/>\n        <div style={ { marginLeft: 25, paddingTop: 40 } }>\n          { title &&  (<Title size={ '2xl' } > { title }</Title>) }\n        </div>\n        <ContentGallery { ...filteredItems }/>\n      </Main>\n    );\n  }\n}\n\nconst mapStateToProps = ({ platformReducer: { selectedPlatform, platformItems, isPlatformDataLoading }}) => ({\n  platform: selectedPlatform,\n  platformItems: selectedPlatform && platformItems[selectedPlatform.id],\n  isPlatformDataLoading: !selectedPlatform || isPlatformDataLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchSelectedPlatform: platformId => dispatch(fetchSelectedPlatform(platformId)),\n  fetchPlatformItems: apiProps => dispatch(fetchPlatformItems(apiProps))\n});\n\nPlatform.propTypes = {\n  filteredItems: PropTypes.object,\n  isPlatformDataLoading: PropTypes.bool,\n  match: PropTypes.object,\n  fetchPlatformItems: PropTypes.func.isRequired,\n  fetchSelectedPlatform: PropTypes.func,\n  platform: PropTypes.shape({\n    name: PropTypes.string\n  }),\n  platformItems: PropTypes.array\n};\n\nPlatform.defaultProps = {\n  platformItems: []\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Platform);\n","// extracted by mini-css-extract-plugin","module.exports = __webpack_public_path__ + \"fonts/vendor-openshift.svg\";"],"sourceRoot":""}