{"version":3,"sources":["webpack:///./node_modules/@redhat-cloud-services/approval-client/dist/index.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/index.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/defaults.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/core/createError.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/core/mergeConfig.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/cancel/Cancel.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/utils.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/dist/api.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/axios.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/core/settle.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/core/buildFullPath.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/node_modules/axios/lib/helpers/spread.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/dist/base.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/dist/configuration.js","webpack:///./node_modules/@redhat-cloud-services/catalog-client/dist/configuration.js","webpack:///./node_modules/@redhat-cloud-services/catalog-client/dist/index.js"],"names":["__export","m","p","exports","hasOwnProperty","Object","defineProperty","value","module","fn","thisArg","args","Array","arguments","length","i","apply","utils","encode","val","encodeURIComponent","replace","url","params","paramsSerializer","serializedParams","isURLSearchParams","toString","parts","forEach","key","isArray","v","isDate","toISOString","isObject","JSON","stringify","push","join","hashmarkIndex","indexOf","slice","__CANCEL__","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","isUndefined","adapter","defaults","XMLHttpRequest","process","prototype","call","transformRequest","data","isFormData","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","transformResponse","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","method","merge","settle","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","config","Promise","resolve","reject","requestData","requestHeaders","request","auth","username","password","Authorization","btoa","fullPath","baseURL","open","toUpperCase","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onabort","onerror","ontimeout","timeoutErrorMessage","isStandardBrowserEnv","cookies","xsrfValue","withCredentials","read","undefined","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","enhanceError","message","code","error","Error","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","prop","deepMerge","axiosKeys","concat","otherKeys","keys","filter","Cancel","this","bind","isFunction","obj","l","constructor","FormData","ArrayBuffer","isView","isString","isNumber","pipe","URLSearchParams","navigator","product","window","document","result","assignValue","extend","a","b","trim","str","extendStatics","__extends","d","setPrototypeOf","__proto__","__","create","__assign","assign","t","s","n","globalImportUrl","axios_1","base_1","ActionOperationEnum","RequestStateEnum","RequestDecisionEnum","ActionApiAxiosParamCreator","configuration","createAction","requestId","action","options","RequiredError","baseOptions","localVarPath","String","localVarUrlObj","localVarRequestOptions","localVarHeaderParameter","query","search","headersFromBaseOptions","needsSerialization","format","listActionsByRequest","showAction","id","ActionApiFp","localVarAxiosArgs","axios","basePath","default","BASE_PATH","axiosRequestArgs","ActionApiFactory","ActionApi","_super","BaseAPI","GraphqlApiAxiosParamCreator","postGraphql","graphqlIn","GraphqlApiFp","GraphqlApiFactory","GraphqlApi","RequestApiAxiosParamCreator","createRequest","requestIn","listRequests","xRhPersona","limit","offset","localVarQueryParameter","listRequestsByRequest","showRequest","showRequestContent","RequestApiFp","RequestApiFactory","RequestApi","TemplateApiAxiosParamCreator","listTemplates","showTemplate","TemplateApiFp","TemplateApiFactory","TemplateApi","WorkflowApiAxiosParamCreator","addWorkflowToTemplate","templateId","workflow","destroyWorkflow","linkWorkflow","resourceObject","listWorkflows","appName","objectId","objectType","listWorkflowsByTemplate","showWorkflow","unlinkWorkflow","updateWorkflow","WorkflowApiFp","WorkflowApiFactory","WorkflowApi","Axios","mergeConfig","createInstance","defaultConfig","context","instance","instanceConfig","CancelToken","isCancel","all","promises","spread","InterceptorManager","dispatchRequest","interceptors","chain","interceptor","unshift","fulfilled","rejected","shift","getUri","handlers","use","eject","h","transformData","throwIfCancellationRequested","throwIfRequested","reason","fns","normalizedName","name","isAxiosError","toJSON","description","number","fileName","lineNumber","columnNumber","stack","isAbsoluteURL","combineURLs","requestedURL","test","relativeURL","ignoreDuplicateOf","parsed","split","line","substr","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","hash","hostname","port","pathname","charAt","location","requestURL","write","expires","path","domain","secure","cookie","Date","toGMTString","match","RegExp","decodeURIComponent","remove","now","executor","TypeError","resolvePromise","token","source","c","callback","arr","COLLECTION_FORMATS","csv","ssv","tsv","pipes","field","msg","_this","Configuration","param","apiKey","accessToken"],"mappings":"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","file":"js/lib~App~8b4a6063.67b64a88e65afeb2055f.js","sourcesContent":["\"use strict\";\n// tslint:disable\n/**\n * Insights Service Approval APIs\n * APIs to query approval service\n *\n * The version of the OpenAPI document: 1.0.0\n * Contact: support@redhat.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./api\"));\n__export(require(\"./configuration\"));\n","module.exports = require('./lib/axios');","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath'\n  ];\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys);\n\n  var otherKeys = Object\n    .keys(config2)\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n","\"use strict\";\n// tslint:disable\n/**\n * Insights Service Approval APIs\n * APIs to query approval service\n *\n * The version of the OpenAPI document: 1.0.0\n * Contact: support@redhat.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar globalImportUrl = require(\"url\");\nvar axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nvar base_1 = require(\"./base\");\n/**\n    * @export\n    * @enum {string}\n    */\nvar ActionOperationEnum;\n(function (ActionOperationEnum) {\n    ActionOperationEnum[\"Approve\"] = \"approve\";\n    ActionOperationEnum[\"Cancel\"] = \"cancel\";\n    ActionOperationEnum[\"Deny\"] = \"deny\";\n    ActionOperationEnum[\"Notify\"] = \"notify\";\n    ActionOperationEnum[\"Memo\"] = \"memo\";\n    ActionOperationEnum[\"Skip\"] = \"skip\";\n    ActionOperationEnum[\"Start\"] = \"start\";\n})(ActionOperationEnum = exports.ActionOperationEnum || (exports.ActionOperationEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar RequestStateEnum;\n(function (RequestStateEnum) {\n    RequestStateEnum[\"Canceled\"] = \"canceled\";\n    RequestStateEnum[\"Completed\"] = \"completed\";\n    RequestStateEnum[\"Notified\"] = \"notified\";\n    RequestStateEnum[\"Pending\"] = \"pending\";\n    RequestStateEnum[\"Skipped\"] = \"skipped\";\n    RequestStateEnum[\"Started\"] = \"started\";\n})(RequestStateEnum = exports.RequestStateEnum || (exports.RequestStateEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar RequestDecisionEnum;\n(function (RequestDecisionEnum) {\n    RequestDecisionEnum[\"Undecided\"] = \"undecided\";\n    RequestDecisionEnum[\"Approved\"] = \"approved\";\n    RequestDecisionEnum[\"Canceled\"] = \"canceled\";\n    RequestDecisionEnum[\"Denied\"] = \"denied\";\n})(RequestDecisionEnum = exports.RequestDecisionEnum || (exports.RequestDecisionEnum = {}));\n/**\n * ActionApi - axios parameter creator\n * @export\n */\nexports.ActionApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         * Add an action to a given request. Admin can do approve, deny, memo, and cancel operations; approver can do approve, deny and memo operations; while requester can do only cancel operation.\n         * @summary Add an action to a given request\n         * @param {string} requestId Id of request\n         * @param {Action} action Action object that will be added\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createAction: function (requestId, action, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'requestId' is not null or undefined\n            if (requestId === null || requestId === undefined) {\n                throw new base_1.RequiredError('requestId', 'Required parameter requestId was null or undefined when calling createAction.');\n            }\n            // verify required parameter 'action' is not null or undefined\n            if (action === null || action === undefined) {\n                throw new base_1.RequiredError('action', 'Required parameter action was null or undefined when calling createAction.');\n            }\n            var localVarPath = \"/requests/{request_id}/actions\"\n                .replace(\"{\" + \"request_id\" + \"}\", encodeURIComponent(String(requestId)));\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            var needsSerialization = (typeof action !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data = needsSerialization ? JSON.stringify(action !== undefined ? action : {}) : (action || \"\");\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Return actions in a given request, available for admin/approver\n         * @summary List all actions of a request\n         * @param {string} requestId Id of request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listActionsByRequest: function (requestId, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'requestId' is not null or undefined\n            if (requestId === null || requestId === undefined) {\n                throw new base_1.RequiredError('requestId', 'Required parameter requestId was null or undefined when calling listActionsByRequest.');\n            }\n            var localVarPath = \"/requests/{request_id}/actions\"\n                .replace(\"{\" + \"request_id\" + \"}\", encodeURIComponent(String(requestId)));\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Return an user action by id, available to all\n         * @summary Return an user action by id\n         * @param {string} id Query by id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showAction: function (id, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showAction.');\n            }\n            var localVarPath = \"/actions/{id}\"\n                .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * ActionApi - functional programming interface\n * @export\n */\nexports.ActionApiFp = function (configuration) {\n    return {\n        /**\n         * Add an action to a given request. Admin can do approve, deny, memo, and cancel operations; approver can do approve, deny and memo operations; while requester can do only cancel operation.\n         * @summary Add an action to a given request\n         * @param {string} requestId Id of request\n         * @param {Action} action Action object that will be added\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createAction: function (requestId, action, options) {\n            var localVarAxiosArgs = exports.ActionApiAxiosParamCreator(configuration).createAction(requestId, action, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * Return actions in a given request, available for admin/approver\n         * @summary List all actions of a request\n         * @param {string} requestId Id of request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listActionsByRequest: function (requestId, options) {\n            var localVarAxiosArgs = exports.ActionApiAxiosParamCreator(configuration).listActionsByRequest(requestId, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * Return an user action by id, available to all\n         * @summary Return an user action by id\n         * @param {string} id Query by id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showAction: function (id, options) {\n            var localVarAxiosArgs = exports.ActionApiAxiosParamCreator(configuration).showAction(id, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    };\n};\n/**\n * ActionApi - factory interface\n * @export\n */\nexports.ActionApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Add an action to a given request. Admin can do approve, deny, memo, and cancel operations; approver can do approve, deny and memo operations; while requester can do only cancel operation.\n         * @summary Add an action to a given request\n         * @param {string} requestId Id of request\n         * @param {Action} action Action object that will be added\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createAction: function (requestId, action, options) {\n            return exports.ActionApiFp(configuration).createAction(requestId, action, options)(axios, basePath);\n        },\n        /**\n         * Return actions in a given request, available for admin/approver\n         * @summary List all actions of a request\n         * @param {string} requestId Id of request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listActionsByRequest: function (requestId, options) {\n            return exports.ActionApiFp(configuration).listActionsByRequest(requestId, options)(axios, basePath);\n        },\n        /**\n         * Return an user action by id, available to all\n         * @summary Return an user action by id\n         * @param {string} id Query by id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showAction: function (id, options) {\n            return exports.ActionApiFp(configuration).showAction(id, options)(axios, basePath);\n        },\n    };\n};\n/**\n * ActionApi - object-oriented interface\n * @export\n * @class ActionApi\n * @extends {BaseAPI}\n */\nvar ActionApi = /** @class */ (function (_super) {\n    __extends(ActionApi, _super);\n    function ActionApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Add an action to a given request. Admin can do approve, deny, memo, and cancel operations; approver can do approve, deny and memo operations; while requester can do only cancel operation.\n     * @summary Add an action to a given request\n     * @param {string} requestId Id of request\n     * @param {Action} action Action object that will be added\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ActionApi\n     */\n    ActionApi.prototype.createAction = function (requestId, action, options) {\n        return exports.ActionApiFp(this.configuration).createAction(requestId, action, options)(this.axios, this.basePath);\n    };\n    /**\n     * Return actions in a given request, available for admin/approver\n     * @summary List all actions of a request\n     * @param {string} requestId Id of request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ActionApi\n     */\n    ActionApi.prototype.listActionsByRequest = function (requestId, options) {\n        return exports.ActionApiFp(this.configuration).listActionsByRequest(requestId, options)(this.axios, this.basePath);\n    };\n    /**\n     * Return an user action by id, available to all\n     * @summary Return an user action by id\n     * @param {string} id Query by id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ActionApi\n     */\n    ActionApi.prototype.showAction = function (id, options) {\n        return exports.ActionApiFp(this.configuration).showAction(id, options)(this.axios, this.basePath);\n    };\n    return ActionApi;\n}(base_1.BaseAPI));\nexports.ActionApi = ActionApi;\n/**\n * GraphqlApi - axios parameter creator\n * @export\n */\nexports.GraphqlApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         * Performs a GraphQL Query\n         * @summary Perform a GraphQL Query\n         * @param {GraphqlIn} graphqlIn GraphQL Query Request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postGraphql: function (graphqlIn, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'graphqlIn' is not null or undefined\n            if (graphqlIn === null || graphqlIn === undefined) {\n                throw new base_1.RequiredError('graphqlIn', 'Required parameter graphqlIn was null or undefined when calling postGraphql.');\n            }\n            var localVarPath = \"/graphql\";\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            var needsSerialization = (typeof graphqlIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data = needsSerialization ? JSON.stringify(graphqlIn !== undefined ? graphqlIn : {}) : (graphqlIn || \"\");\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * GraphqlApi - functional programming interface\n * @export\n */\nexports.GraphqlApiFp = function (configuration) {\n    return {\n        /**\n         * Performs a GraphQL Query\n         * @summary Perform a GraphQL Query\n         * @param {GraphqlIn} graphqlIn GraphQL Query Request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postGraphql: function (graphqlIn, options) {\n            var localVarAxiosArgs = exports.GraphqlApiAxiosParamCreator(configuration).postGraphql(graphqlIn, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    };\n};\n/**\n * GraphqlApi - factory interface\n * @export\n */\nexports.GraphqlApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Performs a GraphQL Query\n         * @summary Perform a GraphQL Query\n         * @param {GraphqlIn} graphqlIn GraphQL Query Request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postGraphql: function (graphqlIn, options) {\n            return exports.GraphqlApiFp(configuration).postGraphql(graphqlIn, options)(axios, basePath);\n        },\n    };\n};\n/**\n * GraphqlApi - object-oriented interface\n * @export\n * @class GraphqlApi\n * @extends {BaseAPI}\n */\nvar GraphqlApi = /** @class */ (function (_super) {\n    __extends(GraphqlApi, _super);\n    function GraphqlApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Performs a GraphQL Query\n     * @summary Perform a GraphQL Query\n     * @param {GraphqlIn} graphqlIn GraphQL Query Request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GraphqlApi\n     */\n    GraphqlApi.prototype.postGraphql = function (graphqlIn, options) {\n        return exports.GraphqlApiFp(this.configuration).postGraphql(graphqlIn, options)(this.axios, this.basePath);\n    };\n    return GraphqlApi;\n}(base_1.BaseAPI));\nexports.GraphqlApi = GraphqlApi;\n/**\n * RequestApi - axios parameter creator\n * @export\n */\nexports.RequestApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         * Add an approval request by given parameters, available to anyone\n         * @summary Add an approval request by given parameters\n         * @param {RequestIn} requestIn Parameters need to create a request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRequest: function (requestIn, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'requestIn' is not null or undefined\n            if (requestIn === null || requestIn === undefined) {\n                throw new base_1.RequiredError('requestIn', 'Required parameter requestIn was null or undefined when calling createRequest.');\n            }\n            var localVarPath = \"/requests\";\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            var needsSerialization = (typeof requestIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data = needsSerialization ? JSON.stringify(requestIn !== undefined ? requestIn : {}) : (requestIn || \"\");\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * The result depends on the x-rh-persona header (approval/admin, approval/requseter, or approval/approver). Program generated child requests are not included.\n         * @summary Return an array of requester made approval requests, available to anyone\n         * @param {'approval/admin' | 'approval/approver' | 'approval/requester'} [xRhPersona] Current login user\\&#39;s persona\n         * @param {number} [limit] How many items to return at one time (max 1000)\n         * @param {number} [offset] Starting Offset\n         * @param {object} [filter] Filter for querying collections.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRequests: function (xRhPersona, limit, offset, filter, options) {\n            if (options === void 0) { options = {}; }\n            var localVarPath = \"/requests\";\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            if (limit !== undefined) {\n                localVarQueryParameter['limit'] = limit;\n            }\n            if (offset !== undefined) {\n                localVarQueryParameter['offset'] = offset;\n            }\n            if (filter !== undefined) {\n                localVarQueryParameter['filter'] = filter;\n            }\n            if (xRhPersona !== undefined && xRhPersona !== null) {\n                localVarHeaderParameter['x-rh-persona'] = String(xRhPersona);\n            }\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Return an array of child requests of a given request id. The result depends on the x-rh-persona header (approval/admin, approval/requseter, or approval/approver).\n         * @summary Return an array of child requests of a given request id\n         * @param {string} requestId Id of request\n         * @param {'approval/admin' | 'approval/approver' | 'approval/requester'} [xRhPersona] Current login user\\&#39;s persona\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRequestsByRequest: function (requestId, xRhPersona, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'requestId' is not null or undefined\n            if (requestId === null || requestId === undefined) {\n                throw new base_1.RequiredError('requestId', 'Required parameter requestId was null or undefined when calling listRequestsByRequest.');\n            }\n            var localVarPath = \"/requests/{request_id}/requests\"\n                .replace(\"{\" + \"request_id\" + \"}\", encodeURIComponent(String(requestId)));\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            if (xRhPersona !== undefined && xRhPersona !== null) {\n                localVarHeaderParameter['x-rh-persona'] = String(xRhPersona);\n            }\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Return an approval request by given id, available to anyone who can access the request\n         * @summary Return an approval request by given id\n         * @param {string} id Query by id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showRequest: function (id, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showRequest.');\n            }\n            var localVarPath = \"/requests/{id}\"\n                .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Return request content of a given request id, available to all\n         * @summary Return request content of a given request id\n         * @param {string} requestId Id of request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showRequestContent: function (requestId, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'requestId' is not null or undefined\n            if (requestId === null || requestId === undefined) {\n                throw new base_1.RequiredError('requestId', 'Required parameter requestId was null or undefined when calling showRequestContent.');\n            }\n            var localVarPath = \"/requests/{request_id}/content\"\n                .replace(\"{\" + \"request_id\" + \"}\", encodeURIComponent(String(requestId)));\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * RequestApi - functional programming interface\n * @export\n */\nexports.RequestApiFp = function (configuration) {\n    return {\n        /**\n         * Add an approval request by given parameters, available to anyone\n         * @summary Add an approval request by given parameters\n         * @param {RequestIn} requestIn Parameters need to create a request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRequest: function (requestIn, options) {\n            var localVarAxiosArgs = exports.RequestApiAxiosParamCreator(configuration).createRequest(requestIn, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * The result depends on the x-rh-persona header (approval/admin, approval/requseter, or approval/approver). Program generated child requests are not included.\n         * @summary Return an array of requester made approval requests, available to anyone\n         * @param {'approval/admin' | 'approval/approver' | 'approval/requester'} [xRhPersona] Current login user\\&#39;s persona\n         * @param {number} [limit] How many items to return at one time (max 1000)\n         * @param {number} [offset] Starting Offset\n         * @param {object} [filter] Filter for querying collections.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRequests: function (xRhPersona, limit, offset, filter, options) {\n            var localVarAxiosArgs = exports.RequestApiAxiosParamCreator(configuration).listRequests(xRhPersona, limit, offset, filter, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * Return an array of child requests of a given request id. The result depends on the x-rh-persona header (approval/admin, approval/requseter, or approval/approver).\n         * @summary Return an array of child requests of a given request id\n         * @param {string} requestId Id of request\n         * @param {'approval/admin' | 'approval/approver' | 'approval/requester'} [xRhPersona] Current login user\\&#39;s persona\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRequestsByRequest: function (requestId, xRhPersona, options) {\n            var localVarAxiosArgs = exports.RequestApiAxiosParamCreator(configuration).listRequestsByRequest(requestId, xRhPersona, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * Return an approval request by given id, available to anyone who can access the request\n         * @summary Return an approval request by given id\n         * @param {string} id Query by id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showRequest: function (id, options) {\n            var localVarAxiosArgs = exports.RequestApiAxiosParamCreator(configuration).showRequest(id, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * Return request content of a given request id, available to all\n         * @summary Return request content of a given request id\n         * @param {string} requestId Id of request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showRequestContent: function (requestId, options) {\n            var localVarAxiosArgs = exports.RequestApiAxiosParamCreator(configuration).showRequestContent(requestId, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    };\n};\n/**\n * RequestApi - factory interface\n * @export\n */\nexports.RequestApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Add an approval request by given parameters, available to anyone\n         * @summary Add an approval request by given parameters\n         * @param {RequestIn} requestIn Parameters need to create a request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRequest: function (requestIn, options) {\n            return exports.RequestApiFp(configuration).createRequest(requestIn, options)(axios, basePath);\n        },\n        /**\n         * The result depends on the x-rh-persona header (approval/admin, approval/requseter, or approval/approver). Program generated child requests are not included.\n         * @summary Return an array of requester made approval requests, available to anyone\n         * @param {'approval/admin' | 'approval/approver' | 'approval/requester'} [xRhPersona] Current login user\\&#39;s persona\n         * @param {number} [limit] How many items to return at one time (max 1000)\n         * @param {number} [offset] Starting Offset\n         * @param {object} [filter] Filter for querying collections.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRequests: function (xRhPersona, limit, offset, filter, options) {\n            return exports.RequestApiFp(configuration).listRequests(xRhPersona, limit, offset, filter, options)(axios, basePath);\n        },\n        /**\n         * Return an array of child requests of a given request id. The result depends on the x-rh-persona header (approval/admin, approval/requseter, or approval/approver).\n         * @summary Return an array of child requests of a given request id\n         * @param {string} requestId Id of request\n         * @param {'approval/admin' | 'approval/approver' | 'approval/requester'} [xRhPersona] Current login user\\&#39;s persona\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRequestsByRequest: function (requestId, xRhPersona, options) {\n            return exports.RequestApiFp(configuration).listRequestsByRequest(requestId, xRhPersona, options)(axios, basePath);\n        },\n        /**\n         * Return an approval request by given id, available to anyone who can access the request\n         * @summary Return an approval request by given id\n         * @param {string} id Query by id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showRequest: function (id, options) {\n            return exports.RequestApiFp(configuration).showRequest(id, options)(axios, basePath);\n        },\n        /**\n         * Return request content of a given request id, available to all\n         * @summary Return request content of a given request id\n         * @param {string} requestId Id of request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showRequestContent: function (requestId, options) {\n            return exports.RequestApiFp(configuration).showRequestContent(requestId, options)(axios, basePath);\n        },\n    };\n};\n/**\n * RequestApi - object-oriented interface\n * @export\n * @class RequestApi\n * @extends {BaseAPI}\n */\nvar RequestApi = /** @class */ (function (_super) {\n    __extends(RequestApi, _super);\n    function RequestApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Add an approval request by given parameters, available to anyone\n     * @summary Add an approval request by given parameters\n     * @param {RequestIn} requestIn Parameters need to create a request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RequestApi\n     */\n    RequestApi.prototype.createRequest = function (requestIn, options) {\n        return exports.RequestApiFp(this.configuration).createRequest(requestIn, options)(this.axios, this.basePath);\n    };\n    /**\n     * The result depends on the x-rh-persona header (approval/admin, approval/requseter, or approval/approver). Program generated child requests are not included.\n     * @summary Return an array of requester made approval requests, available to anyone\n     * @param {'approval/admin' | 'approval/approver' | 'approval/requester'} [xRhPersona] Current login user\\&#39;s persona\n     * @param {number} [limit] How many items to return at one time (max 1000)\n     * @param {number} [offset] Starting Offset\n     * @param {object} [filter] Filter for querying collections.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RequestApi\n     */\n    RequestApi.prototype.listRequests = function (xRhPersona, limit, offset, filter, options) {\n        return exports.RequestApiFp(this.configuration).listRequests(xRhPersona, limit, offset, filter, options)(this.axios, this.basePath);\n    };\n    /**\n     * Return an array of child requests of a given request id. The result depends on the x-rh-persona header (approval/admin, approval/requseter, or approval/approver).\n     * @summary Return an array of child requests of a given request id\n     * @param {string} requestId Id of request\n     * @param {'approval/admin' | 'approval/approver' | 'approval/requester'} [xRhPersona] Current login user\\&#39;s persona\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RequestApi\n     */\n    RequestApi.prototype.listRequestsByRequest = function (requestId, xRhPersona, options) {\n        return exports.RequestApiFp(this.configuration).listRequestsByRequest(requestId, xRhPersona, options)(this.axios, this.basePath);\n    };\n    /**\n     * Return an approval request by given id, available to anyone who can access the request\n     * @summary Return an approval request by given id\n     * @param {string} id Query by id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RequestApi\n     */\n    RequestApi.prototype.showRequest = function (id, options) {\n        return exports.RequestApiFp(this.configuration).showRequest(id, options)(this.axios, this.basePath);\n    };\n    /**\n     * Return request content of a given request id, available to all\n     * @summary Return request content of a given request id\n     * @param {string} requestId Id of request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RequestApi\n     */\n    RequestApi.prototype.showRequestContent = function (requestId, options) {\n        return exports.RequestApiFp(this.configuration).showRequestContent(requestId, options)(this.axios, this.basePath);\n    };\n    return RequestApi;\n}(base_1.BaseAPI));\nexports.RequestApi = RequestApi;\n/**\n * TemplateApi - axios parameter creator\n * @export\n */\nexports.TemplateApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         * Return all templates\n         * @summary Return all templates, only available for admin\n         * @param {number} [limit] How many items to return at one time (max 1000)\n         * @param {number} [offset] Starting Offset\n         * @param {object} [filter] Filter for querying collections.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTemplates: function (limit, offset, filter, options) {\n            if (options === void 0) { options = {}; }\n            var localVarPath = \"/templates\";\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            if (limit !== undefined) {\n                localVarQueryParameter['limit'] = limit;\n            }\n            if (offset !== undefined) {\n                localVarQueryParameter['offset'] = offset;\n            }\n            if (filter !== undefined) {\n                localVarQueryParameter['filter'] = filter;\n            }\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Return a template by given id\n         * @summary Return a template by given id, only available for admin\n         * @param {string} id Query by id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showTemplate: function (id, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showTemplate.');\n            }\n            var localVarPath = \"/templates/{id}\"\n                .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * TemplateApi - functional programming interface\n * @export\n */\nexports.TemplateApiFp = function (configuration) {\n    return {\n        /**\n         * Return all templates\n         * @summary Return all templates, only available for admin\n         * @param {number} [limit] How many items to return at one time (max 1000)\n         * @param {number} [offset] Starting Offset\n         * @param {object} [filter] Filter for querying collections.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTemplates: function (limit, offset, filter, options) {\n            var localVarAxiosArgs = exports.TemplateApiAxiosParamCreator(configuration).listTemplates(limit, offset, filter, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * Return a template by given id\n         * @summary Return a template by given id, only available for admin\n         * @param {string} id Query by id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showTemplate: function (id, options) {\n            var localVarAxiosArgs = exports.TemplateApiAxiosParamCreator(configuration).showTemplate(id, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    };\n};\n/**\n * TemplateApi - factory interface\n * @export\n */\nexports.TemplateApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Return all templates\n         * @summary Return all templates, only available for admin\n         * @param {number} [limit] How many items to return at one time (max 1000)\n         * @param {number} [offset] Starting Offset\n         * @param {object} [filter] Filter for querying collections.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTemplates: function (limit, offset, filter, options) {\n            return exports.TemplateApiFp(configuration).listTemplates(limit, offset, filter, options)(axios, basePath);\n        },\n        /**\n         * Return a template by given id\n         * @summary Return a template by given id, only available for admin\n         * @param {string} id Query by id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showTemplate: function (id, options) {\n            return exports.TemplateApiFp(configuration).showTemplate(id, options)(axios, basePath);\n        },\n    };\n};\n/**\n * TemplateApi - object-oriented interface\n * @export\n * @class TemplateApi\n * @extends {BaseAPI}\n */\nvar TemplateApi = /** @class */ (function (_super) {\n    __extends(TemplateApi, _super);\n    function TemplateApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Return all templates\n     * @summary Return all templates, only available for admin\n     * @param {number} [limit] How many items to return at one time (max 1000)\n     * @param {number} [offset] Starting Offset\n     * @param {object} [filter] Filter for querying collections.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TemplateApi\n     */\n    TemplateApi.prototype.listTemplates = function (limit, offset, filter, options) {\n        return exports.TemplateApiFp(this.configuration).listTemplates(limit, offset, filter, options)(this.axios, this.basePath);\n    };\n    /**\n     * Return a template by given id\n     * @summary Return a template by given id, only available for admin\n     * @param {string} id Query by id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TemplateApi\n     */\n    TemplateApi.prototype.showTemplate = function (id, options) {\n        return exports.TemplateApiFp(this.configuration).showTemplate(id, options)(this.axios, this.basePath);\n    };\n    return TemplateApi;\n}(base_1.BaseAPI));\nexports.TemplateApi = TemplateApi;\n/**\n * WorkflowApi - axios parameter creator\n * @export\n */\nexports.WorkflowApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         * Add a workflow by given template id\n         * @summary Add a workflow by given template id, only available for admin\n         * @param {string} templateId Id of template\n         * @param {Workflow} workflow Parameters need to create workflow\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addWorkflowToTemplate: function (templateId, workflow, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'templateId' is not null or undefined\n            if (templateId === null || templateId === undefined) {\n                throw new base_1.RequiredError('templateId', 'Required parameter templateId was null or undefined when calling addWorkflowToTemplate.');\n            }\n            // verify required parameter 'workflow' is not null or undefined\n            if (workflow === null || workflow === undefined) {\n                throw new base_1.RequiredError('workflow', 'Required parameter workflow was null or undefined when calling addWorkflowToTemplate.');\n            }\n            var localVarPath = \"/templates/{template_id}/workflows\"\n                .replace(\"{\" + \"template_id\" + \"}\", encodeURIComponent(String(templateId)));\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            var needsSerialization = (typeof workflow !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data = needsSerialization ? JSON.stringify(workflow !== undefined ? workflow : {}) : (workflow || \"\");\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Delete approval workflow by given id\n         * @summary Delete approval workflow by given id, only available for admin\n         * @param {string} id Query by id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyWorkflow: function (id, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling destroyWorkflow.');\n            }\n            var localVarPath = \"/workflows/{id}\"\n                .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Link a resource object to a given workflow\n         * @summary Create a resource link to a given workflow\n         * @param {string} id Query by id\n         * @param {ResourceObject} resourceObject Parameters needed to create a link\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        linkWorkflow: function (id, resourceObject, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling linkWorkflow.');\n            }\n            // verify required parameter 'resourceObject' is not null or undefined\n            if (resourceObject === null || resourceObject === undefined) {\n                throw new base_1.RequiredError('resourceObject', 'Required parameter resourceObject was null or undefined when calling linkWorkflow.');\n            }\n            var localVarPath = \"/workflows/{id}/link\"\n                .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            var needsSerialization = (typeof resourceObject !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data = needsSerialization ? JSON.stringify(resourceObject !== undefined ? resourceObject : {}) : (resourceObject || \"\");\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Depends on the query parameters, either return all workflows in ascending sequence order when no parameters are provided; or return the workflows linking to the resource object whose app_name, object_type and object_id are specified by query parameters\n         * @summary Return all approval workflows, only available for admin\n         * @param {string} [appName] Name of the application\n         * @param {string} [objectId] Id of the resource object\n         * @param {string} [objectType] Type of the resource object\n         * @param {number} [limit] How many items to return at one time (max 1000)\n         * @param {number} [offset] Starting Offset\n         * @param {object} [filter] Filter for querying collections.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listWorkflows: function (appName, objectId, objectType, limit, offset, filter, options) {\n            if (options === void 0) { options = {}; }\n            var localVarPath = \"/workflows\";\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            if (appName !== undefined) {\n                localVarQueryParameter['app_name'] = appName;\n            }\n            if (objectId !== undefined) {\n                localVarQueryParameter['object_id'] = objectId;\n            }\n            if (objectType !== undefined) {\n                localVarQueryParameter['object_type'] = objectType;\n            }\n            if (limit !== undefined) {\n                localVarQueryParameter['limit'] = limit;\n            }\n            if (offset !== undefined) {\n                localVarQueryParameter['offset'] = offset;\n            }\n            if (filter !== undefined) {\n                localVarQueryParameter['filter'] = filter;\n            }\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Return an array of workflows by given template id\n         * @summary Return an array of workflows by given template id, only available for admin\n         * @param {string} templateId Id of template\n         * @param {number} [limit] How many items to return at one time (max 1000)\n         * @param {number} [offset] Starting Offset\n         * @param {object} [filter] Filter for querying collections.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listWorkflowsByTemplate: function (templateId, limit, offset, filter, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'templateId' is not null or undefined\n            if (templateId === null || templateId === undefined) {\n                throw new base_1.RequiredError('templateId', 'Required parameter templateId was null or undefined when calling listWorkflowsByTemplate.');\n            }\n            var localVarPath = \"/templates/{template_id}/workflows\"\n                .replace(\"{\" + \"template_id\" + \"}\", encodeURIComponent(String(templateId)));\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            if (limit !== undefined) {\n                localVarQueryParameter['limit'] = limit;\n            }\n            if (offset !== undefined) {\n                localVarQueryParameter['offset'] = offset;\n            }\n            if (filter !== undefined) {\n                localVarQueryParameter['filter'] = filter;\n            }\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Return an approval workflow by given id\n         * @summary Return an approval workflow by given id, only available for admin\n         * @param {string} id Query by id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showWorkflow: function (id, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showWorkflow.');\n            }\n            var localVarPath = \"/workflows/{id}\"\n                .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Break the link between a resource object and selected workflow\n         * @summary Break the link between a resource object and selected workflow\n         * @param {string} id Query by id\n         * @param {ResourceObject} resourceObject Parameters needed to remove a link\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unlinkWorkflow: function (id, resourceObject, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling unlinkWorkflow.');\n            }\n            // verify required parameter 'resourceObject' is not null or undefined\n            if (resourceObject === null || resourceObject === undefined) {\n                throw new base_1.RequiredError('resourceObject', 'Required parameter resourceObject was null or undefined when calling unlinkWorkflow.');\n            }\n            var localVarPath = \"/workflows/{id}/unlink\"\n                .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            var needsSerialization = (typeof resourceObject !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data = needsSerialization ? JSON.stringify(resourceObject !== undefined ? resourceObject : {}) : (resourceObject || \"\");\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * Update an approval workflow by given id\n         * @summary Update an approval workflow by given id, only available for admin\n         * @param {string} id Query by id\n         * @param {Workflow} workflow Parameters need to update approval workflow\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateWorkflow: function (id, workflow, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling updateWorkflow.');\n            }\n            // verify required parameter 'workflow' is not null or undefined\n            if (workflow === null || workflow === undefined) {\n                throw new base_1.RequiredError('workflow', 'Required parameter workflow was null or undefined when calling updateWorkflow.');\n            }\n            var localVarPath = \"/workflows/{id}\"\n                .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n            var localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication Basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            var needsSerialization = (typeof workflow !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data = needsSerialization ? JSON.stringify(workflow !== undefined ? workflow : {}) : (workflow || \"\");\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * WorkflowApi - functional programming interface\n * @export\n */\nexports.WorkflowApiFp = function (configuration) {\n    return {\n        /**\n         * Add a workflow by given template id\n         * @summary Add a workflow by given template id, only available for admin\n         * @param {string} templateId Id of template\n         * @param {Workflow} workflow Parameters need to create workflow\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addWorkflowToTemplate: function (templateId, workflow, options) {\n            var localVarAxiosArgs = exports.WorkflowApiAxiosParamCreator(configuration).addWorkflowToTemplate(templateId, workflow, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * Delete approval workflow by given id\n         * @summary Delete approval workflow by given id, only available for admin\n         * @param {string} id Query by id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyWorkflow: function (id, options) {\n            var localVarAxiosArgs = exports.WorkflowApiAxiosParamCreator(configuration).destroyWorkflow(id, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * Link a resource object to a given workflow\n         * @summary Create a resource link to a given workflow\n         * @param {string} id Query by id\n         * @param {ResourceObject} resourceObject Parameters needed to create a link\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        linkWorkflow: function (id, resourceObject, options) {\n            var localVarAxiosArgs = exports.WorkflowApiAxiosParamCreator(configuration).linkWorkflow(id, resourceObject, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * Depends on the query parameters, either return all workflows in ascending sequence order when no parameters are provided; or return the workflows linking to the resource object whose app_name, object_type and object_id are specified by query parameters\n         * @summary Return all approval workflows, only available for admin\n         * @param {string} [appName] Name of the application\n         * @param {string} [objectId] Id of the resource object\n         * @param {string} [objectType] Type of the resource object\n         * @param {number} [limit] How many items to return at one time (max 1000)\n         * @param {number} [offset] Starting Offset\n         * @param {object} [filter] Filter for querying collections.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listWorkflows: function (appName, objectId, objectType, limit, offset, filter, options) {\n            var localVarAxiosArgs = exports.WorkflowApiAxiosParamCreator(configuration).listWorkflows(appName, objectId, objectType, limit, offset, filter, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * Return an array of workflows by given template id\n         * @summary Return an array of workflows by given template id, only available for admin\n         * @param {string} templateId Id of template\n         * @param {number} [limit] How many items to return at one time (max 1000)\n         * @param {number} [offset] Starting Offset\n         * @param {object} [filter] Filter for querying collections.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listWorkflowsByTemplate: function (templateId, limit, offset, filter, options) {\n            var localVarAxiosArgs = exports.WorkflowApiAxiosParamCreator(configuration).listWorkflowsByTemplate(templateId, limit, offset, filter, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * Return an approval workflow by given id\n         * @summary Return an approval workflow by given id, only available for admin\n         * @param {string} id Query by id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showWorkflow: function (id, options) {\n            var localVarAxiosArgs = exports.WorkflowApiAxiosParamCreator(configuration).showWorkflow(id, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * Break the link between a resource object and selected workflow\n         * @summary Break the link between a resource object and selected workflow\n         * @param {string} id Query by id\n         * @param {ResourceObject} resourceObject Parameters needed to remove a link\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unlinkWorkflow: function (id, resourceObject, options) {\n            var localVarAxiosArgs = exports.WorkflowApiAxiosParamCreator(configuration).unlinkWorkflow(id, resourceObject, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * Update an approval workflow by given id\n         * @summary Update an approval workflow by given id, only available for admin\n         * @param {string} id Query by id\n         * @param {Workflow} workflow Parameters need to update approval workflow\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateWorkflow: function (id, workflow, options) {\n            var localVarAxiosArgs = exports.WorkflowApiAxiosParamCreator(configuration).updateWorkflow(id, workflow, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    };\n};\n/**\n * WorkflowApi - factory interface\n * @export\n */\nexports.WorkflowApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Add a workflow by given template id\n         * @summary Add a workflow by given template id, only available for admin\n         * @param {string} templateId Id of template\n         * @param {Workflow} workflow Parameters need to create workflow\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addWorkflowToTemplate: function (templateId, workflow, options) {\n            return exports.WorkflowApiFp(configuration).addWorkflowToTemplate(templateId, workflow, options)(axios, basePath);\n        },\n        /**\n         * Delete approval workflow by given id\n         * @summary Delete approval workflow by given id, only available for admin\n         * @param {string} id Query by id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyWorkflow: function (id, options) {\n            return exports.WorkflowApiFp(configuration).destroyWorkflow(id, options)(axios, basePath);\n        },\n        /**\n         * Link a resource object to a given workflow\n         * @summary Create a resource link to a given workflow\n         * @param {string} id Query by id\n         * @param {ResourceObject} resourceObject Parameters needed to create a link\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        linkWorkflow: function (id, resourceObject, options) {\n            return exports.WorkflowApiFp(configuration).linkWorkflow(id, resourceObject, options)(axios, basePath);\n        },\n        /**\n         * Depends on the query parameters, either return all workflows in ascending sequence order when no parameters are provided; or return the workflows linking to the resource object whose app_name, object_type and object_id are specified by query parameters\n         * @summary Return all approval workflows, only available for admin\n         * @param {string} [appName] Name of the application\n         * @param {string} [objectId] Id of the resource object\n         * @param {string} [objectType] Type of the resource object\n         * @param {number} [limit] How many items to return at one time (max 1000)\n         * @param {number} [offset] Starting Offset\n         * @param {object} [filter] Filter for querying collections.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listWorkflows: function (appName, objectId, objectType, limit, offset, filter, options) {\n            return exports.WorkflowApiFp(configuration).listWorkflows(appName, objectId, objectType, limit, offset, filter, options)(axios, basePath);\n        },\n        /**\n         * Return an array of workflows by given template id\n         * @summary Return an array of workflows by given template id, only available for admin\n         * @param {string} templateId Id of template\n         * @param {number} [limit] How many items to return at one time (max 1000)\n         * @param {number} [offset] Starting Offset\n         * @param {object} [filter] Filter for querying collections.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listWorkflowsByTemplate: function (templateId, limit, offset, filter, options) {\n            return exports.WorkflowApiFp(configuration).listWorkflowsByTemplate(templateId, limit, offset, filter, options)(axios, basePath);\n        },\n        /**\n         * Return an approval workflow by given id\n         * @summary Return an approval workflow by given id, only available for admin\n         * @param {string} id Query by id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showWorkflow: function (id, options) {\n            return exports.WorkflowApiFp(configuration).showWorkflow(id, options)(axios, basePath);\n        },\n        /**\n         * Break the link between a resource object and selected workflow\n         * @summary Break the link between a resource object and selected workflow\n         * @param {string} id Query by id\n         * @param {ResourceObject} resourceObject Parameters needed to remove a link\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unlinkWorkflow: function (id, resourceObject, options) {\n            return exports.WorkflowApiFp(configuration).unlinkWorkflow(id, resourceObject, options)(axios, basePath);\n        },\n        /**\n         * Update an approval workflow by given id\n         * @summary Update an approval workflow by given id, only available for admin\n         * @param {string} id Query by id\n         * @param {Workflow} workflow Parameters need to update approval workflow\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateWorkflow: function (id, workflow, options) {\n            return exports.WorkflowApiFp(configuration).updateWorkflow(id, workflow, options)(axios, basePath);\n        },\n    };\n};\n/**\n * WorkflowApi - object-oriented interface\n * @export\n * @class WorkflowApi\n * @extends {BaseAPI}\n */\nvar WorkflowApi = /** @class */ (function (_super) {\n    __extends(WorkflowApi, _super);\n    function WorkflowApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Add a workflow by given template id\n     * @summary Add a workflow by given template id, only available for admin\n     * @param {string} templateId Id of template\n     * @param {Workflow} workflow Parameters need to create workflow\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorkflowApi\n     */\n    WorkflowApi.prototype.addWorkflowToTemplate = function (templateId, workflow, options) {\n        return exports.WorkflowApiFp(this.configuration).addWorkflowToTemplate(templateId, workflow, options)(this.axios, this.basePath);\n    };\n    /**\n     * Delete approval workflow by given id\n     * @summary Delete approval workflow by given id, only available for admin\n     * @param {string} id Query by id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorkflowApi\n     */\n    WorkflowApi.prototype.destroyWorkflow = function (id, options) {\n        return exports.WorkflowApiFp(this.configuration).destroyWorkflow(id, options)(this.axios, this.basePath);\n    };\n    /**\n     * Link a resource object to a given workflow\n     * @summary Create a resource link to a given workflow\n     * @param {string} id Query by id\n     * @param {ResourceObject} resourceObject Parameters needed to create a link\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorkflowApi\n     */\n    WorkflowApi.prototype.linkWorkflow = function (id, resourceObject, options) {\n        return exports.WorkflowApiFp(this.configuration).linkWorkflow(id, resourceObject, options)(this.axios, this.basePath);\n    };\n    /**\n     * Depends on the query parameters, either return all workflows in ascending sequence order when no parameters are provided; or return the workflows linking to the resource object whose app_name, object_type and object_id are specified by query parameters\n     * @summary Return all approval workflows, only available for admin\n     * @param {string} [appName] Name of the application\n     * @param {string} [objectId] Id of the resource object\n     * @param {string} [objectType] Type of the resource object\n     * @param {number} [limit] How many items to return at one time (max 1000)\n     * @param {number} [offset] Starting Offset\n     * @param {object} [filter] Filter for querying collections.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorkflowApi\n     */\n    WorkflowApi.prototype.listWorkflows = function (appName, objectId, objectType, limit, offset, filter, options) {\n        return exports.WorkflowApiFp(this.configuration).listWorkflows(appName, objectId, objectType, limit, offset, filter, options)(this.axios, this.basePath);\n    };\n    /**\n     * Return an array of workflows by given template id\n     * @summary Return an array of workflows by given template id, only available for admin\n     * @param {string} templateId Id of template\n     * @param {number} [limit] How many items to return at one time (max 1000)\n     * @param {number} [offset] Starting Offset\n     * @param {object} [filter] Filter for querying collections.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorkflowApi\n     */\n    WorkflowApi.prototype.listWorkflowsByTemplate = function (templateId, limit, offset, filter, options) {\n        return exports.WorkflowApiFp(this.configuration).listWorkflowsByTemplate(templateId, limit, offset, filter, options)(this.axios, this.basePath);\n    };\n    /**\n     * Return an approval workflow by given id\n     * @summary Return an approval workflow by given id, only available for admin\n     * @param {string} id Query by id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorkflowApi\n     */\n    WorkflowApi.prototype.showWorkflow = function (id, options) {\n        return exports.WorkflowApiFp(this.configuration).showWorkflow(id, options)(this.axios, this.basePath);\n    };\n    /**\n     * Break the link between a resource object and selected workflow\n     * @summary Break the link between a resource object and selected workflow\n     * @param {string} id Query by id\n     * @param {ResourceObject} resourceObject Parameters needed to remove a link\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorkflowApi\n     */\n    WorkflowApi.prototype.unlinkWorkflow = function (id, resourceObject, options) {\n        return exports.WorkflowApiFp(this.configuration).unlinkWorkflow(id, resourceObject, options)(this.axios, this.basePath);\n    };\n    /**\n     * Update an approval workflow by given id\n     * @summary Update an approval workflow by given id, only available for admin\n     * @param {string} id Query by id\n     * @param {Workflow} workflow Parameters need to update approval workflow\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorkflowApi\n     */\n    WorkflowApi.prototype.updateWorkflow = function (id, workflow, options) {\n        return exports.WorkflowApiFp(this.configuration).updateWorkflow(id, workflow, options)(this.axios, this.basePath);\n    };\n    return WorkflowApi;\n}(base_1.BaseAPI));\nexports.WorkflowApi = WorkflowApi;\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","\"use strict\";\n// tslint:disable\n/**\n * Insights Service Approval APIs\n * APIs to query approval service\n *\n * The version of the OpenAPI document: 1.0.0\n * Contact: support@redhat.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Some imports not used depending on template conditions\n// @ts-ignore\nvar axios_1 = require(\"axios\");\nexports.BASE_PATH = \"https://cloud.redhat.com//api/approval/v1.0\".replace(/\\/+$/, \"\");\n/**\n *\n * @export\n */\nexports.COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n/**\n *\n * @export\n * @class BaseAPI\n */\nvar BaseAPI = /** @class */ (function () {\n    function BaseAPI(configuration, basePath, axios) {\n        if (basePath === void 0) { basePath = exports.BASE_PATH; }\n        if (axios === void 0) { axios = axios_1.default; }\n        this.basePath = basePath;\n        this.axios = axios;\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n    return BaseAPI;\n}());\nexports.BaseAPI = BaseAPI;\n;\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nvar RequiredError = /** @class */ (function (_super) {\n    __extends(RequiredError, _super);\n    function RequiredError(field, msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.field = field;\n        _this.name = \"RequiredError\";\n        return _this;\n    }\n    return RequiredError;\n}(Error));\nexports.RequiredError = RequiredError;\n","\"use strict\";\n// tslint:disable\n/**\n * Insights Service Approval APIs\n * APIs to query approval service\n *\n * The version of the OpenAPI document: 1.0.0\n * Contact: support@redhat.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Configuration = /** @class */ (function () {\n    function Configuration(param) {\n        if (param === void 0) { param = {}; }\n        this.apiKey = param.apiKey;\n        this.username = param.username;\n        this.password = param.password;\n        this.accessToken = param.accessToken;\n        this.basePath = param.basePath;\n        this.baseOptions = param.baseOptions;\n    }\n    return Configuration;\n}());\nexports.Configuration = Configuration;\n","\"use strict\";\n// tslint:disable\n/**\n * Catalog API\n * This API gets and orders catalog items from different cloud sources.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: support@redhat.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Configuration = /** @class */ (function () {\n    function Configuration(param) {\n        if (param === void 0) { param = {}; }\n        this.apiKey = param.apiKey;\n        this.username = param.username;\n        this.password = param.password;\n        this.accessToken = param.accessToken;\n        this.basePath = param.basePath;\n    }\n    return Configuration;\n}());\nexports.Configuration = Configuration;\n","\"use strict\";\n// tslint:disable\n/**\n * Catalog API\n * This API gets and orders catalog items from different cloud sources.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: support@redhat.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./api\"));\n__export(require(\"./configuration\"));\n"],"sourceRoot":""}