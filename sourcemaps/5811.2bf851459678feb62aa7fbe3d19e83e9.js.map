{"version":3,"file":"js/5811.df2d83361aafc1f5497b.js","mappings":"sWA0BA,QAhBmE,SAAC,GAClE,IAAAA,EAAQ,WACRC,EAAQ,WACLC,E,yUAAK,GAH0D,yBAI9D,OACJ,kBAAC,EAAAC,SAAQ,KACNF,EACC,kBAAC,IAAW,GAACA,SAAUA,GAAcC,GAClCF,GAED,K,6pBC0BR,QAvByD,SAAC,GACxD,IAAAA,EAAQ,WACR,IAAAI,cAAAA,OAAa,IAAG,GAAI,EACpB,IAAAC,YAAAA,OAAW,IAAG,GAAI,EAClB,IAAAC,oBAAAA,OAAmB,IAAG,KAAE,EACrBC,EAAI,IALiD,kEAMpD,OACJ,kBAAC,KAAiB,GAChBC,UAAW,qCACTJ,EAAgB,aAAe,KAE7BG,GAEHF,GACC,yBAAKG,UAAU,cACZ,IACD,kBAAC,IAAkB,CAACF,oBAAqBA,KAG5CN,IAWE,IAAMS,EAA6D,SAAC,GACzE,QAAAC,MAAAA,OAAK,IAAG,oBAAC,KAAuB,MAAG,EACnCC,EAAW,cACXX,EAAQ,WACRY,EAAM,SACHL,EAAI,IALkE,6CAMrE,OACJ,kBAAC,EAAAJ,SAAQ,KACP,kBAAC,KAAwB,GACvBK,WAAW,OAAK,CAAE,cAAeI,EAAQ,gBAAgB,KACrDL,GAEJ,kBAAC,EAAAM,UAAS,KACR,kBAAC,EAAAC,YAAW,KACV,kBAAC,IAAe,CAACJ,MAAOA,EAAOF,UAAU,wBACxCG,GAAe,kBAAC,EAAAI,KAAI,CAACC,UAAW,EAAAC,aAAA,GAAiBN,KAGtD,kBAAC,EAAAE,UAAS,CAACL,UAAU,qBAAqBR,O,0FCxBhD,QArCyE,SAAC,G,IACxE,IAAAM,oBAAAA,OAAmB,IAAG,KAAE,EAEpBY,EAAYZ,EAOhB,OANIA,MAAAA,OAAmB,EAAnBA,EAAqBa,QAAS,IAChCD,GAAY,IAAAE,cACV,SAAC,GAA0C,OAAT,mCAIlCF,EAAUC,QAAU,EACf,KAIP,kBAAC,EAAAE,WAAU,KACRH,EAAUI,KAAI,SAAC,EAAmCC,G,IAAjCb,EAAK,QAAET,EAAQ,WAAEuB,EAAY,eAAc,OAC3D,kBAAC,IAAe,CACdvB,SAAYiB,EAAUC,SAAWI,EAAQ,EAAKtB,OAAWwB,EACzDD,aAAcA,EACdE,KAAG,EACHC,OAAK,EACLC,IAAK3B,EACLO,UAAU,yBAEV,kBAAC,EAAAqB,eAAc,CACbC,YAAaP,EAAQ,EACrBQ,SAAUb,EAAUC,SAAWI,EAAQ,GAEtCb","sources":["webpack:///./src/presentational-components/shared/conditional-link.tsx","webpack:///./src/presentational-components/shared/top-toolbar.tsx","webpack:///./src/smart-components/common/catalog-breadcrumbs.tsx"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { Fragment } from 'react';\nimport CatalogLink, {\n  CatalogLinkProps\n} from '../../smart-components/common/catalog-link';\n\nexport interface ConditionalLinkProps\n  extends Omit<CatalogLinkProps, 'pathname'> {\n  pathname?: string;\n}\nconst ConditionalLink: React.ComponentType<ConditionalLinkProps> = ({\n  children,\n  pathname,\n  ...props\n}) => (\n  <Fragment>\n    {pathname ? (\n      <CatalogLink pathname={pathname} {...props}>\n        {children}\n      </CatalogLink>\n    ) : (\n      children\n    )}\n  </Fragment>\n);\n\nexport default ConditionalLink;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment, ReactNode } from 'react';\nimport {\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport clsx from 'clsx';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport CatalogBreadcrumbs from '../../smart-components/common/catalog-breadcrumbs';\nimport {\n  TopToolbarWrapper,\n  TopToolbarTitleContainer\n} from '../styled-components/toolbars';\nimport { BreadcrumbFragment } from '../../redux/reducers/breadcrumbs-reducer';\nimport { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\n\nexport interface TopToolbarProps {\n  paddingBottom?: boolean;\n  breadcrumbs?: boolean;\n  breadcrumbfragments?: BreadcrumbFragment[];\n}\nconst TopToolbar: React.ComponentType<TopToolbarProps> = ({\n  children,\n  paddingBottom = true,\n  breadcrumbs = true,\n  breadcrumbfragments = [],\n  ...rest\n}) => (\n  <TopToolbarWrapper\n    className={`pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${\n      paddingBottom ? 'pf-u-pb-lg' : ''\n    }`}\n    {...rest}\n  >\n    {breadcrumbs && (\n      <div className=\"pf-u-mb-md\">\n        {' '}\n        <CatalogBreadcrumbs breadcrumbfragments={breadcrumbfragments} />\n      </div>\n    )}\n    {children}\n  </TopToolbarWrapper>\n);\n\nexport default TopToolbar;\n\nexport interface TopToolbarTitleProps {\n  title?: React.ElementType;\n  description?: ReactNode;\n  noData?: boolean;\n}\nexport const TopToolbarTitle: React.ComponentType<TopToolbarTitleProps> = ({\n  title = <ToolbarTitlePlaceholder />,\n  description,\n  children,\n  noData,\n  ...rest\n}) => (\n  <Fragment>\n    <TopToolbarTitleContainer\n      className={clsx({ 'pf-u-mb-lg': !noData, 'flex-no-wrap': true })}\n      {...rest}\n    >\n      <LevelItem>\n        <TextContent>\n          <PageHeaderTitle title={title} className=\"pf-u-m-0 pf-u-mr-md\" />\n          {description && <Text component={TextVariants.p}>{description}</Text>}\n        </TextContent>\n      </LevelItem>\n      <LevelItem className=\"flex-item-no-wrap\">{children}</LevelItem>\n    </TopToolbarTitleContainer>\n  </Fragment>\n);\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport ConditionalLink from '../../presentational-components/shared/conditional-link';\nimport { BreadcrumbFragment } from '../../redux/reducers/breadcrumbs-reducer';\nimport { CatalogRootState } from '../../types/redux';\n\nexport interface CatalogBreadcrumbsProps {\n  breadcrumbfragments?: BreadcrumbFragment[];\n}\nconst CatalogBreadcrumbs: React.ComponentType<CatalogBreadcrumbsProps> = ({\n  breadcrumbfragments = []\n}) => {\n  let fragments = breadcrumbfragments;\n  if (breadcrumbfragments?.length < 1) {\n    fragments = useSelector<CatalogRootState, BreadcrumbFragment[]>(\n      ({ breadcrumbsReducer: { fragments } }) => fragments\n    );\n  }\n\n  if (fragments.length <= 1) {\n    return null;\n  }\n\n  return (\n    <Breadcrumb>\n      {fragments.map(({ title, pathname, searchParams }, index) => (\n        <ConditionalLink\n          pathname={!(fragments.length === index + 1) ? pathname : undefined}\n          searchParams={searchParams}\n          nav\n          exact\n          key={pathname}\n          className=\"pf-c-breadcrumb__item\"\n        >\n          <BreadcrumbItem\n            showDivider={index > 0}\n            isActive={fragments.length === index + 1}\n          >\n            {title}\n          </BreadcrumbItem>\n        </ConditionalLink>\n      ))}\n    </Breadcrumb>\n  );\n};\n\nexport default CatalogBreadcrumbs;\n"],"names":["children","pathname","props","Fragment","paddingBottom","breadcrumbs","breadcrumbfragments","rest","className","TopToolbarTitle","title","description","noData","LevelItem","TextContent","Text","component","TextVariants","fragments","length","useSelector","Breadcrumb","map","index","searchParams","undefined","nav","exact","key","BreadcrumbItem","showDivider","isActive"],"sourceRoot":""}