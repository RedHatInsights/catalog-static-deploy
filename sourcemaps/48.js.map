{"version":3,"sources":["webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/shared/content-gallery-empty-state.js","webpack:///./src/presentational-components/shared/card-common.js","webpack:///./src/presentational-components/styled-components/ellipsis-text-container.js","webpack:///./src/presentational-components/styled-components/card.js","webpack:///./src/presentational-components/styled-components/styled-gallery.js","webpack:///./src/smart-components/content-gallery/content-gallery.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/presentational-components/shared/card-checkbox.js","webpack:///./src/presentational-components/shared/service-offering-body.js","webpack:///./src/toolbar/helpers.js","webpack:///./src/smart-components/portfolio/portfolio-item.js","webpack:///./src/toolbar/schemas/portfolio-toolbar.schema.js","webpack:///./src/smart-components/portfolio/portfolio-empty-state.js","webpack:///./src/smart-components/portfolio/portfolio-items.js"],"names":["AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","options","getNewPage","request","debouncePromise","direction","propTypes","PropTypes","shape","isRequired","func","any","string","bool","defaultProps","ContentGalleryEmptyState","title","Icon","description","PrimaryAction","renderDescription","icon","component","TextVariants","h1","EmptyStatePrimaryAction","url","label","hasPermission","id","pathname","preserveSearch","variant","CardPropText","styled","div","ItemDetails","toDisplay","item","map","prop","key","arrayOf","oneOfType","node","EllipsisTextContainer","StyledCardBody","CardBody","StyledCard","Card","StyledGalleryItem","isDisabled","NoItems","ContentGallery","isLoading","items","renderEmptyState","length","type","hasGutter","array","BottomPaginationContainer","children","CardCheckbox","handleCheck","isChecked","onClick","event","stopPropagation","onChange","aria-label","ServiceOfferingCardBody","name","distributor","display_name","searchParams","portfolioName","h3","small","long_description","createSingleItemGroup","groupName","hidden","toolbarComponentTypes","TOOLBAR_GROUP","fields","TOOLBAR_ITEM","createLinkButton","LINK","BUTTON","StyledLevel","Level","PortfolioItem","removeInProgress","isSelected","src","CATALOG_API_BASE","sourceId","service_offering_source_ref","isSelectable","onSelect","platformId","orderUrl","portfolio_id","metadata","user_capabilities","destroy","PortfolioActionsToolbar","editPortfolioRoute","workflowPortfolioRoute","removePortfolioRoute","copyInProgress","copyPortfolio","userCapabilities","copy","update","set_approval","useState","isOpen","setOpen","dropdownItems","push","DropdownItem","role","Dropdown","position","DropdownPosition","right","toggle","KebabToggle","onToggle","isPlain","createPortfolioToolbarSchema","addProductsRoute","sharePortfolioRoute","removeProducts","itemsSelected","fetchPortfolioItemsWithPortfolio","portfolioId","filterProps","searchValue","onFilterChange","placeholder","share","unshare","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","noData","LEVEL_ITEM","LEVEL","TOOLBAR","FILTER_TOOLBAR_ITEM","isClearable","PortfolioEmptyState","handleFilterChange","emptyStateProps","Button","WrenchIcon","SearchIcon","PortfolioItems","routes","stateDispatch","state","isFetching","isFiltering","selectedItems","filterValue","useSelector","portfolioReducer","portfolioItems","data","selectedPortfolio","useRouteMatch","PORTFOLIO_ROUTE","useQuery","portfolio","dispatch","useDispatch","source","selectedItem","payload","includes","schema","dropDirection","portfolioRoute"],"mappings":"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","file":"js/48.67f529806e5f3d53fd30.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ContentGalleryEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <div className=\"pf-u-mt-xl\">\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={Icon} />\n      <TextContent>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </TextContent>\n      <EmptyStateBody>\n        {description}\n        {renderDescription()}\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        {PrimaryAction && <PrimaryAction />}\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </div>\n);\n\nContentGalleryEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nContentGalleryEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default ContentGalleryEmptyState;\n\nexport const EmptyStatePrimaryAction = ({\n  url,\n  label,\n  hasPermission = false,\n  id\n}) =>\n  hasPermission && (\n    <CatalogLink id={id} pathname={url} preserveSearch>\n      <Button variant=\"primary\">{label}</Button>\n    </CatalogLink>\n  );\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  hasPermission: PropTypes.bool\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst CardPropText = styled.div`\n  overflow: hidden;\n`;\n\nconst ItemDetails = ({ toDisplay = [], ...item }) =>\n  toDisplay.map((prop) => (\n    <CardPropText key={`card-prop-${prop}`}>{item[prop]}</CardPropText>\n  ));\n\nItemDetails.propTypes = {\n  toDisplay: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.arrayOf(PropTypes.node)\n    ])\n  )\n};\n\nItemDetails.defaultProps = {\n  toDisplay: []\n};\n\nexport default ItemDetails;\n","import styled from 'styled-components';\n\nconst EllipsisTextContainer = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nexport default EllipsisTextContainer;\n","import styled from 'styled-components';\nimport { CardBody } from '@patternfly/react-core';\n\nexport const StyledCardBody = styled(CardBody)`\n  height: 230px;\n  overflow: hidden;\n  padding: 0 !important;\n  margin: 0 24px 24px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Card, GalleryItem } from '@patternfly/react-core';\n\nexport const StyledCard = styled(Card)`\n  height: 330px;\n  position: relative;\n`;\n\nexport const StyledGalleryItem = styled(({ isDisabled, ...props }) => (\n  <GalleryItem {...props} />\n))`\n  position: relative;\n  ::after {\n    display: ${({ isDisabled }) => (isDisabled ? 'block' : 'none')};\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    content: '';\n    background-color: rgba(210, 210, 210, 0.5);\n    z-index: 1;\n    cursor: progress;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport { Text, TextVariants, Gallery } from '@patternfly/react-core';\n\nimport { CardLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst NoItems = () => (\n  <div>\n    <Text component={TextVariants.h1}>No items found</Text>\n  </div>\n);\n\nconst ContentGallery = ({ isLoading, items, renderEmptyState }) =>\n  isLoading ? (\n    <CardLoader />\n  ) : items.length === 0 ? (\n    renderEmptyState ? (\n      renderEmptyState()\n    ) : (\n      <NoItems />\n    )\n  ) : (\n    <Section type=\"content\">\n      <Gallery hasGutter className=\"content-gallery\">\n        {items}\n      </Gallery>\n    </Section>\n  );\n\nContentGallery.propTypes = {\n  isLoading: PropTypes.bool,\n  items: PropTypes.array,\n  renderEmptyState: PropTypes.func\n};\nexport default ContentGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    {children}\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CardCheckbox = ({ handleCheck, isChecked, id }) => (\n  <Checkbox\n    onClick={(event) => event.stopPropagation()}\n    isChecked={isChecked}\n    onChange={handleCheck}\n    aria-label=\"card checkbox\"\n    id={id}\n  />\n);\n\nCardCheckbox.propTypes = {\n  handleCheck: propTypes.func,\n  isChecked: propTypes.bool,\n  id: propTypes.string\n};\n\nexport default CardCheckbox;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ItemDetails from './card-common';\nimport ConditionalLink from './conditional-link';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { StyledCardBody } from '../styled-components/card';\n\nconst ServiceOfferingCardBody = ({\n  name,\n  display_name,\n  distributor,\n  pathname,\n  searchParams,\n  preserveSearch,\n  portfolioName,\n  ...props\n}) => (\n  <StyledCardBody>\n    <TextContent>\n      <ConditionalLink\n        pathname={pathname}\n        searchParams={searchParams}\n        preserveSearch={preserveSearch}\n      >\n        <Text component={TextVariants.h3} title={name}>\n          <EllipsisTextContainer>{name}</EllipsisTextContainer>\n        </Text>\n      </ConditionalLink>\n      {distributor && <Text component={TextVariants.small}>{distributor}</Text>}\n      {portfolioName && (\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component=\"small\">\n            Portfolio\n          </Text>\n          <Text>{portfolioName}</Text>\n        </Fragment>\n      )}\n    </TextContent>\n    <ItemDetails\n      toDisplay={[props.description ? 'description' : 'long_description']}\n      {...props}\n    />\n  </StyledCardBody>\n);\n\nServiceOfferingCardBody.propTypes = {\n  name: PropTypes.string,\n  display_name: PropTypes.string,\n  distributor: PropTypes.string,\n  long_description: PropTypes.string,\n  description: PropTypes.string,\n  pathname: PropTypes.string,\n  preserveSearch: PropTypes.bool,\n  searchParams: PropTypes.shape({ [PropTypes.string]: PropTypes.string }),\n  portfolioName: PropTypes.string\n};\n\nexport default ServiceOfferingCardBody;\n","import { toolbarComponentTypes } from './toolbar-mapper';\n\nexport const createSingleItemGroup = ({\n  groupName,\n  hidden = false,\n  ...item\n}) => ({\n  component: toolbarComponentTypes.TOOLBAR_GROUP,\n  key: `${groupName}/single-toolbar-item-group`,\n  fields: hidden\n    ? []\n    : [\n        {\n          component: toolbarComponentTypes.TOOLBAR_ITEM,\n          key: `${groupName}/single-toolbar-item`,\n          fields: [item]\n        }\n      ]\n});\n\nexport const createLinkButton = ({ pathname, preserveSearch, ...item }) => ({\n  component: toolbarComponentTypes.LINK,\n  pathname,\n  preserveSearch,\n  key: `${item.key}/button-link`,\n  isDisabled: item.isDisabled,\n  fields: [\n    {\n      component: toolbarComponentTypes.BUTTON,\n      ...item\n    }\n  ]\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level } from '@patternfly/react-core';\n\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport CardCheckbox from '../../presentational-components/shared/card-checkbox';\nimport ServiceOfferingCardBody from '../../presentational-components/shared/service-offering-body';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../../presentational-components/styled-components/styled-gallery';\nimport styled from 'styled-components';\n\nconst StyledLevel = styled(Level)`\n  flex: 1;\n`;\n\nconst PortfolioItem = (props) => (\n  <StyledGalleryItem isDisabled={props.removeInProgress && props.isSelected}>\n    <StyledCard>\n      <CardHeader>\n        <StyledLevel>\n          <CardIcon\n            src={`${CATALOG_API_BASE}/portfolio_items/${props.id}/icon`}\n            sourceId={props.service_offering_source_ref}\n          />\n          {props.isSelectable && (\n            <CardCheckbox\n              handleCheck={() => props.onSelect(props.id)}\n              isChecked={props.isSelected}\n              id={props.id}\n            />\n          )}\n        </StyledLevel>\n      </CardHeader>\n      <ServiceOfferingCardBody {...props} />\n      <CardFooter></CardFooter>\n    </StyledCard>\n  </StyledGalleryItem>\n);\n\nPortfolioItem.propTypes = {\n  id: PropTypes.string,\n  platformId: PropTypes.string,\n  service_offering_source_ref: PropTypes.string,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  orderUrl: PropTypes.string,\n  removeInProgress: PropTypes.bool,\n  portfolio_id: PropTypes.string,\n  metadata: PropTypes.shape({\n    user_capabilities: PropTypes.shape({ destroy: PropTypes.bool }).isRequired\n  }).isRequired\n};\n\nexport default PortfolioItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  DropdownItem\n} from '@patternfly/react-core';\n\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport { createSingleItemGroup, createLinkButton } from '../helpers';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\n/**\n * Cannot be anonymous function. Requires Component.diplayName to work with PF4 refs\n */\nconst PortfolioActionsToolbar = ({\n  editPortfolioRoute,\n  workflowPortfolioRoute,\n  removePortfolioRoute,\n  copyInProgress,\n  copyPortfolio,\n  userCapabilities: { copy, destroy, update, set_approval }\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const dropdownItems = [];\n  if (copy) {\n    dropdownItems.push(\n      <DropdownItem\n        component=\"button\"\n        aria-label=\"Copy Portfolio\"\n        key=\"copy-portfolio\"\n        id=\"copy-portfolio\"\n        onClick={copyPortfolio}\n      >\n        Copy\n      </DropdownItem>\n    );\n  }\n\n  if (set_approval) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Set approval workflow\"\n        key=\"set-approval-portfolio-action\"\n        id=\"set-approval-portfolio-action\"\n        component={\n          <CatalogLink preserveSearch pathname={workflowPortfolioRoute}>\n            Set approval\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Edit Portfolio\"\n        key=\"edit-portfolio\"\n        id=\"edit-portfolio\"\n        component={\n          <CatalogLink\n            id=\"edit-portfolio\"\n            preserveSearch\n            pathname={editPortfolioRoute}\n          >\n            Edit\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (destroy) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Remove Portfolio\"\n        key=\"delete-portfolio\"\n        id=\"delete-portfolio\"\n        component={\n          <CatalogLink preserveSearch pathname={removePortfolioRoute}>\n            Delete\n          </CatalogLink>\n        }\n        role=\"link\"\n        className=\"pf-c-dropdown__menu-item\"\n      />\n    );\n  }\n\n  return dropdownItems.length === 0 ? null : (\n    <Dropdown\n      className=\"pf-u-ml-md\"\n      onSelect={() => setOpen(false)}\n      position={DropdownPosition.right}\n      toggle={\n        <KebabToggle\n          id=\"toggle-portfolio-actions\"\n          onToggle={setOpen}\n          isDisabled={copyInProgress}\n        />\n      }\n      isOpen={isOpen}\n      isPlain\n      dropdownItems={dropdownItems}\n    />\n  );\n};\n\nPortfolioActionsToolbar.propTypes = {\n  removePortfolioRoute: PropTypes.string.isRequired,\n  editPortfolioRoute: PropTypes.string.isRequired,\n  workflowPortfolioRoute: PropTypes.string.isRequired,\n  copyPortfolio: PropTypes.func.isRequired,\n  copyInProgress: PropTypes.bool,\n  userCapabilities: PropTypes.shape({\n    copy: PropTypes.bool,\n    update: PropTypes.bool,\n    destroy: PropTypes.bool,\n    set_approval: PropTypes.bool\n  }).isRequired\n};\n\nconst createPortfolioToolbarSchema = ({\n  title,\n  addProductsRoute,\n  copyPortfolio,\n  sharePortfolioRoute,\n  editPortfolioRoute,\n  workflowPortfolioRoute,\n  removePortfolioRoute,\n  copyInProgress,\n  isLoading,\n  removeProducts,\n  itemsSelected,\n  meta,\n  fetchPortfolioItemsWithPortfolio,\n  portfolioId,\n  description,\n  filterProps: { searchValue, onFilterChange, placeholder },\n  userCapabilities: { share, unshare, ...userCapabilities }\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'portfolio-top-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'portfolio-toolbar-title',\n          noData: meta.noData,\n          title,\n          description,\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'portfolio-actions',\n              fields: [\n                createLinkButton({\n                  pathname: sharePortfolioRoute,\n                  preserveSearch: true,\n                  variant: 'secondary',\n                  title: 'Share',\n                  isDisabled: copyInProgress,\n                  key: 'portfolio-share-button',\n                  id: 'portfolio-share-button',\n                  hidden: !share && !unshare\n                }),\n                {\n                  component: PortfolioActionsToolbar,\n                  editPortfolioRoute,\n                  workflowPortfolioRoute,\n                  removePortfolioRoute,\n                  copyPortfolio,\n                  copyInProgress,\n                  userCapabilities,\n                  key: 'portfolio-actions-dropdown'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'portfolio-items-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'portfolio-items-actions',\n                  fields: [\n                    createSingleItemGroup({\n                      groupName: 'filter-portfolio-items',\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      isClearable: true,\n                      key: 'portfolio-items-filter',\n                      searchValue,\n                      onFilterChange,\n                      placeholder\n                    }),\n                    createSingleItemGroup({\n                      hidden: meta.count === 0 || !userCapabilities.update,\n                      groupName: 'add-portfolio-items',\n                      key: 'portfolio-items-add-group',\n                      ...createLinkButton({\n                        preserveSearch: true,\n                        pathname: addProductsRoute,\n                        isDisabled: isLoading || copyInProgress,\n                        variant: 'primary',\n                        title: 'Add',\n                        key: 'add-products-button'\n                      })\n                    }),\n                    createSingleItemGroup({\n                      component: toolbarComponentTypes.BUTTON,\n                      hidden: meta.count === 0 || !userCapabilities.update,\n                      groupName: 'remove-portfolio-items',\n                      variant: 'link',\n                      title: 'Remove',\n                      key: 'remove-products-button',\n                      id: 'remove-products-button',\n                      isDisabled: !itemsSelected,\n                      onClick: removeProducts\n                    })\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            key: 'portfolio-items-pagination',\n                            meta,\n                            apiRequest: fetchPortfolioItemsWithPortfolio,\n                            apiProps: portfolioId,\n                            isCompact: true\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, WrenchIcon } from '@patternfly/react-icons';\n\nimport ContentGalleryEmptyState, {\n  EmptyStatePrimaryAction\n} from '../../presentational-components/shared/content-gallery-empty-state';\nimport { Button } from '@patternfly/react-core';\n\nconst PortfolioEmptyState = ({\n  url,\n  handleFilterChange,\n  meta,\n  userCapabilities: { update }\n}) => {\n  const NoDataAction = () => (\n    <EmptyStatePrimaryAction\n      url={url}\n      label=\"Add products\"\n      id=\"add-products-to-portfolio\"\n      hasPermission={update}\n    />\n  );\n\n  const FilterAction = () => (\n    <Button\n      id=\"clear-portfolio-filter\"\n      variant=\"link\"\n      onClick={() => handleFilterChange('')}\n    >\n      Clear all filters\n    </Button>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? NoDataAction : FilterAction,\n    title: meta.noData ? 'No products yet' : 'No results found',\n    description: meta.noData\n      ? 'No products in your portfolio'\n      : 'No results match the filter criteria. Remove all filters or clear all filters to show results.',\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n  return <ContentGalleryEmptyState {...emptyStateProps} />;\n};\n\nPortfolioEmptyState.propTypes = {\n  url: PropTypes.string.isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n  meta: PropTypes.shape({\n    noData: PropTypes.bool\n  }).isRequired,\n  userCapabilities: PropTypes.shape({\n    update: PropTypes.bool\n  }).isRequired\n};\n\nexport default PortfolioEmptyState;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createPortfolioToolbarSchema from '../../toolbar/schemas/portfolio-toolbar.schema';\nimport PortfolioEmptyState from './portfolio-empty-state';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport PortfolioItem from './portfolio-item';\nimport { fetchPortfolioItemsWithPortfolio } from '../../redux/actions/portfolio-actions';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useQuery from '../../utilities/use-query';\nimport { PORTFOLIO_ROUTE } from '../../constants/routes';\n\nconst PortfolioItems = ({\n  routes,\n  handleFilterChange,\n  removeProducts,\n  copyPortfolio,\n  stateDispatch,\n  state: {\n    removeInProgress,\n    isFetching,\n    isFiltering,\n    copyInProgress,\n    selectedItems,\n    filterValue\n  }\n}) => {\n  const { data, meta, name, description, userCapabilities } = useSelector(\n    ({\n      portfolioReducer: {\n        portfolioItems: { data, meta },\n        selectedPortfolio: {\n          name,\n          description,\n          metadata: { user_capabilities }\n        }\n      }\n    }) => ({\n      data,\n      meta,\n      name,\n      description,\n      userCapabilities: user_capabilities\n    })\n  );\n  const { url } = useRouteMatch(PORTFOLIO_ROUTE);\n  const [{ portfolio: id }] = useQuery(['portfolio']);\n  const dispatch = useDispatch();\n\n  const items = data.map((item) => (\n    <PortfolioItem\n      key={item.id}\n      {...item}\n      pathname={`${url}/portfolio-item`}\n      searchParams={{\n        source: item.service_offering_source_ref,\n        'portfolio-item': item.id\n      }}\n      preserveSearch\n      isSelectable={userCapabilities.update}\n      onSelect={(selectedItem) =>\n        stateDispatch({ type: 'selectItem', payload: selectedItem })\n      }\n      isSelected={selectedItems.includes(item.id)}\n      removeInProgress={removeInProgress}\n    />\n  ));\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPortfolioToolbarSchema({\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterChange,\n            placeholder: 'Filter by product'\n          },\n          title: name,\n          description,\n          ...routes,\n          copyPortfolio,\n          isLoading: isFetching || isFiltering,\n          copyInProgress,\n          removeProducts: () => removeProducts(selectedItems),\n          itemsSelected: selectedItems.length > 0,\n          meta,\n          fetchPortfolioItemsWithPortfolio: (...args) =>\n            dispatch(fetchPortfolioItemsWithPortfolio(...args)),\n          portfolioId: id,\n          userCapabilities\n        })}\n      />\n      <ContentGallery\n        items={items}\n        isLoading={isFetching || isFiltering}\n        renderEmptyState={() => (\n          <PortfolioEmptyState\n            handleFilterChange={handleFilterChange}\n            meta={meta}\n            userCapabilities={userCapabilities}\n            url={routes.addProductsRoute}\n          />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiProps={id}\n            apiRequest={(...args) =>\n              dispatch(fetchPortfolioItemsWithPortfolio(...args))\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nPortfolioItems.propTypes = {\n  routes: PropTypes.shape({\n    addProductsRoute: PropTypes.string.isRequired,\n    portfolioRoute: PropTypes.string.isRequired\n  }).isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n  removeProducts: PropTypes.func.isRequired,\n  copyPortfolio: PropTypes.func.isRequired,\n  stateDispatch: PropTypes.func.isRequired,\n  state: PropTypes.shape({\n    removeInProgress: PropTypes.bool,\n    isFetching: PropTypes.bool,\n    isFiltering: PropTypes.bool,\n    copyInProgress: PropTypes.bool,\n    selectedItems: PropTypes.arrayOf(PropTypes.string),\n    filterValue: PropTypes.string\n  }).isRequired\n};\n\nexport default PortfolioItems;\n"],"sourceRoot":""}