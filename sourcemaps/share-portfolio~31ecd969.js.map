{"version":3,"sources":["webpack:///./src/utilities/use-enhanced-history.ts","webpack:///./src/messages/filtering.messages.ts","webpack:///./node_modules/lodash/_assocIndexOf.js","webpack:///./node_modules/lodash/eq.js","webpack:///./node_modules/lodash/isEqual.js","webpack:///./node_modules/lodash/_baseIsEqual.js","webpack:///./node_modules/lodash/_Stack.js","webpack:///./node_modules/lodash/_overArg.js","webpack:///./node_modules/lodash/isBuffer.js","webpack:///./node_modules/lodash/isTypedArray.js","webpack:///./node_modules/lodash/_baseIsEqualDeep.js","webpack:///./node_modules/lodash/_listCacheClear.js","webpack:///./node_modules/lodash/_listCacheDelete.js","webpack:///./node_modules/lodash/_listCacheGet.js","webpack:///./node_modules/lodash/_listCacheHas.js","webpack:///./node_modules/lodash/_listCacheSet.js","webpack:///./node_modules/lodash/_equalArrays.js","webpack:///./node_modules/lodash/_arraySome.js","webpack:///./node_modules/lodash/_equalByTag.js","webpack:///./node_modules/lodash/_equalObjects.js","webpack:///./node_modules/lodash/_getAllKeys.js","webpack:///./node_modules/lodash/_getTag.js","webpack:///./src/forms/portfolio-share-form.schema.ts","webpack:///./src/helpers/share/share-helper.ts","webpack:///./src/redux/actions/share-actions.ts","webpack:///./src/helpers/rbac/rbac-helper.ts","webpack:///./src/helpers/portfolio/share-portfolio-message.ts","webpack:///./src/smart-components/portfolio/share-portfolio-modal.tsx"],"names":["removeSearch","keepHash","history","push","target","internalTarget","location","hash","length","split","search","undefined","removeSearchQuery","filteringMessages","noItems","id","defaultMessage","filterByProduct","noResults","noResultsDescription","clearFilters","noProducts","noRecords","filterByTitle","noResultsFound","noResult","unknown","eq","module","exports","array","key","value","other","baseIsEqual","baseIsEqualDeep","isObjectLike","bitmask","customizer","stack","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","this","clear","entry","set","prototype","get","has","func","transform","arg","Stack","equalArrays","equalByTag","equalObjects","getTag","isArray","isBuffer","isTypedArray","objectTag","hasOwnProperty","Object","object","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","call","othIsWrapped","objUnwrapped","othUnwrapped","__data__","size","assocIndexOf","splice","Array","data","pop","SetCache","arraySome","cacheHas","isPartial","arrLength","othLength","stacked","result","seen","arrValue","othValue","compared","othIndex","predicate","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","constructor","othCtor","nativeKeys","overArg","keys","nativeObjectToString","toString","newShareSchema","loadGroupOptions","permissionVerbs","component","description","name","fields","loadOptions","isSearchable","permissions","groupShareSchema","createPortfolioShareSchema","canShare","canUnshare","axiosInstance","userApi","getShareInfo","portfolioId","portfolioData","type","payload","policy","group_uuids","group_uuid","sharePortfolio","unsharePortfolio","groupMessage","groupNames","formatMessage","shareSuccessTwoGroup","group1","group2","shareSuccessMultipleGroups","count","shareData","initialGroups","removedGroups","newGroups","portfolioName","title","shareSuccessTitle","changedPermissions","filter","originalGroup","find","group","unshared","shared","shareSuccessTitleOnlyUnsharing","shareSuccessDescriptionOnlyUnsharing","map","b","shareSuccessTitleOnlySharing","shareSuccessDescriptionOnlySharing","shareSuccessTitleOnlyChaningPermissions","shareSuccessDescriptionOnlyChaningPermissions","closeUrl","viewState","dispatch","portfolio","isFetching","setFetching","portfolioReducer","selectedPortfolio","isLoading","initialValues","shareInfo","then","catch","onCancel","pathname","metadata","user_capabilities","share","unshare","isLoadingFinal","Modal","portfolioShareTitle","isOpen","variant","onClose","hasGutter","StackItem","TextContent","Text","portfolioShareDescription","strong","chunks","schema","inputValue","filterValue","uuid","label","onSubmit","formApi","getState","item","forEach","initialEntry","groupName","createSharePromise","sharePromises","rest","join","Promise","all","dismissable","validate","values","errors","portfolioSharePermissions","portfolioShareGroups","groupPermissions","permission","indexOf","group_name","options","perm","sort","templateProps","disableSubmit","submitLabel","portfolioShareApply"],"mappings":"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","file":"js/share-portfolio~31ecd969.4546bb39c013df4b50d4.js","sourcesContent":["import { useHistory } from 'react-router-dom';\nimport { History, Path } from 'history';\nimport { AnyObject } from '@data-driven-forms/react-form-renderer';\n\nexport type EnhancedHistoryPushtarget =\n  | Path\n  | { pathname: string; hash?: string; search?: string; state?: AnyObject };\n\nconst removeSearchQuery = (target: EnhancedHistoryPushtarget) => {\n  if (typeof target === 'string') {\n    return target.split('?')[0];\n  }\n\n  if (typeof target === 'object') {\n    return {\n      ...target,\n      search: undefined\n    };\n  }\n\n  return target;\n};\n\n/**\n * Wrapper around useHistory hook which adds aditional settings to standard history methods\n * @param {Boolean} removeSearch if true, using history navigation methods will remove search string from path\n * @param {Boolean} keepHash if true, using history navigation methods will not remove hash from URL\n */\nconst useEnhancedHistory = ({\n  removeSearch,\n  keepHash\n}: {\n  removeSearch?: boolean;\n  keepHash?: boolean;\n} = {}): History<History.UnknownFacade> => {\n  const history = useHistory();\n  return {\n    ...history,\n    push: (target: EnhancedHistoryPushtarget) => {\n      let internalTarget = target;\n      if (keepHash && history.location.hash.length > 0) {\n        internalTarget =\n          typeof internalTarget === 'object'\n            ? { ...internalTarget, hash: history.location.hash }\n            : `${internalTarget}${history.location.hash}`;\n      }\n\n      if (removeSearch) {\n        return history.push(removeSearchQuery(internalTarget));\n      }\n\n      return history.push(internalTarget);\n    }\n  };\n};\n\nexport default useEnhancedHistory;\n","import { defineMessages } from 'react-intl';\n\nconst filteringMessages = defineMessages({\n  noItems: {\n    id: 'common.filtering.noItems',\n    defaultMessage: 'No items found'\n  },\n  filterByProduct: {\n    id: 'common.filtering.filterByProduct',\n    defaultMessage: 'Filter by product'\n  },\n  noResults: {\n    id: 'common.filtering.noResults',\n    defaultMessage: 'No results found'\n  },\n  noResultsDescription: {\n    id: 'common.filtering.noResultsDescription',\n    defaultMessage:\n      'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n  },\n  clearFilters: {\n    id: 'common.filtering.clear-filters',\n    defaultMessage: 'Clear all filters'\n  },\n  noProducts: {\n    id: 'common.filtering.no-products',\n    defaultMessage: 'No products yet'\n  },\n  noRecords: {\n    id: 'commonMessages.noRecords',\n    defaultMessage: 'No records'\n  },\n  filterByTitle: {\n    id: 'tableToolbar.filterByTitle',\n    defaultMessage: 'Filter by {title}'\n  },\n  noResultsFound: {\n    id: 'tableToolbar.noResultsFound',\n    defaultMessage: 'No results found'\n  },\n  noResult: {\n    id: 'tableToolbar.noResult',\n    defaultMessage: 'No {results}'\n  },\n  unknown: {\n    id: 'commonMessages.unknown',\n    defaultMessage: 'Unknown'\n  }\n});\n\nexport default filteringMessages;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","import Field from '@data-driven-forms/react-form-renderer/dist/cjs/field';\nimport Schema from '@data-driven-forms/react-form-renderer/dist/cjs/schema';\nimport { SelectOptions } from '../types/common-types';\n\n/**\n * Creates a data-driven-form schema for sharing/un-sharing portfolio\n */\nconst newShareSchema = (\n  loadGroupOptions: (inputValue?: string) => Promise<SelectOptions>,\n  permissionVerbs: SelectOptions\n): Field[] => [\n  {\n    component: 'sub-form',\n    description: 'share.new.description',\n    name: 'new_share',\n    key: '1',\n    fields: [\n      {\n        name: 'group-selection',\n        component: 'share-group-select',\n        loadOptions: loadGroupOptions,\n        isSearchable: true,\n        permissions: permissionVerbs\n      }\n    ]\n  }\n];\n\nconst groupShareSchema = (permissionVerbs: SelectOptions): Field[] => [\n  {\n    component: 'sub-form',\n    name: 'current-groups-sub-form',\n    fields: [\n      {\n        name: 'shared-groups',\n        permissionVerbs,\n        component: 'share-group-edit'\n      }\n    ]\n  }\n];\n\nexport const createPortfolioShareSchema = (\n  loadGroupOptions: (inputValue?: string) => Promise<SelectOptions>,\n  permissionVerbs: SelectOptions,\n  canShare: boolean,\n  canUnshare: boolean\n): Schema => {\n  const portfolioSchema = {\n    fields: [\n      ...(canShare ? newShareSchema(loadGroupOptions, permissionVerbs) : []),\n      ...(canUnshare ? groupShareSchema(permissionVerbs) : [])\n    ]\n  };\n  return portfolioSchema;\n};\n","import { getAxiosInstance, getPortfolioApi } from '../shared/user-login';\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport {\n  ShareInfo,\n  SharePolicy,\n  SharePolicyPermissionsEnum,\n  UnsharePolicyPermissionsEnum,\n  UnsharePolicy\n} from '@redhat-cloud-services/catalog-client';\n\nconst axiosInstance = getAxiosInstance();\nconst userApi = getPortfolioApi();\n\nexport const getShareInfo = (portfolioId: string): Promise<ShareInfo> =>\n  axiosInstance.get(`${CATALOG_API_BASE}/portfolios/${portfolioId}/share_info`);\n\nexport interface ShareData<T = SharePolicyPermissionsEnum> {\n  permissions: T;\n  group_uuid: string;\n  id: string;\n}\nexport const sharePortfolio = (data: ShareData): Promise<void> => {\n  const policy: SharePolicy = {\n    permissions: data.permissions.split(',') as SharePolicyPermissionsEnum[],\n    group_uuids: [data.group_uuid]\n  };\n  return (userApi.sharePortfolio(data.id, policy) as unknown) as Promise<void>;\n};\n\nexport const unsharePortfolio = (\n  data: ShareData<UnsharePolicyPermissionsEnum[]>\n): Promise<void> => {\n  const policy: UnsharePolicy = {\n    permissions: data.permissions,\n    group_uuids: [data.group_uuid]\n  };\n  return (userApi.unsharePortfolio(data.id, policy) as unknown) as Promise<\n    void\n  >;\n};\n","import {\n  ShareInfo,\n  UnsharePolicyPermissionsEnum\n} from '@redhat-cloud-services/catalog-client';\nimport * as ShareHelper from '../../helpers/share/share-helper';\nimport { AsyncMiddlewareAction } from '../../types/redux';\nimport * as ActionTypes from '../action-types';\n\nexport const fetchShareInfo = (\n  portfolioId: string\n): AsyncMiddlewareAction<ShareInfo> => ({\n  type: ActionTypes.QUERY_PORTFOLIO,\n  payload: ShareHelper.getShareInfo(portfolioId)\n});\n\nexport const sharePortfolio = (\n  portfolioData: ShareHelper.ShareData\n): AsyncMiddlewareAction<void> => ({\n  type: ActionTypes.SHARE_PORTFOLIO,\n  payload: ShareHelper.sharePortfolio({\n    ...portfolioData\n  })\n});\n\nexport const unsharePortfolio = (\n  portfolioData: ShareHelper.ShareData<UnsharePolicyPermissionsEnum[]>\n): AsyncMiddlewareAction<void> => ({\n  type: ActionTypes.UNSHARE_PORTFOLIO,\n  payload: ShareHelper.unsharePortfolio({\n    ...portfolioData\n  })\n});\n","import { getAxiosInstance, getRbacGroupApi } from '../shared/user-login';\nimport { RBAC_API_BASE } from '../../utilities/constants';\nimport { GroupPagination } from '@redhat-cloud-services/rbac-client';\nimport { SelectOptions } from '../../types/common-types';\n\nconst api = getRbacGroupApi();\n\nexport const getRbacGroups = (): Promise<GroupPagination> =>\n  (api.listGroups() as unknown) as Promise<GroupPagination>;\n\nexport const fetchFilterGroups = (filterValue = ''): Promise<SelectOptions> =>\n  getAxiosInstance()\n    .get(\n      `${RBAC_API_BASE}/groups/${\n        filterValue.length > 0 ? `?name=${filterValue}` : ''\n      }`\n    )\n    .then(({ data }: GroupPagination) =>\n      data.map(({ uuid, name }) => ({ label: name, value: uuid }))\n    );\n","import portfolioMessages from '../../messages/portfolio.messages';\nimport { Bold } from '../../presentational-components/shared/intl-rich-text-components';\nimport { ReactNode } from 'react';\nimport { MessageDescriptor } from 'react-intl';\nimport { AnyObject } from '../../types/common-types';\n\nconst groupMessage = (\n  groupNames: string[],\n  formatMessage: (message: MessageDescriptor, values?: AnyObject) => ReactNode\n) => {\n  switch (groupNames.length) {\n    case 1:\n      return groupNames[0];\n    case 2:\n      return formatMessage(portfolioMessages.shareSuccessTwoGroup, {\n        group1: groupNames[0],\n        group2: groupNames[1]\n      });\n    default:\n      return formatMessage(portfolioMessages.shareSuccessMultipleGroups, {\n        count: groupNames.length\n      });\n  }\n};\n\n// TODO This will be the form type\nexport interface SharePortfolioData {\n  id?: string;\n  group_uuid: string;\n  permissions: string;\n  groupName: string;\n}\nconst sharePorfolioMessage = ({\n  shareData,\n  initialGroups,\n  removedGroups,\n  newGroups,\n  formatMessage,\n  portfolioName\n}: {\n  shareData: SharePortfolioData[];\n  initialGroups: SharePortfolioData[];\n  removedGroups: SharePortfolioData[];\n  newGroups: SharePortfolioData[];\n  formatMessage: (message: MessageDescriptor, values?: AnyObject) => ReactNode;\n  portfolioName: (...args: any[]) => string | undefined;\n}): { title: ReactNode; description: ReactNode } => {\n  let title = formatMessage(portfolioMessages.shareSuccessTitle);\n  let description;\n\n  const changedPermissions = shareData.filter(({ permissions, group_uuid }) => {\n    const originalGroup = initialGroups.find(\n      (group) => group.group_uuid === group_uuid\n    );\n\n    return (\n      originalGroup &&\n      permissions?.split(',').length !==\n        originalGroup.permissions?.split(',').length\n    );\n  });\n  const unshared =\n    removedGroups.filter(\n      ({ group_uuid }) =>\n        !changedPermissions.find((group) => group.group_uuid === group_uuid)\n    ).length > 0;\n  const shared =\n    newGroups.filter(\n      ({ group_uuid }) =>\n        !initialGroups.find((group) => group.group_uuid === group_uuid)\n    ).length > 0;\n\n  if (unshared && !shared && changedPermissions.length === 0) {\n    title = formatMessage(portfolioMessages.shareSuccessTitleOnlyUnsharing);\n    description = formatMessage(\n      portfolioMessages.shareSuccessDescriptionOnlyUnsharing,\n      {\n        name: portfolioName(),\n        group: groupMessage(\n          removedGroups.map(({ groupName }) => groupName),\n          formatMessage\n        ),\n        b: Bold\n      }\n    );\n  }\n\n  if (!unshared && shared && changedPermissions.length === 0) {\n    title = formatMessage(portfolioMessages.shareSuccessTitleOnlySharing);\n    description = formatMessage(\n      portfolioMessages.shareSuccessDescriptionOnlySharing,\n      {\n        name: portfolioName(),\n        group: groupMessage(\n          newGroups.map(({ groupName }) => groupName),\n          formatMessage\n        ),\n        b: Bold\n      }\n    );\n  }\n\n  if (!unshared && !shared && changedPermissions.length > 0) {\n    title = formatMessage(\n      portfolioMessages.shareSuccessTitleOnlyChaningPermissions\n    );\n    description = formatMessage(\n      portfolioMessages.shareSuccessDescriptionOnlyChaningPermissions,\n      {\n        group: groupMessage(\n          changedPermissions.map(({ groupName }) => groupName),\n          formatMessage\n        ),\n        b: Bold\n      }\n    );\n  }\n\n  return { title, description };\n};\n\nexport default sharePorfolioMessage;\n","/* eslint-disable react/prop-types */\nimport React, { ReactNode, useEffect, useState } from 'react';\nimport FormRenderer from '../common/form-renderer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport isEqual from 'lodash/isEqual';\nimport {\n  Modal,\n  TextContent,\n  Text,\n  Stack,\n  StackItem\n} from '@patternfly/react-core';\nimport { createPortfolioShareSchema } from '../../forms/portfolio-share-form.schema';\nimport {\n  fetchPortfolios,\n  resetSelectedPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport {\n  fetchShareInfo,\n  sharePortfolio,\n  unsharePortfolio\n} from '../../redux/actions/share-actions';\nimport { ShareLoader } from '../../presentational-components/shared/loader-placeholders';\nimport { permissionOptions, permissionValues } from '../../utilities/constants';\nimport { fetchFilterGroups } from '../../helpers/rbac/rbac-helper';\nimport useQuery from '../../utilities/use-query';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\nimport { UnauthorizedRedirect } from '../error-pages/error-redirects';\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport { ADD_NOTIFICATION } from '@redhat-cloud-services/frontend-components-notifications/cjs/actionTypes';\nimport filteringMessages from '../../messages/filtering.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport sharePorfolioMessage, {\n  SharePortfolioData\n} from '../../helpers/portfolio/share-portfolio-message';\nimport { CatalogRootState } from '../../types/redux';\nimport {\n  ShareInfo,\n  SharePolicyPermissionsEnum,\n  UnsharePolicyPermissionsEnum\n} from '@redhat-cloud-services/catalog-client';\nimport { FormApi, Full, InternalPortfolio } from '../../types/common-types';\n\nexport type UniversalSharePolicy =\n  | (UnsharePolicyPermissionsEnum[] & SharePolicyPermissionsEnum.Read)\n  | (UnsharePolicyPermissionsEnum[] & SharePolicyPermissionsEnum.Update)\n  | (UnsharePolicyPermissionsEnum[] & SharePolicyPermissionsEnum.Delete)\n  | (UnsharePolicyPermissionsEnum[] & SharePolicyPermissionsEnum.Order);\n\nexport interface SharePortfolioModalProps {\n  closeUrl: string;\n  removeSearch?: boolean;\n  portfolioName?: (portfolio: string) => string | undefined;\n  viewState?: {\n    count: number;\n    limit: number;\n    offset: number;\n    filter: string;\n  };\n}\nconst SharePortfolioModal: React.ComponentType<SharePortfolioModalProps> = ({\n  closeUrl,\n  removeSearch,\n  viewState,\n  portfolioName = () => ''\n}) => {\n  const formatMessage = useFormatMessage();\n  const dispatch = useDispatch();\n  const { push } = useEnhancedHistory({ removeSearch, keepHash: true });\n  const [{ portfolio }, search] = useQuery(['portfolio']);\n  const [isFetching, setFetching] = useState(true);\n\n  const { selectedPortfolio: initialValues, isLoading } = useSelector<\n    CatalogRootState,\n    {\n      selectedPortfolio: InternalPortfolio;\n      isLoading: boolean;\n    }\n  >(({ portfolioReducer: { selectedPortfolio, isLoading } }) => ({\n    selectedPortfolio: selectedPortfolio as InternalPortfolio,\n    isLoading\n  }));\n\n  const { shareInfo } = useSelector<\n    CatalogRootState,\n    {\n      shareInfo: ShareInfo[];\n    }\n  >(({ shareReducer: { shareInfo } }) => ({\n    shareInfo\n  }));\n  useEffect(() => {\n    setFetching(true);\n    dispatch(fetchShareInfo(portfolio) as Promise<any>)\n      .then(() => setFetching(false))\n      .catch(() => setFetching(false));\n  }, []);\n\n  const onCancel = () => {\n    dispatch(resetSelectedPortfolio());\n    push({ pathname: closeUrl, search });\n  };\n\n  const initialShares = () => {\n    const initialGroupShareList = (shareInfo as Full<ShareInfo>[]).map(\n      (group) => {\n        const groupPermissions = group.permissions.filter(\n          (permission) => permissionValues.indexOf(permission) > -1\n        );\n        const groupName = group.group_name;\n        const options = permissionOptions.find(\n          (perm) => perm.value === groupPermissions.sort().join(',')\n        );\n        return {\n          groupName,\n          group_uuid: group.group_uuid,\n          permissions: options\n            ? options.value\n            : formatMessage(filteringMessages.unknown)\n        };\n      }\n    );\n    return initialGroupShareList;\n  };\n\n  const loadGroupOptions = (inputValue?: string) =>\n    fetchFilterGroups(inputValue);\n\n  const onSubmit = (\n    data: { 'shared-groups': SharePortfolioData[] },\n    formApi: FormApi\n  ) => {\n    const shareData = data['shared-groups'];\n    const newGroups: SharePortfolioData[] = [];\n    const initialGroups: SharePortfolioData[] = formApi.getState()\n      .initialValues['shared-groups'];\n    const removedGroups = initialGroups\n      .filter(\n        (group) =>\n          !shareData.find((item) => item.group_uuid === group.group_uuid)\n      )\n      .map(({ permissions, ...group }) => ({\n        ...group,\n        permissions: permissions.split(',')\n      }));\n    shareData.forEach((group) => {\n      const initialEntry = initialGroups.find(\n        (item) => item.group_uuid === group.group_uuid\n      );\n      if (initialEntry && !isEqual(initialEntry, group)) {\n        if (initialEntry.permissions!.length > group.permissions.length) {\n          removedGroups.push({\n            id: portfolio,\n            permissions: ['update'],\n            group_uuid: group.group_uuid,\n            groupName: group.groupName\n          });\n        } else {\n          newGroups.push(group);\n        }\n      }\n\n      if (!initialEntry) {\n        newGroups.push(group);\n      }\n    });\n\n    const createSharePromise = (group: SharePortfolioData, unshare = false) => {\n      const action = unshare ? unsharePortfolio : sharePortfolio;\n      return dispatch(\n        action({\n          id: portfolio,\n          permissions: (group.permissions as unknown) as UniversalSharePolicy,\n          group_uuid: group.group_uuid\n        })\n      );\n    };\n\n    const sharePromises = [\n      ...newGroups.map((group) => createSharePromise(group)),\n      ...removedGroups.map((group) =>\n        createSharePromise((group as unknown) as Full<SharePortfolioData>, true)\n      )\n    ];\n\n    onCancel();\n\n    const { title, description } = sharePorfolioMessage({\n      shareData,\n      initialGroups,\n      removedGroups: removedGroups.map(({ permissions, ...rest }) => ({\n        ...rest,\n        permissions: permissions.join(',')\n      })),\n      newGroups,\n      formatMessage,\n      portfolioName\n    });\n\n    return Promise.all(sharePromises).then(() => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          dismissable: true,\n          variant: 'success',\n          title,\n          description\n        }\n      });\n      return dispatch(fetchPortfolios(viewState));\n    });\n  };\n\n  if (\n    initialValues?.metadata?.user_capabilities?.share === false &&\n    initialValues?.metadata?.user_capabilities?.unshare === false\n  ) {\n    return <UnauthorizedRedirect />;\n  }\n\n  const validateShares = (values: {\n    group_uuid?: string;\n    permissions?: string[];\n  }) => {\n    const errors: {\n      permissions?: ReactNode;\n      group_uuid?: ReactNode;\n    } = {};\n    if (values.group_uuid && !values.permissions) {\n      errors.permissions = formatMessage(\n        portfolioMessages.portfolioSharePermissions\n      );\n    }\n\n    if (values.permissions && !values.group_uuid) {\n      errors.group_uuid = formatMessage(portfolioMessages.portfolioShareGroups);\n    }\n\n    return errors;\n  };\n\n  const isLoadingFinal = isFetching || isLoading;\n\n  return (\n    <Modal\n      title={formatMessage(portfolioMessages.portfolioShareTitle) as string}\n      isOpen\n      variant=\"small\"\n      onClose={onCancel}\n    >\n      {isLoadingFinal && <ShareLoader />}\n      {!isLoadingFinal && (\n        <Stack hasGutter>\n          <StackItem>\n            <TextContent>\n              <Text>\n                {formatMessage(portfolioMessages.portfolioShareDescription, {\n                  name: portfolioName(portfolio),\n                  // eslint-disable-next-line react/display-name\n                  strong: (chunks: ReactNode) => (\n                    <strong key=\"strong\">{chunks}</strong>\n                  )\n                })}\n              </Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormRenderer\n              schema={createPortfolioShareSchema(\n                loadGroupOptions,\n                permissionOptions,\n                initialValues?.metadata?.user_capabilities?.share !== false,\n                initialValues?.metadata?.user_capabilities?.unshare !== false\n              )}\n              onSubmit={onSubmit}\n              onCancel={onCancel}\n              validate={validateShares}\n              initialValues={{\n                ...initialValues,\n                'shared-groups': initialShares()\n              }}\n              templateProps={{\n                disableSubmit: ['pristine', 'validating'],\n                submitLabel: formatMessage(\n                  portfolioMessages.portfolioShareApply\n                )\n              }}\n            />\n          </StackItem>\n        </Stack>\n      )}\n    </Modal>\n  );\n};\n\nexport default SharePortfolioModal;\n"],"sourceRoot":""}