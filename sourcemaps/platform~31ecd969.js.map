{"version":3,"sources":["webpack:///./src/smart-components/common/async-pagination.tsx","webpack:///./src/toolbar/schemas/platforms-toolbar.schema.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/info-circle-icon.js","webpack:///./src/helpers/shared/breadcrumbs-creators.ts","webpack:///./src/redux/actions/breadcrumbs-actions.ts","webpack:///./src/utilities/use-breadcrumbs.ts","webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Level/LevelItem.js","webpack:///./src/smart-components/platform/platform.js"],"names":["meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","onSetPage","number","debounce","options","request","dropDirection","createPlatformsToolbarSchema","searchValue","onFilterChange","title","fields","component","toolbarComponentTypes","TOP_TOOLBAR","key","TOP_TOOLBAR_TITLE","LEVEL","LEVEL_ITEM","FILTER_TOOLBAR_ITEM","placeholder","createPlatformsTopToolbarSchema","paddingBottom","tabItems","platformEnabled","platformAvailable","TOOLBAR_GROUP","TOOLBAR_ITEM","alignment","LABEL","AppTabs","createPlatformsFilterToolbarSchema","filterPlaceholder","TOOLBAR","AsyncPagination","exports","__esModule","InfoCircleIconConfig","name","height","width","svgPath","yOffset","xOffset","InfoCircleIcon","createIcon","ENTITIES_EXTRA_PARAMS","FRAGMENT_TITLE","getState","portfolioReducer","selectedPortfolio","portfolioItem","platformReducer","selectedPlatform","serviceOffering","service","orderReducer","orderDetail","order","id","FRAGMENT_PREFIX","pathname","searchParams","createBreadcrumbsFromLocations","search","dispatch","length","type","payload","result","replace","split","reduce","acc","curr","index","generateTitle","forEach","updateTriggers","URLSearchParams","searchObject","value","Object","defineProperty","LevelItem","tslib_1","React","__importStar","_a","children","__rest","createElement","assign","displayName","PlatformDetails","lazy","PlatformTemplates","PlatformInventories","ServiceOfferingDetail","eventKey","Platform","useDispatch","useQuery","platform","useSelector","resetBreadcrumbs","useBreadcrumbs","formatMessage","useFormatMessage","useEffect","insights","chrome","appNavClick","secondaryNav","Promise","all","fetchSelectedPlatform","fetchPlatforms","scrollToTop","exact","path","PLATFORM_INVENTORIES_ROUTE","PLATFORM_ROUTE","PLATFORM_TEMPLATES_ROUTE","PLATFORM_DETAILS_ROUTE","schema","color","enabled","icon","labelMessages","disabled","availability_status","available","notAvailable","fallback","PLATFORM_SERVICE_OFFERINGS_ROUTE"],"mappings":"oqBAgEe,IA5CoD,SAAC,GAClE,QAAAA,KAAQ,IAAAC,aAAK,IAAG,KAAE,EAAE,IAAAC,aAAK,IAAG,IAAC,EAAE,IAAAC,cAAM,IAAG,IAAC,EACzCC,EAAQ,WACRC,EAAU,aACV,IAAAC,iBAAS,IAAG,KAAE,EACd,IAAAC,iBAAS,IAAG,GAAK,EACdC,EAAK,IAN0D,0DA4BlE,OACE,yBAAKF,UAAWA,GACd,kBAAC,IAAU,GACTG,QAASR,GAAS,GAClBS,UAAWR,GAAS,EACpBS,gBAzByC,SAACC,EAAQX,GACtD,OAAAI,EAAWD,EAAU,CACnBD,OAAM,EACNF,MAAK,KAuBHY,KAAM,YAAeZ,EAAOE,GAC5BW,UArB2B,SAACF,EAAQG,EAAQC,GAChD,IAAMC,EAAU,CACdd,OAAQ,YAAWY,EAAQd,GAC3BA,MAAK,GAGDiB,EAAU,WAAM,OAAAb,EAAWD,EAAUa,IAC3C,OAAID,EACK,YAAgBE,EAAS,IAAzB,GAGFA,KAWHC,cAAc,OACdZ,UAAWA,GACPC,O,wvBCtDL,IAAMY,EAA+B,SAAC,GAAD,IAC1CC,EAD0C,EAC1CA,YACAC,EAF0C,EAE1CA,eACAC,EAH0C,EAG1CA,MAH0C,MAIrC,CACLC,OAAQ,CACN,CACEC,UAAWC,IAAsBC,YACjCC,IAAK,oBACLJ,OAAQ,CACN,CACEC,UAAWC,IAAsBG,kBACjCD,IAAK,0BACLL,SAEF,CACEE,UAAWC,IAAsBI,MACjCF,IAAK,4BACLJ,OAAQ,CACN,CACEC,UAAWC,IAAsBK,WACjCH,IAAK,mBACLJ,OAAQ,CACN,CACEC,UAAWC,IAAsBM,oBACjCJ,IAAK,iCACLP,cACAC,iBACAW,YAAa,wBAInB,CACER,UAAWC,IAAsBK,WACjCH,IAAK,wBACLJ,OAAQ,WASTU,EAAkC,SAAC,GAAD,IAC7CX,EAD6C,EAC7CA,MACAY,EAF6C,EAE7CA,cACAC,EAH6C,EAG7CA,SACAC,EAJ6C,EAI7CA,gBACAC,EAL6C,EAK7CA,kBAL6C,MAMxC,CACLd,OAAQ,CACN,CACEC,UAAWC,IAAsBC,YACjCC,IAAK,oBACLO,gBACAX,OAAQ,CACN,CACEC,UAAWC,IAAsBI,MACjCN,OAAQ,CACN,CACEC,UAAWC,IAAsBa,cACjCX,IAAK,mBACLJ,OAAQ,CACN,CACEC,UAAWC,IAAsBc,aACjCZ,IAAK,yBACLJ,OAAQ,CACN,CACEC,UAAWC,IAAsBG,kBACjCD,IAAK,0BACLL,aAMV,CACEE,UAAWC,IAAsBa,cACjCX,IAAK,mBACLa,UAAW,aACXjB,OAAQ,CACN,CACEC,UAAWC,IAAsBc,aACjCZ,IAAK,iBACLa,UAAW,aACXjB,OAAQ,CAAC,EAAD,CAEJC,UAAWC,IAAsBgB,MACjCd,IAAK,0BACFS,KAJC,GAOJZ,UAAWC,IAAsBgB,MACjCd,IAAK,4BACFU,WAQjB,CACEb,UAAWC,IAAsBK,WACjCH,IAAK,kBACLJ,OAAQY,EACJ,CACE,CACEX,UAAWkB,IACXf,IAAK,gBACLQ,aAGJ,SAODQ,EAAqC,SAAC,GAAD,IAChDvB,EADgD,EAChDA,YACAC,EAFgD,EAEhDA,eACAtB,EAHgD,EAGhDA,KACAK,EAJgD,EAIhDA,WACAwC,EALgD,EAKhDA,kBALgD,MAM3C,CACLrB,OAAQ,CACN,CACEC,UAAWC,IAAsBoB,QACjClB,IAAK,2BACLtB,UAAW,8CACXkB,OAAQ,CACN,CACEC,UAAWC,IAAsBI,MACjCF,IAAK,4BACLtB,UAAW,YACXkB,OAAQ,CACN,CACEC,UAAWC,IAAsBK,WACjCH,IAAK,mBACLJ,OAAQ,CACN,CACEC,UAAWC,IAAsBM,oBACjCJ,IAAK,iCACLP,cACAC,iBACAW,YAAaY,KAInB,CACEpB,UAAWC,IAAsBK,WACjCH,IAAK,wBACLJ,OACExB,EAAKE,MAAQ,EACT,CACE,CACEuB,UAAWsB,IACXnB,IAAK,sBACLvB,aACAL,OACAO,WAAW,IAGf,Y,iCCzKpByC,EAAQC,YAAa,EACrBD,EAAQE,qBAAuB,CAC7BC,KAAM,iBACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,kZACTC,QAAS,EACTC,QAAS,GAEXR,EAAQS,eAAiB,EAAQ,IAAiBC,WAAWV,EAAQE,sBACrEF,EAAiB,QAAIA,EAAQS,gB,gFCehBE,GALC,IAKuB,CACnC,iBAAkB,CAAC,YAGRC,IAAc,MACxB,KAAkB,SACjBC,GACc,OAAAA,IAAWC,iBAAiBC,kBAAkBZ,MAC9D,EAAC,KAAuB,SACtBU,GACc,OAAAA,IAAWC,iBAAiBE,cAAcA,cAAcb,MACxE,EAAC,KAAoB,WAAc,qBACnC,EAAC,KAAqB,WAAc,sBACpC,EAAC,KAAiB,SAChBU,GACc,OAAAA,IAAWI,gBAAgBC,iBAAiBf,MAC5D,EAAC,KAAmC,SAClCU,GACc,OAAAA,IAAWI,gBAAgBE,gBAAgBC,QAAQjB,MACnE,EAAC,KAAc,SACbU,GAEM,MAA2BA,IAAWQ,aAAaC,YAAjDN,EAAa,gBAAEO,EAAK,QAC5B,OAAUP,EAAcb,KAAI,MAAMoB,EAAMC,IAE1C,EAAC,KAA4B,WAAc,sB,GAGhCC,IAAe,MACzB,KAAkB,CACjBC,SAAU,IACVnD,MAAO,aACPoD,aAAc,IAEhB,EAAC,KAAiB,CAChBD,SAAU,IACVnD,MAAO,YACPoD,aAAc,IAEhB,EAAC,KAAc,CACbD,SAAU,IACVnD,MAAO,SACPoD,aAAc,I,0YCzDLC,EAAiC,SAC5CF,EACAG,GACG,YAFH,IAAAH,MAAA,SACA,IAAAG,MAAA,IACG,SACHC,EACAjB,GAEA,GAAwB,IAApBa,EAASK,OACX,OAAOD,EAAS,CAAEE,KAAM,IAAwBC,QAAS,KAG3D,IAAIC,EAASR,EACVS,QAAQ,MAAO,IACfC,MAAM,KACNC,QAA6B,SAACC,EAAKC,EAAMC,G,MAClCd,GACJc,EAAQ,GAAKF,EAAIE,EAAQ,GAAKF,EAAIE,EAAQ,GAAGd,SAAW,IAAE,IACxDa,EAEEE,EAAiB7B,EACrBc,GAEF,IAAKe,EACH,OAAOH,EAGT,IAAMX,EAAe,EAAH,KACZa,EAAQ,GAAKF,EAAIE,EAAQ,GAAGb,cAC5BE,EAAOU,KAAO,MAAIA,GAAOV,EAAOU,GAAK,GAAK,IAQhD,OANK5B,EAAoC4B,IACtC5B,EAAoC4B,GAAMG,SAAQ,SAAC9D,GAClD+C,EAAa/C,GAAOiD,EAAOjD,MAIxB,EACF0D,EAAG,CACN,CACEZ,SAAQ,EACRC,aAAY,EACZpD,MAAOkE,EAAc5B,QAGxB,IAKL,OAJIqB,EAAOH,OAAS,GAAMN,EAA8BS,EAAO,GAAGR,YAChEQ,EAAS,EAAH,CAAKT,EAA8BS,EAAO,GAAGR,WAAcQ,IAG5DJ,EAAS,CAAEE,KAAM,IAAwBC,QAASC,M,wLCvB5C,IA7BQ,SACrBS,QAAA,IAAAA,MAAA,IAMA,IAAMb,EAAW,cACX,EAAuB,cAArBJ,EAAQ,WAAEG,EAAM,SACxB,GAA8B,IAA1Bc,EAAeZ,OACjB,OAAOD,EACJF,EAA+B,GAAI,KAIxC,IAAMD,EAAe,IAAIiB,gBAAgBf,GACnCgB,EAA0B,GAShC,OARAlB,EAAae,SAAQ,SAACI,EAAOlE,GAC3BiE,EAAajE,GAAOkE,KAGtB,qBAAU,WACRhB,EAASF,EAA+BF,EAAUmB,MACjD,GAACnB,GAAaiB,IAEV,WACL,OAAAb,EAAUF,EAA+B,GAAI,Q,iCCjCjDmB,OAAOC,eAAehD,EAAS,aAAc,CAAE8C,OAAO,IACtD9C,EAAQiD,eAAY,EACpB,MAAMC,EAAU,EAAQ,GAClBC,EAAQD,EAAQE,aAAa,EAAQ,IAC3CpD,EAAQiD,UAAaI,IACjB,IAAI,SAAEC,EAAW,MAASD,EAAI7F,EAAQ0F,EAAQK,OAAOF,EAAI,CAAC,aAC1D,OAAQF,EAAMK,cAAc,MAAOT,OAAOU,OAAO,GAAIjG,GAAQ8F,IAEjEtD,EAAQiD,UAAUS,YAAc,a,kNCgB1BC,EAAkBC,gBAAK,kBAC3B,kCAGIC,EAAoBD,gBAAK,kBAC7B,+DAGIE,EAAsBF,gBAAK,kBAC/B,+DAKIG,EAAwBH,gBAAK,kBACjC,+DAKIxE,EAAW,CACf,CACE4E,SAAU,EACVzF,MAAO,YACP4B,KAAM,gCAER,CACE6D,SAAU,EACVzF,MAAO,cACP4B,KAAM,kCAER,CACE6D,SAAU,EACVzF,MAAO,UACP4B,KAAM,+BA0FK8D,UAtFE,WACf,IAAMnC,EAAWoC,cADI,EAEEC,YAAS,CAAC,aAAxBC,EAFY,YAEZA,SAFY,EAGyBC,aAC5C,oBAAGpD,gBAAH,MAAiE,CAC/DC,iBADF,EAAsBA,iBAEpBC,gBAFF,EAAwCA,oBADlCD,EAHa,EAGbA,iBAAkBC,EAHL,EAGKA,gBAOpBmD,EAAmBC,YAAe,CAACrD,EAAkBC,IACrDqD,EAAgBC,cAEtBC,qBAAU,WAOR,OANAC,SAASC,OAAOC,YAAY,CAAErD,GAAI,YAAasD,cAAc,IAC7DC,QAAQC,IAAI,CACVlD,EAASmD,YAAsBb,IAC/BtC,EAASoD,iBAEXC,cACO,WACLb,OAED,CAACF,IAmBJ,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CACEgB,OAAK,EACLC,KAAM,CACJC,IACAC,IACAC,IACAC,IAJI,UAKDH,IALC,QAQN,kBAAC,YAAD,KACE,kBAAC,IAAD,CACEI,OAAQxG,YAAgC,CACtCX,MAAO2C,EAAiBf,KACxBhB,eAAe,EACfC,WACAC,gBAAiB,kBAnCL,SAAC+E,GAAD,MAAe,CACrCuB,MAAOvB,EAASwB,QAAU,QAAU,MACpCC,KAAM,kBAAC,IAAD,MACNtH,MAAO6F,EAASwB,QACZpB,EAAcsB,IAAcF,SAC5BpB,EAAcsB,IAAcC,WA8BC1G,CAAgB6B,IACvC5B,kBAAmB,kBA5BL,SAAC8E,GAAD,MAAe,CACvCuB,MAAwC,cAAjCvB,EAAS4B,oBAAsC,QAAU,MAChEH,KAAM,kBAAC,IAAD,MACNtH,MACmC,cAAjC6F,EAAS4B,oBACLxB,EAAcsB,IAAcG,WAC5BzB,EAAcsB,IAAcI,eAsBC5G,CAAkB4B,UAKnD,kBAAC,WAAD,CAAUiF,SAAU,kBAAC,IAAD,OAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOd,KAAMe,KACX,kBAACrC,EAAD,OAEF,kBAAC,IAAD,CAAOsB,KAAMC,KACX,kBAACxB,EAAD,OAEF,kBAAC,IAAD,CAAOuB,KAAMI,KACX,kBAAC9B,EAAD,OAEF,kBAAC,IAAD,CAAO0B,KAAM,CAACG,IAA0BD,MACtC,kBAAC1B,EAAD","file":"js/platform~31ecd969.12168a0b49c2646a93c4.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { OnPerPageSelect, OnSetPage, Pagination } from '@patternfly/react-core';\n\nimport {\n  getCurrentPage,\n  getNewPage,\n  PaginationConfiguration\n} from '../../helpers/shared/pagination';\nimport { AnyObject } from '@data-driven-forms/react-form-renderer';\n\nexport interface AsyncPaginationProps<T = any> extends AnyObject {\n  meta: PaginationConfiguration;\n  apiRequest: (...args: any[]) => Promise<T>;\n  apiProps?: any;\n  className?: string;\n  isCompact?: boolean;\n}\nconst AsyncPagination: React.ComponentType<AsyncPaginationProps> = ({\n  meta: { limit = 50, count = 0, offset = 0 },\n  apiProps,\n  apiRequest,\n  className = '',\n  isCompact = false,\n  ...props\n}) => {\n  const handleOnPerPageSelect: OnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage: OnSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        dropDirection=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default AsyncPagination;\n","import AppTabs from '../../presentational-components/shared/app-tabs';\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nexport const createPlatformsToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  title\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: 'Filter by platform'\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields: []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsTopToolbarSchema = ({\n  title,\n  paddingBottom,\n  tabItems,\n  platformEnabled,\n  platformAvailable\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      paddingBottom,\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          fields: [\n            {\n              component: toolbarComponentTypes.TOOLBAR_GROUP,\n              key: 'platform-toolbar',\n              fields: [\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'platform-toolbar-group',\n                  fields: [\n                    {\n                      component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n                      key: 'platforms-toolbar-title',\n                      title\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.TOOLBAR_GROUP,\n              key: 'platform-toolbar',\n              alignment: 'alignRight',\n              fields: [\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'platform-label',\n                  alignment: 'alignRight',\n                  fields: [\n                    {\n                      component: toolbarComponentTypes.LABEL,\n                      key: 'platform-enabled-label',\n                      ...platformEnabled()\n                    },\n                    {\n                      component: toolbarComponentTypes.LABEL,\n                      key: 'platform-available-label',\n                      ...platformAvailable()\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          component: toolbarComponentTypes.LEVEL_ITEM,\n          key: 'tabs-level-item',\n          fields: tabItems\n            ? [\n                {\n                  component: AppTabs,\n                  key: 'platform-tabs',\n                  tabItems\n                }\n              ]\n            : []\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsFilterToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  meta,\n  apiRequest,\n  filterPlaceholder\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOOLBAR,\n      key: 'platforms-filter-toolbar',\n      className: 'pf-u-pt-md pf-u-pb-md pf-u-pr-lg pf-u-pl-lg',\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          className: 'pf-m-grow',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: filterPlaceholder\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields:\n                meta.count > 0\n                  ? [\n                      {\n                        component: AsyncPagination,\n                        key: 'platform-pagination',\n                        apiRequest,\n                        meta,\n                        isCompact: true\n                      }\n                    ]\n                  : []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n","\"use strict\"\nexports.__esModule = true;\nexports.InfoCircleIconConfig = {\n  name: 'InfoCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.InfoCircleIcon = require('../createIcon').createIcon(exports.InfoCircleIconConfig);\nexports[\"default\"] = exports.InfoCircleIcon;","import {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  ORDER_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORMS_ROUTE,\n  ORDERS_ROUTE,\n  EDIT_SURVEY_ROUTE,\n  ADD_PRODUCTS_ROUTE,\n  PORTFOLIO_ITEM_ROUTE_EDIT\n} from '../../constants/routes';\nimport { PortfolioReducerState } from '../../redux/reducers/portfolio-reducer';\nimport { ReactNode } from 'react';\nimport { PlatformReducerState } from '../../redux/reducers/platform-reducer';\nimport { OrderReducerState } from '../../redux/reducers/order-reducer';\n\nexport const BASE_PORTFOLIO_FRAGMENTS = [\n  {\n    title: 'Portfolios',\n    pathname: PORTFOLIOS_ROUTE,\n    searchParams: {}\n  }\n];\n\nexport const ENTITIES_EXTRA_PARAMS = {\n  'portfolio-item': ['source']\n};\n\nexport const FRAGMENT_TITLE = {\n  [PORTFOLIO_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.selectedPortfolio.name,\n  [PORTFOLIO_ITEM_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.portfolioItem.portfolioItem.name,\n  [EDIT_SURVEY_ROUTE]: (): string => 'Edit survey',\n  [ADD_PRODUCTS_ROUTE]: (): string => 'Add products',\n  [PLATFORM_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.selectedPlatform.name,\n  [PLATFORM_SERVICE_OFFERINGS_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.serviceOffering.service.name,\n  [ORDER_ROUTE]: (\n    getState: () => { orderReducer: OrderReducerState }\n  ): ReactNode => {\n    const { portfolioItem, order } = getState().orderReducer.orderDetail;\n    return `${portfolioItem.name} # ${order.id}`;\n  },\n  [PORTFOLIO_ITEM_ROUTE_EDIT]: (): string => 'Edit product'\n};\n\nexport const FRAGMENT_PREFIX = {\n  [PORTFOLIO_ROUTE]: {\n    pathname: PORTFOLIOS_ROUTE,\n    title: 'Portfolios',\n    searchParams: {}\n  },\n  [PLATFORM_ROUTE]: {\n    pathname: PLATFORMS_ROUTE,\n    title: 'Platforms',\n    searchParams: {}\n  },\n  [ORDER_ROUTE]: {\n    pathname: ORDERS_ROUTE,\n    title: 'Orders',\n    searchParams: {}\n  }\n};\n","import { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport {\n  FRAGMENT_TITLE,\n  ENTITIES_EXTRA_PARAMS,\n  FRAGMENT_PREFIX\n} from '../../helpers/shared/breadcrumbs-creators';\nimport { Dispatch } from 'redux';\nimport { BreadcrumbFragment } from '../reducers/breadcrumbs-reducer';\nimport { GetReduxState } from '../../types/redux';\nimport { AnyObject, ReduxAction } from '../../types/common-types';\n\nexport const createBreadcrumbsFromLocations = (\n  pathname = '',\n  search: AnyObject = {}\n) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): ReduxAction<BreadcrumbFragment[]> => {\n  if (pathname.length === 0) {\n    return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: [] });\n  }\n\n  let result = pathname\n    .replace(/^\\//, '')\n    .split('/')\n    .reduce<BreadcrumbFragment[]>((acc, curr, index) => {\n      const pathname = `${\n        index > 0 && acc[index - 1] ? acc[index - 1].pathname : ''\n      }/${curr}`;\n\n      const generateTitle = (FRAGMENT_TITLE[\n        pathname as keyof typeof FRAGMENT_TITLE\n      ] as unknown) as (getState: GetReduxState) => string;\n      if (!generateTitle) {\n        return acc;\n      }\n\n      const searchParams = {\n        ...(index > 0 && acc[index - 1].searchParams),\n        ...(search[curr] ? { [curr]: search[curr] } : {})\n      };\n      if ((ENTITIES_EXTRA_PARAMS as AnyObject)[curr]) {\n        (ENTITIES_EXTRA_PARAMS as AnyObject)[curr].forEach((key: string) => {\n          searchParams[key] = search[key];\n        });\n      }\n\n      return [\n        ...acc,\n        {\n          pathname,\n          searchParams,\n          title: generateTitle(getState)\n        }\n      ];\n    }, []);\n  if (result.length > 0 && (FRAGMENT_PREFIX as AnyObject)[result[0].pathname]) {\n    result = [(FRAGMENT_PREFIX as AnyObject)[result[0].pathname], ...result];\n  }\n\n  return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: result });\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createBreadcrumbsFromLocations } from '../redux/actions/breadcrumbs-actions';\nimport { INITIALIZE_BREADCRUMBS } from '../redux/action-types';\nimport { AnyObject, ReduxAction } from '../types/common-types';\nimport { AnyAction } from 'redux';\n\nconst useBreadcrumbs = (\n  updateTriggers: any[] = []\n):\n  | (() => ReduxAction<{\n      type: typeof INITIALIZE_BREADCRUMBS;\n    }>)\n  | ReduxAction<{ type: typeof INITIALIZE_BREADCRUMBS }> => {\n  const dispatch = useDispatch();\n  const { pathname, search } = useLocation();\n  if (updateTriggers.length === 0) {\n    return dispatch(\n      (createBreadcrumbsFromLocations('', {}) as unknown) as AnyAction\n    );\n  }\n\n  const searchParams = new URLSearchParams(search);\n  const searchObject: AnyObject = {};\n  searchParams.forEach((value, key) => {\n    searchObject[key] = value;\n  });\n\n  useEffect(() => {\n    dispatch(createBreadcrumbsFromLocations(pathname, searchObject));\n  }, [pathname, ...updateTriggers]);\n\n  return () =>\n    dispatch((createBreadcrumbsFromLocations('', {}) as unknown) as AnyAction);\n};\n\nexport default useBreadcrumbs;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LevelItem = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nexports.LevelItem = (_a) => {\n    var { children = null } = _a, props = tslib_1.__rest(_a, [\"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props), children));\n};\nexports.LevelItem.displayName = 'LevelItem';\n//# sourceMappingURL=LevelItem.js.map","import React, { Fragment, useEffect, lazy, Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport {\n  fetchSelectedPlatform,\n  fetchPlatforms\n} from '../../redux/actions/platform-actions';\nimport useQuery from '../../utilities/use-query';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useBreadcrumbs from '../../utilities/use-breadcrumbs';\nimport {\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORM_INVENTORIES_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_TEMPLATES_ROUTE,\n  PLATFORM_DETAILS_ROUTE\n} from '../../constants/routes';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { createPlatformsTopToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport { PlatformToolbarPlaceholder } from '../../presentational-components/shared/loader-placeholders';\nimport { LevelItem } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport labelMessages from '../../messages/labels.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst PlatformDetails = lazy(() =>\n  import(/* webpackChunkName: \"platform-details\" */ './platform-details')\n);\n\nconst PlatformTemplates = lazy(() =>\n  import(/* webpackChunkName: \"platform-templates\" */ './platform-templates')\n);\n\nconst PlatformInventories = lazy(() =>\n  import(\n    /* webpackChunkName: \"platform-inventories\" */ './platform-inventories'\n  )\n);\n\nconst ServiceOfferingDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"service-offering-detail\" */ './service-offering/service-offering-detail'\n  )\n);\n\nconst tabItems = [\n  {\n    eventKey: 0,\n    title: 'Templates',\n    name: `/platform/platform-templates`\n  },\n  {\n    eventKey: 1,\n    title: 'Inventories',\n    name: `/platform/platform-inventories`\n  },\n  {\n    eventKey: 2,\n    title: 'Details',\n    name: `/platform/platform-details`\n  }\n];\n\nconst Platform = () => {\n  const dispatch = useDispatch();\n  const [{ platform }] = useQuery(['platform']);\n  const { selectedPlatform, serviceOffering } = useSelector(\n    ({ platformReducer: { selectedPlatform, serviceOffering } }) => ({\n      selectedPlatform,\n      serviceOffering\n    })\n  );\n\n  const resetBreadcrumbs = useBreadcrumbs([selectedPlatform, serviceOffering]);\n  const formatMessage = useFormatMessage();\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'platforms', secondaryNav: true });\n    Promise.all([\n      dispatch(fetchSelectedPlatform(platform)),\n      dispatch(fetchPlatforms())\n    ]);\n    scrollToTop();\n    return () => {\n      resetBreadcrumbs();\n    };\n  }, [platform]);\n\n  const platformEnabled = (platform) => ({\n    color: platform.enabled ? 'green' : 'red',\n    icon: <InfoCircleIcon />,\n    title: platform.enabled\n      ? formatMessage(labelMessages.enabled)\n      : formatMessage(labelMessages.disabled)\n  });\n\n  const platformAvailable = (platform) => ({\n    color: platform.availability_status === 'available' ? 'green' : 'red',\n    icon: <InfoCircleIcon />,\n    title:\n      platform.availability_status === 'available'\n        ? formatMessage(labelMessages.available)\n        : formatMessage(labelMessages.notAvailable)\n  });\n\n  return (\n    <Fragment>\n      <Route\n        exact\n        path={[\n          PLATFORM_INVENTORIES_ROUTE,\n          PLATFORM_ROUTE,\n          PLATFORM_TEMPLATES_ROUTE,\n          PLATFORM_DETAILS_ROUTE,\n          `${PLATFORM_INVENTORIES_ROUTE}/*`\n        ]}\n      >\n        <LevelItem>\n          <ToolbarRenderer\n            schema={createPlatformsTopToolbarSchema({\n              title: selectedPlatform.name,\n              paddingBottom: false,\n              tabItems,\n              platformEnabled: () => platformEnabled(selectedPlatform),\n              platformAvailable: () => platformAvailable(selectedPlatform)\n            })}\n          />\n        </LevelItem>\n      </Route>\n      <Suspense fallback={<PlatformToolbarPlaceholder />}>\n        <Switch>\n          <Route path={PLATFORM_SERVICE_OFFERINGS_ROUTE}>\n            <ServiceOfferingDetail />\n          </Route>\n          <Route path={PLATFORM_INVENTORIES_ROUTE}>\n            <PlatformInventories />\n          </Route>\n          <Route path={PLATFORM_DETAILS_ROUTE}>\n            <PlatformDetails />\n          </Route>\n          <Route path={[PLATFORM_TEMPLATES_ROUTE, PLATFORM_ROUTE]}>\n            <PlatformTemplates />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Fragment>\n  );\n};\n\nexport default Platform;\n"],"sourceRoot":""}