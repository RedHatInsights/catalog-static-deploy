{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/extends.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/helpers/platform/platform-helper.js","webpack:///./src/redux/actions/platform-actions.js","webpack:///./src/toolbar/schemas/platforms-toolbar.schema.js","webpack:///./src/helpers/shared/breadcrumbs-creators.js","webpack:///./src/redux/actions/breadcrumbs-actions.js","webpack:///./src/utilities/use-breadcrumbs.js","webpack:///./src/smart-components/platform/platform.js"],"names":["_extends","module","exports","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","options","getNewPage","request","debouncePromise","direction","propTypes","PropTypes","shape","isRequired","func","any","string","bool","defaultProps","axiosInstance","getAxiosInstance","graphqlInstance","getGraphqlInstance","getPlatforms","post","SOURCES_API_BASE","query","then","data","application_types","sources","getPlatform","platformId","get","getPlatformItems","filter","filterQuery","TOPOLOGICAL_INVENTORY_API_BASE","getPlatformInventories","defaultSettings","getServiceOffering","serviceOfferingId","sourceId","Promise","all","source_type_id","icon_url","service","fetchPlatforms","dispatch","type","ActionTypes","PlatformHelper","payload","error","fetchPlatformItems","fetchSelectedPlatform","id","fetchPlatformInventories","fetchServiceOffering","createPlatformsToolbarSchema","searchValue","onFilterChange","title","fields","component","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","LEVEL","LEVEL_ITEM","FILTER_TOOLBAR_ITEM","placeholder","createPlatformsTopToolbarSchema","paddingBottom","tabItems","AppTabs","createPlatformsFilterToolbarSchema","filterPlaceholder","TOOLBAR","ENTITIES_EXTRA_PARAMS","PORTFOLIOS_ROUTE","FRAGMENT_TITLE","PORTFOLIO_ROUTE","getState","portfolioReducer","selectedPortfolio","name","PORTFOLIO_ITEM_ROUTE","portfolioItem","EDIT_SURVEY_ROUTE","ADD_PRODUCTS_ROUTE","PLATFORM_ROUTE","platformReducer","selectedPlatform","PLATFORM_SERVICE_OFFERINGS_ROUTE","serviceOffering","ORDER_ROUTE","orderReducer","orderDetail","order","FRAGMENT_PREFIX","pathname","searchParams","PLATFORMS_ROUTE","ORDERS_ROUTE","createBreadcrumbsFromLocations","search","INITIALIZE_BREADCRUMBS","result","replace","split","reduce","acc","curr","index","generateTitle","forEach","useBreadcrumbs","updateTriggers","useDispatch","useLocation","URLSearchParams","searchObject","value","useEffect","PlatformTemplates","lazy","PlatformInventories","ServiceOfferingDetail","eventKey","Platform","useQuery","platform","useSelector","resetBreadcrumbs","insights","chrome","appNavClick","secondaryNav","scrollToTop","exact","path","PLATFORM_INVENTORIES_ROUTE","PLATFORM_TEMPLATES_ROUTE","schema","fallback"],"mappings":"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","file":"js/platform~31ecd969.2ad21da5c08fd70ffd0e.js","sourcesContent":["function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport {\n  TOPOLOGICAL_INVENTORY_API_BASE,\n  SOURCES_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nexport const getPlatforms = () => {\n  return graphqlInstance\n    .post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n    .then(({ data: { application_types } }) => application_types)\n    .then(([{ sources }]) => sources);\n};\n\nexport const getPlatform = (platformId) => {\n  return axiosInstance.get(`${SOURCES_API_BASE}/sources/${platformId}`);\n};\n\nexport const getPlatformItems = (platformId, filter, options) => {\n  const filterQuery = filter ? `&filter[name][contains_i]=${filter}` : '';\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_offerings?filter[archived_at][nil]${filterQuery}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings`\n    );\n  }\n};\n\nexport const getPlatformInventories = (\n  platformId,\n  filter = '',\n  options = defaultSettings\n) => {\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_inventories?filter[name][contains_i]=${filter}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_inventories?limit=${options.limit}&offset=${options.offset}`\n    );\n  }\n};\n\nexport const getServiceOffering = (serviceOfferingId, sourceId) =>\n  Promise.all([\n    axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings/${serviceOfferingId}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${sourceId}`)\n      .then((source) => {\n        return axiosInstance\n          .get(`${SOURCES_API_BASE}/source_types/${source.source_type_id}`)\n          .then(({ icon_url }) => ({\n            ...source,\n            icon_url\n          }));\n      })\n  ]).then(([service, source]) => ({\n    service,\n    source\n  }));\n","import * as ActionTypes from '../action-types';\nimport * as PlatformHelper from '../../helpers/platform/platform-helper';\n\nexport const fetchPlatforms = () => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_PLATFORMS}_PENDING` });\n  return PlatformHelper.getPlatforms()\n    .then((data) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_FULFILLED`,\n        payload: data\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchPlatformItems = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_ITEMS,\n  payload: PlatformHelper.getPlatformItems(platformId, filter, options),\n  meta: {\n    platformId,\n    filter,\n    ...options\n  }\n});\n\nexport const fetchMultiplePlatformItems = (platformsId) => {\n  const platformPromisses = platformsId.map((platformId) =>\n    PlatformHelper.getPlatformItems(platformId).then((data) => ({\n      [platformId]: data\n    }))\n  );\n  return {\n    type: ActionTypes.FETCH_MULTIPLE_PLATFORM_ITEMS,\n    payload: Promise.all(platformPromisses).then((data) =>\n      data.reduce(\n        (acc, curr) => ({\n          ...acc,\n          ...curr\n        }),\n        {}\n      )\n    )\n  };\n};\n\nexport const fetchSelectedPlatform = (id) => ({\n  type: ActionTypes.FETCH_PLATFORM,\n  payload: PlatformHelper.getPlatform(id)\n});\n\nexport const searchPlatformItems = (value) => ({\n  type: ActionTypes.FILTER_PLATFORM_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const fetchPlatformInventories = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_INVENTORIES,\n  payload: PlatformHelper.getPlatformInventories(platformId, filter, options)\n});\n\nexport const fetchServiceOffering = (...args) => ({\n  type: ActionTypes.FETCH_SERVICE_OFFERING,\n  payload: PlatformHelper.getServiceOffering(...args)\n});\n","import AppTabs from '../../presentational-components/shared/app-tabs';\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nexport const createPlatformsToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  title\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: 'Filter by platform'\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields: []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsTopToolbarSchema = ({\n  title,\n  paddingBottom,\n  tabItems\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      paddingBottom,\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL_ITEM,\n          key: 'tabs-level-item',\n          fields: tabItems\n            ? [\n                {\n                  component: AppTabs,\n                  key: 'platform-tabs',\n                  tabItems\n                }\n              ]\n            : []\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsFilterToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  meta,\n  apiRequest,\n  filterPlaceholder\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOOLBAR,\n      key: 'platforms-filter-toolbar',\n      className: 'pf-u-pt-md pf-u-pb-md pf-u-pr-lg pf-u-pl-lg',\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          className: 'pf-m-grow',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: filterPlaceholder\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields:\n                meta.count > 0\n                  ? [\n                      {\n                        component: AsyncPagination,\n                        key: 'platform-pagination',\n                        apiRequest,\n                        meta,\n                        isCompact: true\n                      }\n                    ]\n                  : []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n","import {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  ORDER_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORMS_ROUTE,\n  ORDERS_ROUTE,\n  EDIT_SURVEY_ROUTE,\n  ADD_PRODUCTS_ROUTE\n} from '../../constants/routes';\n\nexport const BASE_PORTFOLIO_FRAGMENTS = [\n  {\n    title: 'Portfolios',\n    pathname: PORTFOLIOS_ROUTE,\n    searchParams: {}\n  }\n];\n\nexport const ENTITIES_EXTRA_PARAMS = {\n  'portfolio-item': ['source']\n};\n\nexport const FRAGMENT_TITLE = {\n  [PORTFOLIO_ROUTE]: (getState) =>\n    getState().portfolioReducer.selectedPortfolio.name,\n  [PORTFOLIO_ITEM_ROUTE]: (getState) =>\n    getState().portfolioReducer.portfolioItem.portfolioItem.name,\n  [EDIT_SURVEY_ROUTE]: () => 'Edit survey',\n  [ADD_PRODUCTS_ROUTE]: () => 'Add products',\n  [PLATFORM_ROUTE]: (getState) =>\n    getState().platformReducer.selectedPlatform.name,\n  [PLATFORM_SERVICE_OFFERINGS_ROUTE]: (getState) =>\n    getState().platformReducer.serviceOffering.service.name,\n  [ORDER_ROUTE]: (getState) => {\n    const { portfolioItem, order } = getState().orderReducer.orderDetail;\n    return `${portfolioItem.name} # ${order.id}`;\n  }\n};\n\nexport const FRAGMENT_PREFIX = {\n  [PORTFOLIO_ROUTE]: {\n    pathname: PORTFOLIOS_ROUTE,\n    title: 'Portfolios',\n    searchParams: {}\n  },\n  [PLATFORM_ROUTE]: {\n    pathname: PLATFORMS_ROUTE,\n    title: 'Platforms',\n    searchParams: {}\n  },\n  [ORDER_ROUTE]: {\n    pathname: ORDERS_ROUTE,\n    title: 'Orders',\n    searchParams: {}\n  }\n};\n","import { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport {\n  FRAGMENT_TITLE,\n  ENTITIES_EXTRA_PARAMS,\n  FRAGMENT_PREFIX\n} from '../../helpers/shared/breadcrumbs-creators';\n\nexport const createBreadcrumbsFromLocations = (pathname = '', search = {}) => (\n  dispatch,\n  getState\n) => {\n  if (pathname.length === 0) {\n    return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: [] });\n  }\n\n  let result = pathname\n    .replace(/^\\//, '')\n    .split('/')\n    .reduce((acc, curr, index) => {\n      const pathname = `${\n        index > 0 && acc[index - 1] ? acc[index - 1].pathname : ''\n      }/${curr}`;\n\n      const generateTitle = FRAGMENT_TITLE[pathname];\n      if (!generateTitle) {\n        return acc;\n      }\n\n      const searchParams = {\n        ...(index > 0 && acc[index - 1].searchParams),\n        ...(search[curr] ? { [curr]: search[curr] } : {})\n      };\n      if (ENTITIES_EXTRA_PARAMS[curr]) {\n        ENTITIES_EXTRA_PARAMS[curr].forEach((key) => {\n          searchParams[key] = search[key];\n        });\n      }\n\n      return [\n        ...acc,\n        {\n          pathname,\n          searchParams,\n          title: generateTitle(getState)\n        }\n      ];\n    }, []);\n  if (result.length > 0 && FRAGMENT_PREFIX[result[0].pathname]) {\n    result = [FRAGMENT_PREFIX[result[0].pathname], ...result];\n  }\n\n  return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: result });\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createBreadcrumbsFromLocations } from '../redux/actions/breadcrumbs-actions';\n\nconst useBreadcrumbs = (updateTriggers = []) => {\n  const dispatch = useDispatch();\n  const { pathname, search } = useLocation();\n  if (updateTriggers.length === 0) {\n    return dispatch(createBreadcrumbsFromLocations('', {}));\n  }\n\n  const searchParams = new URLSearchParams(search);\n  const searchObject = {};\n  searchParams.forEach((value, key) => {\n    searchObject[key] = value;\n  });\n\n  useEffect(() => {\n    dispatch(createBreadcrumbsFromLocations(pathname, searchObject));\n  }, [pathname, ...updateTriggers]);\n\n  return () => dispatch(createBreadcrumbsFromLocations('', {}));\n};\n\nexport default useBreadcrumbs;\n","import React, { Fragment, useEffect, lazy, Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport {\n  fetchSelectedPlatform,\n  fetchPlatforms\n} from '../../redux/actions/platform-actions';\nimport useQuery from '../../utilities/use-query';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useBreadcrumbs from '../../utilities/use-breadcrumbs';\nimport {\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORM_INVENTORIES_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_TEMPLATES_ROUTE\n} from '../../constants/routes';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { createPlatformsTopToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport { PlatformToolbarPlaceholder } from '../../presentational-components/shared/loader-placeholders';\n\nconst PlatformTemplates = lazy(() =>\n  import(/* webpackChunkName: \"platform-templates\" */ './platform-templates')\n);\n\nconst PlatformInventories = lazy(() =>\n  import(\n    /* webpackChunkName: \"platform-inventories\" */ './platform-inventories'\n  )\n);\n\nconst ServiceOfferingDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"service-offering-detail\" */ './service-offering/service-offering-detail'\n  )\n);\n\nconst tabItems = [\n  {\n    eventKey: 0,\n    title: 'Templates',\n    name: `/platform/platform-templates`\n  },\n  {\n    eventKey: 1,\n    title: 'Inventories',\n    name: `/platform/platform-inventories`\n  }\n];\n\nconst Platform = () => {\n  const dispatch = useDispatch();\n  const [{ platform }] = useQuery(['platform']);\n  const { selectedPlatform, serviceOffering } = useSelector(\n    ({ platformReducer: { selectedPlatform, serviceOffering } }) => ({\n      selectedPlatform,\n      serviceOffering\n    })\n  );\n\n  const resetBreadcrumbs = useBreadcrumbs([selectedPlatform, serviceOffering]);\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'platforms', secondaryNav: true });\n    Promise.all([\n      dispatch(fetchSelectedPlatform(platform)),\n      dispatch(fetchPlatforms())\n    ]);\n    scrollToTop();\n    return () => {\n      resetBreadcrumbs();\n    };\n  }, [platform]);\n\n  return (\n    <Fragment>\n      <Route\n        exact\n        path={[\n          PLATFORM_INVENTORIES_ROUTE,\n          PLATFORM_ROUTE,\n          PLATFORM_TEMPLATES_ROUTE,\n          `${PLATFORM_INVENTORIES_ROUTE}/*`\n        ]}\n      >\n        <ToolbarRenderer\n          schema={createPlatformsTopToolbarSchema({\n            title: selectedPlatform.name,\n            paddingBottom: false,\n            tabItems\n          })}\n        />\n      </Route>\n      <Suspense fallback={<PlatformToolbarPlaceholder />}>\n        <Switch>\n          <Route path={PLATFORM_SERVICE_OFFERINGS_ROUTE}>\n            <ServiceOfferingDetail />\n          </Route>\n          <Route path={PLATFORM_INVENTORIES_ROUTE}>\n            <PlatformInventories />\n          </Route>\n          <Route path={[PLATFORM_TEMPLATES_ROUTE, PLATFORM_ROUTE]}>\n            <PlatformTemplates />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Fragment>\n  );\n};\n\nexport default Platform;\n"],"sourceRoot":""}