{"version":3,"sources":["webpack:///./src/smart-components/common/async-pagination.tsx","webpack:///./src/toolbar/schemas/platforms-toolbar.schema.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/info-circle-icon.js","webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Level/LevelItem.js","webpack:///./src/smart-components/platform/platform.js"],"names":["meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","onSetPage","number","debounce","options","request","dropDirection","createPlatformsToolbarSchema","searchValue","onFilterChange","title","fields","component","toolbarComponentTypes","TOP_TOOLBAR","key","TOP_TOOLBAR_TITLE","LEVEL","LEVEL_ITEM","FILTER_TOOLBAR_ITEM","placeholder","createPlatformsTopToolbarSchema","paddingBottom","tabItems","platformAvailable","TOOLBAR_GROUP","TOOLBAR_ITEM","alignment","LABEL","variant","AppTabs","createPlatformsFilterToolbarSchema","filterPlaceholder","TOOLBAR","AsyncPagination","exports","__esModule","InfoCircleIconConfig","name","height","width","svgPath","yOffset","xOffset","InfoCircleIcon","createIcon","Object","defineProperty","value","LevelItem","tslib_1","React","__importStar","_a","children","__rest","createElement","assign","displayName","PlatformDetails","lazy","PlatformTemplates","PlatformInventories","ServiceOfferingDetail","eventKey","Platform","dispatch","useDispatch","useQuery","platform","useSelector","platformReducer","selectedPlatform","serviceOffering","resetBreadcrumbs","useBreadcrumbs","formatMessage","useFormatMessage","useEffect","insights","chrome","appNavClick","id","secondaryNav","Promise","all","fetchSelectedPlatform","fetchPlatforms","scrollToTop","exact","path","PLATFORM_INVENTORIES_ROUTE","PLATFORM_ROUTE","PLATFORM_TEMPLATES_ROUTE","PLATFORM_DETAILS_ROUTE","schema","color","availability_status","icon","labelMessages","available","notAvailable","fallback","PLATFORM_SERVICE_OFFERINGS_ROUTE"],"mappings":"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","file":"js/platform~31ecd969.cac1dc29200ecb348063.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { OnPerPageSelect, OnSetPage, Pagination } from '@patternfly/react-core';\n\nimport {\n  getCurrentPage,\n  getNewPage,\n  PaginationConfiguration\n} from '../../helpers/shared/pagination';\nimport { AnyObject } from '@data-driven-forms/react-form-renderer';\n\nexport interface AsyncPaginationProps<T = any> extends AnyObject {\n  meta: PaginationConfiguration;\n  apiRequest: (...args: any[]) => Promise<T>;\n  apiProps?: any;\n  className?: string;\n  isCompact?: boolean;\n}\nconst AsyncPagination: React.ComponentType<AsyncPaginationProps> = ({\n  meta: { limit = 50, count = 0, offset = 0 },\n  apiProps,\n  apiRequest,\n  className = '',\n  isCompact = false,\n  ...props\n}) => {\n  const handleOnPerPageSelect: OnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage: OnSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        dropDirection=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default AsyncPagination;\n","import AppTabs from '../../presentational-components/shared/app-tabs';\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nexport const createPlatformsToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  title\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: 'Filter by platform'\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields: []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsTopToolbarSchema = ({\n  title,\n  paddingBottom,\n  tabItems,\n  platformAvailable\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      paddingBottom,\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          fields: [\n            {\n              component: toolbarComponentTypes.TOOLBAR_GROUP,\n              key: 'platform-toolbar',\n              fields: [\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'platform-toolbar-group',\n                  fields: [\n                    {\n                      component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n                      key: 'platforms-toolbar-title',\n                      title\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.TOOLBAR_GROUP,\n              key: 'platform-toolbar',\n              alignment: 'alignRight',\n              fields: [\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'platform-label',\n                  alignment: 'alignRight',\n                  fields: [\n                    {\n                      component: toolbarComponentTypes.LABEL,\n                      key: 'platform-available-label',\n                      variant: 'outline',\n                      ...platformAvailable()\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          component: toolbarComponentTypes.LEVEL_ITEM,\n          key: 'tabs-level-item',\n          fields: tabItems\n            ? [\n                {\n                  component: AppTabs,\n                  key: 'platform-tabs',\n                  tabItems\n                }\n              ]\n            : []\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsFilterToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  meta,\n  apiRequest,\n  filterPlaceholder\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOOLBAR,\n      key: 'platforms-filter-toolbar',\n      className: 'pf-u-pt-md pf-u-pb-md pf-u-pr-lg pf-u-pl-lg',\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          className: 'pf-m-grow',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: filterPlaceholder\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields:\n                meta.count > 0\n                  ? [\n                      {\n                        component: AsyncPagination,\n                        key: 'platform-pagination',\n                        apiRequest,\n                        meta,\n                        isCompact: true\n                      }\n                    ]\n                  : []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n","\"use strict\"\nexports.__esModule = true;\nexports.InfoCircleIconConfig = {\n  name: 'InfoCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.InfoCircleIcon = require('../createIcon').createIcon(exports.InfoCircleIconConfig);\nexports[\"default\"] = exports.InfoCircleIcon;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LevelItem = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nexports.LevelItem = (_a) => {\n    var { children = null } = _a, props = tslib_1.__rest(_a, [\"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props), children));\n};\nexports.LevelItem.displayName = 'LevelItem';\n//# sourceMappingURL=LevelItem.js.map","import React, { Fragment, useEffect, lazy, Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport {\n  fetchSelectedPlatform,\n  fetchPlatforms\n} from '../../redux/actions/platform-actions';\nimport useQuery from '../../utilities/use-query';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useBreadcrumbs from '../../utilities/use-breadcrumbs';\nimport {\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORM_INVENTORIES_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_TEMPLATES_ROUTE,\n  PLATFORM_DETAILS_ROUTE\n} from '../../constants/routes';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { createPlatformsTopToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport { PlatformToolbarPlaceholder } from '../../presentational-components/shared/loader-placeholders';\nimport { LevelItem } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport labelMessages from '../../messages/labels.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst PlatformDetails = lazy(() =>\n  import(/* webpackChunkName: \"platform-details\" */ './platform-details')\n);\n\nconst PlatformTemplates = lazy(() =>\n  import(/* webpackChunkName: \"platform-templates\" */ './platform-templates')\n);\n\nconst PlatformInventories = lazy(() =>\n  import(\n    /* webpackChunkName: \"platform-inventories\" */ './platform-inventories'\n  )\n);\n\nconst ServiceOfferingDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"service-offering-detail\" */ './service-offering/service-offering-detail'\n  )\n);\n\nconst tabItems = [\n  {\n    eventKey: 0,\n    title: 'Templates',\n    name: `/platform/platform-templates`\n  },\n  {\n    eventKey: 1,\n    title: 'Inventories',\n    name: `/platform/platform-inventories`\n  },\n  {\n    eventKey: 2,\n    title: 'Summary',\n    name: `/platform/platform-details`\n  }\n];\n\nconst Platform = () => {\n  const dispatch = useDispatch();\n  const [{ platform }] = useQuery(['platform']);\n  const { selectedPlatform, serviceOffering } = useSelector(\n    ({ platformReducer: { selectedPlatform, serviceOffering } }) => ({\n      selectedPlatform,\n      serviceOffering\n    })\n  );\n\n  const resetBreadcrumbs = useBreadcrumbs([selectedPlatform, serviceOffering]);\n  const formatMessage = useFormatMessage();\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'platforms', secondaryNav: true });\n    Promise.all([\n      dispatch(fetchSelectedPlatform(platform)),\n      dispatch(fetchPlatforms())\n    ]);\n    scrollToTop();\n    return () => {\n      resetBreadcrumbs();\n    };\n  }, [platform]);\n\n  const platformAvailable = (platform) => ({\n    color: platform.availability_status === 'available' ? 'green' : 'red',\n    icon: <InfoCircleIcon />,\n    title:\n      platform.availability_status === 'available'\n        ? formatMessage(labelMessages.available)\n        : formatMessage(labelMessages.notAvailable)\n  });\n\n  return (\n    <Fragment>\n      <Route\n        exact\n        path={[\n          PLATFORM_INVENTORIES_ROUTE,\n          PLATFORM_ROUTE,\n          PLATFORM_TEMPLATES_ROUTE,\n          PLATFORM_DETAILS_ROUTE,\n          `${PLATFORM_INVENTORIES_ROUTE}/*`\n        ]}\n      >\n        <LevelItem>\n          <ToolbarRenderer\n            schema={createPlatformsTopToolbarSchema({\n              title: selectedPlatform.name,\n              paddingBottom: false,\n              tabItems,\n              platformAvailable: () => platformAvailable(selectedPlatform)\n            })}\n          />\n        </LevelItem>\n      </Route>\n      <Suspense fallback={<PlatformToolbarPlaceholder />}>\n        <Switch>\n          <Route path={PLATFORM_SERVICE_OFFERINGS_ROUTE}>\n            <ServiceOfferingDetail />\n          </Route>\n          <Route path={PLATFORM_INVENTORIES_ROUTE}>\n            <PlatformInventories />\n          </Route>\n          <Route path={PLATFORM_DETAILS_ROUTE}>\n            <PlatformDetails />\n          </Route>\n          <Route path={[PLATFORM_TEMPLATES_ROUTE, PLATFORM_ROUTE]}>\n            <PlatformTemplates />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Fragment>\n  );\n};\n\nexport default Platform;\n"],"sourceRoot":""}