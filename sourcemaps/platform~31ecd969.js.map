{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./src/toolbar/schemas/platforms-toolbar.schema.js","webpack:///./src/helpers/shared/breadcrumbs-creators.ts","webpack:///./src/redux/actions/breadcrumbs-actions.ts","webpack:///./src/utilities/use-breadcrumbs.js","webpack:///./src/smart-components/platform/platform.js"],"names":["arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","module","exports","arr","arrayLikeToArray","Array","isArray","iter","Symbol","iterator","Object","from","TypeError","createPlatformsToolbarSchema","searchValue","onFilterChange","title","fields","component","toolbarComponentTypes","TOP_TOOLBAR","key","TOP_TOOLBAR_TITLE","LEVEL","LEVEL_ITEM","FILTER_TOOLBAR_ITEM","placeholder","createPlatformsTopToolbarSchema","paddingBottom","tabItems","AppTabs","createPlatformsFilterToolbarSchema","meta","apiRequest","filterPlaceholder","TOOLBAR","className","count","AsyncPagination","isCompact","ENTITIES_EXTRA_PARAMS","FRAGMENT_TITLE","getState","portfolioReducer","selectedPortfolio","name","portfolioItem","platformReducer","selectedPlatform","serviceOffering","service","orderReducer","orderDetail","order","id","FRAGMENT_PREFIX","pathname","searchParams","createBreadcrumbsFromLocations","search","dispatch","length","type","payload","result","replace","split","reduce","acc","curr","index","generateTitle","forEach","useBreadcrumbs","updateTriggers","useDispatch","useLocation","URLSearchParams","searchObject","value","useEffect","PlatformTemplates","lazy","PlatformInventories","ServiceOfferingDetail","eventKey","Platform","useQuery","platform","useSelector","resetBreadcrumbs","insights","chrome","appNavClick","secondaryNav","Promise","all","fetchSelectedPlatform","fetchPlatforms","scrollToTop","exact","path","PLATFORM_INVENTORIES_ROUTE","PLATFORM_ROUTE","PLATFORM_TEMPLATES_ROUTE","schema","fallback","PLATFORM_SERVICE_OFFERINGS_ROUTE"],"mappings":"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","file":"js/platform~31ecd969.b5bb6c9b0c1b4c604419.js","sourcesContent":["var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","import AppTabs from '../../presentational-components/shared/app-tabs';\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nexport const createPlatformsToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  title\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: 'Filter by platform'\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields: []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsTopToolbarSchema = ({\n  title,\n  paddingBottom,\n  tabItems\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      paddingBottom,\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL_ITEM,\n          key: 'tabs-level-item',\n          fields: tabItems\n            ? [\n                {\n                  component: AppTabs,\n                  key: 'platform-tabs',\n                  tabItems\n                }\n              ]\n            : []\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsFilterToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  meta,\n  apiRequest,\n  filterPlaceholder\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOOLBAR,\n      key: 'platforms-filter-toolbar',\n      className: 'pf-u-pt-md pf-u-pb-md pf-u-pr-lg pf-u-pl-lg',\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          className: 'pf-m-grow',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: filterPlaceholder\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields:\n                meta.count > 0\n                  ? [\n                      {\n                        component: AsyncPagination,\n                        key: 'platform-pagination',\n                        apiRequest,\n                        meta,\n                        isCompact: true\n                      }\n                    ]\n                  : []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n","import {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  ORDER_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORMS_ROUTE,\n  ORDERS_ROUTE,\n  EDIT_SURVEY_ROUTE,\n  ADD_PRODUCTS_ROUTE,\n  PORTFOLIO_ITEM_ROUTE_EDIT\n} from '../../constants/routes';\nimport { PortfolioReducerState } from '../../redux/reducers/portfolio-reducer';\nimport { ReactNode } from 'react';\nimport { PlatformReducerState } from '../../redux/reducers/platform-reducer';\nimport { OrderReducerState } from '../../redux/reducers/order-reducer';\n\nexport const BASE_PORTFOLIO_FRAGMENTS = [\n  {\n    title: 'Portfolios',\n    pathname: PORTFOLIOS_ROUTE,\n    searchParams: {}\n  }\n];\n\nexport const ENTITIES_EXTRA_PARAMS = {\n  'portfolio-item': ['source']\n};\n\nexport const FRAGMENT_TITLE = {\n  [PORTFOLIO_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.selectedPortfolio.name,\n  [PORTFOLIO_ITEM_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.portfolioItem.portfolioItem.name,\n  [EDIT_SURVEY_ROUTE]: (): string => 'Edit survey',\n  [ADD_PRODUCTS_ROUTE]: (): string => 'Add products',\n  [PLATFORM_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.selectedPlatform.name,\n  [PLATFORM_SERVICE_OFFERINGS_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.serviceOffering.service.name,\n  [ORDER_ROUTE]: (\n    getState: () => { orderReducer: OrderReducerState }\n  ): ReactNode => {\n    const { portfolioItem, order } = getState().orderReducer.orderDetail;\n    return `${portfolioItem.name} # ${order.id}`;\n  },\n  [PORTFOLIO_ITEM_ROUTE_EDIT]: (): string => 'Edit product'\n};\n\nexport const FRAGMENT_PREFIX = {\n  [PORTFOLIO_ROUTE]: {\n    pathname: PORTFOLIOS_ROUTE,\n    title: 'Portfolios',\n    searchParams: {}\n  },\n  [PLATFORM_ROUTE]: {\n    pathname: PLATFORMS_ROUTE,\n    title: 'Platforms',\n    searchParams: {}\n  },\n  [ORDER_ROUTE]: {\n    pathname: ORDERS_ROUTE,\n    title: 'Orders',\n    searchParams: {}\n  }\n};\n","import { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport {\n  FRAGMENT_TITLE,\n  ENTITIES_EXTRA_PARAMS,\n  FRAGMENT_PREFIX\n} from '../../helpers/shared/breadcrumbs-creators';\nimport { Dispatch } from 'redux';\nimport { BreadcrumbFragment } from '../reducers/breadcrumbs-reducer';\nimport { GetReduxState } from '../../types/redux';\nimport { AnyObject, ReduxAction } from '../../types/common-types';\n\nexport const createBreadcrumbsFromLocations = (\n  pathname = '',\n  search: AnyObject = {}\n) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): ReduxAction<BreadcrumbFragment[]> => {\n  if (pathname.length === 0) {\n    return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: [] });\n  }\n\n  let result = pathname\n    .replace(/^\\//, '')\n    .split('/')\n    .reduce<BreadcrumbFragment[]>((acc, curr, index) => {\n      const pathname = `${\n        index > 0 && acc[index - 1] ? acc[index - 1].pathname : ''\n      }/${curr}`;\n\n      const generateTitle = (FRAGMENT_TITLE[\n        pathname as keyof typeof FRAGMENT_TITLE\n      ] as unknown) as (getState: GetReduxState) => string;\n      if (!generateTitle) {\n        return acc;\n      }\n\n      const searchParams = {\n        ...(index > 0 && acc[index - 1].searchParams),\n        ...(search[curr] ? { [curr]: search[curr] } : {})\n      };\n      if ((ENTITIES_EXTRA_PARAMS as AnyObject)[curr]) {\n        (ENTITIES_EXTRA_PARAMS as AnyObject)[curr].forEach((key: string) => {\n          searchParams[key] = search[key];\n        });\n      }\n\n      return [\n        ...acc,\n        {\n          pathname,\n          searchParams,\n          title: generateTitle(getState)\n        }\n      ];\n    }, []);\n  if (result.length > 0 && (FRAGMENT_PREFIX as AnyObject)[result[0].pathname]) {\n    result = [(FRAGMENT_PREFIX as AnyObject)[result[0].pathname], ...result];\n  }\n\n  return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: result });\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createBreadcrumbsFromLocations } from '../redux/actions/breadcrumbs-actions';\n\nconst useBreadcrumbs = (updateTriggers = []) => {\n  const dispatch = useDispatch();\n  const { pathname, search } = useLocation();\n  if (updateTriggers.length === 0) {\n    return dispatch(createBreadcrumbsFromLocations('', {}));\n  }\n\n  const searchParams = new URLSearchParams(search);\n  const searchObject = {};\n  searchParams.forEach((value, key) => {\n    searchObject[key] = value;\n  });\n\n  useEffect(() => {\n    dispatch(createBreadcrumbsFromLocations(pathname, searchObject));\n  }, [pathname, ...updateTriggers]);\n\n  return () => dispatch(createBreadcrumbsFromLocations('', {}));\n};\n\nexport default useBreadcrumbs;\n","import React, { Fragment, useEffect, lazy, Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport {\n  fetchSelectedPlatform,\n  fetchPlatforms\n} from '../../redux/actions/platform-actions';\nimport useQuery from '../../utilities/use-query';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useBreadcrumbs from '../../utilities/use-breadcrumbs';\nimport {\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORM_INVENTORIES_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_TEMPLATES_ROUTE\n} from '../../constants/routes';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { createPlatformsTopToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport { PlatformToolbarPlaceholder } from '../../presentational-components/shared/loader-placeholders';\n\nconst PlatformTemplates = lazy(() =>\n  import(/* webpackChunkName: \"platform-templates\" */ './platform-templates')\n);\n\nconst PlatformInventories = lazy(() =>\n  import(\n    /* webpackChunkName: \"platform-inventories\" */ './platform-inventories'\n  )\n);\n\nconst ServiceOfferingDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"service-offering-detail\" */ './service-offering/service-offering-detail'\n  )\n);\n\nconst tabItems = [\n  {\n    eventKey: 0,\n    title: 'Templates',\n    name: `/platform/platform-templates`\n  },\n  {\n    eventKey: 1,\n    title: 'Inventories',\n    name: `/platform/platform-inventories`\n  }\n];\n\nconst Platform = () => {\n  const dispatch = useDispatch();\n  const [{ platform }] = useQuery(['platform']);\n  const { selectedPlatform, serviceOffering } = useSelector(\n    ({ platformReducer: { selectedPlatform, serviceOffering } }) => ({\n      selectedPlatform,\n      serviceOffering\n    })\n  );\n\n  const resetBreadcrumbs = useBreadcrumbs([selectedPlatform, serviceOffering]);\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'platforms', secondaryNav: true });\n    Promise.all([\n      dispatch(fetchSelectedPlatform(platform)),\n      dispatch(fetchPlatforms())\n    ]);\n    scrollToTop();\n    return () => {\n      resetBreadcrumbs();\n    };\n  }, [platform]);\n\n  return (\n    <Fragment>\n      <Route\n        exact\n        path={[\n          PLATFORM_INVENTORIES_ROUTE,\n          PLATFORM_ROUTE,\n          PLATFORM_TEMPLATES_ROUTE,\n          `${PLATFORM_INVENTORIES_ROUTE}/*`\n        ]}\n      >\n        <ToolbarRenderer\n          schema={createPlatformsTopToolbarSchema({\n            title: selectedPlatform.name,\n            paddingBottom: false,\n            tabItems\n          })}\n        />\n      </Route>\n      <Suspense fallback={<PlatformToolbarPlaceholder />}>\n        <Switch>\n          <Route path={PLATFORM_SERVICE_OFFERINGS_ROUTE}>\n            <ServiceOfferingDetail />\n          </Route>\n          <Route path={PLATFORM_INVENTORIES_ROUTE}>\n            <PlatformInventories />\n          </Route>\n          <Route path={[PLATFORM_TEMPLATES_ROUTE, PLATFORM_ROUTE]}>\n            <PlatformTemplates />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Fragment>\n  );\n};\n\nexport default Platform;\n"],"sourceRoot":""}