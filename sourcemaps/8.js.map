{"version":3,"sources":["webpack:///./src/PresentationalComponents/Portfolio/portfoliocard.scss?0013","webpack:///./src/PresentationalComponents/Portfolio/portfoliocard.scss","webpack:///./src/assets/images/default-portfolio.jpg","webpack:///./src/PresentationalComponents/Portfolio/portfolio-card-header.js","webpack:///./src/PresentationalComponents/Portfolio/PorfolioCard.js","webpack:///./src/PresentationalComponents/Portfolio/PortfoliosFilterToolbar.js","webpack:///./src/SmartComponents/Portfolio/Portfolios.js"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","p","PortfolioCardHeader","_ref","backgroundSrc","portfolioName","headerActions","react_default","a","createElement","className","style","backgroundImage","concat","Toolbar","ToolbarGroup","marginLeft","paddingBottom","Text","component","TextVariants","h4","propTypes","PropTypes","string","isRequired","arrayOf","node","defaultProps","DefaultPortfolioImg","TO_DISPLAY","PortfolioCard","portfolioId","imageUrl","name","id","props","objectWithoutProperties_default","GridItem","sm","md","lg","xl","Link","to","Card","CardHeader","portfolio_card_header","key","Button","variant","aria-label","onClick","console","log","edit_alt_icon","fill","trash_icon","CardBody","CardCommon","extends_default","objectSpread_default","toDisplay","CardFooter","history","object","PortfoliosFilterToolbar","onFilterChange","filterValue","FilterToolbarItem","searchValue","placeholder","OrderToolbarItem","func","Portfolios","filteredItems","isOpen","_this","fetchPortfolios","setState","this","fetchData","scrollToTop","ToolbarItem","Title","size","_this2","items","portfolios","filter","toLowerCase","includes","state","trim","map","item","PorfolioCard","isLoading","length","react","Portfolio_PortfoliosFilterToolbar","Route","exact","path","AddPortfolio","RemovePortfolio","renderToolbar","ContentGallery","Component","array","platforms","bool","searchFilter","showModal","hideModal","connect","_ref2","_ref2$portfolioReduce","portfolioReducer","dispatch","apiProps","modalProps","modalType"],"mappings":"6EACA,IAAAA,EAAcC,EAAQ,KAEtB,iBAAAD,MAAA,EAA4CE,EAAAC,EAASH,EAAA,MAOrD,IAAAI,EAAA,CAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAAC,GAEaP,EAAQ,IAARA,CAA8DD,EAAAI,GAE3EJ,EAAAS,SAAAP,EAAAQ,QAAAV,EAAAS,8BCjBAC,EAAAR,EAAAQ,QAA2BT,EAAQ,IAARA,EAA0D,IAErFE,EAAUF,EAAQ,KAAsG,IAGxHS,EAAAC,KAAA,CAAcT,EAAAC,EAAS,4iCAA0iC,0BCLjkCD,EAAAQ,QAAiBT,EAAAW,EAAuB,mdCOlCC,EAAsB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,cAAeC,EAAlBF,EAAkBE,cAAeC,EAAjCH,EAAiCG,cAAjC,OAC1BC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAwBC,MAAQ,CAAEC,gBAAe,OAAAC,OAAST,EAAT,OAC9DG,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAcJ,MAAQ,CACpBK,WAAY,OACZC,cAAe,KAEbX,IAGNC,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMR,UAAU,wBAAwBS,UAAYC,IAAaC,IAAOhB,KAI5EH,EAAoBoB,UAAY,CAC9BlB,cAAemB,IAAUC,OACzBnB,cAAekB,IAAUC,OAAOC,WAChCnB,cAAeiB,IAAUG,QAAQH,IAAUI,OAG7CzB,EAAoB0B,aAAe,CACjCxB,cAAeyB,IACfvB,cAAe,IAGFJ,QCvBT4B,EAAa,CAAE,cAAe,YAyB9BC,EAAgB,SAAA5B,GAAA,IAtBQE,EAAe2B,EAsBpBC,EAAH9B,EAAG8B,SAAUC,EAAb/B,EAAa+B,KAAMC,EAAnBhC,EAAmBgC,GAAOC,EAA1BC,IAAAlC,EAAA,iCACpBI,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAUC,GAAK,EAAIC,GAAK,EAAIC,GAAK,EAAIC,GAAK,GACxCnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMjC,UAAU,YAAYkC,GAAE,cAAA/B,OAAiBsB,IAC7C5B,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAYpC,UAAU,qBACpBH,EAAAC,EAAAC,cAACsC,EAAD,CACE1C,cAAgB6B,EAChB5B,eA7BkBD,EA6BmB6B,EA7BJF,EA6BUG,EA7BM,CAC3D5B,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMK,IAAI,wBAAwBJ,GAAE,oBAAA/B,OAAuBmB,IACzDzB,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACEC,QAAQ,QACRC,aAAA,kBAAAtC,OAA+BR,GAC/B+C,QAAU,kBAAMC,QAAQC,IAAI,8CAE5B/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAaC,KATD,YAYhBjD,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMK,IAAI,0BAA0BJ,GAAE,sBAAA/B,OAAyBmB,IAC7DzB,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACED,IAAI,0BACJE,QAAQ,QACRC,aAAA,oBAAAtC,OAAiCR,GACjC+C,QAAU,kBAAMC,QAAQC,IAAI,gDAE5B/C,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAWD,KAnBC,iBAkCVjD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,KACEnD,EAAAC,EAAAC,cAACkD,EAAA,EAADC,IAAA,GAAAC,IAAA,CAAoB3B,OAAMD,YAAaG,GAAvC,CAAiD0B,UAAYhC,MAE/DvB,EAAAC,EAAAC,cAACsD,EAAA,EAAD,UAMRhC,EAAcT,UAAY,CACxB0C,QAAS1C,IAAU2C,OACnBhC,SAAUX,IAAUE,OACpBU,KAAMZ,IAAUE,OAChBW,GAAIb,IAAUE,QAGDO,0BCrDTmC,WAA0B,SAAA/D,GAAA,IAAGgE,EAAHhE,EAAGgE,eAAgBC,EAAnBjE,EAAmBiE,YAAgBhC,EAAnCC,IAAAlC,EAAA,yCAC9BI,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASJ,UAAU,iBACjBH,EAAAC,EAAAC,cAAC4D,EAAA,EAADT,IAAA,GAAwBxB,EAAxB,CAAgCkC,YAAcF,EAAcD,eAAiBA,EAAiBI,YAAc,sBAC5GhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAsBpC,MAI3B8B,GAAwB5C,UAAY,CAClC6C,eAAgB5C,IAAUkD,KAAKhD,WAC/B2C,YAAa7C,IAAUC,QAGV0C,qECJTQ,6MACM,CACNC,cAAe,GACfC,QAAQ,EACRR,YAAa,iCAGH,WACVS,EAAKzC,MAAM0C,qDAQI,SAAAV,GAAW,OAAIS,EAAKE,SAAS,CAAEX,qFAJ9CY,KAAKC,YACLC,uDAMA,OACE3E,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASJ,UAAU,mBACjBH,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,KACE5E,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAOC,KAAO,OAAd,oBAGJ9E,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAeL,UAAY,sBACzBH,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,KACE5E,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,GAAG,6BACPrC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACEC,QAAQ,UACRC,aAAW,oBAFb,yDAaH,IAAAmC,EAAAN,KACHL,EAAgB,CAClBY,MAAOP,KAAK5C,MAAMoD,WACjBC,OAAO,SAAAtF,GAAA,OAAAA,EAAG+B,KAAgBwD,cAAcC,SAASL,EAAKM,MAAMxB,YAAYyB,OAAOH,iBAC/EI,IAAI,SAAAC,GAAI,OAAIxF,EAAAC,EAAAC,cAACuF,EAADpC,IAAA,CAAeZ,IAAM+C,EAAK5D,IAAU4D,MACjDE,UAAWjB,KAAK5C,MAAM6D,WAA8C,IAAjCjB,KAAK5C,MAAMoD,WAAWU,QAG3D,OACE3F,EAAAC,EAAAC,cAAC0F,EAAA,SAAD,KACE5F,EAAAC,EAAAC,cAAC2F,GAAD,CAAyBjC,eAAiBa,KAAKb,eAAiBC,YAAcY,KAAKY,MAAMxB,cACzF7D,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,4BAA4BpF,UAAYqF,OAC1DjG,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,uBAAuBpF,UAAYqF,OACrDjG,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,yBAAyBpF,UAAYsF,OACrDzB,KAAK0B,gBACPnG,EAAAC,EAAAC,cAACkG,EAAA,EAAoBhC,WAzDNiC,aA+EzBlC,GAAWpD,UAAY,CACrBqD,cAAerD,IAAUuF,MACzBrB,WAAYlE,IAAUuF,MACtBC,UAAWxF,IAAUuF,MACrBZ,UAAW3E,IAAUyF,KACrBC,aAAc1F,IAAUE,OACxByF,UAAW3F,IAAUmD,KACrByC,UAAW5F,IAAUmD,KACrBK,gBAAiBxD,IAAUmD,KAAKhD,YAGlCiD,GAAW9C,aAAe,CACxB4D,WAAY,IAGC2B,4BA/BS,SAAAC,GAAA,IAAAC,EAAAD,EAAGE,iBAAH,MAAkE,CACxF9B,WADsB6B,EAAuB7B,WAE7CS,UAFsBoB,EAAmCpB,UAGzDe,aAHsBK,EAA8CjD,cAM3C,SAAAmD,GACzB,MAAO,CACLzC,gBAAiB,SAAA0C,GAAQ,OAAID,EAASzC,aAAgB0C,KACtDN,UAAW,kBAAMK,EAASL,iBAC1BD,UAAW,SAACQ,EAAYC,GACtBH,EAASN,aAAU,CAAEQ,aAAYC,kBAoBxBP,CAA6CzC","file":"js/8.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./portfoliocard.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./portfoliocard.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./portfoliocard.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../node_modules/css-loader/index.js!@red-hat-insights/insights-frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \"/* stylelint-enable */\\n:root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\nul.navigation-secondary {\\n  margin-top: 20px; }\\n  ul.navigation-secondary li {\\n    cursor: pointer;\\n    font-size: 15px;\\n    width: 100%;\\n    box-shadow: none;\\n    padding: 5px 0;\\n    color: #1d1d1d; }\\n    ul.navigation-secondary li span {\\n      margin-left: 50px; }\\n    ul.navigation-secondary li:active, ul.navigation-secondary li.active {\\n      background: #f5f5f5;\\n      color: var(--pf-global--link--Color); }\\n    ul.navigation-secondary li:hover {\\n      color: var(--pf-global--link--Color); }\\n\\n.elipsis-text-overflow {\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden; }\\n\\n.toolbar-padding {\\n  padding: 24px 24px 0 24px; }\\n\\n.card-link {\\n  cursor: pointer; }\\n  .card-link:hover {\\n    text-decoration: none; }\\n\\n.card-image-header {\\n  padding: 0 !important; }\\n\\n.portfolio-card-header {\\n  min-height: 100px;\\n  max-height: 200px;\\n  background-size: stretch;\\n  color: white;\\n  padding: 8px 24px; }\\n\", \"\"]);\n\n// exports\n","module.exports = __webpack_public_path__ + \"fonts/default-portfolio.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants, Toolbar, ToolbarGroup } from '@patternfly/react-core';\nimport DefaultPortfolioImg from '../../assets/images/default-portfolio.jpg';\n\nimport './portfoliocard.scss';\n\nconst PortfolioCardHeader = ({ backgroundSrc, portfolioName, headerActions }) => (\n  <div className=\"portfolio-card-header\" style={ { backgroundImage: `url(${backgroundSrc})` } }>\n    <Toolbar>\n      <ToolbarGroup style={ {\n        marginLeft: 'auto',\n        paddingBottom: 16\n      } }>\n        { headerActions }\n      </ToolbarGroup>\n    </Toolbar>\n    <Text className=\"elipsis-text-overflow\" component={ TextVariants.h4 }>{ portfolioName }</Text>\n  </div>\n);\n\nPortfolioCardHeader.propTypes = {\n  backgroundSrc: PropTypes.string,\n  portfolioName: PropTypes.string.isRequired,\n  headerActions: PropTypes.arrayOf(PropTypes.node)\n};\n\nPortfolioCardHeader.defaultProps = {\n  backgroundSrc: DefaultPortfolioImg,\n  headerActions: []\n};\n\nexport default PortfolioCardHeader;\n","import React from 'react';\nimport './portfoliocard.scss';\nimport propTypes from 'prop-types';\nimport ItemDetails from '../Shared/CardCommon';\nimport { Link } from 'react-router-dom';\nimport { GridItem, Card, CardHeader, CardBody, CardFooter, Button } from '@patternfly/react-core';\nimport { EditAltIcon, TrashIcon } from '@patternfly/react-icons';\nimport PortfolioCardHeader from './portfolio-card-header';\n\nconst TO_DISPLAY = [ 'description', 'modified' ];\nconst ICON_FILL = 'white';\n\nconst createToolbarActions = (portfolioName, portfolioId) => [\n  <Link key=\"edit-portfolio-action\" to={ `/portfolios/edit/${portfolioId}` }>\n    <Button\n      variant=\"plain\"\n      aria-label={ `edit-portfolio-${portfolioName}` }\n      onClick={ () => console.log('Edit portfolio api helper not available.') }\n    >\n      <EditAltIcon fill={ ICON_FILL } />\n    </Button>\n  </Link>,\n  <Link key=\"remove-portfolio-action\" to={ `/portfolios/remove/${portfolioId}` }>\n    <Button\n      key=\"remove-portfolio-action\"\n      variant=\"plain\"\n      aria-label={ `remove-portfolio-${portfolioName}` }\n      onClick={ () => console.log('Remove portfolio api helper not available.') }\n    >\n      <TrashIcon fill={ ICON_FILL } />\n    </Button>\n  </Link>\n];\n\nconst PortfolioCard = ({ imageUrl, name, id, ...props }) => (\n  <GridItem sm={ 6 } md={ 4 } lg={ 4 } xl={ 3 }>\n    <Link className=\"card-link\" to={ `/portfolio/${id}` }>\n      <Card>\n        <CardHeader className=\"card-image-header\">\n          <PortfolioCardHeader\n            portfolioName={ name }\n            headerActions={ createToolbarActions(name, id) }\n          />\n        </CardHeader>\n        <CardBody>\n          <ItemDetails { ...{ name, imageUrl, ...props } } toDisplay={ TO_DISPLAY } />\n        </CardBody>\n        <CardFooter/>\n      </Card>\n    </Link>\n  </GridItem>\n);\n\nPortfolioCard.propTypes = {\n  history: propTypes.object,\n  imageUrl: propTypes.string,\n  name: propTypes.string,\n  id: propTypes.string\n};\n\nexport default PortfolioCard;\n","import React from 'react';\nimport { Toolbar } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport OrderToolbarItem from '../Shared/OrderToolbarItem';\nimport FilterToolbarItem from '../Shared/FilterToolbarItem';\nimport '../Shared/toolbarschema.scss';\n\nconst PortfoliosFilterToolbar = ({ onFilterChange, filterValue, ...props }) => (\n  <Toolbar className=\"searchToolbar\">\n    <FilterToolbarItem { ...props } searchValue={ filterValue } onFilterChange={ onFilterChange } placeholder={ 'Find a Portfolio' }/>\n    <OrderToolbarItem { ...props }/>\n  </Toolbar>\n);\n\nPortfoliosFilterToolbar.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  filterValue: PropTypes.string\n};\n\nexport default PortfoliosFilterToolbar;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { Route, Link } from 'react-router-dom';\nimport { Toolbar, ToolbarGroup, ToolbarItem, Title, Button } from '@patternfly/react-core';\nimport ContentGallery from '../../SmartComponents/ContentGallery/ContentGallery';\nimport PortfolioCard from '../../PresentationalComponents/Portfolio/PorfolioCard';\nimport PortfoliosFilterToolbar from '../../PresentationalComponents/Portfolio/PortfoliosFilterToolbar';\nimport { fetchPortfolios } from '../../redux/Actions/PortfolioActions';\nimport { hideModal, showModal } from '../../redux/Actions/MainModalActions';\nimport AddPortfolio from './add-portfolio-modal';\nimport RemovePortfolio from './remove-portfolio-modal';\nimport './portfolio.scss';\nimport { scrollToTop } from '../../Helpers/Shared/helpers';\n\nclass Portfolios extends Component {\n    state = {\n      filteredItems: [],\n      isOpen: false,\n      filterValue: ''\n    };\n\n    fetchData = () => {\n      this.props.fetchPortfolios();\n    };\n\n    componentDidMount() {\n      this.fetchData();\n      scrollToTop();\n    }\n\n    onFilterChange = filterValue => this.setState({ filterValue })\n\n    renderToolbar() {\n      return (\n        <Toolbar className=\"toolbar-padding\">\n          <ToolbarGroup>\n            <ToolbarItem>\n              <Title size={ '2xl' }>All Portfolios</Title>\n            </ToolbarItem>\n          </ToolbarGroup>\n          <ToolbarGroup  className={ 'pf-u-ml-auto-on-xl' }>\n            <ToolbarItem>\n              <Link to=\"/portfolios/add-portfolio\">\n                <Button\n                  variant=\"primary\"\n                  aria-label=\"Create Portfolio\"\n                >\n                Create Portfolio\n                </Button>\n              </Link>\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n      );\n    }\n\n    render() {\n      let filteredItems = {\n        items: this.props.portfolios\n        .filter(({ name }) => name.toLowerCase().includes(this.state.filterValue.trim().toLowerCase()))\n        .map(item => <PortfolioCard key={ item.id } { ...item } />),\n        isLoading: this.props.isLoading && this.props.portfolios.length === 0\n      };\n\n      return (\n        <Fragment>\n          <PortfoliosFilterToolbar onFilterChange={ this.onFilterChange } filterValue={ this.state.filterValue }/>\n          <Route exact path=\"/portfolios/add-portfolio\" component={ AddPortfolio } />\n          <Route exact path=\"/portfolios/edit/:id\" component={ AddPortfolio } />\n          <Route exact path=\"/portfolios/remove/:id\" component={ RemovePortfolio } />\n          { this.renderToolbar() }\n          <ContentGallery { ...filteredItems } />\n        </Fragment>\n      );\n    }\n}\n\nconst mapStateToProps = ({ portfolioReducer: { portfolios, isLoading, filterValue }}) => ({\n  portfolios,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchPortfolios: apiProps => dispatch(fetchPortfolios(apiProps)),\n    hideModal: () => dispatch(hideModal()),\n    showModal: (modalProps, modalType) => {\n      dispatch(showModal({ modalProps, modalType }));\n    }\n  };\n};\n\nPortfolios.propTypes = {\n  filteredItems: propTypes.array,\n  portfolios: propTypes.array,\n  platforms: propTypes.array,\n  isLoading: propTypes.bool,\n  searchFilter: propTypes.string,\n  showModal: propTypes.func,\n  hideModal: propTypes.func,\n  fetchPortfolios: propTypes.func.isRequired\n};\n\nPortfolios.defaultProps = {\n  portfolios: []\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Portfolios);\n"],"sourceRoot":""}