{"version":3,"sources":["webpack:///./src/smart-components/portfolio/portfolio.js","webpack:///./src/helpers/shared/redux-mutators.ts","webpack:///./src/presentational-components/portfolio/back-to-products.tsx","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/angle-left-icon.js","webpack:///./src/utilities/use-is-mounted.js"],"names":["PortfolioSuspenseFallback","fromProducts","title","description","schema","fields","component","toolbarComponentTypes","TOP_TOOLBAR","breadcrumbs","key","BackToProducts","hidden","TOP_TOOLBAR_TITLE","propTypes","PropTypes","node","bool","PortfolioItems","lazy","PortfolioItemDetail","AddProductsToPortfolio","initialState","selectedItems","firstSelectedProduct","undefined","removeInProgress","filterValue","copyInProgress","isFetching","isFiltering","debouncedFilter","asyncFormValidator","value","dispatch","filteringCallback","meta","fetchPortfolioItemsWithPortfolio","then","porftolioUiReducer","state","items","item","type","payload","selectItem","selectedItem","includes","slice","indexOf","product","setRemoveInProgress","removeSucessfull","setFilterValue","setCopyInProgress","setIsFetching","setFilteringFlag","Portfolio","viewState","useInitialUriHash","useReducer","portfolioItems","filter","stateDispatch","useQuery","searchParams","id","portfolio","url","useRouteMatch","PORTFOLIO_ROUTE","history","useHistory","useDispatch","isMounted","useIsMounted","useSelector","portfolioReducer","selectedPortfolio","portfolioItem","resetBreadcrumbs","useBreadcrumbs","fetchData","portfolioId","Promise","all","fetchPlatforms","fetchSelectedPortfolio","data","current","useEffect","insights","chrome","appNavClick","secondaryNav","scrollToTop","resetSelectedPortfolio","location","pathname","routes","portfolioRoute","addProductsRoute","editPortfolioRoute","removePortfolioRoute","sharePortfolioRoute","workflowPortfolioRoute","portfolioItemRoute","metadata","user_capabilities","show","fallback","name","path","userCapabilities","requiredCapabilities","portfolioLoaded","handleFilterChange","offset","removeProducts","products","removeProductsFromPortfolio","copyPortfolio","push","search","fetchPortfolios","formatMessage","className","variant","ouiaId","backToProducts","exports","__esModule","AngleLeftIconConfig","height","width","svgPath","yOffset","xOffset","AngleLeftIcon","createIcon","useRef"],"mappings":"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","file":"js/portfolio~31ecd969.5a8892ad3c9852146d0d.js","sourcesContent":["import React, { useEffect, useReducer, lazy, Suspense } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useRouteMatch, Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport { toggleArraySelection } from '../../helpers/shared/redux-mutators';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport {\n  copyPortfolio,\n  fetchPortfolios,\n  fetchSelectedPortfolio,\n  removeProductsFromPortfolio,\n  resetSelectedPortfolio,\n  fetchPortfolioItemsWithPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport useQuery from '../../utilities/use-query';\nimport useBreadcrumbs from '../../utilities/use-breadcrumbs';\nimport { PORTFOLIO_ROUTE } from '../../constants/routes';\nimport { UnauthorizedRedirect } from '../error-pages/error-redirects';\nimport CatalogRoute from '../../routing/catalog-route';\nimport useIsMounted from '../../utilities/use-is-mounted';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { toolbarComponentTypes } from '../../toolbar/toolbar-mapper';\nimport BackToProducts from '../../presentational-components/portfolio/back-to-products';\n\n/**\n * Fake the toolbar until the chunk is loaded\n */\nconst PortfolioSuspenseFallback = ({ fromProducts, title, description }) => (\n  <ToolbarRenderer\n    schema={{\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR,\n          breadcrumbs: !fromProducts,\n          key: 'portfolio-top-toolbar',\n          fields: [\n            {\n              component: BackToProducts,\n              key: 'back-to-products',\n              hidden: !fromProducts\n            },\n            {\n              component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n              key: 'portfolio-toolbar-title',\n              title,\n              description\n            }\n          ]\n        }\n      ]\n    }}\n  />\n);\n\nPortfolioSuspenseFallback.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  fromProducts: PropTypes.bool\n};\n\nconst PortfolioItems = lazy(() =>\n  /* webpackChunkName: \"portfolio-items\" */ import('./portfolio-items')\n);\n\nconst PortfolioItemDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolio-item-detail\" */\n    './portfolio-item-detail/portfolio-item-detail'\n  )\n);\nconst AddProductsToPortfolio = lazy(() =>\n  import(\n    /* webpackChunkName: \"add-products-to-portfolio\" */\n    './add-products-to-portfolio'\n  )\n);\nconst initialState = {\n  selectedItems: [],\n  firstSelectedProduct: undefined,\n  removeInProgress: false,\n  filterValue: '',\n  copyInProgress: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (value, dispatch, filteringCallback, meta) => {\n    filteringCallback(true);\n    dispatch(fetchPortfolioItemsWithPortfolio(value, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst porftolioUiReducer = (state, { type, payload = {} }) =>\n  ({\n    selectItem: {\n      ...state,\n      selectedItems: toggleArraySelection(\n        state.selectedItems,\n        payload.selectedItem\n      ),\n      firstSelectedProduct: payload.product || state.firstSelectedProduct\n    },\n    setRemoveInProgress: { ...state, removeInProgress: payload },\n    removeSucessfull: { ...state, selectedItems: [], removeInProgress: false },\n    setFilterValue: { ...state, filterValue: payload, isFiltering: true },\n    setCopyInProgress: { ...state, copyInProgress: payload },\n    setIsFetching: { ...state, isFetching: payload },\n    setFilteringFlag: { ...state, isFiltering: payload }\n  }[type]);\n\nconst Portfolio = () => {\n  const viewState = useInitialUriHash();\n  const [state, stateDispatch] = useReducer(porftolioUiReducer, {\n    ...initialState,\n    filterValue: viewState?.portfolioItems?.filter || ''\n  });\n  const [searchParams] = useQuery(['portfolio', 'from-products']);\n  const { portfolio: id, 'from-products': fromProducts } = searchParams;\n  const { url } = useRouteMatch(PORTFOLIO_ROUTE);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isMounted = useIsMounted();\n  const { portfolio, portfolioItem, meta } = useSelector(\n    ({\n      portfolioReducer: {\n        selectedPortfolio,\n        portfolioItem,\n        portfolioItems: { meta }\n      }\n    }) => ({\n      portfolio: selectedPortfolio,\n      portfolioItem,\n      meta\n    })\n  );\n\n  const resetBreadcrumbs = useBreadcrumbs([portfolio, portfolioItem]);\n\n  const fetchData = (portfolioId) => {\n    stateDispatch({ type: 'setIsFetching', payload: true });\n    return Promise.all([\n      dispatch(fetchPlatforms()),\n      dispatch(fetchSelectedPortfolio(portfolioId)),\n      dispatch(\n        fetchPortfolioItemsWithPortfolio(portfolioId, viewState?.portfolioItems)\n      )\n    ])\n      .then((data) => {\n        if (isMounted.current) {\n          stateDispatch({ type: 'setIsFetching', payload: false });\n        }\n\n        return data;\n      })\n      .catch(() => stateDispatch({ type: 'setIsFetching', payload: false }));\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({\n      id: fromProducts === 'true' ? 'products' : 'portfolios',\n      secondaryNav: true\n    });\n    fetchData(id);\n    scrollToTop();\n\n    return () => {\n      resetBreadcrumbs();\n      dispatch(resetSelectedPortfolio());\n    };\n  }, []);\n\n  useEffect(() => {\n    if (\n      isMounted.current === true &&\n      !state.isFetching &&\n      history.location.pathname === PORTFOLIO_ROUTE\n    ) {\n      fetchData(id);\n      scrollToTop();\n    }\n  }, [id, history.location.pathname]);\n\n  const handleCopyPortfolio = () => {\n    stateDispatch({ type: 'setCopyInProgress', payload: true });\n    return dispatch(copyPortfolio(id))\n      .then(({ id }) =>\n        history.push({\n          pathname: PORTFOLIO_ROUTE,\n          search: `?portfolio=${id}`\n        })\n      )\n      .then(() => stateDispatch({ type: 'setCopyInProgress', payload: false }))\n      .then(() => dispatch(fetchPortfolios()))\n      .catch(() =>\n        stateDispatch({ type: 'setCopyInProgress', payload: false })\n      );\n  };\n\n  const removeProducts = (products) => {\n    stateDispatch({ type: 'setRemoveInProgress', payload: true });\n    dispatch(\n      removeProductsFromPortfolio(\n        products,\n        portfolio.name,\n        state.firstSelectedProduct\n      )\n    )\n      .then(() => stateDispatch({ type: 'removeSucessfull' }))\n      .catch(() =>\n        stateDispatch({ type: 'setRemoveInProgress', payload: false })\n      );\n  };\n\n  const handleFilterChange = (filter) => {\n    stateDispatch({ type: 'setFilterValue', payload: filter });\n    debouncedFilter(\n      id,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0,\n        filter\n      }\n    );\n  };\n\n  const routes = {\n    portfolioRoute: url,\n    addProductsRoute: `${url}/add-products`,\n    editPortfolioRoute: `${url}/edit-portfolio`,\n    removePortfolioRoute: `${url}/remove-portfolio`,\n    sharePortfolioRoute: `${url}/share-portfolio`,\n    workflowPortfolioRoute: `${url}/edit-workflow`,\n    portfolioItemRoute: `${url}/portfolio-item`\n  };\n\n  if (portfolio.metadata.user_capabilities.show === false) {\n    return <UnauthorizedRedirect />;\n  }\n\n  return (\n    <Suspense\n      fallback={\n        <PortfolioSuspenseFallback\n          fromProducts={fromProducts === 'true'}\n          title={portfolio.name}\n          description={portfolio.description}\n        />\n      }\n    >\n      <Switch>\n        <CatalogRoute\n          path={routes.addProductsRoute}\n          userCapabilities={portfolio.metadata.user_capabilities}\n          requiredCapabilities=\"update\"\n        >\n          <AddProductsToPortfolio portfolioRoute={routes.portfolioRoute} />\n        </CatalogRoute>\n        <Route path={routes.portfolioItemRoute}>\n          <PortfolioItemDetail portfolioLoaded={!state.isFetching} />\n        </Route>\n        <Route path={routes.portfolioRoute}>\n          <PortfolioItems\n            routes={routes}\n            fromProducts={fromProducts === 'true'}\n            handleFilterChange={handleFilterChange}\n            removeProducts={removeProducts}\n            copyPortfolio={handleCopyPortfolio}\n            state={state}\n            stateDispatch={stateDispatch}\n          />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Portfolio;\n","export const toggleArraySelection = (items: string[], item: string): string[] =>\n  items.includes(item)\n    ? [\n        ...items.slice(0, items.indexOf(item)),\n        ...items.slice(items.indexOf(item) + 1)\n      ]\n    : [...items, item];\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\n\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst BackToProducts: React.ComponentType = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <div className=\"pf-u-mb-md\">\n      <AngleLeftIcon className=\"pf-u-mr-sm\" />\n      <Button\n        variant=\"link\"\n        ouiaId={'back-to-products'}\n        component={() => (\n          <CatalogLink pathname=\"/products\">\n            {formatMessage(portfolioMessages.backToProducts)}\n          </CatalogLink>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default BackToProducts;\n","\"use strict\"\nexports.__esModule = true;\nexports.AngleLeftIconConfig = {\n  name: 'AngleLeftIcon',\n  height: 512,\n  width: 256,\n  svgPath: 'M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.AngleLeftIcon = require('../createIcon').createIcon(exports.AngleLeftIconConfig);\nexports[\"default\"] = exports.AngleLeftIcon;","import { useRef, useEffect } from 'react';\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => (isMounted.current = false);\n  }, []);\n  return isMounted;\n};\n\nexport default useIsMounted;\n"],"sourceRoot":""}