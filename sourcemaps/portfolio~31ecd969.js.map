{"version":3,"sources":["webpack:///./src/utilities/async-form-validator.js","webpack:///./src/helpers/platform/platform-helper.js","webpack:///./src/redux/actions/platform-actions.js","webpack:///./src/helpers/shared/breadcrumbs-creators.js","webpack:///./src/redux/actions/breadcrumbs-actions.js","webpack:///./src/utilities/use-breadcrumbs.js","webpack:///./src/presentational-components/portfolio/back-to-products.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/angle-left-icon.js","webpack:///./src/utilities/use-is-mounted.js","webpack:///./src/smart-components/portfolio/portfolio.js","webpack:///./src/helpers/shared/redux-mutators.js"],"names":["asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","axiosInstance","getAxiosInstance","graphqlInstance","getGraphqlInstance","getPlatforms","post","SOURCES_API_BASE","query","then","data","application_types","sources","getPlatform","platformId","get","getPlatformItems","filter","filterQuery","TOPOLOGICAL_INVENTORY_API_BASE","limit","offset","getPlatformInventories","defaultSettings","getServiceOffering","serviceOfferingId","sourceId","Promise","all","source","source_type_id","icon_url","service","fetchPlatforms","dispatch","type","ActionTypes","PlatformHelper","payload","error","fetchPlatformItems","meta","fetchSelectedPlatform","id","fetchPlatformInventories","fetchServiceOffering","ENTITIES_EXTRA_PARAMS","PORTFOLIOS_ROUTE","FRAGMENT_TITLE","PORTFOLIO_ROUTE","getState","portfolioReducer","selectedPortfolio","name","PORTFOLIO_ITEM_ROUTE","portfolioItem","EDIT_SURVEY_ROUTE","ADD_PRODUCTS_ROUTE","PLATFORM_ROUTE","platformReducer","selectedPlatform","PLATFORM_SERVICE_OFFERINGS_ROUTE","serviceOffering","ORDER_ROUTE","orderReducer","orderDetail","order","PORTFOLIO_ITEM_ROUTE_EDIT","FRAGMENT_PREFIX","pathname","title","searchParams","PLATFORMS_ROUTE","ORDERS_ROUTE","createBreadcrumbsFromLocations","search","length","INITIALIZE_BREADCRUMBS","result","replace","split","reduce","acc","curr","index","generateTitle","forEach","key","useBreadcrumbs","updateTriggers","useDispatch","useLocation","URLSearchParams","searchObject","value","useEffect","BackToProducts","formatMessage","useIntl","className","variant","component","portfolioMessages","backToProducts","exports","__esModule","AngleLeftIconConfig","height","width","svgPath","yOffset","xOffset","transform","AngleLeftIcon","createIcon","useIsMounted","isMounted","useRef","current","PortfolioSuspenseFallback","fromProducts","description","schema","fields","toolbarComponentTypes","TOP_TOOLBAR","breadcrumbs","hidden","TOP_TOOLBAR_TITLE","propTypes","PropTypes","node","bool","PortfolioItems","lazy","PortfolioItemDetail","AddProductsToPortfolio","initialState","selectedItems","removeInProgress","filterValue","copyInProgress","isFetching","isFiltering","debouncedFilter","asyncFormValidator","filteringCallback","fetchPortfolioItemsWithPortfolio","porftolioUiReducer","state","items","item","selectItem","includes","slice","indexOf","setRemoveInProgress","removeSucessfull","setFilterValue","setCopyInProgress","setIsFetching","setFilteringFlag","Portfolio","viewState","useInitialUriHash","useReducer","portfolioItems","stateDispatch","useQuery","portfolio","url","useRouteMatch","history","useHistory","useSelector","resetBreadcrumbs","fetchData","portfolioId","fetchSelectedPortfolio","insights","chrome","appNavClick","secondaryNav","scrollToTop","resetSelectedPortfolio","location","routes","portfolioRoute","addProductsRoute","editPortfolioRoute","removePortfolioRoute","sharePortfolioRoute","workflowPortfolioRoute","portfolioItemRoute","metadata","user_capabilities","show","fallback","path","userCapabilities","requiredCapabilities","portfolioLoaded","handleFilterChange","removeProducts","products","removeProductsFromPortfolio","copyPortfolio","push","fetchPortfolios"],"mappings":"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","file":"js/portfolio~31ecd969.5591def9149fa5c193c7.js","sourcesContent":["import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport {\n  TOPOLOGICAL_INVENTORY_API_BASE,\n  SOURCES_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nexport const getPlatforms = () => {\n  return graphqlInstance\n    .post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n    .then(({ data: { application_types } }) => application_types)\n    .then(([{ sources }]) => sources);\n};\n\nexport const getPlatform = (platformId) => {\n  return axiosInstance.get(`${SOURCES_API_BASE}/sources/${platformId}`);\n};\n\nexport const getPlatformItems = (platformId, filter, options) => {\n  const filterQuery = filter ? `&filter[name][contains_i]=${filter}` : '';\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_offerings?filter[archived_at][nil]${filterQuery}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings`\n    );\n  }\n};\n\nexport const getPlatformInventories = (\n  platformId,\n  filter = '',\n  options = defaultSettings\n) => {\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_inventories?filter[name][contains_i]=${filter}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_inventories?limit=${options.limit}&offset=${options.offset}`\n    );\n  }\n};\n\nexport const getServiceOffering = (serviceOfferingId, sourceId) =>\n  Promise.all([\n    axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings/${serviceOfferingId}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${sourceId}`)\n      .then((source) => {\n        return axiosInstance\n          .get(`${SOURCES_API_BASE}/source_types/${source.source_type_id}`)\n          .then(({ icon_url }) => ({\n            ...source,\n            icon_url\n          }));\n      })\n  ]).then(([service, source]) => ({\n    service,\n    source\n  }));\n","import * as ActionTypes from '../action-types';\nimport * as PlatformHelper from '../../helpers/platform/platform-helper';\n\nexport const fetchPlatforms = () => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_PLATFORMS}_PENDING` });\n  return PlatformHelper.getPlatforms()\n    .then((data) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_FULFILLED`,\n        payload: data\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchPlatformItems = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_ITEMS,\n  payload: PlatformHelper.getPlatformItems(platformId, filter, options),\n  meta: {\n    platformId,\n    filter,\n    ...options\n  }\n});\n\nexport const fetchMultiplePlatformItems = (platformsId) => {\n  const platformPromisses = platformsId.map((platformId) =>\n    PlatformHelper.getPlatformItems(platformId).then((data) => ({\n      [platformId]: data\n    }))\n  );\n  return {\n    type: ActionTypes.FETCH_MULTIPLE_PLATFORM_ITEMS,\n    payload: Promise.all(platformPromisses).then((data) =>\n      data.reduce(\n        (acc, curr) => ({\n          ...acc,\n          ...curr\n        }),\n        {}\n      )\n    )\n  };\n};\n\nexport const fetchSelectedPlatform = (id) => ({\n  type: ActionTypes.FETCH_PLATFORM,\n  payload: PlatformHelper.getPlatform(id)\n});\n\nexport const searchPlatformItems = (value) => ({\n  type: ActionTypes.FILTER_PLATFORM_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const fetchPlatformInventories = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_INVENTORIES,\n  payload: PlatformHelper.getPlatformInventories(platformId, filter, options)\n});\n\nexport const fetchServiceOffering = (...args) => ({\n  type: ActionTypes.FETCH_SERVICE_OFFERING,\n  payload: PlatformHelper.getServiceOffering(...args)\n});\n","import {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  ORDER_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORMS_ROUTE,\n  ORDERS_ROUTE,\n  EDIT_SURVEY_ROUTE,\n  ADD_PRODUCTS_ROUTE,\n  PORTFOLIO_ITEM_ROUTE_EDIT\n} from '../../constants/routes';\n\nexport const BASE_PORTFOLIO_FRAGMENTS = [\n  {\n    title: 'Portfolios',\n    pathname: PORTFOLIOS_ROUTE,\n    searchParams: {}\n  }\n];\n\nexport const ENTITIES_EXTRA_PARAMS = {\n  'portfolio-item': ['source']\n};\n\nexport const FRAGMENT_TITLE = {\n  [PORTFOLIO_ROUTE]: (getState) =>\n    getState().portfolioReducer.selectedPortfolio.name,\n  [PORTFOLIO_ITEM_ROUTE]: (getState) =>\n    getState().portfolioReducer.portfolioItem.portfolioItem.name,\n  [EDIT_SURVEY_ROUTE]: () => 'Edit survey',\n  [ADD_PRODUCTS_ROUTE]: () => 'Add products',\n  [PLATFORM_ROUTE]: (getState) =>\n    getState().platformReducer.selectedPlatform.name,\n  [PLATFORM_SERVICE_OFFERINGS_ROUTE]: (getState) =>\n    getState().platformReducer.serviceOffering.service.name,\n  [ORDER_ROUTE]: (getState) => {\n    const { portfolioItem, order } = getState().orderReducer.orderDetail;\n    return `${portfolioItem.name} # ${order.id}`;\n  },\n  [PORTFOLIO_ITEM_ROUTE_EDIT]: () => 'Edit product'\n};\n\nexport const FRAGMENT_PREFIX = {\n  [PORTFOLIO_ROUTE]: {\n    pathname: PORTFOLIOS_ROUTE,\n    title: 'Portfolios',\n    searchParams: {}\n  },\n  [PLATFORM_ROUTE]: {\n    pathname: PLATFORMS_ROUTE,\n    title: 'Platforms',\n    searchParams: {}\n  },\n  [ORDER_ROUTE]: {\n    pathname: ORDERS_ROUTE,\n    title: 'Orders',\n    searchParams: {}\n  }\n};\n","import { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport {\n  FRAGMENT_TITLE,\n  ENTITIES_EXTRA_PARAMS,\n  FRAGMENT_PREFIX\n} from '../../helpers/shared/breadcrumbs-creators';\n\nexport const createBreadcrumbsFromLocations = (pathname = '', search = {}) => (\n  dispatch,\n  getState\n) => {\n  if (pathname.length === 0) {\n    return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: [] });\n  }\n\n  let result = pathname\n    .replace(/^\\//, '')\n    .split('/')\n    .reduce((acc, curr, index) => {\n      const pathname = `${\n        index > 0 && acc[index - 1] ? acc[index - 1].pathname : ''\n      }/${curr}`;\n\n      const generateTitle = FRAGMENT_TITLE[pathname];\n      if (!generateTitle) {\n        return acc;\n      }\n\n      const searchParams = {\n        ...(index > 0 && acc[index - 1].searchParams),\n        ...(search[curr] ? { [curr]: search[curr] } : {})\n      };\n      if (ENTITIES_EXTRA_PARAMS[curr]) {\n        ENTITIES_EXTRA_PARAMS[curr].forEach((key) => {\n          searchParams[key] = search[key];\n        });\n      }\n\n      return [\n        ...acc,\n        {\n          pathname,\n          searchParams,\n          title: generateTitle(getState)\n        }\n      ];\n    }, []);\n  if (result.length > 0 && FRAGMENT_PREFIX[result[0].pathname]) {\n    result = [FRAGMENT_PREFIX[result[0].pathname], ...result];\n  }\n\n  return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: result });\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createBreadcrumbsFromLocations } from '../redux/actions/breadcrumbs-actions';\n\nconst useBreadcrumbs = (updateTriggers = []) => {\n  const dispatch = useDispatch();\n  const { pathname, search } = useLocation();\n  if (updateTriggers.length === 0) {\n    return dispatch(createBreadcrumbsFromLocations('', {}));\n  }\n\n  const searchParams = new URLSearchParams(search);\n  const searchObject = {};\n  searchParams.forEach((value, key) => {\n    searchObject[key] = value;\n  });\n\n  useEffect(() => {\n    dispatch(createBreadcrumbsFromLocations(pathname, searchObject));\n  }, [pathname, ...updateTriggers]);\n\n  return () => dispatch(createBreadcrumbsFromLocations('', {}));\n};\n\nexport default useBreadcrumbs;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { Button } from '@patternfly/react-core';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\n\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst BackToProducts = () => {\n  const { formatMessage } = useIntl();\n  return (\n    <div className=\"pf-u-mb-md\">\n      <AngleLeftIcon className=\"pf-u-mr-sm\" />\n      <Button\n        variant=\"link\"\n        component={() => (\n          <CatalogLink pathname=\"/products\">\n            {formatMessage(portfolioMessages.backToProducts)}\n          </CatalogLink>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default BackToProducts;\n","\"use strict\"\nexports.__esModule = true;\nexports.AngleLeftIconConfig = {\n  name: 'AngleLeftIcon',\n  height: 512,\n  width: 256,\n  svgPath: 'M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.AngleLeftIcon = require('../createIcon').createIcon(exports.AngleLeftIconConfig);\nexports[\"default\"] = exports.AngleLeftIcon;","import { useRef, useEffect } from 'react';\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => (isMounted.current = false);\n  }, []);\n  return isMounted;\n};\n\nexport default useIsMounted;\n","import React, { useEffect, useReducer, lazy, Suspense } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useRouteMatch, Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport { toggleArraySelection } from '../../helpers/shared/redux-mutators';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport {\n  copyPortfolio,\n  fetchPortfolios,\n  fetchSelectedPortfolio,\n  removeProductsFromPortfolio,\n  resetSelectedPortfolio,\n  fetchPortfolioItemsWithPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport useQuery from '../../utilities/use-query';\nimport useBreadcrumbs from '../../utilities/use-breadcrumbs';\nimport { PORTFOLIO_ROUTE } from '../../constants/routes';\nimport { UnauthorizedRedirect } from '../error-pages/error-redirects';\nimport CatalogRoute from '../../routing/catalog-route';\nimport useIsMounted from '../../utilities/use-is-mounted';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { toolbarComponentTypes } from '../../toolbar/toolbar-mapper';\nimport BackToProducts from '../../presentational-components/portfolio/back-to-products';\n\n/**\n * Fake the toolbar until the chunk is loaded\n */\nconst PortfolioSuspenseFallback = ({ fromProducts, title, description }) => (\n  <ToolbarRenderer\n    schema={{\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR,\n          breadcrumbs: !fromProducts,\n          key: 'portfolio-top-toolbar',\n          fields: [\n            {\n              component: BackToProducts,\n              key: 'back-to-products',\n              hidden: !fromProducts\n            },\n            {\n              component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n              key: 'portfolio-toolbar-title',\n              title,\n              description\n            }\n          ]\n        }\n      ]\n    }}\n  />\n);\n\nPortfolioSuspenseFallback.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  fromProducts: PropTypes.bool\n};\n\nconst PortfolioItems = lazy(() =>\n  /* webpackChunkName: \"portfolio-items\" */ import('./portfolio-items')\n);\n\nconst PortfolioItemDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolio-item-detail\" */\n    './portfolio-item-detail/portfolio-item-detail'\n  )\n);\nconst AddProductsToPortfolio = lazy(() =>\n  import(\n    /* webpackChunkName: \"add-products-to-portfolio\" */\n    './add-products-to-portfolio'\n  )\n);\nconst initialState = {\n  selectedItems: [],\n  removeInProgress: false,\n  filterValue: '',\n  copyInProgress: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (value, dispatch, filteringCallback, meta) => {\n    filteringCallback(true);\n    dispatch(fetchPortfolioItemsWithPortfolio(value, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst porftolioUiReducer = (state, { type, payload }) =>\n  ({\n    selectItem: {\n      ...state,\n      selectedItems: toggleArraySelection(state.selectedItems, payload)\n    },\n    setRemoveInProgress: { ...state, removeInProgress: payload },\n    removeSucessfull: { ...state, selectedItems: [], removeInProgress: false },\n    setFilterValue: { ...state, filterValue: payload, isFiltering: true },\n    setCopyInProgress: { ...state, copyInProgress: payload },\n    setIsFetching: { ...state, isFetching: payload },\n    setFilteringFlag: { ...state, isFiltering: payload }\n  }[type]);\n\nconst Portfolio = () => {\n  const viewState = useInitialUriHash();\n  const [state, stateDispatch] = useReducer(porftolioUiReducer, {\n    ...initialState,\n    filterValue: viewState?.portfolioItems?.filter || ''\n  });\n  const [searchParams] = useQuery(['portfolio', 'from-products']);\n  const { portfolio: id, 'from-products': fromProducts } = searchParams;\n  const { url } = useRouteMatch(PORTFOLIO_ROUTE);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isMounted = useIsMounted();\n  const { portfolio, portfolioItem, meta } = useSelector(\n    ({\n      portfolioReducer: {\n        selectedPortfolio,\n        portfolioItem,\n        portfolioItems: { meta }\n      }\n    }) => ({\n      portfolio: selectedPortfolio,\n      portfolioItem,\n      meta\n    })\n  );\n\n  const resetBreadcrumbs = useBreadcrumbs([portfolio, portfolioItem]);\n\n  const fetchData = (portfolioId) => {\n    stateDispatch({ type: 'setIsFetching', payload: true });\n    return Promise.all([\n      dispatch(fetchPlatforms()),\n      dispatch(fetchSelectedPortfolio(portfolioId)),\n      dispatch(\n        fetchPortfolioItemsWithPortfolio(portfolioId, viewState?.portfolioItems)\n      )\n    ])\n      .then((data) => {\n        if (isMounted.current) {\n          stateDispatch({ type: 'setIsFetching', payload: false });\n        }\n\n        return data;\n      })\n      .catch(() => stateDispatch({ type: 'setIsFetching', payload: false }));\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({\n      id: fromProducts === 'true' ? 'products' : 'portfolios',\n      secondaryNav: true\n    });\n    fetchData(id);\n    scrollToTop();\n\n    return () => {\n      resetBreadcrumbs();\n      dispatch(resetSelectedPortfolio());\n    };\n  }, []);\n\n  useEffect(() => {\n    if (\n      isMounted.current === true &&\n      !state.isFetching &&\n      history.location.pathname === PORTFOLIO_ROUTE\n    ) {\n      fetchData(id);\n      scrollToTop();\n    }\n  }, [id, history.location.pathname]);\n\n  const handleCopyPortfolio = () => {\n    stateDispatch({ type: 'setCopyInProgress', payload: true });\n    return dispatch(copyPortfolio(id))\n      .then(({ id }) =>\n        history.push({\n          pathname: PORTFOLIO_ROUTE,\n          search: `?portfolio=${id}`\n        })\n      )\n      .then(() => stateDispatch({ type: 'setCopyInProgress', payload: false }))\n      .then(() => dispatch(fetchPortfolios()))\n      .catch(() =>\n        stateDispatch({ type: 'setCopyInProgress', payload: false })\n      );\n  };\n\n  const removeProducts = (products) => {\n    stateDispatch({ type: 'setRemoveInProgress', payload: true });\n    dispatch(removeProductsFromPortfolio(products, portfolio.name))\n      .then(() => stateDispatch({ type: 'removeSucessfull' }))\n      .catch(() =>\n        stateDispatch({ type: 'setRemoveInProgress', payload: false })\n      );\n  };\n\n  const handleFilterChange = (filter) => {\n    stateDispatch({ type: 'setFilterValue', payload: filter });\n    debouncedFilter(\n      id,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0,\n        filter\n      }\n    );\n  };\n\n  const routes = {\n    portfolioRoute: url,\n    addProductsRoute: `${url}/add-products`,\n    editPortfolioRoute: `${url}/edit-portfolio`,\n    removePortfolioRoute: `${url}/remove-portfolio`,\n    sharePortfolioRoute: `${url}/share-portfolio`,\n    workflowPortfolioRoute: `${url}/edit-workflow`,\n    portfolioItemRoute: `${url}/portfolio-item`\n  };\n\n  if (portfolio.metadata.user_capabilities.show === false) {\n    return <UnauthorizedRedirect />;\n  }\n\n  return (\n    <Suspense\n      fallback={\n        <PortfolioSuspenseFallback\n          fromProducts={fromProducts === 'true'}\n          title={portfolio.name}\n          description={portfolio.description}\n        />\n      }\n    >\n      <Switch>\n        <CatalogRoute\n          path={routes.addProductsRoute}\n          userCapabilities={portfolio.metadata.user_capabilities}\n          requiredCapabilities=\"update\"\n        >\n          <AddProductsToPortfolio portfolioRoute={routes.portfolioRoute} />\n        </CatalogRoute>\n        <Route path={routes.portfolioItemRoute}>\n          <PortfolioItemDetail portfolioLoaded={!state.isFetching} />\n        </Route>\n        <Route path={routes.portfolioRoute}>\n          <PortfolioItems\n            routes={routes}\n            fromProducts={fromProducts === 'true'}\n            handleFilterChange={handleFilterChange}\n            removeProducts={removeProducts}\n            copyPortfolio={handleCopyPortfolio}\n            state={state}\n            stateDispatch={stateDispatch}\n          />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Portfolio;\n","export const toggleArraySelection = (items, item) =>\n  items.includes(item)\n    ? [\n        ...items.slice(0, items.indexOf(item)),\n        ...items.slice(items.indexOf(item) + 1)\n      ]\n    : [...items, item];\n"],"sourceRoot":""}