{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./src/helpers/shared/breadcrumbs-creators.ts","webpack:///./src/redux/actions/breadcrumbs-actions.ts","webpack:///./src/utilities/use-breadcrumbs.js","webpack:///./src/presentational-components/portfolio/back-to-products.tsx","webpack:///./src/utilities/use-is-mounted.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/angle-left-icon.js","webpack:///./src/smart-components/portfolio/portfolio.js","webpack:///./src/helpers/shared/redux-mutators.ts"],"names":["arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","module","exports","arr","arrayLikeToArray","Array","isArray","iter","Symbol","iterator","Object","from","TypeError","ENTITIES_EXTRA_PARAMS","FRAGMENT_TITLE","getState","portfolioReducer","selectedPortfolio","name","portfolioItem","platformReducer","selectedPlatform","serviceOffering","service","orderReducer","orderDetail","order","id","FRAGMENT_PREFIX","pathname","title","searchParams","createBreadcrumbsFromLocations","search","dispatch","length","type","payload","result","replace","split","reduce","acc","curr","index","generateTitle","forEach","key","useBreadcrumbs","updateTriggers","useDispatch","useLocation","URLSearchParams","searchObject","value","useEffect","formatMessage","className","variant","component","backToProducts","useIsMounted","isMounted","useRef","current","__esModule","AngleLeftIconConfig","height","width","svgPath","yOffset","xOffset","transform","AngleLeftIcon","createIcon","PortfolioSuspenseFallback","fromProducts","description","schema","fields","toolbarComponentTypes","TOP_TOOLBAR","breadcrumbs","BackToProducts","hidden","TOP_TOOLBAR_TITLE","propTypes","PropTypes","node","bool","PortfolioItems","lazy","PortfolioItemDetail","AddProductsToPortfolio","initialState","selectedItems","firstSelectedProduct","undefined","removeInProgress","filterValue","copyInProgress","isFetching","isFiltering","debouncedFilter","asyncFormValidator","filteringCallback","meta","fetchPortfolioItemsWithPortfolio","then","porftolioUiReducer","state","items","item","selectItem","selectedItem","includes","slice","indexOf","product","setRemoveInProgress","removeSucessfull","setFilterValue","setCopyInProgress","setIsFetching","setFilteringFlag","Portfolio","viewState","useInitialUriHash","useReducer","portfolioItems","filter","stateDispatch","useQuery","portfolio","url","useRouteMatch","PORTFOLIO_ROUTE","history","useHistory","useSelector","resetBreadcrumbs","fetchData","portfolioId","Promise","all","fetchPlatforms","fetchSelectedPortfolio","data","insights","chrome","appNavClick","secondaryNav","scrollToTop","resetSelectedPortfolio","location","routes","portfolioRoute","addProductsRoute","editPortfolioRoute","removePortfolioRoute","sharePortfolioRoute","workflowPortfolioRoute","portfolioItemRoute","metadata","user_capabilities","show","fallback","path","userCapabilities","requiredCapabilities","portfolioLoaded","handleFilterChange","offset","removeProducts","products","removeProductsFromPortfolio","copyPortfolio","push","fetchPortfolios"],"mappings":"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","file":"js/portfolio~31ecd969.342518c7e4b3ab62199f.js","sourcesContent":["var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","import {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  ORDER_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORMS_ROUTE,\n  ORDERS_ROUTE,\n  EDIT_SURVEY_ROUTE,\n  ADD_PRODUCTS_ROUTE,\n  PORTFOLIO_ITEM_ROUTE_EDIT\n} from '../../constants/routes';\nimport { PortfolioReducerState } from '../../redux/reducers/portfolio-reducer';\nimport { ReactNode } from 'react';\nimport { PlatformReducerState } from '../../redux/reducers/platform-reducer';\nimport { OrderReducerState } from '../../redux/reducers/order-reducer';\n\nexport const BASE_PORTFOLIO_FRAGMENTS = [\n  {\n    title: 'Portfolios',\n    pathname: PORTFOLIOS_ROUTE,\n    searchParams: {}\n  }\n];\n\nexport const ENTITIES_EXTRA_PARAMS = {\n  'portfolio-item': ['source']\n};\n\nexport const FRAGMENT_TITLE = {\n  [PORTFOLIO_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.selectedPortfolio.name,\n  [PORTFOLIO_ITEM_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.portfolioItem.portfolioItem.name,\n  [EDIT_SURVEY_ROUTE]: (): string => 'Edit survey',\n  [ADD_PRODUCTS_ROUTE]: (): string => 'Add products',\n  [PLATFORM_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.selectedPlatform.name,\n  [PLATFORM_SERVICE_OFFERINGS_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.serviceOffering.service.name,\n  [ORDER_ROUTE]: (\n    getState: () => { orderReducer: OrderReducerState }\n  ): ReactNode => {\n    const { portfolioItem, order } = getState().orderReducer.orderDetail;\n    return `${portfolioItem.name} # ${order.id}`;\n  },\n  [PORTFOLIO_ITEM_ROUTE_EDIT]: (): string => 'Edit product'\n};\n\nexport const FRAGMENT_PREFIX = {\n  [PORTFOLIO_ROUTE]: {\n    pathname: PORTFOLIOS_ROUTE,\n    title: 'Portfolios',\n    searchParams: {}\n  },\n  [PLATFORM_ROUTE]: {\n    pathname: PLATFORMS_ROUTE,\n    title: 'Platforms',\n    searchParams: {}\n  },\n  [ORDER_ROUTE]: {\n    pathname: ORDERS_ROUTE,\n    title: 'Orders',\n    searchParams: {}\n  }\n};\n","import { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport {\n  FRAGMENT_TITLE,\n  ENTITIES_EXTRA_PARAMS,\n  FRAGMENT_PREFIX\n} from '../../helpers/shared/breadcrumbs-creators';\nimport { Dispatch } from 'redux';\nimport { BreadcrumbFragment } from '../reducers/breadcrumbs-reducer';\nimport { GetReduxState } from '../../types/redux';\nimport { AnyObject, ReduxAction } from '../../types/common-types';\n\nexport const createBreadcrumbsFromLocations = (\n  pathname = '',\n  search: AnyObject = {}\n) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): ReduxAction<BreadcrumbFragment[]> => {\n  if (pathname.length === 0) {\n    return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: [] });\n  }\n\n  let result = pathname\n    .replace(/^\\//, '')\n    .split('/')\n    .reduce<BreadcrumbFragment[]>((acc, curr, index) => {\n      const pathname = `${\n        index > 0 && acc[index - 1] ? acc[index - 1].pathname : ''\n      }/${curr}`;\n\n      const generateTitle = (FRAGMENT_TITLE[\n        pathname as keyof typeof FRAGMENT_TITLE\n      ] as unknown) as (getState: GetReduxState) => string;\n      if (!generateTitle) {\n        return acc;\n      }\n\n      const searchParams = {\n        ...(index > 0 && acc[index - 1].searchParams),\n        ...(search[curr] ? { [curr]: search[curr] } : {})\n      };\n      if ((ENTITIES_EXTRA_PARAMS as AnyObject)[curr]) {\n        (ENTITIES_EXTRA_PARAMS as AnyObject)[curr].forEach((key: string) => {\n          searchParams[key] = search[key];\n        });\n      }\n\n      return [\n        ...acc,\n        {\n          pathname,\n          searchParams,\n          title: generateTitle(getState)\n        }\n      ];\n    }, []);\n  if (result.length > 0 && (FRAGMENT_PREFIX as AnyObject)[result[0].pathname]) {\n    result = [(FRAGMENT_PREFIX as AnyObject)[result[0].pathname], ...result];\n  }\n\n  return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: result });\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createBreadcrumbsFromLocations } from '../redux/actions/breadcrumbs-actions';\n\nconst useBreadcrumbs = (updateTriggers = []) => {\n  const dispatch = useDispatch();\n  const { pathname, search } = useLocation();\n  if (updateTriggers.length === 0) {\n    return dispatch(createBreadcrumbsFromLocations('', {}));\n  }\n\n  const searchParams = new URLSearchParams(search);\n  const searchObject = {};\n  searchParams.forEach((value, key) => {\n    searchObject[key] = value;\n  });\n\n  useEffect(() => {\n    dispatch(createBreadcrumbsFromLocations(pathname, searchObject));\n  }, [pathname, ...updateTriggers]);\n\n  return () => dispatch(createBreadcrumbsFromLocations('', {}));\n};\n\nexport default useBreadcrumbs;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\n\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst BackToProducts: React.ComponentType = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <div className=\"pf-u-mb-md\">\n      <AngleLeftIcon className=\"pf-u-mr-sm\" />\n      <Button\n        variant=\"link\"\n        component={() => (\n          <CatalogLink pathname=\"/products\">\n            {formatMessage(portfolioMessages.backToProducts)}\n          </CatalogLink>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default BackToProducts;\n","import { useRef, useEffect } from 'react';\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => (isMounted.current = false);\n  }, []);\n  return isMounted;\n};\n\nexport default useIsMounted;\n","\"use strict\"\nexports.__esModule = true;\nexports.AngleLeftIconConfig = {\n  name: 'AngleLeftIcon',\n  height: 512,\n  width: 256,\n  svgPath: 'M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.AngleLeftIcon = require('../createIcon').createIcon(exports.AngleLeftIconConfig);\nexports[\"default\"] = exports.AngleLeftIcon;","import React, { useEffect, useReducer, lazy, Suspense } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useRouteMatch, Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport { toggleArraySelection } from '../../helpers/shared/redux-mutators';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport {\n  copyPortfolio,\n  fetchPortfolios,\n  fetchSelectedPortfolio,\n  removeProductsFromPortfolio,\n  resetSelectedPortfolio,\n  fetchPortfolioItemsWithPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport useQuery from '../../utilities/use-query';\nimport useBreadcrumbs from '../../utilities/use-breadcrumbs';\nimport { PORTFOLIO_ROUTE } from '../../constants/routes';\nimport { UnauthorizedRedirect } from '../error-pages/error-redirects';\nimport CatalogRoute from '../../routing/catalog-route';\nimport useIsMounted from '../../utilities/use-is-mounted';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { toolbarComponentTypes } from '../../toolbar/toolbar-mapper';\nimport BackToProducts from '../../presentational-components/portfolio/back-to-products';\n\n/**\n * Fake the toolbar until the chunk is loaded\n */\nconst PortfolioSuspenseFallback = ({ fromProducts, title, description }) => (\n  <ToolbarRenderer\n    schema={{\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR,\n          breadcrumbs: !fromProducts,\n          key: 'portfolio-top-toolbar',\n          fields: [\n            {\n              component: BackToProducts,\n              key: 'back-to-products',\n              hidden: !fromProducts\n            },\n            {\n              component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n              key: 'portfolio-toolbar-title',\n              title,\n              description\n            }\n          ]\n        }\n      ]\n    }}\n  />\n);\n\nPortfolioSuspenseFallback.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  fromProducts: PropTypes.bool\n};\n\nconst PortfolioItems = lazy(() =>\n  /* webpackChunkName: \"portfolio-items\" */ import('./portfolio-items')\n);\n\nconst PortfolioItemDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolio-item-detail\" */\n    './portfolio-item-detail/portfolio-item-detail'\n  )\n);\nconst AddProductsToPortfolio = lazy(() =>\n  import(\n    /* webpackChunkName: \"add-products-to-portfolio\" */\n    './add-products-to-portfolio'\n  )\n);\nconst initialState = {\n  selectedItems: [],\n  firstSelectedProduct: undefined,\n  removeInProgress: false,\n  filterValue: '',\n  copyInProgress: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (value, dispatch, filteringCallback, meta) => {\n    filteringCallback(true);\n    dispatch(fetchPortfolioItemsWithPortfolio(value, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst porftolioUiReducer = (state, { type, payload = {} }) =>\n  ({\n    selectItem: {\n      ...state,\n      selectedItems: toggleArraySelection(\n        state.selectedItems,\n        payload.selectedItem\n      ),\n      firstSelectedProduct: payload.product || state.firstSelectedProduct\n    },\n    setRemoveInProgress: { ...state, removeInProgress: payload },\n    removeSucessfull: { ...state, selectedItems: [], removeInProgress: false },\n    setFilterValue: { ...state, filterValue: payload, isFiltering: true },\n    setCopyInProgress: { ...state, copyInProgress: payload },\n    setIsFetching: { ...state, isFetching: payload },\n    setFilteringFlag: { ...state, isFiltering: payload }\n  }[type]);\n\nconst Portfolio = () => {\n  const viewState = useInitialUriHash();\n  const [state, stateDispatch] = useReducer(porftolioUiReducer, {\n    ...initialState,\n    filterValue: viewState?.portfolioItems?.filter || ''\n  });\n  const [searchParams] = useQuery(['portfolio', 'from-products']);\n  const { portfolio: id, 'from-products': fromProducts } = searchParams;\n  const { url } = useRouteMatch(PORTFOLIO_ROUTE);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isMounted = useIsMounted();\n  const { portfolio, portfolioItem, meta } = useSelector(\n    ({\n      portfolioReducer: {\n        selectedPortfolio,\n        portfolioItem,\n        portfolioItems: { meta }\n      }\n    }) => ({\n      portfolio: selectedPortfolio,\n      portfolioItem,\n      meta\n    })\n  );\n\n  const resetBreadcrumbs = useBreadcrumbs([portfolio, portfolioItem]);\n\n  const fetchData = (portfolioId) => {\n    stateDispatch({ type: 'setIsFetching', payload: true });\n    return Promise.all([\n      dispatch(fetchPlatforms()),\n      dispatch(fetchSelectedPortfolio(portfolioId)),\n      dispatch(\n        fetchPortfolioItemsWithPortfolio(portfolioId, viewState?.portfolioItems)\n      )\n    ])\n      .then((data) => {\n        if (isMounted.current) {\n          stateDispatch({ type: 'setIsFetching', payload: false });\n        }\n\n        return data;\n      })\n      .catch(() => stateDispatch({ type: 'setIsFetching', payload: false }));\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({\n      id: fromProducts === 'true' ? 'products' : 'portfolios',\n      secondaryNav: true\n    });\n    fetchData(id);\n    scrollToTop();\n\n    return () => {\n      resetBreadcrumbs();\n      dispatch(resetSelectedPortfolio());\n    };\n  }, []);\n\n  useEffect(() => {\n    if (\n      isMounted.current === true &&\n      !state.isFetching &&\n      history.location.pathname === PORTFOLIO_ROUTE\n    ) {\n      fetchData(id);\n      scrollToTop();\n    }\n  }, [id, history.location.pathname]);\n\n  const handleCopyPortfolio = () => {\n    stateDispatch({ type: 'setCopyInProgress', payload: true });\n    return dispatch(copyPortfolio(id))\n      .then(({ id }) =>\n        history.push({\n          pathname: PORTFOLIO_ROUTE,\n          search: `?portfolio=${id}`\n        })\n      )\n      .then(() => stateDispatch({ type: 'setCopyInProgress', payload: false }))\n      .then(() => dispatch(fetchPortfolios()))\n      .catch(() =>\n        stateDispatch({ type: 'setCopyInProgress', payload: false })\n      );\n  };\n\n  const removeProducts = (products) => {\n    stateDispatch({ type: 'setRemoveInProgress', payload: true });\n    dispatch(\n      removeProductsFromPortfolio(\n        products,\n        portfolio.name,\n        state.firstSelectedProduct\n      )\n    )\n      .then(() => stateDispatch({ type: 'removeSucessfull' }))\n      .catch(() =>\n        stateDispatch({ type: 'setRemoveInProgress', payload: false })\n      );\n  };\n\n  const handleFilterChange = (filter) => {\n    stateDispatch({ type: 'setFilterValue', payload: filter });\n    debouncedFilter(\n      id,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0,\n        filter\n      }\n    );\n  };\n\n  const routes = {\n    portfolioRoute: url,\n    addProductsRoute: `${url}/add-products`,\n    editPortfolioRoute: `${url}/edit-portfolio`,\n    removePortfolioRoute: `${url}/remove-portfolio`,\n    sharePortfolioRoute: `${url}/share-portfolio`,\n    workflowPortfolioRoute: `${url}/edit-workflow`,\n    portfolioItemRoute: `${url}/portfolio-item`\n  };\n\n  if (portfolio.metadata.user_capabilities.show === false) {\n    return <UnauthorizedRedirect />;\n  }\n\n  return (\n    <Suspense\n      fallback={\n        <PortfolioSuspenseFallback\n          fromProducts={fromProducts === 'true'}\n          title={portfolio.name}\n          description={portfolio.description}\n        />\n      }\n    >\n      <Switch>\n        <CatalogRoute\n          path={routes.addProductsRoute}\n          userCapabilities={portfolio.metadata.user_capabilities}\n          requiredCapabilities=\"update\"\n        >\n          <AddProductsToPortfolio portfolioRoute={routes.portfolioRoute} />\n        </CatalogRoute>\n        <Route path={routes.portfolioItemRoute}>\n          <PortfolioItemDetail portfolioLoaded={!state.isFetching} />\n        </Route>\n        <Route path={routes.portfolioRoute}>\n          <PortfolioItems\n            routes={routes}\n            fromProducts={fromProducts === 'true'}\n            handleFilterChange={handleFilterChange}\n            removeProducts={removeProducts}\n            copyPortfolio={handleCopyPortfolio}\n            state={state}\n            stateDispatch={stateDispatch}\n          />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Portfolio;\n","export const toggleArraySelection = (items: string[], item: string): string[] =>\n  items.includes(item)\n    ? [\n        ...items.slice(0, items.indexOf(item)),\n        ...items.slice(items.indexOf(item) + 1)\n      ]\n    : [...items, item];\n"],"sourceRoot":""}