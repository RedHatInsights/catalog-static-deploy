{"version":3,"file":"js/platform.1642444847484.fd620a4ba86fd1533df1.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/js/layouts/Level/LevelItem.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/smart-components/platform/platform.js","webpack:///./src/toolbar/schemas/platforms-toolbar.schema.js","webpack:///./src/smart-components/common/async-pagination.tsx","webpack:///./src/helpers/shared/breadcrumbs-creators.ts","webpack:///./src/redux/actions/breadcrumbs-actions.ts","webpack:///./src/utilities/use-breadcrumbs.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LevelItem = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst LevelItem = (_a) => {\n    var { children = null } = _a, props = tslib_1.__rest(_a, [\"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props), children));\n};\nexports.LevelItem = LevelItem;\nexports.LevelItem.displayName = 'LevelItem';\n//# sourceMappingURL=LevelItem.js.map","import React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Title } from \"@patternfly/react-core/dist/esm/components/Title/Title.js\";\n/**\n * This is the title section of the pageHeader\n */\n\nvar PageHeaderTitle = function PageHeaderTitle(_ref) {\n  var className = _ref.className,\n      title = _ref.title;\n  var pageHeaderTitleClasses = classNames(className);\n  return /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h1\",\n    size: \"2xl\",\n    className: pageHeaderTitleClasses,\n    \"widget-type\": \"InsightsPageHeaderTitle\"\n  }, \" \", title, \" \");\n};\n\nexport default PageHeaderTitle;\nPageHeaderTitle.propTypes = {\n  title: propTypes.node.isRequired,\n  className: propTypes.string\n};","import React, { Fragment, useEffect, lazy, Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport {\n  fetchSelectedPlatform,\n  fetchPlatforms\n} from '../../redux/actions/platform-actions';\nimport {\n  fetchSelectedPlatform as fetchSelectedPlatformS,\n  fetchPlatforms as fetchPlatformsS\n} from '../../redux/actions/platform-actions-s';\n\nimport useQuery from '../../utilities/use-query';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useBreadcrumbs from '../../utilities/use-breadcrumbs';\nimport {\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORM_INVENTORIES_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_TEMPLATES_ROUTE,\n  PLATFORM_DETAILS_ROUTE\n} from '../../constants/routes';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { createPlatformsTopToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport { PlatformToolbarPlaceholder } from '../../presentational-components/shared/loader-placeholders';\nimport { LevelItem } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport labelMessages from '../../messages/labels.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst PlatformDetails = lazy(() =>\n  import(/* webpackChunkName: \"platform-details\" */ './platform-details')\n);\n\nconst PlatformTemplates = lazy(() =>\n  import(/* webpackChunkName: \"platform-templates\" */ './platform-templates')\n);\n\nconst PlatformInventories = lazy(() =>\n  import(\n    /* webpackChunkName: \"platform-inventories\" */ './platform-inventories'\n  )\n);\n\nconst ServiceOfferingDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"service-offering-detail\" */ './service-offering/service-offering-detail'\n  )\n);\n\nconst tabItems = [\n  {\n    eventKey: 0,\n    title: 'Templates',\n    name: `/platforms/platform/platform-templates`\n  },\n  {\n    eventKey: 1,\n    title: 'Inventories',\n    name: `/platforms/platform/platform-inventories`\n  },\n  {\n    eventKey: 2,\n    title: 'Summary',\n    name: `/platforms/platform/platform-details`\n  }\n];\n\nconst Platform = () => {\n  const dispatch = useDispatch();\n  const [{ platform }] = useQuery(['platform']);\n  const { selectedPlatform, serviceOffering } = useSelector(\n    ({ platformReducer: { selectedPlatform, serviceOffering } }) => ({\n      selectedPlatform,\n      serviceOffering\n    })\n  );\n\n  const resetBreadcrumbs = useBreadcrumbs([selectedPlatform, serviceOffering]);\n  const formatMessage = useFormatMessage();\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(\n        localStorage.getItem('catalog_standalone')\n          ? fetchSelectedPlatformS(platform)\n          : fetchSelectedPlatform(platform)\n      ),\n      dispatch(\n        localStorage.getItem('catalog_standalone')\n          ? fetchPlatformsS()\n          : fetchPlatforms()\n      )\n    ]);\n    scrollToTop();\n    return () => {\n      resetBreadcrumbs();\n    };\n  }, [platform]);\n\n  const platformAvailable = (platform) => ({\n    color: platform.availability_status === 'available' ? 'green' : 'red',\n    icon: <InfoCircleIcon />,\n    title:\n      platform.availability_status === 'available'\n        ? formatMessage(labelMessages.available)\n        : formatMessage(labelMessages.notAvailable)\n  });\n\n  return (\n    <Fragment>\n      <Route\n        exact\n        path={[\n          PLATFORM_INVENTORIES_ROUTE,\n          PLATFORM_ROUTE,\n          PLATFORM_TEMPLATES_ROUTE,\n          PLATFORM_DETAILS_ROUTE,\n          `${PLATFORM_INVENTORIES_ROUTE}/*`\n        ]}\n      >\n        <LevelItem>\n          <ToolbarRenderer\n            schema={createPlatformsTopToolbarSchema({\n              title: selectedPlatform.name,\n              paddingBottom: false,\n              tabItems,\n              platformAvailable: () => platformAvailable(selectedPlatform)\n            })}\n          />\n        </LevelItem>\n      </Route>\n      <Suspense fallback={<PlatformToolbarPlaceholder />}>\n        <Switch>\n          <Route path={PLATFORM_SERVICE_OFFERINGS_ROUTE}>\n            <ServiceOfferingDetail />\n          </Route>\n          <Route path={PLATFORM_INVENTORIES_ROUTE}>\n            <PlatformInventories />\n          </Route>\n          <Route path={PLATFORM_DETAILS_ROUTE}>\n            <PlatformDetails />\n          </Route>\n          <Route path={[PLATFORM_TEMPLATES_ROUTE, PLATFORM_ROUTE]}>\n            <PlatformTemplates />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Fragment>\n  );\n};\n\nexport default Platform;\n","import AppTabs from '../../presentational-components/shared/app-tabs';\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nexport const createPlatformsToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  title\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: 'Filter by platform'\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields: []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsTopToolbarSchema = ({\n  title,\n  paddingBottom,\n  tabItems,\n  platformAvailable\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      paddingBottom,\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          fields: [\n            {\n              component: toolbarComponentTypes.TOOLBAR_GROUP,\n              key: 'platform-toolbar',\n              fields: [\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'platform-toolbar-group',\n                  fields: [\n                    {\n                      component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n                      key: 'platforms-toolbar-title',\n                      title\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.TOOLBAR_GROUP,\n              key: 'platform-toolbar',\n              alignment: 'alignRight',\n              fields: [\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'platform-label',\n                  alignment: 'alignRight',\n                  fields: [\n                    {\n                      component: toolbarComponentTypes.LABEL,\n                      key: 'platform-available-label',\n                      variant: 'outline',\n                      ...platformAvailable()\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          component: toolbarComponentTypes.LEVEL_ITEM,\n          key: 'tabs-level-item',\n          fields: tabItems\n            ? [\n                {\n                  component: AppTabs,\n                  key: 'platform-tabs',\n                  tabItems\n                }\n              ]\n            : []\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsFilterToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  meta,\n  apiRequest,\n  filterPlaceholder\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOOLBAR,\n      key: 'platforms-filter-toolbar',\n      className: 'pf-u-pt-md pf-u-pb-md pf-u-pr-lg pf-u-pl-lg',\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          className: 'pf-m-grow',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: filterPlaceholder\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields:\n                meta.count > 0\n                  ? [\n                      {\n                        component: AsyncPagination,\n                        key: 'platform-pagination',\n                        apiRequest,\n                        meta,\n                        isCompact: true\n                      }\n                    ]\n                  : []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { OnPerPageSelect, OnSetPage, Pagination } from '@patternfly/react-core';\n\nimport {\n  getCurrentPage,\n  getNewPage,\n  PaginationConfiguration\n} from '../../helpers/shared/pagination';\nimport { AnyObject } from '@data-driven-forms/react-form-renderer';\n\nexport interface AsyncPaginationProps<T = any> extends AnyObject {\n  meta: PaginationConfiguration;\n  apiRequest: (...args: any[]) => Promise<T>;\n  apiProps?: any;\n  className?: string;\n  isCompact?: boolean;\n}\nconst AsyncPagination: React.ComponentType<AsyncPaginationProps> = ({\n  meta: { limit = 50, count = 0, offset = 0 },\n  apiProps,\n  apiRequest,\n  className = '',\n  isCompact = false,\n  ...props\n}) => {\n  const handleOnPerPageSelect: OnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage: OnSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        dropDirection=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default AsyncPagination;\n","import {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  ORDER_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORMS_ROUTE,\n  ORDERS_ROUTE,\n  EDIT_SURVEY_ROUTE,\n  ADD_PRODUCTS_ROUTE,\n  PORTFOLIO_ITEM_ROUTE_EDIT\n} from '../../constants/routes';\nimport { PortfolioReducerState } from '../../redux/reducers/portfolio-reducer';\nimport { ReactNode } from 'react';\nimport { PlatformReducerState } from '../../redux/reducers/platform-reducer';\nimport { OrderReducerState } from '../../redux/reducers/order-reducer';\n\nexport const BASE_PORTFOLIO_FRAGMENTS = [\n  {\n    title: 'Portfolios',\n    pathname: PORTFOLIOS_ROUTE,\n    searchParams: {}\n  }\n];\n\nexport const ENTITIES_EXTRA_PARAMS = {\n  'portfolio-item': ['source', 'portfolio'],\n  'edit-survey': ['source', 'portfolio', 'portfolio-item']\n};\n\nexport const FRAGMENT_TITLE = {\n  [PORTFOLIO_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.selectedPortfolio.name,\n  [PORTFOLIO_ITEM_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.portfolioItem.portfolioItem.name,\n  [EDIT_SURVEY_ROUTE]: (): string => 'Edit survey',\n  [ADD_PRODUCTS_ROUTE]: (): string => 'Add products',\n  [PLATFORM_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.selectedPlatform.name,\n  [PLATFORM_SERVICE_OFFERINGS_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.serviceOffering.service.name,\n  [ORDER_ROUTE]: (\n    getState: () => { orderReducer: OrderReducerState }\n  ): ReactNode => {\n    const { portfolioItem, order } = getState().orderReducer.orderDetail;\n    return `${portfolioItem.name} # ${order.id}`;\n  },\n  [PORTFOLIO_ITEM_ROUTE_EDIT]: (): string => 'Edit product'\n};\n\nexport const FRAGMENT_PREFIX = {\n  [PORTFOLIO_ROUTE]: {\n    pathname: PORTFOLIOS_ROUTE,\n    title: 'Portfolios',\n    searchParams: {}\n  },\n  [PLATFORM_ROUTE]: {\n    pathname: PLATFORMS_ROUTE,\n    title: 'Platforms',\n    searchParams: {}\n  },\n  [ORDER_ROUTE]: {\n    pathname: ORDERS_ROUTE,\n    title: 'Orders',\n    searchParams: {}\n  }\n};\n","import { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport {\n  FRAGMENT_TITLE,\n  ENTITIES_EXTRA_PARAMS,\n  FRAGMENT_PREFIX\n} from '../../helpers/shared/breadcrumbs-creators';\nimport { Dispatch } from 'redux';\nimport { BreadcrumbFragment } from '../reducers/breadcrumbs-reducer';\nimport { GetReduxState } from '../../types/redux';\nimport { AnyObject, ReduxAction } from '../../types/common-types';\n\nexport const createBreadcrumbsFromLocations = (\n  pathname = '',\n  search: AnyObject = {}\n) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): ReduxAction<BreadcrumbFragment[]> => {\n  if (pathname.length === 0) {\n    return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: [] });\n  }\n\n  const prefix: string[] = [];\n  if (pathname === '/portfolios/portfolio') {\n    prefix.push('/portfolios');\n  }\n\n  if (pathname.startsWith('/portfolios/portfolio/portfolio-item')) {\n    prefix[0] = '/portfolios';\n    prefix[1] = '/portfolio';\n    if (pathname.startsWith('/portfolios/portfolio/portfolio-item/')) {\n      prefix[2] = '/portfolio-item';\n    }\n  }\n\n  if (pathname.startsWith('/platforms/platform')) {\n    prefix[0] = '/platforms';\n  }\n\n  pathname = pathname.replace(prefix[0], '');\n  let result = pathname\n    .replace(/^\\//, '')\n    .split('/')\n    .reduce<BreadcrumbFragment[]>((acc, curr, index) => {\n      const pathname = `${\n        index > 0 && acc[index - 1] ? acc[index - 1].pathname : ''\n      }${prefix[index]}/${curr}`;\n      const generateTitle = (FRAGMENT_TITLE[\n        pathname as keyof typeof FRAGMENT_TITLE\n      ] as unknown) as (getState: GetReduxState) => string;\n      if (!generateTitle) {\n        return acc;\n      }\n\n      const searchParams = {\n        ...(index > 0 && acc[index - 1]?.searchParams),\n        ...(search[curr] ? { [curr]: search[curr] } : {})\n      };\n      if ((ENTITIES_EXTRA_PARAMS as AnyObject)[curr]) {\n        (ENTITIES_EXTRA_PARAMS as AnyObject)[curr].forEach((key: string) => {\n          searchParams[key] = search[key];\n        });\n      }\n\n      if ((FRAGMENT_PREFIX as AnyObject)[pathname]) {\n        acc = [(FRAGMENT_PREFIX as AnyObject)[pathname]];\n      }\n\n      const currTitle = generateTitle(getState);\n\n      return !currTitle\n        ? acc\n        : [\n            ...acc,\n            {\n              pathname,\n              searchParams,\n              title: currTitle\n            }\n          ];\n    }, []);\n  if (result.length > 0 && (FRAGMENT_PREFIX as AnyObject)[result[0].pathname]) {\n    result = [(FRAGMENT_PREFIX as AnyObject)[result[0].pathname], ...result];\n  }\n\n  // if portfolio item, add the 2 breadcrumbs\n  return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: result });\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createBreadcrumbsFromLocations } from '../redux/actions/breadcrumbs-actions';\nimport { INITIALIZE_BREADCRUMBS } from '../redux/action-types';\nimport { AnyObject, ReduxAction } from '../types/common-types';\nimport { AnyAction } from 'redux';\n\nconst useBreadcrumbs = (\n  updateTriggers: any[] = []\n):\n  | (() => ReduxAction<{\n      type: typeof INITIALIZE_BREADCRUMBS;\n    }>)\n  | ReduxAction<{ type: typeof INITIALIZE_BREADCRUMBS }> => {\n  const dispatch = useDispatch();\n  const { pathname, search } = useLocation();\n  if (updateTriggers.length === 0) {\n    return dispatch(\n      (createBreadcrumbsFromLocations('', {}) as unknown) as AnyAction\n    );\n  }\n\n  const searchParams = new URLSearchParams(search);\n  const searchObject: AnyObject = {};\n  searchParams.forEach((value, key) => {\n    searchObject[key] = value;\n  });\n\n  useEffect(() => {\n    dispatch(createBreadcrumbsFromLocations(pathname, searchObject));\n  }, [pathname, ...updateTriggers]);\n\n  return () =>\n    dispatch((createBreadcrumbsFromLocations('', {}) as unknown) as AnyAction);\n};\n\nexport default useBreadcrumbs;\n"],"names":["exports","tslib_1","React","__importStar","_a","children","props","__rest","createElement","Object","assign","PageHeaderTitle","_ref","className","title","pageHeaderTitleClasses","headingLevel","size","propTypes","PlatformDetails","lazy","PlatformTemplates","PlatformInventories","ServiceOfferingDetail","tabItems","eventKey","name","dispatch","useDispatch","useQuery","platform","useSelector","platformReducer","selectedPlatform","serviceOffering","resetBreadcrumbs","useBreadcrumbs","formatMessage","useFormatMessage","useEffect","Promise","all","localStorage","getItem","fetchSelectedPlatformS","fetchSelectedPlatform","fetchPlatformsS","fetchPlatforms","scrollToTop","Fragment","Route","exact","path","PLATFORM_INVENTORIES_ROUTE","PLATFORM_ROUTE","PLATFORM_TEMPLATES_ROUTE","PLATFORM_DETAILS_ROUTE","schema","createPlatformsTopToolbarSchema","paddingBottom","platformAvailable","color","availability_status","icon","labelMessages","Suspense","fallback","Switch","PLATFORM_SERVICE_OFFERINGS_ROUTE","createPlatformsToolbarSchema","searchValue","onFilterChange","fields","component","toolbarComponentTypes","key","placeholder","alignment","variant","AppTabs","createPlatformsFilterToolbarSchema","meta","apiRequest","filterPlaceholder","count","AsyncPagination","isCompact","limit","offset","apiProps","Pagination","perPage","itemCount","onPerPageSelect","_event","page","onSetPage","number","debounce","options","request","dropDirection","ENTITIES_EXTRA_PARAMS","FRAGMENT_TITLE","getState","portfolioReducer","selectedPortfolio","portfolioItem","service","orderReducer","orderDetail","order","id","FRAGMENT_PREFIX","pathname","searchParams","createBreadcrumbsFromLocations","search","length","type","payload","prefix","push","startsWith","result","replace","split","reduce","acc","curr","index","generateTitle","forEach","currTitle","updateTriggers","useLocation","URLSearchParams","searchObject","value"],"sourceRoot":""}