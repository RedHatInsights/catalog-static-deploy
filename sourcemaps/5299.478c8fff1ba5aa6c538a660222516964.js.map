{"version":3,"file":"js/5299.1639762622991.ab6a6d5ebad6d98248bc.js","mappings":"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","sources":["webpack:///./src/app-context.js","webpack:///./src/smart-components/dialog-routes/portfolio-routes.tsx","webpack:///./src/smart-components/dialog-routes/platform-routes.tsx","webpack:///./src/smart-components/dialog-routes/index.tsx","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/constants/ui-constants.ts","webpack:///./src/global-styles.js","webpack:///./src/router.js","webpack:///./src/constants/routes.ts","webpack:///./src/helpers/order-process/order-process-helper.ts","webpack:///./src/helpers/portfolio/portfolio-helper-s.ts","webpack:///./src/helpers/portfolio/portfolio-helper.ts","webpack:///./src/helpers/shared/helpers.tsx","webpack:///./src/constants/nullable-attributes.ts","webpack:///./src/helpers/shared/pagination.ts","webpack:///./src/helpers/shared/user-login.ts","webpack:///./src/messages/actions.messages.ts","webpack:///./src/messages/forms.messages.ts","webpack:///./src/messages/labels.messages.ts","webpack:///./src/messages/order-processes.messages.ts","webpack:///./src/messages/portfolio.messages.ts","webpack:///./src/presentational-components/shared/intl-rich-text-components.tsx","webpack:///./src/presentational-components/shared/loader-placeholders.tsx","webpack:///./src/presentational-components/styled-components/level.tsx","webpack:///./src/presentational-components/styled-components/spinner-wrapper.tsx","webpack:///./src/presentational-components/styled-components/toolbars.tsx","webpack:///./src/redux/action-types.ts","webpack:///./src/redux/action-types/approval-action-types.ts","webpack:///./src/redux/action-types/action-types-helper.ts","webpack:///./src/redux/actions/order-process-actions.ts","webpack:///./src/redux/actions/portfolio-actions-s.tsx","webpack:///./src/redux/actions/portfolio-actions.tsx","webpack:///./src/routing/catalog-history.ts","webpack:///./src/routing/catalog-route.tsx","webpack:///./src/routing/uri-state-manager.ts","webpack:///./src/routing/use-initial-uri-hash.ts","webpack:///./src/presentational-components/shared/pf4-select-wrapper.tsx","webpack:///./src/forms/form-fields/share-group-select.tsx","webpack:///./src/forms/form-fields/share-group-edit.tsx","webpack:///./src/messages/schemas.messages.ts","webpack:///./src/utilities/translate-schema.ts","webpack:///./src/forms/form-fields/form-template.tsx","webpack:///./src/smart-components/common/form-renderer.tsx","webpack:///./src/forms/form-fields/copy-name-display.tsx","webpack:///./src/forms/form-fields/initial-chips.tsx","webpack:///./src/forms/set-object-tags.schema.ts","webpack:///./src/smart-components/common/tagging-modal.tsx","webpack:///./src/smart-components/error-pages/error-redirects.tsx","webpack:///./src/smart-components/order-process/set-order-process-modal.tsx","webpack:///./src/user-context.ts","webpack:///./src/utilities/async-form-validator.ts","webpack:///./src/utilities/constants.ts","webpack:///./src/redux/reducers/order-reducer.ts","webpack:///./src/redux/reducers/platform-reducer.ts","webpack:///./src/redux/reducers/order-process-reducer.ts","webpack:///./src/redux/reducers/portfolio-reducer.ts","webpack:///./src/redux/reducers/approval-reducer.ts","webpack:///./src/redux/reducers/rbac-reducer.ts","webpack:///./src/redux/reducers/share-reducer.ts","webpack:///./src/redux/reducers/open-api-reducer.ts","webpack:///./src/redux/reducers/breadcrumbs-reducer.ts","webpack:///./src/redux/reducers/i18n-reducer.ts","webpack:///./src/utilities/store.ts","webpack:///./src/utilities/unauthorized-middleware.ts","webpack:///./src/utilities/view-state-middleware.ts","webpack:///./src/utilities/loading-state-middleware.ts","webpack:///./src/utilities/empty-data-middleware.ts","webpack:///./src/utilities/use-format-message.tsx","webpack:///./src/utilities/use-query.ts"],"sourcesContent":["import { createContext } from 'react';\n\nconst AppContext = createContext({});\n\nexport default AppContext;\n","import React, { lazy, useEffect } from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport {\n  ADD_PORTFOLIO_ROUTE,\n  EDIT_PORTFOLIO_ROUTE,\n  PORTFOLIOS_ROUTE,\n  NESTED_EDIT_PORTFOLIO_ROUTE,\n  PORTFOLIO_ROUTE,\n  REMOVE_PORTFOLIO_ROUTE,\n  NESTED_REMOVE_PORTFOLIO_ROUTE,\n  SHARE_PORTFOLIO_ROUTE,\n  NESTED_SHARE_PORTFOLIO_ROUTE,\n  WORKFLOW_PORTFOLIO_ROUTE,\n  NESTED_WORKFLOW_PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  NESTED_EDIT_ORDER_PROCESS_ROUTE,\n  EDIT_ORDER_PROCESS_ROUTE\n} from '../../constants/routes';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport CatalogRoute from '../../routing/catalog-route';\nimport useQuery from '../../utilities/use-query';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { PORTFOLIO_RESOURCE_TYPE } from '../../utilities/constants';\nimport {\n  setOrFetchPortfolio,\n  resetSelectedPortfolio,\n  fetchPortfolios\n} from '../../redux/actions/portfolio-actions';\nimport {\n  setOrFetchPortfolio as setOrFetchPortfolioS,\n  fetchPortfolios as fetchPortfoliosS\n} from '../../redux/actions/portfolio-actions-s';\n\nimport SetOrderProcessModal from '../order-process/set-order-process-modal';\nimport { CatalogRootState } from '../../types/redux';\nimport {\n  ApiCollectionResponse,\n  InternalPortfolioItem,\n  UserCapabilities\n} from '../../types/common-types';\nimport { Portfolio } from '@redhat-cloud-services/catalog-client';\n\nconst CopyPortfolioItemModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"copy-portfolio-item-modal\" */ '../portfolio/portfolio-item-detail/copy-portfolio-item-modal'\n  )\n);\n\nconst OrderModal = lazy(() =>\n  import(/* webpackChunkName: \"order-modal\" */ '../common/order-modal')\n);\n\nconst EditApprovalWorkflow = lazy(() =>\n  import(\n    /* webpackChunkName: \"edit-approval-workflow\" */ '../common/edit-approval-workflow'\n  )\n);\nconst SharePortfolioModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"share-portfolio\" */ '../portfolio/share-portfolio-modal'\n  )\n);\n\nconst RemovePortfolioModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"remove-portfolio\" */ '../portfolio/remove-portfolio-modal'\n  )\n);\n\nconst AddPortfolioModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"add-portfolio\" */ '../portfolio/add-portfolio-modal'\n  )\n);\n\nconst PortfolioRoutes: React.ComponentType = () => {\n  const viewState = useInitialUriHash();\n  const { pathname } = useLocation();\n\n  const portfolioItemId = useSelector<CatalogRootState, string | undefined>(\n    (state) => state?.portfolioReducer?.portfolioItem?.portfolioItem?.id\n  );\n  const portfolioItemUserCapabilities = useSelector<\n    CatalogRootState,\n    UserCapabilities | undefined\n  >((state) => {\n    const portfolioItem =\n      state?.portfolioReducer?.portfolioItem?.portfolioItem || {};\n    return (portfolioItem as InternalPortfolioItem).metadata?.user_capabilities;\n  }, shallowEqual);\n\n  const portfolios = useSelector<\n    CatalogRootState,\n    ApiCollectionResponse<Portfolio>\n  >((state) => state?.portfolioReducer?.portfolios, shallowEqual);\n\n  const selectedPortfolio = useSelector<\n    CatalogRootState,\n    Portfolio | undefined\n  >((state) => state?.portfolioReducer?.selectedPortfolio, shallowEqual);\n\n  const { portfolioUserCapabilities, itemName } = useSelector<\n    CatalogRootState,\n    {\n      portfolioUserCapabilities: UserCapabilities;\n      itemName: () => string | undefined;\n    }\n  >((state) => ({\n    portfolioUserCapabilities:\n      state?.portfolioReducer?.selectedPortfolio?.metadata?.user_capabilities,\n    itemName: () => state?.portfolioReducer?.selectedPortfolio?.name\n  }));\n  const [{ portfolio: id }, search] = useQuery(['portfolio']);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (id && (!selectedPortfolio?.id || id !== selectedPortfolio.id)) {\n      dispatch(\n        localStorage.getItem('catalog_standalone')\n          ? setOrFetchPortfolioS(id, portfolios)\n          : setOrFetchPortfolio(id, portfolios)\n      );\n    }\n  }, [id]);\n\n  return (\n    <div>\n      <Switch>\n        <Route path={[ADD_PORTFOLIO_ROUTE, EDIT_PORTFOLIO_ROUTE]}>\n          <AddPortfolioModal\n            removeQuery={false}\n            viewState={viewState?.portfolio}\n            closeTarget={PORTFOLIOS_ROUTE}\n          />\n        </Route>\n        <CatalogRoute\n          userCapabilities={portfolioUserCapabilities}\n          requiredCapabilities=\"update\"\n          exact\n          path={NESTED_EDIT_PORTFOLIO_ROUTE}\n        >\n          <AddPortfolioModal\n            closeTarget={{ pathname: PORTFOLIO_ROUTE, search }}\n          />\n        </CatalogRoute>\n        <Route path={REMOVE_PORTFOLIO_ROUTE}>\n          <RemovePortfolioModal viewState={viewState?.portfolio} />\n        </Route>\n        <CatalogRoute\n          userCapabilities={portfolioUserCapabilities}\n          requiredCapabilities=\"destroy\"\n          exact\n          path={NESTED_REMOVE_PORTFOLIO_ROUTE}\n        >\n          <RemovePortfolioModal />\n        </CatalogRoute>\n        <Route exact path={SHARE_PORTFOLIO_ROUTE}>\n          <SharePortfolioModal\n            closeUrl={PORTFOLIOS_ROUTE}\n            removeSearch\n            viewState={viewState?.portfolio}\n            portfolioName={itemName}\n          />\n        </Route>\n        <Route exact path={NESTED_SHARE_PORTFOLIO_ROUTE}>\n          <SharePortfolioModal\n            closeUrl={PORTFOLIO_ROUTE}\n            portfolioName={itemName}\n          />\n        </Route>\n        <Route exact path={WORKFLOW_PORTFOLIO_ROUTE}>\n          <EditApprovalWorkflow\n            pushParam={{ pathname: PORTFOLIOS_ROUTE }}\n            objectType={PORTFOLIO_RESOURCE_TYPE}\n            objectName={itemName}\n            querySelector=\"portfolio\"\n            removeSearch\n            keepHash\n            postMethod={() =>\n              localStorage.getItem('catalog_standalone')\n                ? fetchPortfoliosS()\n                : fetchPortfolios()\n            }\n            onClose={() => dispatch(resetSelectedPortfolio())}\n          />\n        </Route>\n        <Route exact path={NESTED_WORKFLOW_PORTFOLIO_ROUTE}>\n          <EditApprovalWorkflow\n            querySelector=\"portfolio\"\n            pushParam={{ pathname: PORTFOLIO_ROUTE, search }}\n            objectType={PORTFOLIO_RESOURCE_TYPE}\n            objectName={itemName}\n          />\n        </Route>\n        <Route exact path={`${PORTFOLIO_ITEM_ROUTE}/order`}>\n          <OrderModal closeUrl={PORTFOLIO_ITEM_ROUTE} />\n        </Route>\n        <Route\n          exact\n          path={[EDIT_ORDER_PROCESS_ROUTE, NESTED_EDIT_ORDER_PROCESS_ROUTE]}\n        >\n          <SetOrderProcessModal\n            querySelector=\"portfolio\"\n            objectType={PORTFOLIO_RESOURCE_TYPE}\n            objectName={itemName}\n            pushParam={{\n              pathname:\n                pathname === EDIT_ORDER_PROCESS_ROUTE\n                  ? PORTFOLIOS_ROUTE\n                  : PORTFOLIO_ROUTE,\n              search:\n                pathname === NESTED_EDIT_ORDER_PROCESS_ROUTE\n                  ? search\n                  : undefined\n            }}\n          />\n        </Route>\n\n        <CatalogRoute\n          path={`${PORTFOLIO_ITEM_ROUTE}/copy`}\n          requiredCapabilities=\"copy\"\n          userCapabilities={portfolioItemUserCapabilities}\n        >\n          {portfolioItemId && (\n            <CopyPortfolioItemModal\n              portfolioName={itemName()}\n              search={search}\n              portfolioItemId={portfolioItemId}\n              portfolioId={id}\n              closeUrl={PORTFOLIO_ITEM_ROUTE}\n            />\n          )}\n        </CatalogRoute>\n      </Switch>\n    </div>\n  );\n};\n\nexport default PortfolioRoutes;\n","import React, { lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { INVENTORY_RESOURCE_TYPE } from '../../utilities/constants';\nimport useQuery from '../../utilities/use-query';\nimport { useSelector } from 'react-redux';\nimport { CatalogRootState } from '../../types/redux';\n\nconst EditApprovalWorkflow = lazy(() =>\n  import(\n    /* webpackChunkName: \"edit-approval-workflow\" */ '../common/edit-approval-workflow'\n  )\n);\n\nexport interface PlatformRoutesProps {\n  [key: string]: never;\n}\nconst PlatformRoutes: React.ComponentType<PlatformRoutesProps> = () => {\n  const [{ platform: id }] = useQuery(['platform']);\n  const { objectName } = useSelector<\n    CatalogRootState,\n    { objectName: string | undefined }\n  >((state) => {\n    const data = state?.platformReducer?.platformInventories?.data;\n    return {\n      objectName: data ? data.find((obj) => obj.id === id)?.name : 'inventory'\n    };\n  });\n\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/platforms/platform/platform-inventories/edit-workflow\">\n          <EditApprovalWorkflow\n            pushParam={{\n              pathname: '/platforms/platform/platform-inventories',\n              search: `?platform=${id}`\n            }}\n            objectType={INVENTORY_RESOURCE_TYPE}\n            objectName={() => objectName}\n            querySelector=\"inventory\"\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default PlatformRoutes;\n","import React, { Suspense } from 'react';\nimport PortfolioRoutes from './portfolio-routes';\nimport PlatformRoutes from './platform-routes';\n\nconst DialogRoutes = () => (\n  <Suspense fallback={<div></div>}>\n    <PortfolioRoutes />\n    <PlatformRoutes />\n  </Suspense>\n);\n\nexport default DialogRoutes;\n","import { Route, Switch, Redirect, useLocation } from 'react-router-dom';\nimport React, { lazy, Suspense } from 'react';\nimport some from 'lodash/some';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  ORDER_ROUTE\n} from './constants/routes';\nimport CatalogRoute from './routing/catalog-route';\nimport DialogRoutes from './smart-components/dialog-routes';\n\nconst CommonApiError = lazy(() =>\n  import(\n    /* webpackChunkName: \"error-page\" */ './smart-components/error-pages/common-api-error'\n  )\n);\n\nconst Products = lazy(() =>\n  import(\n    /* webpackChunkName: \"products\" */ './smart-components/products/products'\n  )\n);\nconst Platforms = lazy(() =>\n  import(\n    /* webpackChunkName: \"platforms\" */ './smart-components/platform/platforms'\n  )\n);\nconst Platform = lazy(() =>\n  import(\n    /* webpackChunkName: \"platform\" */ './smart-components/platform/platform'\n  )\n);\nconst Portfolios = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolios\" */ './smart-components/portfolio/portfolios'\n  )\n);\nconst Portfolio = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolio\" */ './smart-components/portfolio/portfolio'\n  )\n);\nconst Orders = lazy(() =>\n  import(/* webpackChunkName: \"orders\" */ './smart-components/order/orders')\n);\nconst OrderDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"order-detail\" */ './smart-components/order/order-detail/order-detail'\n  )\n);\nconst OrderProcesses = lazy(() =>\n  import(\n    /* webpackChunkName: \"order-processes\" */ './smart-components/order-process/order-processes'\n  )\n);\n\nconst paths = {\n  products: '/products',\n  platforms: '/platforms',\n  order_processes: '/order-processes',\n  platform: '/platforms/platform',\n  portfolios: PORTFOLIOS_ROUTE,\n  portfolio: PORTFOLIO_ROUTE,\n  orders: '/orders',\n  order: ORDER_ROUTE\n};\n\nconst errorPaths = ['/400', '/401', '/403', '/404'];\n\nexport const Routes = () => {\n  const { pathname } = useLocation();\n  return (\n    <Suspense fallback={<AppPlaceholder />}>\n      <Switch>\n        <CatalogRoute path={paths.products} component={Products} />\n        <CatalogRoute path={paths.portfolio} component={Portfolio} />\n        <CatalogRoute path={paths.portfolios} component={Portfolios} />\n        <CatalogRoute\n          permissions={['catalog:portfolios:create']}\n          path={paths.platform}\n          component={Platform}\n        />\n        <CatalogRoute\n          permissions={['catalog:portfolios:create']}\n          path={paths.platforms}\n          component={Platforms}\n        />\n        <CatalogRoute path={paths.order_processes} component={OrderProcesses} />\n        <CatalogRoute path={paths.order} component={OrderDetail} />\n        <CatalogRoute path={paths.orders} component={Orders} />\n        <Route path={errorPaths} component={CommonApiError} />\n        <Route\n          render={() =>\n            some(paths, (p) => p === pathname) ? null : (\n              <Redirect to={paths.portfolios} />\n            )\n          }\n        />\n      </Switch>\n      {/*\n       * We require the empty DIV around the dialog routes to avoid testing issues\n       * It does not have any visual effect on the application\n       * Emzyme simply cannot handle direct descendant of Suspense to be another Suspense\n       */}\n      <div>\n        <DialogRoutes />\n      </div>\n    </Suspense>\n  );\n};\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\n\nimport { Routes } from './Routes';\nimport { MIN_SCREEN_HEIGHT } from './constants/ui-constants';\nimport { AppPlaceholder } from './presentational-components/shared/loader-placeholders';\nimport {\n  SET_OPENAPI_SCHEMA,\n  SET_SOURCETYPE_ICONS,\n  INITIALIZE_I18N\n} from './redux/action-types';\n\nimport 'whatwg-fetch';\nimport smoothscroll from 'smoothscroll-polyfill';\n\n// react-int eng locale data\nimport { useIntl } from 'react-intl';\n\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport { getAxiosInstance } from './helpers/shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from './utilities/constants';\nimport UserContext from './user-context';\n\nsmoothscroll.polyfill();\n\n/**\n * has to be in global context because nav listener is not a part of component lifecycle\n */\nlet ignoreRedirect = true;\n\nconst App = () => {\n  const [auth, setAuth] = useState(false);\n  const [userPermissions, setUserPermissions] = useState();\n  const [userIdentity, setUserIdentity] = useState({ identity: {} });\n  const [openApiSchema, setOpenApiSchema] = useState();\n  const [user, setUser] = useState();\n  const dispatch = useDispatch();\n  const i18l = useIntl();\n  const history = useHistory();\n  let unregister;\n\n  useEffect(() => {\n    insights.chrome.init();\n    dispatch({ type: INITIALIZE_I18N, payload: i18l });\n    Promise.all([\n      getAxiosInstance()\n        .get(`${CATALOG_API_BASE}/openapi.json`)\n        .then((payload) => {\n          setOpenApiSchema(payload);\n          dispatch({ type: SET_OPENAPI_SCHEMA, payload });\n        }),\n      getAxiosInstance()\n        .get(`${SOURCES_API_BASE}/source_types`)\n        .then(({ data }) =>\n          dispatch({\n            type: SET_SOURCETYPE_ICONS,\n            payload: data.reduce(\n              (acc, curr) => ({\n                ...acc,\n                [curr.id]: curr.icon_url\n              }),\n              {}\n            )\n          })\n        ),\n      insights.chrome.auth.getUser().then((user) => {\n        setUserIdentity(user);\n        return insights.chrome\n          .getUserPermissions()\n          .then((data) => setUserPermissions(data));\n      })\n    ]).then(() => setAuth(true));\n\n    insights.chrome.identifyApp('catalog');\n    unregister = insights.chrome.on('APP_NAVIGATION', (event) => {\n      /**\n       * Handle navigation from insights main nav\n       * Uses React history directly instead of browser history to avoid template reload.\n       */\n      if (event.domEvent) {\n        history.push(`/${event.navId}`);\n      }\n\n      ignoreRedirect = false;\n    });\n\n    return () => unregister();\n  }, []);\n\n  if (!auth) {\n    return <AppPlaceholder />;\n  }\n\n  return (\n    <UserContext.Provider\n      value={{\n        permissions: userPermissions,\n        userIdentity,\n        openApiSchema,\n        user,\n        setUser\n      }}\n    >\n      <Fragment>\n        <NotificationsPortal />\n        <section className=\"pf-u-p-0 pf-u-ml-0 pf-l-page__main-section pf-c-page__main-section\">\n          <Grid style={{ minHeight: MIN_SCREEN_HEIGHT }}>\n            <GridItem sm={12} className=\"content-layout\">\n              <Routes />\n            </GridItem>\n          </Grid>\n        </section>\n      </Fragment>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n","export const MIN_SCREEN_HEIGHT = 'calc(100vh - 76px)';\n","import { createGlobalStyle } from 'styled-components';\n\n/**\n * Use direct css imports for FCE components\n * This will save some bundle size\n */\nconst GlobalStyle = createGlobalStyle`\n.disabled-link {\n  pointer-events: none\n}\n\n.font-14{\n  font-size: 14px;\n  color: var(--pf-global--Color--100);\n  font-weight: bold;\n  margin-bottom: 2px !important;\n}\n\n.flex-no-wrap {\n  flex-wrap: nowrap !important;\n  .flex-item-no-wrap {\n    align-self: flex-start;\n    white-space: nowrap;\n  }\n  .pf-c-form__actions {\n    flex-wrap: nowrap !important;\n  }\n}\n\n.orders-list {\n  background-color: var(--pf-global--BackgroundColor--100)\n}\n\n.share-column {\n  .pf-c-select_toggle-wrapper {\n    max-width: calc(100% - 70px);\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n}\n\n/**\n* Update DDF select styles for select component\n*/\n.ddorg__pf4-component-mapper__select-toggle.pf-c-select__toggle.pf-m-typeahead {\n  padding-top: 1px;\n  padding-bottom: 1px;\n}\n.ddorg__pf4-component-mapper__select-toggle {\n  min-height: 34px;\n}\n\n.filter-select {\n  width: 300px;\n  .pf-c-select__menu {\n    max-width: 100%\n  }\n  .pf-c-select__menu-item {\n    white-space: break-spaces;\n  }\n  .pf-c-select_toggle-wrapper {\n    max-width: calc(100% - 32px);\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n}\n\n//pf-4 fixes\n/**\n* non working pf display modifier: https://www.patternfly.org/v4/documentation/core/utilities/display#display-block\n*/\n.pf-m-grow {\n  flex-grow: 1;\n}\n\n.pf-c-breadcrumb__list, .overflow-wrap {\n  @supports not (overflow-wrap: anywhere) {\n    word-break: break-all;\n  }\n  @supports (overflow-wrap: anywhere) {\n    overflow-wrap: anywhere;\n  }\n}\n\na.pf-c-breadcrumb__item {\n  cursor: pointer;\n  >* {\n    cursor: pointer;\n  }\n}\n\n.pf4-hidefield-overlay{\n  .hide-indicator {\n    z-index: 1;\n  }\n  &::before {\n    z-index: 1;\n  }\n}\n/**\n * table vertical align defaults to baseline\n */\n.pf-c-table.orders-table tbody > tr > *{\n  vertical-align: inherit;\n}\n/**\n* End of PF4 fixes\n*/\n\n.icon-danger-fill {\n  fill: var(--pf-global--danger-color--100)\n}\n\n.pf-u-gg-md {\n  grid-gap: 16px !important;\n  gap: 16px;\n}\n\n.bottom-pagination-container {\n  width: 100%\n}\n\n.global-primary-background {\n  background-color: var(--pf-global--BackgroundColor--100)\n}\n\n.full-height {\n  min-height: 100%;\n}\n\n.content-layout {\n  display: flex;\n  flex-direction: column;\n}\n\n.pf-l-flex.align-items-center {\n  align-items: center;\n}\n\n/**\n * frontend components override\n */\n:root {\n  --ins-color--orange: #ec7a08;\n}\n\nbutton:focus {\n  outline: none;\n}\n\nsection.ins-l-content {\n  padding: var(--pf-global--spacer--lg); \n}\n\nsection.ins-l-button-group {\n  margin: 24px 0px;\n  margin: 1.5rem 0rem; \n}\n\nsection.ins-l-button-group > * {\n  display: inline; \n}\n\nsection.ins-l-button-group * + * {\n  margin-left: 5px;\n  margin-left: 0.3125rem; \n}\n\nsection.ins-l-icon-group * + * {\n  margin-left: 10px; \n}\n\nsection.ins-l-icon-group__with-major * + * {\n  margin-left: 7.5px; \n}\n\nsection.ins-l-icon-group__with-major .ins-battery:last-of-type {\n  padding-left: 15px;\n  border-left: 2px solid #eaeaea; \n}\n\nsection.ins-l-icon-group__with-major .ins-battery:last-of-type span.label {\n  font-weight: 500;\n  margin: 0 10px; \n}\n\n.ins-c-primary-toolbar__pagination {\n  margin-left: auto;\n}\n\n.ins-c-primary-toolbar .ins-c-primary-toolbar__group-filter {\n  margin-right: 7px;\n}\n.standalone-toolbar {\n  margin-right: 0px;\n  margin-top: 0px;\n  margin-left: 0px;\n  padding-top: 24px;\n  padding-left: 24px;\n  padding-right: 24px;\n  padding-bottom: 24px;\n  background-color: white;\n}\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { Router as ReactRouter } from 'react-router-dom';\nimport App from './App';\nimport AppContext from './app-context';\nimport GlobalStyle from './global-styles';\nimport catalogHistory, { release } from './routing/catalog-history';\n\nconst Router = () => (\n  <AppContext.Provider value={{ release }}>\n    <GlobalStyle />\n    <ReactRouter history={catalogHistory}>\n      <App />\n    </ReactRouter>\n  </AppContext.Provider>\n);\n\nexport default Router;\n","export const ADD_PORTFOLIO_ROUTE = '/portfolios/add-portfolio';\nexport const ADD_PRODUCTS_ROUTE = '/portfolios/portfolio/add-products';\nexport const EDIT_ORDER_PROCESS_ROUTE = '/portfolios/edit-order-process';\nexport const EDIT_PORTFOLIO_ROUTE = '/portfolios/edit';\nexport const EDIT_PORTFOLIO_WORKFLOW_ROUTE = '/portfolios/edit-workflow';\nexport const EDIT_SURVEY_ROUTE =\n  '/portfolios/portfolio/portfolio-item/edit-survey';\nexport const NESTED_EDIT_ORDER_PROCESS_ROUTE =\n  '/portfolios/portfolio/edit-order-process';\nexport const NESTED_EDIT_PORTFOLIO_ROUTE =\n  '/portfolios/portfolio/edit-portfolio';\nexport const NESTED_REMOVE_PORTFOLIO_ROUTE =\n  '/portfolios/portfolio/remove-portfolio';\nexport const NESTED_SHARE_PORTFOLIO_ROUTE =\n  '/portfolios/portfolio/share-portfolio';\nexport const NESTED_WORKFLOW_PORTFOLIO_ROUTE =\n  '/portfolios/portfolio/edit-workflow';\nexport const ORDER_ROUTE = '/orders/order';\nexport const ORDERS_ROUTE = '/orders';\nexport const PLATFORM_INVENTORIES_ROUTE =\n  '/platforms/platform/platform-inventories';\nexport const PLATFORM_ROUTE = '/platforms/platform';\nexport const PLATFORM_SERVICE_OFFERINGS_ROUTE =\n  '/platforms/platform/service-offerings';\nexport const PLATFORM_TEMPLATES_ROUTE =\n  '/platforms/platform/platform-templates';\nexport const PLATFORM_DETAILS_ROUTE = '/platforms/platform/platform-details';\nexport const PLATFORMS_ROUTE = '/platforms';\nexport const PORTFOLIO_ROUTE = '/portfolios/portfolio';\nexport const PORTFOLIO_ITEM_ROUTE = '/portfolios/portfolio/portfolio-item';\nexport const PORTFOLIO_ITEM_ORDER_ROUTE =\n  '/portfolios/portfolio/portfolio-item/order';\nexport const PORTFOLIO_ITEM_ROUTE_EDIT =\n  '/portfolios/portfolio/portfolio-item/edit';\nexport const PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE =\n  '/portfolios/portfolio/portfolio-item/edit-order-process';\nexport const PORTFOLIOS_ROUTE = '/portfolios';\nexport const REMOVE_PORTFOLIO_ROUTE = '/portfolios/remove';\nexport const SHARE_PORTFOLIO_ROUTE = '/portfolios/share';\nexport const WORKFLOW_PORTFOLIO_ROUTE = '/portfolios/edit-workflow';\nexport const ORDER_PROCESSES_ROUTE = '/order-processes';\nexport const ADD_ORDER_PROCESS_ROUTE = '/order-processes/add-order-process';\nexport const REMOVE_ORDER_PROCESS_ROUTE = '/order-processes/remove';\nexport const UPDATE_ORDER_PROCESS_ROUTE = '/order-processes/update';\nexport const LOGIN_ROUTE = '/login';\nexport const APPROVAL_ROUTE = '/approval';\n","import { getAxiosInstance, getOrderProcessApi } from '../shared/user-login';\nimport { defaultSettings } from '../shared/pagination';\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport {\n  ResourceObject,\n  OrderProcess,\n  OrderProcessAssociationsToRemoveAssociationsToRemoveEnum\n} from '@redhat-cloud-services/catalog-client';\nimport {\n  ApiCollectionResponse,\n  ApiMetadata,\n  SelectOptions,\n  SortBy\n} from '../../types/common-types';\nimport { AxiosResponse } from 'axios';\nimport { OrderProcessWithType } from '../../smart-components/order-process/add-order-process-modal';\nconst axiosInstance = getAxiosInstance();\nconst orderProcessApi = getOrderProcessApi();\n\nconst sortPropertiesMapper = (property: string): string => property;\n\nexport const listOrderProcesses = (\n  filter = '',\n  sortBy?: SortBy,\n  { limit, offset }: ApiMetadata = defaultSettings\n): Promise<ApiCollectionResponse<OrderProcess>> => {\n  const sortQuery = sortBy\n    ? `&sort_by=${sortPropertiesMapper(sortBy.property)}:${sortBy.direction}`\n    : '';\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/order_processes?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}${sortQuery}`\n  );\n};\n\nexport const loadProductOptions = (\n  filterValue = '',\n  initialLookup: string[] = []\n): Promise<SelectOptions> => {\n  const initialLookupQuery = initialLookup\n    .map((product) => `filter[id][]=${product}`)\n    .join('&');\n\n  return getAxiosInstance()\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items?filter[name][contains]=${filterValue}&${initialLookupQuery ||\n        ''}`\n    )\n    .then(({ data }) =>\n      data.map((item: { name: string; id: string }) => ({\n        label: item.name,\n        value: item.id\n      }))\n    );\n};\n\nexport const fetchOrderProcessByName = (\n  name: string\n): Promise<ApiCollectionResponse<OrderProcess>> => listOrderProcesses(name);\n\nexport const fetchOrderProcess = (\n  id: string\n): Promise<AxiosResponse<OrderProcess>> =>\n  getOrderProcessApi().showOrderProcess(id);\n\nexport const setOrderProcesses = (\n  toTag: string[],\n  toUntag: string[],\n  resourceType: ResourceObject\n): Promise<AxiosResponse<void>[]> => {\n  const promises = [\n    ...toTag.map((id) =>\n      orderProcessApi.linkTagToOrderProcess(id, resourceType)\n    ),\n    ...toUntag.map((id) =>\n      orderProcessApi.unlinkTagFromOrderProcess(id, resourceType)\n    )\n  ];\n  return Promise.all(promises);\n};\n\nexport const getLinkedOrderProcesses = (\n  objectType: string,\n  objectId: string\n): Promise<ApiCollectionResponse<OrderProcess>> =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_processes?app_name=catalog&object_type=${objectType}&object_id=${objectId}`\n  );\n\nexport const removeOrderProcess = (processId: string): Promise<void> =>\n  (getOrderProcessApi().destroyOrderProcess(processId) as unknown) as Promise<\n    void\n  >;\n\nexport const removeOrderProcesses = (\n  selectedProcesses: string[]\n): Promise<AxiosResponse<void>[]> =>\n  Promise.all(\n    selectedProcesses.map(\n      async (processId) =>\n        await getOrderProcessApi().destroyOrderProcess(processId)\n    )\n  );\n\nexport const updateOrderProcess = async (\n  id: string,\n  initialData: Partial<OrderProcess> | undefined,\n  {\n    before_portfolio_item_id,\n    after_portfolio_item_id,\n    return_portfolio_item_id,\n    ...data\n  }: Partial<OrderProcessWithType>\n): Promise<[\n  AxiosResponse<OrderProcess> | unknown,\n  AxiosResponse<OrderProcess> | unknown,\n  AxiosResponse<OrderProcess> | unknown\n]> => {\n  await getOrderProcessApi().updateOrderProcess(id, {\n    name: data.name,\n    description: data.description\n  });\n\n  let promiseB = {};\n  if (data.order_process_type === 'itsm') {\n    return_portfolio_item_id = undefined;\n  } else {\n    before_portfolio_item_id = undefined;\n    after_portfolio_item_id = undefined;\n  }\n\n  if (before_portfolio_item_id !== initialData?.before_portfolio_item_id) {\n    promiseB =\n      before_portfolio_item_id && before_portfolio_item_id !== undefined\n        ? getOrderProcessApi().addOrderProcessBeforeItem(id, {\n            portfolio_item_id: before_portfolio_item_id\n          })\n        : getOrderProcessApi().removeOrderProcessAssociation(id as string, {\n            associations_to_remove: [\n              OrderProcessAssociationsToRemoveAssociationsToRemoveEnum.Before\n            ]\n          });\n  }\n\n  let promiseA = {};\n  if (after_portfolio_item_id !== initialData?.after_portfolio_item_id) {\n    promiseA =\n      after_portfolio_item_id && after_portfolio_item_id !== undefined\n        ? getOrderProcessApi().addOrderProcessAfterItem(id as string, {\n            portfolio_item_id: after_portfolio_item_id\n          })\n        : getOrderProcessApi().removeOrderProcessAssociation(id as string, {\n            associations_to_remove: [\n              OrderProcessAssociationsToRemoveAssociationsToRemoveEnum.After\n            ]\n          });\n  }\n\n  const promiseR = {};\n  if (return_portfolio_item_id !== initialData?.return_portfolio_item_id) {\n    return_portfolio_item_id !== undefined\n      ? getOrderProcessApi().addOrderProcessReturnItem(id as string, {\n          portfolio_item_id: return_portfolio_item_id\n        })\n      : getOrderProcessApi().removeOrderProcessAssociation(id as string, {\n          associations_to_remove: [\n            OrderProcessAssociationsToRemoveAssociationsToRemoveEnum.Return\n          ]\n        });\n  }\n\n  return Promise.all([promiseA, promiseB, promiseR]);\n};\n\nexport const addOrderProcess = async ({\n  before_portfolio_item_id,\n  after_portfolio_item_id,\n  return_portfolio_item_id,\n  ...data\n}: Partial<OrderProcess>): Promise<[\n  OrderProcess,\n  OrderProcess | undefined,\n  OrderProcess | undefined\n]> => {\n  const op = await getOrderProcessApi().createOrderProcess({\n    name: data.name,\n    description: data.description\n  });\n\n  const promiseB =\n    before_portfolio_item_id &&\n    before_portfolio_item_id !== '' &&\n    before_portfolio_item_id !== undefined\n      ? getOrderProcessApi().addOrderProcessBeforeItem(\n          ((op as unknown) as OrderProcess).id as string,\n          { portfolio_item_id: before_portfolio_item_id }\n        )\n      : {};\n  const promiseA =\n    after_portfolio_item_id &&\n    after_portfolio_item_id !== '' &&\n    after_portfolio_item_id !== undefined\n      ? getOrderProcessApi().addOrderProcessAfterItem(\n          ((op as unknown) as OrderProcess).id as string,\n          { portfolio_item_id: after_portfolio_item_id }\n        )\n      : {};\n  const promiseR =\n    return_portfolio_item_id &&\n    return_portfolio_item_id !== '' &&\n    return_portfolio_item_id !== undefined\n      ? getOrderProcessApi().addOrderProcessReturnItem(\n          ((op as unknown) as OrderProcess).id as string,\n          { portfolio_item_id: return_portfolio_item_id }\n        )\n      : {};\n  return Promise.all([promiseA, promiseB, promiseR]);\n};\n","import {\n  getAxiosInstance,\n  getPortfolioApi,\n  getPortfolioItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport { sanitizeValues } from '../shared/helpers';\nimport { defaultSettings } from '../shared/pagination';\nimport {\n  AnyObject,\n  ApiCollectionResponse,\n  Full,\n  InternalPortfolio,\n  RestorePortfolioItemConfig\n} from '../../types/common-types-s';\nimport {\n  Portfolio,\n  PortfolioItem,\n  RestoreKey\n} from '@redhat-cloud-services/catalog-client';\nimport { AxiosPromise, AxiosResponse } from 'axios';\nimport { Store } from 'redux';\nimport { Source } from '@redhat-cloud-services/sources-client';\nimport { GetReduxState } from '../../types/redux';\nimport { PortfolioReducerState } from '../../redux/reducers/portfolio-reducer';\n\nconst axiosInstance = getAxiosInstance();\n\nexport const listPortfolios = (\n  filters: AnyObject = {},\n  { offset, limit, sortDirection = 'asc' } = defaultSettings\n): Promise<ApiCollectionResponse<InternalPortfolio>> => {\n  const filterQuery = Object.entries(filters).reduce((acc, [key, value]) => {\n    if (!value) {\n      return acc;\n    }\n\n    const partial =\n      key === 'sort_by'\n        ? `sort_by=${value}:${sortDirection}`\n        : `${key}=${value}`;\n    return `${acc}&${partial}`;\n  }, '');\n  return (axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios/`\n  ) as unknown) as Promise<ApiCollectionResponse<InternalPortfolio>>;\n};\n\nexport const listPortfolioItems = (\n  limit = 50,\n  offset = 0,\n  filter = ''\n): Promise<ApiCollectionResponse<PortfolioItem>> => {\n  return axiosInstance\n    .get(`${CATALOG_API_BASE}/portfolio_items/`)\n    .then(\n      (portfolioItems: ApiCollectionResponse<PortfolioItem & AnyObject>) => {\n        const portfolioReference = portfolioItems.results.reduce<AnyObject>(\n          (acc, curr, index) =>\n            curr.portfolio_id\n              ? {\n                  ...acc,\n                  [curr.portfolio_id]: acc[curr.portfolio_id]\n                    ? [...acc[curr.portfolio_id], index]\n                    : [index]\n                }\n              : acc,\n          {}\n        );\n        return axiosInstance\n          .get<ApiCollectionResponse<Portfolio>>(\n            `${CATALOG_API_BASE}/portfolios/?${Object.keys(portfolioReference)\n              .map((id) => `id=${id}`)\n              .join('&')}`\n          )\n          .then(({ results }) => ({\n            portfolioItems,\n            portfolioReference,\n            portfolios: results\n          }));\n      }\n    )\n    .then(({ portfolioItems, portfolioReference, portfolios }) => {\n      portfolios.forEach(\n        ({ id, name }) =>\n          id &&\n          portfolioReference[id] &&\n          portfolioReference[id].forEach((portfolioItemIndex: number) => {\n            portfolioItems.results[portfolioItemIndex].portfolioName = name;\n          })\n      );\n      return portfolioItems;\n    });\n};\n\nexport const getPortfolio = (portfolioId: string): Promise<Portfolio> =>\n  axiosInstance.get(`${CATALOG_API_BASE}/portfolios/${portfolioId}/`);\n\nexport const getPortfolioItemsWithPortfolio = (\n  portfolioId: string,\n  { limit, offset, filter = '' } = defaultSettings\n): Promise<ApiCollectionResponse<PortfolioItem>> =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios/${portfolioId}/portfolio_items/`\n  );\n\n// TO DO - change to use the API call that adds multiple items to a portfolio when available\nexport const addPortfolio = async (\n  portfolioData: Partial<Portfolio>,\n  items?: PortfolioItem[]\n): Promise<Portfolio> => {\n  const portfolio = await axiosInstance.post(\n    `${CATALOG_API_BASE}/portfolios/`,\n    portfolioData\n  );\n  if (portfolio && items && items.length > 0) {\n    await addToPortfolio((portfolio as Portfolio).id!, items);\n  }\n\n  return (portfolio as unknown) as Promise<Portfolio>;\n};\n\nexport const addToPortfolio = (\n  portfolioId: string,\n  items: PortfolioItem[]\n): Promise<PortfolioItem[]> => {\n  return Promise.all(\n    items.map((item) => {\n      return axiosInstance.post(`${CATALOG_API_BASE}/portfolio_items/`, {\n        name: item?.name,\n        description: item?.description,\n        portfolio: portfolioId,\n        service_offering_ref: item.id\n      });\n    })\n  ) as Promise<PortfolioItem[]>;\n};\n\nexport const updatePortfolio = (\n  { id, ...portfolioData }: Partial<Portfolio>,\n  store: Partial<Store>\n): AxiosPromise<Portfolio> =>\n  axiosInstance.patch(`${CATALOG_API_BASE}/portfolios/${id}/`, portfolioData);\n\nexport const removePortfolio = (\n  portfolioId: string\n): Promise<Full<RestoreKey>> =>\n  axiosInstance.delete(`${CATALOG_API_BASE}/portfolios/${portfolioId}/`);\n\nexport const removePortfolioItem = (\n  portfolioItemId: string\n): AxiosPromise<RestoreKey> =>\n  axiosInstance.delete(\n    `${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}/`\n  );\n\nexport const removePortfolioItems = (\n  portfolioItemIds: string[]\n): Promise<RestorePortfolioItemConfig[]> =>\n  Promise.all(\n    portfolioItemIds.map(async (itemId) => {\n      const { restore_key } = ((await removePortfolioItem(\n        itemId\n      )) as unknown) as RestorePortfolioItemConfig;\n      return {\n        portfolioItemId: itemId,\n        restoreKey: restore_key\n      };\n    })\n  );\n\nexport const fetchProviderControlParameters = (\n  portfolioItemId: string\n): Promise<AnyObject> =>\n  axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}/provider_control_parameters/`\n    )\n    .then((data: AnyObject) => ({\n      required: [],\n      ...data,\n      properties: {\n        ...data.properties,\n        namespace: {\n          ...data.properties.namespace,\n          enum: Array.from(new Set([...data.properties.namespace.enum]))\n        }\n      }\n    }));\n\nexport const updatePortfolioItem = (\n  { id, ...portfolioItem }: Partial<PortfolioItem>,\n  store: { getState: GetReduxState }\n): Promise<PortfolioItem> =>\n  axiosInstance.patch(\n    `${CATALOG_API_BASE}/portfolio-items/${id}/`,\n    sanitizeValues(portfolioItem, 'PortfolioItem', store)\n  );\n\nexport const fetchPortfolioByName = (\n  name = ''\n): Promise<ApiCollectionResponse<Portfolio>> =>\n  axiosInstance.get(`${CATALOG_API_BASE}/portfolios/?name=${name}`);\n\nexport const restorePortfolioItems = (\n  restoreData: RestorePortfolioItemConfig[]\n): Promise<AxiosResponse<PortfolioItem>[]> =>\n  Promise.all(\n    restoreData.map(({ portfolioItemId, restoreKey }) =>\n      axiosInstance.post(\n        `${CATALOG_API_BASE}/portfolio-items/${portfolioItemId}/restore/`,\n        {\n          restore_key: restoreKey\n        }\n      )\n    )\n  );\n\nexport const copyPortfolio = (portfolioId: string): Promise<Portfolio> =>\n  axiosInstance.post(`${CATALOG_API_BASE}/portfolios/${portfolioId}/copy/`);\n\nexport const copyPortfolioItem = (\n  portfolioItemId: string,\n  copyObject: Partial<PortfolioItem> = {}\n): Promise<PortfolioItem> =>\n  axiosInstance.post(\n    `${CATALOG_API_BASE}/portfolio-items/${portfolioItemId}/copy/`,\n    copyObject\n  );\n\nexport const resetPortfolioItemIcon = (\n  portfolioItemId: string\n): AxiosPromise<void> => {\n  return axiosInstance.delete(\n    `${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}/icon/`\n  );\n};\n\nexport const uploadPortfolioItemIcon = (portfolioItemData: {\n  file: any;\n  icon_url: string;\n  portfolioItemId: string;\n}): Promise<void> | undefined => {\n  const data = new FormData();\n  data.append('file', portfolioItemData.file);\n  data.append('name', portfolioItemData.file.name);\n  data.append('source_ref', '1');\n  if (portfolioItemData) {\n    if (portfolioItemData?.icon_url && portfolioItemData.icon_url.length > 0) {\n      return axiosInstance.patch(\n        `${CATALOG_API_BASE}/portfolio_items/${portfolioItemData.portfolioItemId}/icon/`,\n        data,\n        {\n          headers: {\n            accept: 'application/json',\n            'Content-Type': `multipart/form-data; boundary=${\n              (data as AnyObject)._boundary\n            }`\n          }\n        }\n      );\n    } else {\n      return axiosInstance.post(\n        `${CATALOG_API_BASE}/portfolio_items/${portfolioItemData.portfolioItemId}/icon/`,\n        data,\n        {\n          headers: {\n            accept: 'application/json',\n            'Content-Type': `multipart/form-data; boundary=${\n              (data as AnyObject)._boundary\n            }`\n          }\n        }\n      );\n    }\n  } else {\n    return undefined;\n  }\n};\n\nexport interface GetPortfolioItemDetailParams {\n  portfolioItem: string;\n  source: string;\n}\nexport const getPortfolioItemDetail = (\n  params: GetPortfolioItemDetailParams\n): Promise<[PortfolioItem, Source]> =>\n  Promise.all([\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/portfolio_items/${params.portfolioItem}/`\n    ),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/sources/${params.source}/`)\n      .catch((error) => {\n        if (error.status === 404) {\n          return {\n            object: 'platform',\n            notFound: true\n          };\n        }\n\n        throw error;\n      })\n  ]);\n\n// TODO move to portfolio reducer\ninterface PortfolioReducerPlaceholder {\n  selectedPortfolio?: InternalPortfolio;\n  portfolios: ApiCollectionResponse<InternalPortfolio>;\n}\n\nexport const getPortfolioFromState = (\n  portfolioReducer: PortfolioReducerState,\n  portfolioId: string\n): InternalPortfolio | undefined =>\n  portfolioReducer.selectedPortfolio &&\n  portfolioReducer.selectedPortfolio.id === portfolioId\n    ? portfolioReducer.selectedPortfolio\n    : portfolioReducer.portfolios?.results?.find(\n        (portfolio) => String(portfolio.id) === portfolioId\n      );\n\nexport const undeletePortfolio = (\n  portfolioId: string,\n  restoreKey: string\n): Promise<Portfolio> =>\n  axiosInstance.post(\n    `${CATALOG_API_BASE}/portfolios/${portfolioId}/undelete/`,\n    {\n      restore_key: restoreKey\n    }\n  );\n","import {\n  getAxiosInstance,\n  getPortfolioApi,\n  getPortfolioItemApi\n} from '../shared/user-login';\nimport {\n  CATALOG_API_BASE,\n  CATALOG_INVENTORY_API_BASE\n} from '../../utilities/constants';\nimport { sanitizeValues } from '../shared/helpers';\nimport { defaultSettings } from '../shared/pagination';\nimport {\n  AnyObject,\n  ApiCollectionResponse,\n  Full,\n  InternalPortfolio,\n  RestorePortfolioItemConfig\n} from '../../types/common-types';\nimport {\n  Portfolio,\n  PortfolioItem,\n  RestoreKey\n} from '@redhat-cloud-services/catalog-client';\nimport { AxiosPromise, AxiosResponse } from 'axios';\nimport { Store } from 'redux';\nimport { Source } from '@redhat-cloud-services/sources-client';\nimport { GetReduxState } from '../../types/redux';\n\nconst axiosInstance = getAxiosInstance();\nconst portfolioApi = getPortfolioApi();\nconst portfolioItemApi = getPortfolioItemApi();\n\nexport const listPortfolios = (\n  filters: AnyObject = {},\n  { limit, offset, sortDirection = 'asc' } = defaultSettings\n): Promise<ApiCollectionResponse<InternalPortfolio>> => {\n  const filterQuery = Object.entries(filters).reduce((acc, [key, value]) => {\n    if (!value) {\n      return acc;\n    }\n\n    const partial =\n      key === 'sort_by'\n        ? `sort_by=${value}:${sortDirection}`\n        : `filter[${key}][contains_i]=${value}`;\n    return `${acc}&${partial}`;\n  }, '');\n  return (axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios?limit=${limit}&offset=${offset}${filterQuery}`\n  ) as unknown) as Promise<ApiCollectionResponse<InternalPortfolio>>;\n};\n\nexport const listPortfolioItems = (\n  limit = 50,\n  offset = 0,\n  filter = ''\n): Promise<ApiCollectionResponse<PortfolioItem>> => {\n  return axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n    )\n    .then(\n      (portfolioItems: ApiCollectionResponse<PortfolioItem & AnyObject>) => {\n        const portfolioReference = portfolioItems.data.reduce<AnyObject>(\n          (acc, curr, index) =>\n            curr.portfolio_id\n              ? {\n                  ...acc,\n                  [curr.portfolio_id]: acc[curr.portfolio_id]\n                    ? [...acc[curr.portfolio_id], index]\n                    : [index]\n                }\n              : acc,\n          {}\n        );\n        return axiosInstance\n          .get<ApiCollectionResponse<Portfolio>>(\n            `${CATALOG_API_BASE}/portfolios?${Object.keys(portfolioReference)\n              .map((id) => `filter[id][]=${id}`)\n              .join('&')}`\n          )\n          .then(({ data }) => ({\n            portfolioItems,\n            portfolioReference,\n            portfolios: data\n          }));\n      }\n    )\n    .then(({ portfolioItems, portfolioReference, portfolios }) => {\n      portfolios.forEach(\n        ({ id, name }) =>\n          id &&\n          portfolioReference[id] &&\n          portfolioReference[id].forEach((portfolioItemIndex: number) => {\n            portfolioItems.data[portfolioItemIndex].portfolioName = name;\n          })\n      );\n      return portfolioItems;\n    });\n};\n\nexport const getPortfolio = (portfolioId: string): Promise<Portfolio> =>\n  portfolioApi.showPortfolio(portfolioId) as Promise<Portfolio>;\n\nexport const getPortfolioItemsWithPortfolio = (\n  portfolioId: string,\n  { limit, offset, filter = '' } = defaultSettings\n): Promise<ApiCollectionResponse<PortfolioItem>> =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios/${portfolioId}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n\n// TO DO - change to use the API call that adds multiple items to a portfolio when available\nexport const addPortfolio = async (\n  portfolioData: Partial<Portfolio>,\n  items?: string[]\n): Promise<Portfolio> => {\n  const portfolio = await portfolioApi.createPortfolio(portfolioData);\n  if (portfolio && items && items.length > 0) {\n    await addToPortfolio((portfolio as Portfolio).id!, items);\n  }\n\n  return (portfolio as unknown) as Promise<Portfolio>;\n};\n\nexport const addToPortfolio = (\n  portfolioId: string,\n  items: string[]\n): Promise<PortfolioItem[]> =>\n  Promise.all(\n    items.map((item) =>\n      portfolioItemApi.createPortfolioItem({\n        portfolio_id: portfolioId,\n        service_offering_ref: item\n      })\n    )\n  ) as Promise<PortfolioItem[]>;\n\nexport const updatePortfolio = (\n  { id, ...portfolioData }: Partial<Portfolio>,\n  store: Partial<Store>\n): AxiosPromise<Portfolio> =>\n  portfolioApi.updatePortfolio(\n    id!,\n    sanitizeValues(portfolioData, 'Portfolio', store)\n  );\n\nexport const removePortfolio = (\n  portfolioId: string\n): Promise<Full<RestoreKey>> =>\n  (portfolioApi.destroyPortfolio(portfolioId) as unknown) as Promise<\n    Full<RestoreKey>\n  >;\n\nexport const removePortfolioItem = (\n  portfolioItemId: string\n): AxiosPromise<RestoreKey> =>\n  portfolioItemApi.destroyPortfolioItem(portfolioItemId);\n\nexport const removePortfolioItems = (\n  portfolioItemIds: string[]\n): Promise<RestorePortfolioItemConfig[]> =>\n  Promise.all(\n    portfolioItemIds.map(async (itemId) => {\n      const { restore_key } = ((await removePortfolioItem(\n        itemId\n      )) as unknown) as RestorePortfolioItemConfig;\n      return {\n        portfolioItemId: itemId,\n        restoreKey: restore_key\n      };\n    })\n  );\n\nexport const fetchProviderControlParameters = (\n  portfolioItemId: string\n): Promise<AnyObject> =>\n  axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}/provider_control_parameters`\n    )\n    .then((data: AnyObject) => ({\n      required: [],\n      ...data,\n      properties: {\n        ...data.properties,\n        namespace: {\n          ...data.properties.namespace,\n          enum: Array.from(new Set([...data.properties.namespace.enum]))\n        }\n      }\n    }));\n\nexport const updatePortfolioItem = (\n  { id, ...portfolioItem }: Partial<PortfolioItem>,\n  store: { getState: GetReduxState }\n): Promise<PortfolioItem> =>\n  portfolioItemApi.updatePortfolioItem(\n    id!,\n    sanitizeValues(portfolioItem, 'PortfolioItem', store)\n  ) as Promise<PortfolioItem>;\n\nexport const fetchPortfolioByName = (\n  name = ''\n): Promise<ApiCollectionResponse<Portfolio>> =>\n  axiosInstance.get(`${CATALOG_API_BASE}/portfolios`, {\n    params: {\n      filter: {\n        name\n      }\n    }\n  });\n\nexport const restorePortfolioItems = (\n  restoreData: RestorePortfolioItemConfig[]\n): Promise<AxiosResponse<PortfolioItem>[]> =>\n  Promise.all(\n    restoreData.map(({ portfolioItemId, restoreKey }) =>\n      portfolioItemApi.unDeletePortfolioItem(portfolioItemId, {\n        restore_key: restoreKey\n      })\n    )\n  );\n\nexport const copyPortfolio = (portfolioId: string): Promise<Portfolio> =>\n  portfolioApi.postCopyPortfolio(portfolioId) as Promise<Portfolio>;\n\nexport const copyPortfolioItem = (\n  portfolioItemId: string,\n  copyObject: Partial<PortfolioItem> = {}\n): Promise<PortfolioItem> =>\n  portfolioItemApi.postCopyPortfolioItem(\n    portfolioItemId,\n    copyObject\n  ) as Promise<PortfolioItem>;\n\nexport const resetPortfolioItemIcon = (iconId: string): AxiosPromise<void> =>\n  axiosInstance.delete(`${CATALOG_API_BASE}/icons/${iconId}`);\n\nexport const uploadPortfolioItemIcon = (\n  portfolioItemId: string,\n  file: File,\n  iconId?: string\n): Promise<void> => {\n  const data = new FormData();\n  data.append('content', file, file.name);\n  if (iconId) {\n    return axiosInstance.patch(`${CATALOG_API_BASE}/icons/${iconId}`, data);\n  }\n\n  data.append('portfolio_item_id', portfolioItemId);\n  return axiosInstance.post(`${CATALOG_API_BASE}/icons`, data, {\n    headers: {\n      accept: 'application/json',\n      'Content-Type': `multipart/form-data; boundary=${\n        (data as AnyObject)._boundary\n      }`\n    }\n  });\n};\n\nexport interface GetPortfolioItemDetailParams {\n  portfolioItem: string;\n  source: string;\n}\nexport const getPortfolioItemDetail = (\n  params: GetPortfolioItemDetailParams\n): Promise<[PortfolioItem, Source]> =>\n  Promise.all([\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/portfolio_items/${params.portfolioItem}`\n    ),\n    axiosInstance\n      .get(`${CATALOG_INVENTORY_API_BASE}/sources/${params.source}`)\n      .catch((error) => {\n        if (error.status === 404) {\n          return {\n            object: 'platform',\n            notFound: true\n          };\n        }\n\n        throw error;\n      })\n  ]);\n\n// TODO move to portfolio reducer\ninterface PortfolioReducerPlaceholder {\n  selectedPortfolio?: InternalPortfolio;\n  portfolios: ApiCollectionResponse<InternalPortfolio>;\n}\n\nexport const getPortfolioFromState = (\n  portfolioReducer: PortfolioReducerPlaceholder,\n  portfolioId: string\n): InternalPortfolio | undefined =>\n  portfolioReducer.selectedPortfolio &&\n  portfolioReducer.selectedPortfolio.id === portfolioId\n    ? portfolioReducer.selectedPortfolio\n    : portfolioReducer.portfolios.data.find(({ id }) => id === portfolioId);\n\nexport const undeletePortfolio = (\n  portfolioId: string,\n  restoreKey: string\n): Promise<Portfolio> =>\n  axiosInstance.post(`${CATALOG_API_BASE}/portfolios/${portfolioId}/undelete`, {\n    restore_key: restoreKey\n  });\n\nexport const fetchPortfolioItem = async (\n  portfolioItemId: string\n): Promise<PortfolioItem> => {\n  const portfolioItem = await portfolioItemApi.showPortfolioItem(\n    portfolioItemId\n  );\n  return (portfolioItem as unknown) as PortfolioItem;\n};\n","/* eslint-disable react/prop-types */\n/**\n * No prop types in TSX files are needed.\n * Props are defined via interface\n */\nimport React from 'react';\nimport { Store } from 'redux';\nimport get from 'lodash/get';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nimport {\n  PORTFOLIO_ITEM_NULLABLE,\n  PORTFOLIO_NULLABLE\n} from '../../constants/nullable-attributes';\nimport { AnyObject, StringObject } from '../../types/common-types';\n\nexport const scrollToTop = (): void =>\n  document.getElementById('root')?.scrollTo({\n    behavior: 'smooth',\n    top: 0,\n    left: 0\n  });\n\nexport const filterServiceOffering = (\n  { display_name, name }: { display_name?: string; name: string },\n  filter: string\n): boolean => {\n  const filterAtrribute = display_name || name;\n  return filterAtrribute\n    .trim()\n    .toLowerCase()\n    .includes(filter.toLowerCase());\n};\n\nexport const udefinedToNull = (entity: AnyObject, keys: string[]): AnyObject =>\n  [...Object.keys(entity), ...keys].reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: entity[curr] === undefined ? null : entity[curr]\n    }),\n    {}\n  );\n\ninterface NullableMapper extends AnyObject {\n  PortfolioItem: string[];\n  Portfolio: string[];\n}\n\nconst nullableMapper: NullableMapper = {\n  PortfolioItem: PORTFOLIO_ITEM_NULLABLE,\n  Portfolio: PORTFOLIO_NULLABLE\n};\n\nexport const sanitizeValues = (\n  values: AnyObject,\n  entityType: string,\n  store: Partial<Store>\n): AnyObject => {\n  const schemas = store.getState!().openApiReducer.schema.components.schemas;\n  const permittedValues = Object.keys(values)\n    .filter((key) => !get(schemas, `${entityType}.properties.${key}.readOnly`))\n    .reduce(\n      (acc, curr) => (values[curr] ? { ...acc, [curr]: values[curr] } : acc),\n      {}\n    );\n  return udefinedToNull(permittedValues, nullableMapper[entityType]);\n};\n\nexport interface TimeAgoProps {\n  date: Date | string | number;\n}\n\nexport const TimeAgo: React.ComponentType<TimeAgoProps> = ({ date }) => (\n  <span key={`${date}`}>\n    <DateFormat date={date} type=\"relative\" />\n  </span>\n);\n\nconst sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nexport const readableBytes = (bytes: number): string => {\n  if (bytes === 0) {\n    return 'O B';\n  }\n\n  const i: number = Math.floor(Math.log(bytes) / Math.log(1024));\n\n  return `${Number((bytes / Math.pow(1024, i)).toFixed(2)) * 1} ${sizes[i]}`;\n};\n\nexport const hasPermission = (\n  userPermissions: StringObject[] = [],\n  permissions: string[] = []\n): boolean =>\n  permissions.every((permission) =>\n    userPermissions.find((item) => item.permission === permission)\n  );\n\nexport const stateToDisplay = (state?: string): boolean =>\n  state !== 'Completed' && state !== 'Ordered' && state !== 'Failed';\n\nexport const delay = (ms: number) =>\n  new Promise((resolve) => setTimeout(resolve, ms));\n","export const PORTFOLIO_ITEM_NULLABLE = [\n  'name',\n  'description',\n  'long_description',\n  'distributor',\n  'documentation_url',\n  'support_url'\n];\n\nexport const PORTFOLIO_NULLABLE = ['description'];\n","import { ApiMetadata } from '../../types/common-types';\nimport { SortByDirection } from '@patternfly/react-table';\n\nexport interface PaginationConfiguration extends ApiMetadata {\n  filter?: string;\n  sortDirection?: SortByDirection;\n}\n\nexport const defaultSettings: PaginationConfiguration = {\n  limit: 50,\n  offset: 0,\n  count: 0,\n  filter: ''\n};\n\nexport const getCurrentPage = (limit = 1, offset = 0): number =>\n  Math.floor(offset / limit) + 1;\n\nexport const getNewPage = (page = 1, offset = 0): number => (page - 1) * offset;\n","import axios, { AxiosResponse, AxiosRequestConfig, AxiosInstance } from 'axios';\nimport {\n  RequestApi,\n  WorkflowApi\n} from '@redhat-cloud-services/approval-client';\nimport {\n  PortfolioApi,\n  PortfolioItemApi,\n  OrderApi,\n  OrderItemApi,\n  IconApi,\n  ServicePlansApi,\n  OrderProcessApi\n} from '@redhat-cloud-services/catalog-client';\n\nimport {\n  CATALOG_API_BASE,\n  APPROVAL_API_BASE,\n  RBAC_API_BASE\n} from '../../utilities/constants';\nimport { GroupApi } from '@redhat-cloud-services/rbac-client';\nimport { stringify } from 'qs';\n// @ts-ignore\nimport Cookies from 'js-cookie';\n\nexport interface ApiHeaders extends Headers {\n  'x-rh-insights-request-id': string;\n}\n\nexport interface ErrorResponse {\n  headers?: ApiHeaders;\n}\n\nexport interface ServerError {\n  response?: ErrorResponse;\n  status?: 403 | 404 | 401 | 400 | 429 | 500 | 200; // not a complete list, replace by library with complete interface\n  config?: AxiosRequestConfig;\n}\n\nconst createAxiosInstance = () => {\n  if (localStorage.getItem('catalog_standalone')) {\n    const token = localStorage.getItem('catalog-token');\n    return axios.create({\n      paramsSerializer: (params) => stringify(params),\n      headers: { 'X-CSRFToken': Cookies.get('csrftoken') }\n    });\n  } else {\n    return axios.create({\n      paramsSerializer: (params) => stringify(params)\n    });\n  }\n};\n\nconst axiosInstance: AxiosInstance = createAxiosInstance();\n\nconst resolveInterceptor = (response: AxiosResponse) =>\n  response.data || response;\nconst errorInterceptor = (error: ServerError = {}) => {\n  const requestId = error.response?.headers?.['x-rh-insights-request-id'];\n  throw requestId ? { ...error.response, requestId } : { ...error.response };\n};\n\nconst unauthorizedInterceptor = (error: ServerError = {}) => {\n  if (error.status === 403) {\n    throw {\n      ...error,\n      redirect: {\n        pathname: '/403',\n        message: error.config?.url\n      }\n    };\n  }\n\n  throw error;\n};\n\n// check identity before each request. If the token is expired it will log out user\naxiosInstance.interceptors.request.use(async (config) => {\n  // eslint-disable-next-line no-undef\n  if (!localStorage.getItem('catalog_standalone')) {\n    await window.insights.chrome.auth.getUser();\n  } else {\n    const csrftoken = Cookies.get('csrftoken');\n    if (csrftoken) {\n      config.headers['X-CSRFToken'] = csrftoken;\n    }\n  }\n\n  return config;\n});\naxiosInstance.interceptors.response.use(resolveInterceptor);\naxiosInstance.interceptors.response.use(undefined, errorInterceptor);\naxiosInstance.interceptors.response.use(undefined, unauthorizedInterceptor);\n\nconst orderApi = new OrderApi(undefined, CATALOG_API_BASE, axiosInstance);\nconst orderItemApi = new OrderItemApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst portfolioApi = new PortfolioApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst portfolioItemApi = new PortfolioItemApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst requestsApi = new RequestApi(undefined, APPROVAL_API_BASE, axiosInstance);\nconst workflowApi = new WorkflowApi(\n  undefined,\n  APPROVAL_API_BASE,\n  axiosInstance\n);\nconst iconApi = new IconApi(undefined, CATALOG_API_BASE, axiosInstance);\nconst servicePlansApi = new ServicePlansApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\nconst orderProcessApi = new OrderProcessApi(\n  undefined,\n  CATALOG_API_BASE,\n  axiosInstance\n);\n\nexport function getPortfolioApi(): PortfolioApi {\n  return portfolioApi;\n}\n\nexport function getPortfolioItemApi(): PortfolioItemApi {\n  return portfolioItemApi;\n}\n\nexport function getOrderApi(): OrderApi {\n  return orderApi;\n}\n\nexport function getOrderItemApi(): OrderItemApi {\n  return orderItemApi;\n}\n\nexport function getRequestsApi(): RequestApi {\n  return requestsApi;\n}\n\nconst rbacGroupApi = new GroupApi(undefined, RBAC_API_BASE, axiosInstance);\n\nexport function getRbacGroupApi(): GroupApi {\n  return rbacGroupApi;\n}\n\nexport function getWorkflowApi(): WorkflowApi {\n  return workflowApi;\n}\n\nexport function getAxiosInstance(): AxiosInstance {\n  return axiosInstance;\n}\n\nexport function getIconApi(): IconApi {\n  return iconApi;\n}\n\nexport function getServicePlansApi(): ServicePlansApi {\n  return servicePlansApi;\n}\n\nexport function getOrderProcessApi(): OrderProcessApi {\n  return orderProcessApi;\n}\n\nconst grapqlInstance = axios.create();\n\ngrapqlInstance.interceptors.request.use(async (config) => {\n  if (!localStorage.getItem('catalog_standalone')) {\n    await window.insights.chrome.auth.getUser();\n  }\n\n  return config;\n});\n/**\n * Graphql does not return error response when the query fails.\n * Instead it returns 200 response with error object.\n * We catch it and throw it to trigger the notification middleware\n */\ngrapqlInstance.interceptors.response.use(({ data }) => {\n  if (data.errors) {\n    throw {\n      message: data.errors[0].errorType,\n      data: data.errors[0].message\n    };\n  }\n\n  return data;\n});\n\nexport function getGraphqlInstance(): AxiosInstance {\n  return grapqlInstance;\n}\n","import { defineMessages } from 'react-intl';\n\nconst actionMessages = defineMessages({\n  share: {\n    id: 'common.actions.share',\n    defaultMessage: 'Share'\n  },\n  copy: {\n    id: 'common.actions.copy',\n    defaultMessage: 'Copy'\n  },\n  setApproval: {\n    id: 'common.actions.setApproval',\n    defaultMessage: 'Set approval'\n  },\n  edit: {\n    id: 'common.actions.edit',\n    defaultMessage: 'Edit'\n  },\n  delete: {\n    id: 'common.actions.delete',\n    defaultMessage: 'Delete'\n  },\n  deleting: {\n    id: 'common.actions.deleting',\n    defaultMessage: 'Deleting'\n  },\n  save: {\n    id: 'common.actions.save',\n    defaultMessage: 'Save'\n  }\n});\n\nexport default actionMessages;\n","import { defineMessages } from 'react-intl';\n\nconst formsMessages = defineMessages({\n  orderProcessTitle: {\n    id: 'commonMessages.orderProcessesTitle',\n    defaultMessage: 'Order processes'\n  },\n  inviteGroup: {\n    id: 'forms.share.invite-group',\n    defaultMessage: 'Invite group'\n  },\n  groupsAccess: {\n    id: 'forms.groups-with-access',\n    defaultMessage: 'Groups with access'\n  },\n  groupsPlaceholder: {\n    id: 'share.groups.group.placeholder',\n    defaultMessage: 'Select group'\n  },\n  permissionsPlaceholder: {\n    id: 'share.groups.permissions.placeholder',\n    defaultMessage: 'Select permission'\n  },\n  nameTaken: {\n    id: 'forms.nameTaken',\n    defaultMessage: 'Name has already been taken'\n  },\n  currentBeforeProvision: {\n    id: 'forms.before.currentBeforeProducts',\n    defaultMessage: 'Current before provision'\n  },\n  currentAfterProvision: {\n    id: 'forms.after.currentAfterProvision',\n    defaultMessage: 'Current after provision'\n  },\n  beforeProvision: {\n    id: 'forms.before.beforeProvision',\n    defaultMessage: 'Before order'\n  },\n  afterProvision: {\n    id: 'forms.after.setAfterProvision',\n    defaultMessage: 'After order'\n  },\n  returnProvision: {\n    id: 'forms.after.setReturnProvision',\n    defaultMessage: 'Return'\n  },\n  productsPlaceholder: {\n    id: 'forms.product.placeholder',\n    defaultMessage: 'Select product'\n  }\n});\n\nexport default formsMessages;\n","import { defineMessages } from 'react-intl';\n\nconst labelMessages = defineMessages({\n  shared: {\n    id: 'common.labels.shared',\n    defaultMessage: 'Shared'\n  },\n  approvalProcessSet: {\n    id: 'common.labels.approval_process_set',\n    defaultMessage: 'Approval process set'\n  },\n  portfolio: {\n    id: 'common.labels.portfolio',\n    defaultMessage: 'Portfolio'\n  },\n  platform: {\n    id: 'common.labels.platform',\n    defaultMessage: 'Platform'\n  },\n  name: {\n    id: 'common.labels.name',\n    defaultMessage: 'Name'\n  },\n  description: {\n    id: 'common.labels.description',\n    defaultMessage: 'Description'\n  },\n  loading: {\n    id: 'common.labels.loading',\n    defaultMessage: 'Loading'\n  },\n  cancel: {\n    id: 'common.labels.cancel',\n    defaultMessage: 'Cancel'\n  },\n  save: {\n    id: 'common.labels.save',\n    defaultMessage: 'Save'\n  },\n  confirm: {\n    id: 'common.labels.confirm',\n    defaultMessage: 'Confirm'\n  },\n  create: {\n    id: 'common.labels.create',\n    defaultMessage: 'Create'\n  },\n  owner: {\n    id: 'common.labels.owner',\n    defaultMessage: 'Owner'\n  },\n  sortBy: {\n    id: 'common.labels.sort-by',\n    defaultMessage: 'Sort by'\n  },\n  updated: {\n    id: 'common.labels.updated',\n    defaultMessage: 'Updated'\n  },\n  created: {\n    id: 'common.states.created',\n    defaultMessage: 'Created'\n  },\n  product: {\n    id: 'common.labels.product',\n    defaultMessage: 'Product'\n  },\n  status: {\n    id: 'common.labels.id',\n    defaultMessage: 'Status'\n  },\n  enabled: {\n    id: 'common.labels.enabled',\n    defaultMessage: 'Enabled'\n  },\n  disabled: {\n    id: 'common.labels.disabled',\n    defaultMessage: 'Disabled'\n  },\n  available: {\n    id: 'common.labels.available',\n    defaultMessage: 'Available'\n  },\n  notAvailable: {\n    id: 'common.labels.not-available',\n    defaultMessage: 'Unavailable'\n  }\n});\n\nexport default labelMessages;\n","import { defineMessages } from 'react-intl';\n\nconst orderProcessesMessages = defineMessages({\n  noOrderProcessesDescription: {\n    id: 'order-proces.empty.no-order-processes',\n    defaultMessage: 'No order processes found.'\n  },\n  noOrderProcessesFilterDescription: {\n    id: 'order-process.empty.no-results',\n    defaultMessage: 'No order processes match your filter criteria.'\n  },\n  orderProcessesFilter: {\n    id: 'order-process.filter.placeholder',\n    defaultMessage: 'Filter by name'\n  },\n  title: {\n    id: 'order-process.toolbar.title',\n    defaultMessage: 'Order processes'\n  },\n  noOrderProcesses: {\n    id: 'order-process.toolbar.order-process',\n    defaultMessage: 'No order processes'\n  },\n  orderProcess: {\n    id: 'order-process.toolbar.order-process',\n    defaultMessage: 'Order process'\n  },\n  addProcessSuccessTitle: {\n    id: 'order-process.actions.addProcessSuccessTitle',\n    defaultMessage: 'Success adding order process'\n  },\n  addProcessSuccessDescription: {\n    id: 'order-process.actions.addProcessSuccessDescription',\n    defaultMessage: 'The order process was added successfully.'\n  },\n  setOrderProcess: {\n    id: 'order-process.actions.set',\n    defaultMessage: 'Set order processes'\n  },\n  setOrderProcessSubtitle: {\n    id: 'order-process.tags.set',\n    defaultMessage: 'Set order processes for <strong>{object}</strong>'\n  },\n  currentOrderProcesses: {\n    id: 'order-process.set-order-process.current',\n    defaultMessage: 'Current order processes'\n  },\n  setOrderProcessNotificationTitle: {\n    id: 'order-process.notification.title',\n    defaultMessage: 'Success updating order process'\n  },\n  setOrderProcessNotificationDescription: {\n    id: 'order-process.notification.description',\n    defaultMessage:\n      // eslint-disable-next-line max-len\n      '{linked, plural, =0 {} other {{linked, number} {linked, plural, one {order process was} other {order processes were}} linked.}} {unlinked, plural, =0{} other {{unlinked, number} {unlinked, plural, one {order process was} other {order processes were}} unlinked.}}'\n  },\n  orderProcessName: {\n    id: 'order-process.name',\n    defaultMessage: 'Order process name'\n  },\n  enterOrderProcessName: {\n    id: 'order-process.enterName',\n    defaultMessage: 'Enter a name for the order process'\n  },\n  orderProcessType: {\n    id: 'order-process-type',\n    defaultMessage: 'Order process type'\n  },\n  orderProcesses: {\n    id: 'order-process.orderProcesses',\n    defaultMessage: 'order processes'\n  },\n  removeProcessSuccessTitle: {\n    id: 'order-process.removeProcessSuccessTitle',\n    defaultMessage: 'Success removing order process'\n  },\n  removeProcessSuccessDescription: {\n    id: 'order-process.removeProcessSuccessDescription',\n    defaultMessage: 'The order process was removed successfully.'\n  },\n  removeProcessesSuccessTitle: {\n    id: 'order-process.removeProcessesSuccessTitle',\n    defaultMessage: 'Success removing order processes'\n  },\n  removeProcessesSuccessDescription: {\n    id: 'order-process.removeProcessesSuccessDescription',\n    defaultMessage: 'The selected order processes were removed successfully.'\n  },\n  deleteOrderProcess: {\n    id: 'order-process.deleteProcessAriaMenu',\n    defaultMessage: 'Delete order processes'\n  },\n  removeProcessTitle: {\n    id: 'order-process.removeProcessTitle',\n    defaultMessage:\n      'Delete {count, plural, one {order process} other {order processes}}?'\n  },\n  removeProcessAriaLabel: {\n    id: 'order-process.removeProcessAriaLabel',\n    defaultMessage:\n      'Delete {count, plural, one {order process} other {order processes}} modal'\n  },\n  removeProcessDescription: {\n    id: 'order-process.removeProcessDescription',\n    defaultMessage: '{name} will be removed.'\n  },\n  updateProcessSuccessTitle: {\n    id: 'order-process.actions.updateProcessSuccessTitle',\n    defaultMessage: 'Order process {name} was updated'\n  },\n  updateOrderProcess: {\n    id: 'order-process.actions.updateOrderProcess',\n    defaultMessage: 'Edit order process'\n  },\n  createOrderProcess: {\n    id: 'order-process.actions.createOrderProcess',\n    defaultMessage: 'Create order process'\n  }\n});\n\nexport default orderProcessesMessages;\n","import { defineMessages } from 'react-intl';\n\nconst portfolioMessages = defineMessages({\n  portfoliosTitle: {\n    id: 'portfolios.heading.title',\n    defaultMessage: 'Portfolios'\n  },\n  removeItemsNotification: {\n    id: 'portfolio.notifications.remove.portfolio-items',\n    defaultMessage:\n      'You have removed {count, plural, one {} other {<b>{count, number}</b>}} {count, plural, one {<b>{productName}</b>} other {<b>products</b>} } from the {portfolioName} portfolio. <a>Undo</a> if this was a mistake.' // eslint-disable-line max-len\n  },\n  removePortfolioNotification: {\n    id: 'portfolio.notifications.remove.portfolio',\n    defaultMessage:\n      'The portfolio was removed successfully. You can <a>Undo</a> this action if this was a mistake.'\n  },\n  modalCreateTitle: {\n    id: 'portfolio.modal.add.title',\n    defaultMessage: 'Create portfolio'\n  },\n  modalEditTitle: {\n    id: 'portfolio.modal.edit.title',\n    defaultMessage: 'Edit portfolio'\n  },\n  addProducts: {\n    id: 'portfolio.empty.add.products',\n    defaultMessage: 'Add products'\n  },\n  emptyNoProducts: {\n    id: 'portfolio.empty.no-products',\n    defaultMessage: 'Products will appear here when added to your portfolio.'\n  },\n  portfoliosPlaceholder: {\n    id: 'portfolios.filters.placeholder',\n    defaultMessage: 'Filter by portfolio'\n  },\n  portfoliosNoData: {\n    id: 'portfolios.empty.noData.title',\n    defaultMessage: 'Create a portfolio'\n  },\n  portfoliosNoDataDescription: {\n    id: 'portfolios.empty.noData.description',\n    defaultMessage:\n      'You currently have no portfolios. Create a portfolio to get started.'\n  },\n  portfolioRemoveDescription: {\n    id: 'portfolio.remove.modal.description',\n    defaultMessage:\n      'This action will permanently delete portfolio {name} and its data.'\n  },\n  portfolioRemoveTitle: {\n    id: 'portfolio.remove.modal.title',\n    defaultMessage: 'Delete Portfolio?'\n  },\n  portfolioSharePermissions: {\n    id: 'portfolio.share.modal.permissions',\n    defaultMessage: 'Select the share permissions'\n  },\n  portfolioShareGroups: {\n    id: 'portfolio.share.modal.groups',\n    defaultMessage: 'Select a group'\n  },\n  portfolioShareTitle: {\n    id: 'portfolio.share.modal.title',\n    defaultMessage: 'Share portfolio'\n  },\n  portfolioShareApply: {\n    id: 'portfolio.share.modal.apply',\n    defaultMessage: 'Apply'\n  },\n  portfolioShareDescription: {\n    id: 'portfolio.share.modal.description',\n    defaultMessage: 'Share <strong>{name}</strong> portfolio'\n  },\n  addProducstPlatformTitle: {\n    id: 'portfolio.add.platform.title.empty',\n    defaultMessage: 'Please choose platform'\n  },\n  addProducstPlatformDescription: {\n    id: 'portfolio.add.platform.description.empty',\n    defaultMessage:\n      'In order to select products for your portfolio you must choose platform first'\n  },\n  addProducstFilterTitle: {\n    id: 'portfolio.add.platform.filter.empty',\n    defaultMessage: 'No products match filter parameters'\n  },\n  copyItemTitle: {\n    id: 'portfolio.item.copy',\n    defaultMessage: 'Copy product'\n  },\n  portfolioItemSurvey: {\n    id: 'portfolio.item.detail.actions.survey',\n    defaultMessage: 'Edit survey'\n  },\n  portfolioItemOrder: {\n    id: 'portfolio.item.detail.actions.order',\n    defaultMessage: 'Order'\n  },\n  portfolioItemIconTitle: {\n    id: 'portfolio.item.icon.upload.notification',\n    defaultMessage: 'Icon upload error'\n  },\n  portfolioItemOverview: {\n    id: 'portfolio.item.detail.overview',\n    defaultMessage: 'Overview'\n  },\n  portfolioItemSupport: {\n    id: 'portfolio.item.detail.support',\n    defaultMessage: 'Learn more'\n  },\n  portfolioItemDocumentation: {\n    id: 'portfolio.item.detail.documentation',\n    defaultMessage: 'Documentation'\n  },\n  portfolioItemDocLink: {\n    id: 'portfolio.item.detail.doclink',\n    defaultMessage: 'Doc link'\n  },\n  restoreSurvey: {\n    id: 'portfolio.item.survey.restore',\n    defaultMessage: 'Restore to Ansible Tower version'\n  },\n  surveyTitle: {\n    id: 'portfolio.item.survey.edit',\n    defaultMessage: 'Editing survey: {name}'\n  },\n  sourceUnavaiable: {\n    id: 'portfolio.detail.alert.source.unavailable',\n    defaultMessage: 'The platform for this product is unavailable'\n  },\n  objectUnavaiable: {\n    id: 'portfolio.detail.alert.unavailable',\n    defaultMessage: 'The {object} for this product is no longer available'\n  },\n  backToProducts: {\n    id: 'portfolio.detail.back-to-products',\n    defaultMessage: 'Back to products'\n  },\n  editProduct: {\n    id: 'portfolio.item.edit.title',\n    defaultMessage: 'Edit product'\n  },\n  shareTooltip: {\n    id: 'portfolio.share.add.tooltip',\n    defaultMessage: 'Share portfolio with selected group and permissions.'\n  },\n  shareErrorMissingGroup: {\n    id: 'portfolio.share.add.missing-group',\n    defaultMessage: 'Select group to share portfolio.'\n  },\n  shareErrorMissingPermission: {\n    id: 'portfolio.share.add.missing-permission',\n    defaultMessage: 'Assign permissions to selected group.'\n  },\n  shareErrorMissingData: {\n    id: 'portfolio.share.add.missing-data',\n    defaultMessage: 'Choose group and permissions.'\n  },\n  shareDuplicate: {\n    id: 'portfolio.share.add.duplicate',\n    defaultMessage: 'Portfolio is already shared with this group.'\n  },\n  noShares: {\n    id: 'portfolio.share.add.no-shares',\n    defaultMessage: 'To share portfolio select a group and permissions'\n  },\n  shareGroupsAccess: {\n    id: 'share.groups.access',\n    defaultMessage: 'Groups with access'\n  },\n  shareSuccessTitle: {\n    id: 'share.notification.success.title',\n    defaultMessage: 'Share permissions were updated successfully'\n  },\n  shareSuccessTitleOnlySharing: {\n    id: 'share.notification.success.share.title',\n    defaultMessage: 'Success sharing portfolio'\n  },\n  shareSuccessTitleOnlyUnsharing: {\n    id: 'share.notification.success.unshare.title',\n    defaultMessage: 'Success unsharing portfolio'\n  },\n  shareSuccessTitleOnlyChaningPermissions: {\n    id: 'share.notification.success.change-permission.title',\n    defaultMessage: 'Success changing permissions'\n  },\n  shareSuccessDescriptionOnlySharing: {\n    id: 'share.notification.success.share.description',\n    defaultMessage: 'Portfolio <b>{name}</b> was shared with {group}.'\n  },\n  shareSuccessDescriptionOnlyUnsharing: {\n    id: 'share.notification.success.unshare.description',\n    defaultMessage: 'Portfolio <b>{name}</b> was unshared with {group}.'\n  },\n  shareSuccessDescriptionOnlyChaningPermissions: {\n    id: 'share.notification.success.change-permission.description',\n    defaultMessage: 'Share permissions for <b>{group}</b> were updated.'\n  },\n  shareSuccessTwoGroup: {\n    id: 'share.notification.success.two-groups',\n    defaultMessage: '{group1} and {group2}'\n  },\n  shareSuccessMultipleGroups: {\n    id: 'share.notification.success.multiple-groups',\n    defaultMessage: '{count} groups'\n  },\n  addSuccessTitle: {\n    id: 'portfolio.add.success.title',\n    defaultMessage: 'Success adding portfolio'\n  },\n  addSuccessDescription: {\n    id: 'portfolio.add.success.description',\n    defaultMessage: 'Portfolio <b>{name}</b> was added successfully.'\n  }\n});\n\nexport default portfolioMessages;\n","import React, { ReactNode } from 'react';\n\nexport const Bold = (chunks: ReactNode | ReactNode[]): ReactNode => (\n  <b>{chunks}</b>\n);\n","/* eslint-disable react/prop-types */\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport {\n  Bullseye,\n  Card,\n  CardBody,\n  DataList,\n  DataListCell,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells,\n  Grid,\n  GridItem,\n  Gallery,\n  GalleryItem,\n  Form,\n  FormGroup,\n  TextContent,\n  Text,\n  TextVariants,\n  ActionGroup,\n  Button\n} from '@patternfly/react-core';\nimport styled, { keyframes } from 'styled-components';\nimport { StyledToolbar } from '../styled-components/toolbars';\nimport actionMessages from '../../messages/actions.messages';\nimport formsMessages from '../../messages/forms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst wave = keyframes`\n  0% {\n    transform: translateX(-100%);\n  }\n  60% {\n    transform: translateX(100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n`;\n\nconst Skeleton = ({ component: Component = 'span', ...props }) => {\n  return (\n    <SkeletonContainer {...props}>\n      <Component />\n    </SkeletonContainer>\n  );\n};\n\nSkeleton.propTypes = {\n  component: PropTypes.string\n};\n\nconst SkeletonContainer = styled.div<{\n  width?: number | string;\n  height?: number | string;\n  secondaryColor?: string;\n}>`\n  & > * {\n    position: relative;\n    overflow: hidden;\n    width: ${({ width }) =>\n      width ? `${width}${typeof width === 'number' ? 'px' : ''}` : '100%'};\n    height: ${({ height }) =>\n      height ? `${height}${typeof height === 'number' ? 'px' : ''}` : '20px'};\n    display: block;\n    border-radius: 3px;\n    background-color: ${({ secondaryColor }) =>\n      secondaryColor ? secondaryColor : '#f3f3f3'};\n    &:after {\n      animation: 2s ${wave} linear 0.5s infinite;\n      background: linear-gradient(90deg, transparent, #ecebeb, transparent);\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      top: 0;\n      transform: translateX(-100%);\n      z-index: 1;\n    }\n  }\n`;\n\nexport interface CardLoaderProps {\n  items?: number;\n}\nexport const CardLoader: React.ComponentType<CardLoaderProps> = ({\n  items = 13\n}) => (\n  <Grid hasGutter>\n    <GridItem sm={12}>\n      <Section type=\"content\">\n        <Gallery hasGutter>\n          {[...Array(items)].map((_item, index) => (\n            <GalleryItem key={index}>\n              <Card style={{ height: 350 }}>\n                <CardBody>\n                  <Skeleton height={70} width=\"85%\" className=\"pf-u-mb-lg\" />\n                  <Skeleton height={5} width=\"90%\" className=\"pf-u-mb-sm\" />\n                  <Skeleton height={5} width=\"100%\" className=\"pf-u-mb-sm\" />\n                  <Skeleton height={5} width=\"76%\" className=\"pf-u-mb-sm\" />\n                </CardBody>\n              </Card>\n            </GalleryItem>\n          ))}\n        </Gallery>\n      </Section>\n    </GridItem>\n  </Grid>\n);\n\nexport const AppPlaceholder: React.ElementType = () => (\n  <section className=\"pf-u-m-0 pf-u-p-0 pf-l-page__main-section pf-c-page__main-section\">\n    <Skeleton height={32} className=\"pf-u-p-lg global-primary-background\" />\n    <div className=\"pf-u-mt-lg\">\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    </div>\n  </section>\n);\n\nexport const ToolbarTitlePlaceholder: React.ElementType = () => (\n  <Skeleton height={30} />\n);\n\nconst ProducLoaderColumn = styled.div`\n  width: 100%;\n  max-width: 250px;\n`;\n\nexport const ProductLoaderPlaceholder: React.ElementType = () => (\n  <Fragment>\n    <Skeleton height={70} className=\"pf-u-mb-xl\" />\n    <ProducLoaderColumn>\n      {[...Array(3)].map((_, index) => (\n        <Fragment key={index}>\n          <Skeleton height={8} className=\"pf-u-mb-sm\" />\n          <Skeleton height={8} className=\"pf-u-ml-md pf-u-mb-sm\" width=\"60%\" />\n          <Skeleton height={8} className=\"pf-u-ml-md pf-u-mb-sm\" width=\"50%\" />\n          <Skeleton height={8} className=\"pf-u-mb-sm\" width=\"80%\" />\n          <Skeleton height={8} className=\"pf-u-ml-md pf-u-mb-lg\" width=\"40%\" />\n        </Fragment>\n      ))}\n    </ProducLoaderColumn>\n  </Fragment>\n);\n\nexport interface IconPlaceholderProps {\n  height: number;\n}\nexport const IconPlaceholder: React.ElementType<IconPlaceholderProps> = ({\n  height\n}) => (\n  <svg height={height} width={height}>\n    <circle cx={height / 2} cy={height / 2} r={height / 2} fill=\"#ecebeb\" />\n  </svg>\n);\n\nexport const FormItemLoader: React.ElementType = () => (\n  <Skeleton height={38} className=\"pf-u-mb-lg\" />\n);\n\nexport const ShareLoader: React.ElementType = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Form>\n      <TextContent>\n        <Text component={TextVariants.small}>\n          {formatMessage(formsMessages.inviteGroup)}\n        </Text>\n      </TextContent>\n      <FormGroup fieldId=\"1\">\n        <FormItemLoader />\n      </FormGroup>\n      <TextContent>\n        <Text component={TextVariants.small}>\n          {formatMessage(formsMessages.groupsAccess)}\n        </Text>\n      </TextContent>\n      <FormGroup fieldId=\"3\">\n        <FormItemLoader />\n      </FormGroup>\n      <FormGroup fieldId=\"4\">\n        <FormItemLoader />\n      </FormGroup>\n    </Form>\n  );\n};\n\nexport const WorkflowLoader: React.ElementType = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <Form>\n      <FormGroup fieldId=\"2\">\n        <FormItemLoader />\n      </FormGroup>\n      <ActionGroup>\n        <Button variant=\"primary\" isDisabled>\n          {formatMessage(actionMessages.save)}\n        </Button>\n      </ActionGroup>\n    </Form>\n  );\n};\n\nexport interface ListLoaderProps {\n  items?: number;\n}\nexport const ListLoader: React.ElementType<ListLoaderProps> = ({\n  items = 5\n}) => (\n  <DataList aria-label=\"list-loader\" aria-labelledby=\"datalist-placeholder\">\n    {[...Array(items)].map((_item, index) => (\n      <DataListItem key={index} aria-labelledby=\"datalist-item-placeholder\">\n        <DataListItemRow aria-label=\"datalist-item-placeholder-row\">\n          <DataListItemCells\n            dataListCells={[\n              <DataListCell key=\"1\">\n                <Skeleton height={67} />\n              </DataListCell>\n            ]}\n          />\n        </DataListItemRow>\n      </DataListItem>\n    ))}\n  </DataList>\n);\n\nexport const OrderDetailToolbarPlaceholder: React.ElementType = () => (\n  <Skeleton height={70} />\n);\n\nexport const PlatformToolbarPlaceholder: React.ElementType = () => (\n  <StyledToolbar className=\"pf-u-pr-lg pf-u-pl-lg pf-u-pb-md pf-u-pt-md\">\n    <Skeleton height={36} width={300} />\n  </StyledToolbar>\n);\n","import React, { ComponentType } from 'react';\nimport styled from 'styled-components';\nimport { LevelItem, LevelItemProps } from '@patternfly/react-core';\n\nexport interface StyledLevelItemProps extends LevelItemProps {\n  alignStart?: boolean;\n  alignSelf?: string;\n  grow?: boolean;\n}\n\nexport const StyledLevelItem = styled<ComponentType<StyledLevelItemProps>>(\n  ({ alignStart, alignSelf, grow, ...props }) => <LevelItem {...props} />\n)`\n  align-self: ${({ alignSelf }) => (alignSelf ? alignSelf : 'inherit')};\n  align-items: ${({ alignStart }) =>\n    alignStart ? 'flex-start !important' : 'inherit'};\n  flex: ${({ grow }) => (grow ? '1' : '0')};\n`;\n","import styled from 'styled-components';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\n\nconst SpinnerWrapper = styled(Bullseye)`\n  overflow: hidden;\n`;\n\nexport default SpinnerWrapper;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Level, Toolbar, ToolbarGroup } from '@patternfly/react-core';\nimport { ToolbarProps } from '@patternfly/react-core';\n\nexport type StyledToolbarProps = Omit<\n  Omit<ToolbarProps & { noWrap?: boolean; className?: string }, 'ref'>,\n  'as'\n>;\nexport const StyledToolbar = styled<React.ComponentType<StyledToolbarProps>>(\n  ({ noWrap, ...props }) => <Toolbar {...props} />\n)`\n  background-color: #ffffff;\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  position: relative;\n  top: 1px;\n  .pf-c-toolbar__content-section {\n    flex-wrap: ${({ noWrap }) => (noWrap ? 'nowrap' : 'wrap')};\n  }\n`;\n\nexport const StyledToolbarGroup = styled(ToolbarGroup)`\n  flex-wrap: wrap;\n`;\n\nexport const TopToolbarWrapper = styled.div`\n  background-color: #ffffff;\n  .pf-c-breadcrumb__item {\n    .active {\n      color: var(--pf-c-breadcrumb__item--Color);\n      text-decoration: none;\n      pointer-events: none;\n    }\n  }\n  h1,\n  h2 {\n    margin-bottom: 0 !important;\n    @supports not (overflow-wrap: anywhere) {\n      word-break: break-all;\n    }\n    @supports (overflow-wrap: anywhere) {\n      overflow-wrap: anywhere;\n    }\n  }\n  .top-toolbar-title {\n    min-width: 200px;\n  }\n  .top-toolbar-title-description {\n    word-break: break-word;\n  }\n  .ins-c-primary-toolbar {\n    padding: 0;\n  }\n  .pf-c-toolbar__content {\n    padding: 0;\n  }\n`;\n\nexport const TopToolbarTitleContainer = styled(Level)`\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n  }\n`;\n","export const FETCH_SERVICE_PLANS = 'FETCH_SERVICE_PLANS';\nexport const FETCH_SERVICE_PLAN_PARAMETERS = 'FETCH_SERVICE_PLAN_PARAMETERS';\nexport const SUBMIT_SERVICE_ORDER = 'SUBMIT_SERVICE_ORDER';\nexport const SET_SELECTED_PLAN = 'SET_SELECTED_PLAN';\nexport const LIST_ORDERS = 'LIST_ORDERS';\nexport const CANCEL_ORDER = 'CANCEL_ORDER';\nexport const SET_ORDERS = 'SET_ORDERS';\nexport const FETCH_ORDERS = 'FETCH_ORDERS';\n\nexport const FETCH_PLATFORM = 'FETCH_PLATFORM';\nexport const FETCH_PLATFORMS = 'FETCH_PLATFORMS';\nexport const FETCH_PLATFORM_ITEMS = 'FETCH_PLATFORM_ITEMS';\nexport const FETCH_PLATFORM_ITEM = 'FETCH_PLATFORM_ITEM';\nexport const FETCH_MULTIPLE_PLATFORM_ITEMS = 'FETCH_MULTIPLE_PLATFORM_ITEMS';\nexport const FILTER_PLATFORM_ITEMS = 'FILTER_PLATFORM_ITEMS';\nexport const FETCH_PLATFORM_INVENTORIES = 'FETCH_PLATFORM_INVENTORIES';\nexport const SET_INVENTORIES_LOADING_STATE = 'SET_INVENTORIES_LOADING_STATE';\n\nexport const FETCH_PORTFOLIOS = 'FETCH_PORTFOLIOS';\nexport const FETCH_PORTFOLIO_ITEM = 'FETCH_PORTFOLIO_ITEM';\nexport const FETCH_PORTFOLIO_ITEMS = 'FETCH_PORTFOLIO_ITEMS';\nexport const FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO =\n  'FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO';\nexport const FETCH_PORTFOLIO = 'FETCH_PORTFOLIO';\nexport const FILTER_PORTFOLIO_ITEMS = 'FILTER_PORTFOLIO_ITEMS';\nexport const ADD_PORTFOLIO = 'ADD_PORTFOLIO';\nexport const ADD_TO_PORTFOLIO = 'ADD_TO_PORTFOLIO';\nexport const UPDATE_PORTFOLIO = 'UPDATE_PORTFOLIO';\nexport const REMOVE_PORTFOLIO = 'REMOVE_PORTFOLIO';\nexport const REMOVE_PORTFOLIO_ITEMS = 'REMOVE_PORTFOLIO_ITEMS';\nexport const RESTORE_PORTFOLIO_ITEMS = 'RESTORE_PORTFOLIO_ITEMS';\nexport const RESET_SELECTED_PORTFOLIO = 'RESET_SELECTED_PORTFOLIO';\nexport const ADD_TEMPORARY_PORTFOLIO = 'ADD_TEMPORARY_PORTFOLIO';\nexport const UPDATE_TEMPORARY_PORTFOLIO = 'UPDATE_TEMPORARY_PORTFOLIO';\nexport const DELETE_TEMPORARY_PORTFOLIO = 'DELETE_TEMPORARY_PORTFOLIO';\nexport const RESTORE_PORTFOLIO_PREV_STATE = 'RESTORE_PORTFOLIO_PREV_STATE';\nexport const SET_PORTFOLIO_ITEMS = 'SET_PORTFOLIO_ITEMS';\nexport const UPDATE_TEMPORARY_PORTFOLIO_ITEM =\n  'UPDATE_TEMPORARY_PORTFOLIO_ITEM';\nexport const RESTORE_PORTFOLIO_ITEM_PREV_STATE =\n  'RESTORE_PORTFOLIO_ITEM_PREV_STATE';\nexport const UPDATE_PORTFOLIO_ITEM = 'UPDATE_PORTFOLIO_ITEM';\n\nexport const FETCH_RBAC_GROUPS = 'FETCH_RBAC_GROUPS';\n\nexport const SHARE_PORTFOLIO = 'SHARE_PORTFOLIO';\nexport const UNSHARE_PORTFOLIO = 'UNSHARE_PORTFOLIO';\nexport const QUERY_PORTFOLIO = 'QUERY_PORTFOLIO';\n\nexport const FETCH_REQUESTS = 'FETCH_REQUESTS';\nexport const FETCH_ORDER_ITEMS = 'FETCH_ORDER_ITEMS';\n\n/**\n * Global redux loading state\n */\nexport const SET_LOADING_STATE = 'SET_LOADING_STATE';\n\n/**\n * OpenApi action\n */\nexport const SET_OPENAPI_SCHEMA = '@@open-api/set-schema';\n\n/**\n * Orders actions\n * TODO Prefix existing action types\n */\nexport const SET_ORDER_DETAIL = '@@orders/set-order-detail';\nexport const FETCH_APPROVAL_REQUESTS = '@@orders/fetch-order-requests';\nexport const FETCH_ORDER_PROVISION_ITEMS =\n  '@@orders/FETCH_ORDER_PROVISION_ITEMS';\nexport const SET_ORDER_PROVISION_ITEMS = '@@orders/SET_ORDER_PROVISION_ITEMS';\n/*\n * Portfolio actions\n */\nexport const SELECT_PORTFOLIO_ITEM = '@@portfolio/SELECT_PORTFOLIO_ITEM';\n\n/**\n * Sources actions\n */\nexport const FETCH_SERVICE_OFFERING = '@@sources/FETCH_SERVICE_OFFERING';\nexport const SET_SOURCETYPE_ICONS = '@@sources/SET_SOURCETYPE_ICONS';\nexport const REFRESH_PLATFORM = '@@sources/REFRESH_PLATFORM';\n\n/**\n * Breadcrumbs actions\n */\nexport const INITIALIZE_BREADCRUMBS = '@@breadcrumbs/INITIALIZE_BREADCRUMBS';\n\n/**\n * In18l actions\n */\n\nexport const INITIALIZE_I18N = '@@i18l/INITIALIZE_I18N';\n\n/*\n * Order processes actions\n */\nexport const FETCH_ORDER_PROCESSES = '@@order_processes/FETCH_ORDER_PROCESSES';\nexport const ADD_ORDER_PROCESS = '@@order_processes/ADD_ORDER_PROCESS';\nexport const SORT_ORDER_PROCESSES = '@@order_processes/SORT_ORDER_PROCESSES';\nexport const SET_ORDER_PROCESS = '@@order_processes/SET_ORDER_PROCESS';\nexport const FETCH_ORDER_PROCESS = '@@order_processes/FETCH_ORDER_PROCESS';\nexport const REMOVE_ORDER_PROCESS = '@@order_processes/REMOVE_ORDER_PROCESS';\nexport const REMOVE_ORDER_PROCESSES =\n  '@@order_processes/REMOVE_ORDER_PROCESSES';\nexport const SET_FILTER_ORDER_PROCESSES =\n  '@@order_processes/SET_FILTER_ORDER_PROCESSES';\nexport const UPDATE_ORDER_PROCESS = '@@order_process/UPDATE_ORDER_PROCESS';\n","import { createAsyncActionTypes } from './action-types-helper';\n\nconst APPROVAL_PREFIX = '@@catalog/approval/';\n\nconst asyncActionTypes = [\n  'FETCH_WORKFLOWS',\n  'UPDATE_WORKFLOWS',\n  'RESOLVE_WORKFLOWS'\n];\n\nexport const ASYNC_ACTIONS = {\n  ...createAsyncActionTypes(asyncActionTypes, APPROVAL_PREFIX)\n};\n","import { StringObject } from '../../types/common-types';\n\nexport const createAsyncActionTypes = (\n  actionTypes: string[],\n  prefix: string\n): StringObject =>\n  actionTypes\n    .reduce<string[]>(\n      (acc, curr) => [\n        ...acc,\n        ...[curr, `${curr}_PENDING`, `${curr}_FULFILLED`, `${curr}_REJECTED`]\n      ],\n      []\n    )\n    .reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: `${prefix}${curr}`\n      }),\n      {}\n    );\n","import * as ActionTypes from '../action-types';\nimport * as OrderProcessHelper from '../../helpers/order-process/order-process-helper';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\nimport { PaginationConfiguration } from '../../helpers/shared/pagination';\nimport { Dispatch } from 'redux';\nimport { AsyncMiddlewareAction, GetReduxState } from '../../types/redux';\nimport {\n  ApiCollectionResponse,\n  ReduxAction,\n  SortBy\n} from '../../types/common-types';\nimport { Order, OrderProcess } from '@redhat-cloud-services/catalog-client';\nimport { IntlShape } from 'react-intl';\nimport { ResourceObject } from '@redhat-cloud-services/approval-client';\nimport { AxiosResponse } from 'axios';\n\nexport const fetchOrderProcesses = (\n  pagination?: PaginationConfiguration,\n  sortBy?: SortBy\n) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): AsyncMiddlewareAction<ApiCollectionResponse<Order>> => {\n  const { orderProcesses } = getState().orderProcessReducer;\n\n  let finalPagination = pagination;\n\n  if (!pagination && orderProcesses) {\n    const { limit, offset } = orderProcesses.meta;\n    finalPagination = { limit, offset };\n  }\n\n  return dispatch({\n    type: ActionTypes.FETCH_ORDER_PROCESSES,\n    meta: {\n      ...finalPagination,\n      sortBy,\n      filter: pagination?.filterValue || '',\n      storeState: true,\n      stateKey: 'orderProcesses'\n    },\n    payload: OrderProcessHelper.listOrderProcesses(\n      pagination?.filterValue,\n      sortBy,\n      finalPagination\n    )\n  });\n};\n\nexport const fetchOrderProcess = (\n  id: string\n): { payload: Promise<AxiosResponse<OrderProcess>>; type: string } => ({\n  type: ActionTypes.FETCH_ORDER_PROCESS,\n  payload: OrderProcessHelper.fetchOrderProcess(id)\n});\n\nexport const addOrderProcess = (\n  processData: OrderProcess,\n  intl: IntlShape\n): AsyncMiddlewareAction<[\n  OrderProcess,\n  OrderProcess | undefined,\n  OrderProcess | undefined\n]> => ({\n  type: ActionTypes.ADD_ORDER_PROCESS,\n  payload: OrderProcessHelper.addOrderProcess(processData),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: intl.formatMessage(\n          orderProcessesMessages.addProcessSuccessTitle\n        ),\n        description: intl.formatMessage(\n          orderProcessesMessages.addProcessSuccessDescription\n        )\n      }\n    }\n  }\n});\n\nexport const updateOrderProcess = (\n  processId: string,\n  initialData: Partial<OrderProcess> | undefined,\n  newData: Partial<OrderProcess>,\n  intl: IntlShape\n): AsyncMiddlewareAction<[\n  AxiosResponse<OrderProcess> | unknown,\n  AxiosResponse<OrderProcess> | unknown,\n  AxiosResponse<OrderProcess> | unknown\n]> => ({\n  type: ActionTypes.UPDATE_ORDER_PROCESS,\n  payload: OrderProcessHelper.updateOrderProcess(\n    processId,\n    initialData,\n    newData\n  ),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: intl.formatMessage(\n          orderProcessesMessages.updateProcessSuccessTitle,\n          { name: newData.name }\n        )\n      }\n    }\n  }\n});\n\nexport const sortOrderProcesses = (sortBy: string): ReduxAction<string> => ({\n  type: ActionTypes.SORT_ORDER_PROCESSES,\n  payload: sortBy\n});\n\nexport const setOrderProcess = (\n  toTag: string[],\n  toUntag: string[],\n  resourceType: ResourceObject\n): AsyncMiddlewareAction<AxiosResponse<void>[]> => ({\n  type: ActionTypes.SET_ORDER_PROCESS,\n  payload: OrderProcessHelper.setOrderProcesses(toTag, toUntag, resourceType)\n});\n\nexport const removeOrderProcess = (\n  orderProcess: string,\n  intl: IntlShape\n): AsyncMiddlewareAction<void> => ({\n  type: ActionTypes.REMOVE_ORDER_PROCESS,\n  payload: OrderProcessHelper.removeOrderProcess(orderProcess),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: intl.formatMessage(\n          orderProcessesMessages.removeProcessSuccessTitle\n        ),\n        description: intl.formatMessage(\n          orderProcessesMessages.removeProcessSuccessDescription\n        )\n      }\n    }\n  }\n});\n\nexport const removeOrderProcesses = (\n  orderProcesses: string[],\n  intl: IntlShape\n): AsyncMiddlewareAction<AxiosResponse<void>[]> => ({\n  type: ActionTypes.REMOVE_ORDER_PROCESSES,\n  payload: OrderProcessHelper.removeOrderProcesses(orderProcesses),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: intl.formatMessage(\n          orderProcessesMessages.removeProcessesSuccessTitle\n        ),\n        description: intl.formatMessage(\n          orderProcessesMessages.removeProcessesSuccessDescription\n        )\n      }\n    }\n  }\n});\n","import React, { ReactNode } from 'react';\nimport {\n  ADD_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nimport * as ActionTypes from '../action-types';\nimport * as PortfolioHelper from '../../helpers/portfolio/portfolio-helper-s';\nimport {\n  defaultSettings,\n  PaginationConfiguration\n} from '../../helpers/shared/pagination';\n\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport { FormattedMessage } from 'react-intl';\nimport { AsyncMiddlewareAction, GetReduxState } from '../../types/redux';\nimport {\n  ApiCollectionResponse,\n  Full,\n  InternalPortfolio,\n  NotificationPayload,\n  ReduxAction,\n  RestorePortfolioItemConfig,\n  StringObject\n} from '../../types/common-types-s';\nimport {\n  Portfolio,\n  PortfolioItem\n} from '@redhat-cloud-services/catalog-client';\nimport { AnyAction, Dispatch } from 'redux';\nimport { AnyObject } from '@data-driven-forms/react-form-renderer';\nimport { ServiceOffering } from '@redhat-cloud-services/sources-client';\n\nexport const doFetchPortfolios = ({\n  filters,\n  ...options\n} = defaultSettings): AsyncMiddlewareAction<ApiCollectionResponse<\n  InternalPortfolio\n>> => ({\n  type: ActionTypes.FETCH_PORTFOLIOS,\n  meta: { ...defaultSettings, filters, ...options },\n  payload: PortfolioHelper.listPortfolios(filters, options)\n});\n\nexport const fetchPortfolios = (options?: PaginationConfiguration) => (\n  dispatch: Dispatch\n): AsyncMiddlewareAction<ApiCollectionResponse<Portfolio>> =>\n  dispatch(\n    doFetchPortfolios(options) as Full<\n      AsyncMiddlewareAction<ApiCollectionResponse<Portfolio>>\n    >\n  );\n\nexport const fetchPortfoliosWithState = (\n  filters: StringObject,\n  options = defaultSettings\n) => (\n  dispatch: Dispatch\n): AsyncMiddlewareAction<ApiCollectionResponse<Portfolio>> =>\n  dispatch(\n    doFetchPortfolios({\n      ...options,\n      filters,\n      storeState: true,\n      stateKey: 'portfolio'\n    }) as Full<AsyncMiddlewareAction<ApiCollectionResponse<Portfolio>>>\n  );\n\nexport const fetchPortfolioItems = (\n  filter = '',\n  options = defaultSettings\n): AsyncMiddlewareAction<ApiCollectionResponse<PortfolioItem>> => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS,\n  meta: { filter, storeState: true, stateKey: 'products' },\n  payload: PortfolioHelper.listPortfolioItems(\n    options?.limit,\n    options?.offset,\n    filter\n  )\n});\n\nexport const fetchPortfolioItemsWithPortfolio = (\n  portfolioId: string,\n  options = defaultSettings\n): AsyncMiddlewareAction<ApiCollectionResponse<PortfolioItem>> => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolioItemsWithPortfolio(portfolioId, options),\n  meta: {\n    ...options,\n    storeState: true,\n    stateKey: 'portfolioItems'\n  }\n});\n\nexport const fetchSelectedPortfolio = (\n  id: string\n): AsyncMiddlewareAction<Portfolio> => ({\n  type: ActionTypes.FETCH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolio(id)\n});\n\nexport const addPortfolio = (\n  portfolioData: Partial<Portfolio>,\n  notification: AnyObject\n): AsyncMiddlewareAction<Portfolio> => ({\n  type: ActionTypes.ADD_PORTFOLIO,\n  payload: PortfolioHelper.addPortfolio(portfolioData),\n  meta: {\n    notifications: {\n      fulfilled: notification\n    }\n  }\n});\n\nexport const addToPortfolio = (\n  portfolioId: string,\n  items: ServiceOffering[]\n): AsyncMiddlewareAction<PortfolioItem[]> => ({\n  type: ActionTypes.ADD_TO_PORTFOLIO,\n  payload: PortfolioHelper.addToPortfolio(portfolioId, items),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding products',\n        description: 'Products were successfully added to portfolio.'\n      }\n    }\n  }\n});\n\nexport const updatePortfolio = (\n  portfolioData: Partial<Portfolio>,\n  options?: PaginationConfiguration\n) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): Promise<NotificationPayload> => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO,\n    payload: portfolioData\n  });\n\n  return PortfolioHelper.updatePortfolio(portfolioData, { getState })\n    .then(() =>\n      dispatch(\n        doFetchPortfolios(options) as Full<\n          AsyncMiddlewareAction<ApiCollectionResponse<Portfolio>>\n        >\n      )\n    )\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          dismissable: true,\n          variant: 'success',\n          title: 'Success updating portfolio',\n          description: 'The portfolio was updated successfully.'\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const undoRemovePortfolio = (\n  portfolioId: string,\n  restoreKey: string,\n  viewState: PaginationConfiguration\n) => (\n  dispatch: Dispatch\n): Promise<AsyncMiddlewareAction<ApiCollectionResponse<Portfolio>>> => {\n  dispatch({ type: CLEAR_NOTIFICATIONS });\n  return PortfolioHelper.undeletePortfolio(portfolioId, restoreKey).then(\n    (portfolio) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: `Portfolio ${portfolio.name} has been restored`\n        }\n      });\n      return dispatch(\n        (fetchPortfolios(viewState) as unknown) as Full<\n          AsyncMiddlewareAction<ApiCollectionResponse<Portfolio>>\n        >\n      );\n    }\n  );\n};\n\nexport const removePortfolio = (portfolioId: string, viewState = {}) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): AsyncMiddlewareAction<AnyAction> => {\n  dispatch({\n    type: ActionTypes.DELETE_TEMPORARY_PORTFOLIO,\n    payload: portfolioId\n  });\n  return dispatch({\n    type: ActionTypes.REMOVE_PORTFOLIO,\n    payload: PortfolioHelper.removePortfolio(portfolioId)\n      .then(({ restore_key }) => {\n        dispatch({\n          type: ADD_NOTIFICATION,\n          payload: {\n            variant: 'success',\n            title: 'Success removing portfolio',\n            dismissable: true,\n            description: (\n              <FormattedMessage\n                {...portfolioMessages.removePortfolioNotification}\n                values={{\n                  // eslint-disable-next-line react/display-name\n                  a: (chunks: ReactNode) => (\n                    <a\n                      href=\"#\"\n                      id={`undo-delete-portfolio-${portfolioId}`}\n                      onClick={(event) => {\n                        event.preventDefault();\n                        dispatch(\n                          (undoRemovePortfolio(\n                            portfolioId,\n                            restore_key,\n                            viewState\n                          ) as unknown) as AnyAction\n                        );\n                      }}\n                    >\n                      {chunks}\n                    </a>\n                  )\n                }}\n              />\n            )\n          }\n        });\n        const { meta, results } = getState().portfolioReducer.portfolios;\n        return dispatch(\n          (fetchPortfolios({\n            ...viewState,\n            ...meta,\n            offset: results?.length === 0 ? 0 : meta?.offset\n          }) as unknown) as AnyAction\n        );\n      })\n      .catch((error) => {\n        dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n        throw error;\n      })\n  });\n};\n\nexport const undoRemoveProductsFromPortfolio = (\n  restoreData: RestorePortfolioItemConfig[],\n  portfolioId: string\n) => (dispatch: Dispatch): Promise<AnyAction> => {\n  dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_PENDING` });\n  return PortfolioHelper.restorePortfolioItems(restoreData)\n    .then(() =>\n      dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .then(() => dispatch({ type: CLEAR_NOTIFICATIONS }))\n    .then(() =>\n      dispatch(\n        (fetchPortfolioItemsWithPortfolio(portfolioId) as unknown) as AnyAction\n      )\n    )\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: 'Products have been restored'\n        }\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const removeProductsFromPortfolio = (\n  portfolioItems: string[],\n  portfolioName: string,\n  firstSelectedProduct: PortfolioItem\n) => (\n  dispatch: (...args: any[]) => Promise<void>,\n  getState: GetReduxState\n): Promise<void> => {\n  dispatch({\n    type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_PENDING`\n  });\n  const {\n    portfolioReducer: {\n      portfolioItems: { meta },\n      selectedPortfolio: { id: portfolioId }\n    }\n  } = getState();\n  return PortfolioHelper.removePortfolioItems(portfolioItems)\n    .then((data) =>\n      dispatch(\n        fetchPortfolioItemsWithPortfolio(portfolioId!, {\n          offset: 0,\n          limit: meta.limit,\n          filter: ''\n        })\n      ).then(() => data)\n    )\n    .then((data) =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'Products removed',\n          dismissable: true,\n          description: (\n            <FormattedMessage\n              {...portfolioMessages.removeItemsNotification}\n              values={{\n                count: portfolioItems.length,\n                productName: firstSelectedProduct.name,\n                portfolioName,\n                // eslint-disable-next-line react/display-name\n                b: (chunks: ReactNode) => <b>{chunks}</b>,\n                // eslint-disable-next-line react/display-name\n                a: (chunks: ReactNode) => (\n                  <a\n                    href=\"#\"\n                    id={`restore-portfolio-item-${portfolioId}`}\n                    onClick={(event) => {\n                      event.preventDefault();\n                      dispatch(\n                        undoRemoveProductsFromPortfolio(data, portfolioId!)\n                      );\n                    }}\n                  >\n                    {chunks}\n                  </a>\n                )\n              }}\n            />\n          )\n        }\n      })\n    )\n    .then(() =>\n      dispatch({ type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const copyPortfolio = (id: string) => (\n  dispatch: Dispatch\n): Promise<Portfolio | AnyAction> => {\n  dispatch({ type: 'COPY_PORTFOLIO_PENDING' });\n  return PortfolioHelper.copyPortfolio(id)\n    .then((portfolio) => {\n      dispatch({ type: 'COPY_PORTFOLIO_FULFILLED' });\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a portfolio',\n          description: `${portfolio.name} has been copied.`,\n          dismissable: true\n        }\n      });\n      return portfolio;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_REJECTED', payload: err })\n    );\n};\n\nexport const copyPortfolioItem = (\n  portfolioItemId: string,\n  copyObject: Partial<PortfolioItem>,\n  newPortfolio: Full<Portfolio>\n) => (dispatch: Dispatch): Promise<PortfolioItem | AnyAction> => {\n  return PortfolioHelper.copyPortfolioItem(portfolioItemId, copyObject)\n    .then((data) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a product',\n          description: `${data.name} has been copied into ${newPortfolio.name}`,\n          dismissable: true\n        }\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_ITEM_REJECTED', payload: err })\n    );\n};\n\nexport const resetSelectedPortfolio = (): AnyAction => ({\n  type: ActionTypes.RESET_SELECTED_PORTFOLIO\n});\n\nexport const updatePortfolioItem = (values: Partial<PortfolioItem>) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): Promise<NotificationPayload | AnyAction> => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM,\n    payload: values\n  });\n  return PortfolioHelper.updatePortfolioItem(values, { getState })\n    .then((data) => {\n      dispatch({ type: ActionTypes.UPDATE_PORTFOLIO_ITEM, payload: data });\n      return data;\n    })\n    .then((item) =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: `Product \"${item.name}\" was successfully updated`,\n          dismissable: true\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_ITEM_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const getPortfolioItemDetail = (\n  params: PortfolioHelper.GetPortfolioItemDetailParams\n) => (dispatch: Dispatch): Promise<AnyAction> => {\n  dispatch({ type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_PENDING` });\n  return PortfolioHelper.getPortfolioItemDetail(params).then(\n    ([portfolioItem, source]) =>\n      dispatch({\n        type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_FULFILLED`,\n        payload: {\n          portfolioItem,\n          source\n        }\n      })\n  );\n};\n\nexport const setOrFetchPortfolio = (\n  id: string,\n  portfolios: ApiCollectionResponse<Portfolio>\n): { type: string; payload: Portfolio } | AsyncMiddlewareAction<Portfolio> => {\n  const existingPorfolio = portfolios?.results?.find(\n    (portfolio) => portfolio.id === id\n  );\n\n  if (existingPorfolio) {\n    return {\n      type: `${ActionTypes.FETCH_PORTFOLIO}_FULFILLED`,\n      payload: existingPorfolio\n    };\n  }\n\n  return fetchSelectedPortfolio(id);\n};\n","import React, { ReactNode } from 'react';\nimport {\n  ADD_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nimport * as ActionTypes from '../action-types';\nimport * as PortfolioHelper from '../../helpers/portfolio/portfolio-helper';\nimport {\n  defaultSettings,\n  PaginationConfiguration\n} from '../../helpers/shared/pagination';\n\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport { FormattedMessage } from 'react-intl';\nimport { AsyncMiddlewareAction, GetReduxState } from '../../types/redux';\nimport {\n  ApiCollectionResponse,\n  Full,\n  NotificationPayload,\n  ReduxAction,\n  RestorePortfolioItemConfig,\n  StringObject\n} from '../../types/common-types';\nimport {\n  Portfolio,\n  PortfolioItem\n} from '@redhat-cloud-services/catalog-client';\nimport { AnyAction, Dispatch } from 'redux';\nimport { AnyObject } from '@data-driven-forms/react-form-renderer';\n\nexport const doFetchPortfolios = ({\n  filters,\n  ...options\n} = defaultSettings): AsyncMiddlewareAction<Full<\n  ApiCollectionResponse<Portfolio>\n>> => ({\n  type: ActionTypes.FETCH_PORTFOLIOS,\n  meta: { ...defaultSettings, filters, ...options },\n  payload: PortfolioHelper.listPortfolios(filters, options)\n});\n\nexport const fetchPortfolios = (options?: PaginationConfiguration) => (\n  dispatch: Dispatch\n): AsyncMiddlewareAction<ApiCollectionResponse<Portfolio>> =>\n  dispatch(\n    doFetchPortfolios(options) as Full<\n      AsyncMiddlewareAction<ApiCollectionResponse<Portfolio>>\n    >\n  );\n\nexport const fetchPortfoliosWithState = (\n  filters: StringObject,\n  options = defaultSettings\n) => (\n  dispatch: Dispatch\n): AsyncMiddlewareAction<ApiCollectionResponse<Portfolio>> =>\n  dispatch(\n    doFetchPortfolios({\n      ...options,\n      filters,\n      storeState: true,\n      stateKey: 'portfolio'\n    }) as Full<AsyncMiddlewareAction<ApiCollectionResponse<Portfolio>>>\n  );\n\nexport const fetchPortfolioItems = (\n  filter = '',\n  options = defaultSettings\n): AsyncMiddlewareAction<ApiCollectionResponse<PortfolioItem>> => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS,\n  meta: { filter, storeState: true, stateKey: 'products' },\n  payload: PortfolioHelper.listPortfolioItems(\n    options.limit,\n    options.offset,\n    filter\n  )\n});\n\nexport const fetchPortfolioItemsWithPortfolio = (\n  portfolioId: string,\n  options = defaultSettings\n): AsyncMiddlewareAction<ApiCollectionResponse<PortfolioItem>> => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolioItemsWithPortfolio(portfolioId, options),\n  meta: {\n    ...options,\n    storeState: true,\n    stateKey: 'portfolioItems'\n  }\n});\n\nexport const fetchSelectedPortfolio = (\n  id: string\n): AsyncMiddlewareAction<Portfolio> => ({\n  type: ActionTypes.FETCH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolio(id)\n});\n\nexport const addPortfolio = (\n  portfolioData: Partial<Portfolio>,\n  notification: AnyObject\n): AsyncMiddlewareAction<Portfolio> => ({\n  type: ActionTypes.ADD_PORTFOLIO,\n  payload: PortfolioHelper.addPortfolio(portfolioData),\n  meta: {\n    notifications: {\n      fulfilled: notification\n    }\n  }\n});\n\nexport const addToPortfolio = (\n  portfolioId: string,\n  items: string[]\n): AsyncMiddlewareAction<PortfolioItem[]> => ({\n  type: ActionTypes.ADD_TO_PORTFOLIO,\n  payload: PortfolioHelper.addToPortfolio(portfolioId, items),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding products',\n        description: 'Products were successfully added to portfolio.'\n      }\n    }\n  }\n});\n\nexport const updatePortfolio = (\n  portfolioData: Partial<Portfolio>,\n  options?: PaginationConfiguration\n) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): Promise<NotificationPayload> => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO,\n    payload: portfolioData\n  });\n\n  return PortfolioHelper.updatePortfolio(portfolioData, { getState })\n    .then(() =>\n      dispatch(\n        doFetchPortfolios(options) as Full<\n          AsyncMiddlewareAction<ApiCollectionResponse<Portfolio>>\n        >\n      )\n    )\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          dismissable: true,\n          variant: 'success',\n          title: 'Success updating portfolio',\n          description: 'The portfolio was updated successfully.'\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const undoRemovePortfolio = (\n  portfolioId: string,\n  restoreKey: string,\n  viewState: PaginationConfiguration\n) => (\n  dispatch: Dispatch\n): Promise<AsyncMiddlewareAction<ApiCollectionResponse<Portfolio>>> => {\n  dispatch({ type: CLEAR_NOTIFICATIONS });\n  return PortfolioHelper.undeletePortfolio(portfolioId, restoreKey).then(\n    (portfolio) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: `Portfolio ${portfolio.name} has been restored`\n        }\n      });\n      return dispatch(\n        (fetchPortfolios(viewState) as unknown) as Full<\n          AsyncMiddlewareAction<ApiCollectionResponse<Portfolio>>\n        >\n      );\n    }\n  );\n};\n\nexport const removePortfolio = (portfolioId: string, viewState = {}) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): AsyncMiddlewareAction<AnyAction> => {\n  dispatch({\n    type: ActionTypes.DELETE_TEMPORARY_PORTFOLIO,\n    payload: portfolioId\n  });\n  return dispatch({\n    type: ActionTypes.REMOVE_PORTFOLIO,\n    payload: PortfolioHelper.removePortfolio(portfolioId)\n      .then(({ restore_key }) => {\n        dispatch({\n          type: ADD_NOTIFICATION,\n          payload: {\n            variant: 'success',\n            title: 'Success removing portfolio',\n            dismissable: true,\n            description: (\n              <FormattedMessage\n                {...portfolioMessages.removePortfolioNotification}\n                values={{\n                  // eslint-disable-next-line react/display-name\n                  a: (chunks: ReactNode) => (\n                    <a\n                      href=\"#\"\n                      id={`undo-delete-portfolio-${portfolioId}`}\n                      onClick={(event) => {\n                        event.preventDefault();\n                        dispatch(\n                          (undoRemovePortfolio(\n                            portfolioId,\n                            restore_key,\n                            viewState\n                          ) as unknown) as AnyAction\n                        );\n                      }}\n                    >\n                      {chunks}\n                    </a>\n                  )\n                }}\n              />\n            )\n          }\n        });\n        const { meta, data } = getState().portfolioReducer.portfolios;\n        return dispatch(\n          (fetchPortfolios({\n            ...viewState,\n            ...meta,\n            offset: data.length === 0 ? 0 : meta.offset\n          }) as unknown) as AnyAction\n        );\n      })\n      .catch((error) => {\n        dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n        throw error;\n      })\n  });\n};\n\nexport const selectPortfolioItem = (\n  portfolioItem: Full<PortfolioItem>\n): ReduxAction<PortfolioItem> => ({\n  type: ActionTypes.SELECT_PORTFOLIO_ITEM,\n  payload: portfolioItem\n});\n\nexport const undoRemoveProductsFromPortfolio = (\n  restoreData: RestorePortfolioItemConfig[],\n  portfolioId: string\n) => (dispatch: Dispatch): Promise<AnyAction> => {\n  dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_PENDING` });\n  return PortfolioHelper.restorePortfolioItems(restoreData)\n    .then(() =>\n      dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .then(() => dispatch({ type: CLEAR_NOTIFICATIONS }))\n    .then(() =>\n      dispatch(\n        (fetchPortfolioItemsWithPortfolio(portfolioId) as unknown) as AnyAction\n      )\n    )\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: 'Products have been restored'\n        }\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const removeProductsFromPortfolio = (\n  portfolioItems: string[],\n  portfolioName: string,\n  firstSelectedProduct: PortfolioItem\n) => (\n  dispatch: (...args: any[]) => Promise<void>,\n  getState: GetReduxState\n): Promise<void> => {\n  dispatch({\n    type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_PENDING`\n  });\n  const {\n    portfolioReducer: {\n      portfolioItems: { meta },\n      selectedPortfolio: { id: portfolioId }\n    }\n  } = getState();\n  return PortfolioHelper.removePortfolioItems(portfolioItems)\n    .then((data) =>\n      dispatch(\n        fetchPortfolioItemsWithPortfolio(portfolioId!, {\n          offset: 0,\n          limit: meta.limit,\n          filter: ''\n        })\n      ).then(() => data)\n    )\n    .then((data) => {\n      return dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'Products removed',\n          dismissable: true,\n          description: (\n            <FormattedMessage\n              {...portfolioMessages.removeItemsNotification}\n              values={{\n                count: portfolioItems.length,\n                productName: firstSelectedProduct.name,\n                portfolioName,\n                // eslint-disable-next-line react/display-name\n                b: (chunks: ReactNode) => <b>{chunks}</b>,\n                // eslint-disable-next-line react/display-name\n                a: (chunks: ReactNode) => (\n                  <a\n                    href=\"#\"\n                    id={`restore-portfolio-item-${portfolioId}`}\n                    onClick={(event) => {\n                      event.preventDefault();\n                      dispatch(\n                        undoRemoveProductsFromPortfolio(data, portfolioId!)\n                      );\n                    }}\n                  >\n                    {chunks}\n                  </a>\n                )\n              }}\n            />\n          )\n        }\n      });\n    })\n    .then(() =>\n      dispatch({ type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const copyPortfolio = (id: string) => (\n  dispatch: Dispatch\n): Promise<Portfolio | AnyAction> => {\n  dispatch({ type: 'COPY_PORTFOLIO_PENDING' });\n  return PortfolioHelper.copyPortfolio(id)\n    .then((portfolio) => {\n      dispatch({ type: 'COPY_PORTFOLIO_FULFILLED' });\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a portfolio',\n          description: `${portfolio.name} has been copied.`,\n          dismissable: true\n        }\n      });\n      return portfolio;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_REJECTED', payload: err })\n    );\n};\n\nexport const copyPortfolioItem = (\n  portfolioItemId: string,\n  copyObject: Partial<PortfolioItem>,\n  newPortfolio: Full<Portfolio>\n) => (dispatch: Dispatch): Promise<PortfolioItem | AnyAction> => {\n  return PortfolioHelper.copyPortfolioItem(portfolioItemId, copyObject)\n    .then((data) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a product',\n          description: `${data.name} has been copied into ${newPortfolio.name}`,\n          dismissable: true\n        }\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_ITEM_REJECTED', payload: err })\n    );\n};\n\nexport const resetSelectedPortfolio = (): AnyAction => ({\n  type: ActionTypes.RESET_SELECTED_PORTFOLIO\n});\n\nexport const updatePortfolioItem = (values: Partial<PortfolioItem>) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): Promise<NotificationPayload | AnyAction> => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM,\n    payload: values\n  });\n  return PortfolioHelper.updatePortfolioItem(values, { getState })\n    .then((data) => {\n      dispatch({ type: ActionTypes.UPDATE_PORTFOLIO_ITEM, payload: data });\n      return data;\n    })\n    .then((item) =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: `Product \"${item.name}\" was successfully updated`,\n          dismissable: true\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_ITEM_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const getPortfolioItemDetail = (\n  params: PortfolioHelper.GetPortfolioItemDetailParams\n) => (dispatch: Dispatch): Promise<AnyAction> => {\n  dispatch({ type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_PENDING` });\n  return PortfolioHelper.getPortfolioItemDetail(params).then(\n    ([portfolioItem, source]) =>\n      dispatch({\n        type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_FULFILLED`,\n        payload: {\n          portfolioItem,\n          source\n        }\n      })\n  );\n};\n\nexport const setOrFetchPortfolio = (\n  id: string,\n  portfolios: ApiCollectionResponse<Portfolio>\n): { type: string; payload: Portfolio } | AsyncMiddlewareAction<Portfolio> => {\n  const existingPorfolio = portfolios?.data?.find(\n    (portfolio) => portfolio.id === id\n  );\n\n  if (existingPorfolio) {\n    return {\n      type: `${ActionTypes.FETCH_PORTFOLIO}_FULFILLED`,\n      payload: existingPorfolio\n    };\n  }\n\n  return fetchSelectedPortfolio(id);\n};\n","import { createBrowserHistory } from 'history';\n\nconst pathName = window.location.pathname.split('/');\npathName.shift();\n\nlet prefix = '/';\nif (pathName[0] === 'beta') {\n  prefix = `/${pathName.shift()}/`;\n}\n\n/**\n * Make sure that the [1] fragment is present in the pathname.\n * Otherwise we could end up with /undefined/ which will be transformed by the router to //\n */\nconst basename = `${prefix}${pathName[0]}/${pathName[1] ? pathName[1] : ''}`;\nconst catalogHistory = createBrowserHistory({\n  basename\n});\n\nexport const release = prefix;\nexport default catalogHistory;\n","/* eslint-disable react/prop-types */\nimport React, { ComponentType, useContext } from 'react';\nimport { Route, RouteProps } from 'react-router-dom';\nimport UserContext from '../user-context';\nimport { hasPermission } from '../helpers/shared/helpers';\nimport { UnauthorizedRedirect } from '../smart-components/error-pages/error-redirects';\nimport { AnyObject } from '../types/common-types';\n\nconst ReidrectOnAccess: React.ComponentType<RouteProps> = (props) => (\n  <Route {...props}>\n    <UnauthorizedRedirect />\n  </Route>\n);\n\nconst hasCapability = (\n  userCapabilities: AnyObject,\n  requiredCapabilities?: string[] | string\n) =>\n  requiredCapabilities\n    ? Array.isArray(requiredCapabilities)\n      ? requiredCapabilities.some(\n          (capability) => userCapabilities[capability] !== false\n        )\n      : userCapabilities[requiredCapabilities] !== false\n    : true;\n\nexport interface CatalogRouteProps extends RouteProps {\n  permissions?: string[];\n  userCapabilities?: AnyObject;\n  requiredCapabilities?: string | string[];\n}\nconst CatalogRoute: ComponentType<CatalogRouteProps> = ({\n  permissions = [],\n  userCapabilities = {},\n  requiredCapabilities,\n  ...props\n}) => {\n  const { permissions: userPermissions } = useContext(UserContext);\n  const hasAccess =\n    hasCapability(userCapabilities, requiredCapabilities) &&\n    hasPermission(userPermissions, permissions);\n\n  if (!hasAccess) {\n    return <ReidrectOnAccess {...props} />;\n  }\n\n  return <Route {...props} />;\n};\n\nexport default CatalogRoute;\n","import { AnyObject } from '../types/common-types';\n\nexport const decodeState = (encodedState: string): AnyObject | undefined => {\n  try {\n    return JSON.parse(atob(decodeURIComponent(encodedState)));\n  } catch (error) {\n    return undefined;\n  }\n};\n\nexport const encodeState = (state: AnyObject, stateKey?: string): string => {\n  const stateObject = stateKey\n    ? {\n        ...decodeState(window.location.hash),\n        [stateKey]: state\n      }\n    : state;\n  try {\n    return encodeURIComponent(btoa(JSON.stringify(stateObject)));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'View state is not a valid JSON, state has will not be generated. View state: ',\n      state\n    );\n    return '';\n  }\n};\n","import { AnyObject } from '../types/common-types';\nimport { decodeState } from './uri-state-manager';\n\nconst useInitialUriHash = (): AnyObject | undefined =>\n  decodeState(window.location.hash.substring(1));\n\nexport default useInitialUriHash;\n","/* eslint-disable react/prop-types */\nimport React, { useState, useRef, ReactNode } from 'react';\nimport useFieldApi, {\n  ValidatorType\n} from '@data-driven-forms/react-form-renderer/use-field-api';\nimport {\n  InternalSelect,\n  SelectOption\n} from '@data-driven-forms/pf4-component-mapper/select';\nimport {\n  FormGroup,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { defineMessage } from 'react-intl';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport { SelectOptions } from '../../types/common-types';\n\nconst createOptions = (\n  options: SelectOptions,\n  inputValue: string,\n  isRequired: boolean,\n  optionsMessages: { choose: ReactNode; none: ReactNode }\n): SelectOption[] => {\n  if (inputValue && isRequired) {\n    return options as SelectOption[];\n  }\n\n  const selectOptions = [...options];\n  return selectOptions.find(({ value }) => value === undefined)\n    ? ([...selectOptions] as SelectOption[])\n    : ([\n        { label: isRequired ? optionsMessages.choose : optionsMessages.none },\n        ...selectOptions\n      ] as SelectOption[]);\n};\n\ninterface SelectProps {\n  input: {\n    name: string;\n    onChange: (value: any) => void;\n    value: any;\n  };\n  id?: string;\n  label?: ReactNode;\n  options?: SelectOptions;\n  isReadOnly?: boolean;\n  isDisabled?: boolean;\n  isRequired?: boolean;\n  validated?: 'default' | 'success' | 'error';\n  multi?: boolean;\n  loadOptions?: (\n    search?: string,\n    lookupArguments?: any[]\n  ) => Promise<SelectOption[]>;\n  meta: { initial?: any };\n  onChange?: (...args: any[]) => unknown;\n}\nconst Select: React.ComponentType<SelectProps> = ({\n  input,\n  options = [],\n  isDisabled = false,\n  isRequired = false,\n  multi = false,\n  loadOptions,\n  meta,\n  ...rest\n}) => {\n  const formatMessage = useFormatMessage();\n  const optionsMessages = useRef<{\n    none: ReactNode;\n    choose: ReactNode;\n  }>({\n    none: formatMessage(\n      defineMessage({\n        id: 'forms.select.options.none',\n        defaultMessage: 'None'\n      })\n    ),\n    choose: formatMessage(\n      defineMessage({\n        id: 'forms.select.options.choose',\n        defaultMessage: 'Please choose'\n      })\n    )\n  });\n  const [initialFetch, setInitialFetch] = useState(true);\n  const formOptions = useFormApi();\n  let loadOptionsOverride = loadOptions;\n  if (loadOptions && meta.initial) {\n    const lookupArguments = Array.isArray(meta.initial)\n      ? meta.initial.map((option) =>\n          typeof option === 'object' ? option.value : option\n        )\n      : [meta.initial];\n    loadOptionsOverride = (filterValue) => {\n      return initialFetch\n        ? loadOptions(filterValue, lookupArguments).then((initialOptions) => {\n            return loadOptions(filterValue).then((options) => {\n              setInitialFetch(false);\n              return [\n                ...initialOptions,\n                ...options.filter(\n                  ({ value }) =>\n                    !initialOptions.find((option) => option.value === value)\n                )\n              ];\n            });\n          })\n        : loadOptions(filterValue);\n    };\n  }\n\n  return (\n    <InternalSelect\n      menuIsPortal\n      {...input}\n      {...rest}\n      loadOptions={loadOptionsOverride}\n      onChange={(value, ...args) => {\n        if (rest.onChange) {\n          rest.onChange(value);\n          formOptions.change(input.name, value);\n        } else {\n          input.onChange(value, ...args);\n        }\n      }}\n      isMulti={multi}\n      options={\n        !loadOptions\n          ? createOptions(\n              options,\n              input.value,\n              isRequired,\n              optionsMessages.current\n            )\n          : undefined\n      }\n      isDisabled={isDisabled}\n    />\n  );\n};\n\nexport interface Pf4SelectWrapperProps\n  extends Omit<Omit<SelectProps, 'input'>, 'meta'> {\n  name: string;\n  label?: ReactNode;\n  isRequired?: boolean;\n  helperText?: ReactNode;\n  description?: ReactNode;\n  hideLabel?: boolean;\n  id?: string;\n  initialValue?: any;\n  validate?: ValidatorType[];\n}\nconst Pf4SelectWrapper: React.ComponentType<Pf4SelectWrapperProps> = (\n  props\n) => {\n  const {\n    label,\n    isRequired,\n    helperText,\n    meta,\n    description,\n    hideLabel,\n    id,\n    ...rest\n  } = useFieldApi(props);\n  const { error, touched } = meta;\n  const showError = touched && error;\n  const { name } = rest.input;\n\n  return (\n    <FormGroup\n      isRequired={isRequired}\n      label={!hideLabel && label}\n      fieldId={id || name}\n      validated={showError ? 'error' : 'default'}\n      helperText={helperText}\n      helperTextInvalid={meta.error}\n    >\n      {description && (\n        <TextContent>\n          <Text component={TextVariants.small}>{description}</Text>\n        </TextContent>\n      )}\n      <Select\n        id={id || name}\n        meta={meta}\n        label={label}\n        validated={showError ? 'error' : 'default'}\n        isRequired={isRequired}\n        {...rest}\n      />\n    </FormGroup>\n  );\n};\n\nexport default Pf4SelectWrapper;\n","/* eslint-disable react/prop-types */\nimport React, { useReducer, ComponentType } from 'react';\nimport { Grid, GridItem, Button, Level, Tooltip } from '@patternfly/react-core';\nimport PlusIcon from '@patternfly/react-icons/dist/js/icons/plus-icon';\nimport {\n  InternalSelect,\n  SelectOption\n} from '@data-driven-forms/pf4-component-mapper/select';\nimport FieldArray from '@data-driven-forms/react-form-renderer/field-array';\n\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport formsMessages from '../../messages/forms.messages';\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport { StyledLevelItem } from '../../presentational-components/styled-components/level';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport { SelectOptions } from '../../types/common-types';\n\nconst initialState = {\n  /**\n   * This counter will re-initialize select components withouth having to re-initialize the whole form after new group was added\n   */\n  resetGroup: 0,\n  group: undefined,\n  permission: undefined\n};\n\ninterface InternalShareReducerState {\n  group?: { group_uuid: string; value?: string; label: string };\n  permission?: string;\n  resetGroup: number;\n}\n\ntype ShareReducer = (\n  state: InternalShareReducerState,\n  action: {\n    type: 'setGroup' | 'setPermission' | 'resetField';\n    payload?: { group_uuid: string; value?: string; label: string } | string;\n  }\n) => InternalShareReducerState;\n\n// TODO create keys for specific objects instead of using common payload. That way we wont need typecasting\nconst shareReducer: ShareReducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'setGroup':\n      return {\n        ...state,\n        group: payload as { group_uuid: string; value?: string; label: string }\n      };\n    case 'setPermission':\n      return { ...state, permission: payload as string };\n    case 'resetField':\n      return {\n        group: undefined,\n        permission: undefined,\n        resetGroup: state.resetGroup + 1\n      };\n  }\n\n  return state;\n};\n\ntype AddGroup = (group: {\n  groupName?: string;\n  group_uuid?: string;\n  permissions?: string;\n}) => void;\n\nexport interface NewGroupSelectProps {\n  loadOptions: (...args: any[]) => Promise<SelectOptions>;\n  permissions: SelectOptions;\n  addGroup: AddGroup;\n  currentGroups: { group_uuid: string; value?: string }[];\n}\n\nexport const NewGroupSelect: ComponentType<NewGroupSelectProps> = ({\n  loadOptions,\n  permissions,\n  addGroup,\n  currentGroups\n}) => {\n  const [{ group, permission, resetGroup }, dispatch] = useReducer(\n    shareReducer,\n    initialState\n  );\n  const formatMessage = useFormatMessage();\n\n  let tooltipContent;\n  if (!group && !permission) {\n    tooltipContent = formatMessage(portfolioMessages.shareErrorMissingData);\n  } else if (group && !permission) {\n    tooltipContent = formatMessage(\n      portfolioMessages.shareErrorMissingPermission\n    );\n  } else if (permission && !group) {\n    tooltipContent = formatMessage(portfolioMessages.shareErrorMissingGroup);\n  } else {\n    tooltipContent = formatMessage(portfolioMessages.shareTooltip);\n  }\n\n  const hasError = !!currentGroups.find(\n    (item) => item.group_uuid === group?.value\n  );\n\n  return (\n    <Level>\n      <StyledLevelItem grow>\n        <Grid hasGutter className=\"share-column\">\n          <GridItem span={7}>\n            <InternalSelect\n              key={resetGroup}\n              isSearchable\n              isClearable\n              simpleValue={false}\n              menuIsPortal\n              loadOptions={asyncFormValidator(loadOptions)}\n              placeholder={formatMessage(formsMessages.groupsPlaceholder)}\n              onChange={(value) =>\n                dispatch({ type: 'setGroup', payload: value })\n              }\n              validated={hasError ? 'error' : 'default'}\n              value={group}\n            />\n            {hasError && (\n              <div\n                className=\"pf-c-form__helper-text pf-m-error\"\n                id=\"permission-helper\"\n                aria-live=\"polite\"\n              >\n                {formatMessage(portfolioMessages.shareDuplicate)}\n              </div>\n            )}\n          </GridItem>\n          <GridItem span={5}>\n            <InternalSelect\n              name=\"select-permission\"\n              options={permissions as SelectOption[]}\n              menuIsPortal\n              placeholder={formatMessage(formsMessages.permissionsPlaceholder)}\n              onChange={(value) =>\n                dispatch({ type: 'setPermission', payload: value })\n              }\n              value={permission}\n            />\n          </GridItem>\n        </Grid>\n      </StyledLevelItem>\n      <StyledLevelItem alignSelf=\"baseline\">\n        <Tooltip content={<p>{tooltipContent}</p>}>\n          <span>\n            <Button\n              id=\"add-new-group\"\n              ouiaId=\"add-new-group\"\n              variant=\"link\"\n              isDisabled={!group || !permission}\n              onClick={() => {\n                group &&\n                  addGroup({\n                    groupName: group.label,\n                    group_uuid: group.value,\n                    permissions: permission\n                  });\n                dispatch({ type: 'resetField' });\n              }}\n            >\n              <PlusIcon />\n            </Button>\n          </span>\n        </Tooltip>\n      </StyledLevelItem>\n    </Level>\n  );\n};\n\nconst ShareGroupSelect: ComponentType<NewGroupSelectProps> = (props) => (\n  <FieldArray name=\"shared-groups\">\n    {({ fields: { push, value } }) => (\n      <NewGroupSelect {...props} addGroup={push} currentGroups={value} />\n    )}\n  </FieldArray>\n);\n\nexport default ShareGroupSelect;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment, ComponentType } from 'react';\nimport {\n  InternalSelect,\n  SelectOption\n} from '@data-driven-forms/pf4-component-mapper/select';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport FieldArray from '@data-driven-forms/react-form-renderer/field-array';\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n  GridItem,\n  Grid,\n  Button,\n  Level\n} from '@patternfly/react-core';\nimport TrashIcon from '@patternfly/react-icons/dist/js/icons/trash-icon';\nimport { StyledLevelItem } from '../../presentational-components/styled-components/level';\nimport styled from 'styled-components';\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport { SelectOptions } from '../../types/common-types';\n\nconst StyledText = styled(Text)`\n  line-height: 36px !important;\n`;\n\nexport interface SharedGroupProps {\n  name: string;\n  remove: (index: number) => void;\n  index: number;\n  permissionVerbs: SelectOptions;\n}\n\nconst SharedGroup: ComponentType<SharedGroupProps> = ({\n  name,\n  remove,\n  index,\n  permissionVerbs\n}) => {\n  const { input } = useFieldApi({ name });\n  return (\n    <Level>\n      <StyledLevelItem grow>\n        <Grid hasGutter className=\"share-column\">\n          <GridItem span={7}>\n            <TextContent>\n              <StyledText component={TextVariants.h4}>\n                {input.value.groupName}\n              </StyledText>\n            </TextContent>\n          </GridItem>\n          <GridItem span={5}>\n            <InternalSelect\n              name={name}\n              menuIsPortal\n              options={permissionVerbs as SelectOption[]}\n              value={input.value.permissions}\n              onChange={(permissions) =>\n                input.onChange({\n                  ...input.value,\n                  permissions\n                })\n              }\n            />\n          </GridItem>\n        </Grid>\n      </StyledLevelItem>\n      <StyledLevelItem>\n        <Button\n          id={`remove-share-${index}`}\n          ouiaId={`remove-share-${index}`}\n          variant=\"plain\"\n          onClick={() => remove(index)}\n        >\n          <TrashIcon />\n        </Button>\n      </StyledLevelItem>\n    </Level>\n  );\n};\n\nexport interface ShareGroupEditProps {\n  name: string;\n  permissionVerbs: SelectOptions;\n}\n\nconst ShareGroupEdit: ComponentType<ShareGroupEditProps> = ({\n  name,\n  permissionVerbs\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <FieldArray name={name}>\n      {({ fields: { map, remove, length } }) => (\n        <Fragment>\n          {length === 0 && (\n            <TextContent>\n              <Text>{formatMessage(portfolioMessages.noShares)}</Text>\n            </TextContent>\n          )}\n          {length && length > 0 && (\n            <TextContent>\n              <Text component=\"small\">\n                {formatMessage(portfolioMessages.shareGroupsAccess)}\n              </Text>\n            </TextContent>\n          )}\n          {map((name, index) => (\n            <SharedGroup\n              key={name}\n              name={name}\n              remove={remove}\n              index={index}\n              permissionVerbs={permissionVerbs}\n            />\n          ))}\n        </Fragment>\n      )}\n    </FieldArray>\n  );\n};\n\nexport default ShareGroupEdit;\n","import { defineMessages } from 'react-intl';\n\nconst schemasMessages = defineMessages({\n  'schemas.portfolio.name': {\n    id: 'schemas.portfolio.name',\n    defaultMessage: 'Name'\n  },\n  'schemas.portfolio.description': {\n    id: 'schemas.portfolio.description',\n    defaultMessage: 'Description'\n  },\n  'schemas.portfolio-item.name': {\n    id: 'schemas.portfolio-item.name',\n    defaultMessage: 'Name'\n  },\n  'schemas.portfolio-item.description': {\n    id: 'schemas.portfolio-item.description',\n    defaultMessage: 'Description'\n  },\n  'schemas.portfolio-item.long_description': {\n    id: 'schemas.portfolio-item.long_description',\n    defaultMessage: 'Long description'\n  },\n  'schemas.portfolio-item.vendor': {\n    id: 'schemas.portfolio-item.vendor',\n    defaultMessage: 'Vendor'\n  },\n  'schemas.portfolio-item.documentation_url': {\n    id: 'schemas.portfolio-item.documentation_url',\n    defaultMessage: 'Documentation URL'\n  },\n  'schemas.portfolio-item.support_url': {\n    id: 'schemas.portfolio-item.support_url',\n    defaultMessage: 'Support URL'\n  },\n  'share.new.description': {\n    id: 'share.new.description',\n    defaultMessage: 'Invite group'\n  }\n});\n\nexport default schemasMessages;\n","import { Field, Schema } from '@data-driven-forms/react-form-renderer';\nimport { MessageDescriptor } from 'react-intl';\nimport schemasMessages from '../messages/schemas.messages';\nimport { FormatMessage } from '../types/common-types';\n\nconst translateString = (\n  string: MessageDescriptor,\n  formatMessage?: FormatMessage\n) => {\n  try {\n    return formatMessage!(string);\n  } catch {\n    return string;\n  }\n};\n\nconst translateField = (\n  field: Field,\n  formatMessage: FormatMessage,\n  translateKeys: string[]\n) => {\n  const fieldCopy: Field = { ...field };\n  translateKeys.forEach((key) => {\n    if (\n      Object.prototype.hasOwnProperty.call(fieldCopy, key) &&\n      typeof fieldCopy[key] === 'string' &&\n      schemasMessages[fieldCopy[key] as keyof typeof schemasMessages]\n    ) {\n      fieldCopy[key] = translateString(\n        schemasMessages[fieldCopy[key] as keyof typeof schemasMessages],\n        formatMessage\n      );\n    }\n  });\n  if (\n    Object.prototype.hasOwnProperty.call(fieldCopy, 'options') &&\n    Array.isArray(fieldCopy.options)\n  ) {\n    fieldCopy.options = fieldCopy.options.map((option) =>\n      translateString(\n        schemasMessages[option.label as keyof typeof schemasMessages]\n      )\n        ? {\n            ...option,\n            label: translateString(\n              schemasMessages[option.label as keyof typeof schemasMessages],\n              formatMessage\n            )\n          }\n        : option\n    );\n  }\n\n  if (\n    Object.prototype.hasOwnProperty.call(fieldCopy, 'fields') &&\n    Array.isArray(fieldCopy.fields)\n  ) {\n    fieldCopy.fields = fieldCopy.fields.map((field) =>\n      translateField(field, formatMessage, translateKeys)\n    );\n  }\n\n  return fieldCopy;\n};\n\nconst translateSchema = (\n  schema: Schema,\n  formatMessage: FormatMessage,\n  translateKeys = ['label', 'placeholder', 'title', 'description']\n): Schema => {\n  const schemaCopy = { ...schema };\n  schemaCopy.fields = schemaCopy.fields.map((field) =>\n    translateField(field, formatMessage, translateKeys)\n  );\n  return schemaCopy;\n};\n\nexport default translateSchema;\n","/* eslint-disable react/prop-types */\nimport React, { ReactNode, Fragment } from 'react';\nimport styled from 'styled-components';\nimport ReactDOM from 'react-dom';\nimport PF4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template/form-template';\nimport Pf4FormTemplateProps from '@data-driven-forms/react-form-renderer/common-types/form-template-render-props';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport Schema from '@data-driven-forms/react-form-renderer/common-types/schema';\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport {\n  ModalProps,\n  Spinner,\n  ModalBoxHeader,\n  ModalBoxCloseButton,\n  ModalBoxBody,\n  ModalBoxFooter,\n  Backdrop,\n  FocusTrap,\n  ModalVariant,\n  Button\n} from '@patternfly/react-core';\n\nimport SpinnerWrapper from '../../presentational-components/styled-components/spinner-wrapper';\nimport useFormatMessage from '../../utilities/use-format-message';\n/**Make sure we have styles loaded */\nimport '@patternfly/react-styles/css/components/ModalBox/modal-box.css';\nimport labelMessages from '../../messages/labels.messages';\n\nconst StyledForm = styled(({ variant, ...props }) => <form {...props} />)`\n  max-width: calc(100% - 32px);\n  width: ${({ variant }: { variant: ModalVariant }) =>\n    variant === 'small' ? '560px' : '100%'};\n  max-height: calc(100% - 48px);\n`;\n\nexport interface InternalModalProps\n  extends Omit<Omit<ModalProps, 'ref'>, 'children'> {\n  isLoading?: boolean;\n}\n\ninterface ModalFormTemplateProps {\n  schema: Schema;\n  submitLabel?: ReactNode;\n  formFields: ReactNode[];\n  modalProps: Partial<InternalModalProps>;\n}\n\nconst ModalFormTemplate: React.ComponentType<ModalFormTemplateProps> = ({\n  schema,\n  formFields,\n  submitLabel,\n  modalProps: { isLoading, title, description, onClose, variant }\n}) => {\n  const { handleSubmit } = useFormApi();\n  const formatMessage = useFormatMessage();\n  return ReactDOM.createPortal(\n    <div>\n      <Backdrop>\n        <FocusTrap className=\"pf-l-bullseye\">\n          <StyledForm\n            onSubmit={isLoading ? () => undefined : handleSubmit}\n            variant={variant}\n            className=\"pf-c-modal-box pf-m-sm\"\n          >\n            <ModalBoxCloseButton onClose={onClose} />\n            <ModalBoxHeader>\n              <h1 id=\"modal-form-title\" className=\"pf-c-modal-box__title\">\n                {title}\n              </h1>\n              {description && (\n                <div\n                  id=\"modal-form-description\"\n                  className=\"pf-c-modal-box__description\"\n                >\n                  {description}\n                </div>\n              )}\n            </ModalBoxHeader>\n            <ModalBoxBody>\n              <div>\n                <div className=\"pf-c-form\">\n                  {isLoading ? (\n                    <SpinnerWrapper className=\"pf-u-m-md\">\n                      <Spinner />\n                    </SpinnerWrapper>\n                  ) : (\n                    <Fragment>\n                      {schema.title}\n                      {formFields}\n                    </Fragment>\n                  )}\n                </div>\n              </div>\n            </ModalBoxBody>\n            <ModalBoxFooter>\n              <FormSpy\n                subscription={{\n                  invalid: true,\n                  validating: true,\n                  pristine: true,\n                  submitting: true\n                }}\n              >\n                {({ pristine, invalid, validating, submitting }) => (\n                  <Fragment>\n                    <Button\n                      type=\"submit\"\n                      isDisabled={\n                        pristine || invalid || validating || submitting\n                      }\n                    >\n                      {submitLabel || formatMessage(labelMessages.save)}\n                    </Button>\n                    <Button variant=\"link\" onClick={onClose}>\n                      {formatMessage(labelMessages.cancel)}\n                    </Button>\n                  </Fragment>\n                )}\n              </FormSpy>\n            </ModalBoxFooter>\n          </StyledForm>\n        </FocusTrap>\n      </Backdrop>\n    </div>,\n    document.body\n  );\n};\n\nexport interface FormTemplateProps extends Pf4FormTemplateProps {\n  isModal?: boolean;\n  modalProps?: InternalModalProps;\n  submitlabel?: ReactNode;\n}\n\nconst FormTemplate: React.ComponentType<FormTemplateProps> = ({\n  isModal,\n  modalProps = {},\n  ...props\n}) => {\n  if (isModal) {\n    return <ModalFormTemplate {...props} modalProps={modalProps} />;\n  }\n\n  return <PF4FormTemplate {...props} />;\n};\n\nexport default FormTemplate;\n","/* eslint-disable react/prop-types */\nimport React, { memo } from 'react';\nimport ReactFormRender, {\n  FormRendererProps as DDFFormRendererProps\n} from '@data-driven-forms/react-form-renderer/form-renderer';\nimport validatorMapper from '@data-driven-forms/react-form-renderer/validator-mapper';\nimport TextField from '@data-driven-forms/pf4-component-mapper/text-field';\nimport Textarea from '@data-driven-forms/pf4-component-mapper/textarea';\nimport SubForm from '@data-driven-forms/pf4-component-mapper/sub-form';\nimport PlainText from '@data-driven-forms/pf4-component-mapper/plain-text';\nimport Checkbox from '@data-driven-forms/pf4-component-mapper/checkbox';\nimport Radio from '@data-driven-forms/pf4-component-mapper/radio';\nimport Switch from '@data-driven-forms/pf4-component-mapper/switch';\n\nimport Pf4SelectWrapper from '../../presentational-components/shared/pf4-select-wrapper';\nimport ShareGroupSelect from '../../forms/form-fields/share-group-select';\nimport ShareGroupEdit from '../../forms/form-fields/share-group-edit';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport translateSchema from '../../utilities/translate-schema';\nimport Select from '@data-driven-forms/pf4-component-mapper/select';\nimport CopyNameDisplay from '../../forms/form-fields/copy-name-display';\nimport InitialChips from '../../forms/form-fields/initial-chips';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport FormTemplate, {\n  FormTemplateProps,\n  InternalModalProps\n} from '../../forms/form-fields/form-template';\nimport {\n  ComponentMapper,\n  Schema\n} from '@data-driven-forms/react-form-renderer';\n\nexport const catalogComponentMapper: ComponentMapper = {\n  [componentTypes.TEXT_FIELD]: TextField,\n  [componentTypes.TEXTAREA]: Textarea,\n  [componentTypes.PLAIN_TEXT]: PlainText,\n  [componentTypes.SELECT]: Pf4SelectWrapper,\n  [componentTypes.CHECKBOX]: Checkbox,\n  [componentTypes.RADIO]: Radio,\n  [componentTypes.SWITCH]: Switch,\n  [componentTypes.SUB_FORM]: SubForm,\n  'initial-select': Select,\n  'share-group-select': ShareGroupSelect,\n  'share-group-edit': ShareGroupEdit,\n  'copy-name-display': CopyNameDisplay,\n  'textarea-field': Textarea,\n  'select-field': Pf4SelectWrapper,\n  'initial-chips': InitialChips\n};\n\nconst catalogValidatorMapper = {\n  ...validatorMapper,\n  'exact-length-validator': validatorMapper[validatorTypes.EXACT_LENGTH],\n  'max-length-validator': validatorMapper[validatorTypes.MAX_LENGTH],\n  'min-items-validator': validatorMapper[validatorTypes.MIN_ITEMS],\n  'min-length-validator': validatorMapper[validatorTypes.MIN_LENGTH],\n  'pattern-validator': validatorMapper[validatorTypes.PATTERN],\n  'required-validator': validatorMapper[validatorTypes.REQUIRED],\n  'url-validator': validatorMapper[validatorTypes.URL]\n};\n\nexport const catalogValidatorAlias = {\n  'exact-length-validator': validatorTypes.EXACT_LENGTH,\n  'max-length-validator': validatorTypes.MAX_LENGTH,\n  'min-items-validator': validatorTypes.MIN_ITEMS,\n  'min-length-validator': validatorTypes.MIN_LENGTH,\n  'pattern-validator': validatorTypes.PATTERN,\n  'required-validator': validatorTypes.REQUIRED,\n  'url-validator': validatorTypes.URL\n};\n\nexport interface FormRendererProps extends Partial<DDFFormRendererProps> {\n  isModal?: boolean;\n  templateProps?: Omit<FormTemplateProps, 'modalProps'>;\n  schema: Schema;\n  modalProps?: InternalModalProps;\n  onSubmit: (...args: any[]) => any;\n}\n\nconst FormRenderer: React.ComponentType<FormRendererProps> = ({\n  isModal,\n  templateProps = {},\n  schema,\n  modalProps,\n  ...rest\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <div>\n      <ReactFormRender\n        componentMapper={catalogComponentMapper}\n        FormTemplate={(props) => (\n          <FormTemplate\n            {...props}\n            {...templateProps}\n            modalProps={modalProps}\n            isModal={isModal}\n          />\n        )}\n        validatorMapper={catalogValidatorMapper}\n        schema={translateSchema(schema, formatMessage)}\n        {...rest}\n      />\n    </div>\n  );\n};\n\nexport default memo(FormRenderer);\n","/* eslint-disable react/prop-types */\nimport React, { useEffect, useState, ReactNode } from 'react';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { FormGroup, TextContent, Text } from '@patternfly/react-core';\nimport labelMessages from '../../messages/labels.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nexport interface CopyNameDisplayProps {\n  label: ReactNode;\n  getName: (value: any) => Promise<string>;\n  fieldSpy: string;\n}\n\nconst CopyNameDisplay: React.ComponentType<CopyNameDisplayProps> = ({\n  label,\n  getName,\n  fieldSpy\n}) => {\n  const formatMessage = useFormatMessage();\n  const [name, setName] = useState(formatMessage(labelMessages.loading));\n  const {\n    input: { value },\n    meta: { error }\n  } = useFieldApi({\n    name: fieldSpy\n  });\n  useEffect(() => {\n    getName(value).then((name: string) => {\n      setName(name);\n    });\n  }, [value]);\n\n  return (\n    <FormGroup label={label} helperText={error} fieldId={value}>\n      <TextContent>\n        <Text component=\"h6\">{name}</Text>\n      </TextContent>\n    </FormGroup>\n  );\n};\n\nexport default CopyNameDisplay;\n","/* eslint-disable react/prop-types */\nimport React, { ReactNode, ComponentType } from 'react';\nimport { Chip, ChipGroup, FormGroup } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nexport interface InitialChipsProps {\n  name: string;\n  label: ReactNode;\n}\n\nexport interface InitialChipsValue {\n  id: string;\n  name: ReactNode;\n}\n\nconst InitialChips: ComponentType<InitialChipsProps> = ({ name, label }) => {\n  const {\n    input: { value, onChange }\n  } = useFieldApi<InitialChipsValue[]>({ name });\n  const handleRemove = (id: string) =>\n    onChange(value.filter((item) => item.id !== id));\n  if (value?.length === 0) {\n    return null;\n  }\n\n  return (\n    <FormGroup fieldId={name} label={label}>\n      <ChipGroup>\n        {value.map(({ name, id }) => (\n          <Chip key={id} onClick={() => handleRemove(id)}>\n            {name}\n          </Chip>\n        ))}\n      </ChipGroup>\n    </FormGroup>\n  );\n};\n\nexport default InitialChips;\n","import componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { FieldApi } from '@data-driven-forms/react-form-renderer/common-types/field';\nimport { FormOptions } from '@data-driven-forms/react-form-renderer/renderer-context';\nimport Schema from '@data-driven-forms/react-form-renderer/common-types/schema';\nimport asyncFormValidator from '../utilities/async-form-validator';\nimport { LoadOptions, AnyObject } from '../types/common-types';\nimport { ReactNode } from 'react';\n\ntype ResolveNewProcessProps = (\n  props: AnyObject,\n  fieldApi: FieldApi<{ id: string }[]>,\n  formOptions: FormOptions\n) => {\n  key: number;\n  loadOptions: LoadOptions;\n};\nconst resolveNewProcessProps: ResolveNewProcessProps = (\n  props,\n  _fieldApi,\n  formOptions\n) => {\n  const initialProcessess: { id: string }[] = formOptions.getState().values[\n    'initial-tags'\n  ];\n  return {\n    key: initialProcessess.length, // used to trigger options re-load and disable options update\n    loadOptions: (...args) =>\n      (props as { loadOptions: LoadOptions })\n        .loadOptions(...args)\n        .then((data) =>\n          data.map((option) => ({\n            ...option,\n            ...(initialProcessess.find(({ id }) => id === option.value) // we have to disable options that are already in the chip group\n              ? { isDisabled: true }\n              : {})\n          }))\n        )\n  };\n};\n\nconst createSchema = (\n  existingTagsMessage: ReactNode,\n  loadTags: LoadOptions\n): Schema => ({\n  fields: [\n    {\n      component: componentTypes.SELECT,\n      name: 'new-tags',\n      label: '',\n      loadOptions: asyncFormValidator(loadTags),\n      multi: true,\n      isSearchable: true,\n      isClearable: true,\n      resolveProps: resolveNewProcessProps\n    },\n    {\n      component: 'initial-chips',\n      name: 'initial-tags',\n      label: existingTagsMessage\n    }\n  ]\n});\n\nexport default createSchema;\n","/* eslint-disable react/prop-types */\nimport React, { ReactNode, useEffect, useState } from 'react';\nimport difference from 'lodash/difference';\nimport {\n  Modal,\n  Stack,\n  StackItem,\n  TextContent,\n  Text\n} from '@patternfly/react-core';\nimport FormRenderer from './form-renderer';\nimport createSchema from '../../forms/set-object-tags.schema';\nimport { WorkflowLoader } from '../../presentational-components/shared/loader-placeholders';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport actionMessages from '../../messages/actions.messages';\nimport { AnyObject, LoadOptions } from '../../types/common-types';\n\nexport interface Tag {\n  id: string;\n}\nexport interface TaggingModalProps {\n  loadTags: LoadOptions;\n  getInitialTags: (...args: any[]) => Promise<Tag[]>;\n  onSubmit: (toLink: string[], toUnlink: string[]) => void;\n  title: string;\n  subTitle?: ReactNode;\n  onClose: (...args: any[]) => void;\n  existingTagsMessage: ReactNode;\n}\n\nconst TaggingModal: React.ComponentType<TaggingModalProps> = ({\n  loadTags,\n  onSubmit,\n  getInitialTags,\n  onClose,\n  title,\n  subTitle,\n  existingTagsMessage,\n  ...rest\n}) => {\n  const formatMessage = useFormatMessage();\n  const [data, setData] = useState<Tag[]>();\n  useEffect(() => {\n    getInitialTags().then((data) => setData(data));\n  }, []);\n  const handleSubmit = (formData: AnyObject) => {\n    const unlinkArray =\n      (data &&\n        data\n          .filter(\n            ({ id }) =>\n              !formData['initial-tags'].find(\n                (process: Tag) => id === process.id\n              )\n          )\n          .map(({ id }) => id)) ||\n      [];\n    /**\n     * prevent uneccesary unlink and link API calls of the same tag\n     */\n    const linkDiff = difference(formData['new-tags'], unlinkArray);\n    const unLinkDiff = difference(unlinkArray, formData['new-tags']);\n    const toLinkTags = linkDiff.filter(\n      (id) => data && !data.find((item) => item.id === id)\n    );\n    const toUnlinkTags = unLinkDiff.filter(\n      (id) => data && data.find((item) => item.id === id)\n    );\n    if (toUnlinkTags.length > 0 || toLinkTags.length > 0) {\n      return onSubmit(toLinkTags, toUnlinkTags);\n    }\n  };\n\n  return (\n    <Modal isOpen title={title} onClose={onClose} variant=\"small\">\n      {!data ? (\n        <WorkflowLoader />\n      ) : (\n        <Stack hasGutter>\n          <StackItem>\n            <TextContent>\n              <Text id=\"sub-title\">{subTitle}</Text>\n            </TextContent>\n          </StackItem>\n          <StackItem>\n            <FormRenderer\n              {...rest}\n              subscription={{ values: true }}\n              initialValues={{\n                'initial-tags': data\n              }}\n              schema={createSchema(existingTagsMessage, loadTags)}\n              onSubmit={handleSubmit}\n              onCancel={onClose}\n              clearedValue={[]}\n              templateProps={{\n                submitLabel: formatMessage(actionMessages.save),\n                disableSubmit: ['pristine']\n              }}\n            />\n          </StackItem>\n        </Stack>\n      )}\n    </Modal>\n  );\n};\n\nexport default TaggingModal;\n","import React from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\n\nexport const UnauthorizedRedirect: React.ComponentType = () => {\n  const location = useLocation();\n  return (\n    <Redirect\n      to={{\n        pathname: '/403',\n        state: {\n          from: location\n        }\n      }}\n    />\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\nimport { useHistory } from 'react-router-dom';\nimport {\n  listOrderProcesses,\n  getLinkedOrderProcesses\n} from '../../helpers/order-process/order-process-helper';\nimport { setOrderProcess } from '../../redux/actions/order-process-actions';\nimport { APP_NAME } from '../../utilities/constants';\nimport useQuery from '../../utilities/use-query';\nimport TaggingModal, { Tag } from '../common/tagging-modal';\nimport { Bold } from '../../presentational-components/shared/intl-rich-text-components';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { CatalogLinkTo } from '../common/catalog-link';\nimport { SelectOptions } from '../../types/common-types';\n\nexport interface SetOrderProcessModalProps {\n  pushParam: CatalogLinkTo;\n  objectType: 'PortfolioItem' | 'Portfolio';\n  objectName: () => string | undefined;\n  querySelector: string;\n}\nconst SetOrderProcessModal: React.ComponentType<SetOrderProcessModalProps> = ({\n  pushParam,\n  objectType,\n  querySelector,\n  objectName\n}) => {\n  const dispatch = useDispatch();\n  const formatMessage = useFormatMessage();\n  const { push } = useHistory();\n  const onCancel = () => push(pushParam);\n  const [query] = useQuery([querySelector]);\n  const loadOrderProcesses = (filter: string): Promise<SelectOptions> =>\n    listOrderProcesses(filter).then(({ data }) =>\n      data.map(({ name, id }) => ({ label: name, value: id }))\n    );\n\n  const onSubmit = (toLink: string[], toUnlink: string[]) => {\n    onCancel();\n    dispatch(\n      setOrderProcess(toLink, toUnlink, {\n        object_type: objectType,\n        app_name: APP_NAME[objectType],\n        object_id: query[querySelector]\n      }) as Promise<void>\n    ).then(() =>\n      dispatch(\n        addNotification({\n          dismissable: true,\n          variant: 'success',\n          title: formatMessage(\n            orderProcessesMessages.setOrderProcessNotificationTitle\n          ),\n          description: formatMessage(\n            orderProcessesMessages.setOrderProcessNotificationDescription,\n            {\n              linked: toLink.length,\n              unlinked: toUnlink.length\n            }\n          )\n        })\n      )\n    );\n  };\n\n  return (\n    <TaggingModal\n      getInitialTags={() =>\n        getLinkedOrderProcesses(objectType, query[querySelector]).then(\n          ({ data }) => data as Tag[]\n        )\n      }\n      title={formatMessage(orderProcessesMessages.setOrderProcess) as string}\n      onClose={onCancel}\n      onSubmit={onSubmit}\n      loadTags={loadOrderProcesses}\n      existingTagsMessage={formatMessage(\n        orderProcessesMessages.currentOrderProcesses\n      )}\n      subTitle={formatMessage(orderProcessesMessages.setOrderProcessSubtitle, {\n        strong: Bold,\n        object: objectName()\n      })}\n    />\n  );\n};\n\nexport default SetOrderProcessModal;\n","import { createContext } from 'react';\nimport { AnyObject } from './types/common-types';\n\nexport type UserContextValue = AnyObject;\n\nconst UserContext: React.Context<UserContextValue> = createContext({});\n\nexport default UserContext;\n","import awesomeDebouncePromise, {\n  AwesomeDebounceOptions\n} from 'awesome-debounce-promise';\n\nconst asyncFormValidator = <T = any>(\n  asyncFunction: (...args: any[]) => T,\n  debounceTime = 250,\n  options: Partial<AwesomeDebounceOptions> = { onlyResolvesLast: false }\n): any => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n\nexport default asyncFormValidator;\n","// eslint-disable no-undef\nexport const CATALOG_API_BASE =\n  // eslint-disable-next-line no-undef\n  DEPLOYMENT_MODE === 'standalone'\n    ? // eslint-disable-next-line no-undef\n      `${API_HOST}${API_BASE_PATH}`\n    : `${process.env.BASE_PATH || '/api'}/catalog/v1.3`;\nexport const SOURCES_API_BASE =\n  // eslint-disable-next-line no-undef\n  DEPLOYMENT_MODE === 'standalone'\n    ? // eslint-disable-next-line no-undef\n      `${API_HOST}${API_BASE_PATH}`\n    : `${process.env.BASE_PATH || '/api'}/sources/v1.0`;\nexport const APPROVAL_API_BASE =\n  // eslint-disable-next-line no-undef\n  DEPLOYMENT_MODE === 'standalone'\n    ? // eslint-disable-next-line no-undef\n      `${API_HOST}${API_BASE_PATH}`\n    : `${process.env.BASE_PATH || '/api'}/approval/v1.2`;\nexport const CATALOG_INVENTORY_API_BASE =\n  // eslint-disable-next-line no-undef\n  DEPLOYMENT_MODE === 'standalone'\n    ? // eslint-disable-next-line no-undef\n      `${API_HOST}${API_BASE_PATH}`\n    : `${process.env.BASE_PATH || '/api'}/catalog-inventory/v1.0`;\nexport const RBAC_API_BASE = `${process.env.BASE_PATH || '/api'}/rbac/v1`;\n\nexport const EXTERNAL_LOGIN_URI =\n  // eslint-disable-next-line no-undef\n  DEPLOYMENT_MODE === 'standalone'\n    ? // eslint-disable-next-line no-undef\n      ANSIBLE_CATALOG_LOGIN_URI || '/login/keycloak-oidc/'\n    : '';\n\nexport const permissionValues = ['order', 'read', 'update'];\n\nexport const permissionOptions = [\n  {\n    value: 'order,read,update',\n    label: 'Can order/edit'\n  },\n  {\n    value: 'order,read',\n    label: 'Can order/view'\n  }\n];\n\nexport const PORTFOLIO_RESOURCE_TYPE = 'Portfolio';\nexport const PORTFOLIO_ITEM_RESOURCE_TYPE = 'PortfolioItem';\nexport const INVENTORY_RESOURCE_TYPE = 'ServiceInventory';\nexport const DEFAULT_MAX_LENGTH = 64;\n\nexport const APP_NAME = {\n  Portfolio: 'catalog',\n  PortfolioItem: 'catalog',\n  ServiceInventory: 'catalog-inventory'\n};\n\nexport const BEFORE_TYPE = 'before';\nexport const AFTER_TYPE = 'after';\nexport const RETURN_TYPE = 'return';\n\nexport const MAX_RETRY_LIMIT = 3;\nexport const PLATFORMS_DOC_URL =\n  // eslint-disable-next-line max-len\n  'https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.0-ea/html-single/red_hat_ansible_automation_platform_installation_guide/index';\n\n//TODO - replace when standalone user capabilities are available\nexport const USER_CAPABILITIES_PLACEHOLDER = {\n  share: true,\n  copy: true,\n  unshare: true,\n  update: true,\n  destroy: true,\n  set_approval: true\n};\n","import { Request } from '@redhat-cloud-services/approval-client';\nimport {\n  ServicePlan,\n  Order,\n  PortfolioItem,\n  Portfolio,\n  OrderItem,\n  ApprovalRequest\n} from '@redhat-cloud-services/catalog-client';\nimport { Source } from '@redhat-cloud-services/sources-client';\nimport {\n  FETCH_SERVICE_PLANS,\n  LIST_ORDERS,\n  FETCH_SERVICE_PLAN_PARAMETERS,\n  SUBMIT_SERVICE_ORDER,\n  SET_SELECTED_PLAN,\n  FETCH_REQUESTS,\n  FETCH_ORDER_ITEMS,\n  SET_LOADING_STATE,\n  SET_ORDERS,\n  FETCH_ORDERS,\n  SET_ORDER_DETAIL,\n  FETCH_APPROVAL_REQUESTS,\n  SET_ORDER_PROVISION_ITEMS\n} from '../action-types';\n\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport {\n  ApiCollectionResponse,\n  AnyObject,\n  ReduxActionHandler,\n  Full,\n  InternalPortfolioItem\n} from '../../types/common-types';\nimport {\n  ObjectNotFound,\n  ProgressMessageItem\n} from '../../helpers/order/new-order-helper';\n\nexport interface OrderDetail extends AnyObject {\n  approvalRequest?: ApiCollectionResponse<ApprovalRequest>;\n  order: Full<Order>;\n  orderItem?: Full<OrderItem>;\n  portfolioItem: Full<InternalPortfolioItem> & Partial<ObjectNotFound>;\n  platform: Full<Source> & Partial<ObjectNotFound>;\n  portfolio: Full<Portfolio> & Partial<ObjectNotFound>;\n  extra_data?: any;\n}\n\nexport interface OrderProvisionType extends AnyObject {\n  orderItems: Full<OrderItem>[];\n  progressMessageItems: Full<ProgressMessageItem>[];\n}\n\nexport interface OrderReducerState extends AnyObject {\n  servicePlans: ServicePlan[];\n  selectedPlan: ServicePlan;\n  isLoading: boolean;\n  requests: Request[];\n  orderDetail: OrderDetail;\n  orders: ApiCollectionResponse<OrderDetail>;\n  orderProvision: OrderProvisionType;\n}\n// Initial State\nexport const orderInitialState: OrderReducerState = {\n  servicePlans: [],\n  selectedPlan: {},\n  isLoading: false,\n  requests: [],\n  orderDetail: {\n    order: {} as Full<Order>,\n    portfolioItem: {} as Full<InternalPortfolioItem>,\n    platform: {} as Full<Source>,\n    portfolio: {} as Full<Portfolio>\n  },\n  orderProvision: {\n    orderItems: [] as Full<OrderItem>[],\n    progressMessageItems: [] as Full<ProgressMessageItem>[]\n  },\n  orders: {\n    data: [],\n    results: [],\n    meta: { ...defaultSettings }\n  }\n};\n\nexport type OrderReducerActionHandler = ReduxActionHandler<OrderReducerState>;\n\nconst setLoadingState: OrderReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isLoading: payload\n});\nconst setServicePlans: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  servicePlans: localStorage.getItem('catalog_standalone')\n    ? payload?.results\n    : payload,\n  isLoading: false\n});\nconst setListOrder: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  orders: payload,\n  isLoading: false\n});\nconst setPlanParameters: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  planParameters: payload,\n  isLoading: false\n});\nconst submitServiceOrder: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  ...payload,\n  isLoading: false\n});\nconst selectPlan: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  selectedPlan: payload,\n  isLoading: false\n});\nconst setRequests: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  requests: payload,\n  isLoading: false\n});\nconst setOrderItems: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  orderItems: payload,\n  isLoading: false\n});\nconst setOrders: OrderReducerActionHandler = (state, { payload }) => {\n  return {\n    ...state,\n    orders: payload\n  };\n};\n\nconst setOrderDetail: OrderReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  orderDetail: payload\n});\nconst updateOrderApprovalRequests: OrderReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  orderDetail: {\n    ...state.orderDetail,\n    approvalRequest: payload\n  }\n});\nconst setOrderProvisionItems: OrderReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  orderProvision: payload\n});\n\nexport default {\n  [`${FETCH_SERVICE_PLANS}_PENDING`]: setLoadingState,\n  [`${FETCH_SERVICE_PLANS}_FULFILLED`]: setServicePlans,\n  [`${LIST_ORDERS}_PENDING`]: setLoadingState,\n  [`${LIST_ORDERS}_FULFILLED`]: setListOrder,\n  [`${FETCH_SERVICE_PLAN_PARAMETERS}_PENDING`]: setLoadingState,\n  [`${FETCH_SERVICE_PLAN_PARAMETERS}_FULFILLED`]: setPlanParameters,\n  [`${SUBMIT_SERVICE_ORDER}_PENDING`]: setLoadingState,\n  [`${SUBMIT_SERVICE_ORDER}_FULFILLED`]: submitServiceOrder,\n  [SET_SELECTED_PLAN]: selectPlan,\n  [`${FETCH_REQUESTS}_PENDING`]: setLoadingState,\n  [`${FETCH_REQUESTS}_FULFILLED`]: setRequests,\n  [`${FETCH_ORDER_ITEMS}_PENDING`]: setLoadingState,\n  [`${FETCH_ORDER_ITEMS}_FULFILLED`]: setOrderItems,\n  [SET_LOADING_STATE]: setLoadingState,\n  [`${FETCH_ORDERS}_FULFILLED`]: setOrders,\n  [`${FETCH_ORDERS}_PENDING`]: setLoadingState,\n  [SET_ORDERS]: setOrders,\n  [`${SET_ORDER_DETAIL}_FULFILLED`]: setOrderDetail,\n  [SET_ORDER_DETAIL]: setOrderDetail,\n  [`${FETCH_APPROVAL_REQUESTS}_FULFILLED`]: updateOrderApprovalRequests,\n  [`${SET_ORDER_PROVISION_ITEMS}_FULFILLED`]: setOrderProvisionItems,\n  [SET_ORDER_PROVISION_ITEMS]: setOrderProvisionItems\n};\n","import {\n  FETCH_PLATFORM,\n  FETCH_PLATFORMS,\n  FETCH_PLATFORM_ITEMS,\n  FETCH_PLATFORM_ITEM,\n  FILTER_PLATFORM_ITEMS,\n  FETCH_MULTIPLE_PLATFORM_ITEMS,\n  SET_LOADING_STATE,\n  FETCH_PLATFORM_INVENTORIES,\n  SET_INVENTORIES_LOADING_STATE,\n  FETCH_SERVICE_OFFERING,\n  SET_SOURCETYPE_ICONS\n} from '../action-types';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport {\n  StringObject,\n  ApiCollectionResponse,\n  AnyObject,\n  ReduxActionHandler\n} from '../../types/common-types';\nimport {\n  Source,\n  ServiceOffering,\n  ServiceInventory\n} from '@redhat-cloud-services/sources-client';\n\nexport interface ServiceOfferingDetail {\n  service: ServiceOffering;\n  source: Source;\n}\nexport interface PlatformItemsObject {\n  [key: string]: ApiCollectionResponse<ServiceOffering>;\n}\nexport interface PlatformReducerState extends AnyObject {\n  platformIconMapping: StringObject;\n  sourceTypeIcons: StringObject;\n  isPlatformDataLoading: boolean;\n  selectedPlatform: Source;\n  platforms: Source[];\n  platformItems: PlatformItemsObject;\n  platformInventories: ApiCollectionResponse<ServiceInventory>;\n  platformItem: ServiceOffering;\n  platform: Source;\n  filterValue: string;\n  serviceOffering: ServiceOfferingDetail;\n}\nexport type PlatformReducerActionHandler = ReduxActionHandler<\n  PlatformReducerState\n>;\n\nexport const platformInitialState: PlatformReducerState = {\n  platformIconMapping: {},\n  sourceTypeIcons: {},\n  isPlatformDataLoading: false,\n  selectedPlatform: {},\n  platforms: [],\n  platformItems: {},\n  platformInventories: {\n    data: [],\n    results: [],\n    meta: defaultSettings\n  },\n  platformItem: {},\n  platform: {},\n  filterValue: '',\n  serviceOffering: {\n    service: {},\n    source: {}\n  }\n};\n\nconst mapPlatformIcons = (\n  platformIconMapping: StringObject,\n  platforms: Source[],\n  sourceTypeIcons: StringObject\n) =>\n  platforms?.reduce<StringObject>(\n    (acc, curr) =>\n      !acc[curr.id || 'undefined']\n        ? {\n            ...acc,\n            [curr.id || 'undefined']: sourceTypeIcons[\n              curr.source_type_id || 'undefined'\n            ]\n          }\n        : acc,\n    { ...platformIconMapping }\n  );\n\nconst setLoadingState: PlatformReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isPlatformDataLoading: payload\n});\nconst setPlatforms: PlatformReducerActionHandler = (state, { payload }) => {\n  return {\n    ...state,\n    platforms: payload,\n    isPlatformDataLoading: false\n  };\n};\n\nconst setPlatformItems: PlatformReducerActionHandler = (\n  state,\n  { payload, meta: { platformId } = {} }\n) => ({\n  ...state,\n  platformItems: {\n    ...state.platformItems,\n    [platformId!]: payload\n  },\n  isPlatformDataLoading: false\n});\nconst setMultiplePlatformItems: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  platformItems: {\n    ...state.platformItems,\n    ...payload\n  },\n  isPlatformDataLoading: false\n});\nconst setPortfolioItems: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  portfolioItem: payload,\n  isPlatformDataLoading: false\n});\nconst selectPlatform: PlatformReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  selectedPlatform: payload,\n  isLoading: false\n});\nconst filterPlatformItems: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  filterValue: payload\n});\nconst setInventoriesDataLoadingState: PlatformReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isInventoriesDataLoading: payload\n});\nconst setPlatformInventories: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  platformInventories: payload,\n  isInventoriesDataLoading: false\n});\nconst setServiceOffering: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  serviceOffering: payload\n});\nconst setSourceTypeIcons: PlatformReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  sourceTypeIcons: payload\n});\n\nexport default {\n  [`${FETCH_PLATFORMS}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORMS}_FULFILLED`]: setPlatforms,\n  [`${FETCH_PLATFORM_ITEMS}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORM_ITEMS}_FULFILLED`]: setPlatformItems,\n  [`${FETCH_PLATFORM_ITEM}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORM_ITEM}_FULFILLED`]: setPortfolioItems,\n  [`${FETCH_PLATFORM}_PENDING`]: setLoadingState,\n  [`${FETCH_PLATFORM}_FULFILLED`]: selectPlatform,\n  [`${FILTER_PLATFORM_ITEMS}_FULFILLED`]: filterPlatformItems,\n  [`${FETCH_MULTIPLE_PLATFORM_ITEMS}_FULFILLED`]: setMultiplePlatformItems,\n  [SET_LOADING_STATE]: setLoadingState,\n  [`${FETCH_PLATFORM_INVENTORIES}_PENDING`]: setInventoriesDataLoadingState,\n  [`${FETCH_PLATFORM_INVENTORIES}_FULFILLED`]: setPlatformInventories,\n  [SET_INVENTORIES_LOADING_STATE]: setInventoriesDataLoadingState,\n  [`${FETCH_SERVICE_OFFERING}_FULFILLED`]: setServiceOffering,\n  [SET_SOURCETYPE_ICONS]: setSourceTypeIcons\n};\n","import {\n  FETCH_ORDER_PROCESSES,\n  SORT_ORDER_PROCESSES,\n  SET_FILTER_ORDER_PROCESSES\n} from '../action-types';\nimport {\n  ApiCollectionResponse,\n  AnyObject,\n  ReduxActionHandler\n} from '../../types/common-types';\nimport { OrderProcess } from '@redhat-cloud-services/catalog-client';\n\nexport interface OrderProcessReducerState extends AnyObject {\n  orderProcesses: ApiCollectionResponse<OrderProcess>;\n  isLoading: boolean;\n  selectedOrderProcesses: string[];\n}\n\nexport type OrderProcessReducerActionHandler = ReduxActionHandler<\n  OrderProcessReducerState\n>;\n// Initial State\nexport const orderProcessInitialState: OrderProcessReducerState = {\n  orderProcesses: {\n    data: [],\n    results: [],\n    meta: {\n      count: 0,\n      limit: 50,\n      offset: 0\n    }\n  },\n  filterValue: '',\n  isLoading: false,\n  sortBy: {\n    index: 0,\n    property: 'name',\n    direction: 'asc'\n  },\n  selectedOrderProcesses: []\n};\n\nconst setLoadingState: OrderProcessReducerActionHandler = (state) => ({\n  ...state,\n  isLoading: true\n});\nconst setOrderProcesses: OrderProcessReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  orderProcesses: payload,\n  isLoading: false\n});\nconst setSortOrderProcesses: OrderProcessReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  sortBy: payload,\n  orderProcesses: {\n    ...state.orderProcesses,\n    meta: {\n      ...state.orderProcesses.meta,\n      offset: 0\n    }\n  }\n});\nconst setFilterValue: OrderProcessReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  filterValue: payload,\n  orderProcesses: {\n    ...state.orderProcesses,\n    meta: {\n      ...state.orderProcesses.meta,\n      offset: 0\n    }\n  }\n});\n\nexport default {\n  [`${FETCH_ORDER_PROCESSES}_PENDING`]: setLoadingState,\n  [`${FETCH_ORDER_PROCESSES}_FULFILLED`]: setOrderProcesses,\n  [SORT_ORDER_PROCESSES]: setSortOrderProcesses,\n  [SET_FILTER_ORDER_PROCESSES]: setFilterValue\n};\n","import {\n  FETCH_PORTFOLIO,\n  FETCH_PORTFOLIOS,\n  FETCH_PORTFOLIO_ITEMS,\n  FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO,\n  FETCH_PORTFOLIO_ITEM,\n  FILTER_PORTFOLIO_ITEMS,\n  SELECT_PORTFOLIO_ITEM,\n  UPDATE_PORTFOLIO,\n  SET_LOADING_STATE,\n  REMOVE_PORTFOLIO_ITEMS,\n  RESET_SELECTED_PORTFOLIO,\n  ADD_TEMPORARY_PORTFOLIO,\n  UPDATE_TEMPORARY_PORTFOLIO,\n  DELETE_TEMPORARY_PORTFOLIO,\n  RESTORE_PORTFOLIO_PREV_STATE,\n  SET_PORTFOLIO_ITEMS,\n  UPDATE_TEMPORARY_PORTFOLIO_ITEM,\n  UPDATE_PORTFOLIO_ITEM,\n  RESTORE_PORTFOLIO_ITEM_PREV_STATE\n} from '../action-types';\nimport {\n  ApiCollectionResponse,\n  AnyObject,\n  ReduxActionHandler,\n  InternalPortfolio\n} from '../../types/common-types';\nimport { PortfolioItem } from '@redhat-cloud-services/catalog-client';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport interface PortfolioItemStateObject {\n  portfolioItem: PortfolioItem;\n}\nexport interface PortfolioReducerState extends AnyObject {\n  portfolioItems: ApiCollectionResponse<PortfolioItem>;\n  portfolioItem: PortfolioItemStateObject;\n  portfolios: ApiCollectionResponse<InternalPortfolio>;\n  selectedPortfolio: InternalPortfolio;\n  portfolio: InternalPortfolio;\n  filterValue: string;\n  isLoading: boolean;\n}\n\nexport type PortfolioReducerActionHandler = ReduxActionHandler<\n  PortfolioReducerState\n>;\n\nexport const portfoliosInitialState: PortfolioReducerState = {\n  portfolioItems: {\n    data: [],\n    results: [],\n    meta: { limit: 50, offset: 0, filter: '' }\n  },\n  portfolioItem: {\n    portfolioItem: {\n      metadata: {\n        user_capabilities: {},\n        statistics: {}\n      }\n    }\n  },\n  portfolios: {\n    data: [],\n    results: [],\n    meta: defaultSettings\n  },\n  selectedPortfolio: {\n    metadata: {\n      user_capabilities: {},\n      statistics: {}\n    }\n  },\n  portfolio: {\n    metadata: {\n      user_capabilities: {},\n      statistics: {}\n    }\n  },\n  filterValue: '',\n  isLoading: false\n};\n\nconst setLoadingState: PortfolioReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isLoading: payload\n});\nconst setPortfolios: PortfolioReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  portfolios: payload,\n  isLoading: false\n});\nconst setPortfolioItems: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  portfolioItems: payload,\n  isLoading: false\n});\nconst setPortfolioItem: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => {\n  return {\n    ...state,\n    portfolioItem: {\n      ...payload,\n      metadata: {\n        user_capabilities: {\n          show: true,\n          update: true,\n          set_approval: true,\n          share: true,\n          unshare: true,\n          untag: true,\n          tag: true,\n          set_order_process: true,\n          create: true,\n          destroy: true,\n          restore: true,\n          copy: true,\n          orderable: true\n        }\n      }\n    },\n    isLoading: false\n  };\n};\n\nconst selectPortfolio: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  selectedPortfolio: payload,\n  isLoading: false\n});\nconst filterPortfolios: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  filterValue: payload\n});\nconst resetSelectedPortfolio: PortfolioReducerActionHandler = (state) => ({\n  ...state,\n  selectedPortfolio: { metadata: { user_capabilities: {}, statistics: {} } },\n  portfolioItems: portfoliosInitialState.portfolioItems\n});\n\n// these are optimistic UI updates that mutate the portfolio state immediately after user action.\n// State is synchronized with API after actions are successful\nconst addTemporaryPortfolio: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  prevState: { ...state },\n  ...state,\n  portfolios: {\n    ...state.portfolios,\n    data: [{ ...payload, metadata: { user_capabilities: {}, statistics: {} } }],\n    results: [\n      { ...payload, metadata: { user_capabilities: {}, statistics: {} } }\n    ]\n  }\n});\nconst updateTemporaryPortfolio: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => {\n  return {\n    prevState: { ...state },\n    ...state,\n    selectedPortfolio: {\n      metadata: {\n        ...state.selectedPortfolio.metadata,\n        user_capabilities: {\n          // the client typings define metadata object which will result it unknown property TS error. So we have to override it\n          ...(state.selectedPortfolio.metadata as AnyObject).user_capabilities\n        }\n      },\n      ...payload\n    },\n    portfolios: {\n      ...state.portfolios,\n      // @ts-ignore\n      data: state.portfolios?.data?.map((item: { id: any }) =>\n        item.id === payload.id\n          ? {\n              ...item,\n              ...payload\n            }\n          : item\n      ),\n      results: state.portfolios?.results?.map((item) => {\n        return String(item.id) === String(payload.id)\n          ? {\n              ...item,\n              ...payload\n            }\n          : item;\n      })\n    }\n  };\n};\n\nconst deleteTemporaryPortfolio: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  prevState: { ...state },\n  ...state,\n  selectedPortfolio: { metadata: { user_capabilities: {}, statistics: {} } },\n  portfolios: {\n    ...state.portfolios,\n    data: state.portfolios?.data?.filter(({ id }) => id !== payload),\n    results: state.portfolios?.results?.filter(({ id }) => id !== payload)\n  }\n});\n\nconst updateTemporaryPortfolioItem: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  prevState: { ...state },\n  portfolioItem: {\n    ...state.portfolioItem,\n    portfolioItem: {\n      created_at: state.portfolioItem.portfolioItem.created_at,\n      updated_at: new Date().toString(),\n      ...payload\n    }\n  },\n  portfolioItems: {\n    ...state.portfolioItems,\n    data: state.portfolioItems?.data?.map((item) =>\n      item.id === payload.id\n        ? { created_at: item.created_at, ...payload }\n        : item\n    ),\n    results: state.portfolioItems?.results?.map((item) =>\n      item.id === payload.id\n        ? { created_at: item.created_at, ...payload }\n        : item\n    )\n  }\n});\n\nconst updatePortfolioItem: PortfolioReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  portfolioItem: {\n    ...state.portfolioItem,\n    portfolioItem: payload\n  },\n  portfolioItems: {\n    ...state.portfolioItems,\n    data: state.portfolioItems?.data?.map((item) =>\n      item.id === payload.id ? { ...payload } : item\n    ),\n    results: state.portfolioItems?.results?.map((item) =>\n      item.id === payload.id ? { ...payload } : item\n    )\n  }\n});\n\nconst restorePrevState: PortfolioReducerActionHandler = (state) =>\n  state.prevState ? { ...state.prevState } : { ...state };\n\nexport default {\n  [`${FETCH_PORTFOLIOS}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIOS}_FULFILLED`]: setPortfolios,\n  [`${FETCH_PORTFOLIO_ITEMS}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO_ITEMS}_FULFILLED`]: setPortfolioItems,\n  [`${FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO}_FULFILLED`]: setPortfolioItems,\n  [`${FETCH_PORTFOLIO_ITEM}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO_ITEM}_FULFILLED`]: setPortfolioItem,\n  [`${FETCH_PORTFOLIO}_PENDING`]: setLoadingState,\n  [`${FETCH_PORTFOLIO}_FULFILLED`]: selectPortfolio,\n  [FILTER_PORTFOLIO_ITEMS]: filterPortfolios,\n  [`${SELECT_PORTFOLIO_ITEM}_FULFILLED`]: setPortfolioItem,\n  [SELECT_PORTFOLIO_ITEM]: setPortfolioItem,\n  [`${UPDATE_PORTFOLIO}_FULFILLED`]: selectPortfolio,\n  [SET_LOADING_STATE]: setLoadingState,\n  [`${REMOVE_PORTFOLIO_ITEMS}_PENDING`]: setLoadingState,\n  [RESET_SELECTED_PORTFOLIO]: resetSelectedPortfolio,\n  [ADD_TEMPORARY_PORTFOLIO]: addTemporaryPortfolio,\n  [UPDATE_TEMPORARY_PORTFOLIO]: updateTemporaryPortfolio,\n  [DELETE_TEMPORARY_PORTFOLIO]: deleteTemporaryPortfolio,\n  [RESTORE_PORTFOLIO_PREV_STATE]: restorePrevState,\n  [SET_PORTFOLIO_ITEMS]: setPortfolioItems,\n  [UPDATE_TEMPORARY_PORTFOLIO_ITEM]: updateTemporaryPortfolioItem,\n  [RESTORE_PORTFOLIO_ITEM_PREV_STATE]: restorePrevState,\n  [UPDATE_PORTFOLIO_ITEM]: updatePortfolioItem\n};\n","import { Workflow } from '@redhat-cloud-services/approval-client';\nimport { SET_LOADING_STATE } from '../action-types';\nimport { ASYNC_ACTIONS } from '../action-types/approval-action-types';\nimport { AnyObject, ReduxActionHandler } from '../../types/common-types';\n\nexport interface ApprovalReducerState extends AnyObject {\n  isFetching: boolean;\n  isResolving: boolean;\n  workflows: Workflow[];\n  resolvedWorkflows: Workflow[];\n}\n\nexport type ApprovalReducerActionHandler = ReduxActionHandler<\n  ApprovalReducerState\n>;\n\nexport const approvalInitialState: ApprovalReducerState = {\n  isFetching: false,\n  isResolving: false,\n  workflows: [],\n  resolvedWorkflows: []\n};\n\nconst setLoadingState: ApprovalReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isFetching: payload\n});\nconst setWorkflows: ApprovalReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  isFetching: false,\n  workflows: payload\n});\nconst setResolvingState: ApprovalReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isResolving: payload\n});\nconst setResolvedWorkflows: ApprovalReducerActionHandler = (\n  state,\n  { payload }\n) => ({\n  ...state,\n  isResolving: false,\n  resolvedWorkflows: payload\n});\n\nexport default {\n  [ASYNC_ACTIONS.FETCH_WORKFLOWS_PENDING]: setLoadingState,\n  [ASYNC_ACTIONS.FETCH_WORKFLOWS_FULFILLED]: setWorkflows,\n  [ASYNC_ACTIONS.RESOLVE_WORKFLOWS_PENDING]: setResolvingState,\n  [ASYNC_ACTIONS.RESOLVE_WORKFLOWS_FULFILLED]: setResolvedWorkflows,\n  [SET_LOADING_STATE]: setLoadingState\n};\n","import { FETCH_RBAC_GROUPS, SET_LOADING_STATE } from '../action-types';\nimport { Group } from '@redhat-cloud-services/rbac-client';\nimport { AnyObject, ReduxActionHandler } from '../../types/common-types';\n\nexport interface RbacReducerState extends AnyObject {\n  rbacGroups: Group[];\n  isLoading: boolean;\n}\n\nexport type RbacReducerActionHandler = ReduxActionHandler<RbacReducerState>;\nexport const rbacInitialState: RbacReducerState = {\n  rbacGroups: [],\n  isLoading: false\n};\n\nconst setLoadingState: RbacReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isLoading: payload\n});\nconst setRbacGroups: RbacReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  rbacGroups: payload,\n  isLoading: false\n});\n\nexport default {\n  [`${FETCH_RBAC_GROUPS}_PENDING`]: setLoadingState,\n  [`${FETCH_RBAC_GROUPS}_FULFILLED`]: setRbacGroups,\n  [SET_LOADING_STATE]: setLoadingState\n};\n","import { ShareInfo } from '@redhat-cloud-services/catalog-client';\nimport { QUERY_PORTFOLIO, SET_LOADING_STATE } from '../action-types';\nimport { ReduxActionHandler } from '../../types/common-types';\n\nexport interface ShareReducerState {\n  shareInfo: ShareInfo[];\n  isLoading: boolean;\n}\n\nexport type ShareReducerActionHandler = ReduxActionHandler<ShareReducerState>;\nexport const shareInfoInitialState: ShareReducerState = {\n  shareInfo: [],\n  isLoading: false\n};\n\nconst setLoadingState: ShareReducerActionHandler = (\n  state,\n  { payload = true }\n) => ({\n  ...state,\n  isLoading: payload\n});\nconst setShareInfo: ShareReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  shareInfo: payload,\n  isLoading: false\n});\n\nexport default {\n  [`${QUERY_PORTFOLIO}_PENDING`]: setLoadingState,\n  [`${QUERY_PORTFOLIO}_FULFILLED`]: setShareInfo,\n  [SET_LOADING_STATE]: setLoadingState\n};\n","import { SET_OPENAPI_SCHEMA } from '../action-types';\nimport { AnyObject, ReduxActionHandler } from '../../types/common-types';\n\nexport interface OpenApiReducerState extends AnyObject {\n  schema?: AnyObject;\n}\nexport type OpenApiReducerActionHandler = ReduxActionHandler<\n  OpenApiReducerState\n>;\n\nexport const openApiInitialState: OpenApiReducerState = {\n  schema: undefined\n};\nconst setSchema: OpenApiReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  schema: payload\n});\n\nexport default {\n  [SET_OPENAPI_SCHEMA]: setSchema\n};\n","import { ReactNode } from 'react';\nimport { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport {\n  AnyObject,\n  ReduxActionHandler,\n  StringObject\n} from '../../types/common-types';\n\nexport interface BreadcrumbFragment {\n  pathname: string;\n  searchParams?: StringObject;\n  title?: ReactNode;\n}\nexport interface BreadcrumbsReducerState extends AnyObject {\n  fragments: BreadcrumbFragment[];\n}\n\nexport type BreadcrumbsReducerActionHandler = ReduxActionHandler<\n  BreadcrumbsReducerState\n>;\n\nexport const initialBreadcrumbsState: BreadcrumbsReducerState = {\n  fragments: []\n};\n\nconst initialize: BreadcrumbsReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  fragments: payload\n});\n\nexport default {\n  [INITIALIZE_BREADCRUMBS]: initialize\n};\n","import { IntlShape, MessageDescriptor } from 'react-intl';\nimport { INITIALIZE_I18N } from '../action-types';\nimport { AnyObject, ReduxActionHandler } from '../../types/common-types';\nimport { ReactNode } from 'react';\n\nexport type I18nReducerState = Partial<IntlShape> & AnyObject;\nexport type I18nReducerActionHandler = ReduxActionHandler<I18nReducerState>;\nexport type I18nFormatMessage = (\n  descriptor: MessageDescriptor,\n  values?: AnyObject\n) => ReactNode;\n\nexport const i18nInitialState: I18nReducerState = {\n  // @ts-ignore\n  formatMessage: ({ defaultMessage = '' }) => defaultMessage\n};\nconst initialize: I18nReducerActionHandler = (state, { payload }) => ({\n  ...state,\n  ...payload\n});\n\nexport default {\n  [INITIALIZE_I18N]: initialize\n};\n","import promiseMiddleware from 'redux-promise-middleware';\nimport ReducerRegistry, {\n  applyReducerHash\n} from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\n\nimport reduxLogger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport orderReducer, {\n  orderInitialState\n} from '../redux/reducers/order-reducer';\nimport platformReducer, {\n  platformInitialState\n} from '../redux/reducers/platform-reducer';\nimport orderProcessReducer, {\n  orderProcessInitialState\n} from '../redux/reducers/order-process-reducer';\nimport portfolioReducer, {\n  portfoliosInitialState\n} from '../redux/reducers/portfolio-reducer';\nimport approvalReducer, {\n  approvalInitialState\n} from '../redux/reducers/approval-reducer';\nimport rbacReducer, { rbacInitialState } from '../redux/reducers/rbac-reducer';\nimport shareReducer, {\n  shareInfoInitialState\n} from '../redux/reducers/share-reducer';\nimport openApiReducer, {\n  openApiInitialState\n} from '../redux/reducers/open-api-reducer';\nimport loadingStateMiddleware from './loading-state-middleware';\nimport emptyDataMiddleware from './empty-data-middleware';\nimport breadcrumbsReducer, {\n  initialBreadcrumbsState\n} from '../redux/reducers/breadcrumbs-reducer';\nimport i18nReducer, { i18nInitialState } from '../redux/reducers/i18n-reducer';\nimport viewStateMiddleware from './view-state-middleware';\nimport unAuthorizedMiddleware from './unauthorized-middleware';\nimport { Store } from 'redux';\n\nconst prodMiddlewares = [\n  notificationsMiddleware({\n    errorTitleKey: ['errors', 'message', 'statusText'],\n    errorDescriptionKey: [\n      'data.errors[0].detail',\n      'data.errors',\n      'data.error',\n      'data.message',\n      'response.body.errors',\n      'data',\n      'errorMessage',\n      'stack'\n    ]\n  })\n];\n\nconst baseMiddlewares = [\n  thunk,\n  promiseMiddleware,\n  unAuthorizedMiddleware,\n  viewStateMiddleware,\n  loadingStateMiddleware,\n  emptyDataMiddleware\n];\nconst registerReducers = (registry: ReducerRegistry): void => {\n  registry.register({\n    orderReducer: applyReducerHash(orderReducer, orderInitialState),\n    platformReducer: applyReducerHash(platformReducer, platformInitialState),\n    orderProcessReducer: applyReducerHash(\n      orderProcessReducer,\n      orderProcessInitialState\n    ),\n    portfolioReducer: applyReducerHash(\n      portfolioReducer,\n      portfoliosInitialState\n    ),\n    approvalReducer: applyReducerHash(approvalReducer, approvalInitialState),\n    rbacReducer: applyReducerHash(rbacReducer, rbacInitialState),\n    shareReducer: applyReducerHash(shareReducer, shareInfoInitialState),\n    openApiReducer: applyReducerHash(openApiReducer, openApiInitialState),\n    breadcrumbsReducer: applyReducerHash(\n      breadcrumbsReducer,\n      initialBreadcrumbsState\n    ),\n    i18nReducer: applyReducerHash(i18nReducer, i18nInitialState),\n    notifications: notificationsReducer\n  });\n};\n\nexport default (isProd = false): Store => {\n  const registry = new ReducerRegistry({}, [\n    ...baseMiddlewares,\n    ...prodMiddlewares,\n    ...(isProd ? [] : [reduxLogger])\n  ]);\n  registerReducers(registry);\n  return registry.getStore() as Store;\n};\n\nexport const testStore = (): Store => {\n  const registry = new ReducerRegistry({}, [...baseMiddlewares]);\n  registerReducers(registry);\n  return registry.getStore() as Store;\n};\n","import catalogHistory from '../routing/catalog-history';\nimport { Dispatch } from 'redux';\nimport { ReduxAction } from '../types/common-types';\n\nconst unAuthorizedMiddleware = () => (dispatch: Dispatch) => (\n  action: ReduxAction\n): ReduxAction | void => {\n  const nextAction = { ...action };\n  if (action.type.match(/_REJECTED$/) && action?.payload?.redirect) {\n    setTimeout(() => {\n      catalogHistory.push(action.payload.redirect.pathname, {\n        from: catalogHistory.location\n      });\n    });\n    return;\n  }\n\n  return dispatch(nextAction);\n};\n\nexport default unAuthorizedMiddleware;\n","import { encodeState } from '../routing/uri-state-manager';\nimport catalogHistory from '../routing/catalog-history';\nimport { Dispatch } from 'redux';\nimport { ReduxAction } from '../types/common-types';\n\nconst viewStateMiddleware = () => (dispatch: Dispatch) => (\n  action: ReduxAction\n): ReduxAction => {\n  if (\n    action.type.match(/_FULFILLED$/) &&\n    action?.payload?.meta &&\n    action?.meta?.storeState\n  ) {\n    const hash = encodeState(\n      {\n        ...action.meta,\n        ...action.payload.meta\n      },\n      action.meta.stateKey\n    );\n    /**\n     * Use replace event in case that app did not compute the viewState hash yet (eg. navigating in main menu).\n     * Use history replace event to prevent the multiple prev routes with the same pathname on stack witouth the hash param.\n     * The browser goBack method will now skip the non hash route.\n     * Users wont have to trigger the goBack action multiple times to get to the actual previous view.\n     */\n    const routingAction =\n      catalogHistory.location.hash && catalogHistory.location.hash !== hash\n        ? catalogHistory.push\n        : catalogHistory.replace;\n    routingAction({\n      pathname: catalogHistory.location.pathname,\n      search: catalogHistory.location.search,\n      hash\n    });\n  }\n\n  return dispatch(action);\n};\n\nexport default viewStateMiddleware;\n","import { SET_LOADING_STATE } from '../redux/action-types';\nimport { Dispatch } from 'redux';\nimport { ReduxAction } from '../types/common-types';\n\nconst loadingStateMiddleware = () => (dispatch: Dispatch) => (\n  action: ReduxAction\n): ReduxAction => {\n  if (action.type.match(/_REJECTED$/)) {\n    dispatch({ type: SET_LOADING_STATE, payload: false });\n  }\n\n  return dispatch(action);\n};\n\nexport default loadingStateMiddleware;\n","import { Dispatch } from 'redux';\nimport { ReduxAction } from '../types/common-types';\n\nconst emptyDataMiddleware = () => (dispatch: Dispatch) => (\n  action: ReduxAction\n): ReduxAction => {\n  const nextAction = { ...action };\n  if (\n    action.type.match(/_FULFILLED$/) &&\n    action.payload &&\n    action.meta &&\n    action.payload.data &&\n    action.payload.meta\n  ) {\n    const noFilter = Object.prototype.hasOwnProperty.call(\n      nextAction.meta,\n      'filters'\n    )\n      ? Object.values(nextAction.meta?.filters || {}).every(\n          (value?: string) => typeof value === 'undefined' || value.length === 0\n        )\n      : nextAction.meta?.filter?.length === 0;\n\n    nextAction.payload.meta.noData =\n      nextAction.payload.meta.count === 0 && noFilter;\n    return dispatch(nextAction);\n  }\n\n  return dispatch(nextAction);\n};\n\nexport default emptyDataMiddleware;\n","import React, { Fragment, ReactNode } from 'react';\nimport { useIntl, MessageDescriptor } from 'react-intl';\nimport { AnyObject } from '../types/common-types';\n\nexport type UseFormatMessage<T = undefined> = () => (\n  message: MessageDescriptor,\n  values?: AnyObject\n) => ReactNode | React.ComponentType<T>;\n\nconst useFormatMessage: UseFormatMessage = () => {\n  const { formatMessage } = useIntl();\n  return (message: MessageDescriptor, values = {}) => {\n    const internalValues = Object.entries(values).reduce(\n      (acc, [key, value]) => {\n        return {\n          ...acc,\n          [key]:\n            typeof value === 'function'\n              ? (chunks: any) => <Fragment key={key}>{value(chunks)}</Fragment>\n              : value\n        };\n      },\n      {}\n    );\n    try {\n      return formatMessage(message, internalValues);\n    } catch (error) {\n      return `Unable to translate message. Definition: ${message}, values: ${values}, intl-error: ${error}`;\n    }\n  };\n};\n\nexport default useFormatMessage;\n","import { useLocation } from 'react-router-dom';\nimport { StringObject } from '../types/common-types';\n\nfunction useQuery<T = StringObject>(\n  requiredParams: string[] = []\n): [T, string, URLSearchParams] {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search);\n  return [\n    requiredParams.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: query.get(curr)\n      }),\n      {}\n    ) as T,\n    search,\n    query\n  ];\n}\n\nexport default useQuery;\n"],"names":["createContext","CopyPortfolioItemModal","lazy","OrderModal","EditApprovalWorkflow","SharePortfolioModal","RemovePortfolioModal","AddPortfolioModal","viewState","pathname","useLocation","portfolioItemId","state","portfolioReducer","portfolioItem","id","portfolioItemUserCapabilities","metadata","user_capabilities","portfolios","selectedPortfolio","portfolioUserCapabilities","itemName","name","search","dispatch","useEffect","localStorage","getItem","Switch","Route","path","removeQuery","portfolio","closeTarget","userCapabilities","requiredCapabilities","exact","closeUrl","removeSearch","portfolioName","pushParam","objectType","objectName","querySelector","keepHash","postMethod","onClose","undefined","portfolioId","data","platformReducer","platformInventories","find","obj","Suspense","fallback","CommonApiError","Products","Platforms","Platform","Portfolios","Portfolio","Orders","OrderDetail","OrderProcesses","paths","products","platforms","order_processes","platform","PORTFOLIOS_ROUTE","PORTFOLIO_ROUTE","orders","order","ORDER_ROUTE","errorPaths","Routes","component","permissions","render","some","p","Redirect","to","smoothscroll","unregister","useState","auth","setAuth","userPermissions","setUserPermissions","identity","userIdentity","setUserIdentity","openApiSchema","setOpenApiSchema","user","setUser","useDispatch","i18l","useIntl","history","useHistory","insights","chrome","init","type","INITIALIZE_I18N","payload","Promise","all","getAxiosInstance","get","CATALOG_API_BASE","then","SET_OPENAPI_SCHEMA","SOURCES_API_BASE","SET_SOURCETYPE_ICONS","reduce","acc","curr","icon_url","getUser","getUserPermissions","identifyApp","on","event","domEvent","push","navId","value","Fragment","className","Grid","style","minHeight","GridItem","sm","createGlobalStyle","release","catalogHistory","ADD_PORTFOLIO_ROUTE","ADD_PRODUCTS_ROUTE","EDIT_ORDER_PROCESS_ROUTE","EDIT_PORTFOLIO_ROUTE","EDIT_PORTFOLIO_WORKFLOW_ROUTE","EDIT_SURVEY_ROUTE","NESTED_EDIT_ORDER_PROCESS_ROUTE","NESTED_EDIT_PORTFOLIO_ROUTE","NESTED_REMOVE_PORTFOLIO_ROUTE","NESTED_SHARE_PORTFOLIO_ROUTE","NESTED_WORKFLOW_PORTFOLIO_ROUTE","ORDERS_ROUTE","PLATFORM_INVENTORIES_ROUTE","PLATFORM_ROUTE","PLATFORM_SERVICE_OFFERINGS_ROUTE","PLATFORM_TEMPLATES_ROUTE","PLATFORM_DETAILS_ROUTE","PLATFORMS_ROUTE","PORTFOLIO_ITEM_ROUTE","PORTFOLIO_ITEM_ORDER_ROUTE","PORTFOLIO_ITEM_ROUTE_EDIT","PORTFOLIO_ITEM_EDIT_ORDER_PROCESS_ROUTE","REMOVE_PORTFOLIO_ROUTE","SHARE_PORTFOLIO_ROUTE","WORKFLOW_PORTFOLIO_ROUTE","ORDER_PROCESSES_ROUTE","ADD_ORDER_PROCESS_ROUTE","REMOVE_ORDER_PROCESS_ROUTE","UPDATE_ORDER_PROCESS_ROUTE","axiosInstance","orderProcessApi","listOrderProcesses","filter","sortBy","limit","offset","sortQuery","property","direction","loadProductOptions","filterValue","initialLookup","initialLookupQuery","map","product","join","item","label","fetchOrderProcessByName","fetchOrderProcess","showOrderProcess","setOrderProcesses","toTag","toUntag","resourceType","promises","linkTagToOrderProcess","unlinkTagFromOrderProcess","getLinkedOrderProcesses","objectId","removeOrderProcess","processId","destroyOrderProcess","removeOrderProcesses","selectedProcesses","updateOrderProcess","initialData","before_portfolio_item_id","after_portfolio_item_id","return_portfolio_item_id","description","promiseB","order_process_type","addOrderProcessBeforeItem","portfolio_item_id","removeOrderProcessAssociation","associations_to_remove","OrderProcessAssociationsToRemoveAssociationsToRemoveEnum","promiseA","addOrderProcessAfterItem","promiseR","addOrderProcessReturnItem","addOrderProcess","createOrderProcess","op","listPortfolios","filters","sortDirection","Object","entries","key","listPortfolioItems","portfolioItems","portfolioReference","results","index","portfolio_id","keys","forEach","portfolioItemIndex","getPortfolio","getPortfolioItemsWithPortfolio","addPortfolio","portfolioData","items","post","length","addToPortfolio","service_offering_ref","updatePortfolio","store","patch","removePortfolio","delete","removePortfolioItems","portfolioItemIds","itemId","restore_key","restoreKey","updatePortfolioItem","fetchPortfolioByName","restorePortfolioItems","restoreData","copyPortfolio","copyPortfolioItem","copyObject","resetPortfolioItemIcon","uploadPortfolioItemIcon","portfolioItemData","FormData","append","file","headers","accept","_boundary","getPortfolioItemDetail","params","source","catch","error","status","object","notFound","getPortfolioFromState","String","undeletePortfolio","portfolioApi","portfolioItemApi","filterQuery","showPortfolio","createPortfolio","createPortfolioItem","destroyPortfolio","destroyPortfolioItem","unDeletePortfolioItem","postCopyPortfolio","postCopyPortfolioItem","iconId","scrollToTop","document","getElementById","scrollTo","behavior","top","left","nullableMapper","PortfolioItem","sanitizeValues","values","entityType","entity","schemas","getState","openApiReducer","schema","components","permittedValues","TimeAgo","date","DateFormat","hasPermission","every","permission","stateToDisplay","delay","ms","resolve","setTimeout","defaultSettings","count","getCurrentPage","Math","floor","getNewPage","page","paramsSerializer","stringify","interceptors","request","use","config","window","csrftoken","response","requestId","redirect","message","url","orderApi","OrderApi","orderItemApi","OrderItemApi","PortfolioApi","PortfolioItemApi","workflowApi","RequestApi","WorkflowApi","servicePlansApi","IconApi","ServicePlansApi","OrderProcessApi","getPortfolioApi","getPortfolioItemApi","getOrderApi","getOrderItemApi","rbacGroupApi","GroupApi","getRbacGroupApi","getWorkflowApi","getServicePlansApi","getOrderProcessApi","grapqlInstance","getGraphqlInstance","errors","errorType","share","defaultMessage","copy","setApproval","edit","deleting","save","orderProcessTitle","inviteGroup","groupsAccess","groupsPlaceholder","permissionsPlaceholder","nameTaken","currentBeforeProvision","currentAfterProvision","beforeProvision","afterProvision","returnProvision","productsPlaceholder","shared","approvalProcessSet","loading","cancel","confirm","create","owner","updated","created","enabled","disabled","available","notAvailable","noOrderProcessesDescription","noOrderProcessesFilterDescription","orderProcessesFilter","title","noOrderProcesses","orderProcess","addProcessSuccessTitle","addProcessSuccessDescription","setOrderProcess","setOrderProcessSubtitle","currentOrderProcesses","setOrderProcessNotificationTitle","setOrderProcessNotificationDescription","orderProcessName","enterOrderProcessName","orderProcessType","orderProcesses","removeProcessSuccessTitle","removeProcessSuccessDescription","removeProcessesSuccessTitle","removeProcessesSuccessDescription","deleteOrderProcess","removeProcessTitle","removeProcessAriaLabel","removeProcessDescription","updateProcessSuccessTitle","portfoliosTitle","removeItemsNotification","removePortfolioNotification","modalCreateTitle","modalEditTitle","addProducts","emptyNoProducts","portfoliosPlaceholder","portfoliosNoData","portfoliosNoDataDescription","portfolioRemoveDescription","portfolioRemoveTitle","portfolioSharePermissions","portfolioShareGroups","portfolioShareTitle","portfolioShareApply","portfolioShareDescription","addProducstPlatformTitle","addProducstPlatformDescription","addProducstFilterTitle","copyItemTitle","portfolioItemSurvey","portfolioItemOrder","portfolioItemIconTitle","portfolioItemOverview","portfolioItemSupport","portfolioItemDocumentation","portfolioItemDocLink","restoreSurvey","surveyTitle","sourceUnavaiable","objectUnavaiable","backToProducts","editProduct","shareTooltip","shareErrorMissingGroup","shareErrorMissingPermission","shareErrorMissingData","shareDuplicate","noShares","shareGroupsAccess","shareSuccessTitle","shareSuccessTitleOnlySharing","shareSuccessTitleOnlyUnsharing","shareSuccessTitleOnlyChaningPermissions","shareSuccessDescriptionOnlySharing","shareSuccessDescriptionOnlyUnsharing","shareSuccessDescriptionOnlyChaningPermissions","shareSuccessTwoGroup","shareSuccessMultipleGroups","addSuccessTitle","addSuccessDescription","Bold","chunks","wave","Skeleton","Component","props","SkeletonContainer","propTypes","width","height","CardLoader","hasGutter","Gallery","Array","_item","GalleryItem","Card","CardBody","AppPlaceholder","Bullseye","Spinner","ToolbarTitlePlaceholder","ProducLoaderColumn","ProductLoaderPlaceholder","_","IconPlaceholder","cx","cy","r","fill","FormItemLoader","ShareLoader","formatMessage","Form","TextContent","Text","TextVariants","FormGroup","fieldId","WorkflowLoader","ActionGroup","Button","variant","isDisabled","ListLoader","DataList","DataListItem","DataListItemRow","DataListItemCells","dataListCells","DataListCell","OrderDetailToolbarPlaceholder","PlatformToolbarPlaceholder","StyledLevelItem","LevelItem","StyledToolbar","Toolbar","StyledToolbarGroup","ToolbarGroup","TopToolbarWrapper","TopToolbarTitleContainer","Level","FETCH_SERVICE_PLANS","FETCH_SERVICE_PLAN_PARAMETERS","SUBMIT_SERVICE_ORDER","SET_SELECTED_PLAN","LIST_ORDERS","CANCEL_ORDER","SET_ORDERS","FETCH_ORDERS","FETCH_PLATFORM","FETCH_PLATFORMS","FETCH_PLATFORM_ITEMS","FETCH_PLATFORM_ITEM","FETCH_MULTIPLE_PLATFORM_ITEMS","FILTER_PLATFORM_ITEMS","FETCH_PLATFORM_INVENTORIES","SET_INVENTORIES_LOADING_STATE","FETCH_PORTFOLIOS","FETCH_PORTFOLIO_ITEM","FETCH_PORTFOLIO_ITEMS","FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO","FETCH_PORTFOLIO","FILTER_PORTFOLIO_ITEMS","ADD_PORTFOLIO","ADD_TO_PORTFOLIO","UPDATE_PORTFOLIO","REMOVE_PORTFOLIO","REMOVE_PORTFOLIO_ITEMS","RESTORE_PORTFOLIO_ITEMS","RESET_SELECTED_PORTFOLIO","ADD_TEMPORARY_PORTFOLIO","UPDATE_TEMPORARY_PORTFOLIO","DELETE_TEMPORARY_PORTFOLIO","RESTORE_PORTFOLIO_PREV_STATE","SET_PORTFOLIO_ITEMS","UPDATE_TEMPORARY_PORTFOLIO_ITEM","RESTORE_PORTFOLIO_ITEM_PREV_STATE","UPDATE_PORTFOLIO_ITEM","FETCH_RBAC_GROUPS","SHARE_PORTFOLIO","UNSHARE_PORTFOLIO","QUERY_PORTFOLIO","FETCH_REQUESTS","FETCH_ORDER_ITEMS","SET_LOADING_STATE","SET_ORDER_DETAIL","FETCH_APPROVAL_REQUESTS","SET_ORDER_PROVISION_ITEMS","SELECT_PORTFOLIO_ITEM","FETCH_SERVICE_OFFERING","REFRESH_PLATFORM","INITIALIZE_BREADCRUMBS","FETCH_ORDER_PROCESSES","ADD_ORDER_PROCESS","SORT_ORDER_PROCESSES","SET_ORDER_PROCESS","FETCH_ORDER_PROCESS","REMOVE_ORDER_PROCESS","REMOVE_ORDER_PROCESSES","SET_FILTER_ORDER_PROCESSES","UPDATE_ORDER_PROCESS","ASYNC_ACTIONS","fetchOrderProcesses","pagination","orderProcessReducer","finalPagination","meta","storeState","stateKey","processData","intl","notifications","fulfilled","newData","sortOrderProcesses","doFetchPortfolios","options","fetchPortfolios","fetchPortfoliosWithState","fetchPortfolioItems","fetchPortfolioItemsWithPortfolio","fetchSelectedPortfolio","notification","dismissable","a","href","onClick","preventDefault","undoRemovePortfolio","removeProductsFromPortfolio","firstSelectedProduct","productName","b","err","undoRemoveProductsFromPortfolio","newPortfolio","resetSelectedPortfolio","setOrFetchPortfolio","existingPorfolio","pathName","location","split","shift","prefix","basename","ReidrectOnAccess","useContext","isArray","capability","hasCapability","decodeState","encodedState","JSON","parse","atob","decodeURIComponent","encodeState","stateObject","hash","encodeURIComponent","btoa","console","warn","substring","createOptions","inputValue","isRequired","optionsMessages","selectOptions","choose","none","Select","input","multi","loadOptions","rest","useRef","initialFetch","setInitialFetch","formOptions","loadOptionsOverride","initial","option","initialOptions","menuIsPortal","onChange","change","args","isMulti","current","helperText","hideLabel","showError","validated","helperTextInvalid","initialState","resetGroup","group","shareReducer","NewGroupSelect","tooltipContent","addGroup","currentGroups","useReducer","hasError","group_uuid","grow","span","isSearchable","isClearable","simpleValue","placeholder","alignSelf","Tooltip","content","ouiaId","groupName","StyledText","SharedGroup","remove","permissionVerbs","translateString","string","translateField","field","translateKeys","fieldCopy","prototype","hasOwnProperty","call","fields","schemaCopy","StyledForm","ModalFormTemplate","formFields","submitLabel","modalProps","isLoading","handleSubmit","Backdrop","FocusTrap","onSubmit","ModalBoxCloseButton","ModalBoxHeader","ModalBoxBody","ModalBoxFooter","subscription","invalid","validating","pristine","submitting","body","isModal","catalogComponentMapper","getName","fieldSpy","setName","ChipGroup","Chip","handleRemove","catalogValidatorMapper","catalogValidatorAlias","memo","templateProps","componentMapper","FormTemplate","validatorMapper","resolveNewProcessProps","_fieldApi","initialProcessess","existingTagsMessage","loadTags","resolveProps","getInitialTags","subTitle","setData","Modal","isOpen","Stack","StackItem","initialValues","formData","unlinkArray","process","linkDiff","unLinkDiff","toLinkTags","toUnlinkTags","onCancel","clearedValue","disableSubmit","UnauthorizedRedirect","from","query","toLink","toUnlink","object_type","app_name","object_id","linked","unlinked","strong","asyncFunction","debounceTime","onlyResolvesLast","env","BASE_PATH","APPROVAL_API_BASE","CATALOG_INVENTORY_API_BASE","RBAC_API_BASE","permissionValues","permissionOptions","PORTFOLIO_RESOURCE_TYPE","PORTFOLIO_ITEM_RESOURCE_TYPE","INVENTORY_RESOURCE_TYPE","DEFAULT_MAX_LENGTH","APP_NAME","ServiceInventory","BEFORE_TYPE","AFTER_TYPE","RETURN_TYPE","MAX_RETRY_LIMIT","PLATFORMS_DOC_URL","USER_CAPABILITIES_PLACEHOLDER","unshare","update","destroy","set_approval","orderInitialState","servicePlans","selectedPlan","requests","orderDetail","orderProvision","orderItems","progressMessageItems","setLoadingState","setOrders","setOrderDetail","setOrderProvisionItems","planParameters","approvalRequest","platformInitialState","platformIconMapping","sourceTypeIcons","isPlatformDataLoading","selectedPlatform","platformItems","platformItem","serviceOffering","service","setInventoriesDataLoadingState","isInventoriesDataLoading","platformId","orderProcessInitialState","selectedOrderProcesses","portfoliosInitialState","statistics","setPortfolioItem","show","untag","tag","set_order_process","restore","orderable","selectPortfolio","restorePrevState","prevState","created_at","updated_at","Date","toString","approvalInitialState","isFetching","isResolving","workflows","resolvedWorkflows","rbacInitialState","rbacGroups","shareInfoInitialState","shareInfo","openApiInitialState","initialBreadcrumbsState","fragments","i18nInitialState","prodMiddlewares","notificationsMiddleware","errorTitleKey","errorDescriptionKey","baseMiddlewares","action","nextAction","match","noFilter","noData","isProd","registry","register","orderReducer","approvalReducer","rbacReducer","breadcrumbsReducer","i18nReducer","registerReducers","getStore","internalValues","requiredParams","URLSearchParams"],"sourceRoot":""}