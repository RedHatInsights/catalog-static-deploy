{"version":3,"sources":["webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/filter-icon.js","webpack:///./src/presentational-components/shared/card-checkbox.js","webpack:///./src/presentational-components/shared/service-offering-body.js","webpack:///./src/toolbar/helpers.js","webpack:///./src/presentational-components/shared/button-with-spinner.js","webpack:///./src/presentational-components/platform/platform-item.js","webpack:///./src/smart-components/portfolio/add-products-to-portfolio/add-products-gallery.js","webpack:///./src/presentational-components/shared/filter-select.js","webpack:///./src/toolbar/schemas/add-products-toolbar.schema.js","webpack:///./src/smart-components/portfolio/add-products-to-portfolio/index.js"],"names":["AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","options","getNewPage","request","debouncePromise","direction","propTypes","PropTypes","shape","isRequired","func","any","string","bool","defaultProps","BottomPaginationContainer","children","oneOfType","node","arrayOf","exports","__esModule","FilterIconConfig","name","height","width","svgPath","yOffset","xOffset","transform","FilterIcon","createIcon","CardCheckbox","handleCheck","isChecked","id","onClick","event","stopPropagation","onChange","aria-label","ServiceOfferingCardBody","distributor","display_name","pathname","searchParams","preserveSearch","portfolioName","component","TextVariants","h3","title","small","toDisplay","description","long_description","createLinkButton","item","toolbarComponentTypes","TOOLBAR_ITEM","key","fields","LINK","isDisabled","BUTTON","SpinnerButton","styled","Button","SpinnerLabel","span","showSpinner","ButtonWithSpinner","size","StyledLevel","Level","PlatformItem","src","sourceId","source_id","editMode","checked","onToggleItemSelect","service_offering_icon_id","platformId","EmptyState","platform","formatMessage","useIntl","Icon","SearchIcon","portfolioMessages","addProducstFilterTitle","addProducstPlatformTitle","filteringMessages","noResultsDescription","addProducstPlatformDescription","AddProductsGallery","renderEmptyState","checkedItems","FilterSelect","useState","undefined","stateValue","setValue","length","simpleValue","value","array","memo","prevProps","nextProps","isEqual","createAddProductsSchema","isFetching","searchValue","itemsSelected","onOptionSelect","onFilterChange","portfolioRoute","onClickAddToPortfolio","fetchPlatformItems","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","LEVEL","TOOLBAR","TOOLBAR_GROUP","isMulti","isSearchable","placeholder","FILTER_TOOLBAR_ITEM","groupName","variant","type","LEVEL_ITEM","renderGalleryItems","items","checkItem","map","includes","initialState","filterValue","isFiltering","addProductsState","state","action","payload","debouncedFilter","asyncFormValidator","filter","dispatch","filteringCallback","defaultSettings","then","AddProductsToPortfolio","selectedPlatform","setSelectedPlatform","setCheckedItems","useReducer","stateDispatch","push","useEnhancedHistory","useDispatch","useSelector","selectedPortfolio","portfolioReducer","platformReducer","platforms","platformItems","isLoading","isPlatformDataLoading","portfolio","useEffect","fetchPlatforms","data","schema","label","handleFilterItems","addToPortfolio","search","fetchPortfolioItemsWithPortfolio","itemId","index","indexOf","slice","dropDirection"],"mappings":"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","file":"js/add-products-to-portfolio~31ecd969.92bf15259b5cea0ad0d3.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    {children}\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","\"use strict\"\nexports.__esModule = true;\nexports.FilterIconConfig = {\n  name: 'FilterIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.FilterIcon = require('../createIcon').createIcon(exports.FilterIconConfig);\nexports[\"default\"] = exports.FilterIcon;","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CardCheckbox = ({ handleCheck, isChecked, id }) => (\n  <Checkbox\n    onClick={(event) => event.stopPropagation()}\n    isChecked={isChecked}\n    onChange={handleCheck}\n    aria-label=\"card checkbox\"\n    id={id}\n  />\n);\n\nCardCheckbox.propTypes = {\n  handleCheck: propTypes.func,\n  isChecked: propTypes.bool,\n  id: propTypes.string\n};\n\nexport default CardCheckbox;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ItemDetails from './card-common';\nimport ConditionalLink from './conditional-link';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { StyledCardBody } from '../styled-components/card';\n\nconst ServiceOfferingCardBody = ({\n  name,\n  display_name,\n  distributor,\n  pathname,\n  searchParams,\n  preserveSearch,\n  portfolioName,\n  ...props\n}) => (\n  <StyledCardBody>\n    <TextContent>\n      <ConditionalLink\n        pathname={pathname}\n        searchParams={searchParams}\n        preserveSearch={preserveSearch}\n      >\n        <Text component={TextVariants.h3} title={name}>\n          <EllipsisTextContainer>{name}</EllipsisTextContainer>\n        </Text>\n      </ConditionalLink>\n      {distributor && <Text component={TextVariants.small}>{distributor}</Text>}\n      {portfolioName && (\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component=\"small\">\n            Portfolio\n          </Text>\n          <Text>{portfolioName}</Text>\n        </Fragment>\n      )}\n    </TextContent>\n    <ItemDetails\n      toDisplay={[props.description ? 'description' : 'long_description']}\n      {...props}\n    />\n  </StyledCardBody>\n);\n\nServiceOfferingCardBody.propTypes = {\n  name: PropTypes.string,\n  display_name: PropTypes.string,\n  distributor: PropTypes.string,\n  long_description: PropTypes.string,\n  description: PropTypes.string,\n  pathname: PropTypes.string,\n  preserveSearch: PropTypes.bool,\n  searchParams: PropTypes.shape({ [PropTypes.string]: PropTypes.string }),\n  portfolioName: PropTypes.string\n};\n\nexport default ServiceOfferingCardBody;\n","import { toolbarComponentTypes } from './toolbar-mapper';\n\nexport const createLinkButton = ({ pathname, preserveSearch, ...item }) => ({\n  component: toolbarComponentTypes.TOOLBAR_ITEM,\n  key: `${item.key}/button-link`,\n  fields: [\n    {\n      component: toolbarComponentTypes.LINK,\n      pathname,\n      preserveSearch,\n      key: `${item.key}/button-link`,\n      isDisabled: item.isDisabled,\n      fields: [\n        {\n          component: toolbarComponentTypes.BUTTON,\n          ...item\n        }\n      ]\n    }\n  ]\n});\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner/Spinner';\n\nconst SpinnerButton = styled(Button)`\n  display: flex !important;\n  align-items: center;\n`;\n\nconst SpinnerLabel = styled.span`\n  margin-right: ${({ showSpinner }) => (showSpinner ? '8px' : '0')};\n`;\n\nconst ButtonWithSpinner = ({ children, showSpinner, isDisabled, ...props }) => (\n  <SpinnerButton {...props} isDisabled={isDisabled}>\n    <SpinnerLabel showSpinner={showSpinner}>{children}</SpinnerLabel>\n    {showSpinner && <Spinner size=\"md\" />}\n  </SpinnerButton>\n);\n\nButtonWithSpinner.propTypes = {\n  showSpinner: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  isDisabled: PropTypes.bool\n};\n\nButtonWithSpinner.defaultProps = {\n  showSpinner: false,\n  isDisabled: false\n};\n\nexport default ButtonWithSpinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level } from '@patternfly/react-core';\n\nimport CardIcon from '../shared/card-icon';\nimport CardCheckbox from '../shared/card-checkbox';\nimport ServiceOfferingCardBody from '../shared/service-offering-body';\nimport { StyledCard } from '../styled-components/styled-gallery';\nimport styled from 'styled-components';\n\nconst StyledLevel = styled(Level)`\n  flex: 1;\n`;\n\nconst PlatformItem = ({ src, ...props }) => (\n  <StyledCard key={props.id}>\n    <CardHeader>\n      <StyledLevel>\n        <CardIcon height={40} sourceId={props.source_id} />\n        {props.editMode && (\n          <CardCheckbox\n            id={props.id}\n            isChecked={props.checked}\n            handleCheck={props.onToggleItemSelect}\n          />\n        )}\n      </StyledLevel>\n    </CardHeader>\n    <ServiceOfferingCardBody {...props} />\n    <CardFooter />\n  </StyledCard>\n);\n\nPlatformItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  service_offering_icon_id: PropTypes.string,\n  source_id: PropTypes.string,\n  platformId: PropTypes.string,\n  name: PropTypes.string,\n  editMode: PropTypes.bool,\n  checked: PropTypes.bool,\n  onToggleItemSelect: PropTypes.func,\n  src: PropTypes.string\n};\n\nexport default PlatformItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, FilterIcon } from '@patternfly/react-icons';\n\nimport ContentGallery from '../../content-gallery/content-gallery';\nimport ContentGalleryEmptyState from '../../../presentational-components/shared/content-gallery-empty-state';\nimport { useIntl } from 'react-intl';\nimport filteringMessages from '../../../messages/filtering.messages';\nimport portfolioMessages from '../../../messages/portfolio.messages';\n\nconst EmptyState = ({ platform }) => {\n  const { formatMessage } = useIntl();\n  return (\n    <ContentGalleryEmptyState\n      Icon={platform ? SearchIcon : FilterIcon}\n      title={\n        platform\n          ? formatMessage(portfolioMessages.addProducstFilterTitle)\n          : formatMessage(portfolioMessages.addProducstPlatformTitle)\n      }\n      description={\n        platform\n          ? formatMessage(filteringMessages.noResultsDescription)\n          : formatMessage(portfolioMessages.addProducstPlatformDescription)\n      }\n    />\n  );\n};\n\nEmptyState.propTypes = {\n  platform: PropTypes.any\n};\n\nconst AddProductsGallery = ({ platform, ...props }) => (\n  <ContentGallery\n    editMode={true}\n    {...props}\n    renderEmptyState={() => <EmptyState platform={platform} />}\n  />\n);\n\nAddProductsGallery.propTypes = {\n  checkedItems: PropTypes.arrayOf(PropTypes.string),\n  platform: PropTypes.any\n};\n\nAddProductsGallery.defaultProps = {\n  checkedItems: []\n};\n\nexport default AddProductsGallery;\n","import React, { useState, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { InternalSelect } from '@data-driven-forms/pf4-component-mapper/dist/cjs/select';\nimport { FilterIcon } from '@patternfly/react-icons';\nimport isEqual from 'lodash/isEqual';\n\nconst ValueContainer = ({ children }) => (\n  <div className=\"filter-value-container\" style={{ position: 'absolute' }}>\n    <FilterIcon style={{ marginLeft: 6 }} fill=\"#393F44\" />\n    {children}\n  </div>\n);\n\nValueContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]).isRequired\n};\n\nconst FilterSelect = ({ onChange, ...props }) => {\n  const [stateValue, setValue] = useState(undefined);\n  return (\n    <div key=\"filter-select\" id=\"filter-select\" className=\"filter-select\">\n      <InternalSelect\n        isDisabled={!props.options || props.options.length === 0}\n        name=\"filter-select\"\n        simpleValue={false}\n        onChange={(value) => {\n          onChange(value || stateValue);\n          setValue(value || stateValue);\n        }}\n        value={stateValue}\n        {...props}\n      />\n    </div>\n  );\n};\n\nFilterSelect.propTypes = {\n  options: PropTypes.array,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default memo(FilterSelect, (prevProps, nextProps) =>\n  isEqual(prevProps.options, nextProps.options)\n);\n","import { toolbarComponentTypes } from '../toolbar-mapper';\nimport { createLinkButton } from '../helpers';\nimport FilterSelect from '../../presentational-components/shared/filter-select';\nimport ButtonWithSpinner from '../../presentational-components/shared/button-with-spinner';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nconst createAddProductsSchema = ({\n  options,\n  isFetching,\n  searchValue,\n  portfolioName,\n  itemsSelected,\n  onOptionSelect,\n  onFilterChange,\n  portfolioRoute,\n  onClickAddToPortfolio,\n  meta,\n  platformId,\n  fetchPlatformItems\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'add-products-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          title: `Add products: ${portfolioName}`,\n          key: 'add-products-title'\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'add-products-actions',\n          fields: [\n            {\n              component: toolbarComponentTypes.TOOLBAR,\n              key: 'add-products-actions-toolbar',\n              fields: [\n                {\n                  component: toolbarComponentTypes.TOOLBAR_GROUP,\n                  key: 'products-filter-group',\n                  fields: [\n                    {\n                      component: FilterSelect,\n                      key: 'select-platforms',\n                      id: 'products-platform-select',\n                      isMulti: false,\n                      isSearchable: true,\n                      placeholder: 'Filter by Platform',\n                      options,\n                      onChange: onOptionSelect\n                    },\n                    {\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      key: 'filter-products-input',\n                      onFilterChange,\n                      searchValue,\n                      isDisabled: !platformId,\n                      placeholder: 'Filter products'\n                    }\n                  ]\n                },\n                {\n                  groupName: 'cancel-group-item',\n                  ...createLinkButton({\n                    key: 'add-products-cancel-button',\n                    pathname: portfolioRoute,\n                    variant: 'link',\n                    'aria-label': 'Cancel Add products to Portfolio',\n                    preserveSearch: true,\n                    title: 'Cancel'\n                  })\n                },\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'add-group-item',\n                  fields: [\n                    {\n                      key: 'portfolio-items-add-group',\n                      component: ButtonWithSpinner,\n                      variant: 'primary',\n                      'aria-label': 'Add products to Portfolio',\n                      title: 'Add',\n                      type: 'button',\n                      onClick: onClickAddToPortfolio,\n                      isDisabled: !itemsSelected || isFetching,\n                      showSpinner: isFetching,\n                      children: 'Add',\n                      id: 'add-products-to-portfolio'\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-item',\n              fields: meta\n                ? [\n                    {\n                      component: AsyncPagination,\n                      key: 'add-products-pagination',\n                      meta,\n                      apiProps: platformId,\n                      apiRequest: fetchPlatformItems,\n                      isCompact: true\n                    }\n                  ]\n                : []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createAddProductsSchema;\n","import React, { useState, useEffect, useReducer, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AddProductsGallery from './add-products-gallery';\nimport ToolbarRenderer from '../../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../../helpers/shared/pagination';\nimport PlatformItem from '../../../presentational-components/platform/platform-item';\nimport createAddProductsSchema from '../../../toolbar/schemas/add-products-toolbar.schema';\nimport {\n  fetchPlatformItems,\n  fetchPlatforms\n} from '../../../redux/actions/platform-actions';\nimport {\n  addToPortfolio,\n  fetchPortfolioItemsWithPortfolio\n} from '../../../redux/actions/portfolio-actions';\nimport AsyncPagination from '../../common/async-pagination';\nimport useEnhancedHistory from '../../../utilities/use-enhanced-history';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BottomPaginationContainer from '../../../presentational-components/shared/bottom-pagination-container';\nimport asyncFormValidator from '../../../utilities/async-form-validator';\n\nconst renderGalleryItems = (items = [], checkItem, checkedItems) =>\n  items.map((item) => (\n    <PlatformItem\n      key={item.id}\n      {...item}\n      editMode\n      onToggleItemSelect={() => checkItem(item.id)}\n      checked={checkedItems.includes(item.id)}\n    />\n  ));\n\nconst initialState = {\n  filterValue: '',\n  isFetching: false,\n  isFiltering: false\n};\n\nconst addProductsState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n  }\n\n  return state;\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (id, filter, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(fetchPlatformItems(id, filter, { ...meta, filter })).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst AddProductsToPortfolio = ({ portfolioRoute }) => {\n  const [selectedPlatform, setSelectedPlatform] = useState(undefined);\n  const [checkedItems, setCheckedItems] = useState([]);\n  const [{ filterValue, isFetching }, stateDispatch] = useReducer(\n    addProductsState,\n    initialState\n  );\n  const { push } = useEnhancedHistory();\n  const dispatch = useDispatch();\n  const { portfolio, platforms, platformItems, isLoading } = useSelector(\n    ({\n      portfolioReducer: { selectedPortfolio },\n      platformReducer: { platforms, platformItems, isPlatformDataLoading }\n    }) => ({\n      platforms,\n      platformItems,\n      isLoading: isPlatformDataLoading,\n      portfolio: selectedPortfolio\n    })\n  );\n\n  useEffect(() => {\n    dispatch(fetchPlatforms());\n  }, []);\n\n  const checkItem = (itemId) => {\n    const index = checkedItems.indexOf(itemId);\n    return index > -1\n      ? [...checkedItems.slice(0, index), ...checkedItems.slice(index + 1)]\n      : [...checkedItems, itemId];\n  };\n\n  const items =\n    selectedPlatform && platformItems[selectedPlatform.id]\n      ? platformItems[selectedPlatform.id].data\n      : [];\n  const meta =\n    selectedPlatform &&\n    platformItems[selectedPlatform.id] &&\n    platformItems[selectedPlatform.id].meta;\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      selectedPlatform.id,\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const handleAddToPortfolio = () => {\n    dispatch({ type: 'setFetching', payload: true });\n    return dispatch(addToPortfolio(portfolio.id, checkedItems))\n      .then(() => dispatch({ type: 'setFetching', payload: false }))\n      .then(() =>\n        push({ pathname: portfolioRoute, search: `?portfolio=${portfolio.id}` })\n      )\n      .then(() => dispatch(fetchPortfolioItemsWithPortfolio(portfolio.id)))\n      .catch(() => dispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const onPlatformSelect = (platform) => {\n    setSelectedPlatform(platform);\n    dispatch(fetchPlatformItems(platform.id, filterValue, defaultSettings));\n  };\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createAddProductsSchema({\n          options: platforms.map((platform) => ({\n            value: platform.id,\n            label: platform.name,\n            id: platform.id\n          })),\n          isFetching,\n          portfolioName: (portfolio && portfolio.name) || '',\n          itemsSelected: checkedItems.length > 0,\n          onOptionSelect: onPlatformSelect,\n          onFilterChange: (value) => handleFilterItems(value),\n          portfolioRoute,\n          onClickAddToPortfolio: handleAddToPortfolio,\n          meta,\n          platformId: selectedPlatform && selectedPlatform.id,\n          searchValue: filterValue,\n          fetchPlatformItems: (id, options) =>\n            dispatch(fetchPlatformItems(id, filterValue, options))\n        })}\n      />\n      <AddProductsGallery\n        platform={!!selectedPlatform}\n        checkedItems={checkedItems}\n        isLoading={isLoading}\n        items={renderGalleryItems(\n          items,\n          (itemId) => setCheckedItems(checkItem(itemId)),\n          checkedItems\n        )}\n      />\n      {meta && meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            meta={meta}\n            apiProps={selectedPlatform && selectedPlatform.id}\n            apiRequest={(id, options) =>\n              fetchPlatformItems(id, filterValue, options)\n            }\n            dropDirection=\"up\"\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nAddProductsToPortfolio.propTypes = {\n  portfolioRoute: PropTypes.string.isRequired\n};\n\nexport default AddProductsToPortfolio;\n"],"sourceRoot":""}