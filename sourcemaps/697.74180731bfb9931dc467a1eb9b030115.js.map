{"version":3,"file":"js/697.1364445d3c6a2971db21.js","mappings":"2xBAYMA,GAAa,SAAO,SAAC,GAAY,aAAV,IAAeC,EAAK,IAAtB,gBAA6B,yBAAC,EAAAC,KAAI,KAAKD,MAA/C,CAAyD,+DACH,UAArD,SAAC,GAAmB,OAAP,aAAqB,OAAS,aAGzDE,GAAgB,SAAO,SAAC,GAAY,aAAV,IAAeF,EAAK,IAAtB,gBAA6B,OACzD,kBAAC,EAAAG,QAAO,KAAKH,MADO,CAEpB,+DACuE,UAArD,SAAC,GAAmB,OAAP,aAAqB,OAAS,aAGzDI,EAAoB,SACxBC,EACAC,EACAC,GAEA,IAAMC,EAAcC,OAAOC,QAAQJ,GAChCK,KAAI,SAAC,GAAiB,OAAb,KAAmB,IAAZ,QAChBC,KAAK,KACR,OAAOL,EACAF,GAASG,EAAYK,OAAS,EAAI,IAAIL,EAAgB,IACzDA,EAAYK,OAAS,EACrB,IAAIL,EACJ,IAqCN,QAnB2D,SAAC,GAC1D,IAAAM,EAAQ,WACR,IAAAR,aAAAA,OAAY,IAAG,KAAE,EACjB,IAAAS,IAAAA,OAAG,IAAG,GAAK,EACX,IAAAR,eAAAA,OAAc,IAAG,GAAK,EACtB,IAAAS,aAAAA,OAAY,IAAG,GAAK,EAEjBhB,GADQ,cACH,IAPkD,kFASpD,GAAmB,IAAAiB,eAAjBZ,EAAM,SAAEa,EAAI,OACdC,EAAYJ,EAAMb,EAAgBH,EAClCqB,EAAK,CACTN,SAAQ,EACRT,OAAQD,EAAkBC,EAAQC,EAAcC,GAChDW,KAAMF,EAAeE,OAAOG,GAE9B,OAAO,kBAACF,EAAS,KAAKnB,EAAK,CAAEoB,GAAIA,M","sources":["webpack:///./src/smart-components/common/catalog-link.tsx"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  Link,\n  NavLink,\n  useLocation,\n  LinkProps,\n  NavLinkProps\n} from 'react-router-dom';\nimport styled from 'styled-components';\nimport { StringObject } from '../../types/common-types';\n\nconst StyledLink = styled(({ isDisabled, ...props }) => <Link {...props} />)`\n  pointer-events: ${({ isDisabled }) => (isDisabled ? 'none' : 'initial')};\n`;\n\nconst StyledNavLink = styled(({ isDisabled, ...props }) => (\n  <NavLink {...props} />\n))`\n  pointer-events: ${({ isDisabled }) => (isDisabled ? 'none' : 'initial')};\n`;\n\nconst createSearchQuery = (\n  search: string,\n  searchParams: StringObject,\n  preserveSearch: boolean\n): string => {\n  const paramsQuery = Object.entries(searchParams)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&');\n  return preserveSearch\n    ? `${search}${paramsQuery.length > 0 ? `&${paramsQuery}` : ''}`\n    : paramsQuery.length > 0\n    ? `?${paramsQuery}`\n    : '';\n};\n\nexport type CatalogLinkTo =\n  | string\n  | { pathname: string; search?: string; hash?: string };\nexport interface CatalogLinkProps\n  extends Omit<LinkProps, 'to'>,\n    Omit<NavLinkProps, 'to'> {\n  pathname: string;\n  searchParams?: StringObject;\n  nav?: boolean;\n  preserveSearch?: boolean;\n  preserveHash?: boolean;\n  showDivider?: boolean;\n  to?: CatalogLinkTo;\n  isDisabled?: boolean;\n}\nconst CatalogLink: React.ComponentType<CatalogLinkProps> = ({\n  pathname,\n  searchParams = {},\n  nav = false,\n  preserveSearch = false,\n  preserveHash = false,\n  showDivider,\n  ...props\n}) => {\n  const { search, hash } = useLocation();\n  const Component = nav ? StyledNavLink : StyledLink;\n  const to = {\n    pathname,\n    search: createSearchQuery(search, searchParams, preserveSearch),\n    hash: preserveHash ? hash : undefined\n  };\n  return <Component {...props} to={to} />;\n};\n\nexport default CatalogLink;\n"],"names":["StyledLink","props","Link","StyledNavLink","NavLink","createSearchQuery","search","searchParams","preserveSearch","paramsQuery","Object","entries","map","join","length","pathname","nav","preserveHash","useLocation","hash","Component","to","undefined"],"sourceRoot":""}