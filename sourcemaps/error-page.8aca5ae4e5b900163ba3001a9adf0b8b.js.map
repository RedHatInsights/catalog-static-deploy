{"version":3,"file":"js/error-page.8404e209880638a8d89d.js","mappings":"6MAgCA,SA9B0B,E,SAAA,IAAe,CACvCA,kBAAmB,CACjBC,GAAI,4BACJC,eAAgB,gBAElBC,wBAAyB,CACvBF,GAAI,kCACJC,eAEE,2JAEJE,eAAgB,CACdH,GAAI,yBACJC,eAAgB,aAElBG,OAAQ,CACNJ,GAAI,6BACJC,eAAgB,qBAElBI,cAAe,CACbL,GAAI,yBACJC,eAAgB,aAElBK,oBAAqB,CACnBN,GAAI,+BACJC,eACE,uE,mBCZAM,EAAa,UAAW,I,EAAA,+B,EAAA,+B,uEAAA,E,IAIxBC,EAAK,WAAM,qCACXC,EAAS,SAACC,GAAsB,yBAACH,EAAU,KAAEG,IAiEnD,QA/D4C,W,gBACpCC,GAAgB,SAChB,GAAsB,IAAAC,eAApBC,EAAK,QAAEC,EAAQ,WAGjBC,GAAe,IAAAC,QAAO,CAC1BC,OAAQ,CACN,OAAQN,EAAc,qBACtB,OAAQA,EAAc,kBACtB,OAAQA,EAAc,kBAExBO,aAAc,CACZ,OAAQP,EAAc,0BAA2C,CAC/DG,SAAqB,QAAX,EAAAD,MAAAA,OAAK,EAALA,EAAOM,YAAI,eAAEL,SACvBM,OAAmB,QAAX,EAAAP,MAAAA,OAAK,EAALA,EAAOM,YAAI,eAAEC,OACrBC,GAAIb,EACJc,OAAQb,IAEV,OAAQE,EAAc,0BAA2C,CAC/DG,SAAqB,QAAX,EAAAD,MAAAA,OAAK,EAALA,EAAOM,YAAI,eAAEL,SACvBM,OAAmB,QAAX,EAAAP,MAAAA,OAAK,EAALA,EAAOM,YAAI,eAAEC,OACrBC,GAAIb,EACJc,OAAQb,IAEV,OAAQE,EAAc,sBAAuC,CAC3DG,SAAqB,QAAX,EAAAD,MAAAA,OAAK,EAALA,EAAOM,YAAI,eAAEL,SACvBM,OAAmB,QAAX,EAAAP,MAAAA,OAAK,EAALA,EAAOM,YAAI,eAAEC,OACrBE,OAAQb,OAId,OACE,kBAAC,EAAAc,SAAQ,CAACC,UAAU,6BAClB,kBAAC,EAAAC,WAAU,KACT,6BACE,kBAAC,EAAAC,eAAc,CAACC,KAAM,QAExB,6BACE,kBAAC,EAAAC,MAAK,CAACC,aAAa,KAAKC,KAAK,MAE1Bf,EAAagB,QAAQd,OACnBH,KAKR,kBAAC,EAAAkB,eAAc,KAEXjB,EAAagB,QAAQb,aACnBJ,IAIN,kBAAC,EAAAmB,kBAAiB,KAChB,kBAAC,IAAW,CAACnB,SAAS,KACnBH,EAAc,e","sources":["webpack:///./src/messages/api-errors.messages.ts","webpack:///./src/smart-components/error-pages/common-api-error.tsx"],"sourcesContent":["import { defineMessages } from 'react-intl';\n\nconst apiErrorsMessages = defineMessages({\n  unauthorizedTitle: {\n    id: 'errors.unauthorized.title',\n    defaultMessage: 'Unauthorized'\n  },\n  unauthorizedDescription: {\n    id: 'errors.unauthorized.description',\n    defaultMessage:\n      // eslint-disable-next-line max-len\n      'You are not authorized to access this section: <nowrap>{pathname} {search}</nowrap>. <br></br>If you believe this is a mistake, please contact support.'\n  },\n  forbiddenTitle: {\n    id: 'errors.forbidden.title',\n    defaultMessage: 'Forbidden'\n  },\n  return: {\n    id: 'errors.unauthorized.return',\n    defaultMessage: 'Return to catalog'\n  },\n  notFoundTitle: {\n    id: 'errors.not-found.title',\n    defaultMessage: 'Not found'\n  },\n  notFoundDescription: {\n    id: 'errors.not-found.description',\n    defaultMessage:\n      'The resource <nowrap>{pathname} {search}</nowrap> does not exist.'\n  }\n});\n\nexport default apiErrorsMessages;\n","import React, { ReactNode, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Bullseye,\n  Title,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStatePrimary\n} from '@patternfly/react-core';\nimport Exclamation from '@patternfly/react-icons/dist/js/icons/exclamation-icon';\nimport CatalogLink from '../common/catalog-link';\nimport styled from 'styled-components';\nimport apiErrorsMessages from '../../messages/api-errors.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst SourceSpan = styled.span`\n  white-space: nowrap;\n`;\n\nconst Br = () => <br />;\nconst Nowrap = (chunks: ReactNode) => <SourceSpan>{chunks}</SourceSpan>;\n\nconst CommonApiError: React.ComponentType = () => {\n  const formatMessage = useFormatMessage();\n  const { state, pathname } = useLocation<{\n    from?: { pathname?: string; search?: string };\n  }>();\n  const translations = useRef({\n    titles: {\n      '/401': formatMessage(apiErrorsMessages.unauthorizedTitle),\n      '/403': formatMessage(apiErrorsMessages.forbiddenTitle),\n      '/404': formatMessage(apiErrorsMessages.notFoundTitle)\n    },\n    descriptions: {\n      '/401': formatMessage(apiErrorsMessages.unauthorizedDescription, {\n        pathname: state?.from?.pathname,\n        search: state?.from?.search,\n        br: Br,\n        nowrap: Nowrap\n      }),\n      '/403': formatMessage(apiErrorsMessages.unauthorizedDescription, {\n        pathname: state?.from?.pathname,\n        search: state?.from?.search,\n        br: Br,\n        nowrap: Nowrap\n      }),\n      '/404': formatMessage(apiErrorsMessages.notFoundDescription, {\n        pathname: state?.from?.pathname,\n        search: state?.from?.search,\n        nowrap: Nowrap\n      })\n    }\n  });\n  return (\n    <Bullseye className=\"global-primary-background\">\n      <EmptyState>\n        <div>\n          <EmptyStateIcon icon={Exclamation} />\n        </div>\n        <div>\n          <Title headingLevel=\"h1\" size=\"lg\">\n            {\n              translations.current.titles[\n                pathname as keyof typeof translations.current.titles\n              ]\n            }\n          </Title>\n        </div>\n        <EmptyStateBody>\n          {\n            translations.current.descriptions[\n              pathname as keyof typeof translations.current.descriptions\n            ]\n          }\n        </EmptyStateBody>\n        <EmptyStatePrimary>\n          <CatalogLink pathname=\"/\">\n            {formatMessage(apiErrorsMessages.return)}\n          </CatalogLink>\n        </EmptyStatePrimary>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nexport default CommonApiError;\n"],"names":["unauthorizedTitle","id","defaultMessage","unauthorizedDescription","forbiddenTitle","return","notFoundTitle","notFoundDescription","SourceSpan","Br","Nowrap","chunks","formatMessage","useLocation","state","pathname","translations","useRef","titles","descriptions","from","search","br","nowrap","Bullseye","className","EmptyState","EmptyStateIcon","icon","Title","headingLevel","size","current","EmptyStateBody","EmptyStatePrimary"],"sourceRoot":""}