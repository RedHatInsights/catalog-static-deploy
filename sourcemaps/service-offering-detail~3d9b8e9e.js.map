{"version":3,"sources":["webpack:///./src/presentational-components/styled-components/level.js","webpack:///./src/smart-components/platform/service-offering/service-offering-detail.js"],"names":["StyledLevelItem","styled","alignStart","props","requiredParams","ServiceOfferingDetail","useQuery","queryValues","useState","isFetching","setIsFetching","dispatch","useDispatch","useSelector","platformReducer","serviceOffering","service","source","useEffect","fetchServiceOffering","platform","then","className","hasGutter","sm","src","icon_url","height","component","name","md","lg","id","TextVariants","p","type","date","created_at","description","extra"],"mappings":"wRAIO,IAAMA,EAAkBC,aAAO,cAAGC,WAAH,IAAkBC,EAAlB,6BACpC,kBAAC,YAAcA,KADcF,CAAH,KAGX,qBAAGC,WACH,wBAA0B,c,oNCarCE,EAAiB,CAAC,UAAW,YAiFpBC,UA/Ee,WAAM,MACZC,YAASF,GAAxBG,EAD2B,cAEEC,oBAAS,GAFX,WAE3BC,EAF2B,KAEfC,EAFe,KAG5BC,EAAWC,wBAHiB,EAINC,uBAC1B,qBAAGC,gBAAmBC,mBADhBC,EAJ0B,EAI1BA,QAASC,EAJiB,EAIjBA,OAUjB,OANAC,qBAAU,WACRR,GAAc,GACdC,EAASQ,YAAqBZ,EAAYS,QAAST,EAAYa,WAC5DC,MAAK,kBAAMX,GAAc,MAD5B,OAES,kBAAMA,GAAc,QAC5B,CAACH,EAAYS,QAAST,EAAYa,WACjCX,EAEA,kBAAC,UAAD,CAASa,UAAU,mDACjB,kBAAC,IAAD,OAMJ,kBAAC,UAAD,CAASA,UAAU,yCACjB,kBAAC,OAAD,CAAMC,WAAS,EAACD,UAAU,aACxB,yBAAKA,UAAU,cACb,kBAAC,IAAD,OAEF,kBAAC,WAAD,CAAUE,GAAI,GAAIF,UAAU,cAC1B,kBAAC,QAAD,KACE,kBAAC,IAAD,CAAiBpB,YAAU,EAACoB,UAAU,aACpC,kBAAC,IAAD,CAAUG,IAAKR,EAAOS,SAAUC,OAAQ,KACxC,kBAAC,cAAD,KACE,kBAAC,OAAD,CAAMC,UAAU,MAAMZ,EAAQa,MAC9B,kBAAC,OAAD,CAAMD,UAAU,SAAhB,wBAKR,kBAAC,WAAD,CAAUE,GAAI,EAAGC,GAAI,GACnB,kBAAC,cAAD,KACE,kBAAC,OAAD,CAAMT,UAAU,WAAhB,YACA,kBAAC,OAAD,CACEU,GAAG,SACHV,UAAU,gBACVM,UAAWK,eAAaC,GAEvBjB,EAAOY,MAEV,kBAAC,OAAD,CAAMP,UAAU,WAAhB,WACA,kBAAC,OAAD,CACEU,GAAG,aACHV,UAAU,gBACVM,UAAWK,eAAaC,GAExB,kBAAC,aAAD,CAAYC,KAAK,WAAWC,KAAMpB,EAAQqB,gBAIhD,kBAAC,WAAD,CAAUP,GAAI,EAAGC,GAAI,IACnB,kBAAC,cAAD,KACE,kBAAC,OAAD,CAAMT,UAAU,WAAhB,QACA,kBAAC,OAAD,CAAMU,GAAG,cAAcJ,UAAWK,eAAaC,GAC5ClB,EAAQa,MAEX,kBAAC,OAAD,CAAMP,UAAU,WAAhB,eACA,kBAAC,OAAD,CAAMU,GAAG,mBAAmBJ,UAAWK,eAAaC,GACjDlB,EAAQsB,aAEX,wBAAIhB,UAAU,iBACd,kBAAC,OAAD,CAAMM,UAAU,MAAhB,oBACA,kBAAC,IAAD,CAAeH,IAAKT,EAAQuB","file":"js/service-offering-detail~3d9b8e9e.1bd6e3d359a455ebde09.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { LevelItem } from '@patternfly/react-core';\n\nexport const StyledLevelItem = styled(({ alignStart, ...props }) => (\n  <LevelItem {...props} />\n))`\n  align-items: ${({ alignStart }) =>\n    alignStart ? 'flex-start !important' : 'inherit'};\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  TextContent,\n  Text,\n  TextVariants,\n  Level\n} from '@patternfly/react-core';\nimport ReactJsonView from 'react-json-view';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\n\nimport useQuery from '../../../utilities/use-query';\nimport { fetchServiceOffering } from '../../../redux/actions/platform-actions';\nimport { ProductLoaderPlaceholder } from '../../../presentational-components/shared/loader-placeholders';\nimport CardIcon from '../../../presentational-components/shared/card-icon';\nimport CatalogBreadcrumbs from '../../common/catalog-breadcrumbs';\nimport { StyledLevelItem } from '../../../presentational-components/styled-components/level';\n\nconst requiredParams = ['service', 'platform'];\n\nconst ServiceOfferingDetail = () => {\n  const [queryValues] = useQuery(requiredParams);\n  const [isFetching, setIsFetching] = useState(true);\n  const dispatch = useDispatch();\n  const { service, source } = useSelector(\n    ({ platformReducer: { serviceOffering } }) => serviceOffering\n  );\n\n  useEffect(() => {\n    setIsFetching(true);\n    dispatch(fetchServiceOffering(queryValues.service, queryValues.platform))\n      .then(() => setIsFetching(false))\n      .catch(() => setIsFetching(false));\n  }, [queryValues.service, queryValues.platform]);\n  if (isFetching) {\n    return (\n      <Section className=\"global-primary-background full-height pf-u-p-lg\">\n        <ProductLoaderPlaceholder />\n      </Section>\n    );\n  }\n\n  return (\n    <Section className=\"global-primary-background full-height\">\n      <Grid hasGutter className=\"pf-u-p-lg\">\n        <div className=\"pf-u-mb-sm\">\n          <CatalogBreadcrumbs />\n        </div>\n        <GridItem sm={12} className=\"pf-u-mb-md\">\n          <Level>\n            <StyledLevelItem alignStart className=\"pf-l-flex\">\n              <CardIcon src={source.icon_url} height={64} />\n              <TextContent>\n                <Text component=\"h1\">{service.name}</Text>\n                <Text component=\"small\">Service offering</Text>\n              </TextContent>\n            </StyledLevelItem>\n          </Level>\n        </GridItem>\n        <GridItem md={3} lg={2}>\n          <TextContent>\n            <Text className=\"font-14\">Platform</Text>\n            <Text\n              id=\"source\"\n              className=\"overflow-wrap\"\n              component={TextVariants.p}\n            >\n              {source.name}\n            </Text>\n            <Text className=\"font-14\">Created</Text>\n            <Text\n              id=\"created_at\"\n              className=\"overflow-wrap\"\n              component={TextVariants.p}\n            >\n              <DateFormat type=\"relative\" date={service.created_at} />\n            </Text>\n          </TextContent>\n        </GridItem>\n        <GridItem md={9} lg={10}>\n          <TextContent>\n            <Text className=\"font-14\">Name</Text>\n            <Text id=\"description\" component={TextVariants.p}>\n              {service.name}\n            </Text>\n            <Text className=\"font-14\">Description</Text>\n            <Text id=\"long_description\" component={TextVariants.p}>\n              {service.description}\n            </Text>\n            <hr className=\"pf-c-divider\" />\n            <Text component=\"h2\">Extra parameters</Text>\n            <ReactJsonView src={service.extra} />\n          </TextContent>\n        </GridItem>\n      </Grid>\n    </Section>\n  );\n};\n\nexport default ServiceOfferingDetail;\n"],"sourceRoot":""}