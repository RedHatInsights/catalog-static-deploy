{"version":3,"file":"js/5142.1642541284511.b8f45506d965ebb4c42d.js","mappings":"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","sources":["webpack:///./src/smart-components/portfolio/portfolio-item.js","webpack:///./src/messages/filtering.messages.ts","webpack:///./src/presentational-components/shared/bottom-pagination-container.tsx","webpack:///./src/presentational-components/shared/card-checkbox.tsx","webpack:///./src/presentational-components/shared/card-common.tsx","webpack:///./src/presentational-components/styled-components/lazy-load-image.ts","webpack:///./src/presentational-components/shared/card-icon.tsx","webpack:///./src/presentational-components/shared/content-gallery-empty-state.tsx","webpack:///./src/presentational-components/shared/service-offering-body.tsx","webpack:///./src/presentational-components/styled-components/card.ts","webpack:///./src/presentational-components/styled-components/ellipsis-text-container.ts","webpack:///./src/presentational-components/styled-components/styled-gallery.tsx","webpack:///./src/smart-components/common/async-pagination.tsx","webpack:///./src/smart-components/content-gallery/content-gallery.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level, Label } from '@patternfly/react-core';\n\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport CardCheckbox from '../../presentational-components/shared/card-checkbox';\nimport ServiceOfferingCardBody from '../../presentational-components/shared/service-offering-body';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../../presentational-components/styled-components/styled-gallery';\nimport styled from 'styled-components';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport labelMessages from '../../messages/labels.messages';\n\nconst StyledLevel = styled(Level)`\n  flex: 1;\n`;\n\nconst PortfolioItem = (props) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <StyledGalleryItem isDisabled={props.removeInProgress && props.isSelected}>\n      <StyledCard ouiaId={`portfolio-item-${props.id}`}>\n        <CardHeader>\n          <StyledLevel>\n            <CardIcon\n              src={\n                localStorage.getItem('catalog_standalone')\n                  ? props?.icon_url\n                  : `${CATALOG_API_BASE}/portfolio_items/${props.id}/icon`\n              }\n              sourceId={props.service_offering_source_ref}\n            />\n            {props.isSelectable && (\n              <CardCheckbox\n                handleCheck={() => props.onSelect(props.id)}\n                isChecked={props.isSelected}\n                id={props.id}\n              />\n            )}\n          </StyledLevel>\n        </CardHeader>\n        <ServiceOfferingCardBody {...props} />\n        <CardFooter>\n          {props.metadata?.statistics?.approval_processes > 0 ? (\n            <Label variant=\"filled\" color=\"grey\">\n              {formatMessage(labelMessages.approvalProcessSet)}\n            </Label>\n          ) : (\n            ''\n          )}\n        </CardFooter>\n      </StyledCard>\n    </StyledGalleryItem>\n  );\n};\n\nPortfolioItem.propTypes = {\n  id: PropTypes.number,\n  platformId: PropTypes.string,\n  service_offering_source_ref: PropTypes.string,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  orderUrl: PropTypes.string,\n  removeInProgress: PropTypes.bool,\n  portfolio_id: PropTypes.string,\n  icon_url: PropTypes.string,\n  metadata: PropTypes.shape({\n    user_capabilities: PropTypes.shape({ destroy: PropTypes.bool }).isRequired\n  }).isRequired\n};\n\nexport default PortfolioItem;\n","import { defineMessages } from 'react-intl';\n\nconst filteringMessages = defineMessages({\n  noItems: {\n    id: 'common.filtering.noItems',\n    defaultMessage: 'No items found'\n  },\n  filterByProduct: {\n    id: 'common.filtering.filterByProduct',\n    defaultMessage: 'Filter by product'\n  },\n  noResults: {\n    id: 'common.filtering.noResults',\n    defaultMessage: 'No results found'\n  },\n  noResultsDescription: {\n    id: 'common.filtering.noResultsDescription',\n    defaultMessage:\n      'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n  },\n  clearFilters: {\n    id: 'common.filtering.clear-filters',\n    defaultMessage: 'Clear all filters'\n  },\n  noProducts: {\n    id: 'common.filtering.no-products',\n    defaultMessage: 'No products yet'\n  },\n  noRecords: {\n    id: 'commonMessages.noRecords',\n    defaultMessage: 'No records'\n  },\n  filterByTitle: {\n    id: 'tableToolbar.filterByTitle',\n    defaultMessage: 'Filter by {title}'\n  },\n  noResultsFound: {\n    id: 'tableToolbar.noResultsFound',\n    defaultMessage: 'No results found'\n  },\n  noResult: {\n    id: 'tableToolbar.noResult',\n    defaultMessage: 'No {results}'\n  },\n  unknown: {\n    id: 'commonMessages.unknown',\n    defaultMessage: 'Unknown'\n  }\n});\n\nexport default filteringMessages;\n","/* eslint-disable react/prop-types */\nimport React, { HTMLProps } from 'react';\nimport clsx from 'clsx';\n\nconst BottomPaginationContainer: React.ComponentType<HTMLProps<\n  HTMLDivElement\n>> = ({ children, className, ...props }) => (\n  <div\n    className={clsx(\n      'pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto',\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </div>\n);\n\nexport default BottomPaginationContainer;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Checkbox } from '@patternfly/react-core';\n\nexport interface CardCheckboxProps {\n  handleCheck: (value: any) => void;\n  isChecked?: boolean;\n  id: string;\n}\nconst CardCheckbox: React.ComponentType<CardCheckboxProps> = ({\n  handleCheck,\n  isChecked,\n  id\n}) => (\n  <Checkbox\n    onClick={(event) => event.stopPropagation()}\n    isChecked={isChecked}\n    onChange={handleCheck}\n    aria-label=\"card checkbox\"\n    id={id}\n  />\n);\n\nexport default CardCheckbox;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { AnyObject } from '../../types/common-types';\nimport Truncate from 'react-truncate';\nimport { Level, LevelItem, Tooltip } from '@patternfly/react-core';\n\nconst CardPropText = styled.div`\n  overflow: hidden;\n`;\n\nexport const HeaderTitle = styled(LevelItem)`\n  max-width: calc(100% - 80px);\n  width: calc(100% - 80px);\n`;\n\nexport const HeaderLevel = styled(Level)`\n  width: 100%;\n`;\n\nexport interface ItemDetailsProps extends AnyObject {\n  toDisplay?: string[];\n}\n\nconst ItemDetails: React.ComponentType<ItemDetailsProps> = ({\n  toDisplay = [],\n  ...item\n}) => (\n  <Fragment>\n    {toDisplay.map((prop) => (\n      <Truncate\n        key={`tcard-prop-${prop}`}\n        lines={3}\n        ellipsis={\n          <Tooltip content={<div>{item[prop]}</div>}>\n            <span>...</span>\n          </Tooltip>\n        }\n      >\n        {<CardPropText key={`card-prop-${prop}`}>{item[prop]}</CardPropText>}\n      </Truncate>\n    ))}\n  </Fragment>\n);\n\nexport default ItemDetails;\n","import styled from 'styled-components';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst StyledLazyLoadImage = styled(LazyLoadImage)`\n  height: ${({ height, hidden }) => (hidden ? '0px' : `${height}px` || '40px')};\n  display: ${({ hidden }) => (hidden ? 'none' : 'inherit')};\n  float: ${({ hidden }) => (hidden ? 'left' : 'inherit')};\n  width: ${({ hidden }) => (hidden ? 0 : 'inherit')};\n`;\n\nexport default StyledLazyLoadImage;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\n\nimport { IconPlaceholder } from './loader-placeholders';\nimport CardIconDefault from '../../assets/images/card-icon-default.svg';\nimport StyledLazyLoadImage from '../styled-components/lazy-load-image';\nimport { CatalogRootState } from '../../types/redux';\nimport { StringObject } from '../../types/common-types';\n\ninterface CardIconContainerProps {\n  height: number;\n}\nconst CardIconContainer = styled.div<CardIconContainerProps>`\n  display: inline-block;\n  height: ${({ height }) => `${height}px`};\n`;\n\nexport interface CardIconProps {\n  src?: string;\n  height?: number;\n  sourceId?: string;\n}\nconst CardIcon: React.ComponentType<CardIconProps> = ({\n  src,\n  height = 40,\n  sourceId\n}) => {\n  const [isLoaded, setLoaded] = useState(false);\n  const [isUnknown, setUnknown] = useState(false);\n  const platformIconMapping = useSelector<CatalogRootState, StringObject>(\n    ({ platformReducer: { platformIconMapping } }) => platformIconMapping\n  );\n  const defaultIcon = sourceId\n    ? platformIconMapping[sourceId]\n    : CardIconDefault;\n\n  return (\n    <CardIconContainer height={height}>\n      {!isLoaded && <IconPlaceholder height={height} />}\n      <StyledLazyLoadImage\n        threshold={2000}\n        delayTime={0}\n        hidden={!isLoaded}\n        height={isLoaded ? height : 0}\n        onError={() => setUnknown(true)}\n        onLoad={() => setLoaded(true)}\n        src={!src || isUnknown ? defaultIcon : src}\n      />\n    </CardIconContainer>\n  );\n};\n\nexport default CardIcon;\n","/* eslint-disable react/prop-types */\nimport React, { ReactNode } from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants,\n  EmptyStateVariant\n} from '@patternfly/react-core';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nexport interface ContentGalleryEmptyStateProps {\n  title: string;\n  Icon: React.ComponentType;\n  description?: ReactNode;\n  PrimaryAction?: React.ComponentType;\n  renderDescription?: () => ReactNode;\n}\n\nconst ContentGalleryEmptyState: React.ComponentType<ContentGalleryEmptyStateProps> = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription = () => null\n}) => (\n  <div className=\"pf-u-mt-xl\">\n    <EmptyState variant=\"large\">\n      <EmptyStateIcon icon={Icon} />\n      <TextContent>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </TextContent>\n      <EmptyStateBody>\n        {description}\n        {renderDescription()}\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        {PrimaryAction && <PrimaryAction />}\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </div>\n);\n\nexport default ContentGalleryEmptyState;\n\nexport interface EmptyStatePrimaryAction {\n  url: string;\n  label: string;\n  hasPermission?: boolean;\n  id?: string;\n}\nexport const EmptyStatePrimaryAction: React.ComponentType<EmptyStatePrimaryAction> = ({\n  url,\n  label,\n  hasPermission = false,\n  id\n}) =>\n  hasPermission ? (\n    <CatalogLink id={id} pathname={url} preserveSearch>\n      <Button variant=\"primary\">{label}</Button>\n    </CatalogLink>\n  ) : null;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment } from 'react';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ItemDetails from './card-common';\nimport ConditionalLink from './conditional-link';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { StyledCardBody } from '../styled-components/card';\nimport { StringObject } from '../../types/common-types';\n\nexport interface ServiceOfferingCardBodyProps {\n  name?: string;\n  display_name?: string;\n  distributor?: string;\n  pathname?: string;\n  searchParams?: StringObject;\n  preserveSearch?: boolean;\n  description?: string;\n  long_description?: string;\n  portfolioName?: string;\n}\nconst ServiceOfferingCardBody: React.ComponentType<ServiceOfferingCardBodyProps> = ({\n  name,\n  distributor,\n  pathname,\n  searchParams,\n  preserveSearch,\n  portfolioName,\n  ...props\n}) => (\n  <StyledCardBody>\n    <TextContent>\n      <ConditionalLink\n        pathname={pathname}\n        searchParams={searchParams}\n        preserveSearch={preserveSearch}\n      >\n        <Text component={TextVariants.h3} title={name}>\n          <EllipsisTextContainer>{name}</EllipsisTextContainer>\n        </Text>\n      </ConditionalLink>\n      {distributor && <Text component={TextVariants.small}>{distributor}</Text>}\n      {portfolioName && (\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component=\"small\">\n            Portfolio\n          </Text>\n          <Text>{portfolioName}</Text>\n        </Fragment>\n      )}\n    </TextContent>\n    <ItemDetails\n      toDisplay={[props.description ? 'description' : 'long_description']}\n      {...props}\n    />\n  </StyledCardBody>\n);\n\nexport default ServiceOfferingCardBody;\n","import styled from 'styled-components';\nimport { CardBody } from '@patternfly/react-core';\n\nexport const StyledCardBody = styled(CardBody)`\n  height: 230px;\n  overflow: hidden;\n  padding: 0 !important;\n  margin: 0 24px 16px;\n`;\n","import styled from 'styled-components';\n\nconst EllipsisTextContainer = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nexport default EllipsisTextContainer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Card, GalleryItem } from '@patternfly/react-core';\n\nexport const StyledCard = styled(Card)`\n  height: 330px;\n  position: relative;\n`;\n\nexport const StyledGalleryItem = styled(({ isDisabled, ...props }) => (\n  <GalleryItem {...props} />\n))`\n  position: relative;\n  ::after {\n    display: ${({ isDisabled }) => (isDisabled ? 'block' : 'none')};\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    content: '';\n    background-color: rgba(210, 210, 210, 0.5);\n    z-index: 1;\n    cursor: progress;\n  }\n`;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { OnPerPageSelect, OnSetPage, Pagination } from '@patternfly/react-core';\n\nimport {\n  getCurrentPage,\n  getNewPage,\n  PaginationConfiguration\n} from '../../helpers/shared/pagination';\nimport { AnyObject } from '@data-driven-forms/react-form-renderer';\n\nexport interface AsyncPaginationProps<T = any> extends AnyObject {\n  meta: PaginationConfiguration;\n  apiRequest: (...args: any[]) => Promise<T>;\n  apiProps?: any;\n  className?: string;\n  isCompact?: boolean;\n}\nconst AsyncPagination: React.ComponentType<AsyncPaginationProps> = ({\n  meta: { limit = 50, count = 0, offset = 0 },\n  apiProps,\n  apiRequest,\n  className = '',\n  isCompact = false,\n  ...props\n}) => {\n  const handleOnPerPageSelect: OnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage: OnSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        dropDirection=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default AsyncPagination;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment, ReactNode } from 'react';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { Text, TextVariants, Gallery } from '@patternfly/react-core';\nimport { CardLoader } from '../../presentational-components/shared/loader-placeholders';\nimport filteringMessages from '../../messages/filtering.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst NoItems = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <div>\n      <Text component={TextVariants.h1}>\n        {formatMessage(filteringMessages.noItems)}\n      </Text>\n    </div>\n  );\n};\n\nexport interface ContentGalleryProps {\n  isLoading?: boolean;\n  items?: ReactNode[];\n  renderEmptyState?: () => ReactNode;\n}\nconst ContentGallery: React.ComponentType<ContentGalleryProps> = ({\n  isLoading,\n  items,\n  renderEmptyState\n}) => (\n  <Fragment>\n    {isLoading ? (\n      <CardLoader />\n    ) : items?.length === 0 ? (\n      renderEmptyState ? (\n        renderEmptyState()\n      ) : (\n        <NoItems />\n      )\n    ) : (\n      <Section type=\"content\">\n        <Gallery hasGutter className=\"content-gallery\">\n          {items}\n        </Gallery>\n      </Section>\n    )}\n  </Fragment>\n);\n\nexport default ContentGallery;\n"],"names":["StyledLevel","styled","Level","PortfolioItem","props","formatMessage","useFormatMessage","isDisabled","removeInProgress","isSelected","ouiaId","id","src","localStorage","getItem","icon_url","CATALOG_API_BASE","sourceId","service_offering_source_ref","isSelectable","handleCheck","onSelect","isChecked","metadata","statistics","approval_processes","variant","color","labelMessages","propTypes","PropTypes","platformId","orderUrl","portfolio_id","user_capabilities","destroy","isRequired","noItems","defaultMessage","filterByProduct","noResults","noResultsDescription","clearFilters","noProducts","noRecords","filterByTitle","noResultsFound","noResult","unknown","children","className","Checkbox","onClick","event","stopPropagation","onChange","CardPropText","HeaderTitle","LevelItem","HeaderLevel","toDisplay","item","Fragment","map","prop","key","lines","ellipsis","Tooltip","content","LazyLoadImage","height","CardIconContainer","useState","isLoaded","setLoaded","isUnknown","setUnknown","platformIconMapping","defaultIcon","threshold","delayTime","hidden","onError","onLoad","title","Icon","description","PrimaryAction","renderDescription","EmptyState","EmptyStateIcon","icon","TextContent","Text","component","TextVariants","EmptyStateBody","EmptyStateSecondaryActions","EmptyStatePrimaryAction","url","label","hasPermission","pathname","preserveSearch","Button","name","distributor","searchParams","portfolioName","StyledCardBody","CardBody","StyledCard","Card","StyledGalleryItem","GalleryItem","meta","limit","count","offset","apiProps","apiRequest","isCompact","Pagination","perPage","itemCount","onPerPageSelect","_event","page","onSetPage","number","debounce","options","request","dropDirection","NoItems","isLoading","items","renderEmptyState","length","type","Gallery","hasGutter"],"sourceRoot":""}