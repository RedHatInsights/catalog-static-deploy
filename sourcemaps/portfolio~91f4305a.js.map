{"version":3,"sources":["webpack:///./src/helpers/shared/breadcrumbs-creators.ts","webpack:///./src/redux/actions/breadcrumbs-actions.ts","webpack:///./src/utilities/use-breadcrumbs.ts","webpack:///./src/presentational-components/portfolio/back-to-products.tsx","webpack:///./src/utilities/use-is-mounted.js","webpack:///./src/smart-components/portfolio/portfolio.js","webpack:///./src/helpers/shared/redux-mutators.ts"],"names":["ENTITIES_EXTRA_PARAMS","FRAGMENT_TITLE","getState","portfolioReducer","selectedPortfolio","name","portfolioItem","platformReducer","selectedPlatform","serviceOffering","service","orderReducer","orderDetail","order","id","FRAGMENT_PREFIX","pathname","title","searchParams","createBreadcrumbsFromLocations","search","dispatch","length","type","payload","result","replace","split","reduce","acc","curr","index","generateTitle","forEach","key","updateTriggers","URLSearchParams","searchObject","value","formatMessage","className","variant","component","backToProducts","useIsMounted","isMounted","useRef","useEffect","current","PortfolioSuspenseFallback","fromProducts","description","schema","fields","toolbarComponentTypes","TOP_TOOLBAR","breadcrumbs","BackToProducts","hidden","TOP_TOOLBAR_TITLE","propTypes","PropTypes","node","bool","PortfolioItems","lazy","PortfolioItemDetail","AddProductsToPortfolio","initialState","selectedItems","firstSelectedProduct","undefined","removeInProgress","filterValue","copyInProgress","isFetching","isFiltering","debouncedFilter","asyncFormValidator","filteringCallback","meta","fetchPortfolioItemsWithPortfolio","then","porftolioUiReducer","state","items","item","selectItem","selectedItem","includes","slice","indexOf","product","setRemoveInProgress","removeSucessfull","setFilterValue","setCopyInProgress","setIsFetching","setFilteringFlag","Portfolio","viewState","useInitialUriHash","useReducer","portfolioItems","filter","stateDispatch","useQuery","portfolio","url","useRouteMatch","PORTFOLIO_ROUTE","history","useHistory","useDispatch","useSelector","resetBreadcrumbs","useBreadcrumbs","fetchData","portfolioId","Promise","all","fetchPlatforms","fetchSelectedPortfolio","data","insights","chrome","appNavClick","secondaryNav","scrollToTop","resetSelectedPortfolio","location","routes","portfolioRoute","addProductsRoute","editPortfolioRoute","removePortfolioRoute","sharePortfolioRoute","workflowPortfolioRoute","portfolioItemRoute","metadata","user_capabilities","show","fallback","path","userCapabilities","requiredCapabilities","portfolioLoaded","handleFilterChange","offset","removeProducts","products","removeProductsFromPortfolio","copyPortfolio","push","fetchPortfolios"],"mappings":"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","file":"js/portfolio~91f4305a.752db2fac6de1b0d44b7.js","sourcesContent":["import {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  ORDER_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORMS_ROUTE,\n  ORDERS_ROUTE,\n  EDIT_SURVEY_ROUTE,\n  ADD_PRODUCTS_ROUTE,\n  PORTFOLIO_ITEM_ROUTE_EDIT\n} from '../../constants/routes';\nimport { PortfolioReducerState } from '../../redux/reducers/portfolio-reducer';\nimport { ReactNode } from 'react';\nimport { PlatformReducerState } from '../../redux/reducers/platform-reducer';\nimport { OrderReducerState } from '../../redux/reducers/order-reducer';\n\nexport const BASE_PORTFOLIO_FRAGMENTS = [\n  {\n    title: 'Portfolios',\n    pathname: PORTFOLIOS_ROUTE,\n    searchParams: {}\n  }\n];\n\nexport const ENTITIES_EXTRA_PARAMS = {\n  'portfolio-item': ['source']\n};\n\nexport const FRAGMENT_TITLE = {\n  [PORTFOLIO_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.selectedPortfolio.name,\n  [PORTFOLIO_ITEM_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.portfolioItem.portfolioItem.name,\n  [EDIT_SURVEY_ROUTE]: (): string => 'Edit survey',\n  [ADD_PRODUCTS_ROUTE]: (): string => 'Add products',\n  [PLATFORM_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.selectedPlatform.name,\n  [PLATFORM_SERVICE_OFFERINGS_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.serviceOffering.service.name,\n  [ORDER_ROUTE]: (\n    getState: () => { orderReducer: OrderReducerState }\n  ): ReactNode => {\n    const { portfolioItem, order } = getState().orderReducer.orderDetail;\n    return `${portfolioItem.name} # ${order.id}`;\n  },\n  [PORTFOLIO_ITEM_ROUTE_EDIT]: (): string => 'Edit product'\n};\n\nexport const FRAGMENT_PREFIX = {\n  [PORTFOLIO_ROUTE]: {\n    pathname: PORTFOLIOS_ROUTE,\n    title: 'Portfolios',\n    searchParams: {}\n  },\n  [PLATFORM_ROUTE]: {\n    pathname: PLATFORMS_ROUTE,\n    title: 'Platforms',\n    searchParams: {}\n  },\n  [ORDER_ROUTE]: {\n    pathname: ORDERS_ROUTE,\n    title: 'Orders',\n    searchParams: {}\n  }\n};\n","import { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport {\n  FRAGMENT_TITLE,\n  ENTITIES_EXTRA_PARAMS,\n  FRAGMENT_PREFIX\n} from '../../helpers/shared/breadcrumbs-creators';\nimport { Dispatch } from 'redux';\nimport { BreadcrumbFragment } from '../reducers/breadcrumbs-reducer';\nimport { GetReduxState } from '../../types/redux';\nimport { AnyObject, ReduxAction } from '../../types/common-types';\n\nexport const createBreadcrumbsFromLocations = (\n  pathname = '',\n  search: AnyObject = {}\n) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): ReduxAction<BreadcrumbFragment[]> => {\n  if (pathname.length === 0) {\n    return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: [] });\n  }\n\n  let result = pathname\n    .replace(/^\\//, '')\n    .split('/')\n    .reduce<BreadcrumbFragment[]>((acc, curr, index) => {\n      const pathname = `${\n        index > 0 && acc[index - 1] ? acc[index - 1].pathname : ''\n      }/${curr}`;\n\n      const generateTitle = (FRAGMENT_TITLE[\n        pathname as keyof typeof FRAGMENT_TITLE\n      ] as unknown) as (getState: GetReduxState) => string;\n      if (!generateTitle) {\n        return acc;\n      }\n\n      const searchParams = {\n        ...(index > 0 && acc[index - 1].searchParams),\n        ...(search[curr] ? { [curr]: search[curr] } : {})\n      };\n      if ((ENTITIES_EXTRA_PARAMS as AnyObject)[curr]) {\n        (ENTITIES_EXTRA_PARAMS as AnyObject)[curr].forEach((key: string) => {\n          searchParams[key] = search[key];\n        });\n      }\n\n      return [\n        ...acc,\n        {\n          pathname,\n          searchParams,\n          title: generateTitle(getState)\n        }\n      ];\n    }, []);\n  if (result.length > 0 && (FRAGMENT_PREFIX as AnyObject)[result[0].pathname]) {\n    result = [(FRAGMENT_PREFIX as AnyObject)[result[0].pathname], ...result];\n  }\n\n  return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: result });\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createBreadcrumbsFromLocations } from '../redux/actions/breadcrumbs-actions';\nimport { INITIALIZE_BREADCRUMBS } from '../redux/action-types';\nimport { AnyObject, ReduxAction } from '../types/common-types';\nimport { AnyAction } from 'redux';\n\nconst useBreadcrumbs = (\n  updateTriggers: any[] = []\n):\n  | (() => ReduxAction<{\n      type: typeof INITIALIZE_BREADCRUMBS;\n    }>)\n  | ReduxAction<{ type: typeof INITIALIZE_BREADCRUMBS }> => {\n  const dispatch = useDispatch();\n  const { pathname, search } = useLocation();\n  if (updateTriggers.length === 0) {\n    return dispatch(\n      (createBreadcrumbsFromLocations('', {}) as unknown) as AnyAction\n    );\n  }\n\n  const searchParams = new URLSearchParams(search);\n  const searchObject: AnyObject = {};\n  searchParams.forEach((value, key) => {\n    searchObject[key] = value;\n  });\n\n  useEffect(() => {\n    dispatch(createBreadcrumbsFromLocations(pathname, searchObject));\n  }, [pathname, ...updateTriggers]);\n\n  return () =>\n    dispatch((createBreadcrumbsFromLocations('', {}) as unknown) as AnyAction);\n};\n\nexport default useBreadcrumbs;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\n\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst BackToProducts: React.ComponentType = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <div className=\"pf-u-mb-md\">\n      <AngleLeftIcon className=\"pf-u-mr-sm\" />\n      <Button\n        variant=\"link\"\n        component={() => (\n          <CatalogLink pathname=\"/products\">\n            {formatMessage(portfolioMessages.backToProducts)}\n          </CatalogLink>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default BackToProducts;\n","import { useRef, useEffect } from 'react';\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => (isMounted.current = false);\n  }, []);\n  return isMounted;\n};\n\nexport default useIsMounted;\n","import React, { useEffect, useReducer, lazy, Suspense } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useRouteMatch, Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport { toggleArraySelection } from '../../helpers/shared/redux-mutators';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport {\n  copyPortfolio,\n  fetchPortfolios,\n  fetchSelectedPortfolio,\n  removeProductsFromPortfolio,\n  resetSelectedPortfolio,\n  fetchPortfolioItemsWithPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport useQuery from '../../utilities/use-query';\nimport useBreadcrumbs from '../../utilities/use-breadcrumbs';\nimport { PORTFOLIO_ROUTE } from '../../constants/routes';\nimport { UnauthorizedRedirect } from '../error-pages/error-redirects';\nimport CatalogRoute from '../../routing/catalog-route';\nimport useIsMounted from '../../utilities/use-is-mounted';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { toolbarComponentTypes } from '../../toolbar/toolbar-mapper';\nimport BackToProducts from '../../presentational-components/portfolio/back-to-products';\n\n/**\n * Fake the toolbar until the chunk is loaded\n */\nconst PortfolioSuspenseFallback = ({ fromProducts, title, description }) => (\n  <ToolbarRenderer\n    schema={{\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR,\n          breadcrumbs: !fromProducts,\n          key: 'portfolio-top-toolbar',\n          fields: [\n            {\n              component: BackToProducts,\n              key: 'back-to-products',\n              hidden: !fromProducts\n            },\n            {\n              component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n              key: 'portfolio-toolbar-title',\n              title,\n              description\n            }\n          ]\n        }\n      ]\n    }}\n  />\n);\n\nPortfolioSuspenseFallback.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  fromProducts: PropTypes.bool\n};\n\nconst PortfolioItems = lazy(() =>\n  /* webpackChunkName: \"portfolio-items\" */ import('./portfolio-items')\n);\n\nconst PortfolioItemDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolio-item-detail\" */\n    './portfolio-item-detail/portfolio-item-detail'\n  )\n);\nconst AddProductsToPortfolio = lazy(() =>\n  import(\n    /* webpackChunkName: \"add-products-to-portfolio\" */\n    './add-products-to-portfolio'\n  )\n);\nconst initialState = {\n  selectedItems: [],\n  firstSelectedProduct: undefined,\n  removeInProgress: false,\n  filterValue: '',\n  copyInProgress: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (value, dispatch, filteringCallback, meta) => {\n    filteringCallback(true);\n    dispatch(fetchPortfolioItemsWithPortfolio(value, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst porftolioUiReducer = (state, { type, payload = {} }) =>\n  ({\n    selectItem: {\n      ...state,\n      selectedItems: toggleArraySelection(\n        state.selectedItems,\n        payload.selectedItem\n      ),\n      firstSelectedProduct: payload.product || state.firstSelectedProduct\n    },\n    setRemoveInProgress: { ...state, removeInProgress: payload },\n    removeSucessfull: { ...state, selectedItems: [], removeInProgress: false },\n    setFilterValue: { ...state, filterValue: payload, isFiltering: true },\n    setCopyInProgress: { ...state, copyInProgress: payload },\n    setIsFetching: { ...state, isFetching: payload },\n    setFilteringFlag: { ...state, isFiltering: payload }\n  }[type]);\n\nconst Portfolio = () => {\n  const viewState = useInitialUriHash();\n  const [state, stateDispatch] = useReducer(porftolioUiReducer, {\n    ...initialState,\n    filterValue: viewState?.portfolioItems?.filter || ''\n  });\n  const [searchParams] = useQuery(['portfolio', 'from-products']);\n  const { portfolio: id, 'from-products': fromProducts } = searchParams;\n  const { url } = useRouteMatch(PORTFOLIO_ROUTE);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isMounted = useIsMounted();\n  const { portfolio, portfolioItem, meta } = useSelector(\n    ({\n      portfolioReducer: {\n        selectedPortfolio,\n        portfolioItem,\n        portfolioItems: { meta }\n      }\n    }) => ({\n      portfolio: selectedPortfolio,\n      portfolioItem,\n      meta\n    })\n  );\n\n  const resetBreadcrumbs = useBreadcrumbs([portfolio, portfolioItem]);\n\n  const fetchData = (portfolioId) => {\n    stateDispatch({ type: 'setIsFetching', payload: true });\n    return Promise.all([\n      dispatch(fetchPlatforms()),\n      dispatch(fetchSelectedPortfolio(portfolioId)),\n      dispatch(\n        fetchPortfolioItemsWithPortfolio(portfolioId, viewState?.portfolioItems)\n      )\n    ])\n      .then((data) => {\n        if (isMounted.current) {\n          stateDispatch({ type: 'setIsFetching', payload: false });\n        }\n\n        return data;\n      })\n      .catch(() => stateDispatch({ type: 'setIsFetching', payload: false }));\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({\n      id: fromProducts === 'true' ? 'products' : 'portfolios',\n      secondaryNav: true\n    });\n    fetchData(id);\n    scrollToTop();\n\n    return () => {\n      resetBreadcrumbs();\n      dispatch(resetSelectedPortfolio());\n    };\n  }, []);\n\n  useEffect(() => {\n    if (\n      isMounted.current === true &&\n      !state.isFetching &&\n      history.location.pathname === PORTFOLIO_ROUTE\n    ) {\n      fetchData(id);\n      scrollToTop();\n    }\n  }, [id, history.location.pathname]);\n\n  const handleCopyPortfolio = () => {\n    stateDispatch({ type: 'setCopyInProgress', payload: true });\n    return dispatch(copyPortfolio(id))\n      .then(({ id }) =>\n        history.push({\n          pathname: PORTFOLIO_ROUTE,\n          search: `?portfolio=${id}`\n        })\n      )\n      .then(() => stateDispatch({ type: 'setCopyInProgress', payload: false }))\n      .then(() => dispatch(fetchPortfolios()))\n      .catch(() =>\n        stateDispatch({ type: 'setCopyInProgress', payload: false })\n      );\n  };\n\n  const removeProducts = (products) => {\n    stateDispatch({ type: 'setRemoveInProgress', payload: true });\n    dispatch(\n      removeProductsFromPortfolio(\n        products,\n        portfolio.name,\n        state.firstSelectedProduct\n      )\n    )\n      .then(() => stateDispatch({ type: 'removeSucessfull' }))\n      .catch(() =>\n        stateDispatch({ type: 'setRemoveInProgress', payload: false })\n      );\n  };\n\n  const handleFilterChange = (filter) => {\n    stateDispatch({ type: 'setFilterValue', payload: filter });\n    debouncedFilter(\n      id,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0,\n        filter\n      }\n    );\n  };\n\n  const routes = {\n    portfolioRoute: url,\n    addProductsRoute: `${url}/add-products`,\n    editPortfolioRoute: `${url}/edit-portfolio`,\n    removePortfolioRoute: `${url}/remove-portfolio`,\n    sharePortfolioRoute: `${url}/share-portfolio`,\n    workflowPortfolioRoute: `${url}/edit-workflow`,\n    portfolioItemRoute: `${url}/portfolio-item`\n  };\n\n  if (portfolio.metadata.user_capabilities.show === false) {\n    return <UnauthorizedRedirect />;\n  }\n\n  return (\n    <Suspense\n      fallback={\n        <PortfolioSuspenseFallback\n          fromProducts={fromProducts === 'true'}\n          title={portfolio.name}\n          description={portfolio.description}\n        />\n      }\n    >\n      <Switch>\n        <CatalogRoute\n          path={routes.addProductsRoute}\n          userCapabilities={portfolio.metadata.user_capabilities}\n          requiredCapabilities=\"update\"\n        >\n          <AddProductsToPortfolio portfolioRoute={routes.portfolioRoute} />\n        </CatalogRoute>\n        <Route path={routes.portfolioItemRoute}>\n          <PortfolioItemDetail portfolioLoaded={!state.isFetching} />\n        </Route>\n        <Route path={routes.portfolioRoute}>\n          <PortfolioItems\n            routes={routes}\n            fromProducts={fromProducts === 'true'}\n            handleFilterChange={handleFilterChange}\n            removeProducts={removeProducts}\n            copyPortfolio={handleCopyPortfolio}\n            state={state}\n            stateDispatch={stateDispatch}\n          />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Portfolio;\n","export const toggleArraySelection = (items: string[], item: string): string[] =>\n  items.includes(item)\n    ? [\n        ...items.slice(0, items.indexOf(item)),\n        ...items.slice(items.indexOf(item) + 1)\n      ]\n    : [...items, item];\n"],"sourceRoot":""}