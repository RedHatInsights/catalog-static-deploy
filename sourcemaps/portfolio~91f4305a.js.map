{"version":3,"sources":["webpack:///./src/presentational-components/portfolio/back-to-products.tsx","webpack:///./src/utilities/use-is-mounted.js","webpack:///./src/smart-components/portfolio/portfolio.js","webpack:///./src/helpers/shared/redux-mutators.ts"],"names":["formatMessage","className","variant","component","pathname","backToProducts","useIsMounted","isMounted","useRef","useEffect","current","PortfolioSuspenseFallback","fromProducts","title","description","schema","fields","toolbarComponentTypes","TOP_TOOLBAR","breadcrumbs","key","BackToProducts","hidden","TOP_TOOLBAR_TITLE","propTypes","PropTypes","node","bool","PortfolioItems","lazy","PortfolioItemDetail","AddProductsToPortfolio","initialState","selectedItems","firstSelectedProduct","undefined","removeInProgress","filterValue","copyInProgress","isFetching","isFiltering","debouncedFilter","asyncFormValidator","value","dispatch","filteringCallback","meta","fetchPortfolioItemsWithPortfolio","then","porftolioUiReducer","state","items","item","type","payload","selectItem","selectedItem","includes","slice","indexOf","product","setRemoveInProgress","removeSucessfull","setFilterValue","setCopyInProgress","setIsFetching","setFilteringFlag","Portfolio","viewState","useInitialUriHash","useReducer","portfolioItems","filter","stateDispatch","useQuery","searchParams","id","portfolio","url","useRouteMatch","PORTFOLIO_ROUTE","history","useHistory","useDispatch","useSelector","portfolioReducer","selectedPortfolio","portfolioItem","resetBreadcrumbs","useBreadcrumbs","fetchData","portfolioId","Promise","all","fetchPlatforms","fetchSelectedPortfolio","data","insights","chrome","appNavClick","secondaryNav","scrollToTop","resetSelectedPortfolio","location","routes","portfolioRoute","addProductsRoute","editPortfolioRoute","removePortfolioRoute","sharePortfolioRoute","workflowPortfolioRoute","portfolioItemRoute","metadata","user_capabilities","show","fallback","name","path","userCapabilities","requiredCapabilities","portfolioLoaded","handleFilterChange","offset","removeProducts","products","removeProductsFromPortfolio","copyPortfolio","push","search","fetchPortfolios"],"mappings":"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","file":"js/portfolio~91f4305a.ec06c15355c3ac4fc468.js","sourcesContent":["import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\n\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst BackToProducts: React.ComponentType = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <div className=\"pf-u-mb-md\">\n      <AngleLeftIcon className=\"pf-u-mr-sm\" />\n      <Button\n        variant=\"link\"\n        component={() => (\n          <CatalogLink pathname=\"/products\">\n            {formatMessage(portfolioMessages.backToProducts)}\n          </CatalogLink>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default BackToProducts;\n","import { useRef, useEffect } from 'react';\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => (isMounted.current = false);\n  }, []);\n  return isMounted;\n};\n\nexport default useIsMounted;\n","import React, { useEffect, useReducer, lazy, Suspense } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useRouteMatch, Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport { toggleArraySelection } from '../../helpers/shared/redux-mutators';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport {\n  copyPortfolio,\n  fetchPortfolios,\n  fetchSelectedPortfolio,\n  removeProductsFromPortfolio,\n  resetSelectedPortfolio,\n  fetchPortfolioItemsWithPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport useQuery from '../../utilities/use-query';\nimport useBreadcrumbs from '../../utilities/use-breadcrumbs';\nimport { PORTFOLIO_ROUTE } from '../../constants/routes';\nimport { UnauthorizedRedirect } from '../error-pages/error-redirects';\nimport CatalogRoute from '../../routing/catalog-route';\nimport useIsMounted from '../../utilities/use-is-mounted';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { toolbarComponentTypes } from '../../toolbar/toolbar-mapper';\nimport BackToProducts from '../../presentational-components/portfolio/back-to-products';\n\n/**\n * Fake the toolbar until the chunk is loaded\n */\nconst PortfolioSuspenseFallback = ({ fromProducts, title, description }) => (\n  <ToolbarRenderer\n    schema={{\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR,\n          breadcrumbs: !fromProducts,\n          key: 'portfolio-top-toolbar',\n          fields: [\n            {\n              component: BackToProducts,\n              key: 'back-to-products',\n              hidden: !fromProducts\n            },\n            {\n              component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n              key: 'portfolio-toolbar-title',\n              title,\n              description\n            }\n          ]\n        }\n      ]\n    }}\n  />\n);\n\nPortfolioSuspenseFallback.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  fromProducts: PropTypes.bool\n};\n\nconst PortfolioItems = lazy(() =>\n  /* webpackChunkName: \"portfolio-items\" */ import('./portfolio-items')\n);\n\nconst PortfolioItemDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolio-item-detail\" */\n    './portfolio-item-detail/portfolio-item-detail'\n  )\n);\nconst AddProductsToPortfolio = lazy(() =>\n  import(\n    /* webpackChunkName: \"add-products-to-portfolio\" */\n    './add-products-to-portfolio'\n  )\n);\nconst initialState = {\n  selectedItems: [],\n  firstSelectedProduct: undefined,\n  removeInProgress: false,\n  filterValue: '',\n  copyInProgress: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (value, dispatch, filteringCallback, meta) => {\n    filteringCallback(true);\n    dispatch(fetchPortfolioItemsWithPortfolio(value, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst porftolioUiReducer = (state, { type, payload = {} }) =>\n  ({\n    selectItem: {\n      ...state,\n      selectedItems: toggleArraySelection(\n        state.selectedItems,\n        payload.selectedItem\n      ),\n      firstSelectedProduct: payload.product || state.firstSelectedProduct\n    },\n    setRemoveInProgress: { ...state, removeInProgress: payload },\n    removeSucessfull: { ...state, selectedItems: [], removeInProgress: false },\n    setFilterValue: { ...state, filterValue: payload, isFiltering: true },\n    setCopyInProgress: { ...state, copyInProgress: payload },\n    setIsFetching: { ...state, isFetching: payload },\n    setFilteringFlag: { ...state, isFiltering: payload }\n  }[type]);\n\nconst Portfolio = () => {\n  const viewState = useInitialUriHash();\n  const [state, stateDispatch] = useReducer(porftolioUiReducer, {\n    ...initialState,\n    filterValue: viewState?.portfolioItems?.filter || ''\n  });\n  const [searchParams] = useQuery(['portfolio', 'from-products']);\n  const { portfolio: id, 'from-products': fromProducts } = searchParams;\n  const { url } = useRouteMatch(PORTFOLIO_ROUTE);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isMounted = useIsMounted();\n  const { portfolio, portfolioItem, meta } = useSelector(\n    ({\n      portfolioReducer: {\n        selectedPortfolio,\n        portfolioItem,\n        portfolioItems: { meta }\n      }\n    }) => ({\n      portfolio: selectedPortfolio,\n      portfolioItem,\n      meta\n    })\n  );\n\n  const resetBreadcrumbs = useBreadcrumbs([portfolio, portfolioItem]);\n\n  const fetchData = (portfolioId) => {\n    stateDispatch({ type: 'setIsFetching', payload: true });\n    return Promise.all([\n      dispatch(fetchPlatforms()),\n      dispatch(fetchSelectedPortfolio(portfolioId)),\n      dispatch(\n        fetchPortfolioItemsWithPortfolio(portfolioId, viewState?.portfolioItems)\n      )\n    ])\n      .then((data) => {\n        if (isMounted.current) {\n          stateDispatch({ type: 'setIsFetching', payload: false });\n        }\n\n        return data;\n      })\n      .catch(() => stateDispatch({ type: 'setIsFetching', payload: false }));\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({\n      id: fromProducts === 'true' ? 'products' : 'portfolios',\n      secondaryNav: true\n    });\n    fetchData(id);\n    scrollToTop();\n\n    return () => {\n      resetBreadcrumbs();\n      dispatch(resetSelectedPortfolio());\n    };\n  }, []);\n\n  useEffect(() => {\n    if (\n      isMounted.current === true &&\n      !state.isFetching &&\n      history.location.pathname === PORTFOLIO_ROUTE\n    ) {\n      fetchData(id);\n      scrollToTop();\n    }\n  }, [id, history.location.pathname]);\n\n  const handleCopyPortfolio = () => {\n    stateDispatch({ type: 'setCopyInProgress', payload: true });\n    return dispatch(copyPortfolio(id))\n      .then(({ id }) =>\n        history.push({\n          pathname: PORTFOLIO_ROUTE,\n          search: `?portfolio=${id}`\n        })\n      )\n      .then(() => stateDispatch({ type: 'setCopyInProgress', payload: false }))\n      .then(() => dispatch(fetchPortfolios()))\n      .catch(() =>\n        stateDispatch({ type: 'setCopyInProgress', payload: false })\n      );\n  };\n\n  const removeProducts = (products) => {\n    stateDispatch({ type: 'setRemoveInProgress', payload: true });\n    dispatch(\n      removeProductsFromPortfolio(\n        products,\n        portfolio.name,\n        state.firstSelectedProduct\n      )\n    )\n      .then(() => stateDispatch({ type: 'removeSucessfull' }))\n      .catch(() =>\n        stateDispatch({ type: 'setRemoveInProgress', payload: false })\n      );\n  };\n\n  const handleFilterChange = (filter) => {\n    stateDispatch({ type: 'setFilterValue', payload: filter });\n    debouncedFilter(\n      id,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0,\n        filter\n      }\n    );\n  };\n\n  const routes = {\n    portfolioRoute: url,\n    addProductsRoute: `${url}/add-products`,\n    editPortfolioRoute: `${url}/edit-portfolio`,\n    removePortfolioRoute: `${url}/remove-portfolio`,\n    sharePortfolioRoute: `${url}/share-portfolio`,\n    workflowPortfolioRoute: `${url}/edit-workflow`,\n    portfolioItemRoute: `${url}/portfolio-item`\n  };\n\n  if (portfolio.metadata.user_capabilities.show === false) {\n    return <UnauthorizedRedirect />;\n  }\n\n  return (\n    <Suspense\n      fallback={\n        <PortfolioSuspenseFallback\n          fromProducts={fromProducts === 'true'}\n          title={portfolio.name}\n          description={portfolio.description}\n        />\n      }\n    >\n      <Switch>\n        <CatalogRoute\n          path={routes.addProductsRoute}\n          userCapabilities={portfolio.metadata.user_capabilities}\n          requiredCapabilities=\"update\"\n        >\n          <AddProductsToPortfolio portfolioRoute={routes.portfolioRoute} />\n        </CatalogRoute>\n        <Route path={routes.portfolioItemRoute}>\n          <PortfolioItemDetail portfolioLoaded={!state.isFetching} />\n        </Route>\n        <Route path={routes.portfolioRoute}>\n          <PortfolioItems\n            routes={routes}\n            fromProducts={fromProducts === 'true'}\n            handleFilterChange={handleFilterChange}\n            removeProducts={removeProducts}\n            copyPortfolio={handleCopyPortfolio}\n            state={state}\n            stateDispatch={stateDispatch}\n          />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Portfolio;\n","export const toggleArraySelection = (items: string[], item: string): string[] =>\n  items.includes(item)\n    ? [\n        ...items.slice(0, items.indexOf(item)),\n        ...items.slice(items.indexOf(item) + 1)\n      ]\n    : [...items, item];\n"],"sourceRoot":""}