{"version":3,"sources":["webpack:///./src/smart-components/common/catalog-link.js","webpack:///./src/utilities/async-form-validator.js","webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/toolbar/toolbar-mapper.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/utilities/use-enhanced-history.js","webpack:///./src/helpers/platform/platform-helper.js","webpack:///./src/redux/actions/platform-actions.js","webpack:///./src/presentational-components/styled-components/lazy-load-image.js","webpack:///./src/presentational-components/shared/card-icon.js","webpack:///./src/presentational-components/shared/conditional-link.js","webpack:///./src/toolbar/toolbar-renderer.js","webpack:///./src/presentational-components/styled-components/toolbars.js","webpack:///./src/smart-components/common/catalog-breadcrumbs.js","webpack:///./src/assets/images/card-icon-default.svg","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/presentational-components/shared/app-tabs.js","webpack:///./src/helpers/order/order-helper.js","webpack:///./src/presentational-components/order/order-notification.js","webpack:///./src/redux/actions/order-actions.js","webpack:///./src/toolbar/schemas/orders-toolbar.schema.js","webpack:///./src/helpers/shared/orders.js","webpack:///./src/smart-components/order/order-item.js","webpack:///./src/smart-components/order/orders-list.js","webpack:///./src/smart-components/order/orders.js"],"names":["StyledLink","styled","Link","isDisabled","StyledNavLink","NavLink","createSearchQuery","search","searchParams","preserveSearch","paramsQuery","Object","entries","map","key","value","join","length","CatalogLink","pathname","nav","props","useLocation","Component","to","propTypes","PropTypes","string","isRequired","shape","bool","defaultProps","asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","FilterInputGroup","div","FilterInput","TextInput","FilterIconsContainer","span","StyledCloseIcon","CloseIcon","StyledSearchIcon","SearchIcon","FilterToolbarItem","searchValue","onFilterChange","placeholder","isClearable","ToolbarItem","type","onChange","aria-label","width","height","onClick","func","ToolbarButton","title","Button","toolbarMapper","TopToolbar","TopToolbarTitle","Toolbar","className","ToolbarGroup","Level","LevelItem","AppTabs","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","TOOLBAR","TOOLBAR_ITEM","TOOLBAR_GROUP","FILTER_TOOLBAR_ITEM","LINK","BUTTON","LEVEL","LEVEL_ITEM","TABS","AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","isCompact","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","getNewPage","request","debouncePromise","direction","any","useEnhancedHistory","removeSearch","history","useHistory","push","target","split","undefined","removeSearchQuery","axiosInstance","getAxiosInstance","graphqlInstance","getGraphqlInstance","getPlatforms","post","SOURCES_API_BASE","query","then","data","application_types","sources","getPlatform","platformId","get","getPlatformItems","filter","filterQuery","TOPOLOGICAL_INVENTORY_API_BASE","getPlatformInventories","defaultSettings","getServiceOffering","serviceOfferingId","sourceId","Promise","all","source","source_type_id","icon_url","service","fetchPlatforms","dispatch","ActionTypes","PlatformHelper","payload","error","fetchPlatformItems","fetchSelectedPlatform","id","fetchPlatformInventories","fetchServiceOffering","StyledLazyLoadImage","LazyLoadImage","hidden","CardIconContainer","CardIcon","src","useState","isLoaded","setLoaded","isUnknown","setUnknown","platformIconMapping","useSelector","platformReducer","defaultIcon","CardIconDefault","threshold","delayTime","onError","onLoad","style","object","ConditionalLink","children","oneOfType","node","arrayOf","ToolbarContext","createContext","component","Consumer","componentMapper","C","element","render","fields","field","ToolbarRenderer","schema","Provider","array","StyledToolbar","TopToolbarWrapper","TopToolbarTitleContainer","CatalogBreadcrumbs","fragments","breadcrumbsReducer","index","exact","isActive","module","exports","paddingBottom","breadcrumbs","rest","breadcrumbsSpacing","description","noData","clsx","TextVariants","h2","p","tabItems","activeTab","find","name","includes","activeKey","eventKey","onSelect","tabIndex","item","orderApi","getOrderApi","portfolioItemApi","getOrderItemApi","getPortfolioItemApi","getRequestsApi","getServicePlans","portfolioItemId","listServicePlans","getOrderItems","orderIds","CATALOG_API_BASE","orderId","getOrderPortfolioItems","itemIds","itemId","OrderNotification","clearNotifications","ORDERS_ROUTE","fetchServicePlans","OrderHelper","sendSubmitOrder","a","async","service_parameters","providerControlParameters","parameters","createOrder","order","orderItem","provider_control_parameters","addToOrder","submitOrder","addNotification","variant","dismissable","cancelOrder","getState","orderDetail","orderReducer","state","approvalRequest","fetchOrders","filters","pagination","queryFilter","Array","isArray","orders","orderItems","portfolio_item_id","portfolioItems","order_id","fetchOrderDetails","params","platform","portfolio","portfolioItem","progressMessages","createOrdersToolbarSchema","getOrderIcon","getOrderPortfolioName","OrderItem","memo","portfolioReducer","orderPlatform","service_offering_source_ref","orderPortfolio","portfolio_id","orderName","Fragment","DataListItem","aria-labelledby","DataListItemRow","DataListItemCells","dataListCells","DataListCell","Split","gutter","SplitItem","isFilled","TextContent","Grid","GridItem","Text","h5","ORDER_ROUTE","ORDER_APPROVAL_ROUTE","small","DateFormat","date","created_at","owner","updated_at","prevProps","nextProps","debouncedFilter","asyncFormValidator","filteringCallback","initialState","isOpen","isFetching","isFiltering","filterType","ordersListState","action","OrdersList","useReducer","stateDispatch","useDispatch","useEffect","handlePagination","_apiProps","handleFilterItems","Section","PrimaryToolbar","activeFiltersConfig","category","chips","onDelete","_e","clearAll","chip","newFilters","filterConfig","items","filterValues","label","DataList","EmptyTable","Bullseye","EmptyState","EmptyStateIcon","icon","Title","size","EmptyStateBody","EmptyStateSecondaryActions","TableToolbar","Flex","breakpointMods","modifier","Orders","insights","chrome","appNavClick","secondaryNav","Stack"],"mappings":"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","file":"js/orders.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, NavLink, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  pointer-events: ${({ isDisabled }) => (isDisabled ? 'none' : 'initial')};\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  pointer-events: ${({ isDisabled }) => (isDisabled ? 'none' : 'initial')};\n`;\n\nconst createSearchQuery = (search, searchParams, preserveSearch) => {\n  const paramsQuery = Object.entries(searchParams)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&');\n  return preserveSearch\n    ? `${search}${paramsQuery.length > 0 ? `&${paramsQuery}` : ''}`\n    : paramsQuery.length > 0\n    ? `?${paramsQuery}`\n    : '';\n};\n\nconst CatalogLink = ({\n  pathname,\n  searchParams,\n  nav,\n  preserveSearch,\n  ...props\n}) => {\n  const { search } = useLocation();\n  const Component = nav ? StyledNavLink : StyledLink;\n  const to = {\n    pathname,\n    search: createSearchQuery(search, searchParams, preserveSearch)\n  };\n  return <Component to={to} {...props} />;\n};\n\nCatalogLink.propTypes = {\n  pathname: PropTypes.string.isRequired,\n  searchParams: PropTypes.shape({\n    [PropTypes.string]: PropTypes.string\n  }),\n  nav: PropTypes.bool,\n  preserveSearch: PropTypes.bool\n};\n\nCatalogLink.defaultProps = {\n  nav: false,\n  preserveSearch: false,\n  searchParams: {}\n};\n\nexport default CatalogLink;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterInputGroup = styled.div`\n  position: relative;\n  width: 300px;\n  height: 36px;\n`;\n\nconst FilterInput = styled(TextInput)`\n  position: absolute;\n  width: 300px;\n  background: transparent;\n`;\n\nconst FilterIconsContainer = styled.span`\n  position: absolute;\n  right: 8px;\n  top: 8px;\n`;\n\nconst StyledCloseIcon = styled(CloseIcon)`\n  z-index: 1000;\n  fill: #72767b;\n  :hover {\n    fill: var(--pf-global--Color--100);\n    cursor: pointer;\n  }\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  z-index: 1000;\n  fill: #72767b;\n`;\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable\n}) => (\n  <ToolbarItem>\n    <FilterInputGroup>\n      <FilterInput\n        placeholder={placeholder}\n        value={searchValue}\n        type=\"text\"\n        onChange={onFilterChange}\n        aria-label={placeholder}\n      />\n      <FilterIconsContainer>\n        {(isClearable && searchValue && (\n          <StyledCloseIcon\n            width=\"16\"\n            height=\"16\"\n            onClick={() => onFilterChange('')}\n          />\n        )) || <StyledSearchIcon />}\n      </FilterIconsContainer>\n    </FilterInputGroup>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Level,\n  LevelItem,\n  ToolbarItem,\n  ToolbarGroup\n} from '@patternfly/react-core';\n\nimport FilterToolbarItem from '../presentational-components/shared/filter-toolbar-item';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../presentational-components/shared/top-toolbar';\nimport AppTabs from '../presentational-components/shared/app-tabs';\nimport CatalogLink from '../smart-components/common/catalog-link';\nimport { StyledToolbar } from '../presentational-components/styled-components/toolbars';\n\nconst ToolbarButton = ({ title, ...props }) => (\n  <Button {...props}>{title}</Button>\n);\n\nToolbarButton.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst AppToolbar = ({ ...props }) => (\n  <StyledToolbar className=\"pf-u-pr-lg\" {...props} />\n);\n\nconst toolbarMapper = {\n  TopToolbar,\n  TopToolbarTitle,\n  Toolbar: AppToolbar,\n  ToolbarGroup,\n  ToolbarItem,\n  FilterToolbarItem,\n  Link: CatalogLink,\n  Level,\n  LevelItem,\n  Button: ToolbarButton,\n  AppTabs\n};\n\nexport const toolbarComponentTypes = {\n  TOP_TOOLBAR: 'TopToolbar',\n  TOP_TOOLBAR_TITLE: 'TopToolbarTitle',\n  TOOLBAR: 'Toolbar',\n  TOOLBAR_ITEM: 'ToolbarItem',\n  TOOLBAR_GROUP: 'ToolbarGroup',\n  FILTER_TOOLBAR_ITEM: 'FilterToolbarItem',\n  LINK: 'Link',\n  BUTTON: 'Button',\n  LEVEL: 'Level',\n  LEVEL_ITEM: 'LevelItem',\n  TABS: 'AppTabs'\n};\n\nexport default toolbarMapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import { useHistory } from 'react-router-dom';\n\nconst removeSearchQuery = (target) => {\n  if (typeof target === 'string') {\n    return target.split('?')[0];\n  }\n\n  if (typeof target === 'object') {\n    return {\n      ...target,\n      search: undefined\n    };\n  }\n\n  return target;\n};\n\n/**\n * Wrapper around useHistory hook which adds aditional settings to standard history methods\n * @param {Boolean} removeSearch if true, using history navigation methods will remove search string from path\n */\nconst useEnhancedHistory = (removeSearch) => {\n  const history = useHistory();\n  return {\n    ...history,\n    push: (target) => {\n      if (removeSearch) {\n        return history.push(removeSearchQuery(target));\n      }\n\n      return history.push(target);\n    }\n  };\n};\n\nexport default useEnhancedHistory;\n","import { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport {\n  TOPOLOGICAL_INVENTORY_API_BASE,\n  SOURCES_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nexport const getPlatforms = () => {\n  return graphqlInstance\n    .post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n    .then(({ data: { application_types } }) => application_types)\n    .then(([{ sources }]) => sources);\n};\n\nexport const getPlatform = (platformId) => {\n  return axiosInstance.get(`${SOURCES_API_BASE}/sources/${platformId}`);\n};\n\nexport const getPlatformItems = (platformId, filter, options) => {\n  const filterQuery = filter ? `&filter[name][contains_i]=${filter}` : '';\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_offerings?filter[archived_at][nil]${filterQuery}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings`\n    );\n  }\n};\n\nexport const getPlatformInventories = (\n  platformId,\n  filter = '',\n  options = defaultSettings\n) => {\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_inventories?filter[name][contains_i]=${filter}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_inventories?limit=${options.limit}&offset=${options.offset}`\n    );\n  }\n};\n\nexport const getServiceOffering = (serviceOfferingId, sourceId) =>\n  Promise.all([\n    axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings/${serviceOfferingId}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${sourceId}`)\n      .then((source) => {\n        return axiosInstance\n          .get(`${SOURCES_API_BASE}/source_types/${source.source_type_id}`)\n          .then(({ icon_url }) => ({\n            ...source,\n            icon_url\n          }));\n      })\n  ]).then(([service, source]) => ({\n    service,\n    source\n  }));\n","import * as ActionTypes from '../action-types';\nimport * as PlatformHelper from '../../helpers/platform/platform-helper';\n\nconst doFetchPlatforms = () => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_PLATFORMS}_PENDING` });\n  return PlatformHelper.getPlatforms()\n    .then((data) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_FULFILLED`,\n        payload: data\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchPlatforms = () => (dispatch) => dispatch(doFetchPlatforms());\n\nexport const fetchPlatformItems = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_ITEMS,\n  payload: PlatformHelper.getPlatformItems(platformId, filter, options),\n  meta: {\n    platformId,\n    filter,\n    ...options\n  }\n});\n\nexport const fetchMultiplePlatformItems = (platformsId) => {\n  const platformPromisses = platformsId.map((platformId) =>\n    PlatformHelper.getPlatformItems(platformId).then((data) => ({\n      [platformId]: data\n    }))\n  );\n  return {\n    type: ActionTypes.FETCH_MULTIPLE_PLATFORM_ITEMS,\n    payload: Promise.all(platformPromisses).then((data) =>\n      data.reduce(\n        (acc, curr) => ({\n          ...acc,\n          ...curr\n        }),\n        {}\n      )\n    )\n  };\n};\n\nexport const fetchSelectedPlatform = (id) => ({\n  type: ActionTypes.FETCH_PLATFORM,\n  payload: PlatformHelper.getPlatform(id)\n});\n\nexport const searchPlatformItems = (value) => ({\n  type: ActionTypes.FILTER_PLATFORM_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const fetchPlatformInventories = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_INVENTORIES,\n  payload: PlatformHelper.getPlatformInventories(platformId, filter, options)\n});\n\nexport const fetchServiceOffering = (...args) => ({\n  type: ActionTypes.FETCH_SERVICE_OFFERING,\n  payload: PlatformHelper.getServiceOffering(...args)\n});\n","import styled from 'styled-components';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst StyledLazyLoadImage = styled(LazyLoadImage)`\n  height: ${({ height, hidden }) => (hidden ? '0px' : `${height}px` || '40px')};\n  display: ${({ hidden }) => (hidden ? 'none' : 'inherit')};\n  float: ${({ hidden }) => (hidden ? 'left' : 'inherit')};\n  width: ${({ hidden }) => (hidden ? 0 : 'inherit')};\n`;\n\nexport default StyledLazyLoadImage;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\n\nimport { IconPlaceholder } from './loader-placeholders';\nimport CardIconDefault from '../../assets/images/card-icon-default.svg';\nimport StyledLazyLoadImage from '../styled-components/lazy-load-image';\n\nconst CardIconContainer = styled.div`\n  display: inline-block;\n  height: ${({ height }) => `${height}px`};\n`;\n\nconst CardIcon = ({ src, height, sourceId }) => {\n  const [isLoaded, setLoaded] = useState(false);\n  const [isUnknown, setUnknown] = useState(false);\n  const platformIconMapping = useSelector(\n    ({ platformReducer: { platformIconMapping } }) => platformIconMapping\n  );\n  const defaultIcon = sourceId\n    ? platformIconMapping[sourceId]\n    : CardIconDefault;\n\n  return (\n    <CardIconContainer height={height}>\n      {!isLoaded && <IconPlaceholder height={height} />}\n      <StyledLazyLoadImage\n        threshold={2000}\n        delayTime={0}\n        hidden={!isLoaded}\n        height={isLoaded ? height : 0}\n        onError={() => setUnknown(true)}\n        onLoad={() => setLoaded(true)}\n        src={!src || isUnknown ? defaultIcon : src}\n      />\n    </CardIconContainer>\n  );\n};\n\nCardIcon.propTypes = {\n  src: PropTypes.string,\n  platformId: PropTypes.string,\n  style: PropTypes.object,\n  height: PropTypes.number,\n  sourceId: PropTypes.string\n};\n\nCardIcon.defaultProps = {\n  style: {},\n  height: 40\n};\n\nexport default CardIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ConditionalLink = ({ children, pathname, ...props }) =>\n  pathname ? (\n    <CatalogLink pathname={pathname} {...props}>\n      {children}\n    </CatalogLink>\n  ) : (\n    children\n  );\n\nConditionalLink.propTypes = {\n  pathname: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]).isRequired\n};\n\nexport default ConditionalLink;\n","import React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport toolbarMapper from './toolbar-mapper';\n\nconst ToolbarContext = createContext();\n\nconst Component = ({ component, ...props }) => (\n  <ToolbarContext.Consumer>\n    {({ componentMapper }) => {\n      const C =\n        typeof component === 'string' ? componentMapper[component] : component;\n      return <C {...props} />;\n    }}\n  </ToolbarContext.Consumer>\n);\n\nComponent.propTypes = {\n  component: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.element\n  ]).isRequired\n};\n\n/**\n * Render loop that renders all toolbar components based on its type\n * @param {Array} fields list of React components to be rendered\n */\nconst render = (fields) =>\n  fields.hidden\n    ? null\n    : fields.map(({ fields, key, ...field }) =>\n        fields ? (\n          <Component key={key} {...field}>\n            {render(fields)}\n          </Component>\n        ) : (\n          <Component key={key} {...field} />\n        )\n      );\n\nconst ToolbarRenderer = ({ schema, componentMapper }) => (\n  <ToolbarContext.Provider value={{ render, componentMapper }}>\n    {render(schema.fields)}\n  </ToolbarContext.Provider>\n);\n\nToolbarRenderer.propTypes = {\n  schema: PropTypes.shape({\n    fields: PropTypes.array.isRequired\n  }).isRequired,\n  componentMapper: PropTypes.object\n};\n\nToolbarRenderer.defaultProps = {\n  componentMapper: toolbarMapper\n};\n\nexport default ToolbarRenderer;\n","import styled from 'styled-components';\nimport { Toolbar, Level } from '@patternfly/react-core';\n\nexport const StyledToolbar = styled(Toolbar)`\n  background-color: #ffffff;\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  position: relative;\n  top: 1px;\n`;\n\nexport const TopToolbarWrapper = styled.div`\n  background-color: #ffffff;\n  .pf-c-breadcrumb__item {\n    .active {\n      color: var(--pf-c-breadcrumb__item--Color);\n      text-decoration: none;\n      pointer-events: none;\n    }\n  }\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  .top-toolbar-title {\n    min-width: 200px;\n  }\n  .top-toolbar-title-description {\n    word-break: break-word;\n  }\n`;\n\nexport const TopToolbarTitleContainer = styled(Level)`\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n  }\n`;\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport ConditionalLink from '../../presentational-components/shared/conditional-link';\n\nconst CatalogBreadcrumbs = () => {\n  const fragments = useSelector(\n    ({ breadcrumbsReducer: { fragments } }) => fragments\n  );\n  if (fragments.length <= 1) {\n    return null;\n  }\n\n  return (\n    <Breadcrumb>\n      {fragments.map(({ title, pathname, searchParams }, index) => (\n        <ConditionalLink\n          pathname={!(fragments.length === index + 1) ? pathname : undefined}\n          searchParams={searchParams}\n          nav\n          exact\n          key={pathname}\n          className=\"pf-c-breadcrumb__item\"\n        >\n          <BreadcrumbItem isActive={fragments.length === index + 1}>\n            {title}\n          </BreadcrumbItem>\n        </ConditionalLink>\n      ))}\n    </Breadcrumb>\n  );\n};\n\nexport default CatalogBreadcrumbs;\n","module.exports = __webpack_public_path__ + \"fonts/card-icon-default.svg\";","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport clsx from 'clsx';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport CatalogBreadcrumbs from '../../smart-components/common/catalog-breadcrumbs';\nimport {\n  TopToolbarWrapper,\n  TopToolbarTitleContainer\n} from '../styled-components/toolbars';\n\nconst TopToolbar = ({\n  children,\n  paddingBottom,\n  breadcrumbs,\n  breadcrumbsSpacing,\n  ...rest\n}) => (\n  <TopToolbarWrapper\n    className={`pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${\n      paddingBottom ? 'pf-u-pb-lg' : ''\n    }`}\n    {...rest}\n  >\n    {breadcrumbs && (\n      <div className=\"pf-u-mb-md\">\n        {' '}\n        <CatalogBreadcrumbs />\n      </div>\n    )}\n    {children}\n  </TopToolbarWrapper>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  paddingBottom: PropTypes.bool,\n  breadcrumbs: PropTypes.bool,\n  breadcrumbsSpacing: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: true,\n  breadcrumbs: true\n};\n\nexport default TopToolbar;\n\nexport const TopToolbarTitle = ({\n  title,\n  description,\n  children,\n  noData,\n  ...rest\n}) => (\n  <Fragment>\n    <TopToolbarTitleContainer\n      className={clsx({\n        'pf-u-mb-lg': !noData\n      })}\n      {...rest}\n    >\n      <LevelItem>\n        <TextContent className=\"top-toolbar-title\">\n          <Text component={TextVariants.h2} className=\"pf-u-m-0 pf-u-mr-md\">\n            {title}\n          </Text>\n          {description && (\n            <Text\n              className=\"top-toolbar-title-description\"\n              component={TextVariants.p}\n            >\n              {description}\n            </Text>\n          )}\n        </TextContent>\n      </LevelItem>\n      {children}\n    </TopToolbarTitleContainer>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  noData: PropTypes.bool\n};\n\nTopToolbarTitle.defaultProps = {\n  title: <ToolbarTitlePlaceholder />\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation } from 'react-router-dom';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nconst AppTabs = ({ tabItems }) => {\n  const { push } = useEnhancedHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) =>\n    push({ pathname: tabItems[tabIndex].name, search });\n\n  return (\n    <Tabs\n      activeKey={activeTab ? activeTab.eventKey : 0}\n      onSelect={handleTabClick}\n    >\n      {tabItems.map((item) => (\n        <Tab\n          title={item.title}\n          key={item.eventKey}\n          eventKey={item.eventKey}\n          name={item.name}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default AppTabs;\n","/* eslint camelcase: 0 */\nimport {\n  getAxiosInstance,\n  getPortfolioItemApi,\n  getOrderApi,\n  getRequestsApi,\n  getOrderItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nconst orderApi = getOrderApi();\nconst orderItemApi = getOrderItemApi();\nconst portfolioItemApi = getPortfolioItemApi();\nconst requestsApi = getRequestsApi();\nconst axiosInstance = getAxiosInstance();\n\nexport function getServicePlans(portfolioItemId) {\n  return portfolioItemApi.listServicePlans(portfolioItemId);\n}\n\nexport async function sendSubmitOrder({\n  service_parameters: { providerControlParameters, ...service_parameters },\n  ...parameters\n}) {\n  let order = await orderApi.createOrder();\n  let orderItem = {};\n  orderItem.count = 1;\n  orderItem = {\n    ...orderItem,\n    ...parameters,\n    service_parameters,\n    provider_control_parameters: providerControlParameters || {}\n  };\n  await orderApi.addToOrder(order.id, orderItem);\n  return orderApi.submitOrder(order.id);\n}\n\nexport function listRequests() {\n  return requestsApi.listRequests().then((data) => ({\n    ...data,\n    data: data.data.map(({ decision, ...item }) => ({\n      ...item,\n      state: decision\n    }))\n  }));\n}\n\nexport function cancelOrder(orderId) {\n  return orderApi.cancelOrder(orderId);\n}\n\nconst getOrderItems = (orderIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items?${orderIds\n      .map((orderId) => `filter[order_id][]=${orderId}`)\n      .join('&')}`\n  );\n\nconst getOrderPortfolioItems = (itemIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items?${itemIds\n      .map((itemId) => `filter[id][]=${itemId}`)\n      .join('&')}`\n  );\n\nexport const getOrders = (filter, pagination = defaultSettings) =>\n  axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/orders?${filter}&limit=${pagination.limit}&offset=${pagination.offset}`\n    ) // eslint-disable-line max-len\n    .then((orders) =>\n      getOrderItems(orders.data.map(({ id }) => id)).then((orderItems) =>\n        getOrderPortfolioItems(\n          orderItems.data.map(({ portfolio_item_id }) => portfolio_item_id)\n        ).then((portfolioItems) => {\n          return {\n            portfolioItems,\n            ...orders,\n            data: orders.data.map((order) => ({\n              ...order,\n              orderItems: orderItems.data.filter(\n                ({ order_id }) => order_id === order.id\n              )\n            }))\n          };\n        })\n      )\n    );\n\nexport function getOrderApprovalRequests(orderItemId) {\n  return orderItemApi.listApprovalRequests(orderItemId);\n}\n\nexport const getOrderDetail = (params) => {\n  return Promise.all([\n    axiosInstance.get(`${CATALOG_API_BASE}/orders/${params.order}`),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}`\n    ),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/portfolio_items/${params['portfolio-item']}`\n    ),\n    axiosInstance.get(`${SOURCES_API_BASE}/sources/${params.platform}`),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}/progress_messages`\n    ),\n    axiosInstance.get(`${CATALOG_API_BASE}/portfolios/${params.portfolio}`),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}/approval_requests`\n    )\n  ]);\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport { ORDERS_ROUTE } from '../../constants/routes';\n\nconst OrderNotification = ({ id, dispatch }) => (\n  <Fragment>\n    You can track the progress of Order # {id} in your{' '}\n    <Link onClick={() => dispatch(clearNotifications())} to={ORDERS_ROUTE}>\n      Orders\n    </Link>{' '}\n    page.\n  </Fragment>\n);\n\nOrderNotification.propTypes = {\n  id: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default OrderNotification;\n","import React from 'react';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\n\nimport * as ActionTypes from '../action-types';\nimport * as OrderHelper from '../../helpers/order/order-helper';\nimport OrderNotification from '../../presentational-components/order/order-notification';\n\nexport const fetchServicePlans = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_SERVICE_PLANS,\n  payload: OrderHelper.getServicePlans(portfolioItemId)\n});\n\nexport const updateServiceData = (data) => ({\n  type: ActionTypes.UPDATE_SERVICE_DATA,\n  payload: { serviceData: data }\n});\n\nexport const setSelectedPlan = (data) => ({\n  type: ActionTypes.SET_SELECTED_PLAN,\n  payload: data\n});\n\nexport const sendSubmitOrder = (apiProps) => (dispatch) =>\n  dispatch({\n    type: ActionTypes.SUBMIT_SERVICE_ORDER,\n    payload: OrderHelper.sendSubmitOrder(apiProps).then(({ id }) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been accepted successfully',\n          description: <OrderNotification id={id} dispatch={dispatch} />,\n          dismissable: true\n        })\n      )\n    )\n  });\n\nexport const fetchRequests = () => ({\n  type: ActionTypes.FETCH_REQUESTS,\n  payload: OrderHelper.listRequests()\n});\n\nexport const cancelOrder = (orderId) => (dispatch, getState) => {\n  dispatch({ type: `${ActionTypes.CANCEL_ORDER}_PENDING` });\n  const {\n    orderReducer: { orderDetail }\n  } = getState();\n  return OrderHelper.cancelOrder(orderId)\n    .then(() => {\n      orderDetail.order.state = 'Canceled';\n      if (\n        orderDetail.approvalRequest &&\n        orderDetail.approvalRequest.length > 0\n      ) {\n        orderDetail.approvalRequest[0].state = 'canceled';\n      }\n\n      dispatch({\n        type: ActionTypes.SET_ORDER_DETAIL,\n        payload: { ...orderDetail }\n      });\n      return orderDetail;\n    })\n    .then((orderDetail) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been canceled successfully',\n          description: `Order ${`Order #${orderDetail.order.id}`} was canceled.`,\n          dismissable: true\n        })\n      )\n    )\n    .then(() => dispatch({ type: `${ActionTypes.CANCEL_ORDER}_FULFILLED` }))\n    .catch((error) => {\n      dispatch({\n        type: `${ActionTypes.CANCEL_ORDER}_REJECTED`,\n        payload: error\n      });\n    });\n};\n\nexport const fetchOrders = (filters, pagination) => (dispatch) => {\n  const queryFilter = Object.entries(filters)\n    .filter(([, value]) => value && value.length > 0)\n    .map(([key, value]) =>\n      Array.isArray(value)\n        ? value.map((value) => `filter[${key}][]=${value}`).join('&')\n        : `filter[${key}][contains_i]=${value}`\n    )\n    .join('&');\n  dispatch({ type: `${ActionTypes.FETCH_ORDERS}_PENDING` });\n  return OrderHelper.getOrders(queryFilter, pagination)\n    .then(({ portfolioItems, ...orders }) => {\n      dispatch({\n        type: ActionTypes.SET_PORTFOLIO_ITEMS,\n        payload: portfolioItems\n      });\n      return dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_FULFILLED`,\n        meta: { filter: queryFilter },\n        payload: orders\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchOrderDetails = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SET_ORDER_DETAIL}_PENDING` });\n  return OrderHelper.getOrderDetail(params)\n    .then(\n      ([\n        order,\n        orderItem,\n        portfolioItem,\n        platform,\n        progressMessages,\n        portfolio,\n        approvalRequest\n      ]) =>\n        dispatch({\n          type: `${ActionTypes.SET_ORDER_DETAIL}_FULFILLED`,\n          payload: {\n            order,\n            orderItem,\n            portfolioItem,\n            platform,\n            progressMessages,\n            portfolio,\n            approvalRequest\n          }\n        })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.SET_ORDER_DETAIL}_REJECTED`,\n        payload: error\n      })\n    );\n};\n","import { toolbarComponentTypes } from '../toolbar-mapper';\n\nconst createOrdersToolbarSchema = () => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      className: 'orders bg-fill pf-u-p-lg',\n      key: 'orders-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'orders-toolbar-title',\n          title: 'Orders',\n          className: ''\n        }\n      ]\n    }\n  ]\n});\n\nexport default createOrdersToolbarSchema;\n","import { CATALOG_API_BASE } from '../../utilities/constants';\n\nexport const getOrderIcon = ({ orderItems }) =>\n  orderItems[0] &&\n  `${CATALOG_API_BASE}/portfolio_items/${orderItems[0].portfolio_item_id}/icon`;\n\nexport const getOrderPortfolioName = ({ orderItems, id }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem ? portfolioItem.name : `Order ${id}`;\n};\n\nexport const getOrderPlatformId = ({ orderItems }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem\n    ? {\n        orderPlatform: portfolioItem.service_offering_source_ref,\n        orderPortfolio: portfolioItem.portfolio_id\n      }\n    : {};\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Grid,\n  GridItem,\n  Level,\n  LevelItem,\n  Split,\n  SplitItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport {\n  getOrderIcon,\n  getOrderPortfolioName,\n  getOrderPlatformId\n} from '../../helpers/shared/orders';\nimport CatalogLink from '../common/catalog-link';\nimport { ORDER_ROUTE, ORDER_APPROVAL_ROUTE } from '../../constants/routes';\n\nconst OrderItem = memo(\n  ({ item }) => {\n    const { orderPlatform, orderPortfolio, orderName } = useSelector(\n      ({\n        portfolioReducer: {\n          portfolioItems: { data }\n        }\n      }) => {\n        const { orderPlatform, orderPortfolio } = getOrderPlatformId(\n          item,\n          data\n        );\n        return {\n          orderPlatform,\n          orderPortfolio,\n          orderName: getOrderPortfolioName(item, data)\n        };\n      }\n    );\n    const orderItem = (item.orderItems[0] && item.orderItems[0]) || {};\n    const searchParams = {\n      order: item.id,\n      'order-item': orderItem.id,\n      'portfolio-item': orderItem.portfolio_item_id,\n      platform: orderPlatform,\n      portfolio: orderPortfolio\n    };\n    return (\n      <React.Fragment>\n        <DataListItem\n          aria-labelledby={`${item.id}-expand`}\n          className=\"data-list-expand-fix\"\n        >\n          <DataListItemRow>\n            <DataListItemCells\n              dataListCells={[\n                <DataListCell key=\"1\">\n                  <Split gutter=\"sm\">\n                    <SplitItem>\n                      <CardIcon\n                        height={60}\n                        src={getOrderIcon(item)}\n                        sourceId={orderPlatform}\n                      />\n                    </SplitItem>\n                    <SplitItem isFilled>\n                      <TextContent>\n                        <Grid gutter=\"sm\" className=\"pf-u-gg-md\">\n                          <GridItem>\n                            <Level>\n                              <LevelItem>\n                                <Text\n                                  className=\"pf-u-mb-0\"\n                                  component={TextVariants.h5}\n                                >\n                                  <CatalogLink\n                                    pathname={ORDER_ROUTE}\n                                    searchParams={searchParams}\n                                  >\n                                    {orderName} # {item.id}\n                                  </CatalogLink>\n                                </Text>\n                              </LevelItem>\n                              <LevelItem>\n                                <CatalogLink\n                                  pathname={ORDER_APPROVAL_ROUTE}\n                                  searchParams={searchParams}\n                                >\n                                  {item.state === 'Failed' && (\n                                    <ExclamationCircleIcon className=\"pf-u-mr-sm icon-danger-fill\" />\n                                  )}\n                                  {item.state}\n                                </CatalogLink>\n                              </LevelItem>\n                            </Level>\n                          </GridItem>\n                          <GridItem>\n                            <Level>\n                              <LevelItem>\n                                <Text\n                                  className=\"pf-u-mb-0\"\n                                  component={TextVariants.small}\n                                >\n                                  <DateFormat\n                                    date={item.created_at}\n                                    variant=\"relative\"\n                                  />\n                                </Text>\n                              </LevelItem>\n                              <LevelItem>\n                                <Text\n                                  className=\"pf-u-mb-0\"\n                                  component={TextVariants.small}\n                                >\n                                  Ordered by {item.owner}\n                                </Text>\n                              </LevelItem>\n                              <LevelItem>\n                                <Text\n                                  className=\"pf-u-mb-0\"\n                                  component={TextVariants.small}\n                                >\n                                  <DateFormat\n                                    date={\n                                      item.orderItems[0] &&\n                                      item.orderItems[0].updated_at\n                                    }\n                                    variant=\"relative\"\n                                  />\n                                </Text>\n                              </LevelItem>\n                            </Level>\n                          </GridItem>\n                        </Grid>\n                      </TextContent>\n                    </SplitItem>\n                  </Split>\n                </DataListCell>\n              ]}\n            />\n          </DataListItemRow>\n        </DataListItem>\n      </React.Fragment>\n    );\n  },\n  (prevProps, nextProps) => prevProps.id === nextProps.id\n);\n\nOrderItem.propTypes = {\n  item: PropTypes.object.isRequired\n};\n\nexport default OrderItem;\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  DataList,\n  Grid,\n  GridItem,\n  Title,\n  Bullseye,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Flex,\n  EmptyStateSecondaryActions,\n  Button\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/components/EmptyTable';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/TableToolbar';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { fetchOrders } from '../../redux/actions/order-actions';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport OrderItem from './order-item';\nimport AsyncPagination from '../common/async-pagination';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nconst debouncedFilter = asyncFormValidator(\n  (filters, meta = defaultSettings, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(fetchOrders(filters, meta)).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst initialState = {\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false,\n  filterType: 'state',\n  filters: {\n    state: [],\n    owner: ''\n  }\n};\n\nconst changeFilters = (value, type, filters) => ({\n  ...filters,\n  [type]: value\n});\n\nconst ordersListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return {\n        ...state,\n        filters: changeFilters(action.payload, state.filterType, state.filters)\n      };\n    case 'replaceFilterChip':\n      return { ...state, filters: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    case 'setFilterType':\n      return { ...state, filterType: action.payload };\n  }\n\n  return state;\n};\n\nconst OrdersList = () => {\n  const [\n    { isFetching, isFiltering, filterType, filters },\n    stateDispatch\n  ] = useReducer(ordersListState, initialState);\n  const { data, meta } = useSelector(({ orderReducer }) => orderReducer.orders);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.all([\n      dispatch(fetchOrders(filters, meta)),\n      dispatch(fetchPlatforms())\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const handlePagination = (_apiProps, pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    return dispatch(fetchOrders(filters, pagination))\n      .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n      .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      { ...filters, [filterType]: value },\n      meta,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  return (\n    <Grid gutter=\"md\">\n      <GridItem>\n        <Section type=\"content\">\n          {!meta.noData && (\n            <PrimaryToolbar\n              activeFiltersConfig={{\n                filters: Object.entries(filters)\n                  .filter(([, value]) => value && value.length > 0)\n                  .map(([key, value]) => ({\n                    category: key,\n                    type: key,\n                    chips: Array.isArray(value)\n                      ? value.map((name) => ({ name }))\n                      : [{ name: value }]\n                  })),\n                onDelete: (_e, [chip], clearAll) => {\n                  if (clearAll) {\n                    stateDispatch({\n                      type: 'replaceFilterChip',\n                      payload: initialState.filters\n                    });\n                    return debouncedFilter(\n                      initialState.filters,\n                      meta,\n                      dispatch,\n                      (isFiltering) =>\n                        stateDispatch({\n                          type: 'setFilteringFlag',\n                          payload: isFiltering\n                        })\n                    );\n                  }\n\n                  const newFilters = { ...filters };\n                  if (chip.type === 'state') {\n                    newFilters[chip.type] = newFilters[chip.type].filter(\n                      (value) => value !== chip.chips[0].name\n                    );\n                  } else {\n                    newFilters[chip.type] = '';\n                  }\n\n                  stateDispatch({\n                    type: 'replaceFilterChip',\n                    payload: newFilters\n                  });\n                  debouncedFilter(newFilters, meta, dispatch, (isFiltering) =>\n                    stateDispatch({\n                      type: 'setFilteringFlag',\n                      payload: isFiltering\n                    })\n                  );\n                }\n              }}\n              filterConfig={{\n                onChange: (_e, value) =>\n                  stateDispatch({ type: 'setFilterType', payload: value }),\n                value: filterType,\n                items: [\n                  {\n                    filterValues: {\n                      items: [\n                        {\n                          value: 'Failed',\n                          label: 'Failed'\n                        },\n                        {\n                          value: 'Completed',\n                          label: 'Completed'\n                        },\n                        {\n                          value: 'Approval Pending',\n                          label: 'Approval Pending'\n                        }\n                      ],\n                      value: filters.state,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'State',\n                    value: 'state',\n                    type: 'checkbox'\n                  },\n                  {\n                    filterValues: {\n                      value: filters.owner,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'Owner',\n                    value: 'owner'\n                  }\n                ]\n              }}\n              pagination={\n                <AsyncPagination\n                  isDisabled={isFetching || isFiltering}\n                  apiRequest={handlePagination}\n                  meta={meta}\n                  isCompact\n                />\n              }\n            />\n          )}\n          <DataList aria-label=\"order-list\">\n            {isFiltering || isFetching ? (\n              <ListLoader />\n            ) : data.length > 0 ? (\n              data.map((item, index) => (\n                <OrderItem key={item.id} index={index} item={item} />\n              ))\n            ) : (\n              <EmptyTable>\n                <Bullseye>\n                  <EmptyState>\n                    <Bullseye>\n                      <EmptyStateIcon icon={SearchIcon} />\n                    </Bullseye>\n                    <Title size=\"lg\">\n                      {meta.noData ? 'No orders' : 'No results found'}\n                    </Title>\n                    <EmptyStateBody>\n                      {meta.noData\n                        ? 'No orders have been created.'\n                        : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'}\n                    </EmptyStateBody>\n\n                    <EmptyStateSecondaryActions>\n                      {!meta.noData && (\n                        <Button\n                          variant=\"link\"\n                          onClick={() => {\n                            stateDispatch({\n                              type: 'setFilteringFlag',\n                              payload: true\n                            });\n                            handleFilterItems('');\n                          }}\n                        >\n                          Clear all filters\n                        </Button>\n                      )}\n                    </EmptyStateSecondaryActions>\n                  </EmptyState>\n                </Bullseye>\n              </EmptyTable>\n            )}\n          </DataList>\n          <TableToolbar>\n            <div className=\"bottom-pagination-container\">\n              <Flex\n                className=\"example-border\"\n                breakpointMods={[{ modifier: 'justify-content-flex-end' }]}\n              >\n                {meta.count > 0 && (\n                  <AsyncPagination\n                    className=\"pf-u-mt-0\"\n                    isDisabled={isFetching || isFiltering}\n                    apiRequest={handlePagination}\n                    meta={meta}\n                  />\n                )}\n              </Flex>\n            </div>\n          </TableToolbar>\n        </Section>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default OrdersList;\n","import React, { useEffect } from 'react';\nimport { Stack } from '@patternfly/react-core';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createOrdersToolbarSchema from '../../toolbar/schemas/orders-toolbar.schema';\nimport OrdersList from './orders-list';\n\nconst Orders = () => {\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'orders', secondaryNav: true });\n  }, []);\n\n  return (\n    <Stack>\n      <ToolbarRenderer schema={createOrdersToolbarSchema()} />\n      <OrdersList />\n    </Stack>\n  );\n};\n\nexport default Orders;\n"],"sourceRoot":""}