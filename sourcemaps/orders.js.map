{"version":3,"sources":["webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/toolbar/toolbar-mapper.js","webpack:///./src/utilities/use-enhanced-history.js","webpack:///./src/utilities/async-form-validator.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/styled-components/toolbars.js","webpack:///./src/presentational-components/shared/conditional-link.js","webpack:///./src/helpers/platform/platform-helper.js","webpack:///./src/redux/actions/platform-actions.js","webpack:///./src/smart-components/common/catalog-breadcrumbs.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/presentational-components/shared/app-tabs.js","webpack:///./src/toolbar/toolbar-renderer.js","webpack:///./src/presentational-components/styled-components/lazy-load-image.js","webpack:///./src/presentational-components/shared/card-icon.js","webpack:///./src/assets/images/card-icon-default.svg","webpack:///./src/helpers/order/order-helper.js","webpack:///./src/presentational-components/order/order-notification.js","webpack:///./src/redux/actions/order-actions.js","webpack:///./src/toolbar/schemas/orders-toolbar.schema.js","webpack:///./src/helpers/shared/orders.js","webpack:///./src/smart-components/order/order-item.js","webpack:///./src/smart-components/order/orders-list.js","webpack:///./src/smart-components/order/orders.js"],"names":["FilterInputGroup","styled","div","FilterInput","TextInput","FilterIconsContainer","span","StyledCloseIcon","CloseIcon","StyledSearchIcon","SearchIcon","FilterToolbarItem","searchValue","onFilterChange","placeholder","isClearable","ToolbarItem","value","type","onChange","aria-label","width","height","onClick","propTypes","PropTypes","func","isRequired","string","bool","defaultProps","ToolbarButton","title","props","Button","toolbarMapper","TopToolbar","TopToolbarTitle","Toolbar","className","ToolbarGroup","Link","CatalogLink","Level","LevelItem","AppTabs","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","TOOLBAR","TOOLBAR_ITEM","TOOLBAR_GROUP","FILTER_TOOLBAR_ITEM","LINK","BUTTON","LEVEL","LEVEL_ITEM","TABS","useEnhancedHistory","removeSearch","history","useHistory","push","target","split","search","undefined","removeSearchQuery","asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","isCompact","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","getNewPage","request","debouncePromise","direction","shape","any","StyledToolbar","TopToolbarWrapper","TopToolbarTitleContainer","ConditionalLink","children","pathname","oneOfType","node","arrayOf","axiosInstance","getAxiosInstance","graphqlInstance","getGraphqlInstance","getPlatforms","post","SOURCES_API_BASE","query","then","data","application_types","sources","getPlatform","platformId","get","getPlatformItems","filter","filterQuery","TOPOLOGICAL_INVENTORY_API_BASE","getPlatformInventories","defaultSettings","getServiceOffering","serviceOfferingId","sourceId","Promise","all","source","source_type_id","icon_url","service","fetchPlatforms","dispatch","ActionTypes","PlatformHelper","payload","error","fetchPlatformItems","fetchSelectedPlatform","id","fetchPlatformInventories","fetchServiceOffering","CatalogBreadcrumbs","fragments","useSelector","breadcrumbsReducer","length","map","index","searchParams","nav","exact","key","isActive","paddingBottom","breadcrumbs","rest","breadcrumbsSpacing","description","noData","clsx","component","TextVariants","h2","p","tabItems","useLocation","activeTab","find","name","includes","activeKey","eventKey","onSelect","tabIndex","item","array","ToolbarContext","createContext","Component","Consumer","componentMapper","C","element","render","fields","hidden","field","ToolbarRenderer","schema","Provider","object","StyledLazyLoadImage","LazyLoadImage","CardIconContainer","CardIcon","src","useState","isLoaded","setLoaded","isUnknown","setUnknown","platformIconMapping","platformReducer","defaultIcon","CardIconDefault","threshold","delayTime","onError","onLoad","style","module","exports","orderApi","getOrderApi","portfolioItemApi","getOrderItemApi","getPortfolioItemApi","getRequestsApi","getServicePlans","portfolioItemId","listServicePlans","sendSubmitOrder","a","service_parameters","providerControlParameters","parameters","createOrder","order","orderItem","provider_control_parameters","addToOrder","submitOrder","getOrderItems","orderIds","CATALOG_API_BASE","orderId","join","getOrderPortfolioItems","itemIds","itemId","OrderNotification","clearNotifications","to","ORDERS_ROUTE","fetchServicePlans","OrderHelper","addNotification","variant","dismissable","cancelOrder","getState","orderDetail","orderReducer","state","approvalRequest","fetchOrders","filters","pagination","queryFilter","Object","entries","Array","isArray","orders","orderItems","portfolio_item_id","portfolioItems","order_id","fetchOrderDetails","params","status","notFound","platform","portfolio","portfolioItem","progressMessages","fetchApprovalRequests","orderItemId","err","createOrdersToolbarSchema","getOrderIcon","getOrderPortfolioName","OrderItem","memo","portfolioReducer","orderPlatform","service_offering_source_ref","orderPortfolio","portfolio_id","orderName","Fragment","DataListItem","aria-labelledby","DataListItemRow","DataListItemCells","dataListCells","DataListCell","Split","gutter","SplitItem","isFilled","TextContent","Grid","GridItem","Text","h5","ORDER_ROUTE","ORDER_APPROVAL_ROUTE","small","DateFormat","date","created_at","owner","updated_at","prevProps","nextProps","debouncedFilter","asyncFormValidator","filteringCallback","initialState","isOpen","isFetching","isFiltering","filterType","ordersListState","action","OrdersList","useReducer","stateDispatch","useDispatch","useEffect","handlePagination","_apiProps","handleFilterItems","Section","PrimaryToolbar","activeFiltersConfig","category","chips","onDelete","_e","clearAll","chip","newFilters","filterConfig","items","filterValues","label","isDisabled","DataList","EmptyTable","Bullseye","EmptyState","EmptyStateIcon","icon","Title","size","EmptyStateBody","EmptyStateSecondaryActions","TableToolbar","Flex","breakpointMods","modifier","Orders","insights","chrome","appNavClick","secondaryNav","Stack"],"mappings":"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","file":"js/orders.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterInputGroup = styled.div`\n  position: relative;\n  width: 300px;\n  height: 36px;\n`;\n\nconst FilterInput = styled(TextInput)`\n  position: absolute;\n  width: 300px;\n  background: transparent;\n`;\n\nconst FilterIconsContainer = styled.span`\n  position: absolute;\n  right: 8px;\n  top: 8px;\n`;\n\nconst StyledCloseIcon = styled(CloseIcon)`\n  z-index: 1000;\n  fill: #72767b;\n  :hover {\n    fill: var(--pf-global--Color--100);\n    cursor: pointer;\n  }\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  z-index: 1000;\n  fill: #72767b;\n`;\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable\n}) => (\n  <ToolbarItem>\n    <FilterInputGroup>\n      <FilterInput\n        placeholder={placeholder}\n        value={searchValue}\n        type=\"text\"\n        onChange={onFilterChange}\n        aria-label={placeholder}\n      />\n      <FilterIconsContainer>\n        {(isClearable && searchValue && (\n          <StyledCloseIcon\n            width=\"16\"\n            height=\"16\"\n            onClick={() => onFilterChange('')}\n          />\n        )) || <StyledSearchIcon />}\n      </FilterIconsContainer>\n    </FilterInputGroup>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Level,\n  LevelItem,\n  ToolbarItem,\n  ToolbarGroup\n} from '@patternfly/react-core';\n\nimport FilterToolbarItem from '../presentational-components/shared/filter-toolbar-item';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../presentational-components/shared/top-toolbar';\nimport AppTabs from '../presentational-components/shared/app-tabs';\nimport CatalogLink from '../smart-components/common/catalog-link';\nimport { StyledToolbar } from '../presentational-components/styled-components/toolbars';\n\nconst ToolbarButton = ({ title, ...props }) => (\n  <Button {...props}>{title}</Button>\n);\n\nToolbarButton.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst AppToolbar = ({ ...props }) => (\n  <StyledToolbar className=\"pf-u-pr-lg\" {...props} />\n);\n\nconst toolbarMapper = {\n  TopToolbar,\n  TopToolbarTitle,\n  Toolbar: AppToolbar,\n  ToolbarGroup,\n  ToolbarItem,\n  FilterToolbarItem,\n  Link: CatalogLink,\n  Level,\n  LevelItem,\n  Button: ToolbarButton,\n  AppTabs\n};\n\nexport const toolbarComponentTypes = {\n  TOP_TOOLBAR: 'TopToolbar',\n  TOP_TOOLBAR_TITLE: 'TopToolbarTitle',\n  TOOLBAR: 'Toolbar',\n  TOOLBAR_ITEM: 'ToolbarItem',\n  TOOLBAR_GROUP: 'ToolbarGroup',\n  FILTER_TOOLBAR_ITEM: 'FilterToolbarItem',\n  LINK: 'Link',\n  BUTTON: 'Button',\n  LEVEL: 'Level',\n  LEVEL_ITEM: 'LevelItem',\n  TABS: 'AppTabs'\n};\n\nexport default toolbarMapper;\n","import { useHistory } from 'react-router-dom';\n\nconst removeSearchQuery = (target) => {\n  if (typeof target === 'string') {\n    return target.split('?')[0];\n  }\n\n  if (typeof target === 'object') {\n    return {\n      ...target,\n      search: undefined\n    };\n  }\n\n  return target;\n};\n\n/**\n * Wrapper around useHistory hook which adds aditional settings to standard history methods\n * @param {Boolean} removeSearch if true, using history navigation methods will remove search string from path\n */\nconst useEnhancedHistory = (removeSearch) => {\n  const history = useHistory();\n  return {\n    ...history,\n    push: (target) => {\n      if (removeSearch) {\n        return history.push(removeSearchQuery(target));\n      }\n\n      return history.push(target);\n    }\n  };\n};\n\nexport default useEnhancedHistory;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import styled from 'styled-components';\nimport { Toolbar, Level } from '@patternfly/react-core';\n\nexport const StyledToolbar = styled(Toolbar)`\n  background-color: #ffffff;\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  position: relative;\n  top: 1px;\n`;\n\nexport const TopToolbarWrapper = styled.div`\n  background-color: #ffffff;\n  .pf-c-breadcrumb__item {\n    .active {\n      color: var(--pf-c-breadcrumb__item--Color);\n      text-decoration: none;\n      pointer-events: none;\n    }\n  }\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  .top-toolbar-title {\n    min-width: 200px;\n  }\n  .top-toolbar-title-description {\n    word-break: break-word;\n  }\n`;\n\nexport const TopToolbarTitleContainer = styled(Level)`\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ConditionalLink = ({ children, pathname, ...props }) =>\n  pathname ? (\n    <CatalogLink pathname={pathname} {...props}>\n      {children}\n    </CatalogLink>\n  ) : (\n    children\n  );\n\nConditionalLink.propTypes = {\n  pathname: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]).isRequired\n};\n\nexport default ConditionalLink;\n","import { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport {\n  TOPOLOGICAL_INVENTORY_API_BASE,\n  SOURCES_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nexport const getPlatforms = () => {\n  return graphqlInstance\n    .post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n    .then(({ data: { application_types } }) => application_types)\n    .then(([{ sources }]) => sources);\n};\n\nexport const getPlatform = (platformId) => {\n  return axiosInstance.get(`${SOURCES_API_BASE}/sources/${platformId}`);\n};\n\nexport const getPlatformItems = (platformId, filter, options) => {\n  const filterQuery = filter ? `&filter[name][contains_i]=${filter}` : '';\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_offerings?filter[archived_at][nil]${filterQuery}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings`\n    );\n  }\n};\n\nexport const getPlatformInventories = (\n  platformId,\n  filter = '',\n  options = defaultSettings\n) => {\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_inventories?filter[name][contains_i]=${filter}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_inventories?limit=${options.limit}&offset=${options.offset}`\n    );\n  }\n};\n\nexport const getServiceOffering = (serviceOfferingId, sourceId) =>\n  Promise.all([\n    axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings/${serviceOfferingId}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${sourceId}`)\n      .then((source) => {\n        return axiosInstance\n          .get(`${SOURCES_API_BASE}/source_types/${source.source_type_id}`)\n          .then(({ icon_url }) => ({\n            ...source,\n            icon_url\n          }));\n      })\n  ]).then(([service, source]) => ({\n    service,\n    source\n  }));\n","import * as ActionTypes from '../action-types';\nimport * as PlatformHelper from '../../helpers/platform/platform-helper';\n\nconst doFetchPlatforms = () => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_PLATFORMS}_PENDING` });\n  return PlatformHelper.getPlatforms()\n    .then((data) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_FULFILLED`,\n        payload: data\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchPlatforms = () => (dispatch) => dispatch(doFetchPlatforms());\n\nexport const fetchPlatformItems = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_ITEMS,\n  payload: PlatformHelper.getPlatformItems(platformId, filter, options),\n  meta: {\n    platformId,\n    filter,\n    ...options\n  }\n});\n\nexport const fetchMultiplePlatformItems = (platformsId) => {\n  const platformPromisses = platformsId.map((platformId) =>\n    PlatformHelper.getPlatformItems(platformId).then((data) => ({\n      [platformId]: data\n    }))\n  );\n  return {\n    type: ActionTypes.FETCH_MULTIPLE_PLATFORM_ITEMS,\n    payload: Promise.all(platformPromisses).then((data) =>\n      data.reduce(\n        (acc, curr) => ({\n          ...acc,\n          ...curr\n        }),\n        {}\n      )\n    )\n  };\n};\n\nexport const fetchSelectedPlatform = (id) => ({\n  type: ActionTypes.FETCH_PLATFORM,\n  payload: PlatformHelper.getPlatform(id)\n});\n\nexport const searchPlatformItems = (value) => ({\n  type: ActionTypes.FILTER_PLATFORM_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const fetchPlatformInventories = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_INVENTORIES,\n  payload: PlatformHelper.getPlatformInventories(platformId, filter, options)\n});\n\nexport const fetchServiceOffering = (...args) => ({\n  type: ActionTypes.FETCH_SERVICE_OFFERING,\n  payload: PlatformHelper.getServiceOffering(...args)\n});\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport ConditionalLink from '../../presentational-components/shared/conditional-link';\n\nconst CatalogBreadcrumbs = () => {\n  const fragments = useSelector(\n    ({ breadcrumbsReducer: { fragments } }) => fragments\n  );\n  if (fragments.length <= 1) {\n    return null;\n  }\n\n  return (\n    <Breadcrumb>\n      {fragments.map(({ title, pathname, searchParams }, index) => (\n        <ConditionalLink\n          pathname={!(fragments.length === index + 1) ? pathname : undefined}\n          searchParams={searchParams}\n          nav\n          exact\n          key={pathname}\n          className=\"pf-c-breadcrumb__item\"\n        >\n          <BreadcrumbItem isActive={fragments.length === index + 1}>\n            {title}\n          </BreadcrumbItem>\n        </ConditionalLink>\n      ))}\n    </Breadcrumb>\n  );\n};\n\nexport default CatalogBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport clsx from 'clsx';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport CatalogBreadcrumbs from '../../smart-components/common/catalog-breadcrumbs';\nimport {\n  TopToolbarWrapper,\n  TopToolbarTitleContainer\n} from '../styled-components/toolbars';\n\nconst TopToolbar = ({\n  children,\n  paddingBottom,\n  breadcrumbs,\n  breadcrumbsSpacing,\n  ...rest\n}) => (\n  <TopToolbarWrapper\n    className={`pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${\n      paddingBottom ? 'pf-u-pb-lg' : ''\n    }`}\n    {...rest}\n  >\n    {breadcrumbs && (\n      <div className=\"pf-u-mb-md\">\n        {' '}\n        <CatalogBreadcrumbs />\n      </div>\n    )}\n    {children}\n  </TopToolbarWrapper>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  paddingBottom: PropTypes.bool,\n  breadcrumbs: PropTypes.bool,\n  breadcrumbsSpacing: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: true,\n  breadcrumbs: true\n};\n\nexport default TopToolbar;\n\nexport const TopToolbarTitle = ({\n  title,\n  description,\n  children,\n  noData,\n  ...rest\n}) => (\n  <Fragment>\n    <TopToolbarTitleContainer\n      className={clsx({\n        'pf-u-mb-lg': !noData\n      })}\n      {...rest}\n    >\n      <LevelItem>\n        <TextContent className=\"top-toolbar-title\">\n          <Text component={TextVariants.h2} className=\"pf-u-m-0 pf-u-mr-md\">\n            {title}\n          </Text>\n          {description && (\n            <Text\n              className=\"top-toolbar-title-description\"\n              component={TextVariants.p}\n            >\n              {description}\n            </Text>\n          )}\n        </TextContent>\n      </LevelItem>\n      {children}\n    </TopToolbarTitleContainer>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  noData: PropTypes.bool\n};\n\nTopToolbarTitle.defaultProps = {\n  title: <ToolbarTitlePlaceholder />\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation } from 'react-router-dom';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nconst AppTabs = ({ tabItems }) => {\n  const { push } = useEnhancedHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) =>\n    push({ pathname: tabItems[tabIndex].name, search });\n\n  return (\n    <Tabs\n      activeKey={activeTab ? activeTab.eventKey : 0}\n      onSelect={handleTabClick}\n    >\n      {tabItems.map((item) => (\n        <Tab\n          title={item.title}\n          key={item.eventKey}\n          eventKey={item.eventKey}\n          name={item.name}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default AppTabs;\n","import React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport toolbarMapper from './toolbar-mapper';\n\nconst ToolbarContext = createContext();\n\nconst Component = ({ component, ...props }) => (\n  <ToolbarContext.Consumer>\n    {({ componentMapper }) => {\n      const C =\n        typeof component === 'string' ? componentMapper[component] : component;\n      return <C {...props} />;\n    }}\n  </ToolbarContext.Consumer>\n);\n\nComponent.propTypes = {\n  component: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.element\n  ]).isRequired\n};\n\n/**\n * Render loop that renders all toolbar components based on its type\n * @param {Array} fields list of React components to be rendered\n */\nconst render = (fields) =>\n  fields.hidden\n    ? null\n    : fields.map(({ hidden, fields, key, ...field }) =>\n        hidden ? null : fields ? (\n          <Component key={key} {...field}>\n            {render(fields)}\n          </Component>\n        ) : (\n          <Component key={key} {...field} />\n        )\n      );\n\nconst ToolbarRenderer = ({ schema, componentMapper }) => (\n  <ToolbarContext.Provider value={{ render, componentMapper }}>\n    {render(schema.fields)}\n  </ToolbarContext.Provider>\n);\n\nToolbarRenderer.propTypes = {\n  schema: PropTypes.shape({\n    fields: PropTypes.array.isRequired\n  }).isRequired,\n  componentMapper: PropTypes.object\n};\n\nToolbarRenderer.defaultProps = {\n  componentMapper: toolbarMapper\n};\n\nexport default ToolbarRenderer;\n","import styled from 'styled-components';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst StyledLazyLoadImage = styled(LazyLoadImage)`\n  height: ${({ height, hidden }) => (hidden ? '0px' : `${height}px` || '40px')};\n  display: ${({ hidden }) => (hidden ? 'none' : 'inherit')};\n  float: ${({ hidden }) => (hidden ? 'left' : 'inherit')};\n  width: ${({ hidden }) => (hidden ? 0 : 'inherit')};\n`;\n\nexport default StyledLazyLoadImage;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\n\nimport { IconPlaceholder } from './loader-placeholders';\nimport CardIconDefault from '../../assets/images/card-icon-default.svg';\nimport StyledLazyLoadImage from '../styled-components/lazy-load-image';\n\nconst CardIconContainer = styled.div`\n  display: inline-block;\n  height: ${({ height }) => `${height}px`};\n`;\n\nconst CardIcon = ({ src, height, sourceId }) => {\n  const [isLoaded, setLoaded] = useState(false);\n  const [isUnknown, setUnknown] = useState(false);\n  const platformIconMapping = useSelector(\n    ({ platformReducer: { platformIconMapping } }) => platformIconMapping\n  );\n  const defaultIcon = sourceId\n    ? platformIconMapping[sourceId]\n    : CardIconDefault;\n\n  return (\n    <CardIconContainer height={height}>\n      {!isLoaded && <IconPlaceholder height={height} />}\n      <StyledLazyLoadImage\n        threshold={2000}\n        delayTime={0}\n        hidden={!isLoaded}\n        height={isLoaded ? height : 0}\n        onError={() => setUnknown(true)}\n        onLoad={() => setLoaded(true)}\n        src={!src || isUnknown ? defaultIcon : src}\n      />\n    </CardIconContainer>\n  );\n};\n\nCardIcon.propTypes = {\n  src: PropTypes.string,\n  platformId: PropTypes.string,\n  style: PropTypes.object,\n  height: PropTypes.number,\n  sourceId: PropTypes.string\n};\n\nCardIcon.defaultProps = {\n  style: {},\n  height: 40\n};\n\nexport default CardIcon;\n","module.exports = __webpack_public_path__ + \"fonts/card-icon-default.svg\";","/* eslint camelcase: 0 */\nimport {\n  getAxiosInstance,\n  getPortfolioItemApi,\n  getOrderApi,\n  getRequestsApi,\n  getOrderItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nconst orderApi = getOrderApi();\nconst orderItemApi = getOrderItemApi();\nconst portfolioItemApi = getPortfolioItemApi();\nconst requestsApi = getRequestsApi();\nconst axiosInstance = getAxiosInstance();\n\nexport function getServicePlans(portfolioItemId) {\n  return portfolioItemApi.listServicePlans(portfolioItemId);\n}\n\nexport async function sendSubmitOrder({\n  service_parameters: { providerControlParameters, ...service_parameters },\n  ...parameters\n}) {\n  let order = await orderApi.createOrder();\n  let orderItem = {};\n  orderItem.count = 1;\n  orderItem = {\n    ...orderItem,\n    ...parameters,\n    service_parameters,\n    provider_control_parameters: providerControlParameters || {}\n  };\n  await orderApi.addToOrder(order.id, orderItem);\n  return orderApi.submitOrder(order.id);\n}\n\nexport function listRequests() {\n  return requestsApi.listRequests().then((data) => ({\n    ...data,\n    data: data.data.map(({ decision, ...item }) => ({\n      ...item,\n      state: decision\n    }))\n  }));\n}\n\nexport function cancelOrder(orderId) {\n  return orderApi.cancelOrder(orderId);\n}\n\nconst getOrderItems = (orderIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items?${orderIds\n      .map((orderId) => `filter[order_id][]=${orderId}`)\n      .join('&')}`\n  );\n\nconst getOrderPortfolioItems = (itemIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items?${itemIds\n      .map((itemId) => `filter[id][]=${itemId}`)\n      .join('&')}`\n  );\n\nexport const getOrders = (filter, pagination = defaultSettings) =>\n  axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/orders?${filter}&limit=${pagination.limit}&offset=${pagination.offset}`\n    ) // eslint-disable-line max-len\n    .then((orders) =>\n      getOrderItems(orders.data.map(({ id }) => id)).then((orderItems) =>\n        getOrderPortfolioItems(\n          orderItems.data.map(({ portfolio_item_id }) => portfolio_item_id)\n        ).then((portfolioItems) => {\n          return {\n            portfolioItems,\n            ...orders,\n            data: orders.data.map((order) => ({\n              ...order,\n              orderItems: orderItems.data.filter(\n                ({ order_id }) => order_id === order.id\n              )\n            }))\n          };\n        })\n      )\n    );\n\nexport function getOrderApprovalRequests(orderItemId) {\n  return orderItemApi.listApprovalRequests(orderItemId);\n}\n\nexport const getOrderDetail = (params) => {\n  return Promise.all([\n    axiosInstance.get(`${CATALOG_API_BASE}/orders/${params.order}`),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}`\n    ),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/portfolio_items/${params['portfolio-item']}`)\n      .catch((error) => {\n        if (error.status === 404) {\n          return {\n            object: 'Portfolio item',\n            notFound: true\n          };\n        }\n\n        throw error;\n      }),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${params.platform}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Platform',\n            notFound: true\n          };\n        }\n\n        throw error;\n      }),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}/progress_messages`\n    ),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/portfolios/${params.portfolio}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Portfolio',\n            notFound: true\n          };\n        }\n\n        throw error;\n      }),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}/approval_requests`\n    )\n  ]);\n};\n\nexport const getApprovalRequests = (orderItemId) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items/${orderItemId}/approval_requests`\n  );\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport { ORDERS_ROUTE } from '../../constants/routes';\n\nconst OrderNotification = ({ id, dispatch }) => (\n  <Fragment>\n    You can track the progress of Order # {id} in your{' '}\n    <Link onClick={() => dispatch(clearNotifications())} to={ORDERS_ROUTE}>\n      Orders\n    </Link>{' '}\n    page.\n  </Fragment>\n);\n\nOrderNotification.propTypes = {\n  id: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default OrderNotification;\n","import React from 'react';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\n\nimport * as ActionTypes from '../action-types';\nimport * as OrderHelper from '../../helpers/order/order-helper';\nimport OrderNotification from '../../presentational-components/order/order-notification';\n\nexport const fetchServicePlans = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_SERVICE_PLANS,\n  payload: OrderHelper.getServicePlans(portfolioItemId)\n});\n\nexport const updateServiceData = (data) => ({\n  type: ActionTypes.UPDATE_SERVICE_DATA,\n  payload: { serviceData: data }\n});\n\nexport const setSelectedPlan = (data) => ({\n  type: ActionTypes.SET_SELECTED_PLAN,\n  payload: data\n});\n\nexport const sendSubmitOrder = (apiProps) => (dispatch) =>\n  dispatch({\n    type: ActionTypes.SUBMIT_SERVICE_ORDER,\n    payload: OrderHelper.sendSubmitOrder(apiProps).then(({ id }) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been accepted successfully',\n          description: <OrderNotification id={id} dispatch={dispatch} />,\n          dismissable: true\n        })\n      )\n    )\n  });\n\nexport const fetchRequests = () => ({\n  type: ActionTypes.FETCH_REQUESTS,\n  payload: OrderHelper.listRequests()\n});\n\nexport const cancelOrder = (orderId) => (dispatch, getState) => {\n  dispatch({ type: `${ActionTypes.CANCEL_ORDER}_PENDING` });\n  const {\n    orderReducer: { orderDetail }\n  } = getState();\n  return OrderHelper.cancelOrder(orderId)\n    .then(() => {\n      orderDetail.order.state = 'Canceled';\n      if (\n        orderDetail.approvalRequest &&\n        orderDetail.approvalRequest.length > 0\n      ) {\n        orderDetail.approvalRequest[0].state = 'canceled';\n      }\n\n      dispatch({\n        type: ActionTypes.SET_ORDER_DETAIL,\n        payload: { ...orderDetail }\n      });\n      return orderDetail;\n    })\n    .then((orderDetail) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been canceled successfully',\n          description: `Order ${`Order #${orderDetail.order.id}`} was canceled.`,\n          dismissable: true\n        })\n      )\n    )\n    .then(() => dispatch({ type: `${ActionTypes.CANCEL_ORDER}_FULFILLED` }))\n    .catch((error) => {\n      dispatch({\n        type: `${ActionTypes.CANCEL_ORDER}_REJECTED`,\n        payload: error\n      });\n    });\n};\n\nexport const fetchOrders = (filters, pagination) => (dispatch) => {\n  const queryFilter = Object.entries(filters)\n    .filter(([, value]) => value && value.length > 0)\n    .map(([key, value]) =>\n      Array.isArray(value)\n        ? value.map((value) => `filter[${key}][]=${value}`).join('&')\n        : `filter[${key}][contains_i]=${value}`\n    )\n    .join('&');\n  dispatch({ type: `${ActionTypes.FETCH_ORDERS}_PENDING` });\n  return OrderHelper.getOrders(queryFilter, pagination)\n    .then(({ portfolioItems, ...orders }) => {\n      dispatch({\n        type: ActionTypes.SET_PORTFOLIO_ITEMS,\n        payload: portfolioItems\n      });\n      return dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_FULFILLED`,\n        meta: { filter: queryFilter },\n        payload: orders\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchOrderDetails = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SET_ORDER_DETAIL}_PENDING` });\n  return OrderHelper.getOrderDetail(params)\n    .then(\n      ([\n        order,\n        orderItem,\n        portfolioItem,\n        platform,\n        progressMessages,\n        portfolio,\n        approvalRequest\n      ]) =>\n        dispatch({\n          type: `${ActionTypes.SET_ORDER_DETAIL}_FULFILLED`,\n          payload: {\n            order,\n            orderItem,\n            portfolioItem,\n            platform,\n            progressMessages,\n            portfolio,\n            approvalRequest\n          }\n        })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.SET_ORDER_DETAIL}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchApprovalRequests = (orderItemId) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_PENDING` });\n  return OrderHelper.getApprovalRequests(orderItemId)\n    .then((data) => {\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_FULFILLED`,\n        payload: data\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n","import { toolbarComponentTypes } from '../toolbar-mapper';\n\nconst createOrdersToolbarSchema = () => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      className: 'orders bg-fill pf-u-p-lg',\n      key: 'orders-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'orders-toolbar-title',\n          title: 'Orders',\n          className: ''\n        }\n      ]\n    }\n  ]\n});\n\nexport default createOrdersToolbarSchema;\n","import { CATALOG_API_BASE } from '../../utilities/constants';\n\nexport const getOrderIcon = ({ orderItems }) =>\n  orderItems[0] &&\n  `${CATALOG_API_BASE}/portfolio_items/${orderItems[0].portfolio_item_id}/icon`;\n\nexport const getOrderPortfolioName = ({ orderItems, id }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem ? portfolioItem.name : `Order ${id}`;\n};\n\nexport const getOrderPlatformId = ({ orderItems }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem\n    ? {\n        orderPlatform: portfolioItem.service_offering_source_ref,\n        orderPortfolio: portfolioItem.portfolio_id\n      }\n    : {};\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Grid,\n  GridItem,\n  Level,\n  LevelItem,\n  Split,\n  SplitItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport {\n  getOrderIcon,\n  getOrderPortfolioName,\n  getOrderPlatformId\n} from '../../helpers/shared/orders';\nimport CatalogLink from '../common/catalog-link';\nimport { ORDER_ROUTE, ORDER_APPROVAL_ROUTE } from '../../constants/routes';\n\nconst OrderItem = memo(\n  ({ item }) => {\n    const { orderPlatform, orderPortfolio, orderName } = useSelector(\n      ({\n        portfolioReducer: {\n          portfolioItems: { data }\n        }\n      }) => {\n        const { orderPlatform, orderPortfolio } = getOrderPlatformId(\n          item,\n          data\n        );\n        return {\n          orderPlatform,\n          orderPortfolio,\n          orderName: getOrderPortfolioName(item, data)\n        };\n      }\n    );\n    const orderItem = (item.orderItems[0] && item.orderItems[0]) || {};\n    const searchParams = {\n      order: item.id,\n      'order-item': orderItem.id,\n      'portfolio-item': orderItem.portfolio_item_id,\n      platform: orderPlatform,\n      portfolio: orderPortfolio\n    };\n    return (\n      <React.Fragment>\n        <DataListItem\n          aria-labelledby={`${item.id}-expand`}\n          className=\"data-list-expand-fix\"\n        >\n          <DataListItemRow>\n            <DataListItemCells\n              dataListCells={[\n                <DataListCell key=\"1\">\n                  <Split gutter=\"sm\">\n                    <SplitItem>\n                      <CardIcon\n                        height={60}\n                        src={getOrderIcon(item)}\n                        sourceId={orderPlatform}\n                      />\n                    </SplitItem>\n                    <SplitItem isFilled>\n                      <TextContent>\n                        <Grid gutter=\"sm\" className=\"pf-u-gg-md\">\n                          <GridItem>\n                            <Level>\n                              <LevelItem>\n                                <Text\n                                  className=\"pf-u-mb-0\"\n                                  component={TextVariants.h5}\n                                >\n                                  <CatalogLink\n                                    pathname={ORDER_ROUTE}\n                                    searchParams={searchParams}\n                                  >\n                                    {orderName} # {item.id}\n                                  </CatalogLink>\n                                </Text>\n                              </LevelItem>\n                              <LevelItem>\n                                <CatalogLink\n                                  pathname={ORDER_APPROVAL_ROUTE}\n                                  searchParams={searchParams}\n                                >\n                                  {item.state === 'Failed' && (\n                                    <ExclamationCircleIcon className=\"pf-u-mr-sm icon-danger-fill\" />\n                                  )}\n                                  {item.state}\n                                </CatalogLink>\n                              </LevelItem>\n                            </Level>\n                          </GridItem>\n                          <GridItem>\n                            <Level>\n                              <LevelItem>\n                                <Text\n                                  className=\"pf-u-mb-0\"\n                                  component={TextVariants.small}\n                                >\n                                  Ordered&nbsp;\n                                  <DateFormat\n                                    date={item.created_at}\n                                    variant=\"relative\"\n                                  />\n                                </Text>\n                              </LevelItem>\n                              <LevelItem>\n                                <Text\n                                  className=\"pf-u-mb-0\"\n                                  component={TextVariants.small}\n                                >\n                                  Ordered by {item.owner}\n                                </Text>\n                              </LevelItem>\n                              <LevelItem>\n                                <Text\n                                  className=\"pf-u-mb-0\"\n                                  component={TextVariants.small}\n                                >\n                                  Last updated&nbsp;\n                                  <DateFormat\n                                    date={\n                                      item.orderItems[0] &&\n                                      item.orderItems[0].updated_at\n                                    }\n                                    variant=\"relative\"\n                                  />\n                                </Text>\n                              </LevelItem>\n                            </Level>\n                          </GridItem>\n                        </Grid>\n                      </TextContent>\n                    </SplitItem>\n                  </Split>\n                </DataListCell>\n              ]}\n            />\n          </DataListItemRow>\n        </DataListItem>\n      </React.Fragment>\n    );\n  },\n  (prevProps, nextProps) => prevProps.id === nextProps.id\n);\n\nOrderItem.propTypes = {\n  item: PropTypes.object.isRequired\n};\n\nexport default OrderItem;\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  DataList,\n  Grid,\n  GridItem,\n  Title,\n  Bullseye,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Flex,\n  EmptyStateSecondaryActions,\n  Button\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/components/EmptyTable';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/TableToolbar';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { fetchOrders } from '../../redux/actions/order-actions';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport OrderItem from './order-item';\nimport AsyncPagination from '../common/async-pagination';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nconst debouncedFilter = asyncFormValidator(\n  (filters, meta = defaultSettings, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(fetchOrders(filters, meta)).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst initialState = {\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false,\n  filterType: 'state',\n  filters: {\n    state: [],\n    owner: ''\n  }\n};\n\nconst changeFilters = (value, type, filters) => ({\n  ...filters,\n  [type]: value\n});\n\nconst ordersListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return {\n        ...state,\n        filters: changeFilters(action.payload, state.filterType, state.filters)\n      };\n    case 'replaceFilterChip':\n      return { ...state, filters: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    case 'setFilterType':\n      return { ...state, filterType: action.payload };\n  }\n\n  return state;\n};\n\nconst OrdersList = () => {\n  const [\n    { isFetching, isFiltering, filterType, filters },\n    stateDispatch\n  ] = useReducer(ordersListState, initialState);\n  const { data, meta } = useSelector(({ orderReducer }) => orderReducer.orders);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.all([\n      dispatch(fetchOrders(filters, meta)),\n      dispatch(fetchPlatforms())\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const handlePagination = (_apiProps, pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    return dispatch(fetchOrders(filters, pagination))\n      .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n      .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      { ...filters, [filterType]: value },\n      meta,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  return (\n    <Grid gutter=\"md\">\n      <GridItem>\n        <Section type=\"content\">\n          {!meta.noData && (\n            <PrimaryToolbar\n              activeFiltersConfig={{\n                filters: Object.entries(filters)\n                  .filter(([, value]) => value && value.length > 0)\n                  .map(([key, value]) => ({\n                    category: key,\n                    type: key,\n                    chips: Array.isArray(value)\n                      ? value.map((name) => ({ name }))\n                      : [{ name: value }]\n                  })),\n                onDelete: (_e, [chip], clearAll) => {\n                  if (clearAll) {\n                    stateDispatch({\n                      type: 'replaceFilterChip',\n                      payload: initialState.filters\n                    });\n                    return debouncedFilter(\n                      initialState.filters,\n                      meta,\n                      dispatch,\n                      (isFiltering) =>\n                        stateDispatch({\n                          type: 'setFilteringFlag',\n                          payload: isFiltering\n                        })\n                    );\n                  }\n\n                  const newFilters = { ...filters };\n                  if (chip.type === 'state') {\n                    newFilters[chip.type] = newFilters[chip.type].filter(\n                      (value) => value !== chip.chips[0].name\n                    );\n                  } else {\n                    newFilters[chip.type] = '';\n                  }\n\n                  stateDispatch({\n                    type: 'replaceFilterChip',\n                    payload: newFilters\n                  });\n                  debouncedFilter(newFilters, meta, dispatch, (isFiltering) =>\n                    stateDispatch({\n                      type: 'setFilteringFlag',\n                      payload: isFiltering\n                    })\n                  );\n                }\n              }}\n              filterConfig={{\n                onChange: (_e, value) =>\n                  stateDispatch({ type: 'setFilterType', payload: value }),\n                value: filterType,\n                items: [\n                  {\n                    filterValues: {\n                      items: [\n                        {\n                          value: 'Failed',\n                          label: 'Failed'\n                        },\n                        {\n                          value: 'Completed',\n                          label: 'Completed'\n                        },\n                        {\n                          value: 'Approval Pending',\n                          label: 'Approval Pending'\n                        },\n                        {\n                          value: 'Canceled',\n                          label: 'Canceled'\n                        },\n                        {\n                          value: 'Created',\n                          label: 'Created'\n                        }\n                      ],\n                      value: filters.state,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'State',\n                    value: 'state',\n                    type: 'checkbox'\n                  },\n                  {\n                    filterValues: {\n                      value: filters.owner,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'Owner',\n                    value: 'owner'\n                  }\n                ]\n              }}\n              pagination={\n                <AsyncPagination\n                  isDisabled={isFetching || isFiltering}\n                  apiRequest={handlePagination}\n                  meta={meta}\n                  isCompact\n                />\n              }\n            />\n          )}\n          <DataList aria-label=\"order-list\">\n            {isFiltering || isFetching ? (\n              <ListLoader />\n            ) : data.length > 0 ? (\n              data.map((item, index) => (\n                <OrderItem key={item.id} index={index} item={item} />\n              ))\n            ) : (\n              <EmptyTable>\n                <Bullseye>\n                  <EmptyState>\n                    <Bullseye>\n                      <EmptyStateIcon icon={SearchIcon} />\n                    </Bullseye>\n                    <Title size=\"lg\">\n                      {meta.noData ? 'No orders' : 'No results found'}\n                    </Title>\n                    <EmptyStateBody>\n                      {meta.noData\n                        ? 'No orders have been created.'\n                        : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'}\n                    </EmptyStateBody>\n\n                    <EmptyStateSecondaryActions>\n                      {!meta.noData && (\n                        <Button\n                          variant=\"link\"\n                          onClick={() => {\n                            stateDispatch({\n                              type: 'setFilteringFlag',\n                              payload: true\n                            });\n                            handleFilterItems('');\n                          }}\n                        >\n                          Clear all filters\n                        </Button>\n                      )}\n                    </EmptyStateSecondaryActions>\n                  </EmptyState>\n                </Bullseye>\n              </EmptyTable>\n            )}\n          </DataList>\n          <TableToolbar>\n            <div className=\"bottom-pagination-container\">\n              <Flex\n                className=\"example-border\"\n                breakpointMods={[{ modifier: 'justify-content-flex-end' }]}\n              >\n                {meta.count > 0 && (\n                  <AsyncPagination\n                    className=\"pf-u-mt-0\"\n                    isDisabled={isFetching || isFiltering}\n                    apiRequest={handlePagination}\n                    meta={meta}\n                  />\n                )}\n              </Flex>\n            </div>\n          </TableToolbar>\n        </Section>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default OrdersList;\n","import React, { useEffect } from 'react';\nimport { Stack } from '@patternfly/react-core';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createOrdersToolbarSchema from '../../toolbar/schemas/orders-toolbar.schema';\nimport OrdersList from './orders-list';\n\nconst Orders = () => {\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'orders', secondaryNav: true });\n  }, []);\n\n  return (\n    <Stack>\n      <ToolbarRenderer schema={createOrdersToolbarSchema()} />\n      <OrdersList />\n    </Stack>\n  );\n};\n\nexport default Orders;\n"],"sourceRoot":""}