{"version":3,"sources":["webpack:///./src/smart-components/common/catalog-link.js","webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/toolbar/toolbar-mapper.js","webpack:///./src/utilities/async-form-validator.js","webpack:///./src/utilities/use-enhanced-history.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/shared/conditional-link.js","webpack:///./src/helpers/platform/platform-helper.js","webpack:///./src/redux/actions/platform-actions.js","webpack:///./src/smart-components/common/catalog-breadcrumbs.js","webpack:///./src/presentational-components/shared/card-icon.js","webpack:///./src/toolbar/toolbar-renderer.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/presentational-components/shared/app-tabs.js","webpack:///./src/assets/images/card-icon-default.svg","webpack:///./src/helpers/order/order-helper.js","webpack:///./src/presentational-components/order/order-notification.js","webpack:///./src/redux/actions/order-actions.js","webpack:///./src/toolbar/schemas/orders-toolbar.schema.js","webpack:///./src/helpers/shared/orders.js","webpack:///./src/smart-components/order/order-item.js","webpack:///./src/smart-components/order/orders-list.js","webpack:///./src/smart-components/order/orders.js"],"names":["createSearchQuery","search","searchParams","preserveSearch","paramsQuery","Object","entries","map","key","value","join","length","CatalogLink","pathname","nav","props","useLocation","Component","NavLink","Link","to","propTypes","PropTypes","string","isRequired","shape","bool","defaultProps","FilterToolbarItem","searchValue","onFilterChange","placeholder","isClearable","ToolbarItem","className","TextInput","type","onChange","aria-label","width","height","onClick","func","ToolbarButton","title","Button","toolbarMapper","TopToolbar","TopToolbarTitle","Toolbar","ToolbarGroup","Level","LevelItem","AppTabs","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","TOOLBAR","TOOLBAR_ITEM","TOOLBAR_GROUP","FILTER_TOOLBAR_ITEM","LINK","BUTTON","LEVEL","LEVEL_ITEM","TABS","asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","useEnhancedHistory","removeSearch","history","useHistory","push","target","split","undefined","removeSearchQuery","AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","isCompact","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","getNewPage","request","debouncePromise","direction","any","ConditionalLink","children","oneOfType","node","arrayOf","axiosInstance","getAxiosInstance","graphqlInstance","getGraphqlInstance","getPlatforms","post","SOURCES_API_BASE","query","then","data","application_types","sources","getPlatform","platformId","get","getPlatformItems","filter","filterQuery","TOPOLOGICAL_INVENTORY_API_BASE","getPlatformInventories","defaultSettings","getServiceOffering","serviceOfferingId","sourceId","Promise","all","source","source_type_id","icon_url","service","fetchPlatforms","dispatch","ActionTypes","PlatformHelper","payload","error","fetchPlatformItems","fetchSelectedPlatform","id","fetchPlatformInventories","fetchServiceOffering","CatalogBreadcrumbs","fragments","useSelector","breadcrumbsReducer","index","exact","isActive","CardIcon","src","useState","isLoaded","setLoaded","isUnknown","setUnknown","platformIconMapping","platformReducer","defaultIcon","CardIconDefault","threshold","delayTime","style","onError","onLoad","object","ToolbarContext","createContext","component","Consumer","componentMapper","C","element","render","fields","hidden","field","ToolbarRenderer","schema","Provider","array","paddingBottom","breadcrumbs","rest","breadcrumbsSpacing","description","noData","clsx","TextVariants","h2","p","tabItems","activeTab","find","name","includes","activeKey","eventKey","onSelect","tabIndex","item","module","exports","orderApi","getOrderApi","portfolioItemApi","getOrderItemApi","getPortfolioItemApi","getRequestsApi","getServicePlans","portfolioItemId","listServicePlans","getOrderItems","orderIds","CATALOG_API_BASE","orderId","getOrderPortfolioItems","itemIds","itemId","OrderNotification","clearNotifications","ORDERS_ROUTE","fetchServicePlans","OrderHelper","sendSubmitOrder","a","async","service_parameters","providerControlParameters","parameters","createOrder","order","orderItem","provider_control_parameters","addToOrder","submitOrder","addNotification","variant","dismissable","cancelOrder","getState","orderDetail","orderReducer","state","approvalRequest","fetchOrders","filterType","pagination","orders","orderItems","portfolio_item_id","portfolioItems","order_id","fetchOrderDetails","params","platform","portfolio","portfolioItem","progressMessages","createOrdersToolbarSchema","getOrderIcon","getOrderPortfolioName","OrderItem","portfolioReducer","orderPlatform","service_offering_source_ref","orderPortfolio","portfolio_id","orderName","Fragment","DataListItem","aria-labelledby","DataListItemRow","DataListItemCells","dataListCells","DataListCell","Split","gutter","SplitItem","TextContent","Grid","GridItem","Text","h5","ORDER_ROUTE","ORDER_APPROVAL_ROUTE","small","DateFormat","date","created_at","owner","updated_at","debouncedFilter","asyncFormValidator","filteringCallback","initialState","filterValue","isOpen","isFetching","isFiltering","ordersListState","action","OrdersList","useReducer","stateDispatch","useDispatch","useEffect","handlePagination","_apiProps","handleFilterItems","Section","PrimaryToolbar","activeFiltersConfig","filters","onDelete","filterConfig","_e","items","filterValues","label","isDisabled","DataList","EmptyTable","Bullseye","EmptyState","EmptyStateIcon","icon","SearchIcon","Title","size","EmptyStateBody","EmptyStateSecondaryActions","TableToolbar","Flex","breakpointMods","modifier","Orders","insights","chrome","appNavClick","secondaryNav","Stack"],"mappings":"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","file":"js/orders.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, NavLink, useLocation } from 'react-router-dom';\n\nconst createSearchQuery = (search, searchParams, preserveSearch) => {\n  const paramsQuery = Object.entries(searchParams)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&');\n  return preserveSearch\n    ? `${search}${paramsQuery.length > 0 ? `&${paramsQuery}` : ''}`\n    : paramsQuery.length > 0\n    ? `?${paramsQuery}`\n    : '';\n};\n\nconst CatalogLink = ({\n  pathname,\n  searchParams,\n  nav,\n  preserveSearch,\n  ...props\n}) => {\n  const { search } = useLocation();\n  const Component = nav ? NavLink : Link;\n  const to = {\n    pathname,\n    search: createSearchQuery(search, searchParams, preserveSearch)\n  };\n  return <Component to={to} {...props} />;\n};\n\nCatalogLink.propTypes = {\n  pathname: PropTypes.string.isRequired,\n  searchParams: PropTypes.shape({\n    [PropTypes.string]: PropTypes.string\n  }),\n  nav: PropTypes.bool,\n  preserveSearch: PropTypes.bool\n};\n\nCatalogLink.defaultProps = {\n  nav: false,\n  preserveSearch: false,\n  searchParams: {}\n};\n\nexport default CatalogLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable\n}) => (\n  <ToolbarItem>\n    <div className=\"toolbar-filter-input-group\">\n      <TextInput\n        placeholder={placeholder}\n        value={searchValue}\n        type=\"text\"\n        onChange={onFilterChange}\n        aria-label={placeholder}\n      />\n      <span className=\"filter-icons-container\">\n        {(isClearable && searchValue && (\n          <CloseIcon\n            className=\"clear-filter\"\n            width=\"16\"\n            height=\"16\"\n            onClick={() => onFilterChange('')}\n          />\n        )) || <SearchIcon />}\n      </span>\n    </div>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Level,\n  LevelItem,\n  Toolbar,\n  ToolbarItem,\n  ToolbarGroup\n} from '@patternfly/react-core';\n\nimport FilterToolbarItem from '../presentational-components/shared/filter-toolbar-item';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../presentational-components/shared/top-toolbar';\nimport AppTabs from '../presentational-components/shared/app-tabs';\nimport CatalogLink from '../smart-components/common/catalog-link';\n\nconst ToolbarButton = ({ title, ...props }) => (\n  <Button {...props}>{title}</Button>\n);\n\nToolbarButton.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst AppToolbar = ({ ...props }) => (\n  <Toolbar className=\"pf-u-pr-lg toolbar\" {...props} />\n);\n\nconst toolbarMapper = {\n  TopToolbar,\n  TopToolbarTitle,\n  Toolbar: AppToolbar,\n  ToolbarGroup,\n  ToolbarItem,\n  FilterToolbarItem,\n  Link: CatalogLink,\n  Level,\n  LevelItem,\n  Button: ToolbarButton,\n  AppTabs\n};\n\nexport const toolbarComponentTypes = {\n  TOP_TOOLBAR: 'TopToolbar',\n  TOP_TOOLBAR_TITLE: 'TopToolbarTitle',\n  TOOLBAR: 'Toolbar',\n  TOOLBAR_ITEM: 'ToolbarItem',\n  TOOLBAR_GROUP: 'ToolbarGroup',\n  FILTER_TOOLBAR_ITEM: 'FilterToolbarItem',\n  LINK: 'Link',\n  BUTTON: 'Button',\n  LEVEL: 'Level',\n  LEVEL_ITEM: 'LevelItem',\n  TABS: 'AppTabs'\n};\n\nexport default toolbarMapper;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import { useHistory } from 'react-router-dom';\n\nconst removeSearchQuery = (target) => {\n  if (typeof target === 'string') {\n    return target.split('?')[0];\n  }\n\n  if (typeof target === 'object') {\n    return {\n      ...target,\n      search: undefined\n    };\n  }\n\n  return target;\n};\n\n/**\n * Wrapper around useHistory hook which adds aditional settings to standard history methods\n * @param {Boolean} removeSearch if true, using history navigation methods will remove search string from path\n */\nconst useEnhancedHistory = (removeSearch) => {\n  const history = useHistory();\n  return {\n    ...history,\n    push: (target) => {\n      if (removeSearch) {\n        return history.push(removeSearchQuery(target));\n      }\n\n      return history.push(target);\n    }\n  };\n};\n\nexport default useEnhancedHistory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ConditionalLink = ({ children, pathname, ...props }) =>\n  pathname ? (\n    <CatalogLink pathname={pathname} {...props}>\n      {children}\n    </CatalogLink>\n  ) : (\n    children\n  );\n\nConditionalLink.propTypes = {\n  pathname: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]).isRequired\n};\n\nexport default ConditionalLink;\n","import { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport {\n  TOPOLOGICAL_INVENTORY_API_BASE,\n  SOURCES_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nexport const getPlatforms = () => {\n  return graphqlInstance\n    .post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n    .then(({ data: { application_types } }) => application_types)\n    .then(([{ sources }]) => sources);\n};\n\nexport const getPlatform = (platformId) => {\n  return axiosInstance.get(`${SOURCES_API_BASE}/sources/${platformId}`);\n};\n\nexport const getPlatformItems = (platformId, filter, options) => {\n  const filterQuery = filter ? `&filter[name][contains_i]=${filter}` : '';\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_offerings?filter[archived_at][nil]${filterQuery}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings`\n    );\n  }\n};\n\nexport const getPlatformInventories = (\n  platformId,\n  filter = '',\n  options = defaultSettings\n) => {\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_inventories?filter[name][contains_i]=${filter}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_inventories?limit=${options.limit}&offset=${options.offset}`\n    );\n  }\n};\n\nexport const getServiceOffering = (serviceOfferingId, sourceId) =>\n  Promise.all([\n    axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings/${serviceOfferingId}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${sourceId}`)\n      .then((source) => {\n        return axiosInstance\n          .get(`${SOURCES_API_BASE}/source_types/${source.source_type_id}`)\n          .then(({ icon_url }) => ({\n            ...source,\n            icon_url\n          }));\n      })\n  ]).then(([service, source]) => ({\n    service,\n    source\n  }));\n","import * as ActionTypes from '../action-types';\nimport * as PlatformHelper from '../../helpers/platform/platform-helper';\n\nconst doFetchPlatforms = () => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_PLATFORMS}_PENDING` });\n  return PlatformHelper.getPlatforms()\n    .then((data) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_FULFILLED`,\n        payload: data\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchPlatforms = () => (dispatch) => dispatch(doFetchPlatforms());\n\nexport const fetchPlatformItems = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_ITEMS,\n  payload: PlatformHelper.getPlatformItems(platformId, filter, options),\n  meta: {\n    platformId,\n    filter,\n    ...options\n  }\n});\n\nexport const fetchMultiplePlatformItems = (platformsId) => {\n  const platformPromisses = platformsId.map((platformId) =>\n    PlatformHelper.getPlatformItems(platformId).then((data) => ({\n      [platformId]: data\n    }))\n  );\n  return {\n    type: ActionTypes.FETCH_MULTIPLE_PLATFORM_ITEMS,\n    payload: Promise.all(platformPromisses).then((data) =>\n      data.reduce(\n        (acc, curr) => ({\n          ...acc,\n          ...curr\n        }),\n        {}\n      )\n    )\n  };\n};\n\nexport const fetchSelectedPlatform = (id) => ({\n  type: ActionTypes.FETCH_PLATFORM,\n  payload: PlatformHelper.getPlatform(id)\n});\n\nexport const searchPlatformItems = (value) => ({\n  type: ActionTypes.FILTER_PLATFORM_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const fetchPlatformInventories = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_INVENTORIES,\n  payload: PlatformHelper.getPlatformInventories(platformId, filter, options)\n});\n\nexport const fetchServiceOffering = (...args) => ({\n  type: ActionTypes.FETCH_SERVICE_OFFERING,\n  payload: PlatformHelper.getServiceOffering(...args)\n});\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport ConditionalLink from '../../presentational-components/shared/conditional-link';\n\nconst CatalogBreadcrumbs = () => {\n  const fragments = useSelector(\n    ({ breadcrumbsReducer: { fragments } }) => fragments\n  );\n  if (fragments.length <= 1) {\n    return null;\n  }\n\n  return (\n    <Breadcrumb>\n      {fragments.map(({ title, pathname, searchParams }, index) => (\n        <ConditionalLink\n          pathname={!(fragments.length === index + 1) ? pathname : undefined}\n          searchParams={searchParams}\n          nav\n          exact\n          key={pathname}\n          className=\"pf-c-breadcrumb__item\"\n        >\n          <BreadcrumbItem isActive={fragments.length === index + 1}>\n            {title}\n          </BreadcrumbItem>\n        </ConditionalLink>\n      ))}\n    </Breadcrumb>\n  );\n};\n\nexport default CatalogBreadcrumbs;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nimport { IconPlaceholder } from './loader-placeholders';\nimport CardIconDefault from '../../assets/images/card-icon-default.svg';\n\nconst CardIcon = ({ src, height, sourceId }) => {\n  const [isLoaded, setLoaded] = useState(false);\n  const [isUnknown, setUnknown] = useState(false);\n  const platformIconMapping = useSelector(\n    ({ platformReducer: { platformIconMapping } }) => platformIconMapping\n  );\n  const defaultIcon = sourceId\n    ? platformIconMapping[sourceId]\n    : CardIconDefault;\n\n  return (\n    <div className=\"display-inline-block\">\n      {!isLoaded && <IconPlaceholder height={height} />}\n      <LazyLoadImage\n        threshold={2000}\n        delayTime={0}\n        height={isLoaded ? height : 0}\n        style={{ height: isLoaded ? height : 0 }}\n        className={`card-image ${!isLoaded ? 'hide' : ''}`}\n        onError={() => setUnknown(true)}\n        onLoad={() => setLoaded(true)}\n        src={!src || isUnknown ? defaultIcon : src}\n      />\n    </div>\n  );\n};\n\nCardIcon.propTypes = {\n  src: PropTypes.string,\n  platformId: PropTypes.string,\n  style: PropTypes.object,\n  height: PropTypes.number,\n  sourceId: PropTypes.string\n};\n\nCardIcon.defaultProps = {\n  style: {},\n  height: 40\n};\n\nexport default CardIcon;\n","import React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport toolbarMapper from './toolbar-mapper';\n\nconst ToolbarContext = createContext();\n\nconst Component = ({ component, ...props }) => (\n  <ToolbarContext.Consumer>\n    {({ componentMapper }) => {\n      const C =\n        typeof component === 'string' ? componentMapper[component] : component;\n      return <C {...props} />;\n    }}\n  </ToolbarContext.Consumer>\n);\n\nComponent.propTypes = {\n  component: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.element\n  ]).isRequired\n};\n\n/**\n * Render loop that renders all toolbar components based on its type\n * @param {Array} fields list of React components to be rendered\n */\nconst render = (fields) =>\n  fields.hidden\n    ? null\n    : fields.map(({ fields, key, ...field }) =>\n        fields ? (\n          <Component key={key} {...field}>\n            {render(fields)}\n          </Component>\n        ) : (\n          <Component key={key} {...field} />\n        )\n      );\n\nconst ToolbarRenderer = ({ schema, componentMapper }) => (\n  <ToolbarContext.Provider value={{ render, componentMapper }}>\n    {render(schema.fields)}\n  </ToolbarContext.Provider>\n);\n\nToolbarRenderer.propTypes = {\n  schema: PropTypes.shape({\n    fields: PropTypes.array.isRequired\n  }).isRequired,\n  componentMapper: PropTypes.object\n};\n\nToolbarRenderer.defaultProps = {\n  componentMapper: toolbarMapper\n};\n\nexport default ToolbarRenderer;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport clsx from 'clsx';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport CatalogBreadcrumbs from '../../smart-components/common/catalog-breadcrumbs';\n\nconst TopToolbar = ({\n  children,\n  paddingBottom,\n  breadcrumbs,\n  breadcrumbsSpacing,\n  ...rest\n}) => (\n  <div\n    className={`pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${\n      paddingBottom ? 'pf-u-pb-lg' : ''\n    } top-toolbar`}\n    {...rest}\n  >\n    {breadcrumbs && (\n      <div className=\"pf-u-mb-md\">\n        {' '}\n        <CatalogBreadcrumbs />\n      </div>\n    )}\n    {children}\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  paddingBottom: PropTypes.bool,\n  breadcrumbs: PropTypes.bool,\n  breadcrumbsSpacing: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: true,\n  breadcrumbs: true\n};\n\nexport default TopToolbar;\n\nexport const TopToolbarTitle = ({\n  title,\n  description,\n  children,\n  noData,\n  ...rest\n}) => (\n  <Fragment>\n    <Level\n      className={clsx('top-toolbar-title-container', {\n        'pf-u-mb-lg': !noData\n      })}\n      {...rest}\n    >\n      <LevelItem>\n        <TextContent className=\"top-toolbar-title\">\n          <Text component={TextVariants.h2} className=\"pf-u-m-0 pf-u-mr-md\">\n            {title}\n          </Text>\n          {description && (\n            <Text\n              className=\"top-toolbar-title-description\"\n              component={TextVariants.p}\n            >\n              {description}\n            </Text>\n          )}\n        </TextContent>\n      </LevelItem>\n      {children}\n    </Level>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  noData: PropTypes.bool\n};\n\nTopToolbarTitle.defaultProps = {\n  title: <ToolbarTitlePlaceholder />\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation } from 'react-router-dom';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nconst AppTabs = ({ tabItems }) => {\n  const { push } = useEnhancedHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) =>\n    push({ pathname: tabItems[tabIndex].name, search });\n\n  return (\n    <Tabs\n      activeKey={activeTab ? activeTab.eventKey : 0}\n      onSelect={handleTabClick}\n    >\n      {tabItems.map((item) => (\n        <Tab\n          title={item.title}\n          key={item.eventKey}\n          eventKey={item.eventKey}\n          name={item.name}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default AppTabs;\n","module.exports = __webpack_public_path__ + \"fonts/card-icon-default.svg\";","/* eslint camelcase: 0 */\nimport {\n  getAxiosInstance,\n  getPortfolioItemApi,\n  getOrderApi,\n  getRequestsApi,\n  getOrderItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nconst orderApi = getOrderApi();\nconst orderItemApi = getOrderItemApi();\nconst portfolioItemApi = getPortfolioItemApi();\nconst requestsApi = getRequestsApi();\nconst axiosInstance = getAxiosInstance();\n\nexport function getServicePlans(portfolioItemId) {\n  return portfolioItemApi.listServicePlans(portfolioItemId);\n}\n\nexport async function sendSubmitOrder({\n  service_parameters: { providerControlParameters, ...service_parameters },\n  ...parameters\n}) {\n  let order = await orderApi.createOrder();\n  let orderItem = {};\n  orderItem.count = 1;\n  orderItem = {\n    ...orderItem,\n    ...parameters,\n    service_parameters,\n    provider_control_parameters: providerControlParameters || {}\n  };\n  await orderApi.addToOrder(order.id, orderItem);\n  return orderApi.submitOrder(order.id);\n}\n\nexport function listRequests() {\n  return requestsApi.listRequests().then((data) => ({\n    ...data,\n    data: data.data.map(({ decision, ...item }) => ({\n      ...item,\n      state: decision\n    }))\n  }));\n}\n\nexport function cancelOrder(orderId) {\n  return orderApi.cancelOrder(orderId);\n}\n\nconst getOrderItems = (orderIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items?${orderIds\n      .map((orderId) => `filter[order_id][]=${orderId}`)\n      .join('&')}`\n  );\n\nconst getOrderPortfolioItems = (itemIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items?${itemIds\n      .map((itemId) => `filter[id][]=${itemId}`)\n      .join('&')}`\n  );\n\nexport const getOrders = (filterType, filter, pagination = defaultSettings) =>\n  axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/orders?filter[${filterType}][contains_i]=${filter}&limit=${pagination.limit}&offset=${pagination.offset}`\n    ) // eslint-disable-line max-len\n    .then((orders) =>\n      getOrderItems(orders.data.map(({ id }) => id)).then((orderItems) =>\n        getOrderPortfolioItems(\n          orderItems.data.map(({ portfolio_item_id }) => portfolio_item_id)\n        ).then((portfolioItems) => {\n          return {\n            portfolioItems,\n            ...orders,\n            data: orders.data.map((order) => ({\n              ...order,\n              orderItems: orderItems.data.filter(\n                ({ order_id }) => order_id === order.id\n              )\n            }))\n          };\n        })\n      )\n    );\n\nexport function getOrderApprovalRequests(orderItemId) {\n  return orderItemApi.listApprovalRequests(orderItemId);\n}\n\nexport const getOrderDetail = (params) => {\n  return Promise.all([\n    axiosInstance.get(`${CATALOG_API_BASE}/orders/${params.order}`),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}`\n    ),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/portfolio_items/${params['portfolio-item']}`\n    ),\n    axiosInstance.get(`${SOURCES_API_BASE}/sources/${params.platform}`),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}/progress_messages`\n    ),\n    axiosInstance.get(`${CATALOG_API_BASE}/portfolios/${params.portfolio}`),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}/approval_requests`\n    )\n  ]);\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport { ORDERS_ROUTE } from '../../constants/routes';\n\nconst OrderNotification = ({ id, dispatch }) => (\n  <Fragment>\n    You can track the progress of Order # {id} in your{' '}\n    <Link onClick={() => dispatch(clearNotifications())} to={ORDERS_ROUTE}>\n      Orders\n    </Link>{' '}\n    page.\n  </Fragment>\n);\n\nOrderNotification.propTypes = {\n  id: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default OrderNotification;\n","import React from 'react';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\n\nimport * as ActionTypes from '../action-types';\nimport * as OrderHelper from '../../helpers/order/order-helper';\nimport OrderNotification from '../../presentational-components/order/order-notification';\n\nexport const fetchServicePlans = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_SERVICE_PLANS,\n  payload: OrderHelper.getServicePlans(portfolioItemId)\n});\n\nexport const updateServiceData = (data) => ({\n  type: ActionTypes.UPDATE_SERVICE_DATA,\n  payload: { serviceData: data }\n});\n\nexport const setSelectedPlan = (data) => ({\n  type: ActionTypes.SET_SELECTED_PLAN,\n  payload: data\n});\n\nexport const sendSubmitOrder = (apiProps) => (dispatch) =>\n  dispatch({\n    type: ActionTypes.SUBMIT_SERVICE_ORDER,\n    payload: OrderHelper.sendSubmitOrder(apiProps).then(({ id }) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been accepted successfully',\n          description: <OrderNotification id={id} dispatch={dispatch} />,\n          dismissable: true\n        })\n      )\n    )\n  });\n\nexport const fetchRequests = () => ({\n  type: ActionTypes.FETCH_REQUESTS,\n  payload: OrderHelper.listRequests()\n});\n\nexport const cancelOrder = (orderId) => (dispatch, getState) => {\n  dispatch({ type: `${ActionTypes.CANCEL_ORDER}_PENDING` });\n  const {\n    orderReducer: { orderDetail }\n  } = getState();\n  return OrderHelper.cancelOrder(orderId)\n    .then(() => {\n      orderDetail.order.state = 'Canceled';\n      if (\n        orderDetail.approvalRequest &&\n        orderDetail.approvalRequest.length > 0\n      ) {\n        orderDetail.approvalRequest[0].state = 'canceled';\n      }\n\n      dispatch({\n        type: ActionTypes.SET_ORDER_DETAIL,\n        payload: { ...orderDetail }\n      });\n      return orderDetail;\n    })\n    .then((orderDetail) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been canceled successfully',\n          description: `Order ${`Order #${orderDetail.order.id}`} was canceled.`,\n          dismissable: true\n        })\n      )\n    )\n    .then(() => dispatch({ type: `${ActionTypes.CANCEL_ORDER}_FULFILLED` }))\n    .catch((error) => {\n      dispatch({\n        type: `${ActionTypes.CANCEL_ORDER}_REJECTED`,\n        payload: error\n      });\n    });\n};\n\nexport const fetchOrders = (filterType, filter, pagination) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_ORDERS}_PENDING` });\n  return OrderHelper.getOrders(filterType, filter, pagination)\n    .then(({ portfolioItems, ...orders }) => {\n      dispatch({\n        type: ActionTypes.SET_PORTFOLIO_ITEMS,\n        payload: portfolioItems\n      });\n      return dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_FULFILLED`,\n        meta: { filter },\n        payload: orders\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchOrderDetails = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SET_ORDER_DETAIL}_PENDING` });\n  return OrderHelper.getOrderDetail(params)\n    .then(\n      ([\n        order,\n        orderItem,\n        portfolioItem,\n        platform,\n        progressMessages,\n        portfolio,\n        approvalRequest\n      ]) =>\n        dispatch({\n          type: `${ActionTypes.SET_ORDER_DETAIL}_FULFILLED`,\n          payload: {\n            order,\n            orderItem,\n            portfolioItem,\n            platform,\n            progressMessages,\n            portfolio,\n            approvalRequest\n          }\n        })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.SET_ORDER_DETAIL}_REJECTED`,\n        payload: error\n      })\n    );\n};\n","import { toolbarComponentTypes } from '../toolbar-mapper';\n\nconst createOrdersToolbarSchema = () => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      className: 'orders bg-fill pf-u-p-lg',\n      key: 'orders-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'orders-toolbar-title',\n          title: 'Orders',\n          className: ''\n        }\n      ]\n    }\n  ]\n});\n\nexport default createOrdersToolbarSchema;\n","import { CATALOG_API_BASE } from '../../utilities/constants';\n\nexport const getOrderIcon = ({ orderItems }) =>\n  orderItems[0] &&\n  `${CATALOG_API_BASE}/portfolio_items/${orderItems[0].portfolio_item_id}/icon`;\n\nexport const getOrderPortfolioName = ({ orderItems, id }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem ? portfolioItem.name : `Order ${id}`;\n};\n\nexport const getOrderPlatformId = ({ orderItems }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem\n    ? {\n        orderPlatform: portfolioItem.service_offering_source_ref,\n        orderPortfolio: portfolioItem.portfolio_id\n      }\n    : {};\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Grid,\n  GridItem,\n  Level,\n  LevelItem,\n  Split,\n  SplitItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport {\n  getOrderIcon,\n  getOrderPortfolioName,\n  getOrderPlatformId\n} from '../../helpers/shared/orders';\nimport CatalogLink from '../common/catalog-link';\nimport { ORDER_ROUTE, ORDER_APPROVAL_ROUTE } from '../../constants/routes';\n\nconst OrderItem = ({ item }) => {\n  const { orderPlatform, orderPortfolio, orderName } = useSelector(\n    ({\n      portfolioReducer: {\n        portfolioItems: { data }\n      }\n    }) => {\n      const { orderPlatform, orderPortfolio } = getOrderPlatformId(item, data);\n      return {\n        orderPlatform,\n        orderPortfolio,\n        orderName: getOrderPortfolioName(item, data)\n      };\n    }\n  );\n  const orderItem = (item.orderItems[0] && item.orderItems[0]) || {};\n  const searchParams = {\n    order: item.id,\n    'order-item': orderItem.id,\n    'portfolio-item': orderItem.portfolio_item_id,\n    platform: orderPlatform,\n    portfolio: orderPortfolio\n  };\n  return (\n    <React.Fragment>\n      <DataListItem\n        aria-labelledby={`${item.id}-expand`}\n        className=\"data-list-expand-fix\"\n      >\n        <DataListItemRow>\n          <DataListItemCells\n            dataListCells={[\n              <DataListCell key=\"1\" className=\"cell-grow\">\n                <Split gutter=\"sm\">\n                  <SplitItem>\n                    <CardIcon\n                      height={60}\n                      src={getOrderIcon(item)}\n                      sourceId={orderPlatform}\n                    />\n                  </SplitItem>\n                  <SplitItem>\n                    <TextContent>\n                      <Grid gutter=\"sm\" className=\"pf-u-gg-md\">\n                        <GridItem>\n                          <Level>\n                            <LevelItem>\n                              <Text\n                                className=\"pf-u-mb-0\"\n                                component={TextVariants.h5}\n                              >\n                                <CatalogLink\n                                  pathname={ORDER_ROUTE}\n                                  searchParams={searchParams}\n                                >\n                                  {orderName} # {item.id}\n                                </CatalogLink>\n                              </Text>\n                            </LevelItem>\n                            <LevelItem>\n                              <CatalogLink\n                                pathname={ORDER_APPROVAL_ROUTE}\n                                searchParams={searchParams}\n                              >\n                                {item.state === 'Failed' && (\n                                  <ExclamationCircleIcon className=\"pf-u-mr-sm icon-danger-fill\" />\n                                )}\n                                {item.state}\n                              </CatalogLink>\n                            </LevelItem>\n                          </Level>\n                        </GridItem>\n                        <GridItem>\n                          <Level>\n                            <LevelItem>\n                              <Text\n                                className=\"pf-u-mb-0\"\n                                component={TextVariants.small}\n                              >\n                                <DateFormat\n                                  date={item.created_at}\n                                  variant=\"relative\"\n                                />\n                              </Text>\n                            </LevelItem>\n                            <LevelItem>\n                              <Text\n                                className=\"pf-u-mb-0\"\n                                component={TextVariants.small}\n                              >\n                                Ordered by {item.owner}\n                              </Text>\n                            </LevelItem>\n                            <LevelItem>\n                              <Text\n                                className=\"pf-u-mb-0\"\n                                component={TextVariants.small}\n                              >\n                                <DateFormat\n                                  date={\n                                    item.orderItems[0] &&\n                                    item.orderItems[0].updated_at\n                                  }\n                                  variant=\"relative\"\n                                />\n                              </Text>\n                            </LevelItem>\n                          </Level>\n                        </GridItem>\n                      </Grid>\n                    </TextContent>\n                  </SplitItem>\n                </Split>\n              </DataListCell>\n            ]}\n          />\n        </DataListItemRow>\n      </DataListItem>\n    </React.Fragment>\n  );\n};\n\nOrderItem.propTypes = {\n  item: PropTypes.object.isRequired\n};\n\nexport default OrderItem;\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  DataList,\n  Grid,\n  GridItem,\n  Title,\n  Bullseye,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Flex,\n  EmptyStateSecondaryActions,\n  Button\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/components/EmptyTable';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/TableToolbar';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { fetchOrders } from '../../redux/actions/order-actions';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport OrderItem from './order-item';\nimport AsyncPagination from '../common/async-pagination';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nconst debouncedFilter = asyncFormValidator(\n  (filterType, value, meta = defaultSettings, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(fetchOrders(filterType, value, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false,\n  filterType: 'state'\n};\n\nconst ordersListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    case 'setFilterType':\n      return { ...state, filterType: action.payload, filterValue: '' };\n  }\n\n  return state;\n};\n\nconst OrdersList = () => {\n  const [\n    { isFetching, filterValue, isFiltering, filterType },\n    stateDispatch\n  ] = useReducer(ordersListState, initialState);\n  const { data, meta } = useSelector(({ orderReducer }) => orderReducer.orders);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.all([\n      dispatch(fetchOrders(filterType, filterValue, meta)),\n      dispatch(fetchPlatforms())\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const handlePagination = (_apiProps, pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    return dispatch(fetchOrders(filterType, filterValue, pagination))\n      .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n      .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(filterType, value, meta, dispatch, (isFiltering) =>\n      stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  return (\n    <Grid gutter=\"md\">\n      <GridItem>\n        <Section type=\"content\">\n          {!meta.noData && (\n            <PrimaryToolbar\n              {...(filterValue && {\n                activeFiltersConfig: {\n                  filters: [\n                    {\n                      name: filterValue\n                    }\n                  ],\n                  onDelete: () => {\n                    stateDispatch({ type: 'setFilterValue', payload: '' });\n                    handleFilterItems('');\n                  }\n                }\n              })}\n              filterConfig={{\n                onChange: (_e, value) => {\n                  stateDispatch({ type: 'setFilterType', payload: value });\n                  if (filterValue.length > 0) {\n                    handleFilterItems('');\n                  }\n                },\n                value: filterType,\n                items: [\n                  {\n                    filterValues: {\n                      value: filterValue,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'State',\n                    value: 'state'\n                  },\n                  {\n                    filterValues: {\n                      value: filterValue,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'Owner',\n                    value: 'owner'\n                  }\n                ]\n              }}\n              pagination={\n                <AsyncPagination\n                  isDisabled={isFetching || isFiltering}\n                  apiRequest={handlePagination}\n                  meta={meta}\n                  isCompact\n                />\n              }\n            />\n          )}\n          <DataList aria-label=\"order-list\">\n            {isFiltering || isFetching ? (\n              <ListLoader />\n            ) : data.length > 0 ? (\n              data.map((item, index) => (\n                <OrderItem key={item.id} index={index} item={item} />\n              ))\n            ) : (\n              <EmptyTable>\n                <Bullseye>\n                  <EmptyState>\n                    <Bullseye>\n                      <EmptyStateIcon icon={SearchIcon} />\n                    </Bullseye>\n                    <Title size=\"lg\">\n                      {meta.noData ? 'No orders' : 'No results found'}\n                    </Title>\n                    <EmptyStateBody>\n                      {meta.noData\n                        ? 'No orders have been created.'\n                        : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'}\n                    </EmptyStateBody>\n\n                    <EmptyStateSecondaryActions>\n                      {!meta.noData && (\n                        <Button\n                          variant=\"link\"\n                          onClick={() => {\n                            stateDispatch({\n                              type: 'setFilteringFlag',\n                              payload: true\n                            });\n                            handleFilterItems('');\n                          }}\n                        >\n                          Clear all filters\n                        </Button>\n                      )}\n                    </EmptyStateSecondaryActions>\n                  </EmptyState>\n                </Bullseye>\n              </EmptyTable>\n            )}\n          </DataList>\n          <TableToolbar>\n            <div className=\"bottom-pagination-container\">\n              <Flex\n                className=\"example-border\"\n                breakpointMods={[{ modifier: 'justify-content-flex-end' }]}\n              >\n                {meta.count > 0 && (\n                  <AsyncPagination\n                    className=\"pf-u-mt-0\"\n                    isDisabled={isFetching || isFiltering}\n                    apiRequest={handlePagination}\n                    meta={meta}\n                  />\n                )}\n              </Flex>\n            </div>\n          </TableToolbar>\n        </Section>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default OrdersList;\n","import React, { useEffect } from 'react';\nimport { Stack } from '@patternfly/react-core';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createOrdersToolbarSchema from '../../toolbar/schemas/orders-toolbar.schema';\nimport OrdersList from './orders-list';\n\nconst Orders = () => {\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'orders', secondaryNav: true });\n  }, []);\n\n  return (\n    <Stack>\n      <ToolbarRenderer schema={createOrdersToolbarSchema()} />\n      <OrdersList />\n    </Stack>\n  );\n};\n\nexport default Orders;\n"],"sourceRoot":""}