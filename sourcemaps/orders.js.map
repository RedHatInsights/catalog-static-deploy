{"version":3,"sources":["webpack:///./src/smart-components/common/catalog-link.js","webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/toolbar/toolbar-mapper.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/utilities/async-form-validator.js","webpack:///./src/utilities/use-enhanced-history.js","webpack:///./src/presentational-components/shared/conditional-link.js","webpack:///./src/presentational-components/styled-components/toolbars.js","webpack:///./src/toolbar/toolbar-renderer.js","webpack:///./src/smart-components/common/catalog-breadcrumbs.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/presentational-components/shared/app-tabs.js","webpack:///./src/routing/use-initial-uri-hash.js","webpack:///./src/helpers/order/order-helper.js","webpack:///./src/presentational-components/order/order-notification.js","webpack:///./src/redux/actions/order-actions.js","webpack:///./src/toolbar/schemas/orders-toolbar.schema.js","webpack:///./src/helpers/shared/orders.js","webpack:///./src/presentational-components/styled-components/table.js","webpack:///./src/smart-components/order/order-item.js","webpack:///./src/smart-components/order/orders-list.js","webpack:///./src/smart-components/order/orders.js"],"names":["StyledLink","styled","isDisabled","props","StyledNavLink","createSearchQuery","search","searchParams","preserveSearch","paramsQuery","Object","entries","map","key","value","join","length","CatalogLink","pathname","nav","preserveHash","useLocation","hash","Component","to","undefined","propTypes","PropTypes","string","isRequired","shape","bool","defaultProps","FilterInputGroup","div","FilterInput","TextInput","FilterIconsContainer","span","StyledCloseIcon","CloseIcon","StyledSearchIcon","SearchIcon","FilterToolbarItem","searchValue","onFilterChange","placeholder","isClearable","rest","ToolbarItem","id","type","onChange","aria-label","width","height","onClick","func","ToolbarButton","title","Button","toolbarMapper","TopToolbar","TopToolbarTitle","Toolbar","className","ToolbarGroup","Link","Level","LevelItem","AppTabs","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","TOOLBAR","TOOLBAR_ITEM","TOOLBAR_GROUP","FILTER_TOOLBAR_ITEM","LINK","BUTTON","LEVEL","LEVEL_ITEM","TABS","AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","isCompact","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","options","getNewPage","request","debouncePromise","direction","any","asyncFunction","debounceTime","onlyResolvesLast","awesomeDebouncePromise","removeSearchQuery","target","split","useEnhancedHistory","removeSearch","keepHash","history","useHistory","push","internalTarget","location","ConditionalLink","children","oneOfType","node","arrayOf","StyledToolbar","TopToolbarWrapper","TopToolbarTitleContainer","ToolbarContext","createContext","component","Consumer","componentMapper","C","element","render","fields","hidden","field","ToolbarRenderer","schema","Provider","array","object","CatalogBreadcrumbs","fragments","useSelector","breadcrumbsReducer","index","exact","isActive","paddingBottom","breadcrumbs","breadcrumbsSpacing","description","noData","clsx","TextVariants","h2","p","tabItems","activeTab","find","name","includes","activeKey","eventKey","onSelect","tabIndex","item","useInitialUriHash","decodeState","window","substring","orderApi","getOrderApi","portfolioItemApi","getOrderItemApi","getPortfolioItemApi","axiosInstance","getAxiosInstance","getServicePlans","portfolioItemId","listServicePlans","sendSubmitOrder","a","service_parameters","providerControlParameters","parameters","createOrder","order","orderItem","provider_control_parameters","addToOrder","submitOrder","getOrderItems","orderIds","get","CATALOG_API_BASE","orderId","getOrderPortfolioItems","itemIds","itemId","getOrders","filter","pagination","defaultSettings","then","orders","data","orderItems","portfolio_item_id","portfolioItems","order_id","OrderNotification","dispatch","clearNotifications","ORDERS_ROUTE","fetchServicePlans","ActionTypes","payload","OrderHelper","addNotification","variant","dismissable","cancelOrder","getState","orderDetail","orderReducer","state","approvalRequest","error","fetchOrders","filters","queryFilter","Array","isArray","storeState","stateKey","fetchOrderDetails","params","detailPromises","status","notFound","platform","SOURCES_API_BASE","portfolio","Promise","all","portfolioItem","progressMessages","fetchApprovalRequests","orderItemId","err","createOrdersToolbarSchema","getOrderIcon","getOrderPortfolioName","childrenPropType","Table","Tbody","TableCell","shrink","routeMapper","ORDER_APPROVAL_ROUTE","Completed","ORDER_LIFECYCLE_ROUTE","OrderItem","memo","portfolioReducer","orderPlatform","service_offering_source_ref","orderPortfolio","portfolio_id","orderName","aria-labelledby","src","sourceId","TextContent","Grid","gutter","GridItem","Text","h5","ORDER_ROUTE","small","DateFormat","date","created_at","owner","updated_at","prevProps","nextProps","debouncedFilter","asyncFormValidator","filteringCallback","initialState","isOpen","isFetching","isFiltering","filterType","ordersListState","action","OrdersList","viewState","useReducer","stateDispatch","useDispatch","useEffect","fetchPlatforms","handlePagination","_apiProps","handleFilterItems","Section","PrimaryToolbar","activeFiltersConfig","category","chips","onDelete","_e","clearAll","chip","newFilters","filterConfig","items","filterValues","label","EmptyTable","Bullseye","EmptyState","EmptyStateIcon","icon","Title","size","EmptyStateBody","EmptyStateSecondaryActions","TableToolbar","Flex","breakpointMods","modifier","Orders","insights","chrome","appNavClick","secondaryNav","Stack"],"mappings":"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","file":"js/orders.c362a753408ce3256ec2.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, NavLink, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(({ isDisabled, ...props }) => <Link {...props} />)`\n  pointer-events: ${({ isDisabled }) => (isDisabled ? 'none' : 'initial')};\n`;\n\nconst StyledNavLink = styled(({ isDisabled, ...props }) => (\n  <NavLink {...props} />\n))`\n  pointer-events: ${({ isDisabled }) => (isDisabled ? 'none' : 'initial')};\n`;\n\nconst createSearchQuery = (search, searchParams, preserveSearch) => {\n  const paramsQuery = Object.entries(searchParams)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&');\n  return preserveSearch\n    ? `${search}${paramsQuery.length > 0 ? `&${paramsQuery}` : ''}`\n    : paramsQuery.length > 0\n    ? `?${paramsQuery}`\n    : '';\n};\n\nconst CatalogLink = ({\n  pathname,\n  searchParams,\n  nav,\n  preserveSearch,\n  preserveHash,\n  ...props\n}) => {\n  const { search, hash } = useLocation();\n  const Component = nav ? StyledNavLink : StyledLink;\n  const to = {\n    pathname,\n    search: createSearchQuery(search, searchParams, preserveSearch),\n    hash: preserveHash ? hash : undefined\n  };\n  return <Component to={to} {...props} />;\n};\n\nCatalogLink.propTypes = {\n  pathname: PropTypes.string.isRequired,\n  searchParams: PropTypes.shape({\n    [PropTypes.string]: PropTypes.string\n  }),\n  nav: PropTypes.bool,\n  preserveSearch: PropTypes.bool,\n  preserveHash: PropTypes.bool\n};\n\nCatalogLink.defaultProps = {\n  nav: false,\n  preserveSearch: false,\n  searchParams: {},\n  preserveHash: false\n};\n\nexport default CatalogLink;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterInputGroup = styled.div`\n  position: relative;\n  width: 300px;\n  height: 36px;\n`;\n\nconst FilterInput = styled(TextInput)`\n  position: absolute;\n  width: 300px;\n  padding-right: 34px;\n  background: transparent;\n`;\n\nconst FilterIconsContainer = styled.span`\n  position: absolute;\n  right: 8px;\n  top: 8px;\n`;\n\nconst StyledCloseIcon = styled(CloseIcon)`\n  z-index: 1000;\n  fill: #72767b;\n  :hover {\n    fill: var(--pf-global--Color--100);\n    cursor: pointer;\n  }\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  z-index: 1000;\n  fill: #72767b;\n`;\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable,\n  ...rest\n}) => (\n  <ToolbarItem>\n    <FilterInputGroup>\n      <FilterInput\n        id=\"toolbar-filter\"\n        placeholder={placeholder}\n        value={searchValue}\n        type=\"text\"\n        onChange={onFilterChange}\n        aria-label={placeholder}\n        {...rest}\n      />\n      <FilterIconsContainer>\n        {(isClearable && searchValue && (\n          <StyledCloseIcon\n            width=\"16\"\n            height=\"16\"\n            onClick={() => onFilterChange('')}\n          />\n        )) || <StyledSearchIcon />}\n      </FilterIconsContainer>\n    </FilterInputGroup>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Level,\n  LevelItem,\n  ToolbarItem,\n  ToolbarGroup\n} from '@patternfly/react-core';\n\nimport FilterToolbarItem from '../presentational-components/shared/filter-toolbar-item';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../presentational-components/shared/top-toolbar';\nimport AppTabs from '../presentational-components/shared/app-tabs';\nimport CatalogLink from '../smart-components/common/catalog-link';\nimport { StyledToolbar } from '../presentational-components/styled-components/toolbars';\n\nconst ToolbarButton = ({ title, ...props }) => (\n  <Button {...props}>{title}</Button>\n);\n\nToolbarButton.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst AppToolbar = ({ ...props }) => (\n  <StyledToolbar className=\"pf-u-pr-lg\" {...props} />\n);\n\nconst toolbarMapper = {\n  TopToolbar,\n  TopToolbarTitle,\n  Toolbar: AppToolbar,\n  ToolbarGroup,\n  ToolbarItem,\n  FilterToolbarItem,\n  Link: CatalogLink,\n  Level,\n  LevelItem,\n  Button: ToolbarButton,\n  AppTabs\n};\n\nexport const toolbarComponentTypes = {\n  TOP_TOOLBAR: 'TopToolbar',\n  TOP_TOOLBAR_TITLE: 'TopToolbarTitle',\n  TOOLBAR: 'Toolbar',\n  TOOLBAR_ITEM: 'ToolbarItem',\n  TOOLBAR_GROUP: 'ToolbarGroup',\n  FILTER_TOOLBAR_ITEM: 'FilterToolbarItem',\n  LINK: 'Link',\n  BUTTON: 'Button',\n  LEVEL: 'Level',\n  LEVEL_ITEM: 'LevelItem',\n  TABS: 'AppTabs'\n};\n\nexport default toolbarMapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import { useHistory } from 'react-router-dom';\n\nconst removeSearchQuery = (target) => {\n  if (typeof target === 'string') {\n    return target.split('?')[0];\n  }\n\n  if (typeof target === 'object') {\n    return {\n      ...target,\n      search: undefined\n    };\n  }\n\n  return target;\n};\n\n/**\n * Wrapper around useHistory hook which adds aditional settings to standard history methods\n * @param {Boolean} removeSearch if true, using history navigation methods will remove search string from path\n * @param {Boolean} keepHash if true, using history navigation methods will not remove hash from URL\n */\nconst useEnhancedHistory = ({ removeSearch, keepHash } = {}) => {\n  const history = useHistory();\n  return {\n    ...history,\n    push: (target) => {\n      let internalTarget = target;\n      if (keepHash && history.location.hash.length > 0) {\n        internalTarget =\n          typeof internalTarget === 'object'\n            ? { ...internalTarget, hash: history.location.hash }\n            : `${internalTarget}${history.location.hash}`;\n      }\n\n      if (removeSearch) {\n        return history.push(removeSearchQuery(internalTarget));\n      }\n\n      return history.push(internalTarget);\n    }\n  };\n};\n\nexport default useEnhancedHistory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ConditionalLink = ({ children, pathname, ...props }) =>\n  pathname ? (\n    <CatalogLink pathname={pathname} {...props}>\n      {children}\n    </CatalogLink>\n  ) : (\n    children\n  );\n\nConditionalLink.propTypes = {\n  pathname: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]).isRequired\n};\n\nexport default ConditionalLink;\n","import styled from 'styled-components';\nimport { Toolbar, Level } from '@patternfly/react-core';\n\nexport const StyledToolbar = styled(Toolbar)`\n  background-color: #ffffff;\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  position: relative;\n  top: 1px;\n`;\n\nexport const TopToolbarWrapper = styled.div`\n  background-color: #ffffff;\n  .pf-c-breadcrumb__item {\n    .active {\n      color: var(--pf-c-breadcrumb__item--Color);\n      text-decoration: none;\n      pointer-events: none;\n    }\n  }\n  h1,\n  h2 {\n    margin-bottom: 0 !important;\n    @supports not (overflow-wrap: anywhere) {\n      word-break: break-all;\n    }\n    @supports (overflow-wrap: anywhere) {\n      overflow-wrap: anywhere;\n    }\n  }\n  .top-toolbar-title {\n    min-width: 200px;\n  }\n  .top-toolbar-title-description {\n    word-break: break-word;\n  }\n`;\n\nexport const TopToolbarTitleContainer = styled(Level)`\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n  }\n`;\n","import React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport toolbarMapper from './toolbar-mapper';\n\nconst ToolbarContext = createContext();\n\nconst Component = ({ component, ...props }) => (\n  <ToolbarContext.Consumer>\n    {({ componentMapper }) => {\n      const C =\n        typeof component === 'string' ? componentMapper[component] : component;\n      return <C {...props} />;\n    }}\n  </ToolbarContext.Consumer>\n);\n\nComponent.propTypes = {\n  component: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.element\n  ]).isRequired\n};\n\n/**\n * Render loop that renders all toolbar components based on its type\n * @param {Array} fields list of React components to be rendered\n */\nconst render = (fields) =>\n  fields.hidden\n    ? null\n    : fields.map(({ hidden, fields, key, ...field }) =>\n        hidden ? null : fields ? (\n          <Component key={key} {...field}>\n            {render(fields)}\n          </Component>\n        ) : (\n          <Component key={key} {...field} />\n        )\n      );\n\nconst ToolbarRenderer = ({ schema, componentMapper }) => (\n  <ToolbarContext.Provider value={{ render, componentMapper }}>\n    {render(schema.fields)}\n  </ToolbarContext.Provider>\n);\n\nToolbarRenderer.propTypes = {\n  schema: PropTypes.shape({\n    fields: PropTypes.array.isRequired\n  }).isRequired,\n  componentMapper: PropTypes.object\n};\n\nToolbarRenderer.defaultProps = {\n  componentMapper: toolbarMapper\n};\n\nexport default ToolbarRenderer;\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport ConditionalLink from '../../presentational-components/shared/conditional-link';\n\nconst CatalogBreadcrumbs = () => {\n  const fragments = useSelector(\n    ({ breadcrumbsReducer: { fragments } }) => fragments\n  );\n  if (fragments.length <= 1) {\n    return null;\n  }\n\n  return (\n    <Breadcrumb>\n      {fragments.map(({ title, pathname, searchParams }, index) => (\n        <ConditionalLink\n          pathname={!(fragments.length === index + 1) ? pathname : undefined}\n          searchParams={searchParams}\n          nav\n          exact\n          key={pathname}\n          className=\"pf-c-breadcrumb__item\"\n        >\n          <BreadcrumbItem isActive={fragments.length === index + 1}>\n            {title}\n          </BreadcrumbItem>\n        </ConditionalLink>\n      ))}\n    </Breadcrumb>\n  );\n};\n\nexport default CatalogBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport clsx from 'clsx';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport CatalogBreadcrumbs from '../../smart-components/common/catalog-breadcrumbs';\nimport {\n  TopToolbarWrapper,\n  TopToolbarTitleContainer\n} from '../styled-components/toolbars';\n\nconst TopToolbar = ({\n  children,\n  paddingBottom,\n  breadcrumbs,\n  breadcrumbsSpacing,\n  ...rest\n}) => (\n  <TopToolbarWrapper\n    className={`pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${\n      paddingBottom ? 'pf-u-pb-lg' : ''\n    }`}\n    {...rest}\n  >\n    {breadcrumbs && (\n      <div className=\"pf-u-mb-md\">\n        {' '}\n        <CatalogBreadcrumbs />\n      </div>\n    )}\n    {children}\n  </TopToolbarWrapper>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  paddingBottom: PropTypes.bool,\n  breadcrumbs: PropTypes.bool,\n  breadcrumbsSpacing: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: true,\n  breadcrumbs: true\n};\n\nexport default TopToolbar;\n\nexport const TopToolbarTitle = ({\n  title,\n  description,\n  children,\n  noData,\n  ...rest\n}) => (\n  <Fragment>\n    <TopToolbarTitleContainer\n      className={clsx({ 'pf-u-mb-lg': !noData, 'flex-no-wrap': true })}\n      {...rest}\n    >\n      <LevelItem>\n        <TextContent className=\"top-toolbar-title\">\n          <Text component={TextVariants.h2} className=\"pf-u-m-0 pf-u-mr-md\">\n            {title}\n          </Text>\n          {description && (\n            <Text\n              className=\"top-toolbar-title-description\"\n              component={TextVariants.p}\n            >\n              {description}\n            </Text>\n          )}\n        </TextContent>\n      </LevelItem>\n      <LevelItem className=\"flex-item-no-wrap\">{children}</LevelItem>\n    </TopToolbarTitleContainer>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  noData: PropTypes.bool\n};\n\nTopToolbarTitle.defaultProps = {\n  title: <ToolbarTitlePlaceholder />\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation } from 'react-router-dom';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nconst AppTabs = ({ tabItems }) => {\n  const { push } = useEnhancedHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) =>\n    push({ pathname: tabItems[tabIndex].name, search });\n\n  return (\n    <Tabs\n      activeKey={activeTab ? activeTab.eventKey : 0}\n      onSelect={handleTabClick}\n    >\n      {tabItems.map((item) => (\n        <Tab\n          title={item.title}\n          key={item.eventKey}\n          eventKey={item.eventKey}\n          name={item.name}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default AppTabs;\n","import { decodeState } from './uri-state-manager';\n\nconst useInitialUriHash = () => decodeState(window.location.hash.substring(1));\n\nexport default useInitialUriHash;\n","/* eslint camelcase: 0 */\nimport {\n  getAxiosInstance,\n  getPortfolioItemApi,\n  getOrderApi,\n  getOrderItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nconst orderApi = getOrderApi();\nconst orderItemApi = getOrderItemApi();\nconst portfolioItemApi = getPortfolioItemApi();\nconst axiosInstance = getAxiosInstance();\n\nexport function getServicePlans(portfolioItemId) {\n  return portfolioItemApi.listServicePlans(portfolioItemId);\n}\n\nexport async function sendSubmitOrder({\n  service_parameters: { providerControlParameters, ...service_parameters },\n  ...parameters\n}) {\n  let order = await orderApi.createOrder();\n  let orderItem = {};\n  orderItem.count = 1;\n  orderItem = {\n    ...orderItem,\n    ...parameters,\n    service_parameters,\n    provider_control_parameters: providerControlParameters || {}\n  };\n  await orderApi.addToOrder(order.id, orderItem);\n  return orderApi.submitOrder(order.id);\n}\n\nexport function cancelOrder(orderId) {\n  return orderApi.cancelOrder(orderId);\n}\n\nconst getOrderItems = (orderIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items?${orderIds\n      .map((orderId) => `filter[order_id][]=${orderId}`)\n      .join('&')}`\n  );\n\nconst getOrderPortfolioItems = (itemIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items?${itemIds\n      .map((itemId) => `filter[id][]=${itemId}`)\n      .join('&')}`\n  );\n\nexport const getOrders = (filter = '', pagination = defaultSettings) =>\n  axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/orders?${filter}&limit=${pagination.limit}&offset=${pagination.offset}`\n    ) // eslint-disable-line max-len\n    .then((orders) =>\n      getOrderItems(orders.data.map(({ id }) => id)).then((orderItems) =>\n        getOrderPortfolioItems(\n          orderItems.data.map(({ portfolio_item_id }) => portfolio_item_id)\n        ).then((portfolioItems) => {\n          return {\n            portfolioItems,\n            ...orders,\n            data: orders.data.map((order) => ({\n              ...order,\n              orderItems: orderItems.data.filter(\n                ({ order_id }) => order_id === order.id\n              )\n            }))\n          };\n        })\n      )\n    );\n\nexport function getOrderApprovalRequests(orderItemId) {\n  return orderItemApi.listApprovalRequests(orderItemId);\n}\n\nexport const getOrderDetail = (params) => {\n  let detailPromises = [\n    axiosInstance.get(`${CATALOG_API_BASE}/orders/${params.order}`),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/order_items/${params['order-item']}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Order item',\n            notFound: true\n          };\n        }\n\n        throw error;\n      }),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/portfolio_items/${params['portfolio-item']}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Product',\n            notFound: true\n          };\n        }\n\n        throw error;\n      })\n  ];\n\n  detailPromises.push(\n    params.platform && params.platform !== 'undefined'\n      ? axiosInstance\n          .get(`${SOURCES_API_BASE}/sources/${params.platform}`)\n          .catch((error) => {\n            if (error.status === 404 || error.status === 400) {\n              return {\n                object: 'Platform',\n                notFound: true\n              };\n            }\n\n            throw error;\n          })\n      : {\n          object: 'Platform',\n          notFound: true\n        }\n  );\n\n  detailPromises.push(\n    axiosInstance\n      .get(\n        `${CATALOG_API_BASE}/order_items/${params['order-item']}/progress_messages`\n      )\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {};\n        }\n\n        throw error;\n      })\n  );\n\n  detailPromises.push(\n    params.portfolio && params.portfolio !== 'undefined'\n      ? axiosInstance\n          .get(`${CATALOG_API_BASE}/portfolios/${params.portfolio}`)\n          .catch((error) => {\n            if (error.status === 404 || error.status === 400) {\n              return {\n                object: 'Portfolio',\n                notFound: true\n              };\n            }\n\n            throw error;\n          })\n      : { object: 'Portfolio', notFound: true }\n  );\n\n  return Promise.all(detailPromises);\n};\n\nexport const getApprovalRequests = (orderItemId) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items/${orderItemId}/approval_requests`\n  );\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport { ORDERS_ROUTE } from '../../constants/routes';\n\nconst OrderNotification = ({ id, dispatch }) => (\n  <Fragment>\n    You can track the progress of Order # {id} in your{' '}\n    <Link onClick={() => dispatch(clearNotifications())} to={ORDERS_ROUTE}>\n      Orders\n    </Link>{' '}\n    page.\n  </Fragment>\n);\n\nOrderNotification.propTypes = {\n  id: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default OrderNotification;\n","import React from 'react';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\n\nimport * as ActionTypes from '../action-types';\nimport * as OrderHelper from '../../helpers/order/order-helper';\nimport OrderNotification from '../../presentational-components/order/order-notification';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const fetchServicePlans = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_SERVICE_PLANS,\n  payload: OrderHelper.getServicePlans(portfolioItemId)\n});\n\nexport const updateServiceData = (data) => ({\n  type: ActionTypes.UPDATE_SERVICE_DATA,\n  payload: { serviceData: data }\n});\n\nexport const setSelectedPlan = (data) => ({\n  type: ActionTypes.SET_SELECTED_PLAN,\n  payload: data\n});\n\nexport const sendSubmitOrder = (apiProps) => (dispatch) =>\n  dispatch({\n    type: ActionTypes.SUBMIT_SERVICE_ORDER,\n    payload: OrderHelper.sendSubmitOrder(apiProps).then(({ id }) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been accepted successfully',\n          description: <OrderNotification id={id} dispatch={dispatch} />,\n          dismissable: true\n        })\n      )\n    )\n  });\n\nexport const cancelOrder = (orderId) => (dispatch, getState) => {\n  dispatch({ type: `${ActionTypes.CANCEL_ORDER}_PENDING` });\n  const {\n    orderReducer: { orderDetail }\n  } = getState();\n  return OrderHelper.cancelOrder(orderId)\n    .then(() => {\n      orderDetail.order.state = 'Canceled';\n      if (\n        orderDetail.approvalRequest &&\n        orderDetail.approvalRequest.length > 0\n      ) {\n        orderDetail.approvalRequest[0].state = 'canceled';\n      }\n\n      dispatch({\n        type: ActionTypes.SET_ORDER_DETAIL,\n        payload: { ...orderDetail }\n      });\n      return orderDetail;\n    })\n    .then((orderDetail) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been canceled successfully',\n          description: `Order ${`Order #${orderDetail.order.id}`} was canceled.`,\n          dismissable: true\n        })\n      )\n    )\n    .then(() => dispatch({ type: `${ActionTypes.CANCEL_ORDER}_FULFILLED` }))\n    .catch((error) => {\n      dispatch({\n        type: `${ActionTypes.CANCEL_ORDER}_REJECTED`,\n        payload: error\n      });\n    });\n};\n\nexport const fetchOrders = (filters, pagination = defaultSettings) => (\n  dispatch\n) => {\n  const queryFilter = Object.entries(filters)\n    .filter(([, value]) => value && value.length > 0)\n    .map(([key, value]) =>\n      Array.isArray(value)\n        ? value.map((value) => `filter[${key}][]=${value}`).join('&')\n        : `filter[${key}][contains_i]=${value}`\n    )\n    .join('&');\n  dispatch({ type: `${ActionTypes.FETCH_ORDERS}_PENDING` });\n  return OrderHelper.getOrders(queryFilter, pagination)\n    .then(({ portfolioItems, ...orders }) => {\n      dispatch({\n        type: ActionTypes.SET_PORTFOLIO_ITEMS,\n        payload: portfolioItems\n      });\n      return dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_FULFILLED`,\n        meta: {\n          ...pagination,\n          filter: queryFilter,\n          filters,\n          storeState: true,\n          stateKey: 'orders'\n        },\n        payload: orders\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchOrderDetails = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SET_ORDER_DETAIL}_PENDING` });\n  return OrderHelper.getOrderDetail(params)\n    .then(\n      ([\n        order,\n        orderItem,\n        portfolioItem,\n        platform,\n        progressMessages,\n        portfolio,\n        approvalRequest\n      ]) =>\n        dispatch({\n          type: `${ActionTypes.SET_ORDER_DETAIL}_FULFILLED`,\n          payload: {\n            order,\n            orderItem,\n            portfolioItem,\n            platform,\n            progressMessages,\n            portfolio,\n            approvalRequest\n          }\n        })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.SET_ORDER_DETAIL}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchApprovalRequests = (orderItemId) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_PENDING` });\n  return OrderHelper.getApprovalRequests(orderItemId)\n    .then((data) => {\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_FULFILLED`,\n        payload: data\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n","import { toolbarComponentTypes } from '../toolbar-mapper';\n\nconst createOrdersToolbarSchema = () => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      className: 'orders bg-fill pf-u-p-lg',\n      key: 'orders-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'orders-toolbar-title',\n          title: 'Orders',\n          className: ''\n        }\n      ]\n    }\n  ]\n});\n\nexport default createOrdersToolbarSchema;\n","import { CATALOG_API_BASE } from '../../utilities/constants';\n\nexport const getOrderIcon = ({ orderItems }) =>\n  orderItems[0] &&\n  `${CATALOG_API_BASE}/portfolio_items/${orderItems[0].portfolio_item_id}/icon`;\n\nexport const getOrderPortfolioName = ({ orderItems, id }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem ? portfolioItem.name : `Order ${id}`;\n};\n\nexport const getOrderPlatformId = ({ orderItems }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem\n    ? {\n        orderPlatform: portfolioItem.service_offering_source_ref,\n        orderPortfolio: portfolioItem.portfolio_id\n      }\n    : {};\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from 'styled-components';\n\nconst childrenPropType = PropTypes.oneOfType([\n  PropTypes.node,\n  PropTypes.arrayOf(PropTypes.node)\n]);\n\nexport const Table = ({ children, className, ...props }) => (\n  <table className={clsx('pf-c-table', 'pf-m-grid-md', className)} {...props}>\n    {children}\n  </table>\n);\n\nTable.propTypes = {\n  children: childrenPropType.isRequired,\n  className: PropTypes.string\n};\n\nexport const Tbody = ({ children, ...props }) => (\n  <tbody {...props}>{children}</tbody>\n);\n\nTbody.propTypes = {\n  children: childrenPropType.isRequired\n};\n\nexport const TableCell = styled(({ shrink, children, ...props }) => (\n  <td {...props}>{children}</td>\n))`\n  @media screen and (min-width: 768px) {\n    vertical-align: top !important;\n    width: ${({ shrink }) => (shrink ? '200px' : 'initial')};\n    img {\n      object-fit: contain;\n    }\n  }\n`;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport {\n  getOrderIcon,\n  getOrderPortfolioName,\n  getOrderPlatformId\n} from '../../helpers/shared/orders';\nimport CatalogLink from '../common/catalog-link';\nimport {\n  ORDER_ROUTE,\n  ORDER_APPROVAL_ROUTE,\n  ORDER_LIFECYCLE_ROUTE\n} from '../../constants/routes';\nimport { TableCell } from '../../presentational-components/styled-components/table';\n\nconst routeMapper = {\n  'Approval Pending': ORDER_APPROVAL_ROUTE,\n  Completed: ORDER_LIFECYCLE_ROUTE\n};\n\nconst OrderItem = memo(\n  ({ item }) => {\n    const { orderPlatform, orderPortfolio, orderName } = useSelector(\n      ({\n        portfolioReducer: {\n          portfolioItems: { data }\n        }\n      }) => {\n        const { orderPlatform, orderPortfolio } = getOrderPlatformId(\n          item,\n          data\n        );\n        return {\n          orderPlatform,\n          orderPortfolio,\n          orderName: getOrderPortfolioName(item, data)\n        };\n      }\n    );\n    const orderItem = (item.orderItems[0] && item.orderItems[0]) || {};\n    const searchParams = {\n      order: item.id,\n      'order-item': orderItem.id,\n      'portfolio-item': orderItem.portfolio_item_id,\n      platform: orderPlatform,\n      portfolio: orderPortfolio\n    };\n    return (\n      <tr\n        aria-labelledby={`${item.id}-expand`}\n        className=\"data-list-expand-fix\"\n      >\n        <TableCell shrink className=\"pf-u-pl-xl-on-md\">\n          <CardIcon\n            height={60}\n            src={getOrderIcon(item)}\n            sourceId={orderPlatform}\n          />\n        </TableCell>\n        <TableCell>\n          <TextContent>\n            <Grid gutter=\"sm\" className=\"pf-u-gg-md\">\n              <GridItem>\n                <Level className=\"flex-no-wrap\">\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.h5}>\n                      <CatalogLink\n                        pathname={ORDER_ROUTE}\n                        searchParams={searchParams}\n                      >\n                        {orderName} - Order # {item.id}\n                      </CatalogLink>\n                    </Text>\n                  </LevelItem>\n                  <LevelItem className=\"flex-item-no-wrap\">\n                    <CatalogLink\n                      pathname={routeMapper[item.state] || ORDER_ROUTE}\n                      searchParams={searchParams}\n                    >\n                      {item.state === 'Failed' && (\n                        <ExclamationCircleIcon className=\"pf-u-mr-sm icon-danger-fill\" />\n                      )}\n                      {item.state}\n                    </CatalogLink>\n                  </LevelItem>\n                </Level>\n              </GridItem>\n              <GridItem>\n                <Level>\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n                      Ordered&nbsp;\n                      <DateFormat date={item.created_at} variant=\"relative\" />\n                    </Text>\n                  </LevelItem>\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n                      Ordered by {item.owner}\n                    </Text>\n                  </LevelItem>\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n                      Last updated&nbsp;\n                      <DateFormat\n                        date={\n                          item.orderItems[0] && item.orderItems[0].updated_at\n                        }\n                        variant=\"relative\"\n                      />\n                    </Text>\n                  </LevelItem>\n                </Level>\n              </GridItem>\n            </Grid>\n          </TextContent>\n        </TableCell>\n      </tr>\n    );\n  },\n  (prevProps, nextProps) => prevProps.id === nextProps.id\n);\n\nOrderItem.propTypes = {\n  item: PropTypes.object.isRequired\n};\n\nexport default OrderItem;\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  Title,\n  Bullseye,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Flex,\n  EmptyStateSecondaryActions,\n  Button\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/PrimaryToolbar';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/components/cjs/EmptyTable';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/TableToolbar';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { fetchOrders } from '../../redux/actions/order-actions';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport OrderItem from './order-item';\nimport AsyncPagination from '../common/async-pagination';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport {\n  Table,\n  Tbody\n} from '../../presentational-components/styled-components/table';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\n\nconst debouncedFilter = asyncFormValidator(\n  (filters, meta = defaultSettings, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(fetchOrders(filters, meta)).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst initialState = {\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false,\n  filterType: 'state',\n  filters: {\n    state: [],\n    owner: ''\n  }\n};\n\nconst changeFilters = (value, type, filters) => ({\n  ...filters,\n  [type]: value\n});\n\nconst ordersListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return {\n        ...state,\n        filters: changeFilters(action.payload, state.filterType, state.filters)\n      };\n    case 'replaceFilterChip':\n      return { ...state, filters: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    case 'setFilterType':\n      return { ...state, filterType: action.payload };\n  }\n\n  return state;\n};\n\nconst OrdersList = () => {\n  const viewState = useInitialUriHash();\n  const [\n    { isFetching, isFiltering, filterType, filters },\n    stateDispatch\n  ] = useReducer(ordersListState, {\n    ...initialState,\n    filters: viewState?.orders?.filters || { state: [], owner: '' }\n  });\n  const { data, meta } = useSelector(({ orderReducer }) => orderReducer.orders);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.all([\n      dispatch(fetchOrders(filters, viewState?.orders)),\n      dispatch(fetchPlatforms())\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const handlePagination = (_apiProps, pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    return dispatch(fetchOrders(filters, pagination))\n      .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n      .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      { ...filters, [filterType]: value },\n      { ...meta, offset: 0 },\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  return (\n    <Grid gutter=\"md\">\n      <GridItem>\n        <Section type=\"content\">\n          {!meta.noData && (\n            <PrimaryToolbar\n              activeFiltersConfig={{\n                filters: Object.entries(filters)\n                  .filter(([, value]) => value && value.length > 0)\n                  .map(([key, value]) => ({\n                    category: key,\n                    type: key,\n                    chips: Array.isArray(value)\n                      ? value.map((name) => ({ name }))\n                      : [{ name: value }]\n                  })),\n                onDelete: (_e, [chip], clearAll) => {\n                  if (clearAll) {\n                    stateDispatch({\n                      type: 'replaceFilterChip',\n                      payload: initialState.filters\n                    });\n                    return debouncedFilter(\n                      initialState.filters,\n                      meta,\n                      dispatch,\n                      (isFiltering) =>\n                        stateDispatch({\n                          type: 'setFilteringFlag',\n                          payload: isFiltering\n                        })\n                    );\n                  }\n\n                  const newFilters = { ...filters };\n                  if (chip.type === 'state') {\n                    newFilters[chip.type] = newFilters[chip.type].filter(\n                      (value) => value !== chip.chips[0].name\n                    );\n                  } else {\n                    newFilters[chip.type] = '';\n                  }\n\n                  stateDispatch({\n                    type: 'replaceFilterChip',\n                    payload: newFilters\n                  });\n                  debouncedFilter(newFilters, meta, dispatch, (isFiltering) =>\n                    stateDispatch({\n                      type: 'setFilteringFlag',\n                      payload: isFiltering\n                    })\n                  );\n                }\n              }}\n              filterConfig={{\n                onChange: (_e, value) =>\n                  stateDispatch({ type: 'setFilterType', payload: value }),\n                value: filterType,\n                items: [\n                  {\n                    filterValues: {\n                      items: [\n                        {\n                          value: 'Approval Pending',\n                          label: 'Approval Pending'\n                        },\n                        {\n                          value: 'Canceled',\n                          label: 'Canceled'\n                        },\n                        {\n                          value: 'Completed',\n                          label: 'Completed'\n                        },\n                        {\n                          value: 'Created',\n                          label: 'Created'\n                        },\n                        {\n                          value: 'Failed',\n                          label: 'Failed'\n                        },\n                        {\n                          value: 'Ordered',\n                          label: 'Ordered'\n                        }\n                      ],\n                      value: filters.state,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'State',\n                    value: 'state',\n                    type: 'checkbox'\n                  },\n                  {\n                    filterValues: {\n                      value: filters.owner,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'Owner',\n                    value: 'owner'\n                  }\n                ]\n              }}\n              pagination={\n                <AsyncPagination\n                  isDisabled={isFetching || isFiltering}\n                  apiRequest={handlePagination}\n                  meta={meta}\n                  isCompact\n                />\n              }\n            />\n          )}\n          <Table aria-label=\"order-list\">\n            <Tbody>\n              {isFetching || isFiltering ? (\n                <tr>\n                  <td className=\"pf-u-p-0\">\n                    <ListLoader />\n                  </td>\n                </tr>\n              ) : data.length > 0 ? (\n                data.map((item, index) => (\n                  <OrderItem key={item.id} index={index} item={item} />\n                ))\n              ) : (\n                <tr>\n                  <td>\n                    <EmptyTable>\n                      <Bullseye>\n                        <EmptyState>\n                          <Bullseye>\n                            <EmptyStateIcon icon={SearchIcon} />\n                          </Bullseye>\n                          <Title size=\"lg\">\n                            {meta.noData ? 'No orders' : 'No results found'}\n                          </Title>\n                          <EmptyStateBody>\n                            {meta.noData\n                              ? 'No orders have been created.'\n                              : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'}\n                          </EmptyStateBody>\n\n                          <EmptyStateSecondaryActions>\n                            {!meta.noData && (\n                              <Button\n                                variant=\"link\"\n                                onClick={() => {\n                                  stateDispatch({\n                                    type: 'setFilteringFlag',\n                                    payload: true\n                                  });\n                                  handleFilterItems('');\n                                }}\n                              >\n                                Clear all filters\n                              </Button>\n                            )}\n                          </EmptyStateSecondaryActions>\n                        </EmptyState>\n                      </Bullseye>\n                    </EmptyTable>\n                  </td>\n                </tr>\n              )}\n            </Tbody>\n          </Table>\n          <TableToolbar>\n            <div className=\"bottom-pagination-container\">\n              <Flex\n                className=\"example-border\"\n                breakpointMods={[{ modifier: 'justify-content-flex-end' }]}\n              >\n                {meta.count > 0 && (\n                  <AsyncPagination\n                    className=\"pf-u-mt-0\"\n                    isDisabled={isFetching || isFiltering}\n                    apiRequest={handlePagination}\n                    meta={meta}\n                  />\n                )}\n              </Flex>\n            </div>\n          </TableToolbar>\n        </Section>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default OrdersList;\n","import React, { useEffect } from 'react';\nimport { Stack } from '@patternfly/react-core';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createOrdersToolbarSchema from '../../toolbar/schemas/orders-toolbar.schema';\nimport OrdersList from './orders-list';\n\nconst Orders = () => {\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'orders', secondaryNav: true });\n  }, []);\n\n  return (\n    <Stack>\n      <ToolbarRenderer schema={createOrdersToolbarSchema()} />\n      <OrdersList />\n    </Stack>\n  );\n};\n\nexport default Orders;\n"],"sourceRoot":""}