{"version":3,"sources":["webpack:///./src/routing/use-initial-uri-hash.js","webpack:///./src/helpers/order/order-helper.js","webpack:///./src/presentational-components/order/order-notification.js","webpack:///./src/redux/actions/order-actions.js","webpack:///./src/toolbar/schemas/orders-toolbar.schema.js","webpack:///./src/helpers/shared/orders.js","webpack:///./src/presentational-components/styled-components/table.js","webpack:///./src/smart-components/order/order-item.js","webpack:///./src/smart-components/order/orders-list.js","webpack:///./src/smart-components/order/orders.js"],"names":["useInitialUriHash","decodeState","window","location","hash","substring","orderApi","getOrderApi","portfolioItemApi","getOrderItemApi","getPortfolioItemApi","axiosInstance","getAxiosInstance","getServicePlans","portfolioItemId","listServicePlans","sendSubmitOrder","a","service_parameters","providerControlParameters","parameters","createOrder","order","orderItem","count","provider_control_parameters","addToOrder","id","submitOrder","getOrderItems","orderIds","get","CATALOG_API_BASE","map","orderId","join","getOrderPortfolioItems","itemIds","itemId","getOrders","filter","pagination","defaultSettings","limit","offset","then","orders","data","orderItems","portfolio_item_id","portfolioItems","order_id","OrderNotification","dispatch","onClick","clearNotifications","to","ORDERS_ROUTE","propTypes","PropTypes","string","isRequired","func","fetchServicePlans","type","ActionTypes","payload","OrderHelper","apiProps","addNotification","variant","title","description","dismissable","cancelOrder","getState","orderDetail","orderReducer","state","approvalRequest","length","error","fetchOrders","filters","queryFilter","Object","entries","value","key","Array","isArray","meta","storeState","stateKey","fetchOrderDetails","params","detailPromises","status","object","notFound","push","platform","SOURCES_API_BASE","portfolio","Promise","all","portfolioItem","progressMessages","fetchApprovalRequests","orderItemId","err","createOrdersToolbarSchema","fields","component","toolbarComponentTypes","TOP_TOOLBAR","className","TOP_TOOLBAR_TITLE","getOrderIcon","getOrderPortfolioName","find","name","childrenPropType","oneOfType","node","arrayOf","Table","children","props","clsx","Tbody","TableCell","styled","shrink","routeMapper","ORDER_APPROVAL_ROUTE","Completed","ORDER_LIFECYCLE_ROUTE","OrderItem","memo","item","useSelector","portfolioReducer","orderPlatform","service_offering_source_ref","orderPortfolio","portfolio_id","orderName","searchParams","aria-labelledby","height","src","sourceId","TextContent","Grid","gutter","GridItem","Level","LevelItem","Text","TextVariants","h5","pathname","ORDER_ROUTE","small","DateFormat","date","created_at","owner","updated_at","prevProps","nextProps","debouncedFilter","asyncFormValidator","filteringCallback","initialState","isOpen","isFetching","isFiltering","filterType","ordersListState","action","OrdersList","viewState","useReducer","stateDispatch","useDispatch","useEffect","fetchPlatforms","handlePagination","_apiProps","handleFilterItems","Section","noData","PrimaryToolbar","activeFiltersConfig","category","chips","onDelete","_e","clearAll","chip","newFilters","filterConfig","onChange","items","filterValues","label","isDisabled","apiRequest","isCompact","aria-label","index","EmptyTable","Bullseye","EmptyState","EmptyStateIcon","icon","SearchIcon","Title","size","EmptyStateBody","EmptyStateSecondaryActions","Button","TableToolbar","Flex","breakpointMods","modifier","Orders","insights","chrome","appNavClick","secondaryNav","Stack","schema"],"mappings":"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","file":"js/orders.229c69d726f5cd6cf9df.js","sourcesContent":["import { decodeState } from './uri-state-manager';\n\nconst useInitialUriHash = () => decodeState(window.location.hash.substring(1));\n\nexport default useInitialUriHash;\n","/* eslint camelcase: 0 */\nimport {\n  getAxiosInstance,\n  getPortfolioItemApi,\n  getOrderApi,\n  getOrderItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nconst orderApi = getOrderApi();\nconst orderItemApi = getOrderItemApi();\nconst portfolioItemApi = getPortfolioItemApi();\nconst axiosInstance = getAxiosInstance();\n\nexport function getServicePlans(portfolioItemId) {\n  return portfolioItemApi.listServicePlans(portfolioItemId);\n}\n\nexport async function sendSubmitOrder({\n  service_parameters: { providerControlParameters, ...service_parameters },\n  ...parameters\n}) {\n  let order = await orderApi.createOrder();\n  let orderItem = {};\n  orderItem.count = 1;\n  orderItem = {\n    ...orderItem,\n    ...parameters,\n    service_parameters,\n    provider_control_parameters: providerControlParameters || {}\n  };\n  await orderApi.addToOrder(order.id, orderItem);\n  return orderApi.submitOrder(order.id);\n}\n\nexport function cancelOrder(orderId) {\n  return orderApi.cancelOrder(orderId);\n}\n\nconst getOrderItems = (orderIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items?${orderIds\n      .map((orderId) => `filter[order_id][]=${orderId}`)\n      .join('&')}`\n  );\n\nconst getOrderPortfolioItems = (itemIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items?${itemIds\n      .map((itemId) => `filter[id][]=${itemId}`)\n      .join('&')}`\n  );\n\nexport const getOrders = (filter = '', pagination = defaultSettings) =>\n  axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/orders?${filter}&limit=${pagination.limit}&offset=${pagination.offset}`\n    ) // eslint-disable-line max-len\n    .then((orders) =>\n      getOrderItems(orders.data.map(({ id }) => id)).then((orderItems) =>\n        getOrderPortfolioItems(\n          orderItems.data.map(({ portfolio_item_id }) => portfolio_item_id)\n        ).then((portfolioItems) => {\n          return {\n            portfolioItems,\n            ...orders,\n            data: orders.data.map((order) => ({\n              ...order,\n              orderItems: orderItems.data.filter(\n                ({ order_id }) => order_id === order.id\n              )\n            }))\n          };\n        })\n      )\n    );\n\nexport function getOrderApprovalRequests(orderItemId) {\n  return orderItemApi.listApprovalRequests(orderItemId);\n}\n\nexport const getOrderDetail = (params) => {\n  let detailPromises = [\n    axiosInstance.get(`${CATALOG_API_BASE}/orders/${params.order}`),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/order_items/${params['order-item']}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Order item',\n            notFound: true\n          };\n        }\n\n        throw error;\n      }),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/portfolio_items/${params['portfolio-item']}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Product',\n            notFound: true\n          };\n        }\n\n        throw error;\n      })\n  ];\n\n  detailPromises.push(\n    params.platform && params.platform !== 'undefined'\n      ? axiosInstance\n          .get(`${SOURCES_API_BASE}/sources/${params.platform}`)\n          .catch((error) => {\n            if (error.status === 404 || error.status === 400) {\n              return {\n                object: 'Platform',\n                notFound: true\n              };\n            }\n\n            throw error;\n          })\n      : {\n          object: 'Platform',\n          notFound: true\n        }\n  );\n\n  detailPromises.push(\n    axiosInstance\n      .get(\n        `${CATALOG_API_BASE}/order_items/${params['order-item']}/progress_messages`\n      )\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {};\n        }\n\n        throw error;\n      })\n  );\n\n  detailPromises.push(\n    params.portfolio && params.portfolio !== 'undefined'\n      ? axiosInstance\n          .get(`${CATALOG_API_BASE}/portfolios/${params.portfolio}`)\n          .catch((error) => {\n            if (error.status === 404 || error.status === 400) {\n              return {\n                object: 'Portfolio',\n                notFound: true\n              };\n            }\n\n            throw error;\n          })\n      : { object: 'Portfolio', notFound: true }\n  );\n\n  return Promise.all(detailPromises);\n};\n\nexport const getApprovalRequests = (orderItemId) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items/${orderItemId}/approval_requests`\n  );\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport { ORDERS_ROUTE } from '../../constants/routes';\n\nconst OrderNotification = ({ id, dispatch }) => (\n  <Fragment>\n    You can track the progress of Order # {id} in your{' '}\n    <Link onClick={() => dispatch(clearNotifications())} to={ORDERS_ROUTE}>\n      Orders\n    </Link>{' '}\n    page.\n  </Fragment>\n);\n\nOrderNotification.propTypes = {\n  id: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default OrderNotification;\n","import React from 'react';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\n\nimport * as ActionTypes from '../action-types';\nimport * as OrderHelper from '../../helpers/order/order-helper';\nimport OrderNotification from '../../presentational-components/order/order-notification';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const fetchServicePlans = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_SERVICE_PLANS,\n  payload: OrderHelper.getServicePlans(portfolioItemId)\n});\n\nexport const updateServiceData = (data) => ({\n  type: ActionTypes.UPDATE_SERVICE_DATA,\n  payload: { serviceData: data }\n});\n\nexport const setSelectedPlan = (data) => ({\n  type: ActionTypes.SET_SELECTED_PLAN,\n  payload: data\n});\n\nexport const sendSubmitOrder = (apiProps) => (dispatch) =>\n  dispatch({\n    type: ActionTypes.SUBMIT_SERVICE_ORDER,\n    payload: OrderHelper.sendSubmitOrder(apiProps).then(({ id }) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been accepted successfully',\n          description: <OrderNotification id={id} dispatch={dispatch} />,\n          dismissable: true\n        })\n      )\n    )\n  });\n\nexport const cancelOrder = (orderId) => (dispatch, getState) => {\n  dispatch({ type: `${ActionTypes.CANCEL_ORDER}_PENDING` });\n  const {\n    orderReducer: { orderDetail }\n  } = getState();\n  return OrderHelper.cancelOrder(orderId)\n    .then(() => {\n      orderDetail.order.state = 'Canceled';\n      if (\n        orderDetail.approvalRequest &&\n        orderDetail.approvalRequest.length > 0\n      ) {\n        orderDetail.approvalRequest[0].state = 'canceled';\n      }\n\n      dispatch({\n        type: ActionTypes.SET_ORDER_DETAIL,\n        payload: { ...orderDetail }\n      });\n      return orderDetail;\n    })\n    .then((orderDetail) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been canceled successfully',\n          description: `Order ${`Order #${orderDetail.order.id}`} was canceled.`,\n          dismissable: true\n        })\n      )\n    )\n    .then(() => dispatch({ type: `${ActionTypes.CANCEL_ORDER}_FULFILLED` }))\n    .catch((error) => {\n      dispatch({\n        type: `${ActionTypes.CANCEL_ORDER}_REJECTED`,\n        payload: error\n      });\n    });\n};\n\nexport const fetchOrders = (filters, pagination = defaultSettings) => (\n  dispatch\n) => {\n  const queryFilter = Object.entries(filters)\n    .filter(([, value]) => value && value.length > 0)\n    .map(([key, value]) =>\n      Array.isArray(value)\n        ? value.map((value) => `filter[${key}][]=${value}`).join('&')\n        : `filter[${key}][contains_i]=${value}`\n    )\n    .join('&');\n  dispatch({ type: `${ActionTypes.FETCH_ORDERS}_PENDING` });\n  return OrderHelper.getOrders(queryFilter, pagination)\n    .then(({ portfolioItems, ...orders }) => {\n      dispatch({\n        type: ActionTypes.SET_PORTFOLIO_ITEMS,\n        payload: portfolioItems\n      });\n      return dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_FULFILLED`,\n        meta: {\n          ...pagination,\n          filter: queryFilter,\n          filters,\n          storeState: true,\n          stateKey: 'orders'\n        },\n        payload: orders\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchOrderDetails = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SET_ORDER_DETAIL}_PENDING` });\n  return OrderHelper.getOrderDetail(params)\n    .then(\n      ([\n        order,\n        orderItem,\n        portfolioItem,\n        platform,\n        progressMessages,\n        portfolio,\n        approvalRequest\n      ]) =>\n        dispatch({\n          type: `${ActionTypes.SET_ORDER_DETAIL}_FULFILLED`,\n          payload: {\n            order,\n            orderItem,\n            portfolioItem,\n            platform,\n            progressMessages,\n            portfolio,\n            approvalRequest\n          }\n        })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.SET_ORDER_DETAIL}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchApprovalRequests = (orderItemId) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_PENDING` });\n  return OrderHelper.getApprovalRequests(orderItemId)\n    .then((data) => {\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_FULFILLED`,\n        payload: data\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n","import { toolbarComponentTypes } from '../toolbar-mapper';\n\nconst createOrdersToolbarSchema = () => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      className: 'orders bg-fill pf-u-p-lg',\n      key: 'orders-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'orders-toolbar-title',\n          title: 'Orders',\n          className: ''\n        }\n      ]\n    }\n  ]\n});\n\nexport default createOrdersToolbarSchema;\n","import { CATALOG_API_BASE } from '../../utilities/constants';\n\nexport const getOrderIcon = ({ orderItems }) =>\n  orderItems[0] &&\n  `${CATALOG_API_BASE}/portfolio_items/${orderItems[0].portfolio_item_id}/icon`;\n\nexport const getOrderPortfolioName = ({ orderItems, id }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem ? portfolioItem.name : `Order ${id}`;\n};\n\nexport const getOrderPlatformId = ({ orderItems }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem\n    ? {\n        orderPlatform: portfolioItem.service_offering_source_ref,\n        orderPortfolio: portfolioItem.portfolio_id\n      }\n    : {};\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from 'styled-components';\n\nconst childrenPropType = PropTypes.oneOfType([\n  PropTypes.node,\n  PropTypes.arrayOf(PropTypes.node)\n]);\n\nexport const Table = ({ children, className, ...props }) => (\n  <table className={clsx('pf-c-table', 'pf-m-grid-md', className)} {...props}>\n    {children}\n  </table>\n);\n\nTable.propTypes = {\n  children: childrenPropType.isRequired,\n  className: PropTypes.string\n};\n\nexport const Tbody = ({ children, ...props }) => (\n  <tbody {...props}>{children}</tbody>\n);\n\nTbody.propTypes = {\n  children: childrenPropType.isRequired\n};\n\nexport const TableCell = styled(({ shrink, children, ...props }) => (\n  <td {...props}>{children}</td>\n))`\n  @media screen and (min-width: 768px) {\n    vertical-align: top !important;\n    width: ${({ shrink }) => (shrink ? '200px' : 'initial')};\n    img {\n      object-fit: contain;\n    }\n  }\n`;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport {\n  getOrderIcon,\n  getOrderPortfolioName,\n  getOrderPlatformId\n} from '../../helpers/shared/orders';\nimport CatalogLink from '../common/catalog-link';\nimport {\n  ORDER_ROUTE,\n  ORDER_APPROVAL_ROUTE,\n  ORDER_LIFECYCLE_ROUTE\n} from '../../constants/routes';\nimport { TableCell } from '../../presentational-components/styled-components/table';\n\nconst routeMapper = {\n  'Approval Pending': ORDER_APPROVAL_ROUTE,\n  Completed: ORDER_LIFECYCLE_ROUTE\n};\n\nconst OrderItem = memo(\n  ({ item }) => {\n    const { orderPlatform, orderPortfolio, orderName } = useSelector(\n      ({\n        portfolioReducer: {\n          portfolioItems: { data }\n        }\n      }) => {\n        const { orderPlatform, orderPortfolio } = getOrderPlatformId(\n          item,\n          data\n        );\n        return {\n          orderPlatform,\n          orderPortfolio,\n          orderName: getOrderPortfolioName(item, data)\n        };\n      }\n    );\n    const orderItem = (item.orderItems[0] && item.orderItems[0]) || {};\n    const searchParams = {\n      order: item.id,\n      'order-item': orderItem.id,\n      'portfolio-item': orderItem.portfolio_item_id,\n      platform: orderPlatform,\n      portfolio: orderPortfolio\n    };\n    return (\n      <tr\n        aria-labelledby={`${item.id}-expand`}\n        className=\"data-list-expand-fix\"\n      >\n        <TableCell shrink className=\"pf-u-pl-xl-on-md\">\n          <CardIcon\n            height={60}\n            src={getOrderIcon(item)}\n            sourceId={orderPlatform}\n          />\n        </TableCell>\n        <TableCell>\n          <TextContent>\n            <Grid gutter=\"sm\" className=\"pf-u-gg-md\">\n              <GridItem>\n                <Level className=\"flex-no-wrap\">\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.h5}>\n                      <CatalogLink\n                        pathname={ORDER_ROUTE}\n                        searchParams={searchParams}\n                      >\n                        {orderName} - Order # {item.id}\n                      </CatalogLink>\n                    </Text>\n                  </LevelItem>\n                  <LevelItem className=\"flex-item-no-wrap\">\n                    <CatalogLink\n                      pathname={routeMapper[item.state] || ORDER_ROUTE}\n                      searchParams={searchParams}\n                    >\n                      {item.state === 'Failed' && (\n                        <ExclamationCircleIcon className=\"pf-u-mr-sm icon-danger-fill\" />\n                      )}\n                      {item.state}\n                    </CatalogLink>\n                  </LevelItem>\n                </Level>\n              </GridItem>\n              <GridItem>\n                <Level>\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n                      Ordered&nbsp;\n                      <DateFormat date={item.created_at} variant=\"relative\" />\n                    </Text>\n                  </LevelItem>\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n                      Ordered by {item.owner}\n                    </Text>\n                  </LevelItem>\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n                      Last updated&nbsp;\n                      <DateFormat\n                        date={\n                          item.orderItems[0] && item.orderItems[0].updated_at\n                        }\n                        variant=\"relative\"\n                      />\n                    </Text>\n                  </LevelItem>\n                </Level>\n              </GridItem>\n            </Grid>\n          </TextContent>\n        </TableCell>\n      </tr>\n    );\n  },\n  (prevProps, nextProps) => prevProps.id === nextProps.id\n);\n\nOrderItem.propTypes = {\n  item: PropTypes.object.isRequired\n};\n\nexport default OrderItem;\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  Title,\n  Bullseye,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Flex,\n  EmptyStateSecondaryActions,\n  Button\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/components/EmptyTable';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/TableToolbar';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { fetchOrders } from '../../redux/actions/order-actions';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport OrderItem from './order-item';\nimport AsyncPagination from '../common/async-pagination';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport {\n  Table,\n  Tbody\n} from '../../presentational-components/styled-components/table';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\n\nconst debouncedFilter = asyncFormValidator(\n  (filters, meta = defaultSettings, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(fetchOrders(filters, meta)).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst initialState = {\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false,\n  filterType: 'state',\n  filters: {\n    state: [],\n    owner: ''\n  }\n};\n\nconst changeFilters = (value, type, filters) => ({\n  ...filters,\n  [type]: value\n});\n\nconst ordersListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return {\n        ...state,\n        filters: changeFilters(action.payload, state.filterType, state.filters)\n      };\n    case 'replaceFilterChip':\n      return { ...state, filters: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    case 'setFilterType':\n      return { ...state, filterType: action.payload };\n  }\n\n  return state;\n};\n\nconst OrdersList = () => {\n  const viewState = useInitialUriHash();\n  const [\n    { isFetching, isFiltering, filterType, filters },\n    stateDispatch\n  ] = useReducer(ordersListState, {\n    ...initialState,\n    filters: viewState?.orders?.filters || { state: [], owner: '' }\n  });\n  const { data, meta } = useSelector(({ orderReducer }) => orderReducer.orders);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.all([\n      dispatch(fetchOrders(filters, viewState?.orders)),\n      dispatch(fetchPlatforms())\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const handlePagination = (_apiProps, pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    return dispatch(fetchOrders(filters, pagination))\n      .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n      .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      { ...filters, [filterType]: value },\n      { ...meta, offset: 0 },\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  return (\n    <Grid gutter=\"md\">\n      <GridItem>\n        <Section type=\"content\">\n          {!meta.noData && (\n            <PrimaryToolbar\n              activeFiltersConfig={{\n                filters: Object.entries(filters)\n                  .filter(([, value]) => value && value.length > 0)\n                  .map(([key, value]) => ({\n                    category: key,\n                    type: key,\n                    chips: Array.isArray(value)\n                      ? value.map((name) => ({ name }))\n                      : [{ name: value }]\n                  })),\n                onDelete: (_e, [chip], clearAll) => {\n                  if (clearAll) {\n                    stateDispatch({\n                      type: 'replaceFilterChip',\n                      payload: initialState.filters\n                    });\n                    return debouncedFilter(\n                      initialState.filters,\n                      meta,\n                      dispatch,\n                      (isFiltering) =>\n                        stateDispatch({\n                          type: 'setFilteringFlag',\n                          payload: isFiltering\n                        })\n                    );\n                  }\n\n                  const newFilters = { ...filters };\n                  if (chip.type === 'state') {\n                    newFilters[chip.type] = newFilters[chip.type].filter(\n                      (value) => value !== chip.chips[0].name\n                    );\n                  } else {\n                    newFilters[chip.type] = '';\n                  }\n\n                  stateDispatch({\n                    type: 'replaceFilterChip',\n                    payload: newFilters\n                  });\n                  debouncedFilter(newFilters, meta, dispatch, (isFiltering) =>\n                    stateDispatch({\n                      type: 'setFilteringFlag',\n                      payload: isFiltering\n                    })\n                  );\n                }\n              }}\n              filterConfig={{\n                onChange: (_e, value) =>\n                  stateDispatch({ type: 'setFilterType', payload: value }),\n                value: filterType,\n                items: [\n                  {\n                    filterValues: {\n                      items: [\n                        {\n                          value: 'Approval Pending',\n                          label: 'Approval Pending'\n                        },\n                        {\n                          value: 'Canceled',\n                          label: 'Canceled'\n                        },\n                        {\n                          value: 'Completed',\n                          label: 'Completed'\n                        },\n                        {\n                          value: 'Created',\n                          label: 'Created'\n                        },\n                        {\n                          value: 'Failed',\n                          label: 'Failed'\n                        },\n                        {\n                          value: 'Ordered',\n                          label: 'Ordered'\n                        }\n                      ],\n                      value: filters.state,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'State',\n                    value: 'state',\n                    type: 'checkbox'\n                  },\n                  {\n                    filterValues: {\n                      value: filters.owner,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'Owner',\n                    value: 'owner'\n                  }\n                ]\n              }}\n              pagination={\n                <AsyncPagination\n                  isDisabled={isFetching || isFiltering}\n                  apiRequest={handlePagination}\n                  meta={meta}\n                  isCompact\n                />\n              }\n            />\n          )}\n          <Table aria-label=\"order-list\">\n            <Tbody>\n              {isFetching || isFiltering ? (\n                <tr>\n                  <td className=\"pf-u-p-0\">\n                    <ListLoader />\n                  </td>\n                </tr>\n              ) : data.length > 0 ? (\n                data.map((item, index) => (\n                  <OrderItem key={item.id} index={index} item={item} />\n                ))\n              ) : (\n                <tr>\n                  <td>\n                    <EmptyTable>\n                      <Bullseye>\n                        <EmptyState>\n                          <Bullseye>\n                            <EmptyStateIcon icon={SearchIcon} />\n                          </Bullseye>\n                          <Title size=\"lg\">\n                            {meta.noData ? 'No orders' : 'No results found'}\n                          </Title>\n                          <EmptyStateBody>\n                            {meta.noData\n                              ? 'No orders have been created.'\n                              : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'}\n                          </EmptyStateBody>\n\n                          <EmptyStateSecondaryActions>\n                            {!meta.noData && (\n                              <Button\n                                variant=\"link\"\n                                onClick={() => {\n                                  stateDispatch({\n                                    type: 'setFilteringFlag',\n                                    payload: true\n                                  });\n                                  handleFilterItems('');\n                                }}\n                              >\n                                Clear all filters\n                              </Button>\n                            )}\n                          </EmptyStateSecondaryActions>\n                        </EmptyState>\n                      </Bullseye>\n                    </EmptyTable>\n                  </td>\n                </tr>\n              )}\n            </Tbody>\n          </Table>\n          <TableToolbar>\n            <div className=\"bottom-pagination-container\">\n              <Flex\n                className=\"example-border\"\n                breakpointMods={[{ modifier: 'justify-content-flex-end' }]}\n              >\n                {meta.count > 0 && (\n                  <AsyncPagination\n                    className=\"pf-u-mt-0\"\n                    isDisabled={isFetching || isFiltering}\n                    apiRequest={handlePagination}\n                    meta={meta}\n                  />\n                )}\n              </Flex>\n            </div>\n          </TableToolbar>\n        </Section>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default OrdersList;\n","import React, { useEffect } from 'react';\nimport { Stack } from '@patternfly/react-core';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createOrdersToolbarSchema from '../../toolbar/schemas/orders-toolbar.schema';\nimport OrdersList from './orders-list';\n\nconst Orders = () => {\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'orders', secondaryNav: true });\n  }, []);\n\n  return (\n    <Stack>\n      <ToolbarRenderer schema={createOrdersToolbarSchema()} />\n      <OrdersList />\n    </Stack>\n  );\n};\n\nexport default Orders;\n"],"sourceRoot":""}