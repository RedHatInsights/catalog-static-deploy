{"version":3,"sources":["webpack:///./src/utilities/async-form-validator.js","webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/toolbar/toolbar-mapper.js","webpack:///./src/utilities/use-enhanced-history.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/helpers/platform/platform-helper.js","webpack:///./src/redux/actions/platform-actions.js","webpack:///./src/presentational-components/shared/conditional-link.js","webpack:///./src/presentational-components/styled-components/toolbars.js","webpack:///./src/presentational-components/styled-components/lazy-load-image.js","webpack:///./src/presentational-components/shared/card-icon.js","webpack:///./src/toolbar/toolbar-renderer.js","webpack:///./src/smart-components/common/catalog-breadcrumbs.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/presentational-components/shared/app-tabs.js","webpack:///./src/assets/images/card-icon-default.svg","webpack:///./src/helpers/order/order-helper.js","webpack:///./src/presentational-components/order/order-notification.js","webpack:///./src/redux/actions/order-actions.js","webpack:///./src/toolbar/schemas/orders-toolbar.schema.js","webpack:///./src/helpers/shared/orders.js","webpack:///./src/smart-components/order/order-item.js","webpack:///./src/smart-components/order/orders-list.js","webpack:///./src/smart-components/order/orders.js"],"names":["asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","FilterInputGroup","styled","div","FilterInput","TextInput","FilterIconsContainer","span","StyledCloseIcon","CloseIcon","StyledSearchIcon","SearchIcon","FilterToolbarItem","searchValue","onFilterChange","placeholder","isClearable","ToolbarItem","value","type","onChange","aria-label","width","height","onClick","propTypes","PropTypes","func","isRequired","string","bool","defaultProps","ToolbarButton","title","props","Button","toolbarMapper","TopToolbar","TopToolbarTitle","Toolbar","className","ToolbarGroup","Link","CatalogLink","Level","LevelItem","AppTabs","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","TOOLBAR","TOOLBAR_ITEM","TOOLBAR_GROUP","FILTER_TOOLBAR_ITEM","LINK","BUTTON","LEVEL","LEVEL_ITEM","TABS","useEnhancedHistory","removeSearch","history","useHistory","push","target","split","search","undefined","removeSearchQuery","AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","isCompact","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","getNewPage","request","debouncePromise","direction","shape","any","axiosInstance","getAxiosInstance","graphqlInstance","getGraphqlInstance","getPlatforms","post","SOURCES_API_BASE","query","then","data","application_types","sources","getPlatform","platformId","get","getPlatformItems","filter","filterQuery","TOPOLOGICAL_INVENTORY_API_BASE","getPlatformInventories","defaultSettings","getServiceOffering","serviceOfferingId","sourceId","Promise","all","source","source_type_id","icon_url","service","fetchPlatforms","dispatch","ActionTypes","PlatformHelper","payload","error","fetchPlatformItems","fetchSelectedPlatform","id","fetchPlatformInventories","fetchServiceOffering","ConditionalLink","children","pathname","oneOfType","node","arrayOf","StyledToolbar","TopToolbarWrapper","TopToolbarTitleContainer","StyledLazyLoadImage","LazyLoadImage","hidden","CardIconContainer","CardIcon","src","useState","isLoaded","setLoaded","isUnknown","setUnknown","platformIconMapping","useSelector","platformReducer","defaultIcon","CardIconDefault","threshold","delayTime","onError","onLoad","style","object","ToolbarContext","createContext","Component","component","Consumer","componentMapper","C","element","render","fields","map","key","field","ToolbarRenderer","schema","Provider","array","CatalogBreadcrumbs","fragments","breadcrumbsReducer","length","index","searchParams","nav","exact","isActive","paddingBottom","breadcrumbs","rest","breadcrumbsSpacing","description","noData","clsx","TextVariants","h2","p","tabItems","useLocation","activeTab","find","name","includes","activeKey","eventKey","onSelect","tabIndex","item","module","exports","orderApi","getOrderApi","portfolioItemApi","getOrderItemApi","getPortfolioItemApi","getRequestsApi","getServicePlans","portfolioItemId","listServicePlans","getOrderItems","orderIds","CATALOG_API_BASE","orderId","join","getOrderPortfolioItems","itemIds","itemId","OrderNotification","clearNotifications","to","ORDERS_ROUTE","fetchServicePlans","OrderHelper","sendSubmitOrder","a","async","service_parameters","providerControlParameters","parameters","createOrder","order","orderItem","provider_control_parameters","addToOrder","submitOrder","addNotification","variant","dismissable","cancelOrder","getState","orderDetail","orderReducer","state","approvalRequest","fetchOrders","filters","pagination","queryFilter","Object","entries","Array","isArray","orders","orderItems","portfolio_item_id","portfolioItems","order_id","fetchOrderDetails","params","platform","portfolio","portfolioItem","progressMessages","createOrdersToolbarSchema","getOrderIcon","getOrderPortfolioName","OrderItem","memo","portfolioReducer","orderPlatform","service_offering_source_ref","orderPortfolio","portfolio_id","orderName","Fragment","DataListItem","aria-labelledby","DataListItemRow","DataListItemCells","dataListCells","DataListCell","Split","gutter","SplitItem","isFilled","TextContent","Grid","GridItem","Text","h5","ORDER_ROUTE","ORDER_APPROVAL_ROUTE","small","DateFormat","date","created_at","owner","updated_at","prevProps","nextProps","debouncedFilter","asyncFormValidator","filteringCallback","initialState","isOpen","isFetching","isFiltering","filterType","ordersListState","action","OrdersList","useReducer","stateDispatch","useDispatch","useEffect","handlePagination","_apiProps","handleFilterItems","Section","PrimaryToolbar","activeFiltersConfig","category","chips","onDelete","_e","clearAll","chip","newFilters","filterConfig","items","filterValues","label","isDisabled","DataList","EmptyTable","Bullseye","EmptyState","EmptyStateIcon","icon","Title","size","EmptyStateBody","EmptyStateSecondaryActions","TableToolbar","Flex","breakpointMods","modifier","Orders","insights","chrome","appNavClick","secondaryNav","Stack"],"mappings":"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","file":"js/orders.js","sourcesContent":["import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterInputGroup = styled.div`\n  position: relative;\n  width: 300px;\n  height: 36px;\n`;\n\nconst FilterInput = styled(TextInput)`\n  position: absolute;\n  width: 300px;\n  background: transparent;\n`;\n\nconst FilterIconsContainer = styled.span`\n  position: absolute;\n  right: 8px;\n  top: 8px;\n`;\n\nconst StyledCloseIcon = styled(CloseIcon)`\n  z-index: 1000;\n  fill: #72767b;\n  :hover {\n    fill: var(--pf-global--Color--100);\n    cursor: pointer;\n  }\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  z-index: 1000;\n  fill: #72767b;\n`;\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable\n}) => (\n  <ToolbarItem>\n    <FilterInputGroup>\n      <FilterInput\n        placeholder={placeholder}\n        value={searchValue}\n        type=\"text\"\n        onChange={onFilterChange}\n        aria-label={placeholder}\n      />\n      <FilterIconsContainer>\n        {(isClearable && searchValue && (\n          <StyledCloseIcon\n            width=\"16\"\n            height=\"16\"\n            onClick={() => onFilterChange('')}\n          />\n        )) || <StyledSearchIcon />}\n      </FilterIconsContainer>\n    </FilterInputGroup>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Level,\n  LevelItem,\n  ToolbarItem,\n  ToolbarGroup\n} from '@patternfly/react-core';\n\nimport FilterToolbarItem from '../presentational-components/shared/filter-toolbar-item';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../presentational-components/shared/top-toolbar';\nimport AppTabs from '../presentational-components/shared/app-tabs';\nimport CatalogLink from '../smart-components/common/catalog-link';\nimport { StyledToolbar } from '../presentational-components/styled-components/toolbars';\n\nconst ToolbarButton = ({ title, ...props }) => (\n  <Button {...props}>{title}</Button>\n);\n\nToolbarButton.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst AppToolbar = ({ ...props }) => (\n  <StyledToolbar className=\"pf-u-pr-lg\" {...props} />\n);\n\nconst toolbarMapper = {\n  TopToolbar,\n  TopToolbarTitle,\n  Toolbar: AppToolbar,\n  ToolbarGroup,\n  ToolbarItem,\n  FilterToolbarItem,\n  Link: CatalogLink,\n  Level,\n  LevelItem,\n  Button: ToolbarButton,\n  AppTabs\n};\n\nexport const toolbarComponentTypes = {\n  TOP_TOOLBAR: 'TopToolbar',\n  TOP_TOOLBAR_TITLE: 'TopToolbarTitle',\n  TOOLBAR: 'Toolbar',\n  TOOLBAR_ITEM: 'ToolbarItem',\n  TOOLBAR_GROUP: 'ToolbarGroup',\n  FILTER_TOOLBAR_ITEM: 'FilterToolbarItem',\n  LINK: 'Link',\n  BUTTON: 'Button',\n  LEVEL: 'Level',\n  LEVEL_ITEM: 'LevelItem',\n  TABS: 'AppTabs'\n};\n\nexport default toolbarMapper;\n","import { useHistory } from 'react-router-dom';\n\nconst removeSearchQuery = (target) => {\n  if (typeof target === 'string') {\n    return target.split('?')[0];\n  }\n\n  if (typeof target === 'object') {\n    return {\n      ...target,\n      search: undefined\n    };\n  }\n\n  return target;\n};\n\n/**\n * Wrapper around useHistory hook which adds aditional settings to standard history methods\n * @param {Boolean} removeSearch if true, using history navigation methods will remove search string from path\n */\nconst useEnhancedHistory = (removeSearch) => {\n  const history = useHistory();\n  return {\n    ...history,\n    push: (target) => {\n      if (removeSearch) {\n        return history.push(removeSearchQuery(target));\n      }\n\n      return history.push(target);\n    }\n  };\n};\n\nexport default useEnhancedHistory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport {\n  TOPOLOGICAL_INVENTORY_API_BASE,\n  SOURCES_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nexport const getPlatforms = () => {\n  return graphqlInstance\n    .post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n    .then(({ data: { application_types } }) => application_types)\n    .then(([{ sources }]) => sources);\n};\n\nexport const getPlatform = (platformId) => {\n  return axiosInstance.get(`${SOURCES_API_BASE}/sources/${platformId}`);\n};\n\nexport const getPlatformItems = (platformId, filter, options) => {\n  const filterQuery = filter ? `&filter[name][contains_i]=${filter}` : '';\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_offerings?filter[archived_at][nil]${filterQuery}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings`\n    );\n  }\n};\n\nexport const getPlatformInventories = (\n  platformId,\n  filter = '',\n  options = defaultSettings\n) => {\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_inventories?filter[name][contains_i]=${filter}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_inventories?limit=${options.limit}&offset=${options.offset}`\n    );\n  }\n};\n\nexport const getServiceOffering = (serviceOfferingId, sourceId) =>\n  Promise.all([\n    axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings/${serviceOfferingId}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${sourceId}`)\n      .then((source) => {\n        return axiosInstance\n          .get(`${SOURCES_API_BASE}/source_types/${source.source_type_id}`)\n          .then(({ icon_url }) => ({\n            ...source,\n            icon_url\n          }));\n      })\n  ]).then(([service, source]) => ({\n    service,\n    source\n  }));\n","import * as ActionTypes from '../action-types';\nimport * as PlatformHelper from '../../helpers/platform/platform-helper';\n\nconst doFetchPlatforms = () => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_PLATFORMS}_PENDING` });\n  return PlatformHelper.getPlatforms()\n    .then((data) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_FULFILLED`,\n        payload: data\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchPlatforms = () => (dispatch) => dispatch(doFetchPlatforms());\n\nexport const fetchPlatformItems = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_ITEMS,\n  payload: PlatformHelper.getPlatformItems(platformId, filter, options),\n  meta: {\n    platformId,\n    filter,\n    ...options\n  }\n});\n\nexport const fetchMultiplePlatformItems = (platformsId) => {\n  const platformPromisses = platformsId.map((platformId) =>\n    PlatformHelper.getPlatformItems(platformId).then((data) => ({\n      [platformId]: data\n    }))\n  );\n  return {\n    type: ActionTypes.FETCH_MULTIPLE_PLATFORM_ITEMS,\n    payload: Promise.all(platformPromisses).then((data) =>\n      data.reduce(\n        (acc, curr) => ({\n          ...acc,\n          ...curr\n        }),\n        {}\n      )\n    )\n  };\n};\n\nexport const fetchSelectedPlatform = (id) => ({\n  type: ActionTypes.FETCH_PLATFORM,\n  payload: PlatformHelper.getPlatform(id)\n});\n\nexport const searchPlatformItems = (value) => ({\n  type: ActionTypes.FILTER_PLATFORM_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const fetchPlatformInventories = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_INVENTORIES,\n  payload: PlatformHelper.getPlatformInventories(platformId, filter, options)\n});\n\nexport const fetchServiceOffering = (...args) => ({\n  type: ActionTypes.FETCH_SERVICE_OFFERING,\n  payload: PlatformHelper.getServiceOffering(...args)\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ConditionalLink = ({ children, pathname, ...props }) =>\n  pathname ? (\n    <CatalogLink pathname={pathname} {...props}>\n      {children}\n    </CatalogLink>\n  ) : (\n    children\n  );\n\nConditionalLink.propTypes = {\n  pathname: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]).isRequired\n};\n\nexport default ConditionalLink;\n","import styled from 'styled-components';\nimport { Toolbar, Level } from '@patternfly/react-core';\n\nexport const StyledToolbar = styled(Toolbar)`\n  background-color: #ffffff;\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  position: relative;\n  top: 1px;\n`;\n\nexport const TopToolbarWrapper = styled.div`\n  background-color: #ffffff;\n  .pf-c-breadcrumb__item {\n    .active {\n      color: var(--pf-c-breadcrumb__item--Color);\n      text-decoration: none;\n      pointer-events: none;\n    }\n  }\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  .top-toolbar-title {\n    min-width: 200px;\n  }\n  .top-toolbar-title-description {\n    word-break: break-word;\n  }\n`;\n\nexport const TopToolbarTitleContainer = styled(Level)`\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n  }\n`;\n","import styled from 'styled-components';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst StyledLazyLoadImage = styled(LazyLoadImage)`\n  height: ${({ height, hidden }) => (hidden ? '0px' : `${height}px` || '40px')};\n  display: ${({ hidden }) => (hidden ? 'none' : 'inherit')};\n  float: ${({ hidden }) => (hidden ? 'left' : 'inherit')};\n  width: ${({ hidden }) => (hidden ? 0 : 'inherit')};\n`;\n\nexport default StyledLazyLoadImage;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\n\nimport { IconPlaceholder } from './loader-placeholders';\nimport CardIconDefault from '../../assets/images/card-icon-default.svg';\nimport StyledLazyLoadImage from '../styled-components/lazy-load-image';\n\nconst CardIconContainer = styled.div`\n  display: inline-block;\n  height: ${({ height }) => `${height}px`};\n`;\n\nconst CardIcon = ({ src, height, sourceId }) => {\n  const [isLoaded, setLoaded] = useState(false);\n  const [isUnknown, setUnknown] = useState(false);\n  const platformIconMapping = useSelector(\n    ({ platformReducer: { platformIconMapping } }) => platformIconMapping\n  );\n  const defaultIcon = sourceId\n    ? platformIconMapping[sourceId]\n    : CardIconDefault;\n\n  return (\n    <CardIconContainer height={height}>\n      {!isLoaded && <IconPlaceholder height={height} />}\n      <StyledLazyLoadImage\n        threshold={2000}\n        delayTime={0}\n        hidden={!isLoaded}\n        height={isLoaded ? height : 0}\n        onError={() => setUnknown(true)}\n        onLoad={() => setLoaded(true)}\n        src={!src || isUnknown ? defaultIcon : src}\n      />\n    </CardIconContainer>\n  );\n};\n\nCardIcon.propTypes = {\n  src: PropTypes.string,\n  platformId: PropTypes.string,\n  style: PropTypes.object,\n  height: PropTypes.number,\n  sourceId: PropTypes.string\n};\n\nCardIcon.defaultProps = {\n  style: {},\n  height: 40\n};\n\nexport default CardIcon;\n","import React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport toolbarMapper from './toolbar-mapper';\n\nconst ToolbarContext = createContext();\n\nconst Component = ({ component, ...props }) => (\n  <ToolbarContext.Consumer>\n    {({ componentMapper }) => {\n      const C =\n        typeof component === 'string' ? componentMapper[component] : component;\n      return <C {...props} />;\n    }}\n  </ToolbarContext.Consumer>\n);\n\nComponent.propTypes = {\n  component: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.element\n  ]).isRequired\n};\n\n/**\n * Render loop that renders all toolbar components based on its type\n * @param {Array} fields list of React components to be rendered\n */\nconst render = (fields) =>\n  fields.hidden\n    ? null\n    : fields.map(({ fields, key, ...field }) =>\n        fields ? (\n          <Component key={key} {...field}>\n            {render(fields)}\n          </Component>\n        ) : (\n          <Component key={key} {...field} />\n        )\n      );\n\nconst ToolbarRenderer = ({ schema, componentMapper }) => (\n  <ToolbarContext.Provider value={{ render, componentMapper }}>\n    {render(schema.fields)}\n  </ToolbarContext.Provider>\n);\n\nToolbarRenderer.propTypes = {\n  schema: PropTypes.shape({\n    fields: PropTypes.array.isRequired\n  }).isRequired,\n  componentMapper: PropTypes.object\n};\n\nToolbarRenderer.defaultProps = {\n  componentMapper: toolbarMapper\n};\n\nexport default ToolbarRenderer;\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport ConditionalLink from '../../presentational-components/shared/conditional-link';\n\nconst CatalogBreadcrumbs = () => {\n  const fragments = useSelector(\n    ({ breadcrumbsReducer: { fragments } }) => fragments\n  );\n  if (fragments.length <= 1) {\n    return null;\n  }\n\n  return (\n    <Breadcrumb>\n      {fragments.map(({ title, pathname, searchParams }, index) => (\n        <ConditionalLink\n          pathname={!(fragments.length === index + 1) ? pathname : undefined}\n          searchParams={searchParams}\n          nav\n          exact\n          key={pathname}\n          className=\"pf-c-breadcrumb__item\"\n        >\n          <BreadcrumbItem isActive={fragments.length === index + 1}>\n            {title}\n          </BreadcrumbItem>\n        </ConditionalLink>\n      ))}\n    </Breadcrumb>\n  );\n};\n\nexport default CatalogBreadcrumbs;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport clsx from 'clsx';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport CatalogBreadcrumbs from '../../smart-components/common/catalog-breadcrumbs';\nimport {\n  TopToolbarWrapper,\n  TopToolbarTitleContainer\n} from '../styled-components/toolbars';\n\nconst TopToolbar = ({\n  children,\n  paddingBottom,\n  breadcrumbs,\n  breadcrumbsSpacing,\n  ...rest\n}) => (\n  <TopToolbarWrapper\n    className={`pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${\n      paddingBottom ? 'pf-u-pb-lg' : ''\n    }`}\n    {...rest}\n  >\n    {breadcrumbs && (\n      <div className=\"pf-u-mb-md\">\n        {' '}\n        <CatalogBreadcrumbs />\n      </div>\n    )}\n    {children}\n  </TopToolbarWrapper>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  paddingBottom: PropTypes.bool,\n  breadcrumbs: PropTypes.bool,\n  breadcrumbsSpacing: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: true,\n  breadcrumbs: true\n};\n\nexport default TopToolbar;\n\nexport const TopToolbarTitle = ({\n  title,\n  description,\n  children,\n  noData,\n  ...rest\n}) => (\n  <Fragment>\n    <TopToolbarTitleContainer\n      className={clsx({\n        'pf-u-mb-lg': !noData\n      })}\n      {...rest}\n    >\n      <LevelItem>\n        <TextContent className=\"top-toolbar-title\">\n          <Text component={TextVariants.h2} className=\"pf-u-m-0 pf-u-mr-md\">\n            {title}\n          </Text>\n          {description && (\n            <Text\n              className=\"top-toolbar-title-description\"\n              component={TextVariants.p}\n            >\n              {description}\n            </Text>\n          )}\n        </TextContent>\n      </LevelItem>\n      {children}\n    </TopToolbarTitleContainer>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  noData: PropTypes.bool\n};\n\nTopToolbarTitle.defaultProps = {\n  title: <ToolbarTitlePlaceholder />\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation } from 'react-router-dom';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nconst AppTabs = ({ tabItems }) => {\n  const { push } = useEnhancedHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) =>\n    push({ pathname: tabItems[tabIndex].name, search });\n\n  return (\n    <Tabs\n      activeKey={activeTab ? activeTab.eventKey : 0}\n      onSelect={handleTabClick}\n    >\n      {tabItems.map((item) => (\n        <Tab\n          title={item.title}\n          key={item.eventKey}\n          eventKey={item.eventKey}\n          name={item.name}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default AppTabs;\n","module.exports = __webpack_public_path__ + \"fonts/card-icon-default.svg\";","/* eslint camelcase: 0 */\nimport {\n  getAxiosInstance,\n  getPortfolioItemApi,\n  getOrderApi,\n  getRequestsApi,\n  getOrderItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nconst orderApi = getOrderApi();\nconst orderItemApi = getOrderItemApi();\nconst portfolioItemApi = getPortfolioItemApi();\nconst requestsApi = getRequestsApi();\nconst axiosInstance = getAxiosInstance();\n\nexport function getServicePlans(portfolioItemId) {\n  return portfolioItemApi.listServicePlans(portfolioItemId);\n}\n\nexport async function sendSubmitOrder({\n  service_parameters: { providerControlParameters, ...service_parameters },\n  ...parameters\n}) {\n  let order = await orderApi.createOrder();\n  let orderItem = {};\n  orderItem.count = 1;\n  orderItem = {\n    ...orderItem,\n    ...parameters,\n    service_parameters,\n    provider_control_parameters: providerControlParameters || {}\n  };\n  await orderApi.addToOrder(order.id, orderItem);\n  return orderApi.submitOrder(order.id);\n}\n\nexport function listRequests() {\n  return requestsApi.listRequests().then((data) => ({\n    ...data,\n    data: data.data.map(({ decision, ...item }) => ({\n      ...item,\n      state: decision\n    }))\n  }));\n}\n\nexport function cancelOrder(orderId) {\n  return orderApi.cancelOrder(orderId);\n}\n\nconst getOrderItems = (orderIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items?${orderIds\n      .map((orderId) => `filter[order_id][]=${orderId}`)\n      .join('&')}`\n  );\n\nconst getOrderPortfolioItems = (itemIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items?${itemIds\n      .map((itemId) => `filter[id][]=${itemId}`)\n      .join('&')}`\n  );\n\nexport const getOrders = (filter, pagination = defaultSettings) =>\n  axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/orders?${filter}&limit=${pagination.limit}&offset=${pagination.offset}`\n    ) // eslint-disable-line max-len\n    .then((orders) =>\n      getOrderItems(orders.data.map(({ id }) => id)).then((orderItems) =>\n        getOrderPortfolioItems(\n          orderItems.data.map(({ portfolio_item_id }) => portfolio_item_id)\n        ).then((portfolioItems) => {\n          return {\n            portfolioItems,\n            ...orders,\n            data: orders.data.map((order) => ({\n              ...order,\n              orderItems: orderItems.data.filter(\n                ({ order_id }) => order_id === order.id\n              )\n            }))\n          };\n        })\n      )\n    );\n\nexport function getOrderApprovalRequests(orderItemId) {\n  return orderItemApi.listApprovalRequests(orderItemId);\n}\n\nexport const getOrderDetail = (params) => {\n  return Promise.all([\n    axiosInstance.get(`${CATALOG_API_BASE}/orders/${params.order}`),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}`\n    ),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/portfolio_items/${params['portfolio-item']}`\n    ),\n    axiosInstance.get(`${SOURCES_API_BASE}/sources/${params.platform}`),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}/progress_messages`\n    ),\n    axiosInstance.get(`${CATALOG_API_BASE}/portfolios/${params.portfolio}`),\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items/${params['order-item']}/approval_requests`\n    )\n  ]);\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport { ORDERS_ROUTE } from '../../constants/routes';\n\nconst OrderNotification = ({ id, dispatch }) => (\n  <Fragment>\n    You can track the progress of Order # {id} in your{' '}\n    <Link onClick={() => dispatch(clearNotifications())} to={ORDERS_ROUTE}>\n      Orders\n    </Link>{' '}\n    page.\n  </Fragment>\n);\n\nOrderNotification.propTypes = {\n  id: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default OrderNotification;\n","import React from 'react';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\n\nimport * as ActionTypes from '../action-types';\nimport * as OrderHelper from '../../helpers/order/order-helper';\nimport OrderNotification from '../../presentational-components/order/order-notification';\n\nexport const fetchServicePlans = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_SERVICE_PLANS,\n  payload: OrderHelper.getServicePlans(portfolioItemId)\n});\n\nexport const updateServiceData = (data) => ({\n  type: ActionTypes.UPDATE_SERVICE_DATA,\n  payload: { serviceData: data }\n});\n\nexport const setSelectedPlan = (data) => ({\n  type: ActionTypes.SET_SELECTED_PLAN,\n  payload: data\n});\n\nexport const sendSubmitOrder = (apiProps) => (dispatch) =>\n  dispatch({\n    type: ActionTypes.SUBMIT_SERVICE_ORDER,\n    payload: OrderHelper.sendSubmitOrder(apiProps).then(({ id }) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been accepted successfully',\n          description: <OrderNotification id={id} dispatch={dispatch} />,\n          dismissable: true\n        })\n      )\n    )\n  });\n\nexport const fetchRequests = () => ({\n  type: ActionTypes.FETCH_REQUESTS,\n  payload: OrderHelper.listRequests()\n});\n\nexport const cancelOrder = (orderId) => (dispatch, getState) => {\n  dispatch({ type: `${ActionTypes.CANCEL_ORDER}_PENDING` });\n  const {\n    orderReducer: { orderDetail }\n  } = getState();\n  return OrderHelper.cancelOrder(orderId)\n    .then(() => {\n      orderDetail.order.state = 'Canceled';\n      if (\n        orderDetail.approvalRequest &&\n        orderDetail.approvalRequest.length > 0\n      ) {\n        orderDetail.approvalRequest[0].state = 'canceled';\n      }\n\n      dispatch({\n        type: ActionTypes.SET_ORDER_DETAIL,\n        payload: { ...orderDetail }\n      });\n      return orderDetail;\n    })\n    .then((orderDetail) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been canceled successfully',\n          description: `Order ${`Order #${orderDetail.order.id}`} was canceled.`,\n          dismissable: true\n        })\n      )\n    )\n    .then(() => dispatch({ type: `${ActionTypes.CANCEL_ORDER}_FULFILLED` }))\n    .catch((error) => {\n      dispatch({\n        type: `${ActionTypes.CANCEL_ORDER}_REJECTED`,\n        payload: error\n      });\n    });\n};\n\nexport const fetchOrders = (filters, pagination) => (dispatch) => {\n  const queryFilter = Object.entries(filters)\n    .filter(([, value]) => value && value.length > 0)\n    .map(([key, value]) =>\n      Array.isArray(value)\n        ? value.map((value) => `filter[${key}][]=${value}`).join('&')\n        : `filter[${key}][contains_i]=${value}`\n    )\n    .join('&');\n  dispatch({ type: `${ActionTypes.FETCH_ORDERS}_PENDING` });\n  return OrderHelper.getOrders(queryFilter, pagination)\n    .then(({ portfolioItems, ...orders }) => {\n      dispatch({\n        type: ActionTypes.SET_PORTFOLIO_ITEMS,\n        payload: portfolioItems\n      });\n      return dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_FULFILLED`,\n        meta: { filter: queryFilter },\n        payload: orders\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchOrderDetails = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SET_ORDER_DETAIL}_PENDING` });\n  return OrderHelper.getOrderDetail(params)\n    .then(\n      ([\n        order,\n        orderItem,\n        portfolioItem,\n        platform,\n        progressMessages,\n        portfolio,\n        approvalRequest\n      ]) =>\n        dispatch({\n          type: `${ActionTypes.SET_ORDER_DETAIL}_FULFILLED`,\n          payload: {\n            order,\n            orderItem,\n            portfolioItem,\n            platform,\n            progressMessages,\n            portfolio,\n            approvalRequest\n          }\n        })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.SET_ORDER_DETAIL}_REJECTED`,\n        payload: error\n      })\n    );\n};\n","import { toolbarComponentTypes } from '../toolbar-mapper';\n\nconst createOrdersToolbarSchema = () => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      className: 'orders bg-fill pf-u-p-lg',\n      key: 'orders-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'orders-toolbar-title',\n          title: 'Orders',\n          className: ''\n        }\n      ]\n    }\n  ]\n});\n\nexport default createOrdersToolbarSchema;\n","import { CATALOG_API_BASE } from '../../utilities/constants';\n\nexport const getOrderIcon = ({ orderItems }) =>\n  orderItems[0] &&\n  `${CATALOG_API_BASE}/portfolio_items/${orderItems[0].portfolio_item_id}/icon`;\n\nexport const getOrderPortfolioName = ({ orderItems, id }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem ? portfolioItem.name : `Order ${id}`;\n};\n\nexport const getOrderPlatformId = ({ orderItems }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem\n    ? {\n        orderPlatform: portfolioItem.service_offering_source_ref,\n        orderPortfolio: portfolioItem.portfolio_id\n      }\n    : {};\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  DataListCell,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Grid,\n  GridItem,\n  Level,\n  LevelItem,\n  Split,\n  SplitItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/DateFormat';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport {\n  getOrderIcon,\n  getOrderPortfolioName,\n  getOrderPlatformId\n} from '../../helpers/shared/orders';\nimport CatalogLink from '../common/catalog-link';\nimport { ORDER_ROUTE, ORDER_APPROVAL_ROUTE } from '../../constants/routes';\n\nconst OrderItem = memo(\n  ({ item }) => {\n    const { orderPlatform, orderPortfolio, orderName } = useSelector(\n      ({\n        portfolioReducer: {\n          portfolioItems: { data }\n        }\n      }) => {\n        const { orderPlatform, orderPortfolio } = getOrderPlatformId(\n          item,\n          data\n        );\n        return {\n          orderPlatform,\n          orderPortfolio,\n          orderName: getOrderPortfolioName(item, data)\n        };\n      }\n    );\n    const orderItem = (item.orderItems[0] && item.orderItems[0]) || {};\n    const searchParams = {\n      order: item.id,\n      'order-item': orderItem.id,\n      'portfolio-item': orderItem.portfolio_item_id,\n      platform: orderPlatform,\n      portfolio: orderPortfolio\n    };\n    return (\n      <React.Fragment>\n        <DataListItem\n          aria-labelledby={`${item.id}-expand`}\n          className=\"data-list-expand-fix\"\n        >\n          <DataListItemRow>\n            <DataListItemCells\n              dataListCells={[\n                <DataListCell key=\"1\">\n                  <Split gutter=\"sm\">\n                    <SplitItem>\n                      <CardIcon\n                        height={60}\n                        src={getOrderIcon(item)}\n                        sourceId={orderPlatform}\n                      />\n                    </SplitItem>\n                    <SplitItem isFilled>\n                      <TextContent>\n                        <Grid gutter=\"sm\" className=\"pf-u-gg-md\">\n                          <GridItem>\n                            <Level>\n                              <LevelItem>\n                                <Text\n                                  className=\"pf-u-mb-0\"\n                                  component={TextVariants.h5}\n                                >\n                                  <CatalogLink\n                                    pathname={ORDER_ROUTE}\n                                    searchParams={searchParams}\n                                  >\n                                    {orderName} # {item.id}\n                                  </CatalogLink>\n                                </Text>\n                              </LevelItem>\n                              <LevelItem>\n                                <CatalogLink\n                                  pathname={ORDER_APPROVAL_ROUTE}\n                                  searchParams={searchParams}\n                                >\n                                  {item.state === 'Failed' && (\n                                    <ExclamationCircleIcon className=\"pf-u-mr-sm icon-danger-fill\" />\n                                  )}\n                                  {item.state}\n                                </CatalogLink>\n                              </LevelItem>\n                            </Level>\n                          </GridItem>\n                          <GridItem>\n                            <Level>\n                              <LevelItem>\n                                <Text\n                                  className=\"pf-u-mb-0\"\n                                  component={TextVariants.small}\n                                >\n                                  <DateFormat\n                                    date={item.created_at}\n                                    variant=\"relative\"\n                                  />\n                                </Text>\n                              </LevelItem>\n                              <LevelItem>\n                                <Text\n                                  className=\"pf-u-mb-0\"\n                                  component={TextVariants.small}\n                                >\n                                  Ordered by {item.owner}\n                                </Text>\n                              </LevelItem>\n                              <LevelItem>\n                                <Text\n                                  className=\"pf-u-mb-0\"\n                                  component={TextVariants.small}\n                                >\n                                  <DateFormat\n                                    date={\n                                      item.orderItems[0] &&\n                                      item.orderItems[0].updated_at\n                                    }\n                                    variant=\"relative\"\n                                  />\n                                </Text>\n                              </LevelItem>\n                            </Level>\n                          </GridItem>\n                        </Grid>\n                      </TextContent>\n                    </SplitItem>\n                  </Split>\n                </DataListCell>\n              ]}\n            />\n          </DataListItemRow>\n        </DataListItem>\n      </React.Fragment>\n    );\n  },\n  (prevProps, nextProps) => prevProps.id === nextProps.id\n);\n\nOrderItem.propTypes = {\n  item: PropTypes.object.isRequired\n};\n\nexport default OrderItem;\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  DataList,\n  Grid,\n  GridItem,\n  Title,\n  Bullseye,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Flex,\n  EmptyStateSecondaryActions,\n  Button\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/PrimaryToolbar';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/components/EmptyTable';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/TableToolbar';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { fetchOrders } from '../../redux/actions/order-actions';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport OrderItem from './order-item';\nimport AsyncPagination from '../common/async-pagination';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nconst debouncedFilter = asyncFormValidator(\n  (filters, meta = defaultSettings, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(fetchOrders(filters, meta)).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst initialState = {\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false,\n  filterType: 'state',\n  filters: {\n    state: [],\n    owner: ''\n  }\n};\n\nconst changeFilters = (value, type, filters) => ({\n  ...filters,\n  [type]: value\n});\n\nconst ordersListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return {\n        ...state,\n        filters: changeFilters(action.payload, state.filterType, state.filters)\n      };\n    case 'replaceFilterChip':\n      return { ...state, filters: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    case 'setFilterType':\n      return { ...state, filterType: action.payload };\n  }\n\n  return state;\n};\n\nconst OrdersList = () => {\n  const [\n    { isFetching, isFiltering, filterType, filters },\n    stateDispatch\n  ] = useReducer(ordersListState, initialState);\n  const { data, meta } = useSelector(({ orderReducer }) => orderReducer.orders);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.all([\n      dispatch(fetchOrders(filters, meta)),\n      dispatch(fetchPlatforms())\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const handlePagination = (_apiProps, pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    return dispatch(fetchOrders(filters, pagination))\n      .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n      .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      { ...filters, [filterType]: value },\n      meta,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  return (\n    <Grid gutter=\"md\">\n      <GridItem>\n        <Section type=\"content\">\n          {!meta.noData && (\n            <PrimaryToolbar\n              activeFiltersConfig={{\n                filters: Object.entries(filters)\n                  .filter(([, value]) => value && value.length > 0)\n                  .map(([key, value]) => ({\n                    category: key,\n                    type: key,\n                    chips: Array.isArray(value)\n                      ? value.map((name) => ({ name }))\n                      : [{ name: value }]\n                  })),\n                onDelete: (_e, [chip], clearAll) => {\n                  if (clearAll) {\n                    stateDispatch({\n                      type: 'replaceFilterChip',\n                      payload: initialState.filters\n                    });\n                    return debouncedFilter(\n                      initialState.filters,\n                      meta,\n                      dispatch,\n                      (isFiltering) =>\n                        stateDispatch({\n                          type: 'setFilteringFlag',\n                          payload: isFiltering\n                        })\n                    );\n                  }\n\n                  const newFilters = { ...filters };\n                  if (chip.type === 'state') {\n                    newFilters[chip.type] = newFilters[chip.type].filter(\n                      (value) => value !== chip.chips[0].name\n                    );\n                  } else {\n                    newFilters[chip.type] = '';\n                  }\n\n                  stateDispatch({\n                    type: 'replaceFilterChip',\n                    payload: newFilters\n                  });\n                  debouncedFilter(newFilters, meta, dispatch, (isFiltering) =>\n                    stateDispatch({\n                      type: 'setFilteringFlag',\n                      payload: isFiltering\n                    })\n                  );\n                }\n              }}\n              filterConfig={{\n                onChange: (_e, value) =>\n                  stateDispatch({ type: 'setFilterType', payload: value }),\n                value: filterType,\n                items: [\n                  {\n                    filterValues: {\n                      items: [\n                        {\n                          value: 'Failed',\n                          label: 'Failed'\n                        },\n                        {\n                          value: 'Completed',\n                          label: 'Completed'\n                        },\n                        {\n                          value: 'Approval Pending',\n                          label: 'Approval Pending'\n                        }\n                      ],\n                      value: filters.state,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'State',\n                    value: 'state',\n                    type: 'checkbox'\n                  },\n                  {\n                    filterValues: {\n                      value: filters.owner,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'Owner',\n                    value: 'owner'\n                  }\n                ]\n              }}\n              pagination={\n                <AsyncPagination\n                  isDisabled={isFetching || isFiltering}\n                  apiRequest={handlePagination}\n                  meta={meta}\n                  isCompact\n                />\n              }\n            />\n          )}\n          <DataList aria-label=\"order-list\">\n            {isFiltering || isFetching ? (\n              <ListLoader />\n            ) : data.length > 0 ? (\n              data.map((item, index) => (\n                <OrderItem key={item.id} index={index} item={item} />\n              ))\n            ) : (\n              <EmptyTable>\n                <Bullseye>\n                  <EmptyState>\n                    <Bullseye>\n                      <EmptyStateIcon icon={SearchIcon} />\n                    </Bullseye>\n                    <Title size=\"lg\">\n                      {meta.noData ? 'No orders' : 'No results found'}\n                    </Title>\n                    <EmptyStateBody>\n                      {meta.noData\n                        ? 'No orders have been created.'\n                        : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'}\n                    </EmptyStateBody>\n\n                    <EmptyStateSecondaryActions>\n                      {!meta.noData && (\n                        <Button\n                          variant=\"link\"\n                          onClick={() => {\n                            stateDispatch({\n                              type: 'setFilteringFlag',\n                              payload: true\n                            });\n                            handleFilterItems('');\n                          }}\n                        >\n                          Clear all filters\n                        </Button>\n                      )}\n                    </EmptyStateSecondaryActions>\n                  </EmptyState>\n                </Bullseye>\n              </EmptyTable>\n            )}\n          </DataList>\n          <TableToolbar>\n            <div className=\"bottom-pagination-container\">\n              <Flex\n                className=\"example-border\"\n                breakpointMods={[{ modifier: 'justify-content-flex-end' }]}\n              >\n                {meta.count > 0 && (\n                  <AsyncPagination\n                    className=\"pf-u-mt-0\"\n                    isDisabled={isFetching || isFiltering}\n                    apiRequest={handlePagination}\n                    meta={meta}\n                  />\n                )}\n              </Flex>\n            </div>\n          </TableToolbar>\n        </Section>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default OrdersList;\n","import React, { useEffect } from 'react';\nimport { Stack } from '@patternfly/react-core';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createOrdersToolbarSchema from '../../toolbar/schemas/orders-toolbar.schema';\nimport OrdersList from './orders-list';\n\nconst Orders = () => {\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'orders', secondaryNav: true });\n  }, []);\n\n  return (\n    <Stack>\n      <ToolbarRenderer schema={createOrdersToolbarSchema()} />\n      <OrdersList />\n    </Stack>\n  );\n};\n\nexport default Orders;\n"],"sourceRoot":""}