{"version":3,"sources":["webpack:///./src/smart-components/platform/platform-details.js","webpack:///./src/messages/platforms.messages.ts","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/Card.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardBody.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Text/TextList.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Text/TextListItem.js"],"names":["PlatformDetails","formatMessage","useFormatMessage","platform","useSelector","platformReducer","selectedPlatform","type","className","component","TextVariants","h2","platformsMessages","platformSummary","TextListVariants","dl","TextListItemVariants","dt","platformVersion","dd","info","version","ansibleVersion","ansible_version","dateAdded","date","created_at","cloudConnectorId","cloud_connector_id","refreshState","refresh_state","refreshStarted","refresh_started_at","variant","refreshFinished","refresh_finished_at","lastSuccessfulRefresh","last_successful_refresh_at","lastRefreshMessage","last_refresh_message","split","map","line","idx","key","availabilityMessage","availability_message","lastChecked","last_checked_at","lastAvailable","last_available_at","workflowColumn","id","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","platformsNoDataDescription","connectSource","contactAdmin","title","noPlatforms","offeringTitle","offeringParameters","enabled","availabilityStatus","refreshTooltip","Object","defineProperty","exports","value","Card","CardContext","tslib_1","React","__importStar","card_1","__importDefault","react_styles_1","helpers_1","createContext","cardId","isExpanded","_a","children","isHoverable","isCompact","isSelectable","isSelected","isFlat","isRounded","isLarge","ouiaId","ouiaSafe","props","__rest","Component","ouiaProps","useOUIAProps","displayName","console","warn","createElement","Provider","assign","css","default","card","modifiers","hoverable","compact","selectable","selected","expanded","flat","rounded","displayLg","tabIndex","undefined","CardBody","isFilled","cardBody","noFill","TextList","ul","TextListItem","li"],"mappings":"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","file":"js/platform-details~31ecd969.7439493e8b03489b133e.js","sourcesContent":["import React from 'react';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport { useSelector } from 'react-redux';\nimport {\n  Card,\n  CardBody,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\n\nconst PlatformDetails = () => {\n  const formatMessage = useFormatMessage();\n  const platform = useSelector(\n    ({ platformReducer: { selectedPlatform } }) => selectedPlatform\n  );\n  return (\n    <Section type=\"content\">\n      <Card>\n        <CardBody>\n          <TextContent>\n            <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n              {formatMessage(platformsMessages.platformSummary)}\n            </Text>\n            <TextList component={TextListVariants.dl}>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.platformVersion)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                {platform?.info?.version}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.ansibleVersion)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                {platform?.info?.ansible_version}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.dateAdded)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                <DateFormat date={platform?.created_at} />\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.cloudConnectorId)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                {platform?.cloud_connector_id}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.refreshState)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                {platform?.refresh_state}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.refreshStarted)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                <DateFormat\n                  date={platform?.refresh_started_at}\n                  variant=\"relative\"\n                />\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.refreshFinished)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                <DateFormat\n                  date={platform.refresh_finished_at}\n                  variant=\"relative\"\n                />\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.lastSuccessfulRefresh)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                <DateFormat\n                  date={platform?.last_successful_refresh_at}\n                  variant=\"relative\"\n                />\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.lastRefreshMessage)}\n              </TextListItem>\n              {platform?.last_refresh_message?.split(/\\n/g).map((line, idx) => (\n                <TextListItem\n                  key={`message-key-${idx}`}\n                  component={TextListItemVariants.dd}\n                >\n                  {line}\n                </TextListItem>\n              ))}\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.availabilityMessage)}\n              </TextListItem>\n              {platform?.availability_message?.split(/\\n/g).map((line, idx) => (\n                <TextListItem\n                  key={`availability-message-key-${idx}`}\n                  component={TextListItemVariants.dd}\n                >\n                  {line}\n                </TextListItem>\n              ))}\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.lastChecked)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                <DateFormat\n                  date={platform?.last_checked_at}\n                  variant=\"relative\"\n                />\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.lastAvailable)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                <DateFormat\n                  date={platform?.last_available_at}\n                  variant=\"relative\"\n                />\n              </TextListItem>\n            </TextList>\n          </TextContent>\n        </CardBody>\n      </Card>{' '}\n    </Section>\n  );\n};\n\nexport default PlatformDetails;\n","import { defineMessages } from 'react-intl';\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  platformsNoDataDescription: {\n    id: 'platforms.list.configure-source',\n    defaultMessage: 'To get started, add an Ansible Tower cluster as a source.'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage: 'Go to Sources'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  },\n  platformVersion: {\n    id: 'platforms.version',\n    defaultMessage: 'Platform version'\n  },\n  ansibleVersion: {\n    id: 'platforms.ansible.version',\n    defaultMessage: 'Ansible version'\n  },\n  platformSummary: {\n    id: 'platforms.summary',\n    defaultMessage: 'Summmary'\n  },\n  cloudConnectorId: {\n    id: 'platform.cloudConnectorId',\n    defaultMessage: 'RedHat Connect Client Id'\n  },\n  refreshState: {\n    id: 'platforms.refreshState',\n    defaultMessage: 'Refresh state'\n  },\n  refreshStarted: {\n    id: 'platforms.refreshStarted',\n    defaultMessage: 'Refresh started'\n  },\n  refreshFinished: {\n    id: 'platforms.refreshFinished',\n    defaultMessage: 'Refresh finished'\n  },\n  lastSuccessfulRefresh: {\n    id: 'platforms.lastSuccessfulRefresh',\n    defaultMessage: 'Last successful refresh'\n  },\n  lastChecked: {\n    id: 'platforms.lastChecked',\n    defaultMessage: 'Last checked'\n  },\n  lastAvailable: {\n    id: 'platforms.lastAvailable',\n    defaultMessage: 'Last available'\n  },\n  enabled: {\n    id: 'platforms.enabled',\n    defaultMessage: 'Enabled'\n  },\n  availabilityStatus: {\n    id: 'platforms.availabilityStatus',\n    defaultMessage: 'Availability status'\n  },\n  dateAdded: {\n    id: 'platforms.dateAdded',\n    defaultMessage: 'Date added'\n  },\n  refreshTooltip: {\n    id: 'platforms.refreshTooltip',\n    defaultMessage: 'Refresh platform'\n  },\n  lastRefreshMessage: {\n    id: 'platforms.lastRefreshMessage',\n    defaultMessage: 'Last refresh message'\n  },\n  availabilityMessage: {\n    id: 'platforms.availabilityMessage',\n    defaultMessage: 'Availability message'\n  }\n});\n\nexport default platformsMessages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Card = exports.CardContext = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst helpers_1 = require(\"../../helpers\");\nexports.CardContext = React.createContext({\n    cardId: '',\n    isExpanded: false\n});\nexports.Card = (_a) => {\n    var { children = null, id = '', className = '', component = 'article', isHoverable = false, isCompact = false, isSelectable = false, isSelected = false, isFlat = false, isExpanded = false, isRounded = false, isLarge = false, ouiaId, ouiaSafe = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"id\", \"className\", \"component\", \"isHoverable\", \"isCompact\", \"isSelectable\", \"isSelected\", \"isFlat\", \"isExpanded\", \"isRounded\", \"isLarge\", \"ouiaId\", \"ouiaSafe\"]);\n    const Component = component;\n    const ouiaProps = helpers_1.useOUIAProps(exports.Card.displayName, ouiaId, ouiaSafe);\n    if (isCompact && isLarge) {\n        // eslint-disable-next-line no-console\n        console.warn('Card: Cannot use isCompact with isLarge. Defaulting to isCompact');\n        isLarge = false;\n    }\n    return (React.createElement(exports.CardContext.Provider, { value: {\n            cardId: id,\n            isExpanded\n        } },\n        React.createElement(Component, Object.assign({ id: id, className: react_styles_1.css(card_1.default.card, isHoverable && card_1.default.modifiers.hoverable, isCompact && card_1.default.modifiers.compact, isSelectable && card_1.default.modifiers.selectable, isSelected && isSelectable && card_1.default.modifiers.selected, isExpanded && card_1.default.modifiers.expanded, isFlat && card_1.default.modifiers.flat, isRounded && card_1.default.modifiers.rounded, isLarge && card_1.default.modifiers.displayLg, className), tabIndex: isSelectable ? '0' : undefined }, props, ouiaProps), children)));\n};\nexports.Card.displayName = 'Card';\n//# sourceMappingURL=Card.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardBody = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nexports.CardBody = (_a) => {\n    var { children = null, className = '', component = 'div', isFilled = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\", \"isFilled\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: react_styles_1.css(card_1.default.cardBody, !isFilled && card_1.default.modifiers.noFill, className) }, props), children));\n};\nexports.CardBody.displayName = 'CardBody';\n//# sourceMappingURL=CardBody.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextList = exports.TextListVariants = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nvar TextListVariants;\n(function (TextListVariants) {\n    TextListVariants[\"ul\"] = \"ul\";\n    TextListVariants[\"ol\"] = \"ol\";\n    TextListVariants[\"dl\"] = \"dl\";\n})(TextListVariants = exports.TextListVariants || (exports.TextListVariants = {}));\nexports.TextList = (_a) => {\n    var { children = null, className = '', component = TextListVariants.ul } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { \"data-pf-content\": true, className: react_styles_1.css(className) }), children));\n};\nexports.TextList.displayName = 'TextList';\n//# sourceMappingURL=TextList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextListItem = exports.TextListItemVariants = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nvar TextListItemVariants;\n(function (TextListItemVariants) {\n    TextListItemVariants[\"li\"] = \"li\";\n    TextListItemVariants[\"dt\"] = \"dt\";\n    TextListItemVariants[\"dd\"] = \"dd\";\n})(TextListItemVariants = exports.TextListItemVariants || (exports.TextListItemVariants = {}));\nexports.TextListItem = (_a) => {\n    var { children = null, className = '', component = TextListItemVariants.li } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { \"data-pf-content\": true, className: react_styles_1.css(className) }), children));\n};\nexports.TextListItem.displayName = 'TextListItem';\n//# sourceMappingURL=TextListItem.js.map"],"sourceRoot":""}