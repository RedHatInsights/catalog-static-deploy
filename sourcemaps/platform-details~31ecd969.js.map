{"version":3,"sources":["webpack:///./src/messages/platforms.messages.ts","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/Card.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardBody.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Text/TextList.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Text/TextListItem.js","webpack:///./src/smart-components/platform/platform-details.js"],"names":["platformsMessages","workflowColumn","id","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","platformsNoDataDescription","platformsDocTitle","connectSource","contactAdmin","title","noPlatforms","offeringTitle","offeringParameters","platformVersion","ansibleVersion","platformSummary","platformDetails","platformActivity","cloudConnectorId","refreshState","refreshStarted","refreshFinished","lastSuccessfulRefresh","lastChecked","lastAvailable","enabled","availabilityStatus","dateAdded","refreshTooltip","lastRefreshMessage","availabilityMessage","Object","defineProperty","exports","value","Card","CardContext","tslib_1","React","__importStar","card_1","__importDefault","react_styles_1","helpers_1","createContext","cardId","isExpanded","_a","children","className","component","isHoverable","isCompact","isSelectable","isSelected","isFlat","isRounded","isLarge","isFullHeight","isPlain","ouiaId","ouiaSafe","props","__rest","Component","ouiaProps","useOUIAProps","displayName","console","warn","createElement","Provider","assign","css","default","card","modifiers","hoverable","compact","selectable","selected","expanded","flat","rounded","displayLg","fullHeight","plain","tabIndex","undefined","CardBody","isFilled","cardBody","noFill","TextList","TextListVariants","ul","TextListItem","TextListItemVariants","li","PlatformDetails","formatMessage","useFormatMessage","platform","useSelector","platformReducer","selectedPlatform","type","hasGutter","span","TextVariants","h2","dl","dt","dd","info","version","ansible_version","date","created_at","cloud_connector_id","refresh_state","refresh_started_at","variant","refresh_finished_at","last_successful_refresh_at","last_refresh_message","split","map","line","idx","key","availability_message","last_checked_at","last_available_at"],"mappings":"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","file":"js/platform-details~31ecd969.96deccb83fd387ed0527.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  platformsNoDataDescription: {\n    id: 'platforms.list.configure-source',\n    defaultMessage:\n      'Ansible Automation Services Catalog can be added by following the'\n  },\n  platformsDocTitle: {\n    id: 'platforms.doc.title',\n    defaultMessage: 'Ansible Automation Platform 2.0 BETA documentation'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage: 'Go to Sources'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  },\n  platformVersion: {\n    id: 'platforms.version',\n    defaultMessage: 'Platform version'\n  },\n  ansibleVersion: {\n    id: 'platforms.ansible.version',\n    defaultMessage: 'Ansible version'\n  },\n  platformSummary: {\n    id: 'platforms.summary',\n    defaultMessage: 'Summary'\n  },\n  platformDetails: {\n    id: 'platforms.details',\n    defaultMessage: 'Details'\n  },\n  platformActivity: {\n    id: 'platforms.activity',\n    defaultMessage: 'Activity'\n  },\n  cloudConnectorId: {\n    id: 'platform.cloudConnectorId',\n    defaultMessage: 'RedHat Connect Client Id'\n  },\n  refreshState: {\n    id: 'platforms.refreshState',\n    defaultMessage: 'Refresh state'\n  },\n  refreshStarted: {\n    id: 'platforms.refreshStarted',\n    defaultMessage: 'Refresh started'\n  },\n  refreshFinished: {\n    id: 'platforms.refreshFinished',\n    defaultMessage: 'Refresh finished'\n  },\n  lastSuccessfulRefresh: {\n    id: 'platforms.lastSuccessfulRefresh',\n    defaultMessage: 'Last successful refresh'\n  },\n  lastChecked: {\n    id: 'platforms.lastChecked',\n    defaultMessage: 'Last checked'\n  },\n  lastAvailable: {\n    id: 'platforms.lastAvailable',\n    defaultMessage: 'Last available'\n  },\n  enabled: {\n    id: 'platforms.enabled',\n    defaultMessage: 'Enabled'\n  },\n  availabilityStatus: {\n    id: 'platforms.availabilityStatus',\n    defaultMessage: 'Availability status'\n  },\n  dateAdded: {\n    id: 'platforms.dateAdded',\n    defaultMessage: 'Date added'\n  },\n  refreshTooltip: {\n    id: 'platforms.refreshTooltip',\n    defaultMessage: 'Refresh platform'\n  },\n  lastRefreshMessage: {\n    id: 'platforms.lastRefreshMessage',\n    defaultMessage: 'Last refresh message'\n  },\n  availabilityMessage: {\n    id: 'platforms.availabilityMessage',\n    defaultMessage: 'Availability message'\n  }\n});\n\nexport default platformsMessages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Card = exports.CardContext = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst helpers_1 = require(\"../../helpers\");\nexports.CardContext = React.createContext({\n    cardId: '',\n    isExpanded: false\n});\nexports.Card = (_a) => {\n    var { children = null, id = '', className = '', component = 'article', isHoverable = false, isCompact = false, isSelectable = false, isSelected = false, isFlat = false, isExpanded = false, isRounded = false, isLarge = false, isFullHeight = false, isPlain = false, ouiaId, ouiaSafe = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"id\", \"className\", \"component\", \"isHoverable\", \"isCompact\", \"isSelectable\", \"isSelected\", \"isFlat\", \"isExpanded\", \"isRounded\", \"isLarge\", \"isFullHeight\", \"isPlain\", \"ouiaId\", \"ouiaSafe\"]);\n    const Component = component;\n    const ouiaProps = helpers_1.useOUIAProps(exports.Card.displayName, ouiaId, ouiaSafe);\n    if (isCompact && isLarge) {\n        // eslint-disable-next-line no-console\n        console.warn('Card: Cannot use isCompact with isLarge. Defaulting to isCompact');\n        isLarge = false;\n    }\n    return (React.createElement(exports.CardContext.Provider, { value: {\n            cardId: id,\n            isExpanded\n        } },\n        React.createElement(Component, Object.assign({ id: id, className: react_styles_1.css(card_1.default.card, isHoverable && card_1.default.modifiers.hoverable, isCompact && card_1.default.modifiers.compact, isSelectable && card_1.default.modifiers.selectable, isSelected && isSelectable && card_1.default.modifiers.selected, isExpanded && card_1.default.modifiers.expanded, isFlat && card_1.default.modifiers.flat, isRounded && card_1.default.modifiers.rounded, isLarge && card_1.default.modifiers.displayLg, isFullHeight && card_1.default.modifiers.fullHeight, isPlain && card_1.default.modifiers.plain, className), tabIndex: isSelectable ? '0' : undefined }, props, ouiaProps), children)));\n};\nexports.Card.displayName = 'Card';\n//# sourceMappingURL=Card.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardBody = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nexports.CardBody = (_a) => {\n    var { children = null, className = '', component = 'div', isFilled = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\", \"isFilled\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: react_styles_1.css(card_1.default.cardBody, !isFilled && card_1.default.modifiers.noFill, className) }, props), children));\n};\nexports.CardBody.displayName = 'CardBody';\n//# sourceMappingURL=CardBody.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextList = exports.TextListVariants = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nvar TextListVariants;\n(function (TextListVariants) {\n    TextListVariants[\"ul\"] = \"ul\";\n    TextListVariants[\"ol\"] = \"ol\";\n    TextListVariants[\"dl\"] = \"dl\";\n})(TextListVariants = exports.TextListVariants || (exports.TextListVariants = {}));\nexports.TextList = (_a) => {\n    var { children = null, className = '', component = TextListVariants.ul } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { \"data-pf-content\": true, className: react_styles_1.css(className) }), children));\n};\nexports.TextList.displayName = 'TextList';\n//# sourceMappingURL=TextList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextListItem = exports.TextListItemVariants = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nvar TextListItemVariants;\n(function (TextListItemVariants) {\n    TextListItemVariants[\"li\"] = \"li\";\n    TextListItemVariants[\"dt\"] = \"dt\";\n    TextListItemVariants[\"dd\"] = \"dd\";\n})(TextListItemVariants = exports.TextListItemVariants || (exports.TextListItemVariants = {}));\nexports.TextListItem = (_a) => {\n    var { children = null, className = '', component = TextListItemVariants.li } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { \"data-pf-content\": true, className: react_styles_1.css(className) }), children));\n};\nexports.TextListItem.displayName = 'TextListItem';\n//# sourceMappingURL=TextListItem.js.map","import React from 'react';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport { useSelector } from 'react-redux';\nimport {\n  Card,\n  CardBody,\n  Grid,\n  GridItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nconst PlatformDetails = () => {\n  const formatMessage = useFormatMessage();\n  const platform = useSelector(\n    ({ platformReducer: { selectedPlatform } }) => selectedPlatform\n  );\n  return (\n    <Section type=\"content\">\n      <Grid hasGutter>\n        <GridItem span={5} className=\"info-bar pf-u-p-0\">\n          <Card>\n            <CardBody>\n              <TextContent>\n                <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n                  {formatMessage(platformsMessages.platformDetails)}\n                </Text>\n                <TextList component={TextListVariants.dl}>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.platformVersion)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {platform?.info?.version}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.ansibleVersion)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {platform?.info?.ansible_version}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.dateAdded)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    <DateFormat date={platform?.created_at} />\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.cloudConnectorId)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {platform?.cloud_connector_id}\n                  </TextListItem>\n                </TextList>\n              </TextContent>\n            </CardBody>\n          </Card>{' '}\n        </GridItem>\n        <GridItem span={7} className=\"info-bar pf-u-p-0\">\n          <Card>\n            <CardBody>\n              <TextContent>\n                <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n                  {formatMessage(platformsMessages.platformActivity)}\n                </Text>\n                <TextList component={TextListVariants.dl}>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.refreshState)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {platform?.refresh_state}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.refreshStarted)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    <DateFormat\n                      date={platform?.refresh_started_at}\n                      variant=\"relative\"\n                    />\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.refreshFinished)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    <DateFormat\n                      date={platform.refresh_finished_at}\n                      variant=\"relative\"\n                    />\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.lastSuccessfulRefresh)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    <DateFormat\n                      date={platform?.last_successful_refresh_at}\n                      variant=\"relative\"\n                    />\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.lastRefreshMessage)}\n                  </TextListItem>\n                  {platform?.last_refresh_message\n                    ?.split(/\\n/g)\n                    .map((line, idx) => (\n                      <TextListItem\n                        key={`message-key-${idx}`}\n                        component={TextListItemVariants.dd}\n                      >\n                        {line}\n                      </TextListItem>\n                    ))}\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.availabilityMessage)}\n                  </TextListItem>\n                  {platform?.availability_message\n                    ?.split(/\\n/g)\n                    .map((line, idx) => (\n                      <TextListItem\n                        key={`availability-message-key-${idx}`}\n                        component={TextListItemVariants.dd}\n                      >\n                        {line}\n                      </TextListItem>\n                    ))}\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.lastChecked)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    <DateFormat\n                      date={platform?.last_checked_at}\n                      variant=\"relative\"\n                    />\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.lastAvailable)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    <DateFormat\n                      date={platform?.last_available_at}\n                      variant=\"relative\"\n                    />\n                  </TextListItem>\n                </TextList>\n              </TextContent>\n            </CardBody>\n          </Card>{' '}\n        </GridItem>\n      </Grid>\n    </Section>\n  );\n};\n\nexport default PlatformDetails;\n"],"sourceRoot":""}