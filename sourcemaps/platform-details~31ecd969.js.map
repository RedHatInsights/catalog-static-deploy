{"version":3,"sources":["webpack:///./src/messages/platforms.messages.ts","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/Card.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardBody.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Text/TextList.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Text/TextListItem.js","webpack:///./src/smart-components/platform/platform-details.js"],"names":["platformsMessages","workflowColumn","id","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","platformsNoDataDescription","connectSource","contactAdmin","title","noPlatforms","offeringTitle","offeringParameters","platformVersion","ansibleVersion","platformSummary","cloudConnectorId","refreshState","refreshStarted","refreshFinished","lastSuccessfulRefresh","lastChecked","lastAvailable","enabled","availabilityStatus","dateAdded","refreshTooltip","lastRefreshMessage","availabilityMessage","Object","defineProperty","exports","value","Card","CardContext","tslib_1","React","__importStar","card_1","__importDefault","react_styles_1","helpers_1","createContext","cardId","isExpanded","_a","children","className","component","isHoverable","isCompact","isSelectable","isSelected","isFlat","isRounded","isLarge","ouiaId","ouiaSafe","props","__rest","Component","ouiaProps","useOUIAProps","displayName","console","warn","createElement","Provider","assign","css","default","card","modifiers","hoverable","compact","selectable","selected","expanded","flat","rounded","displayLg","tabIndex","undefined","CardBody","isFilled","cardBody","noFill","TextList","TextListVariants","ul","TextListItem","TextListItemVariants","li","PlatformDetails","formatMessage","useFormatMessage","platform","useSelector","platformReducer","selectedPlatform","type","TextVariants","h2","dl","dt","dd","info","version","ansible_version","date","created_at","cloud_connector_id","refresh_state","refresh_started_at","variant","refresh_finished_at","last_successful_refresh_at","last_refresh_message","split","map","line","idx","key","availability_message","last_checked_at","last_available_at"],"mappings":"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","file":"js/platform-details~31ecd969.c033130f29de3a80ff85.js","sourcesContent":["import { defineMessages } from 'react-intl';\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  platformsNoDataDescription: {\n    id: 'platforms.list.configure-source',\n    defaultMessage: 'To get started, add an Ansible Tower cluster as a source.'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage: 'Go to Sources'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  },\n  platformVersion: {\n    id: 'platforms.version',\n    defaultMessage: 'Platform version'\n  },\n  ansibleVersion: {\n    id: 'platforms.ansible.version',\n    defaultMessage: 'Ansible version'\n  },\n  platformSummary: {\n    id: 'platforms.summary',\n    defaultMessage: 'Summmary'\n  },\n  cloudConnectorId: {\n    id: 'platform.cloudConnectorId',\n    defaultMessage: 'RedHat Connect Client Id'\n  },\n  refreshState: {\n    id: 'platforms.refreshState',\n    defaultMessage: 'Refresh state'\n  },\n  refreshStarted: {\n    id: 'platforms.refreshStarted',\n    defaultMessage: 'Refresh started'\n  },\n  refreshFinished: {\n    id: 'platforms.refreshFinished',\n    defaultMessage: 'Refresh finished'\n  },\n  lastSuccessfulRefresh: {\n    id: 'platforms.lastSuccessfulRefresh',\n    defaultMessage: 'Last successful refresh'\n  },\n  lastChecked: {\n    id: 'platforms.lastChecked',\n    defaultMessage: 'Last checked'\n  },\n  lastAvailable: {\n    id: 'platforms.lastAvailable',\n    defaultMessage: 'Last available'\n  },\n  enabled: {\n    id: 'platforms.enabled',\n    defaultMessage: 'Enabled'\n  },\n  availabilityStatus: {\n    id: 'platforms.availabilityStatus',\n    defaultMessage: 'Availability status'\n  },\n  dateAdded: {\n    id: 'platforms.dateAdded',\n    defaultMessage: 'Date added'\n  },\n  refreshTooltip: {\n    id: 'platforms.refreshTooltip',\n    defaultMessage: 'Refresh platform'\n  },\n  lastRefreshMessage: {\n    id: 'platforms.lastRefreshMessage',\n    defaultMessage: 'Last refresh message'\n  },\n  availabilityMessage: {\n    id: 'platforms.availabilityMessage',\n    defaultMessage: 'Availability message'\n  }\n});\n\nexport default platformsMessages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Card = exports.CardContext = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst helpers_1 = require(\"../../helpers\");\nexports.CardContext = React.createContext({\n    cardId: '',\n    isExpanded: false\n});\nexports.Card = (_a) => {\n    var { children = null, id = '', className = '', component = 'article', isHoverable = false, isCompact = false, isSelectable = false, isSelected = false, isFlat = false, isExpanded = false, isRounded = false, isLarge = false, ouiaId, ouiaSafe = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"id\", \"className\", \"component\", \"isHoverable\", \"isCompact\", \"isSelectable\", \"isSelected\", \"isFlat\", \"isExpanded\", \"isRounded\", \"isLarge\", \"ouiaId\", \"ouiaSafe\"]);\n    const Component = component;\n    const ouiaProps = helpers_1.useOUIAProps(exports.Card.displayName, ouiaId, ouiaSafe);\n    if (isCompact && isLarge) {\n        // eslint-disable-next-line no-console\n        console.warn('Card: Cannot use isCompact with isLarge. Defaulting to isCompact');\n        isLarge = false;\n    }\n    return (React.createElement(exports.CardContext.Provider, { value: {\n            cardId: id,\n            isExpanded\n        } },\n        React.createElement(Component, Object.assign({ id: id, className: react_styles_1.css(card_1.default.card, isHoverable && card_1.default.modifiers.hoverable, isCompact && card_1.default.modifiers.compact, isSelectable && card_1.default.modifiers.selectable, isSelected && isSelectable && card_1.default.modifiers.selected, isExpanded && card_1.default.modifiers.expanded, isFlat && card_1.default.modifiers.flat, isRounded && card_1.default.modifiers.rounded, isLarge && card_1.default.modifiers.displayLg, className), tabIndex: isSelectable ? '0' : undefined }, props, ouiaProps), children)));\n};\nexports.Card.displayName = 'Card';\n//# sourceMappingURL=Card.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardBody = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nexports.CardBody = (_a) => {\n    var { children = null, className = '', component = 'div', isFilled = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\", \"isFilled\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: react_styles_1.css(card_1.default.cardBody, !isFilled && card_1.default.modifiers.noFill, className) }, props), children));\n};\nexports.CardBody.displayName = 'CardBody';\n//# sourceMappingURL=CardBody.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextList = exports.TextListVariants = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nvar TextListVariants;\n(function (TextListVariants) {\n    TextListVariants[\"ul\"] = \"ul\";\n    TextListVariants[\"ol\"] = \"ol\";\n    TextListVariants[\"dl\"] = \"dl\";\n})(TextListVariants = exports.TextListVariants || (exports.TextListVariants = {}));\nexports.TextList = (_a) => {\n    var { children = null, className = '', component = TextListVariants.ul } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { \"data-pf-content\": true, className: react_styles_1.css(className) }), children));\n};\nexports.TextList.displayName = 'TextList';\n//# sourceMappingURL=TextList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextListItem = exports.TextListItemVariants = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nvar TextListItemVariants;\n(function (TextListItemVariants) {\n    TextListItemVariants[\"li\"] = \"li\";\n    TextListItemVariants[\"dt\"] = \"dt\";\n    TextListItemVariants[\"dd\"] = \"dd\";\n})(TextListItemVariants = exports.TextListItemVariants || (exports.TextListItemVariants = {}));\nexports.TextListItem = (_a) => {\n    var { children = null, className = '', component = TextListItemVariants.li } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { \"data-pf-content\": true, className: react_styles_1.css(className) }), children));\n};\nexports.TextListItem.displayName = 'TextListItem';\n//# sourceMappingURL=TextListItem.js.map","import React from 'react';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport { useSelector } from 'react-redux';\nimport {\n  Card,\n  CardBody,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nconst PlatformDetails = () => {\n  const formatMessage = useFormatMessage();\n  const platform = useSelector(\n    ({ platformReducer: { selectedPlatform } }) => selectedPlatform\n  );\n  return (\n    <Section type=\"content\">\n      <Card>\n        <CardBody>\n          <TextContent>\n            <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n              {formatMessage(platformsMessages.platformSummary)}\n            </Text>\n            <TextList component={TextListVariants.dl}>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.platformVersion)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                {platform?.info?.version}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.ansibleVersion)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                {platform?.info?.ansible_version}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.dateAdded)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                <DateFormat date={platform?.created_at} />\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.cloudConnectorId)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                {platform?.cloud_connector_id}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.refreshState)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                {platform?.refresh_state}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.refreshStarted)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                <DateFormat\n                  date={platform?.refresh_started_at}\n                  variant=\"relative\"\n                />\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.refreshFinished)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                <DateFormat\n                  date={platform.refresh_finished_at}\n                  variant=\"relative\"\n                />\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.lastSuccessfulRefresh)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                <DateFormat\n                  date={platform?.last_successful_refresh_at}\n                  variant=\"relative\"\n                />\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.lastRefreshMessage)}\n              </TextListItem>\n              {platform?.last_refresh_message?.split(/\\n/g).map((line, idx) => (\n                <TextListItem\n                  key={`message-key-${idx}`}\n                  component={TextListItemVariants.dd}\n                >\n                  {line}\n                </TextListItem>\n              ))}\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.availabilityMessage)}\n              </TextListItem>\n              {platform?.availability_message?.split(/\\n/g).map((line, idx) => (\n                <TextListItem\n                  key={`availability-message-key-${idx}`}\n                  component={TextListItemVariants.dd}\n                >\n                  {line}\n                </TextListItem>\n              ))}\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.lastChecked)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                <DateFormat\n                  date={platform?.last_checked_at}\n                  variant=\"relative\"\n                />\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                {formatMessage(platformsMessages.lastAvailable)}\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                <DateFormat\n                  date={platform?.last_available_at}\n                  variant=\"relative\"\n                />\n              </TextListItem>\n            </TextList>\n          </TextContent>\n        </CardBody>\n      </Card>{' '}\n    </Section>\n  );\n};\n\nexport default PlatformDetails;\n"],"sourceRoot":""}