{"version":3,"file":"js/portfolios.1644603873936.549585cd18e31ac6a6c0.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/search-icon.js","webpack:///./src/presentational-components/portfolio/portfolio-card-header.tsx","webpack:///./src/presentational-components/portfolio/porfolio-card.tsx","webpack:///./src/smart-components/portfolio/toolbars/portfolios-primary-toolbar.js","webpack:///./src/smart-components/portfolio/portfolios.js","webpack:///./src/utilities/use-is-mounted.js","webpack:///./node_modules/react-truncate/lib/Truncate.js","webpack:///./src/messages/filtering.messages.ts","webpack:///./src/presentational-components/shared/bottom-pagination-container.tsx","webpack:///./src/presentational-components/shared/card-common.tsx","webpack:///./src/presentational-components/shared/conditional-link.tsx","webpack:///./src/presentational-components/shared/content-gallery-empty-state.tsx","webpack:///./src/presentational-components/shared/top-toolbar.tsx","webpack:///./src/presentational-components/styled-components/card.ts","webpack:///./src/presentational-components/styled-components/ellipsis-text-container.ts","webpack:///./src/presentational-components/styled-components/styled-gallery.tsx","webpack:///./src/smart-components/common/async-pagination.tsx","webpack:///./src/smart-components/common/catalog-breadcrumbs.tsx","webpack:///./src/smart-components/common/catalog-link.tsx","webpack:///./src/smart-components/content-gallery/content-gallery.tsx"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PlusCircleIcon = require('../createIcon').createIcon(exports.PlusCircleIconConfig);\nexports[\"default\"] = exports.PlusCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.SearchIconConfig = {\n  name: 'SearchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.SearchIcon = require('../createIcon').createIcon(exports.SearchIconConfig);\nexports[\"default\"] = exports.SearchIcon;","/* eslint-disable react/prop-types */\nimport React, { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Badge, Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { CatalogLinkTo } from '../../smart-components/common/catalog-link';\nimport { HeaderLevel, HeaderTitle } from '../shared/card-common';\n\nexport interface PortfolioCardHeaderProps {\n  id: string;\n  to: CatalogLinkTo;\n  portfolioName?: string;\n  portfolio_items: number;\n  headerActions: ReactNode;\n}\nconst PortfolioCardHeader: React.ComponentType<PortfolioCardHeaderProps> = ({\n  id,\n  to,\n  portfolioName,\n  portfolio_items,\n  headerActions = []\n}) => (\n  <HeaderLevel>\n    <HeaderTitle>\n      <TextContent>\n        <Link to={to} id={`portfolio-link-${id}`}>\n          <Text\n            title={portfolioName}\n            className=\"pf-u-mb-0\"\n            component={TextVariants.h3}\n          >\n            <EllipsisTextContainer>{portfolioName}</EllipsisTextContainer>\n          </Text>\n        </Link>\n      </TextContent>\n    </HeaderTitle>\n    <Badge isRead>{portfolio_items}</Badge>\n    <div onClick={(event) => event.preventDefault()}>{headerActions}</div>\n  </HeaderLevel>\n);\n\nexport default PortfolioCardHeader;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport ItemDetails from '../shared/card-common';\nimport {\n  CardHeader,\n  CardFooter,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  Text,\n  TextContent,\n  TextVariants,\n  Label\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport PortfolioCardHeader from './portfolio-card-header';\n\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport {\n  SHARE_PORTFOLIO_ROUTE,\n  EDIT_PORTFOLIO_WORKFLOW_ROUTE,\n  EDIT_PORTFOLIO_ROUTE,\n  REMOVE_PORTFOLIO_ROUTE,\n  PORTFOLIO_ROUTE,\n  EDIT_ORDER_PROCESS_ROUTE\n} from '../../constants/routes';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../styled-components/styled-gallery';\nimport { StyledCardBody } from '../styled-components/card';\nimport actionMessages from '../../messages/actions.messages';\nimport labelMessages from '../../messages/labels.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\nimport { UserCapabilities, PortfolioMetadata } from '../../types/common-types';\nimport { USER_CAPABILITIES_PLACEHOLDER } from '../../utilities/constants';\nimport { isStandalone } from '../../helpers/shared/helpers';\n\nconst TO_DISPLAY = ['description'];\n\ninterface HeaderActionsProps {\n  portfolioId: string;\n  handleCopyPortfolio: (portfolioId: string) => void;\n  userCapabilities: UserCapabilities;\n  canLinkOrderProcesses: boolean;\n}\nconst HeaderActions: React.ComponentType<HeaderActionsProps> = ({\n  portfolioId,\n  handleCopyPortfolio,\n  canLinkOrderProcesses,\n  userCapabilities: { share, copy, unshare, update, destroy, set_approval }\n}) => {\n  const formatMessage = useFormatMessage();\n  const [isOpen, setOpen] = useState(false);\n  const dropdownItems = [];\n  if (share || unshare) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"share-portfolio-action\"\n        id=\"share-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={SHARE_PORTFOLIO_ROUTE}\n            preserveHash\n          >\n            {formatMessage(actionMessages.share)}\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  if (copy) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"copy-portfolio-action\"\n        id=\"copy-portfolio-action\"\n        onClick={() => handleCopyPortfolio(portfolioId)}\n      >\n        {formatMessage(actionMessages.copy)}\n      </DropdownItem>\n    );\n  }\n\n  if (set_approval) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"workflow-portfolio-action\"\n        id=\"workflow-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={EDIT_PORTFOLIO_WORKFLOW_ROUTE}\n            preserveHash\n          >\n            {formatMessage(actionMessages.setApproval)}\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  if (update && canLinkOrderProcesses) {\n    const orderProcessAction = formatMessage(\n      orderProcessesMessages.setOrderProcess\n    ) as string;\n    dropdownItems.push(\n      <DropdownItem\n        aria-label={orderProcessAction}\n        key=\"attach-order-processes\"\n        id=\"attach-order-processes\"\n        component={\n          <CatalogLink\n            preserveSearch\n            pathname={EDIT_ORDER_PROCESS_ROUTE}\n            searchParams={{ portfolio: portfolioId }}\n          >\n            {orderProcessAction}\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"edit-portfolio-action\"\n        id=\"edit-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={EDIT_PORTFOLIO_ROUTE}\n            preserveHash\n          >\n            {formatMessage(actionMessages.edit)}\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  if (destroy) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"remove-portfolio-action\"\n        id=\"remove-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={REMOVE_PORTFOLIO_ROUTE}\n            preserveHash\n          >\n            {formatMessage(actionMessages.delete)}\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  return dropdownItems.length === 0 ? null : (\n    <Dropdown\n      key=\"portfolio-dropdown\"\n      id={`portfolio-${portfolioId}-dropdown`}\n      isOpen={isOpen}\n      isPlain\n      onSelect={() => setOpen(false)}\n      position={DropdownPosition.right}\n      toggle={\n        <KebabToggle\n          id={`portfolio-${portfolioId}-toggle`}\n          onToggle={(isOpen) => setOpen(isOpen)}\n        />\n      }\n      dropdownItems={dropdownItems}\n    />\n  );\n};\n\nexport interface PortfolioCardProps {\n  imageUrl?: string;\n  name?: string;\n  id: string;\n  updated_at?: string;\n  created_at: string;\n  owner?: string;\n  isDisabled?: boolean;\n  metadata: PortfolioMetadata;\n  handleCopyPortfolio: (portfolioId: string) => void;\n  canLinkOrderProcesses: boolean;\n}\nconst PortfolioCard: React.ComponentType<PortfolioCardProps> = ({\n  imageUrl,\n  isDisabled,\n  name,\n  id,\n  handleCopyPortfolio,\n  metadata,\n  canLinkOrderProcesses,\n  ...props\n}) => {\n  const formatMessage = useFormatMessage();\n  const to = {\n    pathname: PORTFOLIO_ROUTE,\n    search: `?portfolio=${id}`\n  };\n  const user_capabilities = isStandalone()\n    ? USER_CAPABILITIES_PLACEHOLDER\n    : metadata?.user_capabilities || {};\n  const statistics = metadata?.statistics || {};\n  const portfolio_items = statistics?.portfolio_items ?? 0;\n  const approval_processes = statistics?.approval_processes ?? 0;\n  const shared_groups = statistics?.shared_groups ?? 0;\n  return (\n    <StyledGalleryItem isDisabled={isDisabled}>\n      <StyledCard ouiaId={`portfolio-${id}`}>\n        <CardHeader>\n          <PortfolioCardHeader\n            id={id}\n            to={to}\n            portfolioName={name}\n            portfolio_items={portfolio_items}\n            headerActions={\n              <HeaderActions\n                portfolioId={id}\n                userCapabilities={user_capabilities}\n                handleCopyPortfolio={handleCopyPortfolio}\n                canLinkOrderProcesses={canLinkOrderProcesses}\n              />\n            }\n          />\n        </CardHeader>\n        <StyledCardBody>\n          <TextContent className=\"pf-u-mb-md\">\n            <Text component={TextVariants.small} className=\"pf-u-mb-0\">\n              Last updated&nbsp;\n              <DateFormat\n                date={props.updated_at || props.created_at}\n                type=\"relative\"\n              />\n            </Text>\n            <Text component={TextVariants.small}>by {props.owner}</Text>\n          </TextContent>\n          <ItemDetails\n            {...{ name, imageUrl, ...props }}\n            toDisplay={TO_DISPLAY}\n          />\n        </StyledCardBody>\n        <CardFooter>\n          {approval_processes > 0 && (\n            <Label variant=\"filled\" color=\"grey\">\n              {formatMessage(labelMessages.approvalProcessSet)}\n            </Label>\n          )}\n          &nbsp;\n          {shared_groups > 0 && (\n            <Label variant=\"filled\" color=\"grey\">\n              {formatMessage(labelMessages.shared)}\n            </Label>\n          )}\n        </CardFooter>\n      </StyledCard>\n    </StyledGalleryItem>\n  );\n};\n\nexport default PortfolioCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\n\nimport AsyncPagination from '../../common/async-pagination';\nimport CatalogLink from '../../common/catalog-link';\nimport { Button } from '@patternfly/react-core';\nimport labelMessages from '../../../messages/labels.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\n\nconst chipCategories = {\n  name: labelMessages.name,\n  owner: labelMessages.owner,\n  sort_by: labelMessages.sortBy\n};\n\nconst sortByMapping = {\n  name: labelMessages.name,\n  owner: labelMessages.owner,\n  updated_at: labelMessages.updated,\n  created_at: labelMessages.created\n};\n\nconst PortfoliosPrimaryToolbar = ({\n  filters,\n  stateDispatch,\n  debouncedFilter,\n  initialState,\n  meta,\n  filterType,\n  handleFilterItems,\n  sortDirection,\n  handleSort,\n  fetchPortfoliosWithState,\n  isFetching,\n  isFiltering,\n  canCreate\n}) => {\n  const dispatch = useDispatch();\n  const formatMessage = useFormatMessage();\n  if (meta?.noData) {\n    return null;\n  }\n\n  return (\n    <PrimaryToolbar\n      {...(canCreate\n        ? {\n            dedicatedAction: (\n              <CatalogLink pathname=\"/portfolios/add-portfolio\">\n                <Button\n                  variant=\"primary\"\n                  id=\"create-portfolio\"\n                  ouiaId={'create-portfolio'}\n                  type=\"button\"\n                >\n                  {formatMessage(labelMessages.create)}\n                </Button>\n              </CatalogLink>\n            )\n          }\n        : {})}\n      activeFiltersConfig={{\n        filters: Object.entries(filters)\n          .filter(([, value]) => value && value.length > 0)\n          .map(([key, value]) => {\n            return {\n              category: formatMessage(chipCategories[key]),\n              type: key,\n              chips: Array.isArray(value)\n                ? value.map((name) => ({\n                    name\n                  }))\n                : [\n                    {\n                      name:\n                        key === 'sort_by'\n                          ? formatMessage(sortByMapping[value])\n                          : value\n                    }\n                  ]\n            };\n          }),\n        onDelete: (_e, [chip], clearAll) => {\n          if (clearAll) {\n            stateDispatch({\n              type: 'replaceFilterChip',\n              payload: initialState.filters\n            });\n            return debouncedFilter(\n              initialState.filters,\n              meta,\n              dispatch,\n              (isFiltering) =>\n                stateDispatch({\n                  type: 'setFilteringFlag',\n                  payload: isFiltering\n                })\n            );\n          }\n\n          const newFilters = { ...filters };\n          if (chip.type === 'state') {\n            newFilters[chip.type] = newFilters[chip.type].filter(\n              (value) => value !== chip.chips[0].name\n            );\n          } else {\n            newFilters[chip.type] = '';\n          }\n\n          stateDispatch({\n            type: 'replaceFilterChip',\n            payload: newFilters\n          });\n          debouncedFilter(newFilters, meta, dispatch, (isFiltering) =>\n            stateDispatch({\n              type: 'setFilteringFlag',\n              payload: isFiltering\n            })\n          );\n        }\n      }}\n      filterConfig={{\n        onChange: (_e, value) =>\n          stateDispatch({ type: 'setFilterType', payload: value }),\n        value: filterType,\n        items: [\n          {\n            filterValues: {\n              value: filters.name,\n              onChange: (_e, value) => handleFilterItems(value)\n            },\n            label: formatMessage(labelMessages.name),\n            value: 'name'\n          },\n          {\n            filterValues: {\n              value: filters.owner,\n              onChange: (_e, value) => handleFilterItems(value)\n            },\n            label: formatMessage(labelMessages.owner),\n            value: 'owner'\n          },\n          {\n            filterValues: {\n              value: filters.sort_by || 'name',\n              onChange: (_e, value) => handleFilterItems(value),\n              items: [\n                {\n                  label: formatMessage(labelMessages.name),\n                  value: 'name'\n                },\n                {\n                  label: formatMessage(labelMessages.owner),\n                  value: 'owner'\n                },\n                {\n                  label: formatMessage(labelMessages.created),\n                  value: 'created_at'\n                },\n                {\n                  label: formatMessage(labelMessages.updated),\n                  value: 'updated_at'\n                }\n              ]\n            },\n            placeholder: filters.sort_by\n              ? formatMessage(sortByMapping[filters.sort_by])\n              : formatMessage(labelMessages.name),\n            label: formatMessage(labelMessages.sortBy),\n            value: 'sort_by',\n            type: 'radio'\n          }\n        ]\n      }}\n      sortByConfig={{\n        direction: sortDirection,\n        onSortChange: (_event, direction) => handleSort(direction)\n      }}\n      pagination={\n        meta?.count > 0 ? (\n          <AsyncPagination\n            isDisabled={isFetching || isFiltering}\n            meta={meta}\n            apiRequest={(_, options) =>\n              dispatch(fetchPortfoliosWithState(filters, options))\n            }\n            isCompact\n          />\n        ) : (\n          undefined\n        )\n      }\n    />\n  );\n};\n\nPortfoliosPrimaryToolbar.propTypes = {\n  filters: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    owner: PropTypes.string.isRequired,\n    sort_by: PropTypes.string\n  }).isRequired,\n  stateDispatch: PropTypes.func.isRequired,\n  debouncedFilter: PropTypes.func.isRequired,\n  initialState: PropTypes.shape({\n    filters: PropTypes.shape({ [PropTypes.string]: PropTypes.any }).isRequired\n  }).isRequired,\n  meta: PropTypes.object,\n  filterType: PropTypes.string.isRequired,\n  handleFilterItems: PropTypes.func.isRequired,\n  sortDirection: PropTypes.string.isRequired,\n  handleSort: PropTypes.func.isRequired,\n  fetchPortfoliosWithState: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  isFiltering: PropTypes.bool.isRequired,\n  canCreate: PropTypes.bool\n};\n\nexport default PortfoliosPrimaryToolbar;\n","import React, { Fragment, useEffect, useReducer, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { PlusCircleIcon, SearchIcon } from '@patternfly/react-icons';\nimport { Button } from '@patternfly/react-core';\n\nimport { isStandalone, scrollToTop } from '../../helpers/shared/helpers';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport {\n  fetchPortfoliosWithState,\n  copyPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport {\n  fetchPortfoliosWithState as fetchPortfoliosWithStateS,\n  copyPortfolio as copyPortfolioS\n} from '../../redux/actions/portfolio-actions-s';\nimport PortfolioCard from '../../presentational-components/portfolio/porfolio-card';\nimport ContentGalleryEmptyState, {\n  EmptyStatePrimaryAction\n} from '../../presentational-components/shared/content-gallery-empty-state';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport { ADD_PORTFOLIO_ROUTE, PORTFOLIO_ROUTE } from '../../constants/routes';\nimport UserContext from '../../user-context';\nimport { hasPermission } from '../../helpers/shared/helpers';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport filteringMessages from '../../messages/filtering.messages';\nimport portfolioMessages from '../../messages/portfolio.messages';\n\nimport { SortByDirection } from '@patternfly/react-table';\nimport useIsMounted from '../../utilities/use-is-mounted';\nimport PortfoliosPrimaryToolbar from './toolbars/portfolios-primary-toolbar';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../../presentational-components/shared/top-toolbar';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst debouncedFilter = asyncFormValidator(\n  (filters, meta = defaultSettings, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(\n      isStandalone()\n        ? fetchPortfoliosWithStateS(filters, meta)\n        : fetchPortfoliosWithState(filters, meta)\n    ).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst initialState = {\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false,\n  filterType: 'name',\n  filters: {\n    name: '',\n    owner: '',\n    sort_by: undefined\n  },\n  sortDirection: SortByDirection.asc\n};\n\nconst changeFilters = (value, type, filters) => ({\n  ...filters,\n  [type]: value\n});\n\nconst portfoliosState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return {\n        ...state,\n        filters: changeFilters(action.payload, state.filterType, state.filters)\n      };\n    case 'replaceFilterChip':\n      return {\n        ...state,\n        sortDirection: SortByDirection.asc,\n        filters: action.payload\n      };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    case 'setFilterType':\n      return { ...state, filterType: action.payload };\n    case 'setSortBy':\n      return {\n        ...state,\n        sortDirection: action.payload,\n        filters: !state.filters.sort_by\n          ? { ...state.filters, sort_by: 'name' }\n          : state.filters\n      };\n  }\n\n  return state;\n};\n\nconst Portfolios = () => {\n  const formatMessage = useFormatMessage();\n  const viewState = useInitialUriHash();\n  const isMounted = useIsMounted();\n  const [\n    { isFetching, isFiltering, filters, filterType, sortDirection },\n    stateDispatch\n  ] = useReducer(portfoliosState, {\n    ...initialState,\n    ...viewState?.portfolio\n  });\n  const portfolios = useSelector(\n    ({ portfolioReducer: { portfolios } }) => portfolios\n  );\n  const meta = portfolios?.meta || { count: portfolios?.count };\n  const data = portfolios?.data || portfolios?.results;\n  const dispatch = useDispatch();\n  const { permissions: userPermissions } = useContext(UserContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(\n      isStandalone()\n        ? fetchPortfoliosWithStateS(filters, { ...meta, sortDirection })\n        : fetchPortfoliosWithState(filters, { ...meta, sortDirection })\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n  }, []);\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      { ...filters, [filterType]: value },\n      { ...meta, offset: 0, sortDirection },\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  useEffect(() => {\n    if (isMounted && (!isFiltering || !isFetching)) {\n      handleFilterItems(filters[filterType]);\n    }\n  }, [sortDirection]);\n\n  const handleSort = (direction) =>\n    stateDispatch({ type: 'setSortBy', payload: direction });\n\n  const handleCopyPortfolio = (id) =>\n    dispatch(isStandalone() ? copyPortfolioS(id) : copyPortfolio(id)).then(\n      ({ id }) =>\n        history.push({\n          pathname: PORTFOLIO_ROUTE,\n          search: `?portfolio=${id}`\n        })\n    );\n\n  const canCreate = hasPermission(userPermissions, [\n    'catalog:portfolios:create'\n  ]);\n\n  const canLinkOrderProcesses = hasPermission(userPermissions, [\n    'catalog:order_processes:link'\n  ]);\n\n  const NoDataAction = () => (\n    <EmptyStatePrimaryAction\n      url={ADD_PORTFOLIO_ROUTE}\n      id=\"create-portfolio\"\n      label=\"Create\"\n      hasPermission={canCreate}\n    />\n  );\n  const FilterAction = () => (\n    <Button\n      ouiaId={'clear-filter'}\n      variant=\"link\"\n      onClick={() => handleFilterItems('')}\n    >\n      {formatMessage(filteringMessages.clearFilters)}\n    </Button>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta?.noData ? NoDataAction : FilterAction,\n    title: meta?.noData\n      ? formatMessage(portfolioMessages.portfoliosNoData)\n      : formatMessage(filteringMessages.noResults),\n    description: meta?.noData\n      ? formatMessage(portfolioMessages.portfoliosNoDataDescription)\n      : formatMessage(filteringMessages.noResultsDescription),\n    Icon: meta?.noData ? PlusCircleIcon : SearchIcon\n  };\n  const galleryItems = data?.map((item) => (\n    <PortfolioCard\n      key={item.id}\n      ouiaId={`portfolio-${item.id}`}\n      {...item}\n      canLinkOrderProcesses={canLinkOrderProcesses}\n      handleCopyPortfolio={handleCopyPortfolio}\n    />\n  ));\n  return (\n    <Fragment>\n      <TopToolbar>\n        <TopToolbarTitle\n          title={formatMessage(portfolioMessages.portfoliosTitle)}\n        />\n        <PortfoliosPrimaryToolbar\n          filters={filters}\n          stateDispatch={stateDispatch}\n          debouncedFilter={debouncedFilter}\n          initialState={initialState}\n          meta={meta}\n          filterType={filterType}\n          handleFilterItems={handleFilterItems}\n          sortDirection={sortDirection}\n          handleSort={handleSort}\n          fetchPortfoliosWithState={\n            isStandalone()\n              ? fetchPortfoliosWithStateS\n              : fetchPortfoliosWithState\n          }\n          isFetching={isFetching}\n          isFiltering={isFiltering}\n          canCreate={canCreate}\n        />\n      </TopToolbar>\n      <ContentGallery\n        items={galleryItems}\n        isLoading={isFetching || isFiltering}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState {...emptyStateProps} />\n        )}\n      />\n      {meta?.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            meta={meta}\n            apiRequest={(_, options) =>\n              dispatch(\n                isStandalone()\n                  ? fetchPortfoliosWithStateS(filters, options)\n                  : fetchPortfoliosWithState(filters, options)\n              )\n            }\n            dropDirection=\"up\"\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Portfolios;\n","import { useRef, useEffect } from 'react';\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => (isMounted.current = false);\n  }, []);\n  return isMounted;\n};\n\nexport default useIsMounted;\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n    _inherits(Truncate, _Component);\n\n    function Truncate() {\n        var _ref;\n\n        _classCallCheck(this, Truncate);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n        _this.state = {};\n        _this.styles = {\n            ellipsis: {\n                position: 'fixed',\n                visibility: 'hidden',\n                top: 0,\n                left: 0\n            }\n        };\n\n\n        _this.elements = {};\n\n        _this.onResize = _this.onResize.bind(_this);\n        _this.onTruncate = _this.onTruncate.bind(_this);\n        _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n        _this.measureWidth = _this.measureWidth.bind(_this);\n        _this.getLines = _this.getLines.bind(_this);\n        _this.renderLine = _this.renderLine.bind(_this);\n        return _this;\n    }\n\n    _createClass(Truncate, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var text = this.elements.text,\n                calcTargetWidth = this.calcTargetWidth,\n                onResize = this.onResize;\n\n\n            var canvas = document.createElement('canvas');\n            this.canvasContext = canvas.getContext('2d');\n\n            calcTargetWidth(function () {\n                // Node not needed in document tree to read its content\n                if (text) {\n                    text.parentNode.removeChild(text);\n                }\n            });\n\n            window.addEventListener('resize', onResize);\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            // Render was based on outdated refs and needs to be rerun\n            if (this.props.children !== prevProps.children) {\n                this.forceUpdate();\n            }\n\n            // If the width prop has changed, recalculate size of contents\n            if (this.props.width !== prevProps.width) {\n                this.calcTargetWidth();\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            var ellipsis = this.elements.ellipsis,\n                onResize = this.onResize,\n                timeout = this.timeout;\n\n\n            ellipsis.parentNode.removeChild(ellipsis);\n\n            window.removeEventListener('resize', onResize);\n\n            window.cancelAnimationFrame(timeout);\n        }\n\n        // Shim innerText to consistently break lines at <br/> but not at \\n\n\n    }, {\n        key: 'innerText',\n        value: function innerText(node) {\n            var div = document.createElement('div');\n            var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n\n            div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n\n            var text = div[contentKey];\n\n            var test = document.createElement('div');\n            test.innerHTML = 'foo<br/>bar';\n\n            if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n                div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n                text = div[contentKey];\n            }\n\n            return text;\n        }\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            this.calcTargetWidth();\n        }\n    }, {\n        key: 'onTruncate',\n        value: function onTruncate(didTruncate) {\n            var onTruncate = this.props.onTruncate;\n\n\n            if (typeof onTruncate === 'function') {\n                this.timeout = window.requestAnimationFrame(function () {\n                    onTruncate(didTruncate);\n                });\n            }\n        }\n    }, {\n        key: 'calcTargetWidth',\n        value: function calcTargetWidth(callback) {\n            var target = this.elements.target,\n                calcTargetWidth = this.calcTargetWidth,\n                canvasContext = this.canvasContext,\n                width = this.props.width;\n\n            // Calculation is no longer relevant, since node has been removed\n\n            if (!target) {\n                return;\n            }\n\n            var targetWidth = width ||\n            // Floor the result to deal with browser subpixel precision\n            Math.floor(target.parentNode.getBoundingClientRect().width);\n\n            // Delay calculation until parent node is inserted to the document\n            // Mounting order in React is ChildComponent, ParentComponent\n            if (!targetWidth) {\n                return window.requestAnimationFrame(function () {\n                    return calcTargetWidth(callback);\n                });\n            }\n\n            var style = window.getComputedStyle(target);\n\n            var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n\n            canvasContext.font = font;\n\n            this.setState({\n                targetWidth: targetWidth\n            }, callback);\n        }\n    }, {\n        key: 'measureWidth',\n        value: function measureWidth(text) {\n            return this.canvasContext.measureText(text).width;\n        }\n    }, {\n        key: 'ellipsisWidth',\n        value: function ellipsisWidth(node) {\n            return node.offsetWidth;\n        }\n    }, {\n        key: 'trimRight',\n        value: function trimRight(text) {\n            return text.replace(/\\s+$/, '');\n        }\n    }, {\n        key: 'getLines',\n        value: function getLines() {\n            var elements = this.elements,\n                _props = this.props,\n                numLines = _props.lines,\n                ellipsis = _props.ellipsis,\n                trimWhitespace = _props.trimWhitespace,\n                targetWidth = this.state.targetWidth,\n                innerText = this.innerText,\n                measureWidth = this.measureWidth,\n                onTruncate = this.onTruncate,\n                trimRight = this.trimRight;\n\n\n            var lines = [];\n            var text = innerText(elements.text);\n            var textLines = text.split('\\n').map(function (line) {\n                return line.split(' ');\n            });\n            var didTruncate = true;\n            var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n            for (var line = 1; line <= numLines; line++) {\n                var textWords = textLines[0];\n\n                // Handle newline\n                if (textWords.length === 0) {\n                    lines.push();\n                    textLines.shift();\n                    line--;\n                    continue;\n                }\n\n                var resultLine = textWords.join(' ');\n\n                if (measureWidth(resultLine) <= targetWidth) {\n                    if (textLines.length === 1) {\n                        // Line is end of text and fits without truncating\n                        didTruncate = false;\n\n                        lines.push(resultLine);\n                        break;\n                    }\n                }\n\n                if (line === numLines) {\n                    // Binary search determining the longest possible line inluding truncate string\n                    var textRest = textWords.join(' ');\n\n                    var lower = 0;\n                    var upper = textRest.length - 1;\n\n                    while (lower <= upper) {\n                        var middle = Math.floor((lower + upper) / 2);\n\n                        var testLine = textRest.slice(0, middle + 1);\n\n                        if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n                            lower = middle + 1;\n                        } else {\n                            upper = middle - 1;\n                        }\n                    }\n\n                    var lastLineText = textRest.slice(0, lower);\n\n                    if (trimWhitespace) {\n                        lastLineText = trimRight(lastLineText);\n\n                        // Remove blank lines from the end of text\n                        while (!lastLineText.length && lines.length) {\n                            var prevLine = lines.pop();\n\n                            lastLineText = trimRight(prevLine);\n                        }\n                    }\n\n                    resultLine = React.createElement(\n                        'span',\n                        null,\n                        lastLineText,\n                        ellipsis\n                    );\n                } else {\n                    // Binary search determining when the line breaks\n                    var _lower = 0;\n                    var _upper = textWords.length - 1;\n\n                    while (_lower <= _upper) {\n                        var _middle = Math.floor((_lower + _upper) / 2);\n\n                        var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n                        if (measureWidth(_testLine) <= targetWidth) {\n                            _lower = _middle + 1;\n                        } else {\n                            _upper = _middle - 1;\n                        }\n                    }\n\n                    // The first word of this line is too long to fit it\n                    if (_lower === 0) {\n                        // Jump to processing of last line\n                        line = numLines - 1;\n                        continue;\n                    }\n\n                    resultLine = textWords.slice(0, _lower).join(' ');\n                    textLines[0].splice(0, _lower);\n                }\n\n                lines.push(resultLine);\n            }\n\n            onTruncate(didTruncate);\n\n            return lines;\n        }\n    }, {\n        key: 'renderLine',\n        value: function renderLine(line, i, arr) {\n            if (i === arr.length - 1) {\n                return React.createElement(\n                    'span',\n                    { key: i },\n                    line\n                );\n            } else {\n                var br = React.createElement('br', { key: i + 'br' });\n\n                if (line) {\n                    return [React.createElement(\n                        'span',\n                        { key: i },\n                        line\n                    ), br];\n                } else {\n                    return br;\n                }\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var target = this.elements.target,\n                _props2 = this.props,\n                children = _props2.children,\n                ellipsis = _props2.ellipsis,\n                lines = _props2.lines,\n                spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n                targetWidth = this.state.targetWidth,\n                getLines = this.getLines,\n                renderLine = this.renderLine,\n                onTruncate = this.onTruncate;\n\n            var text = void 0;\n\n            var mounted = !!(target && targetWidth);\n\n            if (typeof window !== 'undefined' && mounted) {\n                if (lines > 0) {\n                    text = getLines().map(renderLine);\n                } else {\n                    text = children;\n\n                    onTruncate(false);\n                }\n            }\n\n            delete spanProps.onTruncate;\n            delete spanProps.trimWhitespace;\n\n            return React.createElement(\n                'span',\n                _extends({}, spanProps, { ref: function ref(targetEl) {\n                        _this2.elements.target = targetEl;\n                    } }),\n                React.createElement(\n                    'span',\n                    null,\n                    text\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(textEl) {\n                            _this2.elements.text = textEl;\n                        } },\n                    children\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(ellipsisEl) {\n                            _this2.elements.ellipsis = ellipsisEl;\n                        }, style: this.styles.ellipsis },\n                    ellipsis\n                )\n            );\n        }\n    }]);\n\n    return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n    children: PropTypes.node,\n    ellipsis: PropTypes.node,\n    lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n    trimWhitespace: PropTypes.bool,\n    width: PropTypes.number,\n    onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n    children: '',\n    ellipsis: '…',\n    lines: 1,\n    trimWhitespace: false,\n    width: 0\n};\nexport default Truncate;\n;\n","import { defineMessages } from 'react-intl';\n\nconst filteringMessages = defineMessages({\n  noItems: {\n    id: 'common.filtering.noItems',\n    defaultMessage: 'No items found'\n  },\n  filterByProduct: {\n    id: 'common.filtering.filterByProduct',\n    defaultMessage: 'Filter by product'\n  },\n  noResults: {\n    id: 'common.filtering.noResults',\n    defaultMessage: 'No results found'\n  },\n  noResultsDescription: {\n    id: 'common.filtering.noResultsDescription',\n    defaultMessage:\n      'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n  },\n  clearFilters: {\n    id: 'common.filtering.clear-filters',\n    defaultMessage: 'Clear all filters'\n  },\n  noProducts: {\n    id: 'common.filtering.no-products',\n    defaultMessage: 'No products yet'\n  },\n  noRecords: {\n    id: 'commonMessages.noRecords',\n    defaultMessage: 'No records'\n  },\n  filterByTitle: {\n    id: 'tableToolbar.filterByTitle',\n    defaultMessage: 'Filter by {title}'\n  },\n  noResultsFound: {\n    id: 'tableToolbar.noResultsFound',\n    defaultMessage: 'No results found'\n  },\n  noResult: {\n    id: 'tableToolbar.noResult',\n    defaultMessage: 'No {results}'\n  },\n  unknown: {\n    id: 'commonMessages.unknown',\n    defaultMessage: 'Unknown'\n  }\n});\n\nexport default filteringMessages;\n","/* eslint-disable react/prop-types */\nimport React, { HTMLProps } from 'react';\nimport clsx from 'clsx';\n\nconst BottomPaginationContainer: React.ComponentType<HTMLProps<\n  HTMLDivElement\n>> = ({ children, className, ...props }) => (\n  <div\n    className={clsx(\n      'pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto',\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </div>\n);\n\nexport default BottomPaginationContainer;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { AnyObject } from '../../types/common-types';\nimport Truncate from 'react-truncate';\nimport { Level, LevelItem, Tooltip } from '@patternfly/react-core';\n\nconst CardPropText = styled.div`\n  overflow: hidden;\n`;\n\nexport const HeaderTitle = styled(LevelItem)`\n  max-width: calc(100% - 80px);\n  width: calc(100% - 80px);\n`;\n\nexport const HeaderLevel = styled(Level)`\n  width: 100%;\n`;\n\nexport interface ItemDetailsProps extends AnyObject {\n  toDisplay?: string[];\n}\n\nconst ItemDetails: React.ComponentType<ItemDetailsProps> = ({\n  toDisplay = [],\n  ...item\n}) => (\n  <Fragment>\n    {toDisplay.map((prop) => (\n      <Truncate\n        key={`tcard-prop-${prop}`}\n        lines={3}\n        ellipsis={\n          <Tooltip content={<div>{item[prop]}</div>}>\n            <span>...</span>\n          </Tooltip>\n        }\n      >\n        {<CardPropText key={`card-prop-${prop}`}>{item[prop]}</CardPropText>}\n      </Truncate>\n    ))}\n  </Fragment>\n);\n\nexport default ItemDetails;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment } from 'react';\nimport CatalogLink, {\n  CatalogLinkProps\n} from '../../smart-components/common/catalog-link';\n\nexport interface ConditionalLinkProps\n  extends Omit<CatalogLinkProps, 'pathname'> {\n  pathname?: string;\n}\nconst ConditionalLink: React.ComponentType<ConditionalLinkProps> = ({\n  children,\n  pathname,\n  ...props\n}) => (\n  <Fragment>\n    {pathname ? (\n      <CatalogLink pathname={pathname} {...props}>\n        {children}\n      </CatalogLink>\n    ) : (\n      children\n    )}\n  </Fragment>\n);\n\nexport default ConditionalLink;\n","/* eslint-disable react/prop-types */\nimport React, { ReactNode } from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants,\n  EmptyStateVariant\n} from '@patternfly/react-core';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nexport interface ContentGalleryEmptyStateProps {\n  title: string;\n  Icon: React.ComponentType;\n  description?: ReactNode;\n  PrimaryAction?: React.ComponentType;\n  renderDescription?: () => ReactNode;\n}\n\nconst ContentGalleryEmptyState: React.ComponentType<ContentGalleryEmptyStateProps> = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription = () => null\n}) => (\n  <div className=\"pf-u-mt-xl\">\n    <EmptyState variant=\"large\">\n      <EmptyStateIcon icon={Icon} />\n      <TextContent>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </TextContent>\n      <EmptyStateBody>\n        {description}\n        {renderDescription()}\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        {PrimaryAction && <PrimaryAction />}\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </div>\n);\n\nexport default ContentGalleryEmptyState;\n\nexport interface EmptyStatePrimaryAction {\n  url: string;\n  label: string;\n  hasPermission?: boolean;\n  id?: string;\n}\nexport const EmptyStatePrimaryAction: React.ComponentType<EmptyStatePrimaryAction> = ({\n  url,\n  label,\n  hasPermission = false,\n  id\n}) =>\n  hasPermission ? (\n    <CatalogLink id={id} pathname={url} preserveSearch>\n      <Button variant=\"primary\">{label}</Button>\n    </CatalogLink>\n  ) : null;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment, ReactNode, useContext } from 'react';\nimport {\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport clsx from 'clsx';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport CatalogBreadcrumbs from '../../smart-components/common/catalog-breadcrumbs';\nimport {\n  TopToolbarWrapper,\n  TopToolbarTitleContainer\n} from '../styled-components/toolbars';\nimport { BreadcrumbFragment } from '../../redux/reducers/breadcrumbs-reducer';\nimport { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport UserContext from '../../user-context';\n\nexport interface TopToolbarProps {\n  paddingBottom?: boolean;\n  breadcrumbs?: boolean;\n  breadcrumbfragments?: BreadcrumbFragment[];\n}\nconst TopToolbar: React.ComponentType<TopToolbarProps> = ({\n  children,\n  paddingBottom = true,\n  breadcrumbs = true,\n  breadcrumbfragments = [],\n  ...rest\n}) => {\n  const { standalone: standalone } = useContext(UserContext);\n  return (\n    <div className={clsx({ ['standalone-toolbar']: !!standalone })}>\n      <TopToolbarWrapper\n        className={`pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${\n          paddingBottom ? 'pf-u-pb-lg' : ''\n        }`}\n        {...rest}\n      >\n        {breadcrumbs && (\n          <div className=\"pf-u-mb-md\">\n            {' '}\n            <CatalogBreadcrumbs breadcrumbfragments={breadcrumbfragments} />\n          </div>\n        )}\n        {children}\n      </TopToolbarWrapper>\n    </div>\n  );\n};\n\nexport default TopToolbar;\n\nexport interface TopToolbarTitleProps {\n  title?: React.ElementType;\n  description?: ReactNode;\n  noData?: boolean;\n}\nexport const TopToolbarTitle: React.ComponentType<TopToolbarTitleProps> = ({\n  title = <ToolbarTitlePlaceholder />,\n  description,\n  children,\n  noData,\n  ...rest\n}) => (\n  <Fragment>\n    <TopToolbarTitleContainer\n      className={clsx({ 'pf-u-mb-lg': !noData, 'flex-no-wrap': true })}\n      {...rest}\n    >\n      <LevelItem>\n        <TextContent>\n          <PageHeaderTitle title={title} className=\"pf-u-m-0 pf-u-mr-md\" />\n          {description && <Text component={TextVariants.p}>{description}</Text>}\n        </TextContent>\n      </LevelItem>\n      <LevelItem className=\"flex-item-no-wrap\">{children}</LevelItem>\n    </TopToolbarTitleContainer>\n  </Fragment>\n);\n","import styled from 'styled-components';\nimport { CardBody } from '@patternfly/react-core';\n\nexport const StyledCardBody = styled(CardBody)`\n  height: 230px;\n  overflow: hidden;\n  padding: 0 !important;\n  margin: 0 24px 16px;\n`;\n","import styled from 'styled-components';\n\nconst EllipsisTextContainer = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nexport default EllipsisTextContainer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Card, GalleryItem } from '@patternfly/react-core';\n\nexport const StyledCard = styled(Card)`\n  height: 330px;\n  position: relative;\n`;\n\nexport const StyledGalleryItem = styled(({ isDisabled, ...props }) => (\n  <GalleryItem {...props} />\n))`\n  position: relative;\n  ::after {\n    display: ${({ isDisabled }) => (isDisabled ? 'block' : 'none')};\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    content: '';\n    background-color: rgba(210, 210, 210, 0.5);\n    z-index: 1;\n    cursor: progress;\n  }\n`;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { OnPerPageSelect, OnSetPage, Pagination } from '@patternfly/react-core';\n\nimport {\n  getCurrentPage,\n  getNewPage,\n  PaginationConfiguration\n} from '../../helpers/shared/pagination';\nimport { AnyObject } from '@data-driven-forms/react-form-renderer';\n\nexport interface AsyncPaginationProps<T = any> extends AnyObject {\n  meta: PaginationConfiguration;\n  apiRequest: (...args: any[]) => Promise<T>;\n  apiProps?: any;\n  className?: string;\n  isCompact?: boolean;\n}\nconst AsyncPagination: React.ComponentType<AsyncPaginationProps> = ({\n  meta: { limit = 50, count = 0, offset = 0 },\n  apiProps,\n  apiRequest,\n  className = '',\n  isCompact = false,\n  ...props\n}) => {\n  const handleOnPerPageSelect: OnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage: OnSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        dropDirection=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport ConditionalLink from '../../presentational-components/shared/conditional-link';\nimport { BreadcrumbFragment } from '../../redux/reducers/breadcrumbs-reducer';\nimport { CatalogRootState } from '../../types/redux';\n\nexport interface CatalogBreadcrumbsProps {\n  breadcrumbfragments?: BreadcrumbFragment[];\n}\nconst CatalogBreadcrumbs: React.ComponentType<CatalogBreadcrumbsProps> = ({\n  breadcrumbfragments = []\n}) => {\n  let fragments = breadcrumbfragments;\n  if (breadcrumbfragments?.length < 1) {\n    fragments = useSelector<CatalogRootState, BreadcrumbFragment[]>(\n      ({ breadcrumbsReducer: { fragments } }) => fragments\n    );\n  }\n\n  if (fragments.length <= 1) {\n    return null;\n  }\n\n  return (\n    <Breadcrumb>\n      {fragments.map(({ title, pathname, searchParams }, index) => (\n        <ConditionalLink\n          pathname={!(fragments.length === index + 1) ? pathname : undefined}\n          searchParams={searchParams}\n          nav\n          exact\n          key={pathname}\n          className=\"pf-c-breadcrumb__item\"\n        >\n          <BreadcrumbItem\n            showDivider={index > 0}\n            isActive={fragments.length === index + 1}\n          >\n            {title}\n          </BreadcrumbItem>\n        </ConditionalLink>\n      ))}\n    </Breadcrumb>\n  );\n};\n\nexport default CatalogBreadcrumbs;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  Link,\n  NavLink,\n  useLocation,\n  LinkProps,\n  NavLinkProps\n} from 'react-router-dom';\nimport styled from 'styled-components';\nimport { StringObject } from '../../types/common-types';\n\nconst StyledLink = styled(({ isDisabled, ...props }) => <Link {...props} />)`\n  pointer-events: ${({ isDisabled }) => (isDisabled ? 'none' : 'initial')};\n`;\n\nconst StyledNavLink = styled(({ isDisabled, ...props }) => (\n  <NavLink {...props} />\n))`\n  pointer-events: ${({ isDisabled }) => (isDisabled ? 'none' : 'initial')};\n`;\n\nconst createSearchQuery = (\n  search: string,\n  searchParams: StringObject,\n  preserveSearch: boolean\n): string => {\n  const paramsQuery = Object.entries(searchParams)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&');\n  return preserveSearch\n    ? `${search}${paramsQuery.length > 0 ? `&${paramsQuery}` : ''}`\n    : paramsQuery.length > 0\n    ? `?${paramsQuery}`\n    : '';\n};\n\nexport type CatalogLinkTo =\n  | string\n  | { pathname: string; search?: string; hash?: string };\nexport interface CatalogLinkProps\n  extends Omit<LinkProps, 'to'>,\n    Omit<NavLinkProps, 'to'> {\n  pathname: string;\n  searchParams?: StringObject;\n  nav?: boolean;\n  preserveSearch?: boolean;\n  preserveHash?: boolean;\n  showDivider?: boolean;\n  to?: CatalogLinkTo;\n  isDisabled?: boolean;\n}\nconst CatalogLink: React.ComponentType<CatalogLinkProps> = ({\n  pathname,\n  searchParams = {},\n  nav = false,\n  preserveSearch = false,\n  preserveHash = false,\n  showDivider,\n  ...props\n}) => {\n  const { search, hash } = useLocation();\n  const Component = nav ? StyledNavLink : StyledLink;\n  const to = {\n    pathname,\n    search: createSearchQuery(search, searchParams, preserveSearch),\n    hash: preserveHash ? hash : undefined\n  };\n  return <Component {...props} to={to} />;\n};\n\nexport default CatalogLink;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment, ReactNode } from 'react';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { Text, TextVariants, Gallery } from '@patternfly/react-core';\nimport { CardLoader } from '../../presentational-components/shared/loader-placeholders';\nimport filteringMessages from '../../messages/filtering.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst NoItems = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <div>\n      <Text component={TextVariants.h1}>\n        {formatMessage(filteringMessages.noItems)}\n      </Text>\n    </div>\n  );\n};\n\nexport interface ContentGalleryProps {\n  isLoading?: boolean;\n  items?: ReactNode[];\n  renderEmptyState?: () => ReactNode;\n}\nconst ContentGallery: React.ComponentType<ContentGalleryProps> = ({\n  isLoading,\n  items,\n  renderEmptyState\n}) => (\n  <Fragment>\n    {isLoading ? (\n      <CardLoader />\n    ) : items?.length === 0 ? (\n      renderEmptyState ? (\n        renderEmptyState()\n      ) : (\n        <NoItems />\n      )\n    ) : (\n      <Section type=\"content\">\n        <Gallery hasGutter className=\"content-gallery\">\n          {items}\n        </Gallery>\n      </Section>\n    )}\n  </Fragment>\n);\n\nexport default ContentGallery;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","id","to","portfolioName","portfolio_items","headerActions","TextContent","Link","Text","title","className","component","TextVariants","Badge","isRead","onClick","event","preventDefault","TO_DISPLAY","HeaderActions","portfolioId","handleCopyPortfolio","canLinkOrderProcesses","userCapabilities","share","copy","unshare","update","destroy","set_approval","formatMessage","useState","isOpen","setOpen","dropdownItems","push","DropdownItem","key","searchParams","portfolio","pathname","preserveHash","orderProcessAction","preserveSearch","role","length","Dropdown","isPlain","onSelect","position","DropdownPosition","toggle","KebabToggle","onToggle","imageUrl","isDisabled","metadata","props","search","user_capabilities","statistics","approval_processes","shared_groups","ouiaId","CardHeader","DateFormat","date","updated_at","created_at","type","owner","toDisplay","CardFooter","Label","variant","color","chipCategories","labelMessages","sort_by","sortByMapping","PortfoliosPrimaryToolbar","filters","stateDispatch","debouncedFilter","initialState","meta","filterType","handleFilterItems","sortDirection","handleSort","fetchPortfoliosWithState","isFetching","isFiltering","canCreate","dispatch","useDispatch","useFormatMessage","noData","PrimaryToolbar","dedicatedAction","Button","activeFiltersConfig","Object","entries","filter","value","map","category","chips","Array","isArray","onDelete","_e","clearAll","chip","payload","newFilters","filterConfig","onChange","items","filterValues","label","placeholder","sortByConfig","direction","onSortChange","_event","pagination","count","apiRequest","_","options","isCompact","undefined","propTypes","PropTypes","isRequired","asyncFormValidator","defaultSettings","filteringCallback","isStandalone","fetchPortfoliosWithStateS","then","SortByDirection","portfoliosState","state","action","viewState","useInitialUriHash","isMounted","useIsMounted","useReducer","portfolios","useSelector","portfolioReducer","data","results","userPermissions","useContext","UserContext","permissions","history","useHistory","useEffect","scrollToTop","offset","copyPortfolioS","copyPortfolio","PORTFOLIO_ROUTE","hasPermission","emptyStateProps","PrimaryAction","url","ADD_PORTFOLIO_ROUTE","filteringMessages","portfolioMessages","description","Icon","PlusCircleIcon","SearchIcon","galleryItems","item","Fragment","isLoading","renderEmptyState","dropDirection","useRef","current","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","Truncate","_Component","_ref","this","_len","args","_key","_this","__proto__","getPrototypeOf","apply","concat","styles","ellipsis","visibility","top","left","elements","onResize","bind","onTruncate","calcTargetWidth","measureWidth","getLines","renderLine","subClass","superClass","create","constructor","setPrototypeOf","_inherits","text","canvas","document","createElement","canvasContext","getContext","parentNode","removeChild","window","addEventListener","prevProps","children","forceUpdate","timeout","removeEventListener","cancelAnimationFrame","node","div","contentKey","HTMLElement","innerHTML","replace","test","didTruncate","requestAnimationFrame","callback","targetWidth","Math","floor","getBoundingClientRect","style","getComputedStyle","font","join","setState","measureText","offsetWidth","_props","numLines","lines","trimWhitespace","innerText","trimRight","textLines","split","line","ellipsisWidth","textWords","resultLine","textRest","lower","upper","middle","slice","lastLineText","pop","_lower","_upper","_middle","splice","shift","arr","br","_this2","_props2","spanProps","obj","keys","indexOf","_objectWithoutProperties","ref","targetEl","textEl","ellipsisEl","Component","defaultProps","noItems","defaultMessage","filterByProduct","noResults","noResultsDescription","clearFilters","noProducts","noRecords","filterByTitle","noResultsFound","noResult","unknown","CardPropText","HeaderTitle","LevelItem","HeaderLevel","Level","prop","Tooltip","content","renderDescription","EmptyState","EmptyStateIcon","icon","EmptyStateBody","EmptyStateSecondaryActions","EmptyStatePrimaryAction","paddingBottom","breadcrumbs","breadcrumbfragments","rest","standalone","TopToolbarTitle","StyledCardBody","CardBody","StyledCard","Card","StyledGalleryItem","GalleryItem","limit","apiProps","Pagination","perPage","itemCount","onPerPageSelect","page","onSetPage","number","debounce","request","fragments","Breadcrumb","index","nav","exact","BreadcrumbItem","showDivider","isActive","StyledLink","StyledNavLink","NavLink","createSearchQuery","paramsQuery","useLocation","hash","NoItems","Gallery","hasGutter"],"sourceRoot":""}