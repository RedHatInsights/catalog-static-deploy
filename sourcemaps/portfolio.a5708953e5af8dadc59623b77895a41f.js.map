{"version":3,"file":"js/portfolio.2f632b1f73e320671f4f.js","mappings":"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","sources":["webpack:///./src/smart-components/portfolio/portfolio.js","webpack:///./src/helpers/shared/redux-mutators.ts","webpack:///./src/presentational-components/portfolio/back-to-products.tsx"],"sourcesContent":["import React, { useEffect, useReducer, lazy, Suspense } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useRouteMatch, Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport { toggleArraySelection } from '../../helpers/shared/redux-mutators';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport { fetchPlatforms as fetchPlatformsS } from '../../redux/actions/platform-actions';\nimport {\n  copyPortfolio,\n  fetchPortfolios,\n  fetchSelectedPortfolio,\n  removeProductsFromPortfolio,\n  resetSelectedPortfolio,\n  fetchPortfolioItemsWithPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport {\n  copyPortfolio as copyPortfolioS,\n  fetchPortfolios as fetchPortfoliosS,\n  fetchSelectedPortfolio as fetchSelectedPortfolioS,\n  removeProductsFromPortfolio as removeProductsFromPortfolioS,\n  resetSelectedPortfolio as resetSelectedPortfolioS,\n  fetchPortfolioItemsWithPortfolio as fetchPortfolioItemsWithPortfolioS\n} from '../../redux/actions/portfolio-actions-s';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport useQuery from '../../utilities/use-query';\nimport useBreadcrumbs from '../../utilities/use-breadcrumbs';\nimport { PORTFOLIO_ROUTE } from '../../constants/routes';\nimport { UnauthorizedRedirect } from '../error-pages/error-redirects';\nimport CatalogRoute from '../../routing/catalog-route';\nimport useIsMounted from '../../utilities/use-is-mounted';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { toolbarComponentTypes } from '../../toolbar/toolbar-mapper';\nimport BackToProducts from '../../presentational-components/portfolio/back-to-products';\n\n/**\n * Fake the toolbar until the chunk is loaded\n */\nconst PortfolioSuspenseFallback = ({ fromProducts, title, description }) => (\n  <ToolbarRenderer\n    schema={{\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR,\n          breadcrumbs: !fromProducts,\n          key: 'portfolio-top-toolbar',\n          fields: [\n            {\n              component: BackToProducts,\n              key: 'back-to-products',\n              hidden: !fromProducts\n            },\n            {\n              component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n              key: 'portfolio-toolbar-title',\n              title,\n              description\n            }\n          ]\n        }\n      ]\n    }}\n  />\n);\n\nPortfolioSuspenseFallback.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  fromProducts: PropTypes.bool\n};\n\nconst PortfolioItems = lazy(() =>\n  /* webpackChunkName: \"portfolio-items\" */ import('./portfolio-items')\n);\n\nconst PortfolioItemDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolio-item-detail\" */\n    './portfolio-item-detail/portfolio-item-detail'\n  )\n);\nconst AddProductsToPortfolio = lazy(() =>\n  import(\n    /* webpackChunkName: \"add-products-to-portfolio\" */\n    './add-products-to-portfolio'\n  )\n);\nconst initialState = {\n  selectedItems: [],\n  firstSelectedProduct: undefined,\n  removeInProgress: false,\n  filterValue: '',\n  copyInProgress: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (value, dispatch, filteringCallback, meta) => {\n    filteringCallback(true);\n    dispatch(\n      window.catalog?.standalone\n        ? fetchPortfolioItemsWithPortfolioS(value, meta)\n        : fetchPortfolioItemsWithPortfolio(value, meta)\n    ).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst porftolioUiReducer = (state, { type, payload = {} }) =>\n  ({\n    selectItem: {\n      ...state,\n      selectedItems: toggleArraySelection(\n        state.selectedItems,\n        payload.selectedItem\n      ),\n      firstSelectedProduct: payload.product || state.firstSelectedProduct\n    },\n    setRemoveInProgress: { ...state, removeInProgress: payload },\n    removeSuccessful: { ...state, selectedItems: [], removeInProgress: false },\n    setFilterValue: { ...state, filterValue: payload, isFiltering: true },\n    setCopyInProgress: { ...state, copyInProgress: payload },\n    setIsFetching: { ...state, isFetching: payload },\n    setFilteringFlag: { ...state, isFiltering: payload }\n  }[type]);\n\nconst Portfolio = () => {\n  const viewState = useInitialUriHash();\n  const [state, stateDispatch] = useReducer(porftolioUiReducer, {\n    ...initialState,\n    filterValue: viewState?.portfolioItems?.filter || ''\n  });\n  const [searchParams] = useQuery(['portfolio', 'from-products']);\n  const { portfolio: id, 'from-products': fromProducts } = searchParams;\n  const { url } = useRouteMatch(PORTFOLIO_ROUTE);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isMounted = useIsMounted();\n  const { portfolio, portfolioItem, meta } = useSelector(\n    ({\n      portfolioReducer: {\n        selectedPortfolio,\n        portfolioItem,\n        portfolioItems: { meta }\n      }\n    }) => ({\n      portfolio: selectedPortfolio,\n      portfolioItem,\n      meta\n    })\n  );\n\n  const resetBreadcrumbs = useBreadcrumbs([portfolio, portfolioItem]);\n\n  const fetchData = (portfolioId) => {\n    stateDispatch({ type: 'setIsFetching', payload: true });\n    return Promise.all([\n      dispatch(\n        window.catalog?.standalone ? fetchPlatformsS() : fetchPlatforms()\n      ),\n      dispatch(\n        window?.catalog?.standalone\n          ? fetchSelectedPortfolioS(portfolioId)\n          : fetchSelectedPortfolio(portfolioId)\n      ),\n      dispatch(\n        window?.catalog?.standalone\n          ? fetchPortfolioItemsWithPortfolioS(\n              portfolioId,\n              viewState?.portfolioItems\n            )\n          : fetchPortfolioItemsWithPortfolio(\n              portfolioId,\n              viewState?.portfolioItems\n            )\n      )\n    ])\n      .then((data) => {\n        if (isMounted.current) {\n          stateDispatch({ type: 'setIsFetching', payload: false });\n        }\n\n        return data;\n      })\n      .catch(() => stateDispatch({ type: 'setIsFetching', payload: false }));\n  };\n\n  useEffect(() => {\n    fetchData(id);\n    scrollToTop();\n\n    return () => {\n      resetBreadcrumbs();\n      dispatch(\n        window.catalog?.standalone\n          ? resetSelectedPortfolioS()\n          : resetSelectedPortfolio()\n      );\n    };\n  }, []);\n\n  useEffect(() => {\n    if (\n      isMounted.current === true &&\n      !state.isFetching &&\n      history.location.pathname === PORTFOLIO_ROUTE\n    ) {\n      fetchData(id);\n      scrollToTop();\n    }\n  }, [id, history.location.pathname]);\n\n  const handleCopyPortfolio = () => {\n    stateDispatch({ type: 'setCopyInProgress', payload: true });\n    return dispatch(\n      window.catalog?.standalone ? copyPortfolioS(id) : copyPortfolio(id)\n    )\n      .then(({ id }) =>\n        history.push({\n          pathname: PORTFOLIO_ROUTE,\n          search: `?portfolio=${id}`\n        })\n      )\n      .then(() => stateDispatch({ type: 'setCopyInProgress', payload: false }))\n      .then(() =>\n        dispatch(\n          window.catalog?.standalone ? fetchPortfoliosS : fetchPortfolios\n        )\n      )\n      .catch(() =>\n        stateDispatch({ type: 'setCopyInProgress', payload: false })\n      );\n  };\n\n  const removeProducts = (products) => {\n    stateDispatch({ type: 'setRemoveInProgress', payload: true });\n    dispatch(\n      window.catalog?.standalone\n        ? removeProductsFromPortfolioS(\n            products,\n            portfolio.name,\n            state.firstSelectedProduct\n          )\n        : removeProductsFromPortfolio(\n            products,\n            portfolio.name,\n            state.firstSelectedProduct\n          )\n    )\n      .then(() => stateDispatch({ type: 'removeSucessfull' }))\n      .catch(() =>\n        stateDispatch({ type: 'setRemoveInProgress', payload: false })\n      );\n  };\n\n  const handleFilterChange = (filter) => {\n    stateDispatch({ type: 'setFilterValue', payload: filter });\n    debouncedFilter(\n      id,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0,\n        filter\n      }\n    );\n  };\n\n  const routes = {\n    portfolioRoute: url,\n    addProductsRoute: `${url}/add-products`,\n    editPortfolioRoute: `${url}/edit-portfolio`,\n    removePortfolioRoute: `${url}/remove-portfolio`,\n    sharePortfolioRoute: `${url}/share-portfolio`,\n    workflowPortfolioRoute: `${url}/edit-workflow`,\n    portfolioItemRoute: `${url}/portfolio-item`\n  };\n\n  if (portfolio.metadata?.user_capabilities?.show === false) {\n    return <UnauthorizedRedirect />;\n  }\n\n  return (\n    <Suspense\n      fallback={\n        <PortfolioSuspenseFallback\n          fromProducts={fromProducts === 'true'}\n          title={portfolio.name}\n          description={portfolio.description}\n        />\n      }\n    >\n      <Switch>\n        <CatalogRoute\n          path={routes.addProductsRoute}\n          userCapabilities={portfolio.metadata?.user_capabilities}\n          requiredCapabilities=\"update\"\n        >\n          <AddProductsToPortfolio portfolioRoute={routes.portfolioRoute} />\n        </CatalogRoute>\n        <Route path={routes.portfolioItemRoute}>\n          <PortfolioItemDetail portfolioLoaded={!state?.isFetching} />\n        </Route>\n        <Route path={routes.portfolioRoute}>\n          <PortfolioItems\n            routes={routes}\n            fromProducts={fromProducts === 'true'}\n            handleFilterChange={handleFilterChange}\n            removeProducts={(products) => removeProducts(products)}\n            copyPortfolio={handleCopyPortfolio}\n            state={state}\n            stateDispatch={stateDispatch}\n          />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Portfolio;\n","export const toggleArraySelection = (items: string[], item: string): string[] =>\n  items.includes(item)\n    ? [\n        ...items.slice(0, items.indexOf(item)),\n        ...items.slice(items.indexOf(item) + 1)\n      ]\n    : [...items, item];\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\n\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst BackToProducts: React.ComponentType = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <div className=\"pf-u-mb-md\">\n      <AngleLeftIcon className=\"pf-u-mr-sm\" />\n      <Button\n        variant=\"link\"\n        ouiaId={'back-to-products'}\n        component={() => (\n          <CatalogLink pathname=\"/products\">\n            {formatMessage(portfolioMessages.backToProducts)}\n          </CatalogLink>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default BackToProducts;\n"],"names":["PortfolioSuspenseFallback","fromProducts","title","description","schema","fields","component","toolbarComponentTypes","breadcrumbs","key","BackToProducts","hidden","propTypes","PropTypes","PortfolioItems","lazy","PortfolioItemDetail","AddProductsToPortfolio","initialState","selectedItems","firstSelectedProduct","undefined","removeInProgress","filterValue","copyInProgress","isFetching","isFiltering","debouncedFilter","asyncFormValidator","value","dispatch","filteringCallback","meta","window","catalog","standalone","fetchPortfolioItemsWithPortfolioS","fetchPortfolioItemsWithPortfolio","then","porftolioUiReducer","state","items","item","type","payload","selectItem","selectedItem","includes","slice","indexOf","product","setRemoveInProgress","removeSuccessful","setFilterValue","setCopyInProgress","setIsFetching","setFilteringFlag","viewState","useInitialUriHash","useReducer","portfolioItems","filter","stateDispatch","useQuery","searchParams","id","portfolio","url","useRouteMatch","PORTFOLIO_ROUTE","history","useHistory","useDispatch","isMounted","useIsMounted","useSelector","portfolioReducer","selectedPortfolio","portfolioItem","resetBreadcrumbs","useBreadcrumbs","fetchData","portfolioId","Promise","all","fetchPlatformsS","fetchSelectedPortfolioS","fetchSelectedPortfolio","data","current","useEffect","scrollToTop","resetSelectedPortfolioS","resetSelectedPortfolio","location","pathname","routes","portfolioRoute","addProductsRoute","editPortfolioRoute","removePortfolioRoute","sharePortfolioRoute","workflowPortfolioRoute","portfolioItemRoute","metadata","user_capabilities","show","Suspense","fallback","name","Switch","path","userCapabilities","requiredCapabilities","Route","portfolioLoaded","handleFilterChange","offset","removeProducts","products","removeProductsFromPortfolioS","removeProductsFromPortfolio","copyPortfolio","copyPortfolioS","push","search","fetchPortfoliosS","fetchPortfolios","formatMessage","className","Button","variant","ouiaId"],"sourceRoot":""}