{"version":3,"file":"js/platform-templates.1639422896596.96f533918d496bca4686.js","mappings":"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","sources":["webpack:///./src/smart-components/platform/platform-templates.js","webpack:///./src/messages/platforms.messages.ts"],"sourcesContent":["import React, { Fragment, useEffect, useReducer } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { fetchPlatformItems } from '../../redux/actions/platform-actions';\nimport { fetchPlatformItems as fetchPlatformItemsS } from '../../redux/actions/platform-actions-s';\nimport PlatformItem from '../../presentational-components/platform/platform-item';\nimport { createPlatformsFilterToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { Button } from '@patternfly/react-core';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useQuery from '../../utilities/use-query';\nimport { PLATFORM_SERVICE_OFFERINGS_ROUTE } from '../../constants/routes';\nimport filteringMessages from '../../messages/filtering.messages';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst platformItemsState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (id, value, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(\n      window.catalog?.standalone\n        ? fetchPlatformItemsS(id, value, meta)\n        : fetchPlatformItems(id, value, meta)\n    ).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst PlatformTemplates = () => {\n  const formatMessage = useFormatMessage();\n  const [{ platform: id }] = useQuery(['platform']);\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch] = useReducer(\n    platformItemsState,\n    initialState\n  );\n  const {\n    data,\n    results,\n    count,\n    meta\n  } = useSelector(({ platformReducer: { platformItems } }) =>\n    platformItems[id]\n      ? platformItems[id]\n      : { data: [], results: [], meta: defaultSettings, count: 0 }\n  );\n\n  const { platform, platformIconMapping } = useSelector(\n    ({ platformReducer: { selectedPlatform, platformIconMapping } }) => ({\n      platform: selectedPlatform,\n      platformIconMapping\n    })\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      window.catalog?.standalone\n        ? fetchPlatformItemsS(id, filterValue, defaultSettings)\n        : fetchPlatformItems(id, filterValue, defaultSettings)\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n  }, [id]);\n\n  const dataSet = data ? data : results;\n  const metaInfo = meta ? meta : { count };\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      id,\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...metaInfo,\n        offset: 0\n      }\n    );\n  };\n\n  const filteredItems = {\n    items: dataSet\n      ? dataSet.map((item) => (\n          <PlatformItem\n            key={item.id}\n            pathname={PLATFORM_SERVICE_OFFERINGS_ROUTE}\n            searchParams={{\n              service: item.id\n            }}\n            preserveSearch\n            src={platformIconMapping[id]}\n            {...item}\n          />\n        ))\n      : []\n  };\n\n  const title = platform ? platform.name : '';\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPlatformsFilterToolbarSchema({\n          onFilterChange: handleFilterChange,\n          searchValue: filterValue,\n          filterPlaceholder: formatMessage(platformsMessages.templatesFilter),\n          meta: metaInfo,\n          apiRequest: (_, options) =>\n            dispatch(\n              window.catalog?.standalone\n                ? fetchPlatformItemsS(id, filterValue, options)\n                : fetchPlatformItems(id, filterValue, options)\n            )\n        })}\n      />\n      <ContentGallery\n        title={title}\n        isLoading={isFetching || isFiltering}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState\n            title={\n              filterValue === ''\n                ? formatMessage(platformsMessages.noTemplatesTitle)\n                : formatMessage(filteringMessages.noResults)\n            }\n            Icon={SearchIcon}\n            PrimaryAction={() =>\n              filterValue !== '' ? (\n                <Button\n                  ouiaId={'clear-filters'}\n                  onClick={() => handleFilterChange('')}\n                  variant=\"link\"\n                >\n                  {formatMessage(filteringMessages.clearFilters)}\n                </Button>\n              ) : null\n            }\n            description={\n              filterValue === ''\n                ? formatMessage(platformsMessages.noTemplatesDescription)\n                : formatMessage(filteringMessages.noResultsDescription)\n            }\n          />\n        )}\n        {...filteredItems}\n      />\n      {metaInfo.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={metaInfo}\n            apiRequest={(_, options) =>\n              dispatch(\n                window.catalog?.standalone\n                  ? fetchPlatformItemsS(id, filterValue, options)\n                  : fetchPlatformItems(id, filterValue, options)\n              )\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PlatformTemplates;\n","import { defineMessages } from 'react-intl';\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  platformsNoDataDescription: {\n    id: 'platforms.list.configure-source',\n    defaultMessage:\n      'Ansible Automation Services Catalog can be added by following the'\n  },\n  platformsDocTitle: {\n    id: 'platforms.doc.title',\n    defaultMessage: 'Ansible Automation Platform 2.0 BETA documentation'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage: 'Go to Sources'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  },\n  platformVersion: {\n    id: 'platforms.version',\n    defaultMessage: 'Platform version'\n  },\n  ansibleVersion: {\n    id: 'platforms.ansible.version',\n    defaultMessage: 'Ansible version'\n  },\n  platformSummary: {\n    id: 'platforms.summary',\n    defaultMessage: 'Summary'\n  },\n  platformDetails: {\n    id: 'platforms.details',\n    defaultMessage: 'Details'\n  },\n  platformActivity: {\n    id: 'platforms.activity',\n    defaultMessage: 'Activity'\n  },\n  cloudConnectorId: {\n    id: 'platform.cloudConnectorId',\n    defaultMessage: 'RedHat Connect Client Id'\n  },\n  refreshState: {\n    id: 'platforms.refreshState',\n    defaultMessage: 'Refresh state'\n  },\n  refreshStarted: {\n    id: 'platforms.refreshStarted',\n    defaultMessage: 'Refresh started'\n  },\n  refreshFinished: {\n    id: 'platforms.refreshFinished',\n    defaultMessage: 'Refresh finished'\n  },\n  lastSuccessfulRefresh: {\n    id: 'platforms.lastSuccessfulRefresh',\n    defaultMessage: 'Last successful refresh'\n  },\n  lastChecked: {\n    id: 'platforms.lastChecked',\n    defaultMessage: 'Last checked'\n  },\n  lastAvailable: {\n    id: 'platforms.lastAvailable',\n    defaultMessage: 'Last available'\n  },\n  enabled: {\n    id: 'platforms.enabled',\n    defaultMessage: 'Enabled'\n  },\n  availabilityStatus: {\n    id: 'platforms.availabilityStatus',\n    defaultMessage: 'Availability status'\n  },\n  dateAdded: {\n    id: 'platforms.dateAdded',\n    defaultMessage: 'Date added'\n  },\n  refreshTooltip: {\n    id: 'platforms.refreshTooltip',\n    defaultMessage: 'Refresh platform'\n  },\n  lastRefreshMessage: {\n    id: 'platforms.lastRefreshMessage',\n    defaultMessage: 'Last refresh message'\n  },\n  availabilityMessage: {\n    id: 'platforms.availabilityMessage',\n    defaultMessage: 'Availability message'\n  }\n});\n\nexport default platformsMessages;\n"],"names":["initialState","filterValue","isOpen","isFetching","isFiltering","platformItemsState","state","action","type","payload","debouncedFilter","asyncFormValidator","id","value","dispatch","filteringCallback","meta","defaultSettings","window","catalog","standalone","fetchPlatformItemsS","fetchPlatformItems","then","formatMessage","useFormatMessage","useQuery","platform","useReducer","stateDispatch","useSelector","platformItems","platformReducer","data","results","count","selectedPlatform","platformIconMapping","useDispatch","useEffect","scrollToTop","dataSet","metaInfo","handleFilterChange","offset","filteredItems","items","map","item","key","pathname","PLATFORM_SERVICE_OFFERINGS_ROUTE","searchParams","service","preserveSearch","src","title","name","Fragment","schema","createPlatformsFilterToolbarSchema","onFilterChange","searchValue","filterPlaceholder","platformsMessages","apiRequest","_","options","isLoading","renderEmptyState","filteringMessages","Icon","SearchIcon","PrimaryAction","Button","ouiaId","onClick","variant","description","dropDirection","workflowColumn","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","platformsNoDataDescription","platformsDocTitle","connectSource","contactAdmin","noPlatforms","offeringTitle","offeringParameters","platformVersion","ansibleVersion","platformSummary","platformDetails","platformActivity","cloudConnectorId","refreshState","refreshStarted","refreshFinished","lastSuccessfulRefresh","lastChecked","lastAvailable","enabled","availabilityStatus","dateAdded","refreshTooltip","lastRefreshMessage","availabilityMessage"],"sourceRoot":""}