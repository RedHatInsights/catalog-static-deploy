{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Dropdown/dropdownConstants.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/check-icon.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Dropdown/DropdownItem.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Dropdown/InternalDropdownItem.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Dropdown/Toggle.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Dropdown/DropdownMenu.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Dropdown/DropdownWithContext.js"],"names":["DropdownPosition","DropdownDirection","DropdownContext","onSelect","event","id","toggleIndicatorClass","toggleIconClass","toggleTextClass","menuClass","itemClass","toggleClass","baseClass","baseComponent","sectionClass","sectionTitleClass","sectionComponent","disabledClass","plainTextClass","menuComponent","DropdownArrowContext","keyHandler","sendRef","CheckIcon","name","height","width","svgPath","yOffset","xOffset","DropdownItem","_a","children","className","component","isDisabled","isPlainText","isHovered","href","tooltip","tooltipProps","listItemClassName","onClick","ref","additionalChild","customChild","tabIndex","icon","autoFocus","description","styleChildren","ouiaId","ouiaSafe","props","ouiaProps","displayName","Consumer","context","Object","assign","role","InternalDropdownItem","super","arguments","this","additionalRef","getInnerNode","node","childNodes","length","onKeyDown","innerIndex","target","current","preventDefault","key","index","UP","DOWN","RIGHT","LEFT","click","enterTriggersArrowDown","customRef","setTimeout","focus","componentID","inoperableEvents","additionalProps","classes","modifiers","type","renderDefaultComponent","tag","Component","componentContent","dropdownMenuItemMain","dropdownMenuItemIcon","dropdownMenuItemDescription","childNode","element","content","extendAdditionalChildRef","defaultProps","Toggle","buttonRef","componentDidMount","document","addEventListener","onDocClick","onEscPress","componentWillUnmount","removeEventListener","isOpen","parentRef","onToggle","getMenuRef","menuRef","clickedOnToggle","contains","clickedWithinMenu","keyCode","which","escFromToggle","escFromWithinMenu","ESCAPE_KEY","bubbleEvent","stopPropagation","onEnter","isPlain","isPrimary","isSplitButton","ariaHasPopup","isActive","dropdownToggleButton","dropdownToggle","active","plain","primary","disabled","refsCollection","Array","from","activeElement","classList","find","validToggleClasses","concat","includes","refs","firstFocusTargetCollection","hasAttribute","focusFirstRef","collectionLength","lastFocusTargetCollection","slice","lastFocusTarget","childKeyHandler","position","custom","isGrouped","toArray","nodes","isSeparator","map","getAttribute","focusTargetCollection","focusTarget","groupedChildren","group","isArray","option","child","setMenuComponentRef","openedOnEnter","Provider","value","right","alignRight","hidden","MenuComponent","extendChildren","left","refCollection","contextType","baseComponentRef","menuComponentRef","getMenuComponentRef","dropdownItems","console","error","direction","toggle","menuAppendTo","currentId","renderedContent","contextId","ouiaComponentType","BaseComponent","menuContainer","popperContainer","up","top","expanded","mainContainer","oneToggle","Popper","trigger","popper","appendTo","parentElement","getParentElement","isVisible","down"],"mappings":"0FAAA,4IACWA,EAKAC,EANX,QAEA,SAAWD,GACPA,EAAwB,MAAI,QAC5BA,EAAuB,KAAI,OAF/B,CAGGA,IAAqBA,EAAmB,KAE3C,SAAWC,GACPA,EAAsB,GAAI,KAC1BA,EAAwB,KAAI,OAFhC,CAGGA,IAAsBA,EAAoB,KACtC,MAAMC,EAAkB,gBAAoB,CAE/CC,SAAWC,MACXC,GAAI,GACJC,qBAAsB,GACtBC,gBAAiB,GACjBC,gBAAiB,GACjBC,UAAW,GACXC,UAAW,GACXC,YAAa,GACbC,UAAW,GACXC,cAAe,MACfC,aAAc,GACdC,kBAAmB,GACnBC,iBAAkB,UAClBC,cAAe,GACfC,eAAgB,GAChBC,cAAe,OAENC,EAAuB,gBAAoB,CACpDC,WAAY,KACZC,QAAS,Q,iCChCb,YAEO,MASMC,EAAY,YATM,CAC7BC,KAAM,YACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,qRACTC,QAAS,EACTC,QAAS,IAKI,O,iCCbf,8EAKO,MAAMC,EAAgBC,IACzB,IAAI,SAAEC,EAAQ,UAAEC,EAAS,UAAEC,EAAY,IAAG,WAAEC,GAAa,EAAK,YAAEC,GAAc,EAAK,UAAEC,GAAY,EAAK,KAAEC,EAAI,QAAEC,EAAO,aAAEC,EAAe,GAAE,kBAAEC,EAAiB,QAAEC,EAAO,IAEpKC,EAAG,gBACHC,EAAe,YAAEC,EAAW,SAAEC,GAAW,EAAE,KAAEC,EAAO,KAAI,UAAEC,EAAS,YAAEC,EAAc,KAAI,cAAEC,EAAa,OAAEC,EAAM,SAAEC,GAAarB,EAAIsB,EAAQ,iBAAOtB,EAAI,CAAC,WAAY,YAAa,YAAa,aAAc,cAAe,YAAa,OAAQ,UAAW,eAAgB,oBAAqB,UAAW,MAAO,kBAAmB,cAAe,WAAY,OAAQ,YAAa,cAAe,gBAAiB,SAAU,aAC5Z,MAAMuB,EAAY,YAAaxB,EAAayB,YAAaJ,EAAQC,GACjE,OAAQ,gBAAoB,IAAqBI,SAAU,KAAMC,GAAY,gBAAoB,IAAsBC,OAAOC,OAAO,CAAEF,QAASA,EAASG,KAAM,WAAYd,SAAUA,EAAUb,UAAWA,EAAWC,UAAWA,EAAWC,WAAYA,EAAYC,YAAaA,EAAaC,UAAWA,EAAWC,KAAMA,EAAMC,QAASA,EAASC,aAAcA,EAAcC,kBAAmBA,EAAmBC,QAASA,EAASE,gBAAiBA,EAAiBC,YAAaA,EAAaE,KAAMA,EAAMC,UAAWA,EAAWE,cAAeA,EAAeD,YAAaA,GAAeK,EAAWD,GAAQrB,KAEplBF,EAAayB,YAAc,gB,iCCb3B,8GAQO,MAAMM,UAA6B,YACtC,cACIC,SAASC,WACTC,KAAKrB,IAAM,cACXqB,KAAKC,cAAgB,cACrBD,KAAKE,aAAgBC,GAAUA,GAAQA,EAAKC,YAAcD,EAAKC,WAAWC,OAASF,EAAKC,WAAW,GAAKD,EACxGH,KAAKM,UAAalE,IAEd,MAAMmE,EAAanE,EAAMoE,SAAWR,KAAKrB,IAAI8B,QAAU,EAAI,EACtDT,KAAKX,MAAMR,aACZzC,EAAMsE,iBAEQ,YAAdtE,EAAMuE,IACNX,KAAKX,MAAMI,QAAQpC,WAAW2C,KAAKX,MAAMuB,MAAOL,EAAY,IAAqBM,IAE9D,cAAdzE,EAAMuE,IACXX,KAAKX,MAAMI,QAAQpC,WAAW2C,KAAKX,MAAMuB,MAAOL,EAAY,IAAqBO,MAE9D,eAAd1E,EAAMuE,IACXX,KAAKX,MAAMI,QAAQpC,WAAW2C,KAAKX,MAAMuB,MAAOL,EAAY,IAAqBQ,OAE9D,cAAd3E,EAAMuE,IACXX,KAAKX,MAAMI,QAAQpC,WAAW2C,KAAKX,MAAMuB,MAAOL,EAAY,IAAqBS,MAE9D,UAAd5E,EAAMuE,KAAiC,MAAdvE,EAAMuE,MACpCvE,EAAMoE,OAAOS,QACbjB,KAAKX,MAAM6B,wBACPlB,KAAKX,MAAMI,QAAQpC,WAAW2C,KAAKX,MAAMuB,MAAOL,EAAY,IAAqBO,QAIjG,oBACI,MAAM,QAAErB,EAAO,MAAEmB,EAAK,WAAEzC,EAAU,KAAEyB,EAAI,YAAEf,EAAW,UAAEG,GAAcgB,KAAKX,MACpE8B,EAAYtC,EAAcmB,KAAKE,aAAaF,KAAKrB,IAAI8B,SAAWT,KAAKrB,IAAI8B,QAC/EhB,EAAQnC,QAAQsD,EAAO,CAACO,EAAWtC,EAAcsC,EAAYnB,KAAKC,cAAcQ,SAAUtC,EAAqB,cAATyB,GACtGZ,GAAaoC,WAAW,IAAMD,EAAUE,SAE5C,qBACI,MAAM,QAAE5B,EAAO,MAAEmB,EAAK,WAAEzC,EAAU,KAAEyB,EAAI,YAAEf,GAAgBmB,KAAKX,MACzD8B,EAAYtC,EAAcmB,KAAKE,aAAaF,KAAKrB,IAAI8B,SAAWT,KAAKrB,IAAI8B,QAC/EhB,EAAQnC,QAAQsD,EAAO,CAACO,EAAWtC,EAAcsC,EAAYnB,KAAKC,cAAcQ,SAAUtC,EAAqB,cAATyB,GAE1G,2BACI,MAAM,gBAAEhB,GAAoBoB,KAAKX,MACjC,OAAO,eAAmBT,EAAiB,CACvCD,IAAKqB,KAAKC,gBAGlB,SAEI,MAAMlC,EAAKiC,KAAKX,OAAO,UAAEpB,EAAS,SAAED,EAAQ,UAAEK,EAAS,QAAEoB,EAAO,QAAEf,EAAO,UAAER,EAAS,KAAE0B,EAAI,WAAEzB,EAAU,YAAEC,EAAW,MAAEwC,EAAK,KAAEtC,EAAI,QAAEC,EAAO,aAAEC,EAAY,GAAEnC,EAAE,YAAEiF,EAAW,kBAAE7C,EAAiB,gBAAEG,EAAe,YAAEC,EAAW,uBAAEqC,EAAsB,KAAEnC,EAAI,UAAEC,EAAS,cAAEE,EAAa,YAAED,EAAW,iBAAEsC,GAAqBxD,EAAIyD,EAAkB,iBAAOzD,EAAI,CAAC,YAAa,WAAY,YAAa,UAAW,UAAW,YAAa,OAAQ,aAAc,cAAe,QAAS,OAAQ,UAAW,eAAgB,KAAM,cAAe,oBAAqB,kBAAmB,cAAe,yBAA0B,OAAQ,YAAa,gBAAiB,cAAe,qBAE5oB,IAAI0D,EAAU,cAAI1C,GAAQ,IAAO2C,UAAU3C,KAAMd,GAC/B,MAAdC,EACAsD,EAAgB,iBAAmBrD,EAEhB,WAAdD,IACLsD,EAAgB,iBAAmBrD,EACnCqD,EAAgBG,KAAOH,EAAgBG,MAAQ,UAEnD,MAIMC,EAA0BC,IAC5B,MAAMC,EAAYD,EACZE,EAAmB9C,EAAe,gBAAoB,WAAgB,KACxE,gBAAoB,MAAO,CAAEhB,UAAW,IAAO+D,sBAC3CjD,GAAQ,gBAAoB,OAAQ,CAAEd,UAAW,cAAI,IAAOgE,uBAAyBlD,GACrFf,GACJ,gBAAoB,MAAO,CAAEC,UAAW,IAAOiE,6BAA+BjD,IAAkB,gBAAoB,WAAgB,KACpIF,GAAQ,gBAAoB,OAAQ,CAAEd,UAAW,cAAI,IAAOgE,uBAAyBlD,GACrFf,GACJ,OAAQ,gBAAoB8D,EAAWpC,OAAOC,OAAO,GAAI6B,EAAkBrD,EAAa,YAAgBoD,GAAoB,KAAO,CAAEjD,KAAMA,EAAMK,IAAKqB,KAAKrB,IAAKV,UAAWwD,EAASpF,GAAIiF,IAAgBS,IAE5M,OAAQ,gBAAoB,IAAgBvC,SAAU,KAAM,EAAGrD,WAAUO,YAAWO,gBAAeC,qBAI/F,MAHwB,cAApB8C,KAAKX,MAAMO,OACX6B,EAAU,cAAIA,EAAStD,GAAclB,EAAemB,GAAelB,EAAgBR,EAAWuC,GAAe,IAAOyC,UAAUzC,cAE9HJ,EACO,eAAmBA,EAAa,CACnCF,IAAKqB,KAAKrB,IACV2B,UAAWN,KAAKM,YAGhB,gBAAoB,KAAM,CAAErC,UAAWQ,GAAqB,KAAMmB,KAAMA,EAAMU,UAAWN,KAAKM,UAAW5B,QAAUtC,IAC9G+B,IACDO,EAAQtC,GACRD,EAASC,KAEdC,GAAIA,IA9BY8F,EA+BD,iBAAqBjE,IA9BhBkE,EA+BKlE,EA/BO,eAAmBkE,EAAS1C,OAAOC,OAAO,GAAKT,GAAiB,CACvGjB,UAAW,cAAImE,EAAQ/C,MAAMpB,UAAWwD,OA+B9BG,EAAuB1D,GAjCIK,EAAW,gBAAoB,IAASmB,OAAOC,OAAO,CAAE0C,QAAS9D,GAAWC,GAAe2D,GAAc,GAkC1IvD,GAAmBoB,KAAKsC,4BAlCN,IAACH,EACIC,KAqCvCvC,EAAqBN,YAAc,uBACnCM,EAAqB0C,aAAe,CAChCtE,UAAW,GACXI,WAAW,EACXH,UAAW,IACX0B,KAAM,OACNzB,YAAY,EACZC,aAAa,EACbI,aAAc,GAEdE,QAAUtC,MACVwE,OAAQ,EACRnB,QAAS,CACLpC,WAAY,OACZC,QAAS,QAEb4D,wBAAwB,EACxBnC,KAAM,KACNG,eAAe,EACfD,YAAa,KACbsC,iBAAkB,CAAC,UAAW,gB,iCC9HlC,6FAMO,MAAMiB,UAAe,YACxB,cACI1C,SAASC,WACTC,KAAKyC,UAAY,cACjBzC,KAAK0C,kBAAoB,KACrBC,SAASC,iBAAiB,YAAa5C,KAAK6C,YAC5CF,SAASC,iBAAiB,aAAc5C,KAAK6C,YAC7CF,SAASC,iBAAiB,UAAW5C,KAAK8C,aAE9C9C,KAAK+C,qBAAuB,KACxBJ,SAASK,oBAAoB,YAAahD,KAAK6C,YAC/CF,SAASK,oBAAoB,aAAchD,KAAK6C,YAChDF,SAASK,oBAAoB,UAAWhD,KAAK8C,aAEjD9C,KAAK6C,WAAczG,IACf,MAAM,OAAE6G,EAAM,UAAEC,EAAS,SAAEC,EAAQ,WAAEC,GAAepD,KAAKX,MACnDgE,EAAUD,GAAcA,IACxBE,EAAkBJ,GAAaA,EAAUzC,SAAWyC,EAAUzC,QAAQ8C,SAASnH,EAAMoE,QACrFgD,EAAoBH,GAAWA,EAAQE,UAAYF,EAAQE,SAASnH,EAAMoE,SAC5EyC,GAAYK,GAAmBE,IAC/BL,GAAS,EAAO/G,GAChB4D,KAAKyC,UAAUhC,QAAQY,UAG/BrB,KAAK8C,WAAc1G,IACf,MAAM,UAAE8G,EAAS,WAAEE,GAAepD,KAAKX,MACjCoE,EAAUrH,EAAMqH,SAAWrH,EAAMsH,MACjCL,EAAUD,GAAcA,IACxBO,EAAgBT,GAAaA,EAAUzC,SAAWyC,EAAUzC,QAAQ8C,SAASnH,EAAMoE,QACnFoD,EAAoBP,GAAWA,EAAQE,UAAYF,EAAQE,SAASnH,EAAMoE,SAC5ER,KAAKX,MAAM4D,QACVQ,IAAY,IAAUI,YAA4B,QAAdzH,EAAMuE,MAC1CgD,IAAiBC,IAClB5D,KAAKX,MAAM8D,UAAS,EAAO/G,GAC3B4D,KAAKyC,UAAUhC,QAAQY,UAG/BrB,KAAKM,UAAalE,KACI,QAAdA,EAAMuE,KAAkBX,KAAKX,MAAM4D,UAGlCjD,KAAKX,MAAMyE,aACZ1H,EAAM2H,kBAEV3H,EAAMsE,iBACa,QAAdtE,EAAMuE,KAA+B,UAAdvE,EAAMuE,KAAiC,MAAdvE,EAAMuE,MAAgBX,KAAKX,MAAM4D,OAG9D,UAAd7G,EAAMuE,KAAiC,MAAdvE,EAAMuE,KAA6B,cAAdvE,EAAMuE,KAAyBX,KAAKX,MAAM4D,SAC9FjD,KAAKX,MAAM8D,UAAUnD,KAAKX,MAAM4D,OAAQ7G,GACxC4D,KAAKX,MAAM2E,WAJXhE,KAAKX,MAAM8D,UAAUnD,KAAKX,MAAM4D,OAAQ7G,KAQpD,SACI,MAAM2B,EAAKiC,KAAKX,OAAO,UAAEpB,EAAS,SAAED,EAAQ,OAAEiF,EAAM,WAAE9E,EAAU,QAAE8F,EAAO,UAAEC,EAAS,cAAEC,EAAa,SAAEhB,EAAU,gBAAiBiB,EAAY,SAE5IC,EAAQ,YAAEP,EAAW,QAAEE,EAAO,UAAEd,EAAS,WAAEE,EAAU,GAErD/G,EAAE,KAAEsF,GAAS5D,EAAIsB,EAAQ,iBAAOtB,EAAI,CAAC,YAAa,WAAY,SAAU,aAAc,UAAW,YAAa,gBAAiB,WAAY,gBAAiB,WAAY,cAAe,UAAW,YAAa,aAAc,KAAM,SACnO,OAAQ,gBAAoB,IAAgByB,SAAU,KAAM,EAAG7C,iBAAmB,gBAAoB,SAAU+C,OAAOC,OAAO,GAAIN,EAAO,CAAEhD,GAAIA,EAAIsC,IAAKqB,KAAKyC,UAAWxE,UAAW,cAAIkG,EAAgB,IAAOG,qBAAuB3H,GAAe,IAAO4H,eAAgBF,GAAY,IAAO3C,UAAU8C,OAAQP,GAAW,IAAOvC,UAAU+C,MAAOP,GAAa,IAAOxC,UAAUgD,QAASzG,GAAY0D,KAAMA,GAAQ,SAAUjD,QAAStC,GAAS+G,GAAUF,EAAQ7G,GAAQ,gBAAiB6G,EAAQ,gBAAiBmB,EAAc9D,UAAWlE,GAAS4D,KAAKM,UAAUlE,GAAQuI,SAAUxG,IAAeH,KAG9kBwE,EAAOjD,YAAc,SACrBiD,EAAOD,aAAe,CAClBtE,UAAW,GACXgF,QAAQ,EACRoB,UAAU,EACVlG,YAAY,EACZ8F,SAAS,EACTC,WAAW,EACXC,eAAe,EACfhB,SAAU,OACVa,QAAS,OACTF,aAAa,I,sICzEV,MAAM,UAAqB,YAC9B,cACIhE,SAASC,WACTC,KAAK4E,eAAiB,GACtB5E,KAAK+C,qBAAuB,KACxBJ,SAASK,oBAAoB,UAAWhD,KAAKM,YAEjDN,KAAKM,UAAalE,IACd,IAAK4D,KAAKX,MAAM4D,SACX4B,MAAMC,KAAKnC,SAASoC,cAAcC,WAAWC,KAAKhH,GAAa,EAAaiH,mBAAmBC,OAAOnF,KAAKP,QAAQ9C,aAAayI,SAASnH,IAC1I,OAEJ,MAAMoH,EAAOrF,KAAK4E,eAClB,GAAkB,cAAdxI,EAAMuE,IAAqB,CAC3B,MAAM2E,EAA6BD,EAAKJ,KAAKtG,GAAOA,GAAOA,EAAI,KAAOA,EAAI,GAAG4G,aAAa,aAC1F,EAAaC,cAAcF,QAE1B,GAAkB,YAAdlJ,EAAMuE,IAAmB,CAC9B,MAAM8E,EAAmBJ,EAAKhF,OACxBqF,EAA4BL,EAAKM,MAAMF,EAAmB,EAAGA,GAC7DG,EAAkBF,GAA6BA,EAA0B,GAC/E,EAAaF,cAAcI,KAGnC5F,KAAK6F,gBAAkB,CAACjF,EAAOL,EAAYuF,EAAUC,GAAS,KAC1D,YAAWnF,EAAOL,EAAYuF,EAAU9F,KAAK4E,eAAgB5E,KAAKX,MAAM2G,UAAYhG,KAAK4E,eAAiB,WAAeqB,QAAQjG,KAAKX,MAAMrB,UAAW+H,IAE3J/F,KAAK1C,QAAU,CAACsD,EAAOsF,EAAO/H,EAAYgI,KACtCnG,KAAK4E,eAAehE,GAAS,GAC7BsF,EAAME,IAAI,CAACjG,EAAMI,KACRJ,EAGKA,EAAKkG,aAKXrG,KAAK4E,eAAehE,GAAOL,GADtB4F,EACoC,KAGAhG,EANzCH,KAAK4E,eAAehE,GAAOL,GAAc,cAAqBJ,GAJ9DH,KAAK4E,eAAehE,GAAOL,GAAc,QAezD,oBACIoC,SAASC,iBAAiB,UAAW5C,KAAKM,WAC1C,MAAM,UAAEtB,GAAcgB,KAAKX,MAC3B,GAAIL,EAAW,CAEX,MAAMsH,EAAwBtG,KAAK4E,eAAeK,KAAKtG,GAAOA,GAAOA,EAAI,KAAOA,EAAI,GAAG4G,aAAa,aAC9FgB,EAAcD,GAAyBA,EAAsB,GAC/DC,GAAeA,EAAYlF,OAC3BD,WAAW,IAAMmF,EAAYlF,UAIzC,wBAGI,OADArB,KAAK4E,eAAiB,IACf,EAEX,iBACI,MAAM,SAAE5G,EAAQ,UAAEgI,GAAchG,KAAKX,MACrC,GAAI2G,EAAW,CACX,IAAIpF,EAAQ,EACZ,OAAO,WAAewF,IAAIpI,EAAUwI,IAChC,MAAMC,EAAQD,EACRnH,EAAQ,GAad,OAZIoH,EAAMpH,OAASoH,EAAMpH,MAAMrB,WACvB6G,MAAM6B,QAAQD,EAAMpH,MAAMrB,UAC1BqB,EAAMrB,SAAW,WAAeoI,IAAIK,EAAMpH,MAAMrB,SAAU2I,GAAU,eAAmBA,EAAQ,CAC3F/F,MAAOA,OAIXvB,EAAMrB,SAAW,eAAmByI,EAAMpH,MAAMrB,SAAU,CACtD4C,MAAOA,OAIZ,eAAmB6F,EAAOpH,KAGzC,OAAO,WAAe+G,IAAIpI,EAAU,CAAC4I,EAAOhG,IAAU,eAAmBgG,EAAO,CAC5EhG,WAGR,SACI,MAAM7C,EAAKiC,KAAKX,OAAO,UAAEpB,EAAS,OAAEgF,EAAM,SAAE6C,EAAQ,SAAE9H,EAAQ,UAAEE,EAAS,UAAE8H,EAAS,oBAAEa,EAAmB,cAEzGC,GAAkB/I,EAAIsB,EAAQ,iBAAOtB,EAAI,CAAC,YAAa,SAAU,WAAY,WAAY,YAAa,YAAa,sBAAuB,kBAC1I,OAAQ,gBAAoB,IAAqBgJ,SAAU,CAAEC,MAAO,CAC5D3J,WAAY2C,KAAK6F,gBACjBvI,QAAS0C,KAAK1C,UACC,QAAdY,EAAuB,gBAAoB,IAAgBsB,SAAU,KAAM,EAAGrD,WAAUM,eAAiB,gBAAoB,MAAO,CAAEwB,UAAW,cAAIxB,EAAWqJ,IAAa,IAAiBmB,OAAS,IAAOvF,UAAUwF,WAAYjJ,GAAYkJ,QAASlE,EAAQvE,QAAStC,GAASD,GAAYA,EAASC,GAAQuC,IAAKkI,GAAuB7I,IAAiBgI,GAAc,gBAAoB,IAAgBxG,SAAU,KAAM,EAAG/C,YAAWU,oBAClb,MAAMiK,EAAiBjK,GAAiB,MACxC,OAAQ,gBAAoBiK,EAAe1H,OAAOC,OAAO,GAAIN,EAAO,CAAEpB,UAAW,cAAIxB,EAAWqJ,IAAa,IAAiBmB,OAAS,IAAOvF,UAAUwF,WAAYjJ,GAAYkJ,QAASlE,EAAQrD,KAAM,OAAQjB,IAAKkI,IAAwB7G,KAAKqH,qBAC5O,gBAAoB,IAAgB7H,SAAU,KAAM,EAAG/C,YAAWU,oBACvE,MAAMiK,EAAiBjK,GAAiBe,EACxC,OAAQ,gBAAoBkJ,EAAe1H,OAAOC,OAAO,GAAIN,EAAO,CAAEpB,UAAW,cAAIxB,EAAWqJ,IAAa,IAAiBmB,OAAS,IAAOvF,UAAUwF,WAAYjJ,GAAYkJ,QAASlE,EAAQrD,KAAM,OAAQjB,IAAKkI,IAAwB7G,KAAKqH,sBAI7P,EAAa9H,YAAc,eAC3B,EAAagD,aAAe,CACxBtE,UAAW,GACXgF,QAAQ,EACR6D,eAAe,EACf9H,WAAW,EACX8G,SAAU,IAAiBwB,KAC3BpJ,UAAW,KACX8H,WAAW,EACXa,oBAAqB,MAEzB,EAAa3B,mBAAqB,CAAC,IAAOX,eAAgB,IAAOD,sBACjE,EAAakB,cAAiB+B,IACtBA,GAAiBA,EAAc,IAAMA,EAAc,GAAGlG,OACtDD,WAAW,IAAMmG,EAAc,GAAGlG,UAG1C,EAAamG,YAAc,I,qBCzHpB,MAAM,UAA4B,YACrC,YAAYnI,GACRS,MAAMT,GACNW,KAAK8G,eAAgB,EACrB9G,KAAKyH,iBAAmB,cACxBzH,KAAK0H,iBAAmB,cACxB1H,KAAKgE,QAAU,KACXhE,KAAK8G,eAAgB,GAEzB9G,KAAK6G,oBAAuBzE,IACxBpC,KAAK0H,iBAAmBtF,GAE5BpC,KAAK2H,oBAAsB,IAAM3H,KAAK0H,iBAClCrI,EAAMuI,eAAiBvI,EAAMuI,cAAcvH,OAAS,GAAKhB,EAAMrB,UAE/D6J,QAAQC,MAAM,2GAGtB,qBACS9H,KAAKX,MAAM4D,SACZjD,KAAK8G,eAAgB,GAG7B,SACI,MAAM/I,EAAKiC,KAAKX,OAAO,SAAErB,EAAQ,UAAEC,EAAS,UAAE8J,EAAS,cAAEH,EAAa,OAAE3E,EAAM,QAAEgB,EAAO,UAAE+B,EAAS,SAElG7J,EAAQ,SAAE2J,EAAQ,OAAEkC,EAAM,UAAEhJ,EAAS,aAAEiJ,GAAiBlK,EAAIsB,EAAQ,iBAAOtB,EAAI,CAAC,WAAY,YAAa,YAAa,gBAAiB,SAAU,UAAW,YAAa,WAAY,WAAY,SAAU,YAAa,iBAClN1B,EAAK2L,EAAO3I,MAAMhD,IAAM,yBAAyB,EAAoB6L,YAC3E,IAAIhK,EACAiK,EACA/D,GAAe,EACfwD,GAAiBA,EAAcvH,OAAS,GACxCnC,EAAY,KACZiK,EAAkBP,EAClBxD,GAAe,IAGflG,EAAY,MACZiK,EAAkB,WAAelC,QAAQjI,IAE7C,MAAM8I,EAAgB9G,KAAK8G,cAC3B,OAAQ,gBAAoB,IAAgBtH,SAAU,KAAM,EAAG5C,YAAWC,gBAAeR,GAAI+L,EAAWjJ,SAAQkJ,oBAAmBjJ,eAC/H,MAAMkJ,EAAgBzL,EAChB0L,EAAiB,gBAAoB,EAAc,CAAE1B,oBAAqB7G,KAAK6G,oBAAqB3I,UAAWA,EAAW+E,OAAQA,EAAQ6C,SAAUA,EAAU,kBAAmBsC,EAAeA,EAAH,UAAwB/L,EAAI2J,UAAWA,EAAWhH,UAAW8H,GAAiB9H,GAAamJ,GACxRK,EAAmB,gBAAoB,MAAO,CAAEvK,UAAW,cAAIrB,EAAWmL,IAAc,IAAkBU,IAAM,IAAO/G,UAAUgH,IAAK5C,IAAa,IAAiBmB,OAAS,IAAOvF,UAAUwF,WAAYjE,GAAU,IAAOvB,UAAUiH,SAAU1K,IAAcgF,GAAUsF,GACvQK,EAAiB,gBAAoBN,EAAe5I,OAAOC,OAAO,GAAIN,EAAO,CAAEpB,UAAW,cAAIrB,EAAWmL,IAAc,IAAkBU,IAAM,IAAO/G,UAAUgH,IAAK5C,IAAa,IAAiBmB,OAAS,IAAOvF,UAAUwF,WAAYjE,GAAU,IAAOvB,UAAUiH,SAAU1K,GAAYU,IAAKqB,KAAKyH,kBAAoB,YAAaY,EAAmBlJ,EAAQC,IAClW,WAAegH,IAAI4B,EAAQa,GAAa,eAAmBA,EAAW,CAClE3F,UAAWlD,KAAKyH,iBAChBrE,WAAYpD,KAAK2H,oBACjB1E,SACA5G,KACA4H,UACA,gBAAiBG,EACjBJ,QAAS,IAAMhE,KAAKgE,aAEP,WAAjBiE,GAA6BhF,GAAUsF,GAO3C,MAAwB,WAAjBN,EAA4B,EAAmB,gBAAoBa,EAAA,EAAQ,CAAEC,QAASH,EAAeI,OAAQR,EAAiBT,UAAWA,EAAWjC,SAAUA,EAAUmD,SAA2B,WAAjBhB,EANhK,KACjBjI,KAAKyH,kBAAoBzH,KAAKyH,iBAAiBhH,QACxCT,KAAKyH,iBAAiBhH,QAAQyI,cAElC,KAE0MC,GAAqBlB,EAAcmB,UAAWnG,OAI/Q,EAAoB1D,YAAc,sBAElC,EAAoB2I,UAAY,EAChC,EAAoB3F,aAAe,CAC/BtE,UAAW,GACX2J,cAAe,GACf3E,QAAQ,EACRgB,SAAS,EACT+B,WAAW,EACXF,SAAU,IAAiBwB,KAC3BS,UAAW,IAAkBsB,KAC7BlN,SAAU,OACV6C,WAAW,EACXiJ,aAAc","file":"js/0.d3c3f9883c50eb40c952.js","sourcesContent":["import * as React from 'react';\nexport var DropdownPosition;\n(function (DropdownPosition) {\n    DropdownPosition[\"right\"] = \"right\";\n    DropdownPosition[\"left\"] = \"left\";\n})(DropdownPosition || (DropdownPosition = {}));\nexport var DropdownDirection;\n(function (DropdownDirection) {\n    DropdownDirection[\"up\"] = \"up\";\n    DropdownDirection[\"down\"] = \"down\";\n})(DropdownDirection || (DropdownDirection = {}));\nexport const DropdownContext = React.createContext({\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onSelect: (event) => undefined,\n    id: '',\n    toggleIndicatorClass: '',\n    toggleIconClass: '',\n    toggleTextClass: '',\n    menuClass: '',\n    itemClass: '',\n    toggleClass: '',\n    baseClass: '',\n    baseComponent: 'div',\n    sectionClass: '',\n    sectionTitleClass: '',\n    sectionComponent: 'section',\n    disabledClass: '',\n    plainTextClass: '',\n    menuComponent: 'ul'\n});\nexport const DropdownArrowContext = React.createContext({\n    keyHandler: null,\n    sendRef: null\n});\n//# sourceMappingURL=dropdownConstants.js.map","import { createIcon } from '../createIcon';\n\nexport const CheckIconConfig = {\n  name: 'CheckIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CheckIcon = createIcon(CheckIconConfig);\n\nexport default CheckIcon;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { InternalDropdownItem } from './InternalDropdownItem';\nimport { DropdownArrowContext } from './dropdownConstants';\nimport { useOUIAProps } from '../../helpers';\nexport const DropdownItem = (_a) => {\n    var { children, className, component = 'a', isDisabled = false, isPlainText = false, isHovered = false, href, tooltip, tooltipProps = {}, listItemClassName, onClick, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref, // Types of Ref are different for React.FC vs React.Component\n    additionalChild, customChild, tabIndex = -1, icon = null, autoFocus, description = null, styleChildren, ouiaId, ouiaSafe } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"isDisabled\", \"isPlainText\", \"isHovered\", \"href\", \"tooltip\", \"tooltipProps\", \"listItemClassName\", \"onClick\", \"ref\", \"additionalChild\", \"customChild\", \"tabIndex\", \"icon\", \"autoFocus\", \"description\", \"styleChildren\", \"ouiaId\", \"ouiaSafe\"]);\n    const ouiaProps = useOUIAProps(DropdownItem.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(DropdownArrowContext.Consumer, null, context => (React.createElement(InternalDropdownItem, Object.assign({ context: context, role: \"menuitem\", tabIndex: tabIndex, className: className, component: component, isDisabled: isDisabled, isPlainText: isPlainText, isHovered: isHovered, href: href, tooltip: tooltip, tooltipProps: tooltipProps, listItemClassName: listItemClassName, onClick: onClick, additionalChild: additionalChild, customChild: customChild, icon: icon, autoFocus: autoFocus, styleChildren: styleChildren, description: description }, ouiaProps, props), children))));\n};\nDropdownItem.displayName = 'DropdownItem';\n//# sourceMappingURL=DropdownItem.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownContext } from './dropdownConstants';\nimport { KEYHANDLER_DIRECTION } from '../../helpers/constants';\nimport { preventedEvents } from '../../helpers/util';\nimport { Tooltip } from '../Tooltip';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nexport class InternalDropdownItem extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.ref = React.createRef();\n        this.additionalRef = React.createRef();\n        this.getInnerNode = (node) => (node && node.childNodes && node.childNodes.length ? node.childNodes[0] : node);\n        this.onKeyDown = (event) => {\n            // Detected key press on this item, notify the menu parent so that the appropriate item can be focused\n            const innerIndex = event.target === this.ref.current ? 0 : 1;\n            if (!this.props.customChild) {\n                event.preventDefault();\n            }\n            if (event.key === 'ArrowUp') {\n                this.props.context.keyHandler(this.props.index, innerIndex, KEYHANDLER_DIRECTION.UP);\n            }\n            else if (event.key === 'ArrowDown') {\n                this.props.context.keyHandler(this.props.index, innerIndex, KEYHANDLER_DIRECTION.DOWN);\n            }\n            else if (event.key === 'ArrowRight') {\n                this.props.context.keyHandler(this.props.index, innerIndex, KEYHANDLER_DIRECTION.RIGHT);\n            }\n            else if (event.key === 'ArrowLeft') {\n                this.props.context.keyHandler(this.props.index, innerIndex, KEYHANDLER_DIRECTION.LEFT);\n            }\n            else if (event.key === 'Enter' || event.key === ' ') {\n                event.target.click();\n                this.props.enterTriggersArrowDown &&\n                    this.props.context.keyHandler(this.props.index, innerIndex, KEYHANDLER_DIRECTION.DOWN);\n            }\n        };\n    }\n    componentDidMount() {\n        const { context, index, isDisabled, role, customChild, autoFocus } = this.props;\n        const customRef = customChild ? this.getInnerNode(this.ref.current) : this.ref.current;\n        context.sendRef(index, [customRef, customChild ? customRef : this.additionalRef.current], isDisabled, role === 'separator');\n        autoFocus && setTimeout(() => customRef.focus());\n    }\n    componentDidUpdate() {\n        const { context, index, isDisabled, role, customChild } = this.props;\n        const customRef = customChild ? this.getInnerNode(this.ref.current) : this.ref.current;\n        context.sendRef(index, [customRef, customChild ? customRef : this.additionalRef.current], isDisabled, role === 'separator');\n    }\n    extendAdditionalChildRef() {\n        const { additionalChild } = this.props;\n        return React.cloneElement(additionalChild, {\n            ref: this.additionalRef\n        });\n    }\n    render() {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const _a = this.props, { className, children, isHovered, context, onClick, component, role, isDisabled, isPlainText, index, href, tooltip, tooltipProps, id, componentID, listItemClassName, additionalChild, customChild, enterTriggersArrowDown, icon, autoFocus, styleChildren, description, inoperableEvents } = _a, additionalProps = __rest(_a, [\"className\", \"children\", \"isHovered\", \"context\", \"onClick\", \"component\", \"role\", \"isDisabled\", \"isPlainText\", \"index\", \"href\", \"tooltip\", \"tooltipProps\", \"id\", \"componentID\", \"listItemClassName\", \"additionalChild\", \"customChild\", \"enterTriggersArrowDown\", \"icon\", \"autoFocus\", \"styleChildren\", \"description\", \"inoperableEvents\"]);\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        let classes = css(icon && styles.modifiers.icon, className);\n        if (component === 'a') {\n            additionalProps['aria-disabled'] = isDisabled;\n        }\n        else if (component === 'button') {\n            additionalProps['aria-disabled'] = isDisabled;\n            additionalProps.type = additionalProps.type || 'button';\n        }\n        const renderWithTooltip = (childNode) => tooltip ? (React.createElement(Tooltip, Object.assign({ content: tooltip }, tooltipProps), childNode)) : (childNode);\n        const renderClonedComponent = (element) => React.cloneElement(element, Object.assign({}, (styleChildren && {\n            className: css(element.props.className, classes)\n        })));\n        const renderDefaultComponent = (tag) => {\n            const Component = tag;\n            const componentContent = description ? (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { className: styles.dropdownMenuItemMain },\n                    icon && React.createElement(\"span\", { className: css(styles.dropdownMenuItemIcon) }, icon),\n                    children),\n                React.createElement(\"div\", { className: styles.dropdownMenuItemDescription }, description))) : (React.createElement(React.Fragment, null,\n                icon && React.createElement(\"span\", { className: css(styles.dropdownMenuItemIcon) }, icon),\n                children));\n            return (React.createElement(Component, Object.assign({}, additionalProps, (isDisabled ? preventedEvents(inoperableEvents) : null), { href: href, ref: this.ref, className: classes, id: componentID }), componentContent));\n        };\n        return (React.createElement(DropdownContext.Consumer, null, ({ onSelect, itemClass, disabledClass, plainTextClass }) => {\n            if (this.props.role !== 'separator') {\n                classes = css(classes, isDisabled && disabledClass, isPlainText && plainTextClass, itemClass, description && styles.modifiers.description);\n            }\n            if (customChild) {\n                return React.cloneElement(customChild, {\n                    ref: this.ref,\n                    onKeyDown: this.onKeyDown\n                });\n            }\n            return (React.createElement(\"li\", { className: listItemClassName || null, role: role, onKeyDown: this.onKeyDown, onClick: (event) => {\n                    if (!isDisabled) {\n                        onClick(event);\n                        onSelect(event);\n                    }\n                }, id: id },\n                renderWithTooltip(React.isValidElement(component)\n                    ? renderClonedComponent(component)\n                    : renderDefaultComponent(component)),\n                additionalChild && this.extendAdditionalChildRef()));\n        }));\n    }\n}\nInternalDropdownItem.displayName = 'InternalDropdownItem';\nInternalDropdownItem.defaultProps = {\n    className: '',\n    isHovered: false,\n    component: 'a',\n    role: 'none',\n    isDisabled: false,\n    isPlainText: false,\n    tooltipProps: {},\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onClick: (event) => undefined,\n    index: -1,\n    context: {\n        keyHandler: () => { },\n        sendRef: () => { }\n    },\n    enterTriggersArrowDown: false,\n    icon: null,\n    styleChildren: true,\n    description: null,\n    inoperableEvents: ['onClick', 'onKeyPress']\n};\n//# sourceMappingURL=InternalDropdownItem.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { DropdownContext } from './dropdownConstants';\nimport { css } from '@patternfly/react-styles';\nimport { KEY_CODES } from '../../helpers/constants';\nexport class Toggle extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.buttonRef = React.createRef();\n        this.componentDidMount = () => {\n            document.addEventListener('mousedown', this.onDocClick);\n            document.addEventListener('touchstart', this.onDocClick);\n            document.addEventListener('keydown', this.onEscPress);\n        };\n        this.componentWillUnmount = () => {\n            document.removeEventListener('mousedown', this.onDocClick);\n            document.removeEventListener('touchstart', this.onDocClick);\n            document.removeEventListener('keydown', this.onEscPress);\n        };\n        this.onDocClick = (event) => {\n            const { isOpen, parentRef, onToggle, getMenuRef } = this.props;\n            const menuRef = getMenuRef && getMenuRef();\n            const clickedOnToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n            const clickedWithinMenu = menuRef && menuRef.contains && menuRef.contains(event.target);\n            if (isOpen && !(clickedOnToggle || clickedWithinMenu)) {\n                onToggle(false, event);\n                this.buttonRef.current.focus();\n            }\n        };\n        this.onEscPress = (event) => {\n            const { parentRef, getMenuRef } = this.props;\n            const keyCode = event.keyCode || event.which;\n            const menuRef = getMenuRef && getMenuRef();\n            const escFromToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n            const escFromWithinMenu = menuRef && menuRef.contains && menuRef.contains(event.target);\n            if (this.props.isOpen &&\n                (keyCode === KEY_CODES.ESCAPE_KEY || event.key === 'Tab') &&\n                (escFromToggle || escFromWithinMenu)) {\n                this.props.onToggle(false, event);\n                this.buttonRef.current.focus();\n            }\n        };\n        this.onKeyDown = (event) => {\n            if (event.key === 'Tab' && !this.props.isOpen) {\n                return;\n            }\n            if (!this.props.bubbleEvent) {\n                event.stopPropagation();\n            }\n            event.preventDefault();\n            if ((event.key === 'Tab' || event.key === 'Enter' || event.key === ' ') && this.props.isOpen) {\n                this.props.onToggle(!this.props.isOpen, event);\n            }\n            else if ((event.key === 'Enter' || event.key === ' ' || event.key === 'ArrowDown') && !this.props.isOpen) {\n                this.props.onToggle(!this.props.isOpen, event);\n                this.props.onEnter();\n            }\n        };\n    }\n    render() {\n        const _a = this.props, { className, children, isOpen, isDisabled, isPlain, isPrimary, isSplitButton, onToggle, 'aria-haspopup': ariaHasPopup, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        isActive, bubbleEvent, onEnter, parentRef, getMenuRef, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        id, type } = _a, props = __rest(_a, [\"className\", \"children\", \"isOpen\", \"isDisabled\", \"isPlain\", \"isPrimary\", \"isSplitButton\", \"onToggle\", 'aria-haspopup', \"isActive\", \"bubbleEvent\", \"onEnter\", \"parentRef\", \"getMenuRef\", \"id\", \"type\"]);\n        return (React.createElement(DropdownContext.Consumer, null, ({ toggleClass }) => (React.createElement(\"button\", Object.assign({}, props, { id: id, ref: this.buttonRef, className: css(isSplitButton ? styles.dropdownToggleButton : toggleClass || styles.dropdownToggle, isActive && styles.modifiers.active, isPlain && styles.modifiers.plain, isPrimary && styles.modifiers.primary, className), type: type || 'button', onClick: event => onToggle(!isOpen, event), \"aria-expanded\": isOpen, \"aria-haspopup\": ariaHasPopup, onKeyDown: event => this.onKeyDown(event), disabled: isDisabled }), children))));\n    }\n}\nToggle.displayName = 'Toggle';\nToggle.defaultProps = {\n    className: '',\n    isOpen: false,\n    isActive: false,\n    isDisabled: false,\n    isPlain: false,\n    isPrimary: false,\n    isSplitButton: false,\n    onToggle: () => { },\n    onEnter: () => { },\n    bubbleEvent: false\n};\n//# sourceMappingURL=Toggle.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { keyHandler } from '../../helpers/util';\nimport { DropdownPosition, DropdownArrowContext, DropdownContext } from './dropdownConstants';\nexport class DropdownMenu extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.refsCollection = [];\n        this.componentWillUnmount = () => {\n            document.removeEventListener('keydown', this.onKeyDown);\n        };\n        this.onKeyDown = (event) => {\n            if (!this.props.isOpen ||\n                !Array.from(document.activeElement.classList).find(className => DropdownMenu.validToggleClasses.concat(this.context.toggleClass).includes(className))) {\n                return;\n            }\n            const refs = this.refsCollection;\n            if (event.key === 'ArrowDown') {\n                const firstFocusTargetCollection = refs.find(ref => ref && ref[0] && !ref[0].hasAttribute('disabled'));\n                DropdownMenu.focusFirstRef(firstFocusTargetCollection);\n            }\n            else if (event.key === 'ArrowUp') {\n                const collectionLength = refs.length;\n                const lastFocusTargetCollection = refs.slice(collectionLength - 1, collectionLength);\n                const lastFocusTarget = lastFocusTargetCollection && lastFocusTargetCollection[0];\n                DropdownMenu.focusFirstRef(lastFocusTarget);\n            }\n        };\n        this.childKeyHandler = (index, innerIndex, position, custom = false) => {\n            keyHandler(index, innerIndex, position, this.refsCollection, this.props.isGrouped ? this.refsCollection : React.Children.toArray(this.props.children), custom);\n        };\n        this.sendRef = (index, nodes, isDisabled, isSeparator) => {\n            this.refsCollection[index] = [];\n            nodes.map((node, innerIndex) => {\n                if (!node) {\n                    this.refsCollection[index][innerIndex] = null;\n                }\n                else if (!node.getAttribute) {\n                    // eslint-disable-next-line react/no-find-dom-node\n                    this.refsCollection[index][innerIndex] = ReactDOM.findDOMNode(node);\n                }\n                else if (isSeparator) {\n                    this.refsCollection[index][innerIndex] = null;\n                }\n                else {\n                    this.refsCollection[index][innerIndex] = node;\n                }\n            });\n        };\n    }\n    componentDidMount() {\n        document.addEventListener('keydown', this.onKeyDown);\n        const { autoFocus } = this.props;\n        if (autoFocus) {\n            // Focus first non-disabled element\n            const focusTargetCollection = this.refsCollection.find(ref => ref && ref[0] && !ref[0].hasAttribute('disabled'));\n            const focusTarget = focusTargetCollection && focusTargetCollection[0];\n            if (focusTarget && focusTarget.focus) {\n                setTimeout(() => focusTarget.focus());\n            }\n        }\n    }\n    shouldComponentUpdate() {\n        // reset refsCollection before updating to account for child removal between mounts\n        this.refsCollection = [];\n        return true;\n    }\n    extendChildren() {\n        const { children, isGrouped } = this.props;\n        if (isGrouped) {\n            let index = 0;\n            return React.Children.map(children, groupedChildren => {\n                const group = groupedChildren;\n                const props = {};\n                if (group.props && group.props.children) {\n                    if (Array.isArray(group.props.children)) {\n                        props.children = React.Children.map(group.props.children, option => React.cloneElement(option, {\n                            index: index++\n                        }));\n                    }\n                    else {\n                        props.children = React.cloneElement(group.props.children, {\n                            index: index++\n                        });\n                    }\n                }\n                return React.cloneElement(group, props);\n            });\n        }\n        return React.Children.map(children, (child, index) => React.cloneElement(child, {\n            index\n        }));\n    }\n    render() {\n        const _a = this.props, { className, isOpen, position, children, component, isGrouped, setMenuComponentRef, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        openedOnEnter } = _a, props = __rest(_a, [\"className\", \"isOpen\", \"position\", \"children\", \"component\", \"isGrouped\", \"setMenuComponentRef\", \"openedOnEnter\"]);\n        return (React.createElement(DropdownArrowContext.Provider, { value: {\n                keyHandler: this.childKeyHandler,\n                sendRef: this.sendRef\n            } }, component === 'div' ? (React.createElement(DropdownContext.Consumer, null, ({ onSelect, menuClass }) => (React.createElement(\"div\", { className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, className), hidden: !isOpen, onClick: event => onSelect && onSelect(event), ref: setMenuComponentRef }, children)))) : ((isGrouped && (React.createElement(DropdownContext.Consumer, null, ({ menuClass, menuComponent }) => {\n            const MenuComponent = (menuComponent || 'div');\n            return (React.createElement(MenuComponent, Object.assign({}, props, { className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, className), hidden: !isOpen, role: \"menu\", ref: setMenuComponentRef }), this.extendChildren()));\n        }))) || (React.createElement(DropdownContext.Consumer, null, ({ menuClass, menuComponent }) => {\n            const MenuComponent = (menuComponent || component);\n            return (React.createElement(MenuComponent, Object.assign({}, props, { className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, className), hidden: !isOpen, role: \"menu\", ref: setMenuComponentRef }), this.extendChildren()));\n        })))));\n    }\n}\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = {\n    className: '',\n    isOpen: true,\n    openedOnEnter: false,\n    autoFocus: true,\n    position: DropdownPosition.left,\n    component: 'ul',\n    isGrouped: false,\n    setMenuComponentRef: null\n};\nDropdownMenu.validToggleClasses = [styles.dropdownToggle, styles.dropdownToggleButton];\nDropdownMenu.focusFirstRef = (refCollection) => {\n    if (refCollection && refCollection[0] && refCollection[0].focus) {\n        setTimeout(() => refCollection[0].focus());\n    }\n};\nDropdownMenu.contextType = DropdownContext;\n//# sourceMappingURL=DropdownMenu.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownMenu } from './DropdownMenu';\nimport { DropdownContext, DropdownDirection, DropdownPosition } from './dropdownConstants';\nimport { getOUIAProps } from '../../helpers';\nimport { Popper } from '../../helpers/Popper/Popper';\nexport class DropdownWithContext extends React.Component {\n    constructor(props) {\n        super(props);\n        this.openedOnEnter = false;\n        this.baseComponentRef = React.createRef();\n        this.menuComponentRef = React.createRef();\n        this.onEnter = () => {\n            this.openedOnEnter = true;\n        };\n        this.setMenuComponentRef = (element) => {\n            this.menuComponentRef = element;\n        };\n        this.getMenuComponentRef = () => this.menuComponentRef;\n        if (props.dropdownItems && props.dropdownItems.length > 0 && props.children) {\n            // eslint-disable-next-line no-console\n            console.error('Children and dropdownItems props have been provided. Only the dropdownItems prop items will be rendered');\n        }\n    }\n    componentDidUpdate() {\n        if (!this.props.isOpen) {\n            this.openedOnEnter = false;\n        }\n    }\n    render() {\n        const _a = this.props, { children, className, direction, dropdownItems, isOpen, isPlain, isGrouped, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onSelect, position, toggle, autoFocus, menuAppendTo } = _a, props = __rest(_a, [\"children\", \"className\", \"direction\", \"dropdownItems\", \"isOpen\", \"isPlain\", \"isGrouped\", \"onSelect\", \"position\", \"toggle\", \"autoFocus\", \"menuAppendTo\"]);\n        const id = toggle.props.id || `pf-dropdown-toggle-id-${DropdownWithContext.currentId++}`;\n        let component;\n        let renderedContent;\n        let ariaHasPopup = false;\n        if (dropdownItems && dropdownItems.length > 0) {\n            component = 'ul';\n            renderedContent = dropdownItems;\n            ariaHasPopup = true;\n        }\n        else {\n            component = 'div';\n            renderedContent = React.Children.toArray(children);\n        }\n        const openedOnEnter = this.openedOnEnter;\n        return (React.createElement(DropdownContext.Consumer, null, ({ baseClass, baseComponent, id: contextId, ouiaId, ouiaComponentType, ouiaSafe }) => {\n            const BaseComponent = baseComponent;\n            const menuContainer = (React.createElement(DropdownMenu, { setMenuComponentRef: this.setMenuComponentRef, component: component, isOpen: isOpen, position: position, \"aria-labelledby\": contextId ? `${contextId}-toggle` : id, isGrouped: isGrouped, autoFocus: openedOnEnter && autoFocus }, renderedContent));\n            const popperContainer = (React.createElement(\"div\", { className: css(baseClass, direction === DropdownDirection.up && styles.modifiers.top, position === DropdownPosition.right && styles.modifiers.alignRight, isOpen && styles.modifiers.expanded, className) }, isOpen && menuContainer));\n            const mainContainer = (React.createElement(BaseComponent, Object.assign({}, props, { className: css(baseClass, direction === DropdownDirection.up && styles.modifiers.top, position === DropdownPosition.right && styles.modifiers.alignRight, isOpen && styles.modifiers.expanded, className), ref: this.baseComponentRef }, getOUIAProps(ouiaComponentType, ouiaId, ouiaSafe)),\n                React.Children.map(toggle, oneToggle => React.cloneElement(oneToggle, {\n                    parentRef: this.baseComponentRef,\n                    getMenuRef: this.getMenuComponentRef,\n                    isOpen,\n                    id,\n                    isPlain,\n                    'aria-haspopup': ariaHasPopup,\n                    onEnter: () => this.onEnter()\n                })),\n                menuAppendTo === 'inline' && isOpen && menuContainer));\n            const getParentElement = () => {\n                if (this.baseComponentRef && this.baseComponentRef.current) {\n                    return this.baseComponentRef.current.parentElement;\n                }\n                return null;\n            };\n            return menuAppendTo === 'inline' ? (mainContainer) : (React.createElement(Popper, { trigger: mainContainer, popper: popperContainer, direction: direction, position: position, appendTo: menuAppendTo === 'parent' ? getParentElement() : menuAppendTo, isVisible: isOpen }));\n        }));\n    }\n}\nDropdownWithContext.displayName = 'DropdownWithContext';\n// seed for the aria-labelledby ID\nDropdownWithContext.currentId = 0;\nDropdownWithContext.defaultProps = {\n    className: '',\n    dropdownItems: [],\n    isOpen: false,\n    isPlain: false,\n    isGrouped: false,\n    position: DropdownPosition.left,\n    direction: DropdownDirection.down,\n    onSelect: () => undefined,\n    autoFocus: true,\n    menuAppendTo: 'inline'\n};\n//# sourceMappingURL=DropdownWithContext.js.map"],"sourceRoot":""}