{"version":3,"sources":["webpack:///./src/redux/Actions/MainModalActions.js","webpack:///./src/PresentationalComponents/Shared/toolbarschema.scss?374e","webpack:///./src/PresentationalComponents/Shared/toolbarschema.scss","webpack:///./src/SmartComponents/Portfolio/add-portfolio-modal.js","webpack:///./src/SmartComponents/Portfolio/remove-portfolio-modal.js","webpack:///./src/PresentationalComponents/Portfolio/portfoliocard.scss?0013","webpack:///./src/PresentationalComponents/Portfolio/portfoliocard.scss","webpack:///./src/assets/images/default-portfolio.jpg","webpack:///./node_modules/rxjs/_esm5/internal/util/noop.js","webpack:///./node_modules/rxjs/_esm5/internal/util/pipe.js","webpack:///./src/PresentationalComponents/Portfolio/portfolio-card-header.js","webpack:///./src/PresentationalComponents/Portfolio/PorfolioCard.js","webpack:///./src/PresentationalComponents/Portfolio/PortfoliosFilterToolbar.js","webpack:///./src/SmartComponents/Portfolio/Portfolios.js"],"names":["__webpack_require__","d","__webpack_exports__","showModal","hideModal","_ActionTypes__WEBPACK_IMPORTED_MODULE_0__","_ref","modalProps","modalType","type","ActionTypes","payload","content","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","AddPortfolioModal","goBack","history","addPortfolio","addNotification","fetchPortfolios","initialValues","updatePortfolio","onCancel","pipe","variant","title","description","schema","properties","name","required","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_7__","isOpen","onClose","_Common_FormRenderer__WEBPACK_IMPORTED_MODULE_3__","schemaType","onSubmit","data","then","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","formContainer","buttonsLabels","submitLabel","propTypes","PropTypes","shape","func","isRequired","object","withRouter","connect","_ref2","_ref3","portfolios","portfolioReducer","id","match","params","find","item","portfolioId","dispatch","bindActionCreators","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","react_redux__WEBPACK_IMPORTED_MODULE_3__","redux__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_6__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_8__","_red_hat_insights_insights_frontend_components_components_Notifications__WEBPACK_IMPORTED_MODULE_9__","_redux_Actions_PortfolioActions__WEBPACK_IMPORTED_MODULE_10__","_redux_Actions_MainModalActions__WEBPACK_IMPORTED_MODULE_11__","rxjs__WEBPACK_IMPORTED_MODULE_12__","RemovePortfolioModal","_ref$history","removePortfolio","portfolioName","actions","key","onClick","className","size","string","state","portfolio","portfolioDetailsFromState","p","noop","fns","_i","arguments","length","input","reduce","prev","fn","pipeFromArray","PortfolioCardHeader","backgroundSrc","headerActions","react_default","style","backgroundImage","concat","Toolbar","ToolbarGroup","marginLeft","paddingBottom","Text","component","TextVariants","h4","arrayOf","node","defaultProps","DefaultPortfolioImg","TO_DISPLAY","PortfolioCard","imageUrl","props","objectWithoutProperties_default","GridItem","sm","md","lg","xl","Link","to","Card","CardHeader","portfolio_card_header","Button","aria-label","console","log","edit_alt_icon","fill","trash_icon","CardBody","CardCommon","extends_default","objectSpread_default","toDisplay","CardFooter","PortfoliosFilterToolbar","onFilterChange","filterValue","top_toolbar","Level","LevelItem","FilterToolbarItem","searchValue","placeholder","OrderToolbarItem","Portfolios","filteredItems","_this","setState","this","fetchData","scrollToTop","TextContent","h2","_this2","items","filter","toLowerCase","includes","trim","map","PorfolioCard","isLoading","react","Portfolio_PortfoliosFilterToolbar","Route","exact","path","AddPortfolio","RemovePortfolio","renderToolbar","ContentGallery","Component","array","platforms","bool","searchFilter","_ref2$portfolioReduce","apiProps"],"mappings":"0FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,GAEaG,EAAY,SAAAG,GAAA,IAAGC,EAAHD,EAAGC,WAAYC,EAAfF,EAAeE,UAAf,MAAgC,CACvDC,KAAMC,IACNC,QAAS,CAAEJ,aAAYC,eAGZJ,EAAY,iBAAO,CAC9BK,KAAMC,IACNC,QAAS,4BCRX,IAAAC,EAAcZ,EAAQ,KAEtB,iBAAAY,MAAA,EAA4CC,EAAAC,EAASF,EAAA,MAOrD,IAAAG,EAAA,CAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAAC,GAEanB,EAAQ,IAARA,CAA8DY,EAAAG,GAE3EH,EAAAQ,SAAAP,EAAAQ,QAAAT,EAAAQ,8BCjBAC,EAAAR,EAAAQ,QAA2BrB,EAAQ,IAARA,EAA0D,IAErFc,EAAUd,EAAQ,KAAsG,IAGxHqB,EAAAC,KAAA,CAAcT,EAAAC,EAAS,u8CAAq8C,iKCMt9CS,EAAoB,SAAAjB,GAOpB,IANOkB,EAMPlB,EANJmB,QAAWD,OACXE,EAKIpB,EALJoB,aACAC,EAIIrB,EAJJqB,gBACAC,EAGItB,EAHJsB,gBACAC,EAEIvB,EAFJuB,cACAC,EACIxB,EADJwB,gBAMMC,EAAW,kBAAMC,YACrBL,EAAgB,CACdM,QAAS,UACTC,MAAOL,EAAgB,oBAAsB,mBAC7CM,YAAaN,EAAgB,4CAA8C,gDAE7EL,MAGIY,EAAS,CACb3B,KAAM,SACN4B,WAAY,CACVC,KAAM,CAAEJ,MAAOL,EAAgB,iBAAmB,qBAAsBpB,KAAM,UAC9E0B,YAAa,CAAED,MAAO,cAAezB,KAAM,WAE7C8B,SAAU,CAAE,OAAQ,gBAGtB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACET,MAAQL,EAAgB,iBAAmB,mBAC3Ce,QAAM,EACNC,QAAUd,GAEVS,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEV,OAASA,EACTW,WAAW,UACXC,SA/BW,SAAAC,GAAI,OAAIpB,EACrBC,EAAgBmB,GAAMC,KAAK1B,GAAQ0B,KAAK,kBAAMtB,MAC9CF,EAAauB,GAAMC,KAAK1B,GAAQ0B,KAAK,kBAAMtB,OA8BzCG,SAAWA,EACXF,cAAasB,IAAA,GAAQtB,GACrBuB,cAAc,QACdC,cAAgB,CACdC,YAAa,YAOvB/B,EAAkBgC,UAAY,CAC5B9B,QAAS+B,IAAUC,MAAM,CACvBjC,OAAQgC,IAAUE,KAAKC,aACtBA,WACHjC,aAAc8B,IAAUE,KAAKC,WAC7BhC,gBAAiB6B,IAAUE,KAAKC,WAChC/B,gBAAiB4B,IAAUE,KAAKC,WAChC9B,cAAe2B,IAAUI,OACzB9B,gBAAiB0B,IAAUE,KAAKC,YAenBE,gBAAWC,kBAZF,SAAAC,EAAAC,GAAA,IAAuBC,EAAvBF,EAAGG,iBAAoBD,WAAoCE,EAA3DH,EAAwCI,MAASC,OAAUF,GAA3D,MAAuE,CAC7FtC,cAAesC,GAAMF,EAAWK,KAAK,SAAAC,GAAI,OAAIA,EAAKJ,KAAOA,IACzDK,YAAaL,IAGY,SAACM,GAAD,OAAcC,6BAAmB,CAC1D/C,kCACAD,iBACAI,oBACAF,qBACC6C,IAEuBX,CAA6CvC,sCCrFvE,IAAAoD,EAAA3E,EAAA,GAAA4E,EAAA5E,EAAA6E,EAAAF,GAAAG,EAAA9E,EAAA,GAAA+E,EAAA/E,EAAA6E,EAAAC,GAAAE,EAAAhF,EAAA,KAAAiF,EAAAjF,EAAA,IAAAkF,EAAAlF,EAAA,IAAAmF,EAAAnF,EAAA,KAAAoF,EAAApF,EAAA,IAAA2C,EAAA3C,EAAA,IAAAqF,EAAArF,EAAA,IAAAsF,EAAAtF,EAAA,IAAAuF,EAAAvF,EAAA,KAAAwF,EAAAxF,EAAA,KAAAyF,EAAAzF,EAAA,KAYM0F,GAZN1F,EAAA,KAY6B,SAAAM,GAOvB,IAAAqF,EAAArF,EANJmB,QAAWD,EAMPmE,EANOnE,OAAQF,EAMfqE,EANerE,KACnBsE,EAKItF,EALJsF,gBACAjE,EAIIrB,EAJJqB,gBACAC,EAGItB,EAHJsB,gBACA4C,EAEIlE,EAFJkE,YACAqB,EACIvF,EADJuF,cAKM9D,EAAW,kBAAMC,YACrBL,EAAgB,CACdM,QAAS,UACTC,MAAO,qBACPC,YAAa,kDAEfX,MAGF,OACEoD,EAAAnC,EAAAC,cAACyC,EAAA,EAAD,CACEvC,QAAM,EACNV,MAAU,GACVW,QAAUd,EACV+D,QAAU,CACRlB,EAAAnC,EAAAC,cAAC0C,EAAA,EAAD,CAAQW,IAAI,SAAS9D,QAAQ,YAAYxB,KAAK,SAASuF,QAAUjE,GAAjE,UAGA6C,EAAAnC,EAAAC,cAAC0C,EAAA,EAAD,CAAQW,IAAI,SAAS9D,QAAQ,UAAUxB,KAAK,SAASuF,QArB1C,kBAAMJ,EAAgBpB,GACtCtB,KAAK,kBAAMlB,YAAKJ,IAAmBN,EAAK,oBAoBnC,aAKFsD,EAAAnC,EAAAC,cAACC,EAAA,EAAD,KACEiC,EAAAnC,EAAAC,cAAA,OAAKuD,UAAU,kBACbrB,EAAAnC,EAAAC,cAAC2C,EAAA,EAAD,CAAOa,KAAO,MAAd,wBACyBL,QAQnCH,EAAqBnC,UAAY,CAC/B9B,QAAS+B,IAAUC,MAAM,CACvBjC,OAAQgC,IAAUE,KAAKC,WACvBrC,KAAMkC,IAAUE,KAAKC,aACpBA,WACHiC,gBAAiBpC,IAAUE,KAAKC,WAChChC,gBAAiB6B,IAAUE,KAAKC,WAChC/B,gBAAiB4B,IAAUE,KAAKC,WAChCa,YAAahB,IAAU2C,OACvBN,cAAerC,IAAU2C,QAqBZtC,gBAAWC,kBAfF,SAACsC,EAADrC,GAAwC,IAC1DsC,EAJ4B,SAACD,EAAOjC,GAAR,OAChCiC,EAAMlC,iBAAiBD,WAAWK,KAAK,SAAA+B,GAAS,OAAIA,EAAUlC,KAAQA,IAGtDmC,CAA0BF,EADoBrC,EAA9BK,MAASC,OAAUF,IAEnD,MAAO,CACLK,YAAa6B,EAAUlC,GACvB0B,cAAeQ,EAAU/D,OAIF,SAACmC,GAAD,OAAcC,6BAAmB,CAC1D/C,kCACAC,oBACAgE,oBACAxF,eACCqE,IAEuBX,CAA6C4B,yBCtFvE,IAAA9E,EAAcZ,EAAQ,KAEtB,iBAAAY,MAAA,EAA4CC,EAAAC,EAASF,EAAA,MAOrD,IAAAG,EAAA,CAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAAC,GAEanB,EAAQ,IAARA,CAA8DY,EAAAG,GAE3EH,EAAAQ,SAAAP,EAAAQ,QAAAT,EAAAQ,8BCjBAC,EAAAR,EAAAQ,QAA2BrB,EAAQ,IAARA,EAA0D,IAErFc,EAAUd,EAAQ,KAAsG,IAGxHqB,EAAAC,KAAA,CAAcT,EAAAC,EAAS,g8CAA87C,0BCLr9CD,EAAAQ,QAAiBrB,EAAAuG,EAAuB,gECCjC,SAAAC,KCCA,SAAAxE,IAEP,IADA,IAAAyE,EAAA,GACAC,EAAA,EAAoBA,EAAAC,UAAAC,OAAuBF,IAC3CD,EAAAC,GAAAC,UAAAD,GAEA,OAEO,SAAAD,GACP,IAAAA,EACA,OAAeD,EAEf,OAAAC,EAAAG,OACA,OAAAH,EAAA,GAEA,gBAAAI,GACA,OAAAJ,EAAAK,OAAA,SAAAC,EAAAC,GAA+C,OAAAA,EAAAD,IAAmBF,IAVlEI,CAAAR,GAPAzG,EAAAC,EAAAC,EAAA,sBAAA8B,kcCOMkF,EAAsB,SAAA5G,GAAA,IAAG6G,EAAH7G,EAAG6G,cAAetB,EAAlBvF,EAAkBuF,cAAeuB,EAAjC9G,EAAiC8G,cAAjC,OAC1BC,EAAA5E,EAAAC,cAAA,OAAKuD,UAAU,wBAAwBqB,MAAQ,CAAEC,gBAAe,OAAAC,OAASL,EAAT,OAC9DE,EAAA5E,EAAAC,cAAC+E,EAAA,EAAD,KACEJ,EAAA5E,EAAAC,cAACgF,EAAA,EAAD,CAAcJ,MAAQ,CACpBK,WAAY,OACZC,cAAe,KAEbR,IAGNC,EAAA5E,EAAAC,cAACmF,EAAA,EAAD,CAAM5B,UAAU,wBAAwB6B,UAAYC,IAAaC,IAAOnC,KAI5EqB,EAAoB3D,UAAY,CAC9B4D,cAAe3D,IAAU2C,OACzBN,cAAerC,IAAU2C,OAAOxC,WAChCyD,cAAe5D,IAAUyE,QAAQzE,IAAU0E,OAG7ChB,EAAoBiB,aAAe,CACjChB,cAAeiB,IACfhB,cAAe,IAGFF,QCvBTmB,EAAa,CAAE,cAAe,YAyB9BC,EAAgB,SAAAhI,GAAA,IAtBQuF,EAAerB,EAsBpB+D,EAAHjI,EAAGiI,SAAUjG,EAAbhC,EAAagC,KAAM6B,EAAnB7D,EAAmB6D,GAAOqE,EAA1BC,IAAAnI,EAAA,iCACpB+G,EAAA5E,EAAAC,cAACgG,EAAA,EAAD,CAAUC,GAAK,EAAIC,GAAK,EAAIC,GAAK,EAAIC,GAAK,GACxCzB,EAAA5E,EAAAC,cAACqG,EAAA,EAAD,CAAM9C,UAAU,YAAY+C,GAAE,cAAAxB,OAAiBrD,IAC7CkD,EAAA5E,EAAAC,cAACuG,EAAA,EAAD,KACE5B,EAAA5E,EAAAC,cAACwG,EAAA,EAAD,CAAYjD,UAAU,qBACpBoB,EAAA5E,EAAAC,cAACyG,EAAD,CACEtD,cAAgBvD,EAChB8E,eA7BkBvB,EA6BmBvD,EA7BJkC,EA6BUL,EA7BM,CAC3DkD,EAAA5E,EAAAC,cAACqG,EAAA,EAAD,CAAMhD,IAAI,wBAAwBiD,GAAE,oBAAAxB,OAAuBhD,IACzD6C,EAAA5E,EAAAC,cAAC0G,EAAA,EAAD,CACEnH,QAAQ,QACRoH,aAAA,kBAAA7B,OAA+B3B,GAC/BG,QAAU,kBAAMsD,QAAQC,IAAI,8CAE5BlC,EAAA5E,EAAAC,cAAC8G,EAAA,EAAD,CAAaC,KATD,YAYhBpC,EAAA5E,EAAAC,cAACqG,EAAA,EAAD,CAAMhD,IAAI,0BAA0BiD,GAAE,sBAAAxB,OAAyBhD,IAC7D6C,EAAA5E,EAAAC,cAAC0G,EAAA,EAAD,CACErD,IAAI,0BACJ9D,QAAQ,QACRoH,aAAA,oBAAA7B,OAAiC3B,GACjCG,QAAU,kBAAMsD,QAAQC,IAAI,gDAE5BlC,EAAA5E,EAAAC,cAACgH,EAAA,EAAD,CAAWD,KAnBC,iBAkCVpC,EAAA5E,EAAAC,cAACiH,EAAA,EAAD,KACEtC,EAAA5E,EAAAC,cAACkH,EAAA,EAADC,IAAA,GAAAC,IAAA,CAAoBxH,OAAMiG,YAAaC,GAAvC,CAAiDuB,UAAY1B,MAE/DhB,EAAA5E,EAAAC,cAACsH,EAAA,EAAD,UAMR1B,EAAc/E,UAAY,CACxB9B,QAAS8B,IAAUK,OACnB2E,SAAUhF,IAAU4C,OACpB7D,KAAMiB,IAAU4C,OAChBhC,GAAIZ,IAAU4C,QAGDmC,qCCpDT2B,WAA0B,SAAA3J,GAAA,IAAG4J,EAAH5J,EAAG4J,eAAgBC,EAAnB7J,EAAmB6J,YAAgB3B,EAAnCC,IAAAnI,EAAA,yCAC9B+G,EAAA5E,EAAAC,cAAC0H,GAAA,EAAD,KACE/C,EAAA5E,EAAAC,cAAC2H,EAAA,EAAD,KACEhD,EAAA5E,EAAAC,cAAC4H,EAAA,EAAD,KACEjD,EAAA5E,EAAAC,cAAC6H,GAAA,EAADV,IAAA,GAAwBrB,EAAxB,CAAgCgC,YAAcL,EAAcD,eAAiBA,EAAiBO,YAAY,uBAE5GpD,EAAA5E,EAAAC,cAAC4H,EAAA,EAAD,KACEjD,EAAA5E,EAAAC,cAACgI,EAAA,EAAsBlC,QAM/ByB,GAAwB1G,UAAY,CAClC2G,eAAgB1G,IAAUE,KAAKC,WAC/BwG,YAAa3G,IAAU2C,QAGV8D,qECXTU,6MACM,CACNC,cAAe,GACfhI,QAAQ,EACRuH,YAAa,iCAGH,WACVU,EAAKrC,MAAM5G,qDAQI,SAAAuI,GAAW,OAAIU,EAAKC,SAAS,CAAEX,qFAJ9CY,KAAKC,YACLC,uDAMA,OACE5D,EAAA5E,EAAAC,cAAC2H,EAAA,EAAD,CAAOpE,UAAU,oCACfoB,EAAA5E,EAAAC,cAAC4H,EAAA,EAAD,KACEjD,EAAA5E,EAAAC,cAACwI,EAAA,EAAD,KACE7D,EAAA5E,EAAAC,cAACmF,EAAA,EAAD,CAAMC,UAAYC,IAAaoD,IAA/B,oBAGJ9D,EAAA5E,EAAAC,cAAC4H,EAAA,EAAD,KACEjD,EAAA5E,EAAAC,cAACqG,EAAA,EAAD,CAAMC,GAAG,6BACP3B,EAAA5E,EAAAC,cAAC0G,EAAA,EAAD,CACEnH,QAAQ,UACRoH,aAAW,oBAFb,wDAYD,IAAA+B,EAAAL,KACHH,EAAgB,CAClBS,MAAON,KAAKvC,MAAMvE,WACjBqH,OAAO,SAAAhL,GAAA,OAAAA,EAAGgC,KAAgBiJ,cAAcC,SAASJ,EAAKhF,MAAM+D,YAAYsB,OAAOF,iBAC/EG,IAAI,SAAAnH,GAAI,OAAI8C,EAAA5E,EAAAC,cAACiJ,EAAD9B,IAAA,CAAe9D,IAAMxB,EAAKJ,IAAUI,MACjDqH,UAAWb,KAAKvC,MAAMoD,WAA8C,IAAjCb,KAAKvC,MAAMvE,WAAW2C,QAG3D,OACES,EAAA5E,EAAAC,cAACmJ,EAAA,SAAD,KACExE,EAAA5E,EAAAC,cAACoJ,GAAD,CAAyB5B,eAAiBa,KAAKb,eAAiBC,YAAcY,KAAK3E,MAAM+D,cACzF9C,EAAA5E,EAAAC,cAACqJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,4BAA4BnE,UAAYoE,OAC1D7E,EAAA5E,EAAAC,cAACqJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,uBAAuBnE,UAAYoE,OACrD7E,EAAA5E,EAAAC,cAACqJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,yBAAyBnE,UAAYqE,OACrDpB,KAAKqB,gBACP/E,EAAA5E,EAAAC,cAAC2J,EAAA,EAAoBzB,WAvDN0B,aA6EzB3B,GAAWpH,UAAY,CACrBqH,cAAerH,IAAUgJ,MACzBtI,WAAYV,IAAUgJ,MACtBC,UAAWjJ,IAAUgJ,MACrBX,UAAWrI,IAAUkJ,KACrBC,aAAcnJ,IAAU4C,OACxBhG,UAAWoD,IAAUG,KACrBtD,UAAWmD,IAAUG,KACrB9B,gBAAiB2B,IAAUG,KAAKC,YAGlCgH,GAAWxC,aAAe,CACxBlE,WAAY,IAGCH,4BA/BS,SAAAC,GAAA,IAAA4I,EAAA5I,EAAGG,iBAAH,MAAkE,CACxFD,WADsB0I,EAAuB1I,WAE7C2H,UAFsBe,EAAmCf,UAGzDc,aAHsBC,EAA8CxC,cAM3C,SAAA1F,GACzB,MAAO,CACL7C,gBAAiB,SAAAgL,GAAQ,OAAInI,EAAS7C,aAAgBgL,KACtDxM,UAAW,kBAAMqE,EAASrE,iBAC1BD,UAAW,SAACI,EAAYC,GACtBiE,EAAStE,aAAU,CAAEI,aAAYC,kBAoBxBsD,CAA6C6G","file":"js/6.js","sourcesContent":["import * as ActionTypes from '../ActionTypes';\n\nexport const showModal = ({ modalProps, modalType }) => ({\n  type: ActionTypes.SHOW_MODAL,\n  payload: { modalProps, modalType }\n});\n\nexport const hideModal = () => ({\n  type: ActionTypes.HIDE_MODAL,\n  payload: null\n});\n\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./toolbarschema.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./toolbarschema.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./toolbarschema.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../node_modules/css-loader/index.js!@red-hat-insights/insights-frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \"/* stylelint-enable */\\n:root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\nul.navigation-secondary {\\n  margin-top: 20px; }\\n  ul.navigation-secondary li {\\n    cursor: pointer;\\n    font-size: 15px;\\n    width: 100%;\\n    box-shadow: none;\\n    padding: 5px 0;\\n    color: #1d1d1d; }\\n    ul.navigation-secondary li span {\\n      margin-left: 50px; }\\n    ul.navigation-secondary li:active, ul.navigation-secondary li.active {\\n      background: #f5f5f5;\\n      color: var(--pf-global--link--Color); }\\n    ul.navigation-secondary li:hover {\\n      color: var(--pf-global--link--Color); }\\n\\n.elipsis-text-overflow {\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden; }\\n\\n.toolbar-padding {\\n  padding: 24px 24px 0 24px; }\\n\\n.card-link {\\n  cursor: pointer; }\\n  .card-link:hover {\\n    text-decoration: none; }\\n\\n.text-align-right {\\n  text-align: right; }\\n\\n.w-100 {\\n  width: 100%; }\\n\\n.align-items-base {\\n  align-items: baseline; }\\n\\n.modal-form-right-align .pf-m-action:last-child .data-driven-forms__pf4-button-group:first-child {\\n  margin-left: auto; }\\n\\n.line-clamp {\\n  display: -webkit-box;\\n  -webkit-line-clamp: 6;\\n  -webkit-box-orient: vertical;\\n  overflow: hidden;\\n  word-wrap: break-word; }\\n\\n.space-between-toolbar-items > div {\\n  margin-right: var(--pf-global--gutter);\\n  align-self: flex-end; }\\n\\n.searchPlatforms {\\n  min-width: 30%; }\\n  .searchPlatforms > div {\\n    width: 100%; }\\n\", \"\"]);\n\n// exports\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormRenderer from '../Common/FormRenderer';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal } from '@patternfly/react-core';\nimport { addNotification } from '@red-hat-insights/insights-frontend-components/components/Notifications';\nimport { addPortfolio, fetchPortfolios, updatePortfolio } from '../../redux/Actions/PortfolioActions';\nimport { pipe } from 'rxjs';\n\nconst AddPortfolioModal = ({\n  history: { goBack },\n  addPortfolio,\n  addNotification,\n  fetchPortfolios,\n  initialValues,\n  updatePortfolio\n}) => {\n  const onSubmit = data => initialValues\n    ? updatePortfolio(data).then(goBack).then(() => fetchPortfolios())\n    : addPortfolio(data).then(goBack).then(() => fetchPortfolios());\n\n  const onCancel = () => pipe(\n    addNotification({\n      variant: 'warning',\n      title: initialValues ? 'Editing portfolio' : 'Adding portfolio',\n      description: initialValues ? 'Edit portfolio was cancelled by the user.' : 'Adding portfolio was cancelled by the user.'\n    }),\n    goBack()\n  );\n\n  const schema = {\n    type: 'object',\n    properties: {\n      name: { title: initialValues ? 'Portfolio Name' : 'New Portfolio Name', type: 'string' },\n      description: { title: 'Description', type: 'string' }\n    },\n    required: [ 'name', 'description' ]\n  };\n\n  return (\n    <Modal\n      title={ initialValues ? 'Edit portfolio' : 'Create portfolio' }\n      isOpen\n      onClose={ onCancel }\n    >\n      <FormRenderer\n        schema={ schema }\n        schemaType=\"mozilla\"\n        onSubmit={ onSubmit }\n        onCancel={ onCancel }\n        initialValues={ { ...initialValues } }\n        formContainer=\"modal\"\n        buttonsLabels={ {\n          submitLabel: 'Save'\n        } }\n      />\n    </Modal>\n  );\n};\n\nAddPortfolioModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired,\n  addPortfolio: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchPortfolios: PropTypes.func.isRequired,\n  initialValues: PropTypes.object,\n  updatePortfolio: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ portfolioReducer: { portfolios }}, { match: { params: { id }}}) => ({\n  initialValues: id && portfolios.find(item => item.id === id),\n  portfolioId: id\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  addPortfolio,\n  updatePortfolio,\n  fetchPortfolios\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddPortfolioModal));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Title, Bullseye } from '@patternfly/react-core';\nimport { addNotification } from '@red-hat-insights/insights-frontend-components/components/Notifications';\nimport { fetchPortfolios, removePortfolio } from '../../redux/Actions/PortfolioActions';\nimport { hideModal } from '../../redux/Actions/MainModalActions';\nimport { pipe } from 'rxjs';\nimport './portfolio.scss';\n\nconst RemovePortfolioModal = ({\n  history: { goBack, push },\n  removePortfolio,\n  addNotification,\n  fetchPortfolios,\n  portfolioId,\n  portfolioName\n}) => {\n  const onSubmit = () => removePortfolio(portfolioId)\n  .then(() => pipe(fetchPortfolios(), push('/portfolios')));\n\n  const onCancel = () => pipe(\n    addNotification({\n      variant: 'warning',\n      title: 'Removing portfolio',\n      description: 'Removing portfolio was cancelled by the user.'\n    }),\n    goBack()\n  );\n\n  return (\n    <Modal\n      isOpen\n      title = { '' }\n      onClose={ onCancel }\n      actions={ [\n        <Button key=\"cancel\" variant=\"secondary\" type=\"button\" onClick={ onCancel }>\n          Cancel\n        </Button>,\n        <Button key=\"submit\" variant=\"primary\" type=\"button\" onClick={ onSubmit }>\n          Confirm\n        </Button>\n      ] }\n    >\n      <Bullseye>\n        <div className=\"center_message\">\n          <Title size={ 'xl' }>\n            Removing Portfolio:  { portfolioName }\n          </Title>\n        </div>\n      </Bullseye>\n    </Modal>\n  );\n};\n\nRemovePortfolioModal.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  removePortfolio: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  fetchPortfolios: PropTypes.func.isRequired,\n  portfolioId: PropTypes.string,\n  portfolioName: PropTypes.string\n};\n\nconst portfolioDetailsFromState = (state, id) =>\n  state.portfolioReducer.portfolios.find(portfolio => portfolio.id  === id);\n\nconst mapStateToProps = (state, { match: { params: { id }}}) => {\n  let portfolio = portfolioDetailsFromState(state, id);\n  return {\n    portfolioId: portfolio.id,\n    portfolioName: portfolio.name\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  addNotification,\n  fetchPortfolios,\n  removePortfolio,\n  hideModal\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RemovePortfolioModal));\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./portfoliocard.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./portfoliocard.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./portfoliocard.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../node_modules/css-loader/index.js!@red-hat-insights/insights-frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \"/* stylelint-enable */\\n:root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\nul.navigation-secondary {\\n  margin-top: 20px; }\\n  ul.navigation-secondary li {\\n    cursor: pointer;\\n    font-size: 15px;\\n    width: 100%;\\n    box-shadow: none;\\n    padding: 5px 0;\\n    color: #1d1d1d; }\\n    ul.navigation-secondary li span {\\n      margin-left: 50px; }\\n    ul.navigation-secondary li:active, ul.navigation-secondary li.active {\\n      background: #f5f5f5;\\n      color: var(--pf-global--link--Color); }\\n    ul.navigation-secondary li:hover {\\n      color: var(--pf-global--link--Color); }\\n\\n.elipsis-text-overflow {\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden; }\\n\\n.toolbar-padding {\\n  padding: 24px 24px 0 24px; }\\n\\n.card-link {\\n  cursor: pointer; }\\n  .card-link:hover {\\n    text-decoration: none; }\\n\\n.text-align-right {\\n  text-align: right; }\\n\\n.w-100 {\\n  width: 100%; }\\n\\n.align-items-base {\\n  align-items: baseline; }\\n\\n.modal-form-right-align .pf-m-action:last-child .data-driven-forms__pf4-button-group:first-child {\\n  margin-left: auto; }\\n\\n.line-clamp {\\n  display: -webkit-box;\\n  -webkit-line-clamp: 6;\\n  -webkit-box-orient: vertical;\\n  overflow: hidden;\\n  word-wrap: break-word; }\\n\\n.card-image-header {\\n  padding: 0 !important; }\\n\\n.portfolio-card-header {\\n  min-height: 100px;\\n  max-height: 200px;\\n  background-size: stretch;\\n  color: white;\\n  padding: 8px 24px; }\\n\", \"\"]);\n\n// exports\n","module.exports = __webpack_public_path__ + \"fonts/default-portfolio.jpg\";","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map\n","/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\nimport { noop } from './noop';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants, Toolbar, ToolbarGroup } from '@patternfly/react-core';\nimport DefaultPortfolioImg from '../../assets/images/default-portfolio.jpg';\n\nimport './portfoliocard.scss';\n\nconst PortfolioCardHeader = ({ backgroundSrc, portfolioName, headerActions }) => (\n  <div className=\"portfolio-card-header\" style={ { backgroundImage: `url(${backgroundSrc})` } }>\n    <Toolbar>\n      <ToolbarGroup style={ {\n        marginLeft: 'auto',\n        paddingBottom: 16\n      } }>\n        { headerActions }\n      </ToolbarGroup>\n    </Toolbar>\n    <Text className=\"elipsis-text-overflow\" component={ TextVariants.h4 }>{ portfolioName }</Text>\n  </div>\n);\n\nPortfolioCardHeader.propTypes = {\n  backgroundSrc: PropTypes.string,\n  portfolioName: PropTypes.string.isRequired,\n  headerActions: PropTypes.arrayOf(PropTypes.node)\n};\n\nPortfolioCardHeader.defaultProps = {\n  backgroundSrc: DefaultPortfolioImg,\n  headerActions: []\n};\n\nexport default PortfolioCardHeader;\n","import React from 'react';\nimport './portfoliocard.scss';\nimport propTypes from 'prop-types';\nimport ItemDetails from '../Shared/CardCommon';\nimport { Link } from 'react-router-dom';\nimport { GridItem, Card, CardHeader, CardBody, CardFooter, Button } from '@patternfly/react-core';\nimport { EditAltIcon, TrashIcon } from '@patternfly/react-icons';\nimport PortfolioCardHeader from './portfolio-card-header';\n\nconst TO_DISPLAY = [ 'description', 'modified' ];\nconst ICON_FILL = 'white';\n\nconst createToolbarActions = (portfolioName, portfolioId) => [\n  <Link key=\"edit-portfolio-action\" to={ `/portfolios/edit/${portfolioId}` }>\n    <Button\n      variant=\"plain\"\n      aria-label={ `edit-portfolio-${portfolioName}` }\n      onClick={ () => console.log('Edit portfolio api helper not available.') }\n    >\n      <EditAltIcon fill={ ICON_FILL } />\n    </Button>\n  </Link>,\n  <Link key=\"remove-portfolio-action\" to={ `/portfolios/remove/${portfolioId}` }>\n    <Button\n      key=\"remove-portfolio-action\"\n      variant=\"plain\"\n      aria-label={ `remove-portfolio-${portfolioName}` }\n      onClick={ () => console.log('Remove portfolio api helper not available.') }\n    >\n      <TrashIcon fill={ ICON_FILL } />\n    </Button>\n  </Link>\n];\n\nconst PortfolioCard = ({ imageUrl, name, id, ...props }) => (\n  <GridItem sm={ 6 } md={ 4 } lg={ 4 } xl={ 3 }>\n    <Link className=\"card-link\" to={ `/portfolio/${id}` }>\n      <Card>\n        <CardHeader className=\"card-image-header\">\n          <PortfolioCardHeader\n            portfolioName={ name }\n            headerActions={ createToolbarActions(name, id) }\n          />\n        </CardHeader>\n        <CardBody>\n          <ItemDetails { ...{ name, imageUrl, ...props } } toDisplay={ TO_DISPLAY } />\n        </CardBody>\n        <CardFooter/>\n      </Card>\n    </Link>\n  </GridItem>\n);\n\nPortfolioCard.propTypes = {\n  history: propTypes.object,\n  imageUrl: propTypes.string,\n  name: propTypes.string,\n  id: propTypes.string\n};\n\nexport default PortfolioCard;\n","import React from 'react';\nimport { Level, LevelItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport OrderToolbarItem from '../Shared/OrderToolbarItem';\nimport FilterToolbarItem from '../Shared/FilterToolbarItem';\nimport TopToolbar from '../Shared/top-toolbar';\nimport '../Shared/toolbarschema.scss';\n\nconst PortfoliosFilterToolbar = ({ onFilterChange, filterValue, ...props }) => (\n  <TopToolbar>\n    <Level>\n      <LevelItem>\n        <FilterToolbarItem { ...props } searchValue={ filterValue } onFilterChange={ onFilterChange } placeholder=\"Find a Portfolio\" />\n      </LevelItem>\n      <LevelItem>\n        <OrderToolbarItem { ...props }/>\n      </LevelItem>\n    </Level>\n  </TopToolbar>\n);\n\nPortfoliosFilterToolbar.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  filterValue: PropTypes.string\n};\n\nexport default PortfoliosFilterToolbar;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { Route, Link } from 'react-router-dom';\nimport { Level, LevelItem, Text, TextContent, TextVariants, Button } from '@patternfly/react-core';\nimport ContentGallery from '../../SmartComponents/ContentGallery/ContentGallery';\nimport PortfolioCard from '../../PresentationalComponents/Portfolio/PorfolioCard';\nimport PortfoliosFilterToolbar from '../../PresentationalComponents/Portfolio/PortfoliosFilterToolbar';\nimport { fetchPortfolios } from '../../redux/Actions/PortfolioActions';\nimport { hideModal, showModal } from '../../redux/Actions/MainModalActions';\nimport AddPortfolio from './add-portfolio-modal';\nimport RemovePortfolio from './remove-portfolio-modal';\nimport './portfolio.scss';\nimport { scrollToTop } from '../../Helpers/Shared/helpers';\n\nclass Portfolios extends Component {\n    state = {\n      filteredItems: [],\n      isOpen: false,\n      filterValue: ''\n    };\n\n    fetchData = () => {\n      this.props.fetchPortfolios();\n    };\n\n    componentDidMount() {\n      this.fetchData();\n      scrollToTop();\n    }\n\n    onFilterChange = filterValue => this.setState({ filterValue })\n\n    renderToolbar() {\n      return (\n        <Level className=\"pf-u-pt-md pf-u-pr-xl pf-u-pl-xl\">\n          <LevelItem>\n            <TextContent>\n              <Text component={ TextVariants.h2 }>All Portfolios</Text>\n            </TextContent>\n          </LevelItem>\n          <LevelItem>\n            <Link to=\"/portfolios/add-portfolio\">\n              <Button\n                variant=\"primary\"\n                aria-label=\"Create portfolio\"\n              >\n                Create portfolio\n              </Button>\n            </Link>\n          </LevelItem>\n        </Level>\n      );\n    }\n\n    render() {\n      let filteredItems = {\n        items: this.props.portfolios\n        .filter(({ name }) => name.toLowerCase().includes(this.state.filterValue.trim().toLowerCase()))\n        .map(item => <PortfolioCard key={ item.id } { ...item } />),\n        isLoading: this.props.isLoading && this.props.portfolios.length === 0\n      };\n\n      return (\n        <Fragment>\n          <PortfoliosFilterToolbar onFilterChange={ this.onFilterChange } filterValue={ this.state.filterValue }/>\n          <Route exact path=\"/portfolios/add-portfolio\" component={ AddPortfolio } />\n          <Route exact path=\"/portfolios/edit/:id\" component={ AddPortfolio } />\n          <Route exact path=\"/portfolios/remove/:id\" component={ RemovePortfolio } />\n          { this.renderToolbar() }\n          <ContentGallery { ...filteredItems } />\n        </Fragment>\n      );\n    }\n}\n\nconst mapStateToProps = ({ portfolioReducer: { portfolios, isLoading, filterValue }}) => ({\n  portfolios,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchPortfolios: apiProps => dispatch(fetchPortfolios(apiProps)),\n    hideModal: () => dispatch(hideModal()),\n    showModal: (modalProps, modalType) => {\n      dispatch(showModal({ modalProps, modalType }));\n    }\n  };\n};\n\nPortfolios.propTypes = {\n  filteredItems: propTypes.array,\n  portfolios: propTypes.array,\n  platforms: propTypes.array,\n  isLoading: propTypes.bool,\n  searchFilter: propTypes.string,\n  showModal: propTypes.func,\n  hideModal: propTypes.func,\n  fetchPortfolios: propTypes.func.isRequired\n};\n\nPortfolios.defaultProps = {\n  portfolios: []\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Portfolios);\n"],"sourceRoot":""}