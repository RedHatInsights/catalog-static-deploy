{"version":3,"sources":["webpack:///./src/SmartComponents/ContentGallery/ContentGallery.js","webpack:///./src/PresentationalComponents/Shared/CardCommon.js","webpack:///./src/Helpers/Shared/helpers.js","webpack:///./src/SmartComponents/ContentGallery/content-gallery.scss?47fd","webpack:///./src/SmartComponents/ContentGallery/content-gallery.scss","webpack:///./src/PresentationalComponents/Platform/PlatformToolbar.js","webpack:///./src/assets/images/platform-default.svg","webpack:///./src/assets/images/platform-openshift.svg","webpack:///./src/assets/images/platform-amazon.png","webpack:///./src/PresentationalComponents/Platform/PlatformCard.js","webpack:///./src/SmartComponents/Platform/Platforms.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_3__","_red_hat_insights_insights_frontend_components__WEBPACK_IMPORTED_MODULE_4__","_PresentationalComponents_Shared_LoaderPlaceholders__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_6__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_7__","NoItems","a","createElement","component","TextVariants","h1","ContentGallery","_ref","isLoading","items","type","gutter","length","propTypes","bool","array","PropLine","value","react__WEBPACK_IMPORTED_MODULE_1___default","className","PropTypes","oneOfType","string","number","arrayOf","node","isRequired","ItemDetails","_ref2","_ref2$toDisplay","toDisplay","item","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","map","prop","key","concat","defaultProps","d","__webpack_exports__","scrollToTop","document","getElementById","scrollTo","behavior","top","left","content","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","PlatformToolbar","searchValue","react__WEBPACK_IMPORTED_MODULE_7___default","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_8__","style","backgroundColor","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_9__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_10__","input","id","name","placeholder","aria-label","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_11__","variant","aria-hidden","Component","p","TO_DISPLAY","PlatformCard","props","objectWithoutProperties_default","react_default","GridItem","sm","md","lg","xl","Card","CardHeader","ImageWithDefault","src","sourceTypeId","OpenshiftPlatformImg","AmazonPlatformImg","DefaultPlatformImg","platformTypeImg","source_type_id","defaultSrc","width","height","CardBody","CardCommon","extends_default","objectSpread_default","CardFooter","history","object","imageUrl","Platforms","filteredItems","isOpen","_this","fetchPlatforms","this","fetchData","Toolbar","ToolbarGroup","ToolbarItem","Title","size","platforms","Platform_PlatformCard","insights_frontend_components","renderToolbar","MainModal","searchFilter","showModal","func","hideModal","withRouter","connect","_ref$platformReducer","platformReducer","filterValue","dispatch","apiProps"],"mappings":"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","file":"js/6.js","sourcesContent":["import React, { Fragment } from 'react';\nimport './content-gallery.scss';\nimport propTypes from 'prop-types';\nimport { Grid } from '@patternfly/react-core';\nimport { Section } from '@red-hat-insights/insights-frontend-components';\nimport { CardLoader } from '../../PresentationalComponents/Shared/LoaderPlaceholders';\nimport { Bullseye, Text, TextVariants } from '@patternfly/react-core';\n\nconst NoItems = () => (\n  <Bullseye>\n    <Text component={ TextVariants.h1 }>No items found</Text>\n  </Bullseye>\n);\n\nconst ContentGallery = ({ isLoading, items }) => (\n  <Fragment>\n    { isLoading ? <CardLoader /> : (\n      <Section type=\"content\">\n        <Grid gutter='md' >\n          { items.length > 0 ? items : <NoItems /> }\n        </Grid>\n      </Section>\n    ) }\n  </Fragment>\n);\n\nContentGallery.propTypes = {\n  isLoading: propTypes.bool,\n  items: propTypes.array\n};\nexport default ContentGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// This whole thing is a bit strange\nconst PropLine = ({ value }) => <div className = \"card_element\">{ value }</div>;\n\nPropLine.propTypes = {\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node\n    ]))\n  ]).isRequired\n};\n\nconst ItemDetails = ({ toDisplay = [], ...item }) => (\n  <div>\n    { toDisplay.map(prop => <PropLine key={ `card-prop-${prop}` } value={ item[prop] } />) }\n  </div>\n);\n\nItemDetails.propTypes = {\n  toDisplay: PropTypes.arrayOf(PropTypes.string)\n};\n\nItemDetails.defaultProps = {\n  toDisplay: []\n};\n\nexport default ItemDetails;\n","export const scrollToTop = () => document.getElementById('root').scrollTo({\n  behavior: 'smooth',\n  top: 0,\n  left: 0\n});\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./content-gallery.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./content-gallery.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./content-gallery.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../node_modules/css-loader/index.js!@red-hat-insights/insights-frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \"/* stylelint-enable */\\n:root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\nul.navigation-secondary {\\n  margin-top: 20px; }\\n  ul.navigation-secondary li {\\n    cursor: pointer;\\n    font-size: 15px;\\n    width: 100%;\\n    box-shadow: none;\\n    padding: 5px 0;\\n    color: #1d1d1d; }\\n    ul.navigation-secondary li span {\\n      margin-left: 50px; }\\n    ul.navigation-secondary li:active, ul.navigation-secondary li.active {\\n      background: #f5f5f5;\\n      color: var(--pf-global--link--Color); }\\n    ul.navigation-secondary li:hover {\\n      color: var(--pf-global--link--Color); }\\n\\n.elipsis-text-overflow {\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden; }\\n\", \"\"]);\n\n// exports\n","import React, { Component } from 'react';\nimport { Toolbar, ToolbarGroup, ToolbarItem, Button } from '@patternfly/react-core';\n\n/**\n * TODO Use PF4 input components\n */\nclass PlatformToolbar extends Component {\n    state = {\n      searchValue: ''\n    };\n\n    render() {\n      return (\n        <Toolbar style={ { backgroundColor: '#FFFFFF' } }>\n          <ToolbarGroup className={ 'pf-u-ml-on-md' }>\n            <ToolbarItem className={ 'pf-u-ml-sm pf-u-my-sm' }>\n              <div className=\"pf-c-input-group\">\n                <input className=\"pf-c-form-control\"\n                  input=\"true\" type=\"text\" id=\"searchItem\"\n                  name=\"searchPlatformItems\"\n                  placeholder=\"Filter...\"\n                  aria-label=\"filter input with platform button\"\n                />\n                <Button variant=\"tertiary\" id=\"filterPlatformButton\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\n                </Button>\n              </div>\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>);\n    };\n};\n\nexport default PlatformToolbar;\n","module.exports = __webpack_public_path__ + \"fonts/platform-default.svg\";","module.exports = __webpack_public_path__ + \"fonts/platform-openshift.svg\";","module.exports = __webpack_public_path__ + \"fonts/platform-amazon.png\";","import React from 'react';\nimport './platformcard.scss';\nimport propTypes from 'prop-types';\nimport DefaultPlatformImg from '../../assets/images/platform-default.svg';\nimport OpenshiftPlatformImg from '../../assets/images/platform-openshift.svg';\nimport AmazonPlatformImg from '../../assets/images/platform-amazon.png';\nimport ImageWithDefault from '../Shared/ImageWithDefault';\nimport ItemDetails from '../Shared/CardCommon';\nimport { GridItem, Card, CardHeader, CardBody, CardFooter } from '@patternfly/react-core';\n\nconst TO_DISPLAY = [ 'description', 'modified' ];\n\n// TO DO - use webpack to load all images\nconst platformTypeImg = (sourceTypeId) => {\n  switch (sourceTypeId) {\n    case '1':\n      return OpenshiftPlatformImg;\n    case '2':\n      return AmazonPlatformImg;\n    default:\n      return DefaultPlatformImg;\n  }\n};\n\nconst PlatformCard = ({ name, id, ...props }) => (\n  <GridItem sm={ 6 } md={ 4 } lg={ 4 } xl={ 3 }>\n    <Card className=\"card_style\" key={ id }>\n      <CardHeader className=\"pcard_header\">\n        <ImageWithDefault src={ platformTypeImg(props.source_type_id || '0') } defaultSrc={ DefaultPlatformImg } width=\"80\" height=\"40\"/>\n      </CardHeader>\n      <CardBody className=\"pcard_body\">\n        <h4>{ name }</h4>\n        <ItemDetails { ...{ name, ...props } } toDisplay={ TO_DISPLAY } />\n      </CardBody>\n      <CardFooter/>\n    </Card>\n  </GridItem>\n);\n\nPlatformCard.propTypes = {\n  history: propTypes.object,\n  imageUrl: propTypes.string,\n  name: propTypes.string,\n  source_type_id: propTypes.string,\n  id: propTypes.string\n};\n\nexport default PlatformCard;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { Section } from '@red-hat-insights/insights-frontend-components';\nimport { Toolbar, ToolbarGroup, ToolbarItem, Title } from '@patternfly/react-core';\nimport ContentGallery from '../../SmartComponents/ContentGallery/ContentGallery';\nimport PlatformCard from '../../PresentationalComponents/Platform/PlatformCard';\nimport PlatformToolbar from '../../PresentationalComponents/Platform/PlatformToolbar';\nimport { fetchPlatforms } from '../../redux/Actions/PlatformActions';\nimport MainModal from '../Common/MainModal';\nimport './platform.scss';\nimport { scrollToTop } from '../../Helpers/Shared/helpers';\n\nclass Platforms extends Component {\n    state = {\n      filteredItems: [],\n      isOpen: false\n    };\n\n    fetchData = () => {\n      this.props.fetchPlatforms();\n    };\n\n    componentDidMount() {\n      this.fetchData();\n      scrollToTop();\n    }\n\n    renderToolbar() {\n      return (\n        <Toolbar>\n          <ToolbarGroup>\n            <ToolbarItem className={ 'pf-u-ml-sm pf-u-my-sm' } >\n              <Title size={ '2xl' }>  All Platforms  </Title>\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n      );\n    }\n\n    render() {\n      let filteredItems = {\n        items: this.props.platforms.map((item) => <PlatformCard key={ item.id } { ...item } />),\n        isLoading: this.props.isLoading\n      };\n\n      return (\n        <Section>\n          <PlatformToolbar/>\n          <div className=\"action_toolbar\">\n            { this.renderToolbar() }\n          </div>\n          <ContentGallery { ...filteredItems } />\n          <MainModal />\n        </Section>\n      );\n    }\n}\n\nconst mapStateToProps = ({ platformReducer: { platforms, isLoading, filterValue }}) => ({\n  platforms,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchPlatforms: apiProps => dispatch(fetchPlatforms(apiProps))\n  };\n};\n\nPlatforms.propTypes = {\n  filteredItems: propTypes.array,\n  platforms: propTypes.array,\n  isLoading: propTypes.bool,\n  searchFilter: propTypes.string,\n  showModal: propTypes.func,\n  hideModal: propTypes.func,\n  history: propTypes.object,\n  fetchPlatforms: propTypes.func\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Platforms)\n);\n"],"sourceRoot":""}