{"version":3,"sources":["webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/presentational-components/shared/content-gallery-empty-state.js","webpack:///./src/messages/platforms.messages.js","webpack:///./src/messages/labels.messages.js","webpack:///./src/presentational-components/shared/content-list.js","webpack:///./src/smart-components/platform/platform-inventories.js","webpack:///./src/smart-components/platform/platform-table-helpers.js"],"names":["BottomPaginationContainer","children","className","propTypes","PropTypes","oneOfType","node","arrayOf","ContentGalleryEmptyState","title","Icon","description","PrimaryAction","renderDescription","icon","component","TextVariants","h1","defaultProps","string","isRequired","any","func","EmptyStatePrimaryAction","url","label","hasPermission","id","pathname","preserveSearch","variant","bool","platformsMessages","defineMessages","require","workflowColumn","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","configureSourceTitle","connectSource","contactAdmin","noPlatforms","offeringTitle","offeringParameters","labelMessages","shared","portfolio","platform","name","NoItems","formatMessage","useIntl","Text","filteringMessages","noItems","ContentList","data","columns","isCompact","isLoading","actionResolver","areActionsDisabled","borders","routes","titlePlural","renderEmptyState","useState","rows","setRows","useEffect","length","Table","aria-label","TableVariant","compact","cells","array","pagination","shape","limit","number","offset","count","titleSingular","requests","items","initialState","filterValue","isOpen","isFetching","isFiltering","debouncedFilter","asyncFormValidator","value","dispatch","filteringCallback","meta","defaultSettings","fetchPlatformInventories","then","platformInventoriesState","state","action","type","payload","PlatformInventories","useRef","statesMessages","created","current","useReducer","stateDispatch","useSelector","platformReducer","platformInventories","selectedPlatform","useDispatch","useQuery","history","useHistory","scrollToTop","inventoryRows","reduce","acc","key","created_at","workflow","timeAgo","createRows","schema","createPlatformsFilterToolbarSchema","onFilterChange","searchValue","filterPlaceholder","apiRequest","_","options","Section","inventoryData","onClick","push","search","SearchIcon","dropDirection"],"mappings":"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","file":"js/platform-inventories~5a11b65b.93fd3156697a60d73142.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    {children}\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ContentGalleryEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <div className=\"pf-u-mt-xl\">\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={Icon} />\n      <TextContent>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </TextContent>\n      <EmptyStateBody>\n        {description}\n        {renderDescription()}\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        {PrimaryAction && <PrimaryAction />}\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </div>\n);\n\nContentGalleryEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nContentGalleryEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default ContentGalleryEmptyState;\n\nexport const EmptyStatePrimaryAction = ({\n  url,\n  label,\n  hasPermission = false,\n  id\n}) =>\n  hasPermission && (\n    <CatalogLink id={id} pathname={url} preserveSearch>\n      <Button variant=\"primary\">{label}</Button>\n    </CatalogLink>\n  );\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  hasPermission: PropTypes.bool\n};\n","const { defineMessages } = require('react-intl');\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  configureSourceTitle: {\n    id: 'platforms.list.configure-source',\n    defaultMessage: 'Configure a source in order to add products to portfolios.'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage:\n      'To connect to a source, go to <a>Sources</a> under Settings.'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  }\n});\n\nexport default platformsMessages;\n","import { defineMessages } from 'react-intl';\n\nconst labelMessages = defineMessages({\n  shared: {\n    id: 'common.labels.shared',\n    defaultMessage: 'Shared'\n  },\n  portfolio: {\n    id: 'common.labels.portfolio',\n    defaultMessage: 'Portfolio'\n  },\n  platform: {\n    id: 'common.labels.platform',\n    defaultMessage: 'Platform'\n  },\n  name: {\n    id: 'common.labels.name',\n    defaultMessage: 'Name'\n  },\n  description: {\n    id: 'common.labels.description',\n    defaultMessage: 'Description'\n  }\n});\n\nexport default labelMessages;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableVariant\n} from '@patternfly/react-table';\n\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport { useIntl } from 'react-intl';\nimport filteringMessages from '../../messages/filtering.messages';\n\nconst NoItems = () => {\n  const { formatMessage } = useIntl();\n  return (\n    <Text component={TextVariants.h1}>\n      {formatMessage(filteringMessages.noItems)}\n    </Text>\n  );\n};\n\nconst ContentList = ({\n  data,\n  columns,\n  isCompact,\n  isLoading,\n  actionResolver,\n  areActionsDisabled,\n  borders,\n  routes,\n  titlePlural,\n  renderEmptyState\n}) => {\n  const [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    setRows(data);\n  }, [data]);\n\n  const renderEmptyContent = () =>\n    renderEmptyState ? renderEmptyState() : <NoItems />;\n\n  const renderContent = () =>\n    rows.length === 0 ? (\n      renderEmptyContent()\n    ) : (\n      <Fragment>\n        {routes()}\n        <Table\n          aria-label={`${titlePlural} table`}\n          variant={isCompact ? TableVariant.compact : null}\n          borders={borders}\n          rows={rows}\n          cells={columns}\n          actionResolver={actionResolver}\n          areActionsDisabled={areActionsDisabled}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      </Fragment>\n    );\n\n  return isLoading ? <ListLoader /> : renderContent();\n};\n\nContentList.propTypes = {\n  borders: PropTypes.bool,\n  isCompact: PropTypes.bool,\n  columns: PropTypes.array.isRequired,\n  renderEmptyState: PropTypes.func.isRequired,\n  data: PropTypes.array,\n  pagination: PropTypes.shape({\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    count: PropTypes.number\n  }),\n  titlePlural: PropTypes.string,\n  titleSingular: PropTypes.string,\n  routes: PropTypes.func,\n  actionResolver: PropTypes.func,\n  areActionsDisabled: PropTypes.func,\n  isLoading: PropTypes.bool\n};\n\nContentList.defaultProps = {\n  requests: [],\n  isLoading: false,\n  isCompact: false,\n  borders: true,\n  routes: () => null,\n  items: PropTypes.array,\n  renderEmptyState: PropTypes.func\n};\n\nexport default ContentList;\n","import React, { Fragment, useEffect, useReducer, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { fetchPlatformInventories } from '../../redux/actions/platform-actions';\nimport { createPlatformsFilterToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport ContentGaleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport ContentList from '../../presentational-components/shared/content-list';\nimport { createRows } from './platform-table-helpers.js';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useQuery from '../../utilities/use-query';\nimport { useIntl } from 'react-intl';\nimport statesMessages from '../../messages/states.messages';\nimport labelMessages from '../../messages/labels.messages';\nimport platformsMessages from '../../messages/platforms.messages';\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (id, value, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(fetchPlatformInventories(id, value, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst platformInventoriesState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst PlatformInventories = () => {\n  const { formatMessage } = useIntl();\n  const { current: columns } = useRef([\n    formatMessage(labelMessages.name),\n    formatMessage(labelMessages.description),\n    formatMessage(statesMessages.created),\n    formatMessage(platformsMessages.workflowColumn)\n  ]);\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch] = useReducer(\n    platformInventoriesState,\n    initialState\n  );\n  const { data, meta } = useSelector(\n    ({ platformReducer: { platformInventories } }) => platformInventories\n  );\n  const platform = useSelector(\n    ({ platformReducer: { selectedPlatform } }) => selectedPlatform\n  );\n  const dispatch = useDispatch();\n  const [{ platform: id }] = useQuery(['platform']);\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(\n      fetchPlatformInventories(id, filterValue, defaultSettings)\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n  }, []);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      id,\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const actionResolver = (inventoryData) => {\n    return [\n      {\n        title: 'Set approval',\n        onClick: () =>\n          history.push({\n            pathname: '/platform/platform-inventories/edit-workflow',\n            search: `?platform=${id}&inventory=${inventoryData.id}`\n          })\n      }\n    ];\n  };\n\n  const inventoryRows = data ? createRows(data, filterValue) : [];\n  const title = platform ? platform.name : '';\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPlatformsFilterToolbarSchema({\n          onFilterChange: handleFilterChange,\n          searchValue: filterValue,\n          filterPlaceholder: formatMessage(platformsMessages.inventoriesFilter),\n          meta,\n          apiRequest: (_, options) =>\n            dispatch(fetchPlatformInventories(id, filterValue, options))\n        })}\n      />\n      <Section type=\"content\">\n        <ContentList\n          title={title}\n          data={inventoryRows}\n          columns={columns}\n          isLoading={isFetching || isFiltering}\n          actionResolver={actionResolver}\n          renderEmptyState={() => (\n            <ContentGaleryEmptyState\n              title=\"No inventories\"\n              Icon={SearchIcon}\n              description={\n                filterValue === ''\n                  ? formatMessage(platformsMessages.noInventoriesDescription)\n                  : formatMessage(\n                      platformsMessages.noInventoriesFilterDescription\n                    )\n              }\n            />\n          )}\n        />\n      </Section>\n\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiRequest={(_, options) =>\n              dispatch(fetchPlatformInventories(id, filterValue, options))\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PlatformInventories;\n","import { timeAgo } from '../../helpers/shared/helpers';\n\nexport const createRows = (data) =>\n  data.reduce(\n    (acc, { id, name, description, created_at, workflow }, key) => [\n      ...acc,\n      {\n        id,\n        key,\n        isOpen: false,\n        cells: [name, description, timeAgo(created_at), workflow]\n      }\n    ],\n    []\n  );\n"],"sourceRoot":""}