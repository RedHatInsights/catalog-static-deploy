{"version":3,"sources":["webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/helpers/platform/platform-helper.js","webpack:///./src/redux/actions/platform-actions.js","webpack:///./src/helpers/order/order-helper.js","webpack:///./src/presentational-components/order/order-notification.js","webpack:///./src/redux/actions/order-actions.js","webpack:///./src/toolbar/schemas/orders-toolbar.schema.js","webpack:///./src/helpers/shared/orders.js","webpack:///./src/presentational-components/styled-components/table.js","webpack:///./src/smart-components/order/order-item.js","webpack:///./src/smart-components/order/orders-list.js","webpack:///./src/smart-components/order/orders.js"],"names":["AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","options","getNewPage","request","debouncePromise","direction","propTypes","PropTypes","shape","isRequired","func","any","string","bool","defaultProps","axiosInstance","getAxiosInstance","graphqlInstance","getGraphqlInstance","getPlatforms","post","SOURCES_API_BASE","query","then","data","application_types","sources","getPlatform","platformId","get","getPlatformItems","filter","filterQuery","TOPOLOGICAL_INVENTORY_API_BASE","getPlatformInventories","defaultSettings","getServiceOffering","serviceOfferingId","sourceId","Promise","all","source","source_type_id","icon_url","service","fetchPlatforms","dispatch","type","ActionTypes","PlatformHelper","payload","error","fetchPlatformItems","fetchSelectedPlatform","id","fetchPlatformInventories","fetchServiceOffering","orderApi","getOrderApi","portfolioItemApi","getOrderItemApi","getPortfolioItemApi","getServicePlans","portfolioItemId","listServicePlans","sendSubmitOrder","a","service_parameters","providerControlParameters","parameters","createOrder","order","orderItem","provider_control_parameters","addToOrder","orderItemResponse","submitOrder","getOrderItems","orderIds","CATALOG_API_BASE","map","orderId","join","getOrderPortfolioItems","itemIds","itemId","getOrders","pagination","orders","orderItems","portfolio_item_id","portfolioItems","order_id","OrderNotification","portfolioId","orderItemId","onClick","clearNotifications","to","pathname","ORDER_ROUTE","search","fetchServicePlans","OrderHelper","portfolioItem","addNotification","variant","title","description","portfolio_id","service_offering_source_ref","dismissable","cancelOrder","getState","orderDetail","orderReducer","state","approvalRequest","length","fetchOrders","filters","queryFilter","Object","entries","value","key","Array","isArray","storeState","stateKey","fetchOrderDetails","params","detailPromises","status","object","notFound","push","platform","portfolio","progressMessages","fetchApprovalRequests","err","createOrdersToolbarSchema","fields","component","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","getOrderIcon","getOrderPortfolioName","find","name","childrenPropType","oneOfType","node","arrayOf","Table","children","clsx","Tbody","TableCell","styled","shrink","routeMapper","ORDER_APPROVAL_ROUTE","Completed","ORDER_LIFECYCLE_ROUTE","OrderItem","memo","item","useSelector","portfolioReducer","orderPlatform","orderPortfolio","orderName","searchParams","aria-labelledby","height","src","TextContent","Grid","hasGutter","GridItem","Level","LevelItem","Text","TextVariants","h5","small","DateFormat","date","created_at","owner","updated_at","prevProps","nextProps","debouncedFilter","asyncFormValidator","filteringCallback","initialState","isOpen","isFetching","isFiltering","filterType","ordersListState","action","OrdersList","viewState","useInitialUriHash","useReducer","stateDispatch","useDispatch","useEffect","handlePagination","_apiProps","handleFilterItems","Section","noData","PrimaryToolbar","activeFiltersConfig","category","chips","onDelete","_e","clearAll","chip","newFilters","filterConfig","onChange","items","filterValues","label","isDisabled","aria-label","index","EmptyTable","Bullseye","EmptyState","EmptyStateIcon","icon","SearchIcon","Title","headingLevel","size","EmptyStateBody","EmptyStateSecondaryActions","Button","TableToolbar","Flex","justifyContent","default","Orders","insights","chrome","appNavClick","secondaryNav","Stack","schema"],"mappings":"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","file":"js/orders~91f4305a.9272ccb927403e3591aa.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport {\n  TOPOLOGICAL_INVENTORY_API_BASE,\n  SOURCES_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nexport const getPlatforms = () => {\n  return graphqlInstance\n    .post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n    .then(({ data: { application_types } }) => application_types)\n    .then(([{ sources }]) => sources);\n};\n\nexport const getPlatform = (platformId) => {\n  return axiosInstance.get(`${SOURCES_API_BASE}/sources/${platformId}`);\n};\n\nexport const getPlatformItems = (platformId, filter, options) => {\n  const filterQuery = filter ? `&filter[name][contains_i]=${filter}` : '';\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_offerings?filter[archived_at][nil]${filterQuery}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings`\n    );\n  }\n};\n\nexport const getPlatformInventories = (\n  platformId,\n  filter = '',\n  options = defaultSettings\n) => {\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_inventories?filter[name][contains_i]=${filter}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_inventories?limit=${options.limit}&offset=${options.offset}`\n    );\n  }\n};\n\nexport const getServiceOffering = (serviceOfferingId, sourceId) =>\n  Promise.all([\n    axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings/${serviceOfferingId}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${sourceId}`)\n      .then((source) => {\n        return axiosInstance\n          .get(`${SOURCES_API_BASE}/source_types/${source.source_type_id}`)\n          .then(({ icon_url }) => ({\n            ...source,\n            icon_url\n          }));\n      })\n  ]).then(([service, source]) => ({\n    service,\n    source\n  }));\n","import * as ActionTypes from '../action-types';\nimport * as PlatformHelper from '../../helpers/platform/platform-helper';\n\nexport const fetchPlatforms = () => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_PLATFORMS}_PENDING` });\n  return PlatformHelper.getPlatforms()\n    .then((data) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_FULFILLED`,\n        payload: data\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchPlatformItems = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_ITEMS,\n  payload: PlatformHelper.getPlatformItems(platformId, filter, options),\n  meta: {\n    platformId,\n    filter,\n    ...options\n  }\n});\n\nexport const fetchMultiplePlatformItems = (platformsId) => {\n  const platformPromisses = platformsId.map((platformId) =>\n    PlatformHelper.getPlatformItems(platformId).then((data) => ({\n      [platformId]: data\n    }))\n  );\n  return {\n    type: ActionTypes.FETCH_MULTIPLE_PLATFORM_ITEMS,\n    payload: Promise.all(platformPromisses).then((data) =>\n      data.reduce(\n        (acc, curr) => ({\n          ...acc,\n          ...curr\n        }),\n        {}\n      )\n    )\n  };\n};\n\nexport const fetchSelectedPlatform = (id) => ({\n  type: ActionTypes.FETCH_PLATFORM,\n  payload: PlatformHelper.getPlatform(id)\n});\n\nexport const searchPlatformItems = (value) => ({\n  type: ActionTypes.FILTER_PLATFORM_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const fetchPlatformInventories = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_INVENTORIES,\n  payload: PlatformHelper.getPlatformInventories(platformId, filter, options)\n});\n\nexport const fetchServiceOffering = (...args) => ({\n  type: ActionTypes.FETCH_SERVICE_OFFERING,\n  payload: PlatformHelper.getServiceOffering(...args)\n});\n","/* eslint camelcase: 0 */\nimport {\n  getAxiosInstance,\n  getPortfolioItemApi,\n  getOrderApi,\n  getOrderItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nconst orderApi = getOrderApi();\nconst orderItemApi = getOrderItemApi();\nconst portfolioItemApi = getPortfolioItemApi();\nconst axiosInstance = getAxiosInstance();\n\nexport function getServicePlans(portfolioItemId) {\n  return portfolioItemApi.listServicePlans(portfolioItemId);\n}\n\nexport async function sendSubmitOrder({\n  service_parameters: { providerControlParameters, ...service_parameters },\n  ...parameters\n}) {\n  let order = await orderApi.createOrder();\n  let orderItem = {};\n  orderItem.count = 1;\n  orderItem = {\n    ...orderItem,\n    ...parameters,\n    service_parameters,\n    provider_control_parameters: providerControlParameters || {}\n  };\n  const orderItemResponse = await orderApi.addToOrder(order.id, orderItem);\n  return orderApi\n    .submitOrder(order.id)\n    .then((order) => ({ ...order, orderItem: orderItemResponse }));\n}\n\nexport function cancelOrder(orderId) {\n  return orderApi.cancelOrder(orderId);\n}\n\nconst getOrderItems = (orderIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items?${orderIds\n      .map((orderId) => `filter[order_id][]=${orderId}`)\n      .join('&')}`\n  );\n\nconst getOrderPortfolioItems = (itemIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items?${itemIds\n      .map((itemId) => `filter[id][]=${itemId}`)\n      .join('&')}`\n  );\n\nexport const getOrders = (filter = '', pagination = defaultSettings) =>\n  axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/orders?${filter}&limit=${pagination.limit}&offset=${pagination.offset}`\n    ) // eslint-disable-line max-len\n    .then((orders) =>\n      getOrderItems(orders.data.map(({ id }) => id)).then((orderItems) =>\n        getOrderPortfolioItems(\n          orderItems.data.map(({ portfolio_item_id }) => portfolio_item_id)\n        ).then((portfolioItems) => {\n          return {\n            portfolioItems,\n            ...orders,\n            data: orders.data.map((order) => ({\n              ...order,\n              orderItems: orderItems.data.filter(\n                ({ order_id }) => order_id === order.id\n              )\n            }))\n          };\n        })\n      )\n    );\n\nexport function getOrderApprovalRequests(orderItemId) {\n  return orderItemApi.listApprovalRequests(orderItemId);\n}\n\nexport const getOrderDetail = (params) => {\n  let detailPromises = [\n    axiosInstance.get(`${CATALOG_API_BASE}/orders/${params.order}`),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/order_items/${params['order-item']}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Order item',\n            notFound: true\n          };\n        }\n\n        throw error;\n      }),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/portfolio_items/${params['portfolio-item']}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Product',\n            notFound: true\n          };\n        }\n\n        throw error;\n      })\n  ];\n\n  detailPromises.push(\n    params.platform && params.platform !== 'undefined'\n      ? axiosInstance\n          .get(`${SOURCES_API_BASE}/sources/${params.platform}`)\n          .catch((error) => {\n            if (error.status === 404 || error.status === 400) {\n              return {\n                object: 'Platform',\n                notFound: true\n              };\n            }\n\n            throw error;\n          })\n      : {\n          object: 'Platform',\n          notFound: true\n        }\n  );\n\n  detailPromises.push(\n    axiosInstance\n      .get(\n        `${CATALOG_API_BASE}/order_items/${params['order-item']}/progress_messages`\n      )\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {};\n        }\n\n        throw error;\n      })\n  );\n\n  detailPromises.push(\n    params.portfolio && params.portfolio !== 'undefined'\n      ? axiosInstance\n          .get(`${CATALOG_API_BASE}/portfolios/${params.portfolio}`)\n          .catch((error) => {\n            if (error.status === 404 || error.status === 400) {\n              return {\n                object: 'Portfolio',\n                notFound: true\n              };\n            }\n\n            throw error;\n          })\n      : { object: 'Portfolio', notFound: true }\n  );\n\n  return Promise.all(detailPromises);\n};\n\nexport const getApprovalRequests = (orderItemId) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items/${orderItemId}/approval_requests`\n  );\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport { ORDER_ROUTE } from '../../constants/routes';\n\nconst OrderNotification = ({\n  id,\n  dispatch,\n  portfolioItemId,\n  portfolioId,\n  platformId,\n  orderItemId\n}) => (\n  <Fragment>\n    You can track the progress of Order # {id} in your{' '}\n    <Link\n      onClick={() => dispatch(clearNotifications())}\n      to={{\n        pathname: ORDER_ROUTE,\n        search: `?order=${id}&order-item=${orderItemId}&portfolio-item=${portfolioItemId}&platform=${platformId}&portfolio=${portfolioId}`\n      }}\n    >\n      Orders\n    </Link>{' '}\n    page.\n  </Fragment>\n);\n\nOrderNotification.propTypes = {\n  id: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  portfolioItemId: PropTypes.string.isRequired,\n  portfolioId: PropTypes.string.isRequired,\n  platformId: PropTypes.string.isRequired,\n  orderItemId: PropTypes.string.isRequired\n};\n\nexport default OrderNotification;\n","import React from 'react';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\n\nimport * as ActionTypes from '../action-types';\nimport * as OrderHelper from '../../helpers/order/order-helper';\nimport OrderNotification from '../../presentational-components/order/order-notification';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const fetchServicePlans = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_SERVICE_PLANS,\n  payload: OrderHelper.getServicePlans(portfolioItemId)\n});\n\nexport const updateServiceData = (data) => ({\n  type: ActionTypes.UPDATE_SERVICE_DATA,\n  payload: { serviceData: data }\n});\n\nexport const setSelectedPlan = (data) => ({\n  type: ActionTypes.SET_SELECTED_PLAN,\n  payload: data\n});\n\nexport const sendSubmitOrder = (apiProps, portfolioItem) => (dispatch) =>\n  dispatch({\n    type: ActionTypes.SUBMIT_SERVICE_ORDER,\n    payload: OrderHelper.sendSubmitOrder(apiProps).then(({ id, orderItem }) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been accepted successfully',\n          description: (\n            <OrderNotification\n              id={id}\n              dispatch={dispatch}\n              portfolioItemId={portfolioItem.id}\n              portfolioId={portfolioItem.portfolio_id}\n              platformId={portfolioItem.service_offering_source_ref}\n              orderItemId={orderItem.id}\n            />\n          ),\n          dismissable: true\n        })\n      )\n    )\n  });\n\nexport const cancelOrder = (orderId) => (dispatch, getState) => {\n  dispatch({ type: `${ActionTypes.CANCEL_ORDER}_PENDING` });\n  const {\n    orderReducer: { orderDetail }\n  } = getState();\n  return OrderHelper.cancelOrder(orderId)\n    .then(() => {\n      orderDetail.order.state = 'Canceled';\n      if (\n        orderDetail.approvalRequest &&\n        orderDetail.approvalRequest.length > 0\n      ) {\n        orderDetail.approvalRequest[0].state = 'canceled';\n      }\n\n      dispatch({\n        type: ActionTypes.SET_ORDER_DETAIL,\n        payload: { ...orderDetail }\n      });\n      return orderDetail;\n    })\n    .then((orderDetail) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been canceled successfully',\n          description: `Order ${`Order #${orderDetail.order.id}`} was canceled.`,\n          dismissable: true\n        })\n      )\n    )\n    .then(() => dispatch({ type: `${ActionTypes.CANCEL_ORDER}_FULFILLED` }))\n    .catch((error) => {\n      dispatch({\n        type: `${ActionTypes.CANCEL_ORDER}_REJECTED`,\n        payload: error\n      });\n    });\n};\n\nexport const fetchOrders = (filters, pagination = defaultSettings) => (\n  dispatch\n) => {\n  const queryFilter = Object.entries(filters)\n    .filter(([, value]) => value && value.length > 0)\n    .map(([key, value]) =>\n      Array.isArray(value)\n        ? value.map((value) => `filter[${key}][]=${value}`).join('&')\n        : `filter[${key}][contains_i]=${value}`\n    )\n    .join('&');\n  dispatch({ type: `${ActionTypes.FETCH_ORDERS}_PENDING` });\n  return OrderHelper.getOrders(queryFilter, pagination)\n    .then(({ portfolioItems, ...orders }) => {\n      dispatch({\n        type: ActionTypes.SET_PORTFOLIO_ITEMS,\n        payload: portfolioItems\n      });\n      return dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_FULFILLED`,\n        meta: {\n          ...pagination,\n          filter: queryFilter,\n          filters,\n          storeState: true,\n          stateKey: 'orders'\n        },\n        payload: orders\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchOrderDetails = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SET_ORDER_DETAIL}_PENDING` });\n  return OrderHelper.getOrderDetail(params)\n    .then(\n      ([\n        order,\n        orderItem,\n        portfolioItem,\n        platform,\n        progressMessages,\n        portfolio,\n        approvalRequest\n      ]) =>\n        dispatch({\n          type: `${ActionTypes.SET_ORDER_DETAIL}_FULFILLED`,\n          payload: {\n            order,\n            orderItem,\n            portfolioItem,\n            platform,\n            progressMessages,\n            portfolio,\n            approvalRequest\n          }\n        })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.SET_ORDER_DETAIL}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchApprovalRequests = (orderItemId) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_PENDING` });\n  return OrderHelper.getApprovalRequests(orderItemId)\n    .then((data) => {\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_FULFILLED`,\n        payload: data\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n","import { toolbarComponentTypes } from '../toolbar-mapper';\n\nconst createOrdersToolbarSchema = () => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      className: 'orders bg-fill pf-u-p-lg',\n      key: 'orders-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'orders-toolbar-title',\n          title: 'Orders',\n          className: ''\n        }\n      ]\n    }\n  ]\n});\n\nexport default createOrdersToolbarSchema;\n","import { CATALOG_API_BASE } from '../../utilities/constants';\n\nexport const getOrderIcon = ({ orderItems }) =>\n  orderItems[0] &&\n  `${CATALOG_API_BASE}/portfolio_items/${orderItems[0].portfolio_item_id}/icon`;\n\nexport const getOrderPortfolioName = ({ orderItems, id }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem ? portfolioItem.name : `Order ${id}`;\n};\n\nexport const getOrderPlatformId = ({ orderItems }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem\n    ? {\n        orderPlatform: portfolioItem.service_offering_source_ref,\n        orderPortfolio: portfolioItem.portfolio_id\n      }\n    : {};\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from 'styled-components';\n\nconst childrenPropType = PropTypes.oneOfType([\n  PropTypes.node,\n  PropTypes.arrayOf(PropTypes.node)\n]);\n\nexport const Table = ({ children, className, ...props }) => (\n  <table className={clsx('pf-c-table', 'pf-m-grid-md', className)} {...props}>\n    {children}\n  </table>\n);\n\nTable.propTypes = {\n  children: childrenPropType.isRequired,\n  className: PropTypes.string\n};\n\nexport const Tbody = ({ children, ...props }) => (\n  <tbody {...props}>{children}</tbody>\n);\n\nTbody.propTypes = {\n  children: childrenPropType.isRequired\n};\n\nexport const TableCell = styled(({ shrink, children, ...props }) => (\n  <td {...props}>{children}</td>\n))`\n  @media screen and (min-width: 768px) {\n    vertical-align: top !important;\n    width: ${({ shrink }) => (shrink ? '200px !important' : 'initial')};\n    img {\n      object-fit: contain;\n    }\n  }\n`;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport {\n  getOrderIcon,\n  getOrderPortfolioName,\n  getOrderPlatformId\n} from '../../helpers/shared/orders';\nimport CatalogLink from '../common/catalog-link';\nimport {\n  ORDER_ROUTE,\n  ORDER_APPROVAL_ROUTE,\n  ORDER_LIFECYCLE_ROUTE\n} from '../../constants/routes';\nimport { TableCell } from '../../presentational-components/styled-components/table';\n\nconst routeMapper = {\n  'Approval Pending': ORDER_APPROVAL_ROUTE,\n  Completed: ORDER_LIFECYCLE_ROUTE\n};\n\nconst OrderItem = memo(\n  ({ item }) => {\n    const { orderPlatform, orderPortfolio, orderName } = useSelector(\n      ({\n        portfolioReducer: {\n          portfolioItems: { data }\n        }\n      }) => {\n        const { orderPlatform, orderPortfolio } = getOrderPlatformId(\n          item,\n          data\n        );\n        return {\n          orderPlatform,\n          orderPortfolio,\n          orderName: getOrderPortfolioName(item, data)\n        };\n      }\n    );\n    const orderItem = (item.orderItems[0] && item.orderItems[0]) || {};\n    const searchParams = {\n      order: item.id,\n      'order-item': orderItem.id,\n      'portfolio-item': orderItem.portfolio_item_id,\n      platform: orderPlatform,\n      portfolio: orderPortfolio\n    };\n    return (\n      <tr\n        aria-labelledby={`${item.id}-expand`}\n        className=\"data-list-expand-fix\"\n      >\n        <TableCell shrink className=\"pf-u-pl-xl-on-md\">\n          <CardIcon\n            height={60}\n            src={getOrderIcon(item)}\n            sourceId={orderPlatform}\n          />\n        </TableCell>\n        <TableCell>\n          <TextContent>\n            <Grid hasGutter className=\"pf-u-gg-md\">\n              <GridItem>\n                <Level className=\"flex-no-wrap\">\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.h5}>\n                      <CatalogLink\n                        pathname={ORDER_ROUTE}\n                        searchParams={searchParams}\n                      >\n                        {orderName} - Order # {item.id}\n                      </CatalogLink>\n                    </Text>\n                  </LevelItem>\n                  <LevelItem className=\"flex-item-no-wrap\">\n                    <CatalogLink\n                      pathname={routeMapper[item.state] || ORDER_ROUTE}\n                      searchParams={searchParams}\n                    >\n                      {item.state === 'Failed' && (\n                        <ExclamationCircleIcon className=\"pf-u-mr-sm icon-danger-fill\" />\n                      )}\n                      {item.state}\n                    </CatalogLink>\n                  </LevelItem>\n                </Level>\n              </GridItem>\n              <GridItem>\n                <Level>\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n                      Ordered&nbsp;\n                      <DateFormat date={item.created_at} variant=\"relative\" />\n                    </Text>\n                  </LevelItem>\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n                      Ordered by {item.owner}\n                    </Text>\n                  </LevelItem>\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n                      Last updated&nbsp;\n                      <DateFormat\n                        date={\n                          item.orderItems[0] && item.orderItems[0].updated_at\n                        }\n                        variant=\"relative\"\n                      />\n                    </Text>\n                  </LevelItem>\n                </Level>\n              </GridItem>\n            </Grid>\n          </TextContent>\n        </TableCell>\n      </tr>\n    );\n  },\n  (prevProps, nextProps) => prevProps.id === nextProps.id\n);\n\nOrderItem.propTypes = {\n  item: PropTypes.object.isRequired\n};\n\nexport default OrderItem;\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  Title,\n  Bullseye,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Flex,\n  EmptyStateSecondaryActions,\n  Button\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/PrimaryToolbar';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/components/cjs/EmptyTable';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/TableToolbar';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { fetchOrders } from '../../redux/actions/order-actions';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport OrderItem from './order-item';\nimport AsyncPagination from '../common/async-pagination';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport {\n  Table,\n  Tbody\n} from '../../presentational-components/styled-components/table';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\n\nconst debouncedFilter = asyncFormValidator(\n  (filters, meta = defaultSettings, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(fetchOrders(filters, meta)).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst initialState = {\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false,\n  filterType: 'state',\n  filters: {\n    state: [],\n    owner: ''\n  }\n};\n\nconst changeFilters = (value, type, filters) => ({\n  ...filters,\n  [type]: value\n});\n\nconst ordersListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return {\n        ...state,\n        filters: changeFilters(action.payload, state.filterType, state.filters)\n      };\n    case 'replaceFilterChip':\n      return { ...state, filters: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    case 'setFilterType':\n      return { ...state, filterType: action.payload };\n  }\n\n  return state;\n};\n\nconst OrdersList = () => {\n  const viewState = useInitialUriHash();\n  const [\n    { isFetching, isFiltering, filterType, filters },\n    stateDispatch\n  ] = useReducer(ordersListState, {\n    ...initialState,\n    filters: viewState?.orders?.filters || { state: [], owner: '' }\n  });\n  const { data, meta } = useSelector(({ orderReducer }) => orderReducer.orders);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.all([\n      dispatch(fetchOrders(filters, viewState?.orders)),\n      dispatch(fetchPlatforms())\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const handlePagination = (_apiProps, pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    return dispatch(fetchOrders(filters, pagination))\n      .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n      .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      { ...filters, [filterType]: value },\n      { ...meta, offset: 0 },\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  return (\n    <Grid hasGutter>\n      <GridItem>\n        <Section type=\"content\">\n          {!meta.noData && (\n            <PrimaryToolbar\n              activeFiltersConfig={{\n                filters: Object.entries(filters)\n                  .filter(([, value]) => value && value.length > 0)\n                  .map(([key, value]) => ({\n                    category: key,\n                    type: key,\n                    chips: Array.isArray(value)\n                      ? value.map((name) => ({ name }))\n                      : [{ name: value }]\n                  })),\n                onDelete: (_e, [chip], clearAll) => {\n                  if (clearAll) {\n                    stateDispatch({\n                      type: 'replaceFilterChip',\n                      payload: initialState.filters\n                    });\n                    return debouncedFilter(\n                      initialState.filters,\n                      meta,\n                      dispatch,\n                      (isFiltering) =>\n                        stateDispatch({\n                          type: 'setFilteringFlag',\n                          payload: isFiltering\n                        })\n                    );\n                  }\n\n                  const newFilters = { ...filters };\n                  if (chip.type === 'state') {\n                    newFilters[chip.type] = newFilters[chip.type].filter(\n                      (value) => value !== chip.chips[0].name\n                    );\n                  } else {\n                    newFilters[chip.type] = '';\n                  }\n\n                  stateDispatch({\n                    type: 'replaceFilterChip',\n                    payload: newFilters\n                  });\n                  debouncedFilter(newFilters, meta, dispatch, (isFiltering) =>\n                    stateDispatch({\n                      type: 'setFilteringFlag',\n                      payload: isFiltering\n                    })\n                  );\n                }\n              }}\n              filterConfig={{\n                onChange: (_e, value) =>\n                  stateDispatch({ type: 'setFilterType', payload: value }),\n                value: filterType,\n                items: [\n                  {\n                    filterValues: {\n                      items: [\n                        {\n                          value: 'Approval Pending',\n                          label: 'Approval Pending'\n                        },\n                        {\n                          value: 'Canceled',\n                          label: 'Canceled'\n                        },\n                        {\n                          value: 'Completed',\n                          label: 'Completed'\n                        },\n                        {\n                          value: 'Created',\n                          label: 'Created'\n                        },\n                        {\n                          value: 'Failed',\n                          label: 'Failed'\n                        },\n                        {\n                          value: 'Ordered',\n                          label: 'Ordered'\n                        }\n                      ],\n                      value: filters.state,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'State',\n                    value: 'state',\n                    type: 'checkbox'\n                  },\n                  {\n                    filterValues: {\n                      value: filters.owner,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'Owner',\n                    value: 'owner'\n                  }\n                ]\n              }}\n              pagination={\n                <AsyncPagination\n                  isDisabled={isFetching || isFiltering}\n                  apiRequest={handlePagination}\n                  meta={meta}\n                  isCompact\n                />\n              }\n            />\n          )}\n          <Table aria-label=\"order-list\">\n            <Tbody>\n              {isFetching || isFiltering ? (\n                <tr>\n                  <td className=\"pf-u-p-0\">\n                    <ListLoader />\n                  </td>\n                </tr>\n              ) : data.length > 0 ? (\n                data.map((item, index) => (\n                  <OrderItem key={item.id} index={index} item={item} />\n                ))\n              ) : (\n                <tr>\n                  <td>\n                    <EmptyTable>\n                      <Bullseye>\n                        <EmptyState>\n                          <Bullseye>\n                            <EmptyStateIcon icon={SearchIcon} />\n                          </Bullseye>\n                          <Title headingLevel=\"h1\" size=\"lg\">\n                            {meta.noData ? 'No orders' : 'No results found'}\n                          </Title>\n                          <EmptyStateBody>\n                            {meta.noData\n                              ? 'No orders have been created.'\n                              : 'No results match the filter criteria. Remove all filters or clear all filters to show results.'}\n                          </EmptyStateBody>\n\n                          <EmptyStateSecondaryActions>\n                            {!meta.noData && (\n                              <Button\n                                variant=\"link\"\n                                onClick={() => {\n                                  stateDispatch({\n                                    type: 'setFilteringFlag',\n                                    payload: true\n                                  });\n                                  handleFilterItems('');\n                                }}\n                              >\n                                Clear all filters\n                              </Button>\n                            )}\n                          </EmptyStateSecondaryActions>\n                        </EmptyState>\n                      </Bullseye>\n                    </EmptyTable>\n                  </td>\n                </tr>\n              )}\n            </Tbody>\n          </Table>\n          <TableToolbar className=\"pf-u-mr-0\">\n            <div className=\"bottom-pagination-container\">\n              <Flex justifyContent={{ default: 'justifyContentFlexEnd' }}>\n                {meta.count > 0 && (\n                  <AsyncPagination\n                    className=\"pf-u-mt-0\"\n                    isDisabled={isFetching || isFiltering}\n                    apiRequest={handlePagination}\n                    meta={meta}\n                  />\n                )}\n              </Flex>\n            </div>\n          </TableToolbar>\n        </Section>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default OrdersList;\n","import React, { useEffect } from 'react';\nimport { Stack } from '@patternfly/react-core';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createOrdersToolbarSchema from '../../toolbar/schemas/orders-toolbar.schema';\nimport OrdersList from './orders-list';\n\nconst Orders = () => {\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'orders', secondaryNav: true });\n  }, []);\n\n  return (\n    <Stack>\n      <ToolbarRenderer schema={createOrdersToolbarSchema()} />\n      <OrdersList />\n    </Stack>\n  );\n};\n\nexport default Orders;\n"],"sourceRoot":""}