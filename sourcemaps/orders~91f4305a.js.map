{"version":3,"sources":["webpack:///./src/utilities/async-form-validator.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/messages/filtering.messages.js","webpack:///./src/messages/orders.messages.js","webpack:///./src/helpers/order/order-helper.js","webpack:///./src/presentational-components/order/order-notification.js","webpack:///./src/redux/actions/order-actions.js","webpack:///./src/messages/states.messages.js","webpack:///./src/toolbar/schemas/orders-toolbar.schema.js","webpack:///./src/helpers/shared/orders.js","webpack:///./src/presentational-components/styled-components/table.js","webpack:///./src/smart-components/order/order-item.js","webpack:///./src/smart-components/order/orders-list.js","webpack:///./src/smart-components/order/orders.js"],"names":["asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","getNewPage","request","debouncePromise","direction","propTypes","PropTypes","shape","isRequired","func","any","string","bool","defaultProps","filteringMessages","defineMessages","require","noItems","id","defaultMessage","filterByProduct","noResults","noResultsDescription","clearFilters","noProducts","noRecords","filterByTitle","noResultsFound","noResult","unknown","ordersMessages","orderedBy","orderedByLabel","lastUpdated","compositeTitle","detailTitle","orderSuccess","noOrdersTitle","noOrdersDescription","noApprovalRequests","creatingApprovalRequest","approvalTitle","approvalDetail","approvalCreated","approvalReason","approvalCompleted","orderDetails","menuApproval","menuLifecycle","menuSteps","objectsNotFound","orderID","orderParameters","orderProgressMessages","lifecycleLink","cancelOrder","keepOrder","cancelDescription","backToOrders","approvalProduct","orderDate","approvalParameters","activity","orderApi","getOrderApi","portfolioItemApi","getOrderItemApi","getPortfolioItemApi","axiosInstance","getAxiosInstance","graphqlInstance","getGraphqlInstance","getServicePlans","portfolioItemId","listServicePlans","sendSubmitOrder","a","service_parameters","providerControlParameters","parameters","createOrder","order","orderItem","provider_control_parameters","addToOrder","orderItemResponse","submitOrder","then","getOrderItems","orderIds","get","CATALOG_API_BASE","map","orderId","join","getOrderPortfolioItems","itemIds","itemId","getOrders","filter","pagination","defaultSettings","orders","data","orderItems","portfolio_item_id","portfolioItems","order_id","getApprovalRequests","orderItemId","promises","requestId","parent_id","approval_request_ref","post","APPROVAL_API_BASE","query","requests","Promise","all","actions","updated","length","pop","created_at","undefined","OrderNotification","dispatch","portfolioId","platformId","formatMessage","useIntl","link","chunks","onClick","clearNotifications","to","pathname","ORDER_ROUTE","search","fetchServicePlans","type","ActionTypes","payload","OrderHelper","portfolioItem","addNotification","variant","title","description","portfolio_id","service_offering_source_ref","dismissable","getState","orderDetail","orderReducer","state","approvalRequest","error","fetchOrders","filters","queryFilter","Object","entries","value","key","Array","isArray","storeState","stateKey","fetchOrderDetails","params","detailPromises","status","object","notFound","push","platform","SOURCES_API_BASE","portfolio","progressMessages","fetchApprovalRequests","err","statesMessages","ordered","approvalPending","canceled","completed","failed","undecided","approved","denied","pending","skipped","started","notified","getTranslatableState","replace","char","toLowerCase","createOrdersToolbarSchema","fields","component","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","getOrderIcon","getOrderPortfolioName","find","name","childrenPropType","oneOfType","node","arrayOf","Table","children","clsx","Tbody","TableCell","styled","shrink","routeMapper","ORDER_APPROVAL_ROUTE","Completed","ORDER_LIFECYCLE_ROUTE","OrderItem","memo","item","useSelector","portfolioReducer","orderPlatform","orderPortfolio","orderName","searchParams","translatableState","aria-labelledby","height","src","sourceId","TextContent","Grid","hasGutter","GridItem","Level","LevelItem","Text","TextVariants","h5","small","DateFormat","date","owner","updated_at","prevProps","nextProps","debouncedFilter","asyncFormValidator","filteringCallback","initialState","isOpen","isFetching","isFiltering","filterType","ordersListState","action","OrdersList","viewState","useInitialUriHash","useReducer","stateDispatch","useDispatch","useEffect","fetchPlatforms","handlePagination","_apiProps","handleFilterItems","Section","noData","PrimaryToolbar","activeFiltersConfig","category","chips","onDelete","_e","clearAll","chip","newFilters","filterConfig","onChange","items","filterValues","label","labelMessages","created","isDisabled","aria-label","index","EmptyTable","Bullseye","EmptyState","EmptyStateIcon","icon","SearchIcon","Title","headingLevel","size","EmptyStateBody","EmptyStateSecondaryActions","Button","TableToolbar","Flex","justifyContent","default","Orders","insights","chrome","appNavClick","secondaryNav","Stack","schema"],"mappings":"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","file":"js/orders~91f4305a.018f74fc2d97fde4f4ee.js","sourcesContent":["import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","const { defineMessages } = require('react-intl');\n\nconst filteringMessages = defineMessages({\n  noItems: {\n    id: 'common.filtering.noItems',\n    defaultMessage: 'No items found'\n  },\n  filterByProduct: {\n    id: 'common.filtering.filterByProduct',\n    defaultMessage: 'Filter by product'\n  },\n  noResults: {\n    id: 'common.filtering.noResults',\n    defaultMessage: 'No results found'\n  },\n  noResultsDescription: {\n    id: 'common.filtering.noResultsDescription',\n    defaultMessage:\n      'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n  },\n  clearFilters: {\n    id: 'common.filtering.clear-filters',\n    defaultMessage: 'Clear all filters'\n  },\n  noProducts: {\n    id: 'common.filtering.no-products',\n    defaultMessage: 'No products yet'\n  },\n  noRecords: {\n    id: 'commonMessages.noRecords',\n    defaultMessage: 'No records'\n  },\n  filterByTitle: {\n    id: 'tableToolbar.filterByTitle',\n    defaultMessage: 'Filter by {title}'\n  },\n  noResultsFound: {\n    id: 'tableToolbar.noResultsFound',\n    defaultMessage: 'No results found'\n  },\n  noResult: {\n    id: 'tableToolbar.noResult',\n    defaultMessage: 'No {results}'\n  },\n  unknown: {\n    id: 'commonMessages.unknown',\n    defaultMessage: 'Unknown'\n  }\n});\n\nexport default filteringMessages;\n","const { defineMessages } = require('react-intl');\n\nconst ordersMessages = defineMessages({\n  orderedBy: {\n    id: 'orders.common.orderedBy',\n    defaultMessage: 'Ordered by {owner}'\n  },\n  orderedByLabel: {\n    id: 'orders.approval.orderedBy',\n    defaultMessage: 'Ordered by'\n  },\n  lastUpdated: {\n    id: 'orders.common.lastUpdated',\n    defaultMessage: 'Last updated'\n  },\n  compositeTitle: {\n    id: 'orders.common.compositeTitle',\n    defaultMessage: '{name} - Order # {id}'\n  },\n  detailTitle: {\n    id: 'orders.detail.title',\n    defaultMessage: 'Order ID {id}'\n  },\n  orderSuccess: {\n    id: 'orders.notification.success',\n    defaultMessage:\n      'You can track the progress of Order # {id} in your <link>Orders</link> page.'\n  },\n  noOrdersTitle: {\n    id: 'orders.list.empty.title',\n    defaultMessage: 'No orders'\n  },\n  noOrdersDescription: {\n    id: 'orders.list.empty.description',\n    defaultMessage: 'No orders have been created.'\n  },\n  noApprovalRequests: {\n    id: 'orders.approval.no-requests',\n    defaultMessage:\n      'We were unable to find any approval requests for this order.'\n  },\n  creatingApprovalRequest: {\n    id: 'orders.approval.creating',\n    defaultMessage: 'Creating approval request'\n  },\n  approvalTitle: {\n    id: 'orders.approval.title',\n    defaultMessage: 'Summary'\n  },\n  approvalDetail: {\n    id: 'orders.approval.view-detail',\n    // eslint-disable-next-line quotes\n    defaultMessage: \"View this order's approval request details\"\n  },\n  approvalCreated: {\n    id: 'orders.approval.details.created',\n    defaultMessage: 'Request created'\n  },\n  approvalReason: {\n    id: 'orders.approval.details.reason',\n    defaultMessage: 'Approval reason'\n  },\n  approvalCompleted: {\n    id: 'orders.approval.details.completed',\n    defaultMessage: 'Completed at'\n  },\n  orderDetails: {\n    id: 'orders.common.details',\n    defaultMessage: 'Order details'\n  },\n  menuApproval: {\n    id: 'orders.menu.approval',\n    defaultMessage: 'Approval'\n  },\n  menuLifecycle: {\n    id: 'orders.menu.lifecycle',\n    defaultMessage: 'Lifecycle'\n  },\n  menuSteps: {\n    id: 'orders.menu.steps',\n    defaultMessage: 'Order steps'\n  },\n  objectsNotFound: {\n    id: 'order.detail.not-found',\n    defaultMessage:\n      'The {objects} for this order {count, plural, one {is} other {are}} not available'\n  },\n  orderID: {\n    id: 'orders.order.detail.ID',\n    defaultMessage: 'Order ID'\n  },\n  orderParameters: {\n    id: 'orders.order.detail.parameters',\n    defaultMessage: 'Order parameters'\n  },\n  orderProgressMessages: {\n    id: 'orders.order.detail.messages',\n    defaultMessage: 'Progress messages'\n  },\n  lifecycleLink: {\n    id: 'orders.order.lifecicle.link',\n    defaultMessage: 'Manage product'\n  },\n  cancelOrder: {\n    id: 'orders.actions.cancel',\n    defaultMessage: 'Cancel order'\n  },\n  keepOrder: {\n    id: 'orders.actions.keep',\n    defaultMessage: 'Keep order'\n  },\n  cancelDescription: {\n    id: 'orders.cancel.description',\n    defaultMessage: 'Are you sure you want to cancel {name}?'\n  },\n  backToOrders: {\n    id: 'orders.toolbar.backLink',\n    defaultMessage: 'Back to orders'\n  },\n  approvalProduct: {\n    id: 'orders.approval.product',\n    defaultMessage: 'Product'\n  },\n  orderDate: {\n    id: 'orders.approval.order-date',\n    defaultMessage: 'Order date'\n  },\n  approvalParameters: {\n    id: 'orders.approval.parameters',\n    defaultMessage: 'Parameters'\n  },\n  activity: {\n    id: 'orders.approval.activity',\n    defaultMessage: 'Activity'\n  }\n});\n\nexport default ordersMessages;\n","/* eslint camelcase: 0 */\nimport {\n  getAxiosInstance,\n  getPortfolioItemApi,\n  getOrderApi,\n  getOrderItemApi,\n  getGraphqlInstance\n} from '../shared/user-login';\nimport {\n  CATALOG_API_BASE,\n  SOURCES_API_BASE,\n  APPROVAL_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nconst orderApi = getOrderApi();\nconst orderItemApi = getOrderItemApi();\nconst portfolioItemApi = getPortfolioItemApi();\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nexport function getServicePlans(portfolioItemId) {\n  return portfolioItemApi.listServicePlans(portfolioItemId);\n}\n\nexport async function sendSubmitOrder({\n  service_parameters: { providerControlParameters, ...service_parameters },\n  ...parameters\n}) {\n  let order = await orderApi.createOrder();\n  let orderItem = {};\n  orderItem.count = 1;\n  orderItem = {\n    ...orderItem,\n    ...parameters,\n    service_parameters,\n    provider_control_parameters: providerControlParameters || {}\n  };\n  const orderItemResponse = await orderApi.addToOrder(order.id, orderItem);\n  return orderApi\n    .submitOrder(order.id)\n    .then((order) => ({ ...order, orderItem: orderItemResponse }));\n}\n\nexport function cancelOrder(orderId) {\n  return orderApi.cancelOrder(orderId);\n}\n\nconst getOrderItems = (orderIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items?${orderIds\n      .map((orderId) => `filter[order_id][]=${orderId}`)\n      .join('&')}`\n  );\n\nconst getOrderPortfolioItems = (itemIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items?${itemIds\n      .map((itemId) => `filter[id][]=${itemId}`)\n      .join('&')}`\n  );\n\nexport const getOrders = (filter = '', pagination = defaultSettings) =>\n  axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/orders?${filter}&limit=${pagination.limit}&offset=${pagination.offset}`\n    ) // eslint-disable-line max-len\n    .then((orders) =>\n      getOrderItems(orders.data.map(({ id }) => id)).then((orderItems) =>\n        getOrderPortfolioItems(\n          orderItems.data.map(({ portfolio_item_id }) => portfolio_item_id)\n        ).then((portfolioItems) => {\n          return {\n            portfolioItems,\n            ...orders,\n            data: orders.data.map((order) => ({\n              ...order,\n              orderItems: orderItems.data.filter(\n                ({ order_id }) => order_id === order.id\n              )\n            }))\n          };\n        })\n      )\n    );\n\nexport function getOrderApprovalRequests(orderItemId) {\n  return orderItemApi.listApprovalRequests(orderItemId);\n}\n\nexport const getOrderDetail = (params) => {\n  let detailPromises = [\n    axiosInstance.get(`${CATALOG_API_BASE}/orders/${params.order}`),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/order_items/${params['order-item']}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Order item',\n            notFound: true\n          };\n        }\n\n        throw error;\n      }),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/portfolio_items/${params['portfolio-item']}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Product',\n            notFound: true\n          };\n        }\n\n        throw error;\n      })\n  ];\n\n  detailPromises.push(\n    params.platform && params.platform !== 'undefined'\n      ? axiosInstance\n          .get(`${SOURCES_API_BASE}/sources/${params.platform}`)\n          .catch((error) => {\n            if (error.status === 404 || error.status === 400) {\n              return {\n                object: 'Platform',\n                notFound: true\n              };\n            }\n\n            throw error;\n          })\n      : {\n          object: 'Platform',\n          notFound: true\n        }\n  );\n\n  detailPromises.push(\n    axiosInstance\n      .get(\n        `${CATALOG_API_BASE}/order_items/${params['order-item']}/progress_messages`\n      )\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {};\n        }\n\n        throw error;\n      })\n  );\n\n  detailPromises.push(\n    params.portfolio && params.portfolio !== 'undefined'\n      ? axiosInstance\n          .get(`${CATALOG_API_BASE}/portfolios/${params.portfolio}`)\n          .catch((error) => {\n            if (error.status === 404 || error.status === 400) {\n              return {\n                object: 'Portfolio',\n                notFound: true\n              };\n            }\n\n            throw error;\n          })\n      : { object: 'Portfolio', notFound: true }\n  );\n\n  return Promise.all(detailPromises);\n};\n\nconst APPROVAL_REQUESTER_PERSONA = 'approval/requester';\nconst requestTranscriptQuery = (parent_id) => `query {\n  requests(id: \"${parent_id}\") {\n    group_name\n    state\n    actions {\n      created_at\n    }\n  }\n}`;\nconst fetchRequestTranscript = (requestId) =>\n  graphqlInstance\n    .post(\n      `${APPROVAL_API_BASE}/graphql`,\n      { query: requestTranscriptQuery(requestId) },\n      { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA }\n    )\n    .then(({ data: { requests } }) => requests);\n\nexport const getApprovalRequests = (orderItemId) =>\n  axiosInstance\n    .get(`${CATALOG_API_BASE}/order_items/${orderItemId}/approval_requests`)\n    .then(({ data }) => {\n      const promises = data.map(({ approval_request_ref }) =>\n        fetchRequestTranscript(approval_request_ref)\n      );\n      return Promise.all(promises).then((requests) => {\n        const data = requests?.[0]?.map(({ actions, ...request }) => ({\n          ...request,\n          updated: actions?.length > 0 ? actions.pop().created_at : undefined\n        }));\n        return { data: data || [] };\n      });\n    });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport { useIntl } from 'react-intl';\nimport { ORDER_ROUTE } from '../../constants/routes';\nimport ordersMessages from '../../messages/orders.messages';\n\nconst OrderNotification = ({\n  id,\n  dispatch,\n  portfolioItemId,\n  portfolioId,\n  platformId,\n  orderItemId\n}) => {\n  const { formatMessage } = useIntl();\n  return formatMessage(ordersMessages.orderSuccess, {\n    id,\n    // eslint-disable-next-line react/display-name\n    link: (chunks) => (\n      <Link\n        onClick={() => dispatch(clearNotifications())}\n        to={{\n          pathname: ORDER_ROUTE,\n          search: `?order=${id}&order-item=${orderItemId}&portfolio-item=${portfolioItemId}&platform=${platformId}&portfolio=${portfolioId}`\n        }}\n      >\n        {chunks}\n      </Link>\n    )\n  });\n};\n\nOrderNotification.propTypes = {\n  id: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  portfolioItemId: PropTypes.string.isRequired,\n  portfolioId: PropTypes.string.isRequired,\n  platformId: PropTypes.string.isRequired,\n  orderItemId: PropTypes.string.isRequired\n};\n\nexport default OrderNotification;\n","import React from 'react';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\n\nimport * as ActionTypes from '../action-types';\nimport * as OrderHelper from '../../helpers/order/order-helper';\nimport OrderNotification from '../../presentational-components/order/order-notification';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const fetchServicePlans = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_SERVICE_PLANS,\n  payload: OrderHelper.getServicePlans(portfolioItemId)\n});\n\nexport const updateServiceData = (data) => ({\n  type: ActionTypes.UPDATE_SERVICE_DATA,\n  payload: { serviceData: data }\n});\n\nexport const setSelectedPlan = (data) => ({\n  type: ActionTypes.SET_SELECTED_PLAN,\n  payload: data\n});\n\nexport const sendSubmitOrder = (apiProps, portfolioItem) => (dispatch) =>\n  dispatch({\n    type: ActionTypes.SUBMIT_SERVICE_ORDER,\n    payload: OrderHelper.sendSubmitOrder(apiProps).then(({ id, orderItem }) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been accepted successfully',\n          description: (\n            <OrderNotification\n              id={id}\n              dispatch={dispatch}\n              portfolioItemId={portfolioItem.id}\n              portfolioId={portfolioItem.portfolio_id}\n              platformId={portfolioItem.service_offering_source_ref}\n              orderItemId={orderItem.id}\n            />\n          ),\n          dismissable: true\n        })\n      )\n    )\n  });\n\nexport const cancelOrder = (orderId) => (dispatch, getState) => {\n  dispatch({ type: `${ActionTypes.CANCEL_ORDER}_PENDING` });\n  const {\n    orderReducer: { orderDetail }\n  } = getState();\n  return OrderHelper.cancelOrder(orderId)\n    .then(() => {\n      orderDetail.order.state = 'Canceled';\n      if (\n        orderDetail.approvalRequest &&\n        orderDetail.approvalRequest.length > 0\n      ) {\n        orderDetail.approvalRequest[0].state = 'canceled';\n      }\n\n      dispatch({\n        type: ActionTypes.SET_ORDER_DETAIL,\n        payload: { ...orderDetail }\n      });\n      return orderDetail;\n    })\n    .then((orderDetail) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been canceled successfully',\n          description: `Order ${`Order #${orderDetail.order.id}`} was canceled.`,\n          dismissable: true\n        })\n      )\n    )\n    .then(() => dispatch({ type: `${ActionTypes.CANCEL_ORDER}_FULFILLED` }))\n    .catch((error) => {\n      dispatch({\n        type: `${ActionTypes.CANCEL_ORDER}_REJECTED`,\n        payload: error\n      });\n    });\n};\n\nexport const fetchOrders = (filters, pagination = defaultSettings) => (\n  dispatch\n) => {\n  const queryFilter = Object.entries(filters)\n    .filter(([, value]) => value && value.length > 0)\n    .map(([key, value]) =>\n      Array.isArray(value)\n        ? value.map((value) => `filter[${key}][]=${value}`).join('&')\n        : `filter[${key}][contains_i]=${value}`\n    )\n    .join('&');\n  dispatch({ type: `${ActionTypes.FETCH_ORDERS}_PENDING` });\n  return OrderHelper.getOrders(queryFilter, pagination)\n    .then(({ portfolioItems, ...orders }) => {\n      dispatch({\n        type: ActionTypes.SET_PORTFOLIO_ITEMS,\n        payload: portfolioItems\n      });\n      return dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_FULFILLED`,\n        meta: {\n          ...pagination,\n          filter: queryFilter,\n          filters,\n          storeState: true,\n          stateKey: 'orders'\n        },\n        payload: orders\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchOrderDetails = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SET_ORDER_DETAIL}_PENDING` });\n  return OrderHelper.getOrderDetail(params)\n    .then(\n      ([\n        order,\n        orderItem,\n        portfolioItem,\n        platform,\n        progressMessages,\n        portfolio,\n        approvalRequest\n      ]) =>\n        dispatch({\n          type: `${ActionTypes.SET_ORDER_DETAIL}_FULFILLED`,\n          payload: {\n            order,\n            orderItem,\n            portfolioItem,\n            platform,\n            progressMessages,\n            portfolio,\n            approvalRequest\n          }\n        })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.SET_ORDER_DETAIL}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchApprovalRequests = (orderItemId) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_PENDING` });\n  return OrderHelper.getApprovalRequests(orderItemId)\n    .then((data) => {\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_FULFILLED`,\n        payload: data\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n","const { defineMessages } = require('react-intl');\n\nconst statesMessages = defineMessages({\n  title: {\n    id: 'common.states.title',\n    defaultMessage: 'State'\n  },\n  ordered: {\n    id: 'common.states.ordered',\n    defaultMessage: 'Ordered'\n  },\n  approvalPending: {\n    id: 'common.states.approval-pending',\n    defaultMessage: 'Approval Pending'\n  },\n  canceled: {\n    id: 'common.states.canceled',\n    defaultMessage: 'Canceled'\n  },\n  completed: {\n    id: 'common.states.completed',\n    defaultMessage: 'Completed'\n  },\n  failed: {\n    id: 'common.states.failed',\n    defaultMessage: 'Failed'\n  },\n  undecided: {\n    id: 'common.states.undecided',\n    defaultMessage: 'Undecided'\n  },\n  approved: {\n    id: 'common.states.approved',\n    defaultMessage: 'Approved'\n  },\n  denied: {\n    id: 'common.states.denied',\n    defaultMessage: 'Denied'\n  },\n  error: {\n    id: 'common.states.error',\n    defaultMessage: 'Error'\n  },\n  pending: {\n    id: 'common.states.pending',\n    defaultMessage: 'Pending'\n  },\n  skipped: {\n    id: 'common.states.skipped',\n    defaultMessage: 'Skipped'\n  },\n  started: {\n    id: 'common.states.started',\n    defaultMessage: 'Started'\n  },\n  notified: {\n    id: 'common.states.notified',\n    defaultMessage: 'Notified'\n  }\n});\n\nexport const getTranslatableState = (state) =>\n  state.replace(/\\s/g, '').replace(/^./, (char) => char.toLowerCase());\n\nexport default statesMessages;\n","import { toolbarComponentTypes } from '../toolbar-mapper';\n\nconst createOrdersToolbarSchema = () => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      className: 'orders pf-u-p-lg',\n      key: 'orders-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'orders-toolbar-title',\n          title: 'Orders',\n          className: ''\n        }\n      ]\n    }\n  ]\n});\n\nexport default createOrdersToolbarSchema;\n","import { CATALOG_API_BASE } from '../../utilities/constants';\n\nexport const getOrderIcon = ({ orderItems }) =>\n  orderItems[0] &&\n  `${CATALOG_API_BASE}/portfolio_items/${orderItems[0].portfolio_item_id}/icon`;\n\nexport const getOrderPortfolioName = ({ orderItems, id }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem ? portfolioItem.name : `Order ${id}`;\n};\n\nexport const getOrderPlatformId = ({ orderItems }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem\n    ? {\n        orderPlatform: portfolioItem.service_offering_source_ref,\n        orderPortfolio: portfolioItem.portfolio_id\n      }\n    : {};\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from 'styled-components';\n\nconst childrenPropType = PropTypes.oneOfType([\n  PropTypes.node,\n  PropTypes.arrayOf(PropTypes.node)\n]);\n\nexport const Table = ({ children, className, ...props }) => (\n  <table className={clsx('pf-c-table', 'pf-m-grid-md', className)} {...props}>\n    {children}\n  </table>\n);\n\nTable.propTypes = {\n  children: childrenPropType.isRequired,\n  className: PropTypes.string\n};\n\nexport const Tbody = ({ children, ...props }) => (\n  <tbody {...props}>{children}</tbody>\n);\n\nTbody.propTypes = {\n  children: childrenPropType.isRequired\n};\n\nexport const TableCell = styled(({ shrink, children, ...props }) => (\n  <td {...props}>{children}</td>\n))`\n  @media screen and (min-width: 768px) {\n    vertical-align: top !important;\n    width: ${({ shrink }) => (shrink ? '200px !important' : 'initial')};\n    img {\n      object-fit: contain;\n    }\n  }\n`;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport {\n  getOrderIcon,\n  getOrderPortfolioName,\n  getOrderPlatformId\n} from '../../helpers/shared/orders';\nimport CatalogLink from '../common/catalog-link';\nimport {\n  ORDER_ROUTE,\n  ORDER_APPROVAL_ROUTE,\n  ORDER_LIFECYCLE_ROUTE\n} from '../../constants/routes';\nimport { TableCell } from '../../presentational-components/styled-components/table';\nimport { useIntl } from 'react-intl';\nimport statesMessages, {\n  getTranslatableState\n} from '../../messages/states.messages';\nimport ordersMessages from '../../messages/orders.messages';\n\nconst routeMapper = {\n  'Approval Pending': ORDER_APPROVAL_ROUTE,\n  Completed: ORDER_LIFECYCLE_ROUTE\n};\n\nconst OrderItem = memo(\n  ({ item }) => {\n    const { formatMessage } = useIntl();\n    const { orderPlatform, orderPortfolio, orderName } = useSelector(\n      ({\n        portfolioReducer: {\n          portfolioItems: { data }\n        }\n      }) => {\n        const { orderPlatform, orderPortfolio } = getOrderPlatformId(\n          item,\n          data\n        );\n        return {\n          orderPlatform,\n          orderPortfolio,\n          orderName: getOrderPortfolioName(item, data)\n        };\n      }\n    );\n    const orderItem = (item.orderItems[0] && item.orderItems[0]) || {};\n    const searchParams = {\n      order: item.id,\n      'order-item': orderItem.id,\n      'portfolio-item': orderItem.portfolio_item_id,\n      platform: orderPlatform,\n      portfolio: orderPortfolio\n    };\n    const translatableState = getTranslatableState(item.state);\n    return (\n      <tr\n        aria-labelledby={`${item.id}-expand`}\n        className=\"data-list-expand-fix\"\n      >\n        <TableCell shrink className=\"pf-u-pl-xl-on-md\">\n          <CardIcon\n            height={60}\n            src={getOrderIcon(item)}\n            sourceId={orderPlatform}\n          />\n        </TableCell>\n        <TableCell>\n          <TextContent>\n            <Grid hasGutter className=\"pf-u-gg-md\">\n              <GridItem>\n                <Level className=\"flex-no-wrap\">\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.h5}>\n                      <CatalogLink\n                        pathname={ORDER_ROUTE}\n                        searchParams={searchParams}\n                      >\n                        {formatMessage(ordersMessages.compositeTitle, {\n                          name: orderName,\n                          id: item.id\n                        })}\n                      </CatalogLink>\n                    </Text>\n                  </LevelItem>\n                  <LevelItem className=\"flex-item-no-wrap\">\n                    <CatalogLink\n                      pathname={routeMapper[item.state] || ORDER_ROUTE}\n                      searchParams={searchParams}\n                    >\n                      {item.state === 'Failed' && (\n                        <ExclamationCircleIcon className=\"pf-u-mr-sm icon-danger-fill\" />\n                      )}\n                      {formatMessage(statesMessages[translatableState])}\n                    </CatalogLink>\n                  </LevelItem>\n                </Level>\n              </GridItem>\n              <GridItem>\n                <Level>\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n                      {formatMessage(statesMessages.ordered)}\n                      &nbsp;\n                      <DateFormat date={item.created_at} variant=\"relative\" />\n                    </Text>\n                  </LevelItem>\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n                      {formatMessage(ordersMessages.orderedBy, {\n                        owner: item.owner\n                      })}\n                    </Text>\n                  </LevelItem>\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n                      {formatMessage(ordersMessages.lastUpdated)}\n                      &nbsp;\n                      <DateFormat\n                        date={\n                          item.orderItems[0] && item.orderItems[0].updated_at\n                        }\n                        variant=\"relative\"\n                      />\n                    </Text>\n                  </LevelItem>\n                </Level>\n              </GridItem>\n            </Grid>\n          </TextContent>\n        </TableCell>\n      </tr>\n    );\n  },\n  (prevProps, nextProps) => prevProps.id === nextProps.id\n);\n\nOrderItem.propTypes = {\n  item: PropTypes.object.isRequired\n};\n\nexport default OrderItem;\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  Title,\n  Bullseye,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Flex,\n  EmptyStateSecondaryActions,\n  Button\n} from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/PrimaryToolbar';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/components/cjs/EmptyTable';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/TableToolbar';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { fetchOrders } from '../../redux/actions/order-actions';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport OrderItem from './order-item';\nimport AsyncPagination from '../common/async-pagination';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport {\n  Table,\n  Tbody\n} from '../../presentational-components/styled-components/table';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport statesMessages from '../../messages/states.messages';\nimport filteringMessages from '../../messages/filtering.messages';\nimport ordersMessages from '../../messages/orders.messages';\nimport labelMessages from '../../messages/labels.messages';\n\nconst debouncedFilter = asyncFormValidator(\n  (filters, meta = defaultSettings, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(fetchOrders(filters, meta)).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst initialState = {\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false,\n  filterType: 'state',\n  filters: {\n    state: [],\n    owner: ''\n  }\n};\n\nconst changeFilters = (value, type, filters) => ({\n  ...filters,\n  [type]: value\n});\n\nconst ordersListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return {\n        ...state,\n        filters: changeFilters(action.payload, state.filterType, state.filters)\n      };\n    case 'replaceFilterChip':\n      return { ...state, filters: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    case 'setFilterType':\n      return { ...state, filterType: action.payload };\n  }\n\n  return state;\n};\n\nconst OrdersList = () => {\n  const { formatMessage } = useIntl();\n  const viewState = useInitialUriHash();\n  const [\n    { isFetching, isFiltering, filterType, filters },\n    stateDispatch\n  ] = useReducer(ordersListState, {\n    ...initialState,\n    filters: viewState?.orders?.filters || { state: [], owner: '' }\n  });\n  const { data, meta } = useSelector(({ orderReducer }) => orderReducer.orders);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.all([\n      dispatch(fetchOrders(filters, viewState?.orders)),\n      dispatch(fetchPlatforms())\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const handlePagination = (_apiProps, pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    return dispatch(fetchOrders(filters, pagination))\n      .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n      .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      { ...filters, [filterType]: value },\n      { ...meta, offset: 0 },\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  return (\n    <Grid hasGutter>\n      <GridItem>\n        <Section type=\"content\">\n          {!meta.noData && (\n            <PrimaryToolbar\n              activeFiltersConfig={{\n                filters: Object.entries(filters)\n                  .filter(([, value]) => value && value.length > 0)\n                  .map(([key, value]) => ({\n                    category: key,\n                    type: key,\n                    chips: Array.isArray(value)\n                      ? value.map((name) => ({ name }))\n                      : [{ name: value }]\n                  })),\n                onDelete: (_e, [chip], clearAll) => {\n                  if (clearAll) {\n                    stateDispatch({\n                      type: 'replaceFilterChip',\n                      payload: initialState.filters\n                    });\n                    return debouncedFilter(\n                      initialState.filters,\n                      meta,\n                      dispatch,\n                      (isFiltering) =>\n                        stateDispatch({\n                          type: 'setFilteringFlag',\n                          payload: isFiltering\n                        })\n                    );\n                  }\n\n                  const newFilters = { ...filters };\n                  if (chip.type === 'state') {\n                    newFilters[chip.type] = newFilters[chip.type].filter(\n                      (value) => value !== chip.chips[0].name\n                    );\n                  } else {\n                    newFilters[chip.type] = '';\n                  }\n\n                  stateDispatch({\n                    type: 'replaceFilterChip',\n                    payload: newFilters\n                  });\n                  debouncedFilter(newFilters, meta, dispatch, (isFiltering) =>\n                    stateDispatch({\n                      type: 'setFilteringFlag',\n                      payload: isFiltering\n                    })\n                  );\n                }\n              }}\n              filterConfig={{\n                onChange: (_e, value) =>\n                  stateDispatch({ type: 'setFilterType', payload: value }),\n                value: filterType,\n                items: [\n                  {\n                    filterValues: {\n                      items: [\n                        {\n                          value: 'Approval Pending',\n                          label: formatMessage(statesMessages.approvalPending)\n                        },\n                        {\n                          value: 'Canceled',\n                          label: formatMessage(statesMessages.canceled)\n                        },\n                        {\n                          value: 'Completed',\n                          label: formatMessage(statesMessages.completed)\n                        },\n                        {\n                          value: 'Created',\n                          label: formatMessage(labelMessages.created)\n                        },\n                        {\n                          value: 'Failed',\n                          label: formatMessage(statesMessages.failed)\n                        },\n                        {\n                          value: 'Ordered',\n                          label: formatMessage(statesMessages.ordered)\n                        }\n                      ],\n                      value: filters.state,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'State',\n                    value: 'state',\n                    type: 'checkbox'\n                  },\n                  {\n                    filterValues: {\n                      value: filters.owner,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'Owner',\n                    value: 'owner'\n                  }\n                ]\n              }}\n              pagination={\n                <AsyncPagination\n                  isDisabled={isFetching || isFiltering}\n                  apiRequest={handlePagination}\n                  meta={meta}\n                  isCompact\n                />\n              }\n            />\n          )}\n          <Table aria-label=\"order-list\">\n            <Tbody>\n              {isFetching || isFiltering ? (\n                <tr>\n                  <td className=\"pf-u-p-0\">\n                    <ListLoader />\n                  </td>\n                </tr>\n              ) : data.length > 0 ? (\n                data.map((item, index) => (\n                  <OrderItem key={item.id} index={index} item={item} />\n                ))\n              ) : (\n                <tr>\n                  <td>\n                    <EmptyTable>\n                      <Bullseye>\n                        <EmptyState>\n                          <Bullseye>\n                            <EmptyStateIcon icon={SearchIcon} />\n                          </Bullseye>\n                          <Title headingLevel=\"h1\" size=\"lg\">\n                            {meta.noData\n                              ? formatMessage(ordersMessages.noOrdersTitle)\n                              : formatMessage(filteringMessages.noResults)}\n                          </Title>\n                          <EmptyStateBody>\n                            {meta.noData\n                              ? formatMessage(\n                                  ordersMessages.noOrdersDescription\n                                )\n                              : formatMessage(\n                                  filteringMessages.noResultsDescription\n                                )}\n                          </EmptyStateBody>\n\n                          <EmptyStateSecondaryActions>\n                            {!meta.noData && (\n                              <Button\n                                variant=\"link\"\n                                onClick={() => {\n                                  stateDispatch({\n                                    type: 'setFilteringFlag',\n                                    payload: true\n                                  });\n                                  handleFilterItems('');\n                                }}\n                              >\n                                {formatMessage(filteringMessages.clearFilters)}\n                              </Button>\n                            )}\n                          </EmptyStateSecondaryActions>\n                        </EmptyState>\n                      </Bullseye>\n                    </EmptyTable>\n                  </td>\n                </tr>\n              )}\n            </Tbody>\n          </Table>\n          <TableToolbar className=\"pf-u-mr-0\">\n            <div className=\"bottom-pagination-container\">\n              <Flex justifyContent={{ default: 'justifyContentFlexEnd' }}>\n                {meta.count > 0 && (\n                  <AsyncPagination\n                    className=\"pf-u-mt-0\"\n                    isDisabled={isFetching || isFiltering}\n                    apiRequest={handlePagination}\n                    meta={meta}\n                  />\n                )}\n              </Flex>\n            </div>\n          </TableToolbar>\n        </Section>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default OrdersList;\n","import React, { useEffect } from 'react';\nimport { Stack } from '@patternfly/react-core';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createOrdersToolbarSchema from '../../toolbar/schemas/orders-toolbar.schema';\nimport OrdersList from './orders-list';\n\nconst Orders = () => {\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'orders', secondaryNav: true });\n  }, []);\n\n  return (\n    <Stack>\n      <ToolbarRenderer schema={createOrdersToolbarSchema()} />\n      <OrdersList />\n    </Stack>\n  );\n};\n\nexport default Orders;\n"],"sourceRoot":""}