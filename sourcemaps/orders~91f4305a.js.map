{"version":3,"sources":["webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/messages/filtering.messages.js","webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/toolbar/toolbar-mapper.js","webpack:///./src/messages/orders.messages.js","webpack:///./src/toolbar/toolbar-renderer.js","webpack:///./src/presentational-components/shared/app-tabs.js","webpack:///./src/messages/states.messages.js","webpack:///./src/helpers/order/new-order-helper.ts","webpack:///./src/helpers/order/order-helper.js","webpack:///./src/presentational-components/order/order-notification.js","webpack:///./src/redux/actions/order-actions.js","webpack:///./src/smart-components/order/order-status-mapper.js","webpack:///./src/toolbar/schemas/orders-toolbar.schema.js","webpack:///./src/smart-components/order/order-item.js","webpack:///./src/helpers/shared/orders.js","webpack:///./src/smart-components/order/orders-list.js","webpack:///./src/smart-components/order/orders.js"],"names":["AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","options","getNewPage","request","debouncePromise","direction","propTypes","PropTypes","shape","isRequired","func","any","string","bool","defaultProps","filteringMessages","defineMessages","require","noItems","id","defaultMessage","filterByProduct","noResults","noResultsDescription","clearFilters","noProducts","noRecords","filterByTitle","noResultsFound","noResult","unknown","FilterInputGroup","styled","div","FilterInput","TextInput","FilterIconsContainer","span","StyledCloseIcon","CloseIcon","StyledSearchIcon","SearchIcon","FilterToolbarItem","searchValue","onFilterChange","placeholder","isClearable","rest","ToolbarItem","value","type","onChange","aria-label","width","height","onClick","ToolbarButton","title","Button","AppToolbar","children","ToolbarContent","noWrap","oneOfType","node","arrayOf","toolbarMapper","TopToolbar","TopToolbarTitle","Toolbar","ToolbarGroup","StyledToolbarGroup","Link","CatalogLink","Level","LevelItem","AppTabs","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","TOOLBAR","TOOLBAR_ITEM","TOOLBAR_GROUP","FILTER_TOOLBAR_ITEM","LINK","BUTTON","LEVEL","LEVEL_ITEM","TABS","ordersMessages","orderedBy","orderedByLabel","lastUpdated","compositeTitle","detailTitle","orderSuccess","noOrdersTitle","noOrdersDescription","noApprovalRequests","creatingApprovalRequest","approvalTitle","approvalDetail","approvalCreated","approvalReason","approvalCompleted","orderDetails","menuApproval","menuLifecycle","menuSteps","objectsNotFound","orderID","orderParameters","orderProgressMessages","lifecycleLink","cancelOrder","keepOrder","cancelDescription","backToOrders","orderDate","approvalParameters","activity","ToolbarContext","createContext","Component","component","Consumer","componentMapper","C","element","render","fields","hidden","map","key","field","ToolbarRenderer","schema","Provider","array","object","tabItems","push","useEnhancedHistory","useLocation","pathname","search","activeTab","find","name","includes","activeKey","eventKey","onSelect","tabIndex","item","disabled","statesMessages","ordered","approvalPending","canceled","completed","failed","undecided","approved","denied","error","pending","skipped","started","notified","getTranslatableState","state","replace","char","toLowerCase","created","labelMessages","axiosInstance","orderApi","getOrderApi","portfolioItemApi","getOrderItemApi","getPortfolioItemApi","getAxiosInstance","graphqlInstance","getGraphqlInstance","getServicePlans","portfolioItemId","listServicePlans","sendSubmitOrder","a","service_parameters","providerControlParameters","parameters","createOrder","order","orderItem","provider_control_parameters","addToOrder","orderItemResponse","submitOrder","then","getOrderItems","orderIds","get","CATALOG_API_BASE","orderId","join","getOrderPortfolioItems","itemIds","itemId","getOrders","filter","pagination","defaultSettings","orders","data","orderItems","portfolio_item_id","portfolioItems","order_id","getOrderDetail","params","Object","values","some","status","from","location","notFound","portfolioItem","parallerRequests","service_offering_source_ref","catch","portfolio_id","Promise","all","platform","progressMessages","portfolio","detailPromises","catalogHistory","SOURCES_API_BASE","getApprovalRequests","orderItemId","promises","requestId","parent_id","approval_request_ref","post","APPROVAL_API_BASE","query","requests","actions","updated","length","pop","created_at","undefined","OrderNotification","dispatch","portfolioId","platformId","useFormatMessage","formatMessage","link","chunks","clearNotifications","to","ORDER_ROUTE","fetchServicePlans","ActionTypes","payload","OrderHelper","addNotification","variant","description","dismissable","getState","orderDetail","orderReducer","approvalRequest","fetchOrders","filters","queryFilter","entries","Array","isArray","sortBy","sortDirection","storeState","stateKey","fetchOrderDetails","fetchApprovalRequests","err","orderStatusMapper","Completed","icon","color","Ordered","Failed","Canceled","Created","createOrdersToolbarSchema","createOrderItem","orderPlatform","orderPortfolio","searchParams","translatableState","TableText","src","sourceId","orderName","owner","Text","TextVariants","small","DateFormat","date","updated_at","Label","debouncedFilter","asyncFormValidator","filteringCallback","initialState","isOpen","isFetching","isFiltering","filterType","index","SortByDirection","desc","ordersListState","action","sortIndexMapper","0","3","4","6","OrdersList","useDispatch","viewState","useInitialUriHash","useReducer","sortIndex","stateDispatch","useSelector","columns","product","column","transforms","sortable","portfolioReducer","rows","getOrderPlatformId","getOrderPortfolioName","useEffect","fetchPlatforms","handlePagination","_apiProps","handleFilterItems","handleClearAll","Grid","hasGutter","GridItem","Section","noData","PrimaryToolbar","activeFiltersConfig","category","chips","onDelete","_e","clearAll","chip","newFilters","filterConfig","items","filterValues","label","isDisabled","Table","onSort","cells","EmptyTable","Bullseye","EmptyState","EmptyStateIcon","Title","headingLevel","size","EmptyStateBody","EmptyStateSecondaryActions","TableToolbar","Flex","justifyContent","default","Orders","insights","chrome","appNavClick","secondaryNav","Stack"],"mappings":"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","file":"js/orders~91f4305a.fe02fcae0c5144ef4ff9.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","const { defineMessages } = require('react-intl');\n\nconst filteringMessages = defineMessages({\n  noItems: {\n    id: 'common.filtering.noItems',\n    defaultMessage: 'No items found'\n  },\n  filterByProduct: {\n    id: 'common.filtering.filterByProduct',\n    defaultMessage: 'Filter by product'\n  },\n  noResults: {\n    id: 'common.filtering.noResults',\n    defaultMessage: 'No results found'\n  },\n  noResultsDescription: {\n    id: 'common.filtering.noResultsDescription',\n    defaultMessage:\n      'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n  },\n  clearFilters: {\n    id: 'common.filtering.clear-filters',\n    defaultMessage: 'Clear all filters'\n  },\n  noProducts: {\n    id: 'common.filtering.no-products',\n    defaultMessage: 'No products yet'\n  },\n  noRecords: {\n    id: 'commonMessages.noRecords',\n    defaultMessage: 'No records'\n  },\n  filterByTitle: {\n    id: 'tableToolbar.filterByTitle',\n    defaultMessage: 'Filter by {title}'\n  },\n  noResultsFound: {\n    id: 'tableToolbar.noResultsFound',\n    defaultMessage: 'No results found'\n  },\n  noResult: {\n    id: 'tableToolbar.noResult',\n    defaultMessage: 'No {results}'\n  },\n  unknown: {\n    id: 'commonMessages.unknown',\n    defaultMessage: 'Unknown'\n  }\n});\n\nexport default filteringMessages;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterInputGroup = styled.div`\n  position: relative;\n  width: 300px;\n  height: 36px;\n`;\n\nconst FilterInput = styled(TextInput)`\n  position: absolute;\n  width: 300px;\n  padding-right: 34px;\n  background: transparent;\n`;\n\nconst FilterIconsContainer = styled.span`\n  position: absolute;\n  right: 8px;\n  top: 8px;\n`;\n\nconst StyledCloseIcon = styled(CloseIcon)`\n  z-index: 1000;\n  fill: #72767b;\n  :hover {\n    fill: var(--pf-global--Color--100);\n    cursor: pointer;\n  }\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  z-index: 1000;\n  fill: #72767b;\n`;\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable,\n  ...rest\n}) => (\n  <ToolbarItem>\n    <FilterInputGroup>\n      <FilterInput\n        id=\"toolbar-filter\"\n        placeholder={placeholder}\n        value={searchValue}\n        type=\"text\"\n        onChange={onFilterChange}\n        aria-label={placeholder}\n        {...rest}\n      />\n      <FilterIconsContainer>\n        {(isClearable && searchValue && (\n          <StyledCloseIcon\n            width=\"16\"\n            height=\"16\"\n            onClick={() => onFilterChange('')}\n          />\n        )) || <StyledSearchIcon />}\n      </FilterIconsContainer>\n    </FilterInputGroup>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Level,\n  LevelItem,\n  ToolbarItem,\n  ToolbarContent\n} from '@patternfly/react-core';\n\nimport FilterToolbarItem from '../presentational-components/shared/filter-toolbar-item';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../presentational-components/shared/top-toolbar';\nimport AppTabs from '../presentational-components/shared/app-tabs';\nimport CatalogLink from '../smart-components/common/catalog-link';\nimport {\n  StyledToolbar,\n  StyledToolbarGroup\n} from '../presentational-components/styled-components/toolbars';\n\nconst ToolbarButton = ({ title, ...props }) => (\n  <Button {...props}>{title}</Button>\n);\n\nToolbarButton.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst AppToolbar = ({ children, ...props }) => (\n  <StyledToolbar className={'pf-u-p-0'} {...props}>\n    <ToolbarContent className=\"pf-u-pl-0\">{children}</ToolbarContent>\n  </StyledToolbar>\n);\n\nAppToolbar.propTypes = {\n  noWrap: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nconst toolbarMapper = {\n  TopToolbar,\n  TopToolbarTitle,\n  Toolbar: AppToolbar,\n  ToolbarGroup: StyledToolbarGroup,\n  ToolbarItem,\n  FilterToolbarItem,\n  Link: CatalogLink,\n  Level,\n  LevelItem,\n  Button: ToolbarButton,\n  AppTabs\n};\n\nexport const toolbarComponentTypes = {\n  TOP_TOOLBAR: 'TopToolbar',\n  TOP_TOOLBAR_TITLE: 'TopToolbarTitle',\n  TOOLBAR: 'Toolbar',\n  TOOLBAR_ITEM: 'ToolbarItem',\n  TOOLBAR_GROUP: 'ToolbarGroup',\n  FILTER_TOOLBAR_ITEM: 'FilterToolbarItem',\n  LINK: 'Link',\n  BUTTON: 'Button',\n  LEVEL: 'Level',\n  LEVEL_ITEM: 'LevelItem',\n  TABS: 'AppTabs'\n};\n\nexport default toolbarMapper;\n","const { defineMessages } = require('react-intl');\n\nconst ordersMessages = defineMessages({\n  orderedBy: {\n    id: 'orders.common.orderedBy',\n    defaultMessage: 'Ordered by {owner}'\n  },\n  orderedByLabel: {\n    id: 'orders.approval.orderedBy',\n    defaultMessage: 'Ordered by'\n  },\n  lastUpdated: {\n    id: 'orders.common.lastUpdated',\n    defaultMessage: 'Last updated'\n  },\n  compositeTitle: {\n    id: 'orders.common.compositeTitle',\n    defaultMessage: '{name} - Order # {id}'\n  },\n  detailTitle: {\n    id: 'orders.detail.title',\n    defaultMessage: 'Order ID {id}'\n  },\n  orderSuccess: {\n    id: 'orders.notification.success',\n    defaultMessage:\n      'You can track the progress of Order # {id} in your <link>Orders</link> page.'\n  },\n  noOrdersTitle: {\n    id: 'orders.list.empty.title',\n    defaultMessage: 'No orders'\n  },\n  noOrdersDescription: {\n    id: 'orders.list.empty.description',\n    defaultMessage: 'No orders have been created.'\n  },\n  noApprovalRequests: {\n    id: 'orders.approval.no-requests',\n    defaultMessage:\n      'We were unable to find any approval requests for this order.'\n  },\n  creatingApprovalRequest: {\n    id: 'orders.approval.creating',\n    defaultMessage: 'Creating approval request'\n  },\n  approvalTitle: {\n    id: 'orders.approval.title',\n    defaultMessage: 'Summary'\n  },\n  approvalDetail: {\n    id: 'orders.approval.view-detail',\n    // eslint-disable-next-line quotes\n    defaultMessage: \"View this order's approval request details\"\n  },\n  approvalCreated: {\n    id: 'orders.approval.details.created',\n    defaultMessage: 'Request created'\n  },\n  approvalReason: {\n    id: 'orders.approval.details.reason',\n    defaultMessage: 'Approval reason'\n  },\n  approvalCompleted: {\n    id: 'orders.approval.details.completed',\n    defaultMessage: 'Completed at'\n  },\n  orderDetails: {\n    id: 'orders.common.details',\n    defaultMessage: 'Order details'\n  },\n  menuApproval: {\n    id: 'orders.menu.approval',\n    defaultMessage: 'Approval'\n  },\n  menuLifecycle: {\n    id: 'orders.menu.lifecycle',\n    defaultMessage: 'Lifecycle'\n  },\n  menuSteps: {\n    id: 'orders.menu.steps',\n    defaultMessage: 'Order steps'\n  },\n  objectsNotFound: {\n    id: 'order.detail.not-found',\n    defaultMessage:\n      'The {objects} for this order {count, plural, one {is} other {are}} not available'\n  },\n  orderID: {\n    id: 'orders.order.detail.ID',\n    defaultMessage: 'Order ID'\n  },\n  orderParameters: {\n    id: 'orders.order.detail.parameters',\n    defaultMessage: 'Order parameters'\n  },\n  orderProgressMessages: {\n    id: 'orders.order.detail.messages',\n    defaultMessage: 'Progress messages'\n  },\n  lifecycleLink: {\n    id: 'orders.order.lifecicle.link',\n    defaultMessage: 'Manage product'\n  },\n  cancelOrder: {\n    id: 'orders.actions.cancel',\n    defaultMessage: 'Cancel order'\n  },\n  keepOrder: {\n    id: 'orders.actions.keep',\n    defaultMessage: 'Keep order'\n  },\n  cancelDescription: {\n    id: 'orders.cancel.description',\n    defaultMessage: 'Are you sure you want to cancel {name}?'\n  },\n  backToOrders: {\n    id: 'orders.toolbar.backLink',\n    defaultMessage: 'Back to orders'\n  },\n  orderDate: {\n    id: 'orders.approval.order-date',\n    defaultMessage: 'Order date'\n  },\n  approvalParameters: {\n    id: 'orders.approval.parameters',\n    defaultMessage: 'Parameters'\n  },\n  activity: {\n    id: 'orders.approval.activity',\n    defaultMessage: 'Activity'\n  }\n});\n\nexport default ordersMessages;\n","import React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport toolbarMapper from './toolbar-mapper';\n\nconst ToolbarContext = createContext();\n\nconst Component = ({ component, ...props }) => (\n  <ToolbarContext.Consumer>\n    {({ componentMapper }) => {\n      const C =\n        typeof component === 'string' ? componentMapper[component] : component;\n      return <C {...props} />;\n    }}\n  </ToolbarContext.Consumer>\n);\n\nComponent.propTypes = {\n  component: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.element\n  ]).isRequired\n};\n\n/**\n * Render loop that renders all toolbar components based on its type\n * @param {Array} fields list of React components to be rendered\n */\nconst render = (fields) =>\n  fields.hidden\n    ? null\n    : fields.map(({ hidden, fields, key, ...field }) =>\n        hidden ? null : fields ? (\n          <Component key={key} {...field}>\n            {render(fields)}\n          </Component>\n        ) : (\n          <Component key={key} {...field} />\n        )\n      );\n\nconst ToolbarRenderer = ({ schema, componentMapper }) => (\n  <ToolbarContext.Provider value={{ render, componentMapper }}>\n    {render(schema.fields)}\n  </ToolbarContext.Provider>\n);\n\nToolbarRenderer.propTypes = {\n  schema: PropTypes.shape({\n    fields: PropTypes.array.isRequired\n  }).isRequired,\n  componentMapper: PropTypes.object\n};\n\nToolbarRenderer.defaultProps = {\n  componentMapper: toolbarMapper\n};\n\nexport default ToolbarRenderer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation } from 'react-router-dom';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nconst AppTabs = ({ tabItems }) => {\n  const { push } = useEnhancedHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) =>\n    push({ pathname: tabItems[tabIndex].name, search });\n\n  return (\n    <Tabs\n      activeKey={activeTab ? activeTab.eventKey : 0}\n      onSelect={handleTabClick}\n    >\n      {tabItems.map((item) => (\n        <Tab\n          title={item.title}\n          key={item.eventKey}\n          eventKey={item.eventKey}\n          name={item.name}\n          disabled={item.disabled}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default AppTabs;\n","import labelMessages from './labels.messages';\n\nconst { defineMessages } = require('react-intl');\n\nconst statesMessages = defineMessages({\n  title: {\n    id: 'common.states.title',\n    defaultMessage: 'State'\n  },\n  ordered: {\n    id: 'common.states.ordered',\n    defaultMessage: 'Ordered'\n  },\n  approvalPending: {\n    id: 'common.states.approval-pending',\n    defaultMessage: 'Approval Pending'\n  },\n  canceled: {\n    id: 'common.states.canceled',\n    defaultMessage: 'Canceled'\n  },\n  completed: {\n    id: 'common.states.completed',\n    defaultMessage: 'Completed'\n  },\n  failed: {\n    id: 'common.states.failed',\n    defaultMessage: 'Failed'\n  },\n  undecided: {\n    id: 'common.states.undecided',\n    defaultMessage: 'Undecided'\n  },\n  approved: {\n    id: 'common.states.approved',\n    defaultMessage: 'Approved'\n  },\n  denied: {\n    id: 'common.states.denied',\n    defaultMessage: 'Denied'\n  },\n  error: {\n    id: 'common.states.error',\n    defaultMessage: 'Error'\n  },\n  pending: {\n    id: 'common.states.pending',\n    defaultMessage: 'Pending'\n  },\n  skipped: {\n    id: 'common.states.skipped',\n    defaultMessage: 'Skipped'\n  },\n  started: {\n    id: 'common.states.started',\n    defaultMessage: 'Started'\n  },\n  notified: {\n    id: 'common.states.notified',\n    defaultMessage: 'Notified'\n  }\n});\n\nexport const getTranslatableState = (state) =>\n  state.replace(/\\s/g, '').replace(/^./, (char) => char.toLowerCase());\n\n/**\n * We must include the created state so the dynamic data from DB can look for these messages in one place\n * The created message is shared among other components and is just a state message\n */\nexport default { ...statesMessages, created: labelMessages.created };\n","// TODO migrate whole order-helper.js to TS\nimport catalogHistory from '../../routing/catalog-history';\nimport {\n  Order,\n  OrderItem,\n  PortfolioItem,\n  Portfolio,\n  ProgressMessage\n} from '@redhat-cloud-services/catalog-client';\nimport { Source } from '@redhat-cloud-services/sources-client';\nimport { getAxiosInstance } from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nconst axiosInstance = getAxiosInstance();\n\ninterface ObjectNotFound {\n  object: 'Order item' | 'Product' | 'Portfolio' | 'Messages' | 'Platform';\n  notFound: boolean;\n}\n\nexport type OrderDetailPayload = [\n  Order,\n  OrderItem | ObjectNotFound,\n  PortfolioItem | ObjectNotFound,\n  Source | ObjectNotFound,\n  ProgressMessage | ObjectNotFound,\n  Portfolio | ObjectNotFound\n];\n\nexport const fetchOrderDetailSequence = async (\n  orderId: string\n): Promise<OrderDetailPayload> => {\n  let order: Order;\n  try {\n    order = await axiosInstance.get(`${CATALOG_API_BASE}/orders/${orderId}`);\n  } catch (error) {\n    order = {};\n    if (error.status === 404 || error.status === 400) {\n      catalogHistory.replace({\n        pathname: '/404',\n        state: { from: catalogHistory.location }\n      });\n    } else {\n      throw error;\n    }\n  }\n\n  let orderItem: OrderItem | ObjectNotFound = {\n    object: 'Order item',\n    notFound: true\n  };\n  try {\n    const orderItems = await axiosInstance.get(\n      `${CATALOG_API_BASE}/order_items?order_id=${order.id}`\n    );\n    orderItem = orderItems.data[0];\n  } catch (_error) {\n    // no handler\n  }\n\n  let portfolioItem: PortfolioItem | ObjectNotFound = {\n    object: 'Product',\n    notFound: true\n  };\n\n  try {\n    portfolioItem = await axiosInstance.get(\n      `${CATALOG_API_BASE}/portfolio_items/${\n        (orderItem as OrderItem).portfolio_item_id\n      }`\n    );\n  } catch (_error) {\n    // nohandler\n  }\n\n  const parallerRequests = [\n    axiosInstance\n      .get(\n        `${SOURCES_API_BASE}/sources/${\n          (portfolioItem as PortfolioItem).service_offering_source_ref\n        }`\n      )\n      .catch(() => ({ object: 'Platform', notFound: true })),\n\n    axiosInstance\n      .get(\n        `${CATALOG_API_BASE}/order_items/${\n          (orderItem as OrderItem).id\n        }/progress_messages`\n      )\n      .catch(() => ({ object: 'Messages', notFound: true })),\n    axiosInstance\n      .get(\n        `${CATALOG_API_BASE}/portfolios/${\n          (portfolioItem as PortfolioItem).portfolio_id\n        }`\n      )\n      .catch(() => ({ object: 'Portfolio', notFound: true }))\n  ];\n\n  return Promise.all(\n    parallerRequests\n  ).then(([platform, progressMessages, portfolio]) => [\n    order,\n    orderItem,\n    portfolioItem,\n    platform as Source | ObjectNotFound,\n    progressMessages as ProgressMessage | ObjectNotFound,\n    portfolio as Portfolio | ObjectNotFound\n  ]);\n};\n","/* eslint camelcase: 0 */\nimport {\n  getAxiosInstance,\n  getPortfolioItemApi,\n  getOrderApi,\n  getOrderItemApi,\n  getGraphqlInstance\n} from '../shared/user-login';\nimport {\n  CATALOG_API_BASE,\n  SOURCES_API_BASE,\n  APPROVAL_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nimport catalogHistory from '../../routing/catalog-history';\nimport { fetchOrderDetailSequence } from './new-order-helper';\n\nconst orderApi = getOrderApi();\nconst orderItemApi = getOrderItemApi();\nconst portfolioItemApi = getPortfolioItemApi();\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nexport function getServicePlans(portfolioItemId) {\n  return portfolioItemApi.listServicePlans(portfolioItemId);\n}\n\nexport async function sendSubmitOrder({\n  service_parameters: { providerControlParameters, ...service_parameters },\n  ...parameters\n}) {\n  let order = await orderApi.createOrder();\n  let orderItem = {};\n  orderItem.count = 1;\n  orderItem = {\n    ...orderItem,\n    ...parameters,\n    service_parameters,\n    provider_control_parameters: providerControlParameters || {}\n  };\n  const orderItemResponse = await orderApi.addToOrder(order.id, orderItem);\n  return orderApi\n    .submitOrder(order.id)\n    .then((order) => ({ ...order, orderItem: orderItemResponse }));\n}\n\nexport function cancelOrder(orderId) {\n  return orderApi.cancelOrder(orderId);\n}\n\nconst getOrderItems = (orderIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items?${orderIds\n      .map((orderId) => `filter[order_id][]=${orderId}`)\n      .join('&')}`\n  );\n\nconst getOrderPortfolioItems = (itemIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items?${itemIds\n      .map((itemId) => `filter[id][]=${itemId}`)\n      .join('&')}`\n  );\n\nexport const getOrders = (filter = '', pagination = defaultSettings) =>\n  axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/orders?${filter}&limit=${pagination.limit}&offset=${pagination.offset}`\n    ) // eslint-disable-line max-len\n    .then((orders) =>\n      getOrderItems(orders.data.map(({ id }) => id)).then((orderItems) =>\n        getOrderPortfolioItems(\n          orderItems.data.map(({ portfolio_item_id }) => portfolio_item_id)\n        ).then((portfolioItems) => {\n          return {\n            portfolioItems,\n            ...orders,\n            data: orders.data.map((order) => ({\n              ...order,\n              orderItems: orderItems.data.filter(\n                ({ order_id }) => order_id === order.id\n              )\n            }))\n          };\n        })\n      )\n    );\n\nexport function getOrderApprovalRequests(orderItemId) {\n  return orderItemApi.listApprovalRequests(orderItemId);\n}\n\nexport const getOrderDetail = (params) => {\n  if (Object.values(params).some((value) => !value)) {\n    /**\n     * Try to fetch data sequentially if any of the parameters is unknow\n     */\n    return fetchOrderDetailSequence(params.order);\n  }\n\n  let detailPromises = [\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/orders/${params.order}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return catalogHistory.replace({\n            pathname: '/404',\n            state: { from: catalogHistory.location }\n          });\n        }\n\n        throw error;\n      }),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/order_items/${params['order-item']}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Order item',\n            notFound: true\n          };\n        }\n\n        throw error;\n      }),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/portfolio_items/${params['portfolio-item']}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Product',\n            notFound: true\n          };\n        }\n\n        throw error;\n      })\n  ];\n\n  detailPromises.push(\n    params.platform && params.platform !== 'undefined'\n      ? axiosInstance\n          .get(`${SOURCES_API_BASE}/sources/${params.platform}`)\n          .catch((error) => {\n            if (error.status === 404 || error.status === 400) {\n              return {\n                object: 'Platform',\n                notFound: true\n              };\n            }\n\n            throw error;\n          })\n      : {\n          object: 'Platform',\n          notFound: true\n        }\n  );\n\n  detailPromises.push(\n    axiosInstance\n      .get(\n        `${CATALOG_API_BASE}/order_items/${params['order-item']}/progress_messages`\n      )\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {};\n        }\n\n        throw error;\n      })\n  );\n\n  detailPromises.push(\n    params.portfolio && params.portfolio !== 'undefined'\n      ? axiosInstance\n          .get(`${CATALOG_API_BASE}/portfolios/${params.portfolio}`)\n          .catch((error) => {\n            if (error.status === 404 || error.status === 400) {\n              return {\n                object: 'Portfolio',\n                notFound: true\n              };\n            }\n\n            throw error;\n          })\n      : { object: 'Portfolio', notFound: true }\n  );\n\n  return Promise.all(detailPromises);\n};\n\nconst APPROVAL_REQUESTER_PERSONA = 'approval/requester';\nconst requestTranscriptQuery = (parent_id) => `query {\n  requests(id: \"${parent_id}\") {\n    group_name\n    state\n    actions {\n      created_at\n    }\n  }\n}`;\nconst fetchRequestTranscript = (requestId) =>\n  graphqlInstance\n    .post(\n      `${APPROVAL_API_BASE}/graphql`,\n      { query: requestTranscriptQuery(requestId) },\n      { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA }\n    )\n    .then(({ data: { requests } }) => requests);\n\nexport const getApprovalRequests = (orderItemId) =>\n  axiosInstance\n    .get(`${CATALOG_API_BASE}/order_items/${orderItemId}/approval_requests`)\n    .then(({ data }) => {\n      const promises = data.map(({ approval_request_ref }) =>\n        fetchRequestTranscript(approval_request_ref)\n      );\n      return Promise.all(promises).then((requests) => {\n        const data = requests?.[0]?.map(({ actions, ...request }) => ({\n          ...request,\n          updated: actions?.length > 0 ? actions.pop().created_at : undefined\n        }));\n        return { data: data || [] };\n      });\n    });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport { ORDER_ROUTE } from '../../constants/routes';\nimport ordersMessages from '../../messages/orders.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst OrderNotification = ({\n  id,\n  dispatch,\n  portfolioItemId,\n  portfolioId,\n  platformId,\n  orderItemId\n}) => {\n  const formatMessage = useFormatMessage();\n  return formatMessage(ordersMessages.orderSuccess, {\n    id,\n    // eslint-disable-next-line react/display-name\n    link: (chunks) => (\n      <Link\n        onClick={() => dispatch(clearNotifications())}\n        to={{\n          pathname: ORDER_ROUTE,\n          search: `?order=${id}&order-item=${orderItemId}&portfolio-item=${portfolioItemId}&platform=${platformId}&portfolio=${portfolioId}`\n        }}\n      >\n        {chunks}\n      </Link>\n    )\n  });\n};\n\nOrderNotification.propTypes = {\n  id: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  portfolioItemId: PropTypes.string.isRequired,\n  portfolioId: PropTypes.string.isRequired,\n  platformId: PropTypes.string.isRequired,\n  orderItemId: PropTypes.string.isRequired\n};\n\nexport default OrderNotification;\n","import React from 'react';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\n\nimport * as ActionTypes from '../action-types';\nimport * as OrderHelper from '../../helpers/order/order-helper';\nimport OrderNotification from '../../presentational-components/order/order-notification';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const fetchServicePlans = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_SERVICE_PLANS,\n  payload: OrderHelper.getServicePlans(portfolioItemId)\n});\n\nexport const updateServiceData = (data) => ({\n  type: ActionTypes.UPDATE_SERVICE_DATA,\n  payload: { serviceData: data }\n});\n\nexport const setSelectedPlan = (data) => ({\n  type: ActionTypes.SET_SELECTED_PLAN,\n  payload: data\n});\n\nexport const sendSubmitOrder = (apiProps, portfolioItem) => (dispatch) =>\n  dispatch({\n    type: ActionTypes.SUBMIT_SERVICE_ORDER,\n    payload: OrderHelper.sendSubmitOrder(apiProps).then(({ id, orderItem }) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been accepted successfully',\n          description: (\n            <OrderNotification\n              id={id}\n              dispatch={dispatch}\n              portfolioItemId={portfolioItem.id}\n              portfolioId={portfolioItem.portfolio_id}\n              platformId={portfolioItem.service_offering_source_ref}\n              orderItemId={orderItem.id}\n            />\n          ),\n          dismissable: true\n        })\n      )\n    )\n  });\n\nexport const cancelOrder = (orderId) => (dispatch, getState) => {\n  dispatch({ type: `${ActionTypes.CANCEL_ORDER}_PENDING` });\n  const {\n    orderReducer: { orderDetail }\n  } = getState();\n  return OrderHelper.cancelOrder(orderId)\n    .then(() => {\n      orderDetail.order.state = 'Canceled';\n      if (\n        orderDetail.approvalRequest &&\n        orderDetail.approvalRequest.length > 0\n      ) {\n        orderDetail.approvalRequest[0].state = 'canceled';\n      }\n\n      dispatch({\n        type: ActionTypes.SET_ORDER_DETAIL,\n        payload: { ...orderDetail }\n      });\n      return orderDetail;\n    })\n    .then((orderDetail) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been canceled successfully',\n          description: `Order ${`Order #${orderDetail.order.id}`} was canceled.`,\n          dismissable: true\n        })\n      )\n    )\n    .then(() => dispatch({ type: `${ActionTypes.CANCEL_ORDER}_FULFILLED` }))\n    .catch((error) => {\n      dispatch({\n        type: `${ActionTypes.CANCEL_ORDER}_REJECTED`,\n        payload: error\n      });\n    });\n};\n\nexport const fetchOrders = (filters, pagination = defaultSettings) => (\n  dispatch\n) => {\n  let queryFilter = Object.entries(filters)\n    .filter(([, value]) => value && value.length > 0)\n    .map(([key, value]) =>\n      Array.isArray(value)\n        ? value.map((value) => `filter[${key}][]=${value}`).join('&')\n        : `filter[${key}][contains_i]=${value}`\n    )\n    .join('&');\n  if (pagination.sortBy) {\n    queryFilter = `${queryFilter}&sort_by=${\n      pagination.sortBy\n    }:${pagination.sortDirection || 'desc'}`;\n  }\n\n  dispatch({ type: `${ActionTypes.FETCH_ORDERS}_PENDING` });\n  return OrderHelper.getOrders(queryFilter, pagination)\n    .then(({ portfolioItems, ...orders }) => {\n      dispatch({\n        type: ActionTypes.SET_PORTFOLIO_ITEMS,\n        payload: portfolioItems\n      });\n      return dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_FULFILLED`,\n        meta: {\n          ...pagination,\n          filter: queryFilter,\n          filters,\n          storeState: true,\n          stateKey: 'orders'\n        },\n        payload: orders\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchOrderDetails = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SET_ORDER_DETAIL}_PENDING` });\n  return OrderHelper.getOrderDetail(params)\n    .then(\n      ([\n        order,\n        orderItem,\n        portfolioItem,\n        platform,\n        progressMessages,\n        portfolio,\n        approvalRequest\n      ]) =>\n        dispatch({\n          type: `${ActionTypes.SET_ORDER_DETAIL}_FULFILLED`,\n          payload: {\n            order,\n            orderItem,\n            portfolioItem,\n            platform,\n            progressMessages,\n            portfolio,\n            approvalRequest\n          }\n        })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.SET_ORDER_DETAIL}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchApprovalRequests = (orderItemId) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_PENDING` });\n  return OrderHelper.getApprovalRequests(orderItemId)\n    .then((data) => {\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_FULFILLED`,\n        payload: data\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n","import React from 'react';\nimport {\n  ExclamationCircleIcon,\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n  ClockIcon,\n  PlusCircleIcon\n} from '@patternfly/react-icons';\n\nconst orderStatusMapper = {\n  Completed: { icon: <CheckCircleIcon />, color: 'green' },\n  'Approval Pending': {\n    icon: <ClockIcon />,\n    color: 'blue'\n  },\n  Ordered: { icon: <PlusCircleIcon />, color: 'grey' },\n  Failed: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Canceled: { icon: <ExclamationTriangleIcon />, color: 'orange' },\n  Created: { icon: <PlusCircleIcon />, color: 'grey' }\n};\n\nexport default orderStatusMapper;\n","import { toolbarComponentTypes } from '../toolbar-mapper';\n\nconst createOrdersToolbarSchema = () => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      className: 'orders pf-u-p-lg',\n      key: 'orders-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'orders-toolbar-title',\n          title: 'Orders',\n          className: ''\n        }\n      ]\n    }\n  ]\n});\n\nexport default createOrdersToolbarSchema;\n","import React, { Fragment } from 'react';\nimport { Label, Text, TextVariants } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\n\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport { getOrderIcon } from '../../helpers/shared/orders';\nimport CatalogLink from '../common/catalog-link';\nimport { ORDER_ROUTE } from '../../constants/routes';\nimport statesMessages, {\n  getTranslatableState\n} from '../../messages/states.messages';\n\nimport { TableText } from '@patternfly/react-table';\nimport orderStatusMapper from './order-status-mapper';\n\n/**\n * Create order row definition for react tabular table\n * @param {Object} item order object\n * @param {Object} orderPlatform order source data\n * @param {Object} orderPortfolio order portfolio data\n * @param {function} formatMessage translation function\n */\nconst createOrderItem = (\n  item,\n  orderPlatform,\n  orderPortfolio,\n  formatMessage\n) => {\n  const orderItem = (item.orderItems[0] && item.orderItems[0]) || {};\n  const searchParams = {\n    order: item.id,\n    ...(orderItem.id ? { 'order-item': orderItem.id } : {}),\n    ...(orderItem.portfolio_item_id\n      ? { 'portfolio-item': orderItem.portfolio_item_id }\n      : {}),\n    ...(orderPlatform ? { platform: orderPlatform } : {}),\n    ...(orderPortfolio ? { portfolio: orderPortfolio } : {})\n  };\n  const translatableState = getTranslatableState(item.state);\n  return [\n    {\n      title: (\n        <TableText>\n          <CatalogLink pathname={ORDER_ROUTE} searchParams={searchParams}>\n            {item.id}\n          </CatalogLink>\n        </TableText>\n      )\n    },\n    {\n      title: (\n        <Fragment>\n          <CardIcon\n            height={60}\n            src={getOrderIcon(item)}\n            sourceId={orderPlatform}\n          />\n        </Fragment>\n      )\n    },\n    item.orderName,\n    item.owner,\n    {\n      title: (\n        <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n          <DateFormat date={item.created_at} variant=\"relative\" />\n        </Text>\n      )\n    },\n    {\n      title: (\n        <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n          <DateFormat\n            date={item.orderItems[0] && item.orderItems[0].updated_at}\n            variant=\"relative\"\n          />\n        </Text>\n      )\n    },\n    {\n      title: (\n        <TableText>\n          <Label {...orderStatusMapper[item.state]} variant=\"outline\">\n            {formatMessage(statesMessages[translatableState])}\n          </Label>\n        </TableText>\n      )\n    }\n  ];\n};\n\nexport default createOrderItem;\n","import { CATALOG_API_BASE } from '../../utilities/constants';\n\nexport const getOrderIcon = ({ orderItems }) =>\n  orderItems[0] &&\n  `${CATALOG_API_BASE}/portfolio_items/${orderItems[0].portfolio_item_id}/icon`;\n\nexport const getOrderPortfolioName = ({ orderItems, id }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem ? portfolioItem.name : `Order ${id}`;\n};\n\nexport const getOrderPlatformId = ({ orderItems }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem\n    ? {\n        orderPlatform: portfolioItem.service_offering_source_ref,\n        orderPortfolio: portfolioItem.portfolio_id\n      }\n    : {};\n};\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  Title,\n  Bullseye,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Flex,\n  EmptyStateSecondaryActions,\n  Button\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/PrimaryToolbar';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/components/cjs/EmptyTable';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/TableToolbar';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  sortable,\n  SortByDirection\n} from '@patternfly/react-table';\n\nimport { fetchOrders } from '../../redux/actions/order-actions';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport createOrderItem from './order-item';\nimport AsyncPagination from '../common/async-pagination';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport statesMessages from '../../messages/states.messages';\nimport filteringMessages from '../../messages/filtering.messages';\nimport ordersMessages from '../../messages/orders.messages';\nimport labelMessages from '../../messages/labels.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport {\n  getOrderPlatformId,\n  getOrderPortfolioName\n} from '../../helpers/shared/orders';\n\nconst debouncedFilter = asyncFormValidator(\n  (filters, meta = defaultSettings, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(fetchOrders(filters, meta)).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst initialState = {\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false,\n  filterType: 'state',\n  filters: {\n    state: [],\n    owner: ''\n  },\n  sortBy: {\n    index: 0,\n    direction: SortByDirection.desc\n  }\n};\n\nconst changeFilters = (value, type, filters) => ({\n  ...filters,\n  [type]: value\n});\n\nconst ordersListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return {\n        ...state,\n        filters: changeFilters(action.payload, state.filterType, state.filters)\n      };\n    case 'replaceFilterChip':\n      return { ...state, filters: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    case 'setFilterType':\n      return { ...state, filterType: action.payload };\n    case 'setSortBy':\n      return { ...state, sortBy: action.payload, isFetching: true };\n  }\n\n  return state;\n};\n\nconst sortIndexMapper = {\n  0: 'id',\n  3: 'owner',\n  4: 'created_at',\n  6: 'state'\n};\n\nconst OrdersList = () => {\n  const formatMessage = useFormatMessage();\n  const dispatch = useDispatch();\n  const viewState = useInitialUriHash();\n  const [\n    { isFetching, isFiltering, filterType, filters, sortBy },\n    stateDispatch\n  ] = useReducer(ordersListState, {\n    ...initialState,\n    filters: viewState?.orders?.filters || { state: [], owner: '' },\n    sortBy: {\n      direction: viewState?.orders?.sortDirection || SortByDirection.desc,\n      index: viewState?.orders?.sortIndex || 0\n    }\n  });\n  const { data, meta } = useSelector(({ orderReducer }) => orderReducer.orders);\n  const columns = [\n    { title: formatMessage(ordersMessages.orderID) },\n    formatMessage(labelMessages.product),\n    '', // need empty row column to correctly aling product names after the icon column\n    {\n      title: formatMessage(ordersMessages.orderedByLabel)\n    },\n    { title: formatMessage(ordersMessages.orderDate) },\n    formatMessage(labelMessages.updated),\n    { title: formatMessage(labelMessages.status) }\n  ].map((column) =>\n    typeof column === 'object' &&\n    !isFetching &&\n    !isFiltering &&\n    data.length !== 0\n      ? { ...column, transforms: [sortable] }\n      : column\n  );\n  const portfolioItems = useSelector(\n    ({\n      portfolioReducer: {\n        portfolioItems: { data }\n      }\n    }) => data\n  );\n  const onSort = (_e, index, direction) => {\n    stateDispatch({\n      type: 'setSortBy',\n      payload: { index, direction }\n    });\n    return dispatch(\n      fetchOrders(filters, {\n        ...meta,\n        sortBy: sortIndexMapper[index],\n        sortDirection: direction,\n        sortIndex: index\n      })\n    ).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const rows = data.map((item) => {\n    const { orderPlatform, orderPortfolio } = getOrderPlatformId(\n      item,\n      portfolioItems\n    );\n    const orderName = getOrderPortfolioName(item, portfolioItems);\n    return createOrderItem(\n      { ...item, orderName },\n      orderPlatform,\n      orderPortfolio,\n      formatMessage\n    );\n  });\n\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.all([\n      dispatch(fetchOrders(filters, viewState?.orders)),\n      dispatch(fetchPlatforms())\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const handlePagination = (_apiProps, pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    return dispatch(\n      fetchOrders(filters, {\n        ...pagination,\n        sortBy: sortIndexMapper[sortBy.index],\n        sortDirection: sortBy.direction,\n        sortIndex: sortBy.index\n      })\n    )\n      .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n      .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      { ...filters, [filterType]: value },\n      {\n        ...meta,\n        sortBy: sortIndexMapper[sortBy.index],\n        sortDirection: sortBy.direction,\n        sortIndex: sortBy.index,\n        offset: 0\n      },\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  const handleClearAll = () => {\n    stateDispatch({\n      type: 'replaceFilterChip',\n      payload: initialState.filters\n    });\n    return debouncedFilter(\n      initialState.filters,\n      {\n        ...meta,\n        sortBy: sortIndexMapper[sortBy.index],\n        sortDirection: sortBy.direction,\n        sortIndex: sortBy.index\n      },\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({\n          type: 'setFilteringFlag',\n          payload: isFiltering\n        })\n    );\n  };\n\n  return (\n    <Grid hasGutter>\n      <GridItem>\n        <Section type=\"content\">\n          {!meta.noData && (\n            <PrimaryToolbar\n              activeFiltersConfig={{\n                filters: Object.entries(filters)\n                  .filter(([, value]) => value && value.length > 0)\n                  .map(([key, value]) => ({\n                    category: key,\n                    type: key,\n                    chips: Array.isArray(value)\n                      ? value.map((name) => ({ name }))\n                      : [{ name: value }]\n                  })),\n                onDelete: (_e, [chip], clearAll) => {\n                  if (clearAll) {\n                    return handleClearAll();\n                  }\n\n                  const newFilters = { ...filters };\n                  if (chip.type === 'state') {\n                    newFilters[chip.type] = newFilters[chip.type].filter(\n                      (value) => value !== chip.chips[0].name\n                    );\n                  } else {\n                    newFilters[chip.type] = '';\n                  }\n\n                  stateDispatch({\n                    type: 'replaceFilterChip',\n                    payload: newFilters\n                  });\n                  debouncedFilter(newFilters, meta, dispatch, (isFiltering) =>\n                    stateDispatch({\n                      type: 'setFilteringFlag',\n                      payload: isFiltering\n                    })\n                  );\n                }\n              }}\n              filterConfig={{\n                onChange: (_e, value) =>\n                  stateDispatch({ type: 'setFilterType', payload: value }),\n                value: filterType,\n                items: [\n                  {\n                    filterValues: {\n                      items: [\n                        {\n                          value: 'Approval Pending',\n                          label: formatMessage(statesMessages.approvalPending)\n                        },\n                        {\n                          value: 'Canceled',\n                          label: formatMessage(statesMessages.canceled)\n                        },\n                        {\n                          value: 'Completed',\n                          label: formatMessage(statesMessages.completed)\n                        },\n                        {\n                          value: 'Created',\n                          label: formatMessage(labelMessages.created)\n                        },\n                        {\n                          value: 'Failed',\n                          label: formatMessage(statesMessages.failed)\n                        },\n                        {\n                          value: 'Ordered',\n                          label: formatMessage(statesMessages.ordered)\n                        }\n                      ],\n                      value: filters.state,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'State',\n                    value: 'state',\n                    type: 'checkbox'\n                  },\n                  {\n                    filterValues: {\n                      value: filters.owner,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'Owner',\n                    value: 'owner'\n                  }\n                ]\n              }}\n              pagination={\n                <AsyncPagination\n                  isDisabled={isFetching || isFiltering}\n                  apiRequest={handlePagination}\n                  meta={meta}\n                  isCompact\n                />\n              }\n            />\n          )}\n          <Table\n            aria-label=\"orders\"\n            {...(!(isFetching || isFiltering) && data.length === 0\n              ? {}\n              : { sortBy, onSort })}\n            cells={columns}\n            rows={isFetching || isFiltering ? [] : rows}\n            className=\"orders-table\"\n          >\n            <TableHeader />\n            <TableBody />\n          </Table>\n          {!(isFetching || isFiltering) && data.length === 0 && (\n            <EmptyTable>\n              <Bullseye>\n                <EmptyState>\n                  <Bullseye>\n                    <EmptyStateIcon icon={SearchIcon} />\n                  </Bullseye>\n                  <Title headingLevel=\"h1\" size=\"lg\">\n                    {meta.noData\n                      ? formatMessage(ordersMessages.noOrdersTitle)\n                      : formatMessage(filteringMessages.noResults)}\n                  </Title>\n                  <EmptyStateBody>\n                    {meta.noData\n                      ? formatMessage(ordersMessages.noOrdersDescription)\n                      : formatMessage(filteringMessages.noResultsDescription)}\n                  </EmptyStateBody>\n                  {!meta.noData && (\n                    <EmptyStateSecondaryActions>\n                      <Button variant=\"link\" onClick={handleClearAll}>\n                        {formatMessage(filteringMessages.clearFilters)}\n                      </Button>\n                    </EmptyStateSecondaryActions>\n                  )}\n                </EmptyState>\n              </Bullseye>\n            </EmptyTable>\n          )}\n          {(isFetching || isFiltering) && <ListLoader />}\n          <TableToolbar className=\"pf-u-mr-0\">\n            <div className=\"bottom-pagination-container\">\n              <Flex justifyContent={{ default: 'justifyContentFlexEnd' }}>\n                {meta.count > 0 && (\n                  <AsyncPagination\n                    className=\"pf-u-mt-0\"\n                    isDisabled={isFetching || isFiltering}\n                    apiRequest={handlePagination}\n                    meta={meta}\n                  />\n                )}\n              </Flex>\n            </div>\n          </TableToolbar>\n        </Section>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default OrdersList;\n","import React, { useEffect } from 'react';\nimport { Stack } from '@patternfly/react-core';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createOrdersToolbarSchema from '../../toolbar/schemas/orders-toolbar.schema';\nimport OrdersList from './orders-list';\n\nconst Orders = () => {\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'orders', secondaryNav: true });\n  }, []);\n\n  return (\n    <Stack>\n      <ToolbarRenderer schema={createOrdersToolbarSchema()} />\n      <OrdersList />\n    </Stack>\n  );\n};\n\nexport default Orders;\n"],"sourceRoot":""}