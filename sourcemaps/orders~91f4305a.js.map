{"version":3,"sources":["webpack:///./src/utilities/async-form-validator.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/messages/orders.messages.js","webpack:///./src/helpers/platform/platform-helper.js","webpack:///./src/redux/actions/platform-actions.js","webpack:///./src/messages/filtering.messages.js","webpack:///./src/messages/states.messages.js","webpack:///./src/helpers/order/order-helper.js","webpack:///./src/presentational-components/order/order-notification.js","webpack:///./src/redux/actions/order-actions.js","webpack:///./src/toolbar/schemas/orders-toolbar.schema.js","webpack:///./src/helpers/shared/orders.js","webpack:///./src/presentational-components/styled-components/table.js","webpack:///./src/smart-components/order/order-item.js","webpack:///./src/smart-components/order/orders-list.js","webpack:///./src/smart-components/order/orders.js"],"names":["asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","getNewPage","request","debouncePromise","direction","propTypes","PropTypes","shape","isRequired","func","any","string","bool","defaultProps","ordersMessages","defineMessages","require","orderedBy","id","defaultMessage","orderedByLabel","lastUpdated","compositeTitle","detailTitle","orderSuccess","noOrdersTitle","noOrdersDescription","noApprovalRequests","creatingApprovalRequest","approvalTitle","approvalDetail","approvalCreated","approvalReason","approvalCompleted","orderDetails","menuApproval","menuLifecycle","menuSteps","objectsNotFound","orderID","orderParameters","orderProgressMessages","lifecycleLink","cancelOrder","keepOrder","cancelDescription","backToOrders","approvalProduct","orderDate","approvalParameters","activity","axiosInstance","getAxiosInstance","graphqlInstance","getGraphqlInstance","getPlatforms","post","SOURCES_API_BASE","query","then","data","application_types","sources","getPlatform","platformId","get","getPlatformItems","filter","filterQuery","TOPOLOGICAL_INVENTORY_API_BASE","getPlatformInventories","defaultSettings","getServiceOffering","serviceOfferingId","sourceId","Promise","all","source","source_type_id","icon_url","service","fetchPlatforms","dispatch","type","ActionTypes","PlatformHelper","payload","error","fetchPlatformItems","fetchSelectedPlatform","fetchPlatformInventories","fetchServiceOffering","filteringMessages","noItems","filterByProduct","noResults","noResultsDescription","clearFilters","noProducts","statesMessages","title","ordered","approvalPending","canceled","completed","created","failed","undecided","approved","denied","pending","skipped","started","notified","getTranslatableState","state","replace","char","toLowerCase","orderApi","getOrderApi","portfolioItemApi","getOrderItemApi","getPortfolioItemApi","getServicePlans","portfolioItemId","listServicePlans","sendSubmitOrder","a","service_parameters","providerControlParameters","parameters","createOrder","order","orderItem","provider_control_parameters","addToOrder","orderItemResponse","submitOrder","getOrderItems","orderIds","CATALOG_API_BASE","map","orderId","join","getOrderPortfolioItems","itemIds","itemId","getOrders","pagination","orders","orderItems","portfolio_item_id","portfolioItems","order_id","getApprovalRequests","orderItemId","promises","requestId","parent_id","approval_request_ref","APPROVAL_API_BASE","requests","actions","updated","length","pop","created_at","undefined","OrderNotification","portfolioId","formatMessage","useIntl","link","chunks","onClick","clearNotifications","to","pathname","ORDER_ROUTE","search","fetchServicePlans","OrderHelper","portfolioItem","addNotification","variant","description","portfolio_id","service_offering_source_ref","dismissable","getState","orderDetail","orderReducer","approvalRequest","fetchOrders","filters","queryFilter","Object","entries","value","key","Array","isArray","storeState","stateKey","fetchOrderDetails","params","detailPromises","status","object","notFound","push","platform","portfolio","progressMessages","fetchApprovalRequests","err","createOrdersToolbarSchema","fields","component","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","getOrderIcon","getOrderPortfolioName","find","name","childrenPropType","oneOfType","node","arrayOf","Table","children","clsx","Tbody","TableCell","styled","shrink","routeMapper","ORDER_APPROVAL_ROUTE","Completed","ORDER_LIFECYCLE_ROUTE","OrderItem","memo","item","useSelector","portfolioReducer","orderPlatform","orderPortfolio","orderName","searchParams","translatableState","aria-labelledby","height","src","TextContent","Grid","hasGutter","GridItem","Level","LevelItem","Text","TextVariants","h5","small","DateFormat","date","owner","updated_at","prevProps","nextProps","debouncedFilter","asyncFormValidator","filteringCallback","initialState","isOpen","isFetching","isFiltering","filterType","ordersListState","action","OrdersList","viewState","useInitialUriHash","useReducer","stateDispatch","useDispatch","useEffect","handlePagination","_apiProps","handleFilterItems","Section","noData","PrimaryToolbar","activeFiltersConfig","category","chips","onDelete","_e","clearAll","chip","newFilters","filterConfig","onChange","items","filterValues","label","isDisabled","aria-label","index","EmptyTable","Bullseye","EmptyState","EmptyStateIcon","icon","SearchIcon","Title","headingLevel","size","EmptyStateBody","EmptyStateSecondaryActions","Button","TableToolbar","Flex","justifyContent","default","Orders","insights","chrome","appNavClick","secondaryNav","Stack","schema"],"mappings":"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","file":"js/orders~91f4305a.e528e5f1def3a7c90769.js","sourcesContent":["import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","const { defineMessages } = require('react-intl');\n\nconst ordersMessages = defineMessages({\n  orderedBy: {\n    id: 'orders.common.orderedBy',\n    defaultMessage: 'Ordered by {owner}'\n  },\n  orderedByLabel: {\n    id: 'orders.approval.orderedBy',\n    defaultMessage: 'Ordered by'\n  },\n  lastUpdated: {\n    id: 'orders.common.lastUpdated',\n    defaultMessage: 'Last updated'\n  },\n  compositeTitle: {\n    id: 'orders.common.compositeTitle',\n    defaultMessage: '{name} - Order # {id}'\n  },\n  detailTitle: {\n    id: 'orders.detail.title',\n    defaultMessage: 'Order ID {id}'\n  },\n  orderSuccess: {\n    id: 'orders.notification.success',\n    defaultMessage:\n      'You can track the progress of Order # {id} in your <link>Orders</link> page.'\n  },\n  noOrdersTitle: {\n    id: 'orders.list.empty.title',\n    defaultMessage: 'No orders'\n  },\n  noOrdersDescription: {\n    id: 'orders.list.empty.description',\n    defaultMessage: 'No orders have been created.'\n  },\n  noApprovalRequests: {\n    id: 'orders.approval.no-requests',\n    defaultMessage:\n      'We were unable to find any approval requests for this order.'\n  },\n  creatingApprovalRequest: {\n    id: 'orders.approval.creating',\n    defaultMessage: 'Creating approval request'\n  },\n  approvalTitle: {\n    id: 'orders.approval.title',\n    defaultMessage: 'Summary'\n  },\n  approvalDetail: {\n    id: 'orders.approval.view-detail',\n    // eslint-disable-next-line quotes\n    defaultMessage: \"View this order's approval request details\"\n  },\n  approvalCreated: {\n    id: 'orders.approval.details.created',\n    defaultMessage: 'Request created'\n  },\n  approvalReason: {\n    id: 'orders.approval.details.reason',\n    defaultMessage: 'Approval reason'\n  },\n  approvalCompleted: {\n    id: 'orders.approval.details.completed',\n    defaultMessage: 'Completed at'\n  },\n  orderDetails: {\n    id: 'orders.common.details',\n    defaultMessage: 'Order details'\n  },\n  menuApproval: {\n    id: 'orders.menu.approval',\n    defaultMessage: 'Approval'\n  },\n  menuLifecycle: {\n    id: 'orders.menu.lifecycle',\n    defaultMessage: 'Lifecycle'\n  },\n  menuSteps: {\n    id: 'orders.menu.steps',\n    defaultMessage: 'Order steps'\n  },\n  objectsNotFound: {\n    id: 'order.detail.not-found',\n    defaultMessage:\n      'The {objects} for this order {count, plural, one {is} other {are}} not available'\n  },\n  orderID: {\n    id: 'orders.order.detail.ID',\n    defaultMessage: 'Order ID'\n  },\n  orderParameters: {\n    id: 'orders.order.detail.parameters',\n    defaultMessage: 'Order parameters'\n  },\n  orderProgressMessages: {\n    id: 'orders.order.detail.messages',\n    defaultMessage: 'Progress messages'\n  },\n  lifecycleLink: {\n    id: 'orders.order.lifecicle.link',\n    defaultMessage: 'Manage product'\n  },\n  cancelOrder: {\n    id: 'orders.actions.cancel',\n    defaultMessage: 'Cancel order'\n  },\n  keepOrder: {\n    id: 'orders.actions.keep',\n    defaultMessage: 'Keep order'\n  },\n  cancelDescription: {\n    id: 'orders.cancel.description',\n    defaultMessage: 'Are you sure you want to cancel {name}?'\n  },\n  backToOrders: {\n    id: 'orders.toolbar.backLink',\n    defaultMessage: 'Back to orders'\n  },\n  approvalProduct: {\n    id: 'orders.approval.product',\n    defaultMessage: 'Product'\n  },\n  orderDate: {\n    id: 'orders.approval.order-date',\n    defaultMessage: 'Order date'\n  },\n  approvalParameters: {\n    id: 'orders.approval.parameters',\n    defaultMessage: 'Parameters'\n  },\n  activity: {\n    id: 'orders.approval.activity',\n    defaultMessage: 'Activity'\n  }\n});\n\nexport default ordersMessages;\n","import { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport {\n  TOPOLOGICAL_INVENTORY_API_BASE,\n  SOURCES_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nexport const getPlatforms = () => {\n  return graphqlInstance\n    .post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n    .then(({ data: { application_types } }) => application_types)\n    .then(([{ sources }]) => sources);\n};\n\nexport const getPlatform = (platformId) => {\n  return axiosInstance.get(`${SOURCES_API_BASE}/sources/${platformId}`);\n};\n\nexport const getPlatformItems = (platformId, filter, options) => {\n  const filterQuery = filter ? `&filter[name][contains_i]=${filter}` : '';\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_offerings?filter[archived_at][nil]${filterQuery}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings`\n    );\n  }\n};\n\nexport const getPlatformInventories = (\n  platformId,\n  filter = '',\n  options = defaultSettings\n) => {\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_inventories?filter[name][contains_i]=${filter}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_inventories?limit=${options.limit}&offset=${options.offset}`\n    );\n  }\n};\n\nexport const getServiceOffering = (serviceOfferingId, sourceId) =>\n  Promise.all([\n    axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings/${serviceOfferingId}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${sourceId}`)\n      .then((source) => {\n        return axiosInstance\n          .get(`${SOURCES_API_BASE}/source_types/${source.source_type_id}`)\n          .then(({ icon_url }) => ({\n            ...source,\n            icon_url\n          }));\n      })\n  ]).then(([service, source]) => ({\n    service,\n    source\n  }));\n","import * as ActionTypes from '../action-types';\nimport * as PlatformHelper from '../../helpers/platform/platform-helper';\n\nexport const fetchPlatforms = () => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_PLATFORMS}_PENDING` });\n  return PlatformHelper.getPlatforms()\n    .then((data) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_FULFILLED`,\n        payload: data\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchPlatformItems = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_ITEMS,\n  payload: PlatformHelper.getPlatformItems(platformId, filter, options),\n  meta: {\n    platformId,\n    filter,\n    ...options\n  }\n});\n\nexport const fetchMultiplePlatformItems = (platformsId) => {\n  const platformPromisses = platformsId.map((platformId) =>\n    PlatformHelper.getPlatformItems(platformId).then((data) => ({\n      [platformId]: data\n    }))\n  );\n  return {\n    type: ActionTypes.FETCH_MULTIPLE_PLATFORM_ITEMS,\n    payload: Promise.all(platformPromisses).then((data) =>\n      data.reduce(\n        (acc, curr) => ({\n          ...acc,\n          ...curr\n        }),\n        {}\n      )\n    )\n  };\n};\n\nexport const fetchSelectedPlatform = (id) => ({\n  type: ActionTypes.FETCH_PLATFORM,\n  payload: PlatformHelper.getPlatform(id)\n});\n\nexport const searchPlatformItems = (value) => ({\n  type: ActionTypes.FILTER_PLATFORM_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const fetchPlatformInventories = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_INVENTORIES,\n  payload: PlatformHelper.getPlatformInventories(platformId, filter, options)\n});\n\nexport const fetchServiceOffering = (...args) => ({\n  type: ActionTypes.FETCH_SERVICE_OFFERING,\n  payload: PlatformHelper.getServiceOffering(...args)\n});\n","const { defineMessages } = require('react-intl');\n\nconst filteringMessages = defineMessages({\n  noItems: {\n    id: 'common.filtering.noItems',\n    defaultMessage: 'No items found'\n  },\n  filterByProduct: {\n    id: 'common.filtering.filterByProduct',\n    defaultMessage: 'Filter by product'\n  },\n  noResults: {\n    id: 'common.filtering.noResults',\n    defaultMessage: 'No results found'\n  },\n  noResultsDescription: {\n    id: 'common.filtering.noResultsDescription',\n    defaultMessage:\n      'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n  },\n  clearFilters: {\n    id: 'common.filtering.clear-filters',\n    defaultMessage: 'Clear all filters'\n  },\n  noProducts: {\n    id: 'common.filtering.no-products',\n    defaultMessage: 'No products yet'\n  }\n});\n\nexport default filteringMessages;\n","const { defineMessages } = require('react-intl');\n\nconst statesMessages = defineMessages({\n  title: {\n    id: 'common.states.title',\n    defaultMessage: 'State'\n  },\n  ordered: {\n    id: 'common.states.ordered',\n    defaultMessage: 'Ordered'\n  },\n  approvalPending: {\n    id: 'common.states.approval-pending',\n    defaultMessage: 'Approval Pending'\n  },\n  canceled: {\n    id: 'common.states.canceled',\n    defaultMessage: 'Canceled'\n  },\n  completed: {\n    id: 'common.states.completed',\n    defaultMessage: 'Completed'\n  },\n  created: {\n    id: 'common.states.created',\n    defaultMessage: 'Created'\n  },\n  failed: {\n    id: 'common.states.failed',\n    defaultMessage: 'Failed'\n  },\n  undecided: {\n    id: 'common.states.undecided',\n    defaultMessage: 'Undecided'\n  },\n  approved: {\n    id: 'common.states.approved',\n    defaultMessage: 'Approved'\n  },\n  denied: {\n    id: 'common.states.denied',\n    defaultMessage: 'Denied'\n  },\n  error: {\n    id: 'common.states.error',\n    defaultMessage: 'Error'\n  },\n  pending: {\n    id: 'common.states.pending',\n    defaultMessage: 'Pending'\n  },\n  skipped: {\n    id: 'common.states.skipped',\n    defaultMessage: 'Skipped'\n  },\n  started: {\n    id: 'common.states.started',\n    defaultMessage: 'Started'\n  },\n  notified: {\n    id: 'common.states.notified',\n    defaultMessage: 'Notified'\n  }\n});\n\nexport const getTranslatableState = (state) =>\n  state.replace(/\\s/g, '').replace(/^./, (char) => char.toLowerCase());\n\nexport default statesMessages;\n","/* eslint camelcase: 0 */\nimport {\n  getAxiosInstance,\n  getPortfolioItemApi,\n  getOrderApi,\n  getOrderItemApi,\n  getGraphqlInstance\n} from '../shared/user-login';\nimport {\n  CATALOG_API_BASE,\n  SOURCES_API_BASE,\n  APPROVAL_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\n\nconst orderApi = getOrderApi();\nconst orderItemApi = getOrderItemApi();\nconst portfolioItemApi = getPortfolioItemApi();\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nexport function getServicePlans(portfolioItemId) {\n  return portfolioItemApi.listServicePlans(portfolioItemId);\n}\n\nexport async function sendSubmitOrder({\n  service_parameters: { providerControlParameters, ...service_parameters },\n  ...parameters\n}) {\n  let order = await orderApi.createOrder();\n  let orderItem = {};\n  orderItem.count = 1;\n  orderItem = {\n    ...orderItem,\n    ...parameters,\n    service_parameters,\n    provider_control_parameters: providerControlParameters || {}\n  };\n  const orderItemResponse = await orderApi.addToOrder(order.id, orderItem);\n  return orderApi\n    .submitOrder(order.id)\n    .then((order) => ({ ...order, orderItem: orderItemResponse }));\n}\n\nexport function cancelOrder(orderId) {\n  return orderApi.cancelOrder(orderId);\n}\n\nconst getOrderItems = (orderIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/order_items?${orderIds\n      .map((orderId) => `filter[order_id][]=${orderId}`)\n      .join('&')}`\n  );\n\nconst getOrderPortfolioItems = (itemIds) =>\n  axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items?${itemIds\n      .map((itemId) => `filter[id][]=${itemId}`)\n      .join('&')}`\n  );\n\nexport const getOrders = (filter = '', pagination = defaultSettings) =>\n  axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/orders?${filter}&limit=${pagination.limit}&offset=${pagination.offset}`\n    ) // eslint-disable-line max-len\n    .then((orders) =>\n      getOrderItems(orders.data.map(({ id }) => id)).then((orderItems) =>\n        getOrderPortfolioItems(\n          orderItems.data.map(({ portfolio_item_id }) => portfolio_item_id)\n        ).then((portfolioItems) => {\n          return {\n            portfolioItems,\n            ...orders,\n            data: orders.data.map((order) => ({\n              ...order,\n              orderItems: orderItems.data.filter(\n                ({ order_id }) => order_id === order.id\n              )\n            }))\n          };\n        })\n      )\n    );\n\nexport function getOrderApprovalRequests(orderItemId) {\n  return orderItemApi.listApprovalRequests(orderItemId);\n}\n\nexport const getOrderDetail = (params) => {\n  let detailPromises = [\n    axiosInstance.get(`${CATALOG_API_BASE}/orders/${params.order}`),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/order_items/${params['order-item']}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Order item',\n            notFound: true\n          };\n        }\n\n        throw error;\n      }),\n    axiosInstance\n      .get(`${CATALOG_API_BASE}/portfolio_items/${params['portfolio-item']}`)\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {\n            object: 'Product',\n            notFound: true\n          };\n        }\n\n        throw error;\n      })\n  ];\n\n  detailPromises.push(\n    params.platform && params.platform !== 'undefined'\n      ? axiosInstance\n          .get(`${SOURCES_API_BASE}/sources/${params.platform}`)\n          .catch((error) => {\n            if (error.status === 404 || error.status === 400) {\n              return {\n                object: 'Platform',\n                notFound: true\n              };\n            }\n\n            throw error;\n          })\n      : {\n          object: 'Platform',\n          notFound: true\n        }\n  );\n\n  detailPromises.push(\n    axiosInstance\n      .get(\n        `${CATALOG_API_BASE}/order_items/${params['order-item']}/progress_messages`\n      )\n      .catch((error) => {\n        if (error.status === 404 || error.status === 400) {\n          return {};\n        }\n\n        throw error;\n      })\n  );\n\n  detailPromises.push(\n    params.portfolio && params.portfolio !== 'undefined'\n      ? axiosInstance\n          .get(`${CATALOG_API_BASE}/portfolios/${params.portfolio}`)\n          .catch((error) => {\n            if (error.status === 404 || error.status === 400) {\n              return {\n                object: 'Portfolio',\n                notFound: true\n              };\n            }\n\n            throw error;\n          })\n      : { object: 'Portfolio', notFound: true }\n  );\n\n  return Promise.all(detailPromises);\n};\n\nconst APPROVAL_REQUESTER_PERSONA = 'approval/requester';\nconst requestTranscriptQuery = (parent_id) => `query {\n  requests(id: \"${parent_id}\") {\n    group_name\n    state\n    actions {\n      created_at\n    }\n  }\n}`;\nconst fetchRequestTranscript = (requestId) =>\n  graphqlInstance\n    .post(\n      `${APPROVAL_API_BASE}/graphql`,\n      { query: requestTranscriptQuery(requestId) },\n      { 'x-rh-persona': APPROVAL_REQUESTER_PERSONA }\n    )\n    .then(({ data: { requests } }) => requests);\n\nexport const getApprovalRequests = (orderItemId) =>\n  axiosInstance\n    .get(`${CATALOG_API_BASE}/order_items/${orderItemId}/approval_requests`)\n    .then(({ data }) => {\n      const promises = data.map(({ approval_request_ref }) =>\n        fetchRequestTranscript(approval_request_ref)\n      );\n      return Promise.all(promises).then((requests) => {\n        const data = requests?.[0]?.map(({ actions, ...request }) => ({\n          ...request,\n          updated: actions?.length > 0 ? actions.pop().created_at : undefined\n        }));\n        return { data: data || [] };\n      });\n    });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { clearNotifications } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport { useIntl } from 'react-intl';\nimport { ORDER_ROUTE } from '../../constants/routes';\nimport ordersMessages from '../../messages/orders.messages';\n\nconst OrderNotification = ({\n  id,\n  dispatch,\n  portfolioItemId,\n  portfolioId,\n  platformId,\n  orderItemId\n}) => {\n  const { formatMessage } = useIntl();\n  return formatMessage(ordersMessages.orderSuccess, {\n    id,\n    // eslint-disable-next-line react/display-name\n    link: (chunks) => (\n      <Link\n        onClick={() => dispatch(clearNotifications())}\n        to={{\n          pathname: ORDER_ROUTE,\n          search: `?order=${id}&order-item=${orderItemId}&portfolio-item=${portfolioItemId}&platform=${platformId}&portfolio=${portfolioId}`\n        }}\n      >\n        {chunks}\n      </Link>\n    )\n  });\n};\n\nOrderNotification.propTypes = {\n  id: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  portfolioItemId: PropTypes.string.isRequired,\n  portfolioId: PropTypes.string.isRequired,\n  platformId: PropTypes.string.isRequired,\n  orderItemId: PropTypes.string.isRequired\n};\n\nexport default OrderNotification;\n","import React from 'react';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\n\nimport * as ActionTypes from '../action-types';\nimport * as OrderHelper from '../../helpers/order/order-helper';\nimport OrderNotification from '../../presentational-components/order/order-notification';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const fetchServicePlans = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_SERVICE_PLANS,\n  payload: OrderHelper.getServicePlans(portfolioItemId)\n});\n\nexport const updateServiceData = (data) => ({\n  type: ActionTypes.UPDATE_SERVICE_DATA,\n  payload: { serviceData: data }\n});\n\nexport const setSelectedPlan = (data) => ({\n  type: ActionTypes.SET_SELECTED_PLAN,\n  payload: data\n});\n\nexport const sendSubmitOrder = (apiProps, portfolioItem) => (dispatch) =>\n  dispatch({\n    type: ActionTypes.SUBMIT_SERVICE_ORDER,\n    payload: OrderHelper.sendSubmitOrder(apiProps).then(({ id, orderItem }) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been accepted successfully',\n          description: (\n            <OrderNotification\n              id={id}\n              dispatch={dispatch}\n              portfolioItemId={portfolioItem.id}\n              portfolioId={portfolioItem.portfolio_id}\n              platformId={portfolioItem.service_offering_source_ref}\n              orderItemId={orderItem.id}\n            />\n          ),\n          dismissable: true\n        })\n      )\n    )\n  });\n\nexport const cancelOrder = (orderId) => (dispatch, getState) => {\n  dispatch({ type: `${ActionTypes.CANCEL_ORDER}_PENDING` });\n  const {\n    orderReducer: { orderDetail }\n  } = getState();\n  return OrderHelper.cancelOrder(orderId)\n    .then(() => {\n      orderDetail.order.state = 'Canceled';\n      if (\n        orderDetail.approvalRequest &&\n        orderDetail.approvalRequest.length > 0\n      ) {\n        orderDetail.approvalRequest[0].state = 'canceled';\n      }\n\n      dispatch({\n        type: ActionTypes.SET_ORDER_DETAIL,\n        payload: { ...orderDetail }\n      });\n      return orderDetail;\n    })\n    .then((orderDetail) =>\n      dispatch(\n        addNotification({\n          variant: 'success',\n          title: 'Your order has been canceled successfully',\n          description: `Order ${`Order #${orderDetail.order.id}`} was canceled.`,\n          dismissable: true\n        })\n      )\n    )\n    .then(() => dispatch({ type: `${ActionTypes.CANCEL_ORDER}_FULFILLED` }))\n    .catch((error) => {\n      dispatch({\n        type: `${ActionTypes.CANCEL_ORDER}_REJECTED`,\n        payload: error\n      });\n    });\n};\n\nexport const fetchOrders = (filters, pagination = defaultSettings) => (\n  dispatch\n) => {\n  const queryFilter = Object.entries(filters)\n    .filter(([, value]) => value && value.length > 0)\n    .map(([key, value]) =>\n      Array.isArray(value)\n        ? value.map((value) => `filter[${key}][]=${value}`).join('&')\n        : `filter[${key}][contains_i]=${value}`\n    )\n    .join('&');\n  dispatch({ type: `${ActionTypes.FETCH_ORDERS}_PENDING` });\n  return OrderHelper.getOrders(queryFilter, pagination)\n    .then(({ portfolioItems, ...orders }) => {\n      dispatch({\n        type: ActionTypes.SET_PORTFOLIO_ITEMS,\n        payload: portfolioItems\n      });\n      return dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_FULFILLED`,\n        meta: {\n          ...pagination,\n          filter: queryFilter,\n          filters,\n          storeState: true,\n          stateKey: 'orders'\n        },\n        payload: orders\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_ORDERS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchOrderDetails = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SET_ORDER_DETAIL}_PENDING` });\n  return OrderHelper.getOrderDetail(params)\n    .then(\n      ([\n        order,\n        orderItem,\n        portfolioItem,\n        platform,\n        progressMessages,\n        portfolio,\n        approvalRequest\n      ]) =>\n        dispatch({\n          type: `${ActionTypes.SET_ORDER_DETAIL}_FULFILLED`,\n          payload: {\n            order,\n            orderItem,\n            portfolioItem,\n            platform,\n            progressMessages,\n            portfolio,\n            approvalRequest\n          }\n        })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.SET_ORDER_DETAIL}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchApprovalRequests = (orderItemId) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_PENDING` });\n  return OrderHelper.getApprovalRequests(orderItemId)\n    .then((data) => {\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_FULFILLED`,\n        payload: data\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_APPROVAL_REQUESTS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n","import { toolbarComponentTypes } from '../toolbar-mapper';\n\nconst createOrdersToolbarSchema = () => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      className: 'orders pf-u-p-lg',\n      key: 'orders-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'orders-toolbar-title',\n          title: 'Orders',\n          className: ''\n        }\n      ]\n    }\n  ]\n});\n\nexport default createOrdersToolbarSchema;\n","import { CATALOG_API_BASE } from '../../utilities/constants';\n\nexport const getOrderIcon = ({ orderItems }) =>\n  orderItems[0] &&\n  `${CATALOG_API_BASE}/portfolio_items/${orderItems[0].portfolio_item_id}/icon`;\n\nexport const getOrderPortfolioName = ({ orderItems, id }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem ? portfolioItem.name : `Order ${id}`;\n};\n\nexport const getOrderPlatformId = ({ orderItems }, portfolioItems) => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem\n    ? {\n        orderPlatform: portfolioItem.service_offering_source_ref,\n        orderPortfolio: portfolioItem.portfolio_id\n      }\n    : {};\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from 'styled-components';\n\nconst childrenPropType = PropTypes.oneOfType([\n  PropTypes.node,\n  PropTypes.arrayOf(PropTypes.node)\n]);\n\nexport const Table = ({ children, className, ...props }) => (\n  <table className={clsx('pf-c-table', 'pf-m-grid-md', className)} {...props}>\n    {children}\n  </table>\n);\n\nTable.propTypes = {\n  children: childrenPropType.isRequired,\n  className: PropTypes.string\n};\n\nexport const Tbody = ({ children, ...props }) => (\n  <tbody {...props}>{children}</tbody>\n);\n\nTbody.propTypes = {\n  children: childrenPropType.isRequired\n};\n\nexport const TableCell = styled(({ shrink, children, ...props }) => (\n  <td {...props}>{children}</td>\n))`\n  @media screen and (min-width: 768px) {\n    vertical-align: top !important;\n    width: ${({ shrink }) => (shrink ? '200px !important' : 'initial')};\n    img {\n      object-fit: contain;\n    }\n  }\n`;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport {\n  getOrderIcon,\n  getOrderPortfolioName,\n  getOrderPlatformId\n} from '../../helpers/shared/orders';\nimport CatalogLink from '../common/catalog-link';\nimport {\n  ORDER_ROUTE,\n  ORDER_APPROVAL_ROUTE,\n  ORDER_LIFECYCLE_ROUTE\n} from '../../constants/routes';\nimport { TableCell } from '../../presentational-components/styled-components/table';\nimport { useIntl } from 'react-intl';\nimport statesMessages, {\n  getTranslatableState\n} from '../../messages/states.messages';\nimport ordersMessages from '../../messages/orders.messages';\n\nconst routeMapper = {\n  'Approval Pending': ORDER_APPROVAL_ROUTE,\n  Completed: ORDER_LIFECYCLE_ROUTE\n};\n\nconst OrderItem = memo(\n  ({ item }) => {\n    const { formatMessage } = useIntl();\n    const { orderPlatform, orderPortfolio, orderName } = useSelector(\n      ({\n        portfolioReducer: {\n          portfolioItems: { data }\n        }\n      }) => {\n        const { orderPlatform, orderPortfolio } = getOrderPlatformId(\n          item,\n          data\n        );\n        return {\n          orderPlatform,\n          orderPortfolio,\n          orderName: getOrderPortfolioName(item, data)\n        };\n      }\n    );\n    const orderItem = (item.orderItems[0] && item.orderItems[0]) || {};\n    const searchParams = {\n      order: item.id,\n      'order-item': orderItem.id,\n      'portfolio-item': orderItem.portfolio_item_id,\n      platform: orderPlatform,\n      portfolio: orderPortfolio\n    };\n    const translatableState = getTranslatableState(item.state);\n    return (\n      <tr\n        aria-labelledby={`${item.id}-expand`}\n        className=\"data-list-expand-fix\"\n      >\n        <TableCell shrink className=\"pf-u-pl-xl-on-md\">\n          <CardIcon\n            height={60}\n            src={getOrderIcon(item)}\n            sourceId={orderPlatform}\n          />\n        </TableCell>\n        <TableCell>\n          <TextContent>\n            <Grid hasGutter className=\"pf-u-gg-md\">\n              <GridItem>\n                <Level className=\"flex-no-wrap\">\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.h5}>\n                      <CatalogLink\n                        pathname={ORDER_ROUTE}\n                        searchParams={searchParams}\n                      >\n                        {formatMessage(ordersMessages.compositeTitle, {\n                          name: orderName,\n                          id: item.id\n                        })}\n                      </CatalogLink>\n                    </Text>\n                  </LevelItem>\n                  <LevelItem className=\"flex-item-no-wrap\">\n                    <CatalogLink\n                      pathname={routeMapper[item.state] || ORDER_ROUTE}\n                      searchParams={searchParams}\n                    >\n                      {item.state === 'Failed' && (\n                        <ExclamationCircleIcon className=\"pf-u-mr-sm icon-danger-fill\" />\n                      )}\n                      {formatMessage(statesMessages[translatableState])}\n                    </CatalogLink>\n                  </LevelItem>\n                </Level>\n              </GridItem>\n              <GridItem>\n                <Level>\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n                      {formatMessage(statesMessages.ordered)}\n                      &nbsp;\n                      <DateFormat date={item.created_at} variant=\"relative\" />\n                    </Text>\n                  </LevelItem>\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n                      {formatMessage(ordersMessages.orderedBy, {\n                        owner: item.owner\n                      })}\n                    </Text>\n                  </LevelItem>\n                  <LevelItem>\n                    <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n                      {formatMessage(ordersMessages.lastUpdated)}\n                      &nbsp;\n                      <DateFormat\n                        date={\n                          item.orderItems[0] && item.orderItems[0].updated_at\n                        }\n                        variant=\"relative\"\n                      />\n                    </Text>\n                  </LevelItem>\n                </Level>\n              </GridItem>\n            </Grid>\n          </TextContent>\n        </TableCell>\n      </tr>\n    );\n  },\n  (prevProps, nextProps) => prevProps.id === nextProps.id\n);\n\nOrderItem.propTypes = {\n  item: PropTypes.object.isRequired\n};\n\nexport default OrderItem;\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  Title,\n  Bullseye,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Flex,\n  EmptyStateSecondaryActions,\n  Button\n} from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/PrimaryToolbar';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/components/cjs/EmptyTable';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/TableToolbar';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { fetchOrders } from '../../redux/actions/order-actions';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport OrderItem from './order-item';\nimport AsyncPagination from '../common/async-pagination';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport {\n  Table,\n  Tbody\n} from '../../presentational-components/styled-components/table';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport statesMessages from '../../messages/states.messages';\nimport filteringMessages from '../../messages/filtering.messages';\nimport ordersMessages from '../../messages/orders.messages';\n\nconst debouncedFilter = asyncFormValidator(\n  (filters, meta = defaultSettings, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(fetchOrders(filters, meta)).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst initialState = {\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false,\n  filterType: 'state',\n  filters: {\n    state: [],\n    owner: ''\n  }\n};\n\nconst changeFilters = (value, type, filters) => ({\n  ...filters,\n  [type]: value\n});\n\nconst ordersListState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return {\n        ...state,\n        filters: changeFilters(action.payload, state.filterType, state.filters)\n      };\n    case 'replaceFilterChip':\n      return { ...state, filters: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    case 'setFilterType':\n      return { ...state, filterType: action.payload };\n  }\n\n  return state;\n};\n\nconst OrdersList = () => {\n  const { formatMessage } = useIntl();\n  const viewState = useInitialUriHash();\n  const [\n    { isFetching, isFiltering, filterType, filters },\n    stateDispatch\n  ] = useReducer(ordersListState, {\n    ...initialState,\n    filters: viewState?.orders?.filters || { state: [], owner: '' }\n  });\n  const { data, meta } = useSelector(({ orderReducer }) => orderReducer.orders);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.all([\n      dispatch(fetchOrders(filters, viewState?.orders)),\n      dispatch(fetchPlatforms())\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const handlePagination = (_apiProps, pagination) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    return dispatch(fetchOrders(filters, pagination))\n      .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n      .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      { ...filters, [filterType]: value },\n      { ...meta, offset: 0 },\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  return (\n    <Grid hasGutter>\n      <GridItem>\n        <Section type=\"content\">\n          {!meta.noData && (\n            <PrimaryToolbar\n              activeFiltersConfig={{\n                filters: Object.entries(filters)\n                  .filter(([, value]) => value && value.length > 0)\n                  .map(([key, value]) => ({\n                    category: key,\n                    type: key,\n                    chips: Array.isArray(value)\n                      ? value.map((name) => ({ name }))\n                      : [{ name: value }]\n                  })),\n                onDelete: (_e, [chip], clearAll) => {\n                  if (clearAll) {\n                    stateDispatch({\n                      type: 'replaceFilterChip',\n                      payload: initialState.filters\n                    });\n                    return debouncedFilter(\n                      initialState.filters,\n                      meta,\n                      dispatch,\n                      (isFiltering) =>\n                        stateDispatch({\n                          type: 'setFilteringFlag',\n                          payload: isFiltering\n                        })\n                    );\n                  }\n\n                  const newFilters = { ...filters };\n                  if (chip.type === 'state') {\n                    newFilters[chip.type] = newFilters[chip.type].filter(\n                      (value) => value !== chip.chips[0].name\n                    );\n                  } else {\n                    newFilters[chip.type] = '';\n                  }\n\n                  stateDispatch({\n                    type: 'replaceFilterChip',\n                    payload: newFilters\n                  });\n                  debouncedFilter(newFilters, meta, dispatch, (isFiltering) =>\n                    stateDispatch({\n                      type: 'setFilteringFlag',\n                      payload: isFiltering\n                    })\n                  );\n                }\n              }}\n              filterConfig={{\n                onChange: (_e, value) =>\n                  stateDispatch({ type: 'setFilterType', payload: value }),\n                value: filterType,\n                items: [\n                  {\n                    filterValues: {\n                      items: [\n                        {\n                          value: 'Approval Pending',\n                          label: formatMessage(statesMessages.approvalPending)\n                        },\n                        {\n                          value: 'Canceled',\n                          label: formatMessage(statesMessages.canceled)\n                        },\n                        {\n                          value: 'Completed',\n                          label: formatMessage(statesMessages.completed)\n                        },\n                        {\n                          value: 'Created',\n                          label: formatMessage(statesMessages.created)\n                        },\n                        {\n                          value: 'Failed',\n                          label: formatMessage(statesMessages.failed)\n                        },\n                        {\n                          value: 'Ordered',\n                          label: formatMessage(statesMessages.ordered)\n                        }\n                      ],\n                      value: filters.state,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'State',\n                    value: 'state',\n                    type: 'checkbox'\n                  },\n                  {\n                    filterValues: {\n                      value: filters.owner,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'Owner',\n                    value: 'owner'\n                  }\n                ]\n              }}\n              pagination={\n                <AsyncPagination\n                  isDisabled={isFetching || isFiltering}\n                  apiRequest={handlePagination}\n                  meta={meta}\n                  isCompact\n                />\n              }\n            />\n          )}\n          <Table aria-label=\"order-list\">\n            <Tbody>\n              {isFetching || isFiltering ? (\n                <tr>\n                  <td className=\"pf-u-p-0\">\n                    <ListLoader />\n                  </td>\n                </tr>\n              ) : data.length > 0 ? (\n                data.map((item, index) => (\n                  <OrderItem key={item.id} index={index} item={item} />\n                ))\n              ) : (\n                <tr>\n                  <td>\n                    <EmptyTable>\n                      <Bullseye>\n                        <EmptyState>\n                          <Bullseye>\n                            <EmptyStateIcon icon={SearchIcon} />\n                          </Bullseye>\n                          <Title headingLevel=\"h1\" size=\"lg\">\n                            {meta.noData\n                              ? formatMessage(ordersMessages.noOrdersTitle)\n                              : formatMessage(filteringMessages.noResults)}\n                          </Title>\n                          <EmptyStateBody>\n                            {meta.noData\n                              ? formatMessage(\n                                  ordersMessages.noOrdersDescription\n                                )\n                              : formatMessage(\n                                  filteringMessages.noResultsDescription\n                                )}\n                          </EmptyStateBody>\n\n                          <EmptyStateSecondaryActions>\n                            {!meta.noData && (\n                              <Button\n                                variant=\"link\"\n                                onClick={() => {\n                                  stateDispatch({\n                                    type: 'setFilteringFlag',\n                                    payload: true\n                                  });\n                                  handleFilterItems('');\n                                }}\n                              >\n                                {formatMessage(filteringMessages.clearFilters)}\n                              </Button>\n                            )}\n                          </EmptyStateSecondaryActions>\n                        </EmptyState>\n                      </Bullseye>\n                    </EmptyTable>\n                  </td>\n                </tr>\n              )}\n            </Tbody>\n          </Table>\n          <TableToolbar className=\"pf-u-mr-0\">\n            <div className=\"bottom-pagination-container\">\n              <Flex justifyContent={{ default: 'justifyContentFlexEnd' }}>\n                {meta.count > 0 && (\n                  <AsyncPagination\n                    className=\"pf-u-mt-0\"\n                    isDisabled={isFetching || isFiltering}\n                    apiRequest={handlePagination}\n                    meta={meta}\n                  />\n                )}\n              </Flex>\n            </div>\n          </TableToolbar>\n        </Section>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default OrdersList;\n","import React, { useEffect } from 'react';\nimport { Stack } from '@patternfly/react-core';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createOrdersToolbarSchema from '../../toolbar/schemas/orders-toolbar.schema';\nimport OrdersList from './orders-list';\n\nconst Orders = () => {\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'orders', secondaryNav: true });\n  }, []);\n\n  return (\n    <Stack>\n      <ToolbarRenderer schema={createOrdersToolbarSchema()} />\n      <OrdersList />\n    </Stack>\n  );\n};\n\nexport default Orders;\n"],"sourceRoot":""}