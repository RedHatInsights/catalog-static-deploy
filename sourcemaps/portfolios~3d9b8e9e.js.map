{"version":3,"sources":["webpack:///./src/utilities/async-form-validator.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/shared/content-gallery-empty-state.js","webpack:///./src/presentational-components/shared/card-common.js","webpack:///./src/presentational-components/styled-components/ellipsis-text-container.js","webpack:///./src/presentational-components/styled-components/card.js","webpack:///./src/presentational-components/styled-components/styled-gallery.js","webpack:///./src/smart-components/content-gallery/content-gallery.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/toolbar/helpers.js","webpack:///./src/presentational-components/portfolio/portfolio-card-header.js","webpack:///./src/presentational-components/portfolio/porfolio-card.js","webpack:///./src/toolbar/schemas/portfolios-toolbar.schema.js","webpack:///./src/smart-components/portfolio/portfolios.js"],"names":["asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","getNewPage","request","debouncePromise","direction","propTypes","PropTypes","shape","isRequired","func","any","string","bool","defaultProps","ContentGalleryEmptyState","title","Icon","description","PrimaryAction","renderDescription","icon","component","TextVariants","h1","EmptyStatePrimaryAction","url","label","hasPermission","id","pathname","preserveSearch","variant","CardPropText","styled","div","ItemDetails","toDisplay","item","map","prop","key","arrayOf","oneOfType","node","EllipsisTextContainer","StyledCardBody","CardBody","StyledCard","Card","StyledGalleryItem","isDisabled","NoItems","ContentGallery","isLoading","items","renderEmptyState","length","type","hasGutter","array","BottomPaginationContainer","children","createSingleItemGroup","groupName","hidden","toolbarComponentTypes","TOOLBAR_GROUP","fields","TOOLBAR_ITEM","createLinkButton","LINK","BUTTON","HeaderTitle","LevelItem","HeaderLevel","Level","PortfolioCardHeader","to","portfolioName","headerActions","TextContent","Text","h3","onClick","event","preventDefault","search","TO_DISPLAY","HeaderActions","portfolioId","handleCopyPortfolio","userCapabilities","share","copy","unshare","update","destroy","set_approval","useState","isOpen","setOpen","dropdownItems","push","DropdownItem","searchParams","portfolio","SHARE_PORTFOLIO_ROUTE","preserveHash","EDIT_PORTFOLIO_WORKFLOW_ROUTE","EDIT_PORTFOLIO_ROUTE","REMOVE_PORTFOLIO_ROUTE","Dropdown","isPlain","onSelect","position","DropdownPosition","right","toggle","KebabToggle","onToggle","PortfolioCard","imageUrl","name","user_capabilities","metadata","PORTFOLIO_ROUTE","CardHeader","small","DateFormat","date","updated_at","created_at","owner","CardFooter","history","object","createPortfolioToolbarSchema","fetchPortfolios","userPermissions","filterProps","searchValue","onFilterChange","placeholder","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","noData","LEVEL","TOOLBAR","FILTER_TOOLBAR_ITEM","isClearable","LEVEL_ITEM","debouncedFilter","asyncFormValidator","filter","dispatch","filteringCallback","defaultSettings","fetchPortfoliosWithState","then","initialState","filterValue","isFetching","isFiltering","portfoliosState","state","action","payload","Portfolios","viewState","useInitialUriHash","useReducer","stateDispatch","useSelector","portfolioReducer","portfolios","data","useDispatch","useContext","UserContext","permissions","useHistory","useEffect","scrollToTop","insights","chrome","appNavClick","secondaryNav","handleFilterItems","value","copyPortfolio","emptyStateProps","ADD_PORTFOLIO_ROUTE","Button","WrenchIcon","SearchIcon","galleryItems","schema","_","dropDirection"],"mappings":"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","file":"js/portfolios~3d9b8e9e.221953c21b27f8c3a531.js","sourcesContent":["import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ContentGalleryEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <div className=\"pf-u-mt-xl\">\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={Icon} />\n      <TextContent>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </TextContent>\n      <EmptyStateBody>\n        {description}\n        {renderDescription()}\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        {PrimaryAction && <PrimaryAction />}\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </div>\n);\n\nContentGalleryEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nContentGalleryEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default ContentGalleryEmptyState;\n\nexport const EmptyStatePrimaryAction = ({\n  url,\n  label,\n  hasPermission = false,\n  id\n}) =>\n  hasPermission && (\n    <CatalogLink id={id} pathname={url} preserveSearch>\n      <Button variant=\"primary\">{label}</Button>\n    </CatalogLink>\n  );\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  hasPermission: PropTypes.bool\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst CardPropText = styled.div`\n  overflow: hidden;\n`;\n\nconst ItemDetails = ({ toDisplay = [], ...item }) =>\n  toDisplay.map((prop) => (\n    <CardPropText key={`card-prop-${prop}`}>{item[prop]}</CardPropText>\n  ));\n\nItemDetails.propTypes = {\n  toDisplay: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.arrayOf(PropTypes.node)\n    ])\n  )\n};\n\nItemDetails.defaultProps = {\n  toDisplay: []\n};\n\nexport default ItemDetails;\n","import styled from 'styled-components';\n\nconst EllipsisTextContainer = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nexport default EllipsisTextContainer;\n","import styled from 'styled-components';\nimport { CardBody } from '@patternfly/react-core';\n\nexport const StyledCardBody = styled(CardBody)`\n  height: 230px;\n  overflow: hidden;\n  padding: 0 !important;\n  margin: 0 24px 24px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Card, GalleryItem } from '@patternfly/react-core';\n\nexport const StyledCard = styled(Card)`\n  height: 330px;\n  position: relative;\n`;\n\nexport const StyledGalleryItem = styled(({ isDisabled, ...props }) => (\n  <GalleryItem {...props} />\n))`\n  position: relative;\n  ::after {\n    display: ${({ isDisabled }) => (isDisabled ? 'block' : 'none')};\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    content: '';\n    background-color: rgba(210, 210, 210, 0.5);\n    z-index: 1;\n    cursor: progress;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport { Text, TextVariants, Gallery } from '@patternfly/react-core';\n\nimport { CardLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst NoItems = () => (\n  <div>\n    <Text component={TextVariants.h1}>No items found</Text>\n  </div>\n);\n\nconst ContentGallery = ({ isLoading, items, renderEmptyState }) =>\n  isLoading ? (\n    <CardLoader />\n  ) : items.length === 0 ? (\n    renderEmptyState ? (\n      renderEmptyState()\n    ) : (\n      <NoItems />\n    )\n  ) : (\n    <Section type=\"content\">\n      <Gallery hasGutter className=\"content-gallery\">\n        {items}\n      </Gallery>\n    </Section>\n  );\n\nContentGallery.propTypes = {\n  isLoading: PropTypes.bool,\n  items: PropTypes.array,\n  renderEmptyState: PropTypes.func\n};\nexport default ContentGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    {children}\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","import { toolbarComponentTypes } from './toolbar-mapper';\n\nexport const createSingleItemGroup = ({\n  groupName,\n  hidden = false,\n  ...item\n}) => ({\n  component: toolbarComponentTypes.TOOLBAR_GROUP,\n  key: `${groupName}/single-toolbar-item-group`,\n  fields: hidden\n    ? []\n    : [\n        {\n          component: toolbarComponentTypes.TOOLBAR_ITEM,\n          key: `${groupName}/single-toolbar-item`,\n          fields: [item]\n        }\n      ]\n});\n\nexport const createLinkButton = ({ pathname, preserveSearch, ...item }) => ({\n  component: toolbarComponentTypes.LINK,\n  pathname,\n  preserveSearch,\n  key: `${item.key}/button-link`,\n  isDisabled: item.isDisabled,\n  fields: [\n    {\n      component: toolbarComponentTypes.BUTTON,\n      ...item\n    }\n  ]\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport styled from 'styled-components';\n\nconst HeaderTitle = styled(LevelItem)`\n  max-width: calc(100% - 44px);\n`;\n\nconst HeaderLevel = styled(Level)`\n  width: 100%;\n`;\n\nconst PortfolioCardHeader = ({ id, to, portfolioName, headerActions }) => (\n  <HeaderLevel>\n    <HeaderTitle className=\"pf-m-grow\">\n      <TextContent>\n        <Link to={to} id={`portfolio-link-${id}`}>\n          <Text\n            title={portfolioName}\n            className=\"pf-u-mb-0\"\n            component={TextVariants.h3}\n          >\n            <EllipsisTextContainer>{portfolioName}</EllipsisTextContainer>\n          </Text>\n        </Link>\n      </TextContent>\n    </HeaderTitle>\n    <LevelItem onClick={(event) => event.preventDefault()}>\n      {headerActions}\n    </LevelItem>\n  </HeaderLevel>\n);\n\nPortfolioCardHeader.propTypes = {\n  portfolioName: PropTypes.string.isRequired,\n  headerActions: PropTypes.node,\n  id: PropTypes.string,\n  to: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string.isRequired\n  }).isRequired\n};\n\nPortfolioCardHeader.defaultProps = {\n  headerActions: []\n};\n\nexport default PortfolioCardHeader;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ItemDetails from '../shared/card-common';\nimport {\n  CardHeader,\n  CardFooter,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\nimport PortfolioCardHeader from './portfolio-card-header';\n\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport {\n  SHARE_PORTFOLIO_ROUTE,\n  EDIT_PORTFOLIO_WORKFLOW_ROUTE,\n  EDIT_PORTFOLIO_ROUTE,\n  REMOVE_PORTFOLIO_ROUTE,\n  PORTFOLIO_ROUTE\n} from '../../constants/routes';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../styled-components/styled-gallery';\nimport { StyledCardBody } from '../styled-components/card';\n\nconst TO_DISPLAY = ['description'];\n\nconst HeaderActions = ({\n  portfolioId,\n  handleCopyPortfolio,\n  userCapabilities: { share, copy, unshare, update, destroy, set_approval }\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const dropdownItems = [];\n  if (share || unshare) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"share-portfolio-action\"\n        id=\"share-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={SHARE_PORTFOLIO_ROUTE}\n            preserveHash\n          >\n            Share\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  if (copy) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"copy-portfolio-action\"\n        id=\"copy-portfolio-action\"\n        onClick={() => handleCopyPortfolio(portfolioId)}\n      >\n        Copy\n      </DropdownItem>\n    );\n  }\n\n  if (set_approval) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"workflow-portfolio-action\"\n        id=\"workflow-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={EDIT_PORTFOLIO_WORKFLOW_ROUTE}\n            preserveHash\n          >\n            Set approval\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"edit-portfolio-action\"\n        id=\"edit-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={EDIT_PORTFOLIO_ROUTE}\n            preserveHash\n          >\n            Edit\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  if (destroy) {\n    dropdownItems.push(\n      <DropdownItem\n        key=\"remove-portfolio-action\"\n        id=\"remove-portfolio-action\"\n        component={\n          <CatalogLink\n            searchParams={{ portfolio: portfolioId }}\n            pathname={REMOVE_PORTFOLIO_ROUTE}\n            preserveHash\n          >\n            Delete\n          </CatalogLink>\n        }\n      />\n    );\n  }\n\n  return dropdownItems.length === 0 ? null : (\n    <Dropdown\n      key=\"portfolio-dropdown\"\n      id={`portfolio-${portfolioId}-dropdown`}\n      isOpen={isOpen}\n      isPlain\n      onSelect={() => setOpen(false)}\n      position={DropdownPosition.right}\n      toggle={\n        <KebabToggle\n          id={`portfolio-${portfolioId}-toggle`}\n          onToggle={(isOpen) => setOpen(isOpen)}\n        />\n      }\n      dropdownItems={dropdownItems}\n    />\n  );\n};\n\nHeaderActions.propTypes = {\n  portfolioId: PropTypes.string.isRequired,\n  userCapabilities: PropTypes.shape({\n    destroy: PropTypes.bool,\n    update: PropTypes.bool,\n    share: PropTypes.bool,\n    unshare: PropTypes.bool,\n    set_approval: PropTypes.bool,\n    copy: PropTypes.bool\n  }).isRequired,\n  handleCopyPortfolio: PropTypes.func.isRequired\n};\n\nconst PortfolioCard = ({\n  imageUrl,\n  isDisabled,\n  name,\n  id,\n  handleCopyPortfolio,\n  metadata: { user_capabilities },\n  ...props\n}) => {\n  const to = {\n    pathname: PORTFOLIO_ROUTE,\n    search: `?portfolio=${id}`\n  };\n  return (\n    <StyledGalleryItem isDisabled={isDisabled}>\n      <StyledCard>\n        <CardHeader>\n          <PortfolioCardHeader\n            id={id}\n            to={to}\n            portfolioName={name}\n            headerActions={\n              <HeaderActions\n                portfolioId={id}\n                userCapabilities={user_capabilities}\n                handleCopyPortfolio={handleCopyPortfolio}\n              />\n            }\n          />\n        </CardHeader>\n        <StyledCardBody>\n          <TextContent className=\"pf-u-mb-md\">\n            <Text component={TextVariants.small} className=\"pf-i-mb-sm\">\n              Last updated&nbsp;\n              <DateFormat\n                date={props.updated_at || props.created_at}\n                type=\"relative\"\n              />\n            </Text>\n            <Text component={TextVariants.small}>{props.owner}</Text>\n          </TextContent>\n          <ItemDetails\n            {...{ name, imageUrl, ...props }}\n            toDisplay={TO_DISPLAY}\n          />\n        </StyledCardBody>\n        <CardFooter />\n      </StyledCard>\n    </StyledGalleryItem>\n  );\n};\n\nPortfolioCard.propTypes = {\n  history: PropTypes.object,\n  imageUrl: PropTypes.string,\n  name: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  updated_at: PropTypes.string,\n  created_at: PropTypes.string.isRequired,\n  owner: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  metadata: PropTypes.shape({ user_capabilities: PropTypes.object.isRequired })\n    .isRequired,\n  handleCopyPortfolio: PropTypes.func.isRequired\n};\n\nexport default PortfolioCard;\n","import { toolbarComponentTypes } from '../toolbar-mapper';\nimport { createSingleItemGroup, createLinkButton } from '../helpers';\nimport { hasPermission } from '../../helpers/shared/helpers';\n\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nconst createPortfolioToolbarSchema = ({\n  meta,\n  fetchPortfolios,\n  userPermissions,\n  filterProps: { searchValue, onFilterChange, placeholder }\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'portfolios-top-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'portfolios-toolbar-title',\n          title: 'Portfolios',\n          noData: meta.noData\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'portfolios-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'main-portfolio-toolbar',\n                  fields: [\n                    createSingleItemGroup({\n                      groupName: 'filter-group',\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      key: 'filter-input',\n                      searchValue,\n                      onFilterChange,\n                      placeholder,\n                      isClearable: true\n                    }),\n                    createSingleItemGroup({\n                      hidden:\n                        meta.count === 0 ||\n                        !hasPermission(userPermissions, [\n                          'catalog:portfolios:create'\n                        ]),\n                      groupName: 'portfolio-button-group',\n                      key: 'create-portfolio',\n                      ...createLinkButton({\n                        pathname: '/portfolios/add-portfolio',\n                        variant: 'primary',\n                        key: 'create-portfolio-button',\n                        'aria-label': 'Create portfolio',\n                        title: 'Create'\n                      })\n                    })\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            isCompact: true,\n                            key: 'portfolios-pagination',\n                            meta,\n                            apiRequest: fetchPortfolios\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","import React, { Fragment, useEffect, useReducer, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { SearchIcon, WrenchIcon } from '@patternfly/react-icons';\nimport { Button } from '@patternfly/react-core';\n\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport {\n  fetchPortfoliosWithState,\n  copyPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport PortfolioCard from '../../presentational-components/portfolio/porfolio-card';\nimport createPortfolioToolbarSchema from '../../toolbar/schemas/portfolios-toolbar.schema';\nimport ContentGalleryEmptyState, {\n  EmptyStatePrimaryAction\n} from '../../presentational-components/shared/content-gallery-empty-state';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport { ADD_PORTFOLIO_ROUTE, PORTFOLIO_ROUTE } from '../../constants/routes';\nimport UserContext from '../../user-context';\nimport { hasPermission } from '../../helpers/shared/helpers';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\n\nconst debouncedFilter = asyncFormValidator(\n  (filter, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(fetchPortfoliosWithState({ ...meta, filter })).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst portfoliosState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n  }\n\n  return state;\n};\n\nconst Portfolios = () => {\n  const viewState = useInitialUriHash();\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch] = useReducer(\n    portfoliosState,\n    {\n      ...initialState,\n      filterValue: viewState?.portfolio?.filter || ''\n    }\n  );\n  const { data, meta } = useSelector(\n    ({ portfolioReducer: { portfolios } }) => portfolios\n  );\n  const dispatch = useDispatch();\n  const { permissions: userPermissions } = useContext(UserContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(fetchPortfoliosWithState(viewState?.portfolio)).then(() =>\n      stateDispatch({ type: 'setFetching', payload: false })\n    );\n    scrollToTop();\n    insights.chrome.appNavClick({ id: 'portfolios', secondaryNav: true });\n  }, []);\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const handleCopyPortfolio = (id) =>\n    dispatch(copyPortfolio(id)).then(({ id }) =>\n      history.push({\n        pathname: PORTFOLIO_ROUTE,\n        search: `?portfolio=${id}`\n      })\n    );\n\n  const NoDataAction = () => (\n    <EmptyStatePrimaryAction\n      url={ADD_PORTFOLIO_ROUTE}\n      id=\"create-portfolio\"\n      label=\"Create portfolio\"\n      hasPermission={hasPermission(userPermissions, [\n        'catalog:portfolios:create'\n      ])}\n    />\n  );\n\n  const FilterAction = () => (\n    <Button variant=\"link\" onClick={() => handleFilterItems('')}>\n      Clear all filters\n    </Button>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? NoDataAction : FilterAction,\n    title: meta.noData ? 'No portfolios' : 'No results found',\n    description: meta.noData\n      ? 'No portfolios match your filter criteria.'\n      : 'No results match the filter criteria. Remove all filters or clear all filters to show results.',\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n\n  const galleryItems = data.map((item) => (\n    <PortfolioCard\n      key={item.id}\n      {...item}\n      handleCopyPortfolio={handleCopyPortfolio}\n    />\n  ));\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPortfolioToolbarSchema({\n          meta,\n          userPermissions,\n          fetchPortfolios: (_, options) =>\n            dispatch(\n              fetchPortfoliosWithState({ filter: filterValue, ...options })\n            ),\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterItems,\n            placeholder: 'Filter by portfolio'\n          }\n        })}\n      />\n      <ContentGallery\n        items={galleryItems}\n        isLoading={isFetching || isFiltering}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState {...emptyStateProps} />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            meta={meta}\n            apiRequest={(_, options) =>\n              dispatch(\n                fetchPortfoliosWithState({ filter: filterValue, ...options })\n              )\n            }\n            dropDirection=\"up\"\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Portfolios;\n"],"sourceRoot":""}