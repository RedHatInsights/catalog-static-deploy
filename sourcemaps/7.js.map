{"version":3,"sources":["webpack:///./src/PresentationalComponents/Portfolio/portfoliocard.scss?0013","webpack:///./src/PresentationalComponents/Portfolio/portfoliocard.scss","webpack:///./src/assets/images/default-portfolio.jpg","webpack:///./src/PresentationalComponents/Portfolio/portfolio-card-header.js","webpack:///./src/PresentationalComponents/Portfolio/PorfolioCard.js","webpack:///./src/PresentationalComponents/Portfolio/PortfoliosFilterToolbar.js","webpack:///./src/SmartComponents/Portfolio/Portfolios.js"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","p","PortfolioCardHeader","_ref","backgroundSrc","portfolioName","headerActions","react_default","a","createElement","className","style","backgroundImage","concat","Toolbar","ToolbarGroup","marginLeft","paddingBottom","Text","component","TextVariants","h4","propTypes","PropTypes","string","isRequired","arrayOf","node","defaultProps","DefaultPortfolioImg","TO_DISPLAY","PortfolioCard","portfolioId","imageUrl","name","id","props","objectWithoutProperties_default","GridItem","sm","md","lg","xl","Link","to","Card","CardHeader","portfolio_card_header","key","Button","variant","aria-label","edit_alt_icon","fill","trash_icon","CardBody","CardCommon","extends_default","objectSpread_default","toDisplay","CardFooter","history","object","PortfoliosFilterToolbar","onFilterChange","filterValue","top_toolbar","Level","LevelItem","FilterToolbarItem","searchValue","placeholder","OrderToolbarItem","func","Portfolios","filteredItems","isOpen","_this","fetchPortfolios","setState","this","fetchData","scrollToTop","TextContent","h2","_this2","items","portfolios","filter","toLowerCase","includes","state","trim","map","item","PorfolioCard","isLoading","length","react","Portfolio_PortfoliosFilterToolbar","Route","exact","path","AddPortfolio","RemovePortfolio","renderToolbar","ContentGallery","Component","array","platforms","bool","searchFilter","showModal","connect","_ref2","_ref2$portfolioReduce","portfolioReducer","dispatch","apiProps"],"mappings":"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","file":"js/7.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./portfoliocard.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./portfoliocard.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./portfoliocard.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../node_modules/css-loader/index.js!@red-hat-insights/insights-frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \"/* stylelint-enable */\\n:root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\nul.navigation-secondary {\\n  margin-top: 20px; }\\n  ul.navigation-secondary li {\\n    cursor: pointer;\\n    font-size: 15px;\\n    width: 100%;\\n    box-shadow: none;\\n    padding: 5px 0;\\n    color: #1d1d1d; }\\n    ul.navigation-secondary li span {\\n      margin-left: 50px; }\\n    ul.navigation-secondary li:active, ul.navigation-secondary li.active {\\n      background: #f5f5f5;\\n      color: var(--pf-global--link--Color); }\\n    ul.navigation-secondary li:hover {\\n      color: var(--pf-global--link--Color); }\\n\\n.elipsis-text-overflow {\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden; }\\n\\n.toolbar-padding {\\n  padding: 24px 24px 0 24px; }\\n\\n.card-link, .card-link:hover, .card-link:active {\\n  text-decoration: none !important;\\n  cursor: pointer !important;\\n  color: #282d33 !important;\\n  font-weight: 400 !important; }\\n\\n.text-align-right {\\n  text-align: right; }\\n\\n.w-100 {\\n  width: 100%; }\\n\\n.align-items-base {\\n  align-items: baseline; }\\n\\n.modal-form-right-align .pf-m-action:last-child .data-driven-forms__pf4-button-group:first-child {\\n  margin-left: auto; }\\n\\n.line-clamp {\\n  display: -webkit-box;\\n  -webkit-line-clamp: 6;\\n  -webkit-box-orient: vertical;\\n  overflow: hidden;\\n  word-wrap: break-word; }\\n\\n.card-image-header {\\n  padding: 0 !important; }\\n\\n.portfolio-card-header {\\n  min-height: 100px;\\n  max-height: 200px;\\n  background-size: stretch;\\n  color: white;\\n  padding: 8px 24px; }\\n\", \"\"]);\n\n// exports\n","module.exports = __webpack_public_path__ + \"fonts/default-portfolio.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants, Toolbar, ToolbarGroup } from '@patternfly/react-core';\nimport DefaultPortfolioImg from '../../assets/images/default-portfolio.jpg';\n\nimport './portfoliocard.scss';\n\nconst PortfolioCardHeader = ({ backgroundSrc, portfolioName, headerActions }) => (\n  <div className=\"portfolio-card-header\" style={ { backgroundImage: `url(${backgroundSrc})` } }>\n    <Toolbar>\n      <ToolbarGroup style={ {\n        marginLeft: 'auto',\n        paddingBottom: 16\n      } }>\n        { headerActions }\n      </ToolbarGroup>\n    </Toolbar>\n    <Text className=\"elipsis-text-overflow\" component={ TextVariants.h4 }>{ portfolioName }</Text>\n  </div>\n);\n\nPortfolioCardHeader.propTypes = {\n  backgroundSrc: PropTypes.string,\n  portfolioName: PropTypes.string.isRequired,\n  headerActions: PropTypes.arrayOf(PropTypes.node)\n};\n\nPortfolioCardHeader.defaultProps = {\n  backgroundSrc: DefaultPortfolioImg,\n  headerActions: []\n};\n\nexport default PortfolioCardHeader;\n","import React from 'react';\nimport './portfoliocard.scss';\nimport propTypes from 'prop-types';\nimport ItemDetails from '../Shared/CardCommon';\nimport { Link } from 'react-router-dom';\nimport { GridItem, Card, CardHeader, CardBody, CardFooter, Button } from '@patternfly/react-core';\nimport { EditAltIcon, TrashIcon } from '@patternfly/react-icons';\nimport PortfolioCardHeader from './portfolio-card-header';\n\nconst TO_DISPLAY = [ 'description', 'modified' ];\nconst ICON_FILL = 'white';\n\nconst createToolbarActions = (portfolioName, portfolioId) => [\n  <Link key=\"edit-portfolio-action\" to={ `/portfolios/edit/${portfolioId}` }>\n    <Button\n      variant=\"plain\"\n      aria-label={ `edit-portfolio-${portfolioName}` }\n    >\n      <EditAltIcon fill={ ICON_FILL } />\n    </Button>\n  </Link>,\n  <Link key=\"remove-portfolio-action\" to={ `/portfolios/remove/${portfolioId}` }>\n    <Button\n      key=\"remove-portfolio-action\"\n      variant=\"plain\"\n      aria-label={ `remove-portfolio-${portfolioName}` }\n    >\n      <TrashIcon fill={ ICON_FILL } />\n    </Button>\n  </Link>\n];\n\nconst PortfolioCard = ({ imageUrl, name, id, ...props }) => (\n  <GridItem sm={ 6 } md={ 4 } lg={ 4 } xl={ 3 }>\n    <Link className=\"card-link\" to={ `/portfolio/${id}` }>\n      <Card>\n        <CardHeader className=\"card-image-header\">\n          <PortfolioCardHeader\n            portfolioName={ name }\n            headerActions={ createToolbarActions(name, id) }\n          />\n        </CardHeader>\n        <CardBody>\n          <ItemDetails { ...{ name, imageUrl, ...props } } toDisplay={ TO_DISPLAY } />\n        </CardBody>\n        <CardFooter/>\n      </Card>\n    </Link>\n  </GridItem>\n);\n\nPortfolioCard.propTypes = {\n  history: propTypes.object,\n  imageUrl: propTypes.string,\n  name: propTypes.string,\n  id: propTypes.string\n};\n\nexport default PortfolioCard;\n","import React from 'react';\nimport { Level, LevelItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport OrderToolbarItem from '../Shared/OrderToolbarItem';\nimport FilterToolbarItem from '../Shared/FilterToolbarItem';\nimport TopToolbar from '../Shared/top-toolbar';\nimport '../Shared/toolbarschema.scss';\n\nconst PortfoliosFilterToolbar = ({ onFilterChange, filterValue, ...props }) => (\n  <TopToolbar>\n    <Level>\n      <LevelItem>\n        <FilterToolbarItem { ...props } searchValue={ filterValue } onFilterChange={ onFilterChange } placeholder=\"Find a Portfolio\" />\n      </LevelItem>\n      <LevelItem>\n        <OrderToolbarItem { ...props }/>\n      </LevelItem>\n    </Level>\n  </TopToolbar>\n);\n\nPortfoliosFilterToolbar.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  filterValue: PropTypes.string\n};\n\nexport default PortfoliosFilterToolbar;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { Route, Link } from 'react-router-dom';\nimport { Level, LevelItem, Text, TextContent, TextVariants, Button } from '@patternfly/react-core';\nimport ContentGallery from '../../SmartComponents/ContentGallery/ContentGallery';\nimport PortfolioCard from '../../PresentationalComponents/Portfolio/PorfolioCard';\nimport PortfoliosFilterToolbar from '../../PresentationalComponents/Portfolio/PortfoliosFilterToolbar';\nimport { fetchPortfolios } from '../../redux/Actions/PortfolioActions';\nimport AddPortfolio from './add-portfolio-modal';\nimport RemovePortfolio from './remove-portfolio-modal';\nimport './portfolio.scss';\nimport { scrollToTop } from '../../Helpers/Shared/helpers';\n\nclass Portfolios extends Component {\n    state = {\n      filteredItems: [],\n      isOpen: false,\n      filterValue: ''\n    };\n\n    fetchData = () => {\n      this.props.fetchPortfolios();\n    };\n\n    componentDidMount() {\n      this.fetchData();\n      scrollToTop();\n    }\n\n    onFilterChange = filterValue => this.setState({ filterValue })\n\n    renderToolbar() {\n      return (\n        <Level className=\"pf-u-pt-md pf-u-pr-xl pf-u-pl-xl\">\n          <LevelItem>\n            <TextContent>\n              <Text component={ TextVariants.h2 }>All Portfolios</Text>\n            </TextContent>\n          </LevelItem>\n          <LevelItem>\n            <Link to=\"/portfolios/add-portfolio\">\n              <Button\n                variant=\"primary\"\n                aria-label=\"Create portfolio\"\n              >\n                Create portfolio\n              </Button>\n            </Link>\n          </LevelItem>\n        </Level>\n      );\n    }\n\n    render() {\n      let filteredItems = {\n        items: this.props.portfolios\n        .filter(({ name }) => name.toLowerCase().includes(this.state.filterValue.trim().toLowerCase()))\n        .map(item => <PortfolioCard key={ item.id } { ...item } />),\n        isLoading: this.props.isLoading && this.props.portfolios.length === 0\n      };\n\n      return (\n        <Fragment>\n          <PortfoliosFilterToolbar onFilterChange={ this.onFilterChange } filterValue={ this.state.filterValue }/>\n          <Route exact path=\"/portfolios/add-portfolio\" component={ AddPortfolio } />\n          <Route exact path=\"/portfolios/edit/:id\" component={ AddPortfolio } />\n          <Route exact path=\"/portfolios/remove/:id\" component={ RemovePortfolio } />\n          { this.renderToolbar() }\n          <ContentGallery { ...filteredItems } />\n        </Fragment>\n      );\n    }\n}\n\nconst mapStateToProps = ({ portfolioReducer: { portfolios, isLoading, filterValue }}) => ({\n  portfolios,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPortfolios: apiProps => dispatch(fetchPortfolios(apiProps))\n});\n\nPortfolios.propTypes = {\n  filteredItems: propTypes.array,\n  portfolios: propTypes.array,\n  platforms: propTypes.array,\n  isLoading: propTypes.bool,\n  searchFilter: propTypes.string,\n  showModal: propTypes.func,\n  fetchPortfolios: propTypes.func.isRequired\n};\n\nPortfolios.defaultProps = {\n  portfolios: []\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Portfolios);\n"],"sourceRoot":""}