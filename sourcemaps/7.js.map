{"version":3,"sources":["webpack:///./src/PresentationalComponents/Shared/top-toolbar.js","webpack:///./src/PresentationalComponents/Shared/top-toolbar.scss?4f36","webpack:///./src/PresentationalComponents/Shared/top-toolbar.scss","webpack:///./src/Helpers/Order/OrderHelper.js","webpack:///./src/redux/Actions/OrderActions.js","webpack:///./src/SmartComponents/Order/orders.scss?30b1","webpack:///./src/SmartComponents/Order/orders.scss","webpack:///./src/SmartComponents/Order/orders-toolbar.js","webpack:///./src/SmartComponents/Order/Orders.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","TopToolbar","_ref","children","paddingBottom","a","createElement","className","concat","propTypes","PropTypes","oneOfType","arrayOf","node","isRequired","bool","defaultProps","content","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","api","ServicePortalApi","getServicePlans","portfolioItemId","fetchPlansWithPortfolioItemId","then","data","error","console","_callee","parameters","order","orderItem","regenerator_default","wrap","_context","prev","next","newOrder","sent","count","provider_control_parameters","namespace","portfolio_item_id","service_plan_ref","service_parameters","addToOrder","id","abrupt","submitOrder","result","stop","this","instance","basePath","SERVICE_PORTAL_API_BASE","d","__webpack_exports__","OrderActions_fetchServicePlans","OrderActions_fetchOrderList","OrderActions_sendSubmitOrder","fetchServicePlans","type","ActionTypes","payload","OrderHelper","fetchOrderList","listOrders","sendSubmitOrder","apiProps","Promise","resolve","_x","_sendSubmitOrder","apply","arguments","OrdersToolbar","path","match","react_default","top_toolbar","ToolbarSection","aria-label","ToolbarGroup","ToolbarItem","Breadcrumb","BreadcrumbItem","isActive","NavLink","exact","to","TextContent","Text","component","TextVariants","h1","shape","string","withRouter","Orders","orders","activeTabKey","dataListExpanded","_event","_this","setState","objectSpread_default","defineProperty_default","map","item","index","DataListItem","key","aria-labelledby","isExpanded","state","DataListToggle","onClick","handleDataItemToggle","DataListCell","h4","style","marginBottom","small","created_at","toString","alignSelf","h5","DataListContent","isHidden","_this2","props","fetchOrders","orderList","items","isLoading","_this$state","orders_toolbar","Tabs","activeKey","onSelect","handleTabClick","Tab","eventKey","title","DataList","renderDataListItems","Component","object","searchFilter","func","connect","_ref2","_ref2$orderReducer","orderReducer","dispatch"],"mappings":"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","file":"js/7.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './top-toolbar.scss';\n\nconst TopToolbar = ({ children, paddingBottom }) => (\n  <div className={ `pf-u-pt-xl pf-u-pr-xl pf-u-pl-xl ${paddingBottom ? 'pf-u-pb-xl' : ''} top-toolbar` }>\n    { children }\n  </div>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  paddingBottom: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: true\n};\n\nexport default TopToolbar;\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./top-toolbar.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./top-toolbar.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./top-toolbar.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".top-toolbar {\\n  background-color: #FFFFFF; }\\n  .top-toolbar .pf-c-breadcrumb__item .active {\\n    color: var(--pf-c-breadcrumb__item--Color);\\n    text-decoration: none;\\n    pointer-events: none; }\\n  .top-toolbar h2 {\\n    margin-bottom: 0 !important; }\\n\", \"\"]);\n\n// exports\n","/* eslint camelcase: 0 */\nimport * as ServicePortalApi from '@manageiq/service-portal-api';\nimport { SERVICE_PORTAL_API_BASE } from '../../Utilities/Constants';\n\nlet api = new ServicePortalApi.AdminsApi();\n\nconst sspDefaultClient = ServicePortalApi.ApiClient.instance;\nsspDefaultClient.basePath = SERVICE_PORTAL_API_BASE;\n\nexport function getServicePlans(portfolioItemId) {\n  return api.fetchPlansWithPortfolioItemId(portfolioItemId).then(data => data, error => console.error(error));\n}\n\nexport function listOrders() {\n  return api.listOrders().then(data => data, error => console.error(error));\n}\n\nexport async function sendSubmitOrder(parameters) {\n  let order = await api.newOrder();\n  let orderItem = new ServicePortalApi.OrderItem;\n  orderItem.count = 1;\n  orderItem.provider_control_parameters =  { namespace: 'default' };\n  orderItem.portfolio_item_id = parameters.portfolio_item_id;\n  orderItem.service_plan_ref = parameters.service_plan_ref;\n  orderItem.service_parameters = parameters.service_parameters;\n  await api.addToOrder(order.id, orderItem);\n  return api.submitOrder(order.id).then(result => result, error => console.error(error));\n}\n","import * as ActionTypes from '../ActionTypes';\nimport * as OrderHelper from '../../Helpers/Order/OrderHelper';\n\nexport const fetchServicePlans = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_SERVICE_PLANS,\n  payload: OrderHelper.getServicePlans(portfolioItemId)\n});\n\nexport const fetchOrderList = () => ({\n  type: ActionTypes.LIST_ORDERS,\n  payload: OrderHelper.listOrders().then(({ data }) => data)\n});\n\nexport const updateServiceData = (data) => ({\n  type: ActionTypes.UPDATE_SERVICE_DATA,\n  payload: { serviceData: data }\n});\n\nexport const setSelectedPlan = (data) => ({\n  type: ActionTypes.SET_SELECTED_PLAN,\n  payload: data\n});\n\nexport const sendSubmitOrder = apiProps => ({\n  type: ActionTypes.SUBMIT_SERVICE_ORDER,\n  payload: new Promise(resolve => {\n    resolve(OrderHelper.sendSubmitOrder(apiProps));\n  })\n});\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./orders.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./orders.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./orders.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../node_modules/css-loader/index.js!@red-hat-insights/insights-frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \"/* stylelint-enable */\\n:root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\nul.navigation-secondary {\\n  margin-top: 20px; }\\n  ul.navigation-secondary li {\\n    cursor: pointer;\\n    font-size: 15px;\\n    width: 100%;\\n    box-shadow: none;\\n    padding: 5px 0;\\n    color: #1d1d1d; }\\n    ul.navigation-secondary li span {\\n      margin-left: 50px; }\\n    ul.navigation-secondary li:active, ul.navigation-secondary li.active {\\n      background: #f5f5f5;\\n      color: var(--pf-global--link--Color); }\\n    ul.navigation-secondary li:hover {\\n      color: var(--pf-global--link--Color); }\\n\\n.elipsis-text-overflow {\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden; }\\n\\n.toolbar-padding {\\n  padding: 24px 24px 0 24px; }\\n\\n.card-link {\\n  cursor: pointer; }\\n  .card-link:hover {\\n    text-decoration: none; }\\n\\n.text-align-right {\\n  text-align: right; }\\n\\n.w-100 {\\n  width: 100%; }\\n\\n.align-items-base {\\n  align-items: baseline; }\\n\\n.modal-form-right-align .pf-m-action:last-child .data-driven-forms__pf4-button-group:first-child {\\n  margin-left: auto; }\\n\\n.order-tabs {\\n  background-color: #FFFFFF;\\n  padding: 32px 32px 0 32px; }\\n  .order-tabs li {\\n    padding: initial; }\\n\\n.order-data-list .order-cell {\\n  align-self: center; }\\n\", \"\"]);\n\n// exports\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  ToolbarGroup,\n  ToolbarSection,\n  ToolbarItem,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport TopToolbar from '../../PresentationalComponents/Shared/top-toolbar';\nimport './orders.scss';\n\nconst OrdersToolbar = ({ match: { path }}) => (\n  <TopToolbar paddingBottom={ false }>\n    <ToolbarSection aria-label=\"order-toolbar-breadcrumbs\">\n      <ToolbarGroup>\n        <ToolbarItem>\n          <Breadcrumb>\n            <BreadcrumbItem isActive={ path === '/portfolios' }>\n              <NavLink exact to=\"/portfolios\">All Portfolios</NavLink>\n            </BreadcrumbItem>\n            <BreadcrumbItem isActive={ path === '/orders' }>\n              <NavLink exact to=\"/orders\">Orders</NavLink>\n            </BreadcrumbItem>\n          </Breadcrumb>\n        </ToolbarItem>\n      </ToolbarGroup>\n    </ToolbarSection>\n    <ToolbarSection aria-label=\"order-toolbar-heading\">\n      <ToolbarGroup>\n        <ToolbarItem>\n          <TextContent>\n            <Text component={ TextVariants.h1 }>Orders</Text>\n          </TextContent>\n        </ToolbarItem>\n      </ToolbarGroup>\n    </ToolbarSection>\n  </TopToolbar>\n);\n\nOrdersToolbar.propTypes = {\n  match: PropTypes.shape({\n    path: PropTypes.string.isRequired\n  }).isRequired\n};\n\nexport default withRouter(OrdersToolbar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  DataList,\n  DataListItem,\n  DataListCell,\n  DataListToggle,\n  DataListContent,\n  Tabs,\n  Tab,\n  Text,\n  TextVariants,\n  TextContent\n} from '@patternfly/react-core';\nimport { fetchOrderList } from '../../redux/Actions/OrderActions';\nimport propTypes from 'prop-types';\nimport OrdersToolbar from './orders-toolbar';\nimport './orders.scss';\n\nclass Orders extends Component {\n  state = {\n    orders: [],\n    activeTabKey: 0,\n    dataListExpanded: {}\n  }\n\n  componentDidMount() {\n    this.props.fetchOrders()\n    .then(() => this.setState({ orders: this.props.orderList.items }));\n  }\n\n  handleTabClick = (_event, activeTabKey) => this.setState({ activeTabKey })\n\n  handleDataItemToggle = id => this.setState(({ dataListExpanded }) => ({\n    dataListExpanded: { ...dataListExpanded, [id]: !dataListExpanded[id] }\n  }))\n\n  renderDataListItems = data => data.map((item, index) => (\n    <DataListItem key={ item.id } aria-labelledby={ `${item.id}-expand` } isExpanded={ this.state.dataListExpanded[item.id] }>\n      { data.id }\n      <DataListToggle\n        id={ item.id }\n        aria-label={ `${item.id}-expand` }\n        aria-labelledby={ `${item.id}-expand` }\n        onClick={ () => this.handleDataItemToggle(item.id) }\n        isExpanded={ this.state.dataListExpanded[item.id] }\n      />\n      <DataListCell>\n        <TextContent>\n          <Text component={ TextVariants.h4 }>Order { index }</Text>\n          <Text style={ { marginBottom: 0 } } component={ TextVariants.small }>{ item.created_at.toString() }</Text>\n        </TextContent>\n      </DataListCell>\n      <DataListCell className=\"order-cell\" style={ { alignSelf: 'center' } }>\n        <TextContent className=\"text-align-right\">\n          <Text component={ TextVariants.h5 }>{ item.state }</Text>\n        </TextContent>\n      </DataListCell>\n      <DataListContent aria-label={ `${item.id}-content` } isHidden={ !this.state.dataListExpanded[item.id] }>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et\n          dolore magna aliqua.\n        </p>\n      </DataListContent>\n    </DataListItem>\n  ))\n\n  render() {\n    const { isLoading } = this.props.isLoading;\n    if (isLoading) {\n      return <div>Loading</div>;\n    }\n\n    const { orders, activeTabKey } = this.state;\n\n    return (\n      <div>\n        <OrdersToolbar />\n        <div>\n          <Tabs className=\"order-tabs\" activeKey={ activeTabKey } onSelect={ this.handleTabClick }>\n            <Tab eventKey={ 0 } title=\"My orders\" className=\"pf-u-p-lg\">\n              <DataList aria-label=\"all-orders\">\n                { this.renderDataListItems(orders) }\n              </DataList>\n            </Tab>\n            <Tab eventKey={ 1 } title=\"All orders\" className=\"pf-u-p-lg\">\n              <DataList aria-label=\"all-orders\">\n                { this.renderDataListItems(orders) }\n              </DataList>\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ orderReducer: { orders, isLoading }}) => ({\n  orderList: {\n    items: orders\n  },\n  isLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchOrders: () => dispatch(fetchOrderList())\n});\n\nOrders.propTypes = {\n  orderList: propTypes.object,\n  isLoading: propTypes.bool,\n  searchFilter: propTypes.string,\n  fetchOrders: propTypes.func\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\n"],"sourceRoot":""}