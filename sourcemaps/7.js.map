{"version":3,"sources":["webpack:///./src/PresentationalComponents/Portfolio/portfoliocard.scss?0013","webpack:///./src/PresentationalComponents/Portfolio/portfoliocard.scss","webpack:///./src/assets/images/default-portfolio.jpg","webpack:///./src/PresentationalComponents/Portfolio/portfolio-card-header.js","webpack:///./src/PresentationalComponents/Portfolio/PorfolioCard.js","webpack:///./src/PresentationalComponents/Portfolio/PortfoliosFilterToolbar.js","webpack:///./src/SmartComponents/Portfolio/Portfolios.js"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","p","PortfolioCardHeader","_ref","backgroundSrc","portfolioName","headerActions","react_default","a","createElement","className","style","backgroundImage","concat","Toolbar","ToolbarGroup","marginLeft","paddingBottom","Text","component","TextVariants","h4","propTypes","PropTypes","string","isRequired","arrayOf","node","defaultProps","DefaultPortfolioImg","TO_DISPLAY","PortfolioCard","imageUrl","name","id","props","objectWithoutProperties_default","GridItem","sm","md","lg","xl","Card","CardHeader","portfolio_card_header","portfolioId","Link","key","to","Button","variant","aria-label","onClick","console","log","edit_alt_icon","fill","trash_icon","createToolbarActions","CardBody","CardCommon","extends_default","objectSpread_default","toDisplay","CardFooter","history","object","PortfoliosFilterToolbar","FilterToolbarItem","placeholder","OrderToolbarItem","Portfolios","filteredItems","isOpen","_this","fetchPortfolios","showModal","open","closeModal","hideModal","setState","state","this","fetchData","css","flexStyles","justifyContentSpaceBetween","spacingStyles","mxXl","myMd","ToolbarItem","mrXl","Title","size","items","portfolios","map","item","PorfolioCard","isLoading","react","Portfolio_PortfoliosFilterToolbar","Route","exact","path","AddPortfolio","renderToolbar","ContentGallery","Component","array","platforms","bool","searchFilter","func","connect","_ref$portfolioReducer","portfolioReducer","filterValue","dispatch","apiProps","modalProps","modalType"],"mappings":"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","file":"js/7.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./portfoliocard.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./portfoliocard.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./portfoliocard.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../node_modules/css-loader/index.js!@red-hat-insights/insights-frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \"/* stylelint-enable */\\n:root {\\n  --ins-color--orange: #ec7a08; }\\n\\nbutton:focus {\\n  outline: none; }\\n\\nul.navigation-secondary {\\n  margin-top: 20px; }\\n  ul.navigation-secondary li {\\n    cursor: pointer;\\n    font-size: 15px;\\n    width: 100%;\\n    box-shadow: none;\\n    padding: 5px 0;\\n    color: #1d1d1d; }\\n    ul.navigation-secondary li span {\\n      margin-left: 50px; }\\n    ul.navigation-secondary li:active, ul.navigation-secondary li.active {\\n      background: #f5f5f5;\\n      color: var(--pf-global--link--Color); }\\n    ul.navigation-secondary li:hover {\\n      color: var(--pf-global--link--Color); }\\n\\n.elipsis-text-overflow {\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden; }\\n\\n.card-image-header {\\n  padding: 0 !important; }\\n\\n.portfolio-card-header {\\n  min-height: 100px;\\n  max-height: 200px;\\n  background-size: stretch;\\n  color: white;\\n  padding: 8px 24px; }\\n\", \"\"]);\n\n// exports\n","module.exports = __webpack_public_path__ + \"fonts/default-portfolio.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants, Toolbar, ToolbarGroup } from '@patternfly/react-core';\nimport DefaultPortfolioImg from '../../assets/images/default-portfolio.jpg';\n\nimport './portfoliocard.scss';\n\nconst PortfolioCardHeader = ({ backgroundSrc, portfolioName, headerActions }) => (\n  <div className=\"portfolio-card-header\" style={ { backgroundImage: `url(${backgroundSrc})` } }>\n    <Toolbar>\n      <ToolbarGroup style={ {\n        marginLeft: 'auto',\n        paddingBottom: 16\n      } }>\n        { headerActions }\n      </ToolbarGroup>\n    </Toolbar>\n    <Text className=\"elipsis-text-overflow\" component={ TextVariants.h4 }>{ portfolioName }</Text>\n  </div>\n);\n\nPortfolioCardHeader.propTypes = {\n  backgroundSrc: PropTypes.string,\n  portfolioName: PropTypes.string.isRequired,\n  headerActions: PropTypes.arrayOf(PropTypes.node)\n};\n\nPortfolioCardHeader.defaultProps = {\n  backgroundSrc: DefaultPortfolioImg,\n  headerActions: []\n};\n\nexport default PortfolioCardHeader;\n","import React from 'react';\nimport './portfoliocard.scss';\nimport propTypes from 'prop-types';\nimport ItemDetails from '../Shared/CardCommon';\nimport { Link } from 'react-router-dom';\nimport { GridItem, Card, CardHeader, CardBody, CardFooter, Button } from '@patternfly/react-core';\nimport { EditAltIcon, TrashIcon } from '@patternfly/react-icons';\nimport PortfolioCardHeader from './portfolio-card-header';\n\nconst TO_DISPLAY = [ 'description', 'modified' ];\nconst ICON_FILL = 'white';\n\nconst createToolbarActions = (portfolioName, portfolioId) => [\n  <Link key=\"edit-portfolio-action\" to={ `/portfolios/edit/${portfolioId}` }>\n    <Button\n      variant=\"plain\"\n      aria-label={ `edit-portfolio-${portfolioName}` }\n      onClick={ () => console.log('Edit portfolio api helper not available.') }\n    >\n      <EditAltIcon fill={ ICON_FILL } />\n    </Button>\n  </Link>,\n  <Button\n    key=\"remove-portfolio-action\"\n    variant=\"plain\"\n    aria-label={ `remove-portfolio-${portfolioName}` }\n    onClick={ () => console.log('Remove portfolio api helper not available.') }\n  >\n    <TrashIcon fill={ ICON_FILL } />\n  </Button>\n];\n\nconst PortfolioCard = ({ imageUrl, name, id, ...props }) => (\n  <GridItem sm={ 6 } md={ 4 } lg={ 4 } xl={ 3 }>\n    <Card>\n      <CardHeader className=\"card-image-header\">\n        <PortfolioCardHeader\n          portfolioName={ name }\n          headerActions={ createToolbarActions(name, id) }\n        />\n      </CardHeader>\n      <CardBody>\n        <ItemDetails { ...{ name, imageUrl, ...props } } toDisplay={ TO_DISPLAY } />\n      </CardBody>\n      <CardFooter/>\n    </Card>\n  </GridItem>\n);\n\nPortfolioCard.propTypes = {\n  history: propTypes.object,\n  imageUrl: propTypes.string,\n  name: propTypes.string,\n  id: propTypes.string\n};\n\nexport default PortfolioCard;\n","import React from 'react';\nimport { Toolbar } from '@patternfly/react-core';\nimport OrderToolbarItem from '../Shared/OrderToolbarItem';\nimport FilterToolbarItem from '../Shared/FilterToolbarItem';\nimport '../Shared/toolbarschema.scss';\n\nconst PortfoliosFilterToolbar = props => (\n  <Toolbar className=\"searchToolbar\">\n    <FilterToolbarItem { ...props } placeholder={ 'Find a Portfolio' }/>\n    <OrderToolbarItem { ...props }/>\n  </Toolbar>\n);\n\nexport default PortfoliosFilterToolbar;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { Route, Link } from 'react-router-dom';\nimport { Toolbar, ToolbarGroup, ToolbarItem, Title, Button } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport spacingStyles from '@patternfly/patternfly-next/utilities/Spacing/spacing.css';\nimport flexStyles from '@patternfly/patternfly-next/utilities/Flex/flex.css';\nimport ContentGallery from '../../SmartComponents/ContentGallery/ContentGallery';\nimport PortfolioCard from '../../PresentationalComponents/Portfolio/PorfolioCard';\nimport PortfoliosFilterToolbar from '../../PresentationalComponents/Portfolio/PortfoliosFilterToolbar';\nimport { fetchPortfolios } from '../../redux/Actions/PortfolioActions';\nimport { hideModal, showModal } from '../../redux/Actions/MainModalActions';\nimport AddPortfolio from './add-portfolio-modal';\nimport './portfolio.scss';\n\nclass Portfolios extends Component {\n    state = {\n      filteredItems: [],\n      isOpen: false\n    };\n\n    fetchData = () => {\n      this.props.fetchPortfolios();\n    };\n\n    componentDidMount() {\n      this.fetchData();\n    }\n\n    renderToolbar() {\n      return (\n        <Toolbar className={ css(flexStyles.justifyContentSpaceBetween, spacingStyles.mxXl, spacingStyles.myMd) }>\n          <ToolbarGroup>\n            <ToolbarItem className={ css(spacingStyles.mrXl) }>\n              <Title size={ '2xl' }> All Portfolios</Title>\n            </ToolbarItem>\n          </ToolbarGroup>\n          <ToolbarGroup  className={ 'pf-u-ml-auto-on-xl' }>\n            <ToolbarItem>\n              <Link to=\"/portfolios/add-portfolio\">\n                <Button\n                  variant=\"primary\"\n                  aria-label=\"Create Portfolio\"\n                >\n                Create Portfolio\n                </Button>\n              </Link>\n            </ToolbarItem>\n          </ToolbarGroup>\n        </Toolbar>\n      );\n    }\n\n    onClickCreatePortfolio = () => {\n      this.props.showModal({\n        open: true,\n        closeModal: this.props.hideModal\n      }, 'addportfolio');\n\n      this.setState({\n        ...this.state,\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    render() {\n      let filteredItems = {\n        items: this.props.portfolios.map((item) => <PortfolioCard key={ item.id } { ...item } />),\n        isLoading: this.props.isLoading\n      };\n      console.log('Portfolios foo');\n\n      return (\n        <Fragment>\n          <PortfoliosFilterToolbar/>\n          <Route exact path=\"/portfolios/add-portfolio\" component={ AddPortfolio } />\n          <Route exact path=\"/portfolios/edit/:id\" component={ AddPortfolio } />\n          { this.renderToolbar() }\n          <ContentGallery { ...filteredItems } />\n        </Fragment>\n      );\n    }\n}\n\nconst mapStateToProps = ({ portfolioReducer: { portfolios, isLoading, filterValue }}) => ({\n  portfolios,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchPortfolios: apiProps => dispatch(fetchPortfolios(apiProps)),\n    hideModal: () => dispatch(hideModal()),\n    showModal: (modalProps, modalType) => {\n      dispatch(showModal({ modalProps, modalType }));\n    }\n  };\n};\n\nPortfolios.propTypes = {\n  filteredItems: propTypes.array,\n  portfolios: propTypes.array,\n  platforms: propTypes.array,\n  isLoading: propTypes.bool,\n  searchFilter: propTypes.string,\n  showModal: propTypes.func,\n  hideModal: propTypes.func,\n  fetchPortfolios: propTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Portfolios);\n"],"sourceRoot":""}