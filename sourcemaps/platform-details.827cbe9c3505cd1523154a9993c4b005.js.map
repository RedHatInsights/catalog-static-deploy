{"version":3,"file":"js/platform-details.8e467819697817e9b6c9.js","mappings":"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","sources":["webpack:///./src/smart-components/platform/platform-details.js"],"sourcesContent":["import React from 'react';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport { useSelector } from 'react-redux';\nimport {\n  Card,\n  CardBody,\n  Grid,\n  GridItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nconst PlatformDetails = () => {\n  const formatMessage = useFormatMessage();\n  const platform = useSelector(\n    ({ platformReducer: { selectedPlatform } }) => selectedPlatform\n  );\n  return (\n    <Section type=\"content\">\n      <Grid hasGutter>\n        <GridItem span={5} className=\"info-bar pf-u-p-0\">\n          <Card>\n            <CardBody>\n              <TextContent>\n                <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n                  {formatMessage(platformsMessages.platformDetails)}\n                </Text>\n                <TextList component={TextListVariants.dl}>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.platformVersion)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {platform?.info?.version}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.ansibleVersion)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {platform?.info?.ansible_version}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.dateAdded)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    <DateFormat date={platform?.created_at} />\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.cloudConnectorId)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {platform?.cloud_connector_id}\n                  </TextListItem>\n                </TextList>\n              </TextContent>\n            </CardBody>\n          </Card>{' '}\n        </GridItem>\n        <GridItem span={7} className=\"info-bar pf-u-p-0\">\n          <Card>\n            <CardBody>\n              <TextContent>\n                <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n                  {formatMessage(platformsMessages.platformActivity)}\n                </Text>\n                <TextList component={TextListVariants.dl}>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.refreshState)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {platform?.refresh_state}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.refreshStarted)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    <DateFormat\n                      date={platform?.refresh_started_at}\n                      variant=\"relative\"\n                    />\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.refreshFinished)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    <DateFormat\n                      date={platform.refresh_finished_at}\n                      variant=\"relative\"\n                    />\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.lastSuccessfulRefresh)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    <DateFormat\n                      date={platform?.last_successful_refresh_at}\n                      variant=\"relative\"\n                    />\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.lastRefreshMessage)}\n                  </TextListItem>\n                  {platform?.last_refresh_message\n                    ?.split(/\\n/g)\n                    .map((line, idx) => (\n                      <TextListItem\n                        key={`message-key-${idx}`}\n                        component={TextListItemVariants.dd}\n                      >\n                        {line}\n                      </TextListItem>\n                    ))}\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.availabilityMessage)}\n                  </TextListItem>\n                  {platform?.availability_message\n                    ?.split(/\\n/g)\n                    .map((line, idx) => (\n                      <TextListItem\n                        key={`availability-message-key-${idx}`}\n                        component={TextListItemVariants.dd}\n                      >\n                        {line}\n                      </TextListItem>\n                    ))}\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.lastChecked)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    <DateFormat\n                      date={platform?.last_checked_at}\n                      variant=\"relative\"\n                    />\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {formatMessage(platformsMessages.lastAvailable)}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    <DateFormat\n                      date={platform?.last_available_at}\n                      variant=\"relative\"\n                    />\n                  </TextListItem>\n                </TextList>\n              </TextContent>\n            </CardBody>\n          </Card>{' '}\n        </GridItem>\n      </Grid>\n    </Section>\n  );\n};\n\nexport default PlatformDetails;\n"],"names":["formatMessage","useFormatMessage","platform","useSelector","platformReducer","selectedPlatform","type","hasGutter","span","className","Card","TextContent","Text","component","TextVariants","platformsMessages","TextListVariants","TextListItemVariants","info","version","ansible_version","date","created_at","cloud_connector_id","refresh_state","refresh_started_at","variant","refresh_finished_at","last_successful_refresh_at","last_refresh_message","split","map","line","idx","key","availability_message","last_checked_at","last_available_at"],"sourceRoot":""}