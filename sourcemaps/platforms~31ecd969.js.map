{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/extends.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/helpers/platform/platform-helper.js","webpack:///./src/redux/actions/platform-actions.js","webpack:///./src/messages/platforms.messages.js","webpack:///./src/toolbar/schemas/platforms-toolbar.schema.js","webpack:///./src/assets/images/platform-default.svg","webpack:///./src/assets/images/platform-openshift.svg","webpack:///./src/assets/images/platform-amazon.png","webpack:///./src/assets/images/platform-tower.png","webpack:///./src/presentational-components/shared/image-with-default.js","webpack:///./src/presentational-components/platform/platform-card.js","webpack:///./src/smart-components/platform/platforms.js"],"names":["_extends","module","exports","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","options","getNewPage","request","debouncePromise","direction","propTypes","PropTypes","shape","isRequired","func","any","string","bool","defaultProps","axiosInstance","getAxiosInstance","graphqlInstance","getGraphqlInstance","getPlatforms","post","SOURCES_API_BASE","query","then","data","application_types","sources","getPlatform","platformId","get","getPlatformItems","filter","filterQuery","TOPOLOGICAL_INVENTORY_API_BASE","getPlatformInventories","defaultSettings","getServiceOffering","serviceOfferingId","sourceId","Promise","all","source_type_id","icon_url","service","fetchPlatforms","dispatch","type","ActionTypes","PlatformHelper","payload","error","fetchPlatformItems","fetchSelectedPlatform","id","fetchPlatformInventories","fetchServiceOffering","platformsMessages","defineMessages","require","workflowColumn","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","configureSourceTitle","connectSource","contactAdmin","title","noPlatforms","offeringTitle","offeringParameters","createPlatformsToolbarSchema","searchValue","onFilterChange","fields","component","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","LEVEL","LEVEL_ITEM","FILTER_TOOLBAR_ITEM","placeholder","createPlatformsTopToolbarSchema","paddingBottom","tabItems","AppTabs","createPlatformsFilterToolbarSchema","filterPlaceholder","TOOLBAR","ImageWithDefault","src","TO_DISPLAY","platformTypeImg","1","OpenshiftPlatformImg","2","AmazonPlatformImg","3","TowerPlatformImg","PlatformCard","name","GalleryItem","CardHeader","DefaultPlatformImg","width","height","TextContent","pathname","PLATFORM_TEMPLATES_ROUTE","searchParams","platform","Text","TextVariants","h3","toDisplay","CardFooter","history","object","imageUrl","Platforms","formatMessage","useIntl","useState","filterValue","setFilterValue","useSelector","platformReducer","platforms","isLoading","isPlatformDataLoading","useDispatch","is_org_admin","useContext","UserContext","userIdentity","identity","user","useEffect","scrollToTop","insights","chrome","appNavClick","secondaryNav","renderEmptyStateDescription","p","a","chunks","href","document","baseURI","filteredItems","items","toLowerCase","includes","map","item","schema","value","renderEmptyState","renderDescription","Icon","SearchIcon"],"mappings":"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","file":"js/platforms~31ecd969.24d522ed04189c6fdb7a.js","sourcesContent":["function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport {\n  TOPOLOGICAL_INVENTORY_API_BASE,\n  SOURCES_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nexport const getPlatforms = () => {\n  return graphqlInstance\n    .post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n    .then(({ data: { application_types } }) => application_types)\n    .then(([{ sources }]) => sources);\n};\n\nexport const getPlatform = (platformId) => {\n  return axiosInstance.get(`${SOURCES_API_BASE}/sources/${platformId}`);\n};\n\nexport const getPlatformItems = (platformId, filter, options) => {\n  const filterQuery = filter ? `&filter[name][contains_i]=${filter}` : '';\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_offerings?filter[archived_at][nil]${filterQuery}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings`\n    );\n  }\n};\n\nexport const getPlatformInventories = (\n  platformId,\n  filter = '',\n  options = defaultSettings\n) => {\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_inventories?filter[name][contains_i]=${filter}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_inventories?limit=${options.limit}&offset=${options.offset}`\n    );\n  }\n};\n\nexport const getServiceOffering = (serviceOfferingId, sourceId) =>\n  Promise.all([\n    axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings/${serviceOfferingId}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${sourceId}`)\n      .then((source) => {\n        return axiosInstance\n          .get(`${SOURCES_API_BASE}/source_types/${source.source_type_id}`)\n          .then(({ icon_url }) => ({\n            ...source,\n            icon_url\n          }));\n      })\n  ]).then(([service, source]) => ({\n    service,\n    source\n  }));\n","import * as ActionTypes from '../action-types';\nimport * as PlatformHelper from '../../helpers/platform/platform-helper';\n\nexport const fetchPlatforms = () => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_PLATFORMS}_PENDING` });\n  return PlatformHelper.getPlatforms()\n    .then((data) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_FULFILLED`,\n        payload: data\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchPlatformItems = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_ITEMS,\n  payload: PlatformHelper.getPlatformItems(platformId, filter, options),\n  meta: {\n    platformId,\n    filter,\n    ...options\n  }\n});\n\nexport const fetchMultiplePlatformItems = (platformsId) => {\n  const platformPromisses = platformsId.map((platformId) =>\n    PlatformHelper.getPlatformItems(platformId).then((data) => ({\n      [platformId]: data\n    }))\n  );\n  return {\n    type: ActionTypes.FETCH_MULTIPLE_PLATFORM_ITEMS,\n    payload: Promise.all(platformPromisses).then((data) =>\n      data.reduce(\n        (acc, curr) => ({\n          ...acc,\n          ...curr\n        }),\n        {}\n      )\n    )\n  };\n};\n\nexport const fetchSelectedPlatform = (id) => ({\n  type: ActionTypes.FETCH_PLATFORM,\n  payload: PlatformHelper.getPlatform(id)\n});\n\nexport const searchPlatformItems = (value) => ({\n  type: ActionTypes.FILTER_PLATFORM_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const fetchPlatformInventories = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_INVENTORIES,\n  payload: PlatformHelper.getPlatformInventories(platformId, filter, options)\n});\n\nexport const fetchServiceOffering = (...args) => ({\n  type: ActionTypes.FETCH_SERVICE_OFFERING,\n  payload: PlatformHelper.getServiceOffering(...args)\n});\n","const { defineMessages } = require('react-intl');\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  configureSourceTitle: {\n    id: 'platforms.list.configure-source',\n    defaultMessage: 'Configure a source in order to add products to portfolios.'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage:\n      'To connect to a source, go to <a>Sources</a> under Settings.'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  }\n});\n\nexport default platformsMessages;\n","import AppTabs from '../../presentational-components/shared/app-tabs';\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nexport const createPlatformsToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  title\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: 'Filter by platform'\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields: []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsTopToolbarSchema = ({\n  title,\n  paddingBottom,\n  tabItems\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      paddingBottom,\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL_ITEM,\n          key: 'tabs-level-item',\n          fields: tabItems\n            ? [\n                {\n                  component: AppTabs,\n                  key: 'platform-tabs',\n                  tabItems\n                }\n              ]\n            : []\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsFilterToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  meta,\n  apiRequest,\n  filterPlaceholder\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOOLBAR,\n      key: 'platforms-filter-toolbar',\n      className: 'pf-u-pt-md pf-u-pb-md pf-u-pr-lg pf-u-pl-lg',\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          className: 'pf-m-grow',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: filterPlaceholder\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields:\n                meta.count > 0\n                  ? [\n                      {\n                        component: AsyncPagination,\n                        key: 'platform-pagination',\n                        apiRequest,\n                        meta,\n                        isCompact: true\n                      }\n                    ]\n                  : []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n","module.exports = __webpack_public_path__ + \"fonts/platform-default.svg\";","module.exports = __webpack_public_path__ + \"fonts/platform-openshift.svg\";","module.exports = __webpack_public_path__ + \"fonts/platform-amazon.png\";","module.exports = __webpack_public_path__ + \"fonts/platform-tower.png\";","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst ImageWithDefault = ({ src, ...props }) => <img src={src} {...props} />;\n\nImageWithDefault.propTypes = {\n  src: propTypes.string.isRequired\n};\n\nexport default ImageWithDefault;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  CardHeader,\n  CardFooter,\n  GalleryItem,\n  Text,\n  TextVariants,\n  TextContent\n} from '@patternfly/react-core';\nimport DefaultPlatformImg from '../../assets/images/platform-default.svg';\nimport OpenshiftPlatformImg from '../../assets/images/platform-openshift.svg';\nimport AmazonPlatformImg from '../../assets/images/platform-amazon.png';\nimport TowerPlatformImg from '../../assets/images/platform-tower.png';\nimport ImageWithDefault from '../shared/image-with-default';\nimport ItemDetails from '../shared/card-common';\n\nimport { PLATFORM_TEMPLATES_ROUTE } from '../../constants/routes';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport { StyledCard } from '../styled-components/styled-gallery';\nimport { StyledCardBody } from '../styled-components/card';\n\nconst TO_DISPLAY = ['description', 'modified'];\n\nconst platformTypeImg = {\n  1: OpenshiftPlatformImg,\n  2: AmazonPlatformImg,\n  3: TowerPlatformImg\n};\n\nconst PlatformCard = ({ name, id, ...props }) => (\n  <GalleryItem>\n    <StyledCard key={id}>\n      <CardHeader>\n        <ImageWithDefault\n          src={platformTypeImg[props.source_type_id] || DefaultPlatformImg}\n          width=\"80\"\n          height=\"40\"\n        />\n      </CardHeader>\n      <StyledCardBody>\n        <TextContent>\n          <CatalogLink\n            pathname={PLATFORM_TEMPLATES_ROUTE}\n            searchParams={{ platform: id }}\n          >\n            <Text\n              title={name}\n              className=\"pf-u-mb-0\"\n              component={TextVariants.h3}\n            >\n              <EllipsisTextContainer>{name}</EllipsisTextContainer>\n            </Text>\n          </CatalogLink>\n        </TextContent>\n        <ItemDetails {...{ name, ...props }} toDisplay={TO_DISPLAY} />\n      </StyledCardBody>\n      <CardFooter />\n    </StyledCard>\n  </GalleryItem>\n);\n\nPlatformCard.propTypes = {\n  history: propTypes.object,\n  imageUrl: propTypes.string,\n  name: propTypes.string,\n  source_type_id: propTypes.string,\n  id: propTypes.string\n};\n\nexport default PlatformCard;\n","import React, { Fragment, useEffect, useState, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport PlatformCard from '../../presentational-components/platform/platform-card';\nimport { createPlatformsToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport UserContext from '../../user-context';\nimport { useIntl } from 'react-intl';\nimport platformsMessages from '../../messages/platforms.messages';\n\nconst Platforms = () => {\n  const { formatMessage } = useIntl();\n  const [filterValue, setFilterValue] = useState('');\n  const { platforms, isLoading } = useSelector(\n    ({ platformReducer: { platforms, isPlatformDataLoading } }) => ({\n      platforms,\n      isLoading: isPlatformDataLoading\n    })\n  );\n  const dispatch = useDispatch();\n  const {\n    userIdentity: {\n      identity: {\n        user: { is_org_admin }\n      }\n    }\n  } = useContext(UserContext);\n\n  useEffect(() => {\n    dispatch(fetchPlatforms());\n    scrollToTop();\n    insights.chrome.appNavClick({ id: 'platforms', secondaryNav: true });\n  }, []);\n\n  const renderEmptyStateDescription = () => (\n    <Fragment>\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {formatMessage(platformsMessages.configureSourceTitle)}\n        </Text>\n        {is_org_admin ? (\n          <Text component={TextVariants.p}>\n            {formatMessage(platformsMessages.connectSource, {\n              // eslint-disable-next-line react/display-name\n              a: (chunks) => (\n                <a href={`${document.baseURI}settings/sources`}>{chunks}</a>\n              )\n            })}\n          </Text>\n        ) : (\n          <Text>{formatMessage(platformsMessages.contactAdmin)}</Text>\n        )}\n      </TextContent>\n    </Fragment>\n  );\n  const filteredItems = {\n    items: platforms\n      .filter(({ name }) =>\n        name.toLowerCase().includes(filterValue.toLowerCase())\n      )\n      .map((item) => <PlatformCard key={item.id} {...item} />),\n    isLoading: isLoading && platforms.length === 0\n  };\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPlatformsToolbarSchema({\n          onFilterChange: (value) => setFilterValue(value),\n          searchValue: filterValue,\n          title: formatMessage(platformsMessages.title)\n        })}\n      />\n      <ContentGallery\n        {...filteredItems}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState\n            title={formatMessage(platformsMessages.noPlatforms)}\n            renderDescription={renderEmptyStateDescription}\n            Icon={SearchIcon}\n          />\n        )}\n      />\n    </Fragment>\n  );\n};\n\nexport default Platforms;\n"],"sourceRoot":""}