{"version":3,"sources":["webpack:///./src/smart-components/common/async-pagination.tsx","webpack:///./src/messages/platforms.messages.ts","webpack:///./src/toolbar/schemas/platforms-toolbar.schema.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardHeader.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardFooter.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/cog-icon.js","webpack:///./src/presentational-components/platform/platform-card.tsx","webpack:///./src/smart-components/platform/platforms.js"],"names":["meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","onSetPage","number","debounce","options","request","dropDirection","platformsMessages","workflowColumn","id","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","platformsNoDataDescription","connectSource","contactAdmin","title","noPlatforms","offeringTitle","offeringParameters","platformVersion","ansibleVersion","platformSummary","mqttClientId","refreshState","refreshStarted","refreshFinished","lastSuccessfulRefresh","lastChecked","lastAvailable","enabled","availabilityStatus","dateAdded","createPlatformsToolbarSchema","searchValue","onFilterChange","fields","component","toolbarComponentTypes","TOP_TOOLBAR","key","TOP_TOOLBAR_TITLE","LEVEL","LEVEL_ITEM","FILTER_TOOLBAR_ITEM","placeholder","createPlatformsTopToolbarSchema","paddingBottom","tabItems","platformEnabled","platformAvailable","TOOLBAR_GROUP","TOOLBAR_ITEM","alignment","LABEL","AppTabs","createPlatformsFilterToolbarSchema","filterPlaceholder","TOOLBAR","AsyncPagination","CardHeader","_a","children","onExpand","toggleButtonProps","Consumer","cardId","Object","assign","cardHeader","cardHeaderToggle","variant","type","onClick","evt","cardHeaderToggleIcon","displayName","CardFooter","Component","cardFooter","exports","__esModule","CogIconConfig","name","height","width","svgPath","yOffset","xOffset","CogIcon","createIcon","TO_DISPLAY","formatMessage","GalleryItem","ouiaId","sourceId","TextContent","pathname","searchParams","platform","h3","last_successful_refresh_at","small","DateFormat","date","toDisplay","Label","color","disabled","availability_status","available","notAvailable","Platforms","useFormatMessage","useState","filterValue","setFilterValue","useSelector","platformReducer","platforms","isLoading","isPlatformDataLoading","dispatch","useDispatch","is_org_admin","useContext","UserContext","userIdentity","identity","user","useEffect","fetchPlatforms","scrollToTop","insights","chrome","appNavClick","secondaryNav","filteredItems","items","filter","toLowerCase","includes","map","item","length","emptyStateProps","PrimaryAction","Button","filteringMessages","clearFilters","href","document","baseURI","Text","noResults","description","noResultsDescription","Icon","SearchIcon","schema","value","renderEmptyState"],"mappings":"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","file":"js/platforms~31ecd969.3bc061ec838e2c7a46a6.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { OnPerPageSelect, OnSetPage, Pagination } from '@patternfly/react-core';\n\nimport {\n  getCurrentPage,\n  getNewPage,\n  PaginationConfiguration\n} from '../../helpers/shared/pagination';\nimport { AnyObject } from '@data-driven-forms/react-form-renderer';\n\nexport interface AsyncPaginationProps<T = any> extends AnyObject {\n  meta: PaginationConfiguration;\n  apiRequest: (...args: any[]) => Promise<T>;\n  apiProps?: any;\n  className?: string;\n  isCompact?: boolean;\n}\nconst AsyncPagination: React.ComponentType<AsyncPaginationProps> = ({\n  meta: { limit = 50, count = 0, offset = 0 },\n  apiProps,\n  apiRequest,\n  className = '',\n  isCompact = false,\n  ...props\n}) => {\n  const handleOnPerPageSelect: OnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage: OnSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        dropDirection=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default AsyncPagination;\n","import { defineMessages } from 'react-intl';\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  platformsNoDataDescription: {\n    id: 'platforms.list.configure-source',\n    defaultMessage: 'To get started, add an Ansible Tower cluster as a source.'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage: 'Go to Sources'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  },\n  platformVersion: {\n    id: 'platforms.version',\n    defaultMessage: 'Platform version'\n  },\n  ansibleVersion: {\n    id: 'platforms.ansible.version',\n    defaultMessage: 'Ansible version'\n  },\n  platformSummary: {\n    id: 'platforms.summary',\n    defaultMessage: 'Summmary'\n  },\n  mqttClientId: {\n    id: 'platform.mqttClientId',\n    defaultMessage: 'MQTT Client Id'\n  },\n  refreshState: {\n    id: 'platforms.refreshState',\n    defaultMessage: 'Refresh state'\n  },\n  refreshStarted: {\n    id: 'platforms.refreshStarted',\n    defaultMessage: 'Refresh started'\n  },\n  refreshFinished: {\n    id: 'platforms.refreshFinished',\n    defaultMessage: 'Refresh finished'\n  },\n  lastSuccessfulRefresh: {\n    id: 'platforms.lastSuccessfulRefresh',\n    defaultMessage: 'Last successful refresh'\n  },\n  lastChecked: {\n    id: 'platforms.lastChecked',\n    defaultMessage: 'Last checked'\n  },\n  lastAvailable: {\n    id: 'platforms.lastAvailable',\n    defaultMessage: 'Last available'\n  },\n  enabled: {\n    id: 'platforms.enabled',\n    defaultMessage: 'Enabled'\n  },\n  availabilityStatus: {\n    id: 'platforms.availabilityStatus',\n    defaultMessage: 'Availability status'\n  },\n  dateAdded: {\n    id: 'platforms.dateAdded',\n    defaultMessage: 'Date added'\n  }\n});\n\nexport default platformsMessages;\n","import AppTabs from '../../presentational-components/shared/app-tabs';\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nexport const createPlatformsToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  title\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: 'Filter by platform'\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields: []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsTopToolbarSchema = ({\n  title,\n  paddingBottom,\n  tabItems,\n  platformEnabled,\n  platformAvailable\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      paddingBottom,\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          fields: [\n            {\n              component: toolbarComponentTypes.TOOLBAR_GROUP,\n              key: 'platform-toolbar',\n              fields: [\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'platform-toolbar-group',\n                  fields: [\n                    {\n                      component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n                      key: 'platforms-toolbar-title',\n                      title\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.TOOLBAR_GROUP,\n              key: 'platform-toolbar',\n              alignment: 'alignRight',\n              fields: [\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'platform-label',\n                  alignment: 'alignRight',\n                  fields: [\n                    {\n                      component: toolbarComponentTypes.LABEL,\n                      key: 'platform-enabled-label',\n                      ...platformEnabled()\n                    },\n                    {\n                      component: toolbarComponentTypes.LABEL,\n                      key: 'platform-available-label',\n                      ...platformAvailable()\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          component: toolbarComponentTypes.LEVEL_ITEM,\n          key: 'tabs-level-item',\n          fields: tabItems\n            ? [\n                {\n                  component: AppTabs,\n                  key: 'platform-tabs',\n                  tabItems\n                }\n              ]\n            : []\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsFilterToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  meta,\n  apiRequest,\n  filterPlaceholder\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOOLBAR,\n      key: 'platforms-filter-toolbar',\n      className: 'pf-u-pt-md pf-u-pb-md pf-u-pr-lg pf-u-pl-lg',\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          className: 'pf-m-grow',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: filterPlaceholder\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields:\n                meta.count > 0\n                  ? [\n                      {\n                        component: AsyncPagination,\n                        key: 'platform-pagination',\n                        apiRequest,\n                        meta,\n                        isCompact: true\n                      }\n                    ]\n                  : []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { CardContext } from './Card';\nimport { Button } from '../Button';\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nexport const CardHeader = (_a) => {\n    var { children = null, className = '', id, onExpand, toggleButtonProps } = _a, props = __rest(_a, [\"children\", \"className\", \"id\", \"onExpand\", \"toggleButtonProps\"]);\n    return (React.createElement(CardContext.Consumer, null, ({ cardId }) => (React.createElement(\"div\", Object.assign({ className: css(styles.cardHeader, className), id: id }, props),\n        onExpand && (React.createElement(\"div\", { className: css(styles.cardHeaderToggle) },\n            React.createElement(Button, Object.assign({ variant: \"plain\", type: \"button\", onClick: evt => {\n                    onExpand(evt, cardId);\n                } }, toggleButtonProps),\n                React.createElement(\"span\", { className: css(styles.cardHeaderToggleIcon) },\n                    React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" }))))),\n        children))));\n};\nCardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nexport const CardFooter = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardFooter, className) }, props), children));\n};\nCardFooter.displayName = 'CardFooter';\n//# sourceMappingURL=CardFooter.js.map","\"use strict\"\nexports.__esModule = true;\nexports.CogIconConfig = {\n  name: 'CogIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CogIcon = require('../createIcon').createIcon(exports.CogIconConfig);\nexports[\"default\"] = exports.CogIcon;","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  CardHeader,\n  CardFooter,\n  GalleryItem,\n  Text,\n  TextVariants,\n  TextContent,\n  Label\n} from '@patternfly/react-core';\nimport ItemDetails, { ItemDetailsProps } from '../shared/card-common';\n\nimport { PLATFORM_TEMPLATES_ROUTE } from '../../constants/routes';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport { StyledCard } from '../styled-components/styled-gallery';\nimport { StyledCardBody } from '../styled-components/card';\nimport CardIcon from '../shared/card-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\nimport labelMessages from '../../messages/labels.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst TO_DISPLAY = ['description', 'modified'];\n\nexport interface PlatformCardProps extends ItemDetailsProps {\n  name: string;\n  id: string;\n  availability_status?: string;\n  last_successful_refresh_at?: string;\n  source_type_id: string;\n  imageUrl: string;\n}\nconst PlatformCard: React.ComponentType<PlatformCardProps> = ({\n  name,\n  id,\n  ...props\n}) => {\n  const formatMessage = useFormatMessage();\n  return (\n    <GalleryItem>\n      <StyledCard key={id} ouiaId={`platform-${id}`}>\n        <CardHeader>\n          <CardIcon height={40} sourceId={id} />\n        </CardHeader>\n        <StyledCardBody>\n          <TextContent>\n            <CatalogLink\n              pathname={PLATFORM_TEMPLATES_ROUTE}\n              searchParams={{ platform: id }}\n            >\n              <Text\n                title={name}\n                className=\"pf-u-mb-0\"\n                component={TextVariants.h3}\n              >\n                <EllipsisTextContainer>{name}</EllipsisTextContainer>\n              </Text>\n              {props.last_successful_refresh_at && (\n                <TextContent className=\"pf-u-mb-md\">\n                  <Text component={TextVariants.small} className=\"pf-u-mb-0\">\n                    Last refreshed &nbsp;\n                    <DateFormat\n                      date={props.last_successful_refresh_at}\n                      type=\"relative\"\n                    />\n                  </Text>\n                </TextContent>\n              )}\n            </CatalogLink>\n          </TextContent>\n          <ItemDetails {...{ name, ...props }} toDisplay={TO_DISPLAY} />\n        </StyledCardBody>\n        <CardFooter>\n          <Label variant=\"filled\" color={props.enabled ? 'green' : 'red'}>\n            {props.enabled\n              ? formatMessage(labelMessages.enabled)\n              : formatMessage(labelMessages.disabled)}\n          </Label>\n          &nbsp;\n          <Label\n            variant=\"filled\"\n            color={props.availability_status === 'available' ? 'green' : 'red'}\n          >\n            {props.availability_status === 'available'\n              ? formatMessage(labelMessages.available)\n              : formatMessage(labelMessages.notAvailable)}\n          </Label>\n        </CardFooter>\n      </StyledCard>\n    </GalleryItem>\n  );\n};\n\nexport default PlatformCard;\n","import React, { Fragment, useEffect, useState, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Text } from '@patternfly/react-core';\nimport { SearchIcon, CogIcon } from '@patternfly/react-icons';\n\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport PlatformCard from '../../presentational-components/platform/platform-card';\nimport { createPlatformsToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport UserContext from '../../user-context';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport filteringMessages from '../../messages/filtering.messages';\n\nconst Platforms = () => {\n  const formatMessage = useFormatMessage();\n  const [filterValue, setFilterValue] = useState('');\n  const { platforms, isLoading } = useSelector(\n    ({ platformReducer: { platforms, isPlatformDataLoading } }) => ({\n      platforms,\n      isLoading: isPlatformDataLoading\n    })\n  );\n  const dispatch = useDispatch();\n  const {\n    userIdentity: {\n      identity: {\n        user: { is_org_admin }\n      }\n    }\n  } = useContext(UserContext);\n\n  useEffect(() => {\n    dispatch(fetchPlatforms());\n    scrollToTop();\n    insights.chrome.appNavClick({ id: 'platforms', secondaryNav: true });\n  }, []);\n\n  const filteredItems = {\n    items: platforms\n      .filter(({ name }) =>\n        name.toLowerCase().includes(filterValue.toLowerCase())\n      )\n      .map((item) => (\n        <PlatformCard ouiaId={`platform-${item.id}`} key={item.id} {...item} />\n      )),\n    isLoading: isLoading && platforms.length === 0\n  };\n\n  const NoDataAction = () =>\n    is_org_admin ? (\n      <Button\n        component=\"a\"\n        href={`${document.baseURI}settings/sources`}\n        id=\"add-source\"\n      >\n        {formatMessage(platformsMessages.connectSource)}\n      </Button>\n    ) : (\n      <Text>{formatMessage(platformsMessages.contactAdmin)}</Text>\n    );\n\n  const FilterAction = () => (\n    <Button\n      ouiaId={'clear-filter'}\n      variant=\"link\"\n      onClick={() => setFilterValue('')}\n    >\n      {formatMessage(filteringMessages.clearFilters)}\n    </Button>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction:\n      filterValue && filterValue !== '' ? FilterAction : NoDataAction,\n    title:\n      filterValue && filterValue !== ''\n        ? formatMessage(filteringMessages.noResults)\n        : formatMessage(platformsMessages.noPlatforms),\n    description:\n      filterValue && filterValue !== ''\n        ? formatMessage(filteringMessages.noResultsDescription)\n        : formatMessage(platformsMessages.platformsNoDataDescription),\n    Icon: filterValue && filterValue !== '' ? SearchIcon : CogIcon\n  };\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPlatformsToolbarSchema({\n          onFilterChange: (value) => setFilterValue(value),\n          searchValue: filterValue,\n          title: formatMessage(platformsMessages.title)\n        })}\n      />\n      <ContentGallery\n        {...filteredItems}\n        renderEmptyState={() => {\n          return <ContentGalleryEmptyState {...emptyStateProps} />;\n        }}\n      />\n    </Fragment>\n  );\n};\n\nexport default Platforms;\n"],"sourceRoot":""}