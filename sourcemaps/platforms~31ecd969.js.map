{"version":3,"sources":["webpack:///./src/presentational-components/platform/platform-card.tsx","webpack:///./src/smart-components/platform/platforms.js","webpack:///./src/smart-components/common/async-pagination.tsx","webpack:///./src/messages/platforms.messages.ts","webpack:///./src/toolbar/schemas/platforms-toolbar.schema.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardHeader.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardFooter.js"],"names":["TO_DISPLAY","name","id","props","GalleryItem","key","ouiaId","CardHeader","height","sourceId","pathname","searchParams","platform","title","className","component","h3","toDisplay","CardFooter","Platforms","formatMessage","useFormatMessage","useState","filterValue","setFilterValue","useSelector","platformReducer","platforms","isLoading","isPlatformDataLoading","dispatch","useDispatch","is_org_admin","useContext","UserContext","userIdentity","identity","user","useEffect","fetchPlatforms","scrollToTop","insights","chrome","appNavClick","secondaryNav","renderEmptyStateDescription","TextContent","Text","TextVariants","p","platformsMessages","configureSourceTitle","connectSource","a","chunks","href","document","baseURI","contactAdmin","filteredItems","items","filter","toLowerCase","includes","map","item","length","schema","createPlatformsToolbarSchema","onFilterChange","value","searchValue","renderEmptyState","noPlatforms","renderDescription","Icon","SearchIcon","meta","limit","count","offset","apiProps","apiRequest","isCompact","perPage","itemCount","onPerPageSelect","_event","page","onSetPage","number","debounce","options","request","dropDirection","workflowColumn","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","offeringTitle","offeringParameters","fields","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","LEVEL","LEVEL_ITEM","FILTER_TOOLBAR_ITEM","placeholder","createPlatformsTopToolbarSchema","paddingBottom","tabItems","AppTabs","createPlatformsFilterToolbarSchema","filterPlaceholder","TOOLBAR","AsyncPagination","_a","children","onExpand","toggleButtonProps","Consumer","cardId","Object","assign","cardHeader","cardHeaderToggle","variant","type","onClick","evt","cardHeaderToggleIcon","displayName","Component","cardFooter"],"mappings":"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","file":"js/platforms~31ecd969.d3773b62a29428347617.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  CardHeader,\n  CardFooter,\n  GalleryItem,\n  Text,\n  TextVariants,\n  TextContent\n} from '@patternfly/react-core';\nimport ItemDetails, { ItemDetailsProps } from '../shared/card-common';\n\nimport { PLATFORM_TEMPLATES_ROUTE } from '../../constants/routes';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport { StyledCard } from '../styled-components/styled-gallery';\nimport { StyledCardBody } from '../styled-components/card';\nimport CardIcon from '../shared/card-icon';\n\nconst TO_DISPLAY = ['description', 'modified'];\n\nexport interface PlatformCardProps extends ItemDetailsProps {\n  name: string;\n  id: string;\n  source_type_id: string;\n  imageUrl: string;\n}\nconst PlatformCard: React.ComponentType<PlatformCardProps> = ({\n  name,\n  id,\n  ...props\n}) => {\n  return (\n    <GalleryItem>\n      <StyledCard key={id} ouiaId={`platform-${id}`}>\n        <CardHeader>\n          <CardIcon height={40} sourceId={id} />\n        </CardHeader>\n        <StyledCardBody>\n          <TextContent>\n            <CatalogLink\n              pathname={PLATFORM_TEMPLATES_ROUTE}\n              searchParams={{ platform: id }}\n            >\n              <Text\n                title={name}\n                className=\"pf-u-mb-0\"\n                component={TextVariants.h3}\n              >\n                <EllipsisTextContainer>{name}</EllipsisTextContainer>\n              </Text>\n            </CatalogLink>\n          </TextContent>\n          <ItemDetails {...{ name, ...props }} toDisplay={TO_DISPLAY} />\n        </StyledCardBody>\n        <CardFooter />\n      </StyledCard>\n    </GalleryItem>\n  );\n};\n\nexport default PlatformCard;\n","import React, { Fragment, useEffect, useState, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport PlatformCard from '../../presentational-components/platform/platform-card';\nimport { createPlatformsToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport UserContext from '../../user-context';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst Platforms = () => {\n  const formatMessage = useFormatMessage();\n  const [filterValue, setFilterValue] = useState('');\n  const { platforms, isLoading } = useSelector(\n    ({ platformReducer: { platforms, isPlatformDataLoading } }) => ({\n      platforms,\n      isLoading: isPlatformDataLoading\n    })\n  );\n  const dispatch = useDispatch();\n  const {\n    userIdentity: {\n      identity: {\n        user: { is_org_admin }\n      }\n    }\n  } = useContext(UserContext);\n\n  useEffect(() => {\n    dispatch(fetchPlatforms());\n    scrollToTop();\n    insights.chrome.appNavClick({ id: 'platforms', secondaryNav: true });\n  }, []);\n\n  const renderEmptyStateDescription = () => (\n    <Fragment>\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {formatMessage(platformsMessages.configureSourceTitle)}\n        </Text>\n        {is_org_admin ? (\n          <Text component={TextVariants.p}>\n            {formatMessage(platformsMessages.connectSource, {\n              // eslint-disable-next-line react/display-name\n              a: (chunks) => (\n                <a href={`${document.baseURI}settings/sources`}>{chunks}</a>\n              )\n            })}\n          </Text>\n        ) : (\n          <Text>{formatMessage(platformsMessages.contactAdmin)}</Text>\n        )}\n      </TextContent>\n    </Fragment>\n  );\n  const filteredItems = {\n    items: platforms\n      .filter(({ name }) =>\n        name.toLowerCase().includes(filterValue.toLowerCase())\n      )\n      .map((item) => (\n        <PlatformCard ouiaId={`platform-${item.id}`} key={item.id} {...item} />\n      )),\n    isLoading: isLoading && platforms.length === 0\n  };\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPlatformsToolbarSchema({\n          onFilterChange: (value) => setFilterValue(value),\n          searchValue: filterValue,\n          title: formatMessage(platformsMessages.title)\n        })}\n      />\n      <ContentGallery\n        {...filteredItems}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState\n            title={formatMessage(platformsMessages.noPlatforms)}\n            renderDescription={renderEmptyStateDescription}\n            Icon={SearchIcon}\n          />\n        )}\n      />\n    </Fragment>\n  );\n};\n\nexport default Platforms;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { OnPerPageSelect, OnSetPage, Pagination } from '@patternfly/react-core';\n\nimport {\n  getCurrentPage,\n  getNewPage,\n  PaginationConfiguration\n} from '../../helpers/shared/pagination';\nimport { AnyObject } from '@data-driven-forms/react-form-renderer';\n\nexport interface AsyncPaginationProps<T = any> extends AnyObject {\n  meta: PaginationConfiguration;\n  apiRequest: (...args: any[]) => Promise<T>;\n  apiProps?: any;\n  className?: string;\n  isCompact?: boolean;\n}\nconst AsyncPagination: React.ComponentType<AsyncPaginationProps> = ({\n  meta: { limit = 50, count = 0, offset = 0 },\n  apiProps,\n  apiRequest,\n  className = '',\n  isCompact = false,\n  ...props\n}) => {\n  const handleOnPerPageSelect: OnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage: OnSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        dropDirection=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default AsyncPagination;\n","import { defineMessages } from 'react-intl';\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  configureSourceTitle: {\n    id: 'platforms.list.configure-source',\n    defaultMessage: 'Configure a source in order to add products to portfolios.'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage:\n      'To connect to a source, go to <a>Sources</a> under Settings.'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  }\n});\n\nexport default platformsMessages;\n","import AppTabs from '../../presentational-components/shared/app-tabs';\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nexport const createPlatformsToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  title\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: 'Filter by platform'\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields: []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsTopToolbarSchema = ({\n  title,\n  paddingBottom,\n  tabItems\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      paddingBottom,\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL_ITEM,\n          key: 'tabs-level-item',\n          fields: tabItems\n            ? [\n                {\n                  component: AppTabs,\n                  key: 'platform-tabs',\n                  tabItems\n                }\n              ]\n            : []\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsFilterToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  meta,\n  apiRequest,\n  filterPlaceholder\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOOLBAR,\n      key: 'platforms-filter-toolbar',\n      className: 'pf-u-pt-md pf-u-pb-md pf-u-pr-lg pf-u-pl-lg',\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          className: 'pf-m-grow',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: filterPlaceholder\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields:\n                meta.count > 0\n                  ? [\n                      {\n                        component: AsyncPagination,\n                        key: 'platform-pagination',\n                        apiRequest,\n                        meta,\n                        isCompact: true\n                      }\n                    ]\n                  : []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { CardContext } from './Card';\nimport { Button } from '../Button';\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nexport const CardHeader = (_a) => {\n    var { children = null, className = '', id, onExpand, toggleButtonProps } = _a, props = __rest(_a, [\"children\", \"className\", \"id\", \"onExpand\", \"toggleButtonProps\"]);\n    return (React.createElement(CardContext.Consumer, null, ({ cardId }) => (React.createElement(\"div\", Object.assign({ className: css(styles.cardHeader, className), id: id }, props),\n        onExpand && (React.createElement(\"div\", { className: css(styles.cardHeaderToggle) },\n            React.createElement(Button, Object.assign({ variant: \"plain\", type: \"button\", onClick: evt => {\n                    onExpand(evt, cardId);\n                } }, toggleButtonProps),\n                React.createElement(\"span\", { className: css(styles.cardHeaderToggleIcon) },\n                    React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" }))))),\n        children))));\n};\nCardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nexport const CardFooter = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardFooter, className) }, props), children));\n};\nCardFooter.displayName = 'CardFooter';\n//# sourceMappingURL=CardFooter.js.map"],"sourceRoot":""}