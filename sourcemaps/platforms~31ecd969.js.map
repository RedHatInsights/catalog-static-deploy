{"version":3,"sources":["webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/messages/platforms.messages.ts","webpack:///./src/toolbar/schemas/platforms-toolbar.schema.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardHeader.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardFooter.js","webpack:///./src/assets/images/platform-default.svg","webpack:///./src/assets/images/platform-openshift.svg","webpack:///./src/assets/images/platform-amazon.png","webpack:///./src/assets/images/platform-tower.png","webpack:///./src/presentational-components/shared/image-with-default.tsx","webpack:///./src/presentational-components/platform/platform-card.tsx","webpack:///./src/smart-components/platform/platforms.js"],"names":["AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","options","getNewPage","request","debouncePromise","direction","propTypes","PropTypes","shape","isRequired","func","any","string","bool","defaultProps","platformsMessages","workflowColumn","id","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","configureSourceTitle","connectSource","contactAdmin","title","noPlatforms","offeringTitle","offeringParameters","createPlatformsToolbarSchema","searchValue","onFilterChange","fields","component","toolbarComponentTypes","TOP_TOOLBAR","key","TOP_TOOLBAR_TITLE","LEVEL","LEVEL_ITEM","FILTER_TOOLBAR_ITEM","placeholder","createPlatformsTopToolbarSchema","paddingBottom","tabItems","AppTabs","createPlatformsFilterToolbarSchema","filterPlaceholder","TOOLBAR","CardHeader","_a","children","Object","assign","cardHeader","displayName","CardFooter","Component","cardFooter","module","exports","TO_DISPLAY","platformTypeImg","1","2","3","name","GalleryItem","src","source_type_id","width","height","pathname","searchParams","platform","h3","toDisplay","Platforms","formatMessage","useFormatMessage","useState","filterValue","setFilterValue","useSelector","platformReducer","platforms","isLoading","isPlatformDataLoading","dispatch","useDispatch","is_org_admin","useContext","UserContext","userIdentity","identity","user","useEffect","fetchPlatforms","scrollToTop","insights","chrome","appNavClick","secondaryNav","renderEmptyStateDescription","TextContent","Text","TextVariants","p","a","chunks","href","document","baseURI","filteredItems","items","filter","toLowerCase","includes","map","item","length","schema","value","renderEmptyState","renderDescription","Icon","SearchIcon"],"mappings":"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","file":"js/platforms~31ecd969.bff223eede6275247a00.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import { defineMessages } from 'react-intl';\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  configureSourceTitle: {\n    id: 'platforms.list.configure-source',\n    defaultMessage: 'Configure a source in order to add products to portfolios.'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage:\n      'To connect to a source, go to <a>Sources</a> under Settings.'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  }\n});\n\nexport default platformsMessages;\n","import AppTabs from '../../presentational-components/shared/app-tabs';\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nexport const createPlatformsToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  title\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: 'Filter by platform'\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields: []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsTopToolbarSchema = ({\n  title,\n  paddingBottom,\n  tabItems\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      paddingBottom,\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL_ITEM,\n          key: 'tabs-level-item',\n          fields: tabItems\n            ? [\n                {\n                  component: AppTabs,\n                  key: 'platform-tabs',\n                  tabItems\n                }\n              ]\n            : []\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsFilterToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  meta,\n  apiRequest,\n  filterPlaceholder\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOOLBAR,\n      key: 'platforms-filter-toolbar',\n      className: 'pf-u-pt-md pf-u-pb-md pf-u-pr-lg pf-u-pl-lg',\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          className: 'pf-m-grow',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: filterPlaceholder\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields:\n                meta.count > 0\n                  ? [\n                      {\n                        component: AsyncPagination,\n                        key: 'platform-pagination',\n                        apiRequest,\n                        meta,\n                        isCompact: true\n                      }\n                    ]\n                  : []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nexport const CardHeader = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.cardHeader, className) }, props), children));\n};\nCardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nexport const CardFooter = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardFooter, className) }, props), children));\n};\nCardFooter.displayName = 'CardFooter';\n//# sourceMappingURL=CardFooter.js.map","module.exports = __webpack_public_path__ + \"fonts/platform-default.svg\";","module.exports = __webpack_public_path__ + \"fonts/platform-openshift.svg\";","module.exports = __webpack_public_path__ + \"fonts/platform-amazon.png\";","module.exports = __webpack_public_path__ + \"fonts/platform-tower.png\";","/* eslint-disable react/prop-types */\nimport React from 'react';\n\n// TODO delete this component\nconst ImageWithDefault: React.ComponentType<any> = (props) => (\n  <img {...props} />\n);\n\nexport default ImageWithDefault;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  CardHeader,\n  CardFooter,\n  GalleryItem,\n  Text,\n  TextVariants,\n  TextContent\n} from '@patternfly/react-core';\nimport DefaultPlatformImg from '../../assets/images/platform-default.svg';\nimport OpenshiftPlatformImg from '../../assets/images/platform-openshift.svg';\nimport AmazonPlatformImg from '../../assets/images/platform-amazon.png';\nimport TowerPlatformImg from '../../assets/images/platform-tower.png';\nimport ImageWithDefault from '../shared/image-with-default';\nimport ItemDetails, { ItemDetailsProps } from '../shared/card-common';\n\nimport { PLATFORM_TEMPLATES_ROUTE } from '../../constants/routes';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport { StyledCard } from '../styled-components/styled-gallery';\nimport { StyledCardBody } from '../styled-components/card';\n\nconst TO_DISPLAY = ['description', 'modified'];\n\nconst platformTypeImg = {\n  1: OpenshiftPlatformImg,\n  2: AmazonPlatformImg,\n  3: TowerPlatformImg\n};\n\nexport interface PlatformCardProps extends ItemDetailsProps {\n  name: string;\n  id: string;\n  source_type_id: keyof typeof platformTypeImg;\n  imageUrl: string;\n}\nconst PlatformCard: React.ComponentType<PlatformCardProps> = ({\n  name,\n  id,\n  ...props\n}) => (\n  <GalleryItem>\n    <StyledCard key={id}>\n      <CardHeader>\n        <ImageWithDefault\n          src={platformTypeImg[props.source_type_id] || DefaultPlatformImg}\n          width=\"80\"\n          height=\"40\"\n        />\n      </CardHeader>\n      <StyledCardBody>\n        <TextContent>\n          <CatalogLink\n            pathname={PLATFORM_TEMPLATES_ROUTE}\n            searchParams={{ platform: id }}\n          >\n            <Text\n              title={name}\n              className=\"pf-u-mb-0\"\n              component={TextVariants.h3}\n            >\n              <EllipsisTextContainer>{name}</EllipsisTextContainer>\n            </Text>\n          </CatalogLink>\n        </TextContent>\n        <ItemDetails {...{ name, ...props }} toDisplay={TO_DISPLAY} />\n      </StyledCardBody>\n      <CardFooter />\n    </StyledCard>\n  </GalleryItem>\n);\n\nexport default PlatformCard;\n","import React, { Fragment, useEffect, useState, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport PlatformCard from '../../presentational-components/platform/platform-card';\nimport { createPlatformsToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport UserContext from '../../user-context';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst Platforms = () => {\n  const formatMessage = useFormatMessage();\n  const [filterValue, setFilterValue] = useState('');\n  const { platforms, isLoading } = useSelector(\n    ({ platformReducer: { platforms, isPlatformDataLoading } }) => ({\n      platforms,\n      isLoading: isPlatformDataLoading\n    })\n  );\n  const dispatch = useDispatch();\n  const {\n    userIdentity: {\n      identity: {\n        user: { is_org_admin }\n      }\n    }\n  } = useContext(UserContext);\n\n  useEffect(() => {\n    dispatch(fetchPlatforms());\n    scrollToTop();\n    insights.chrome.appNavClick({ id: 'platforms', secondaryNav: true });\n  }, []);\n\n  const renderEmptyStateDescription = () => (\n    <Fragment>\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {formatMessage(platformsMessages.configureSourceTitle)}\n        </Text>\n        {is_org_admin ? (\n          <Text component={TextVariants.p}>\n            {formatMessage(platformsMessages.connectSource, {\n              // eslint-disable-next-line react/display-name\n              a: (chunks) => (\n                <a href={`${document.baseURI}settings/sources`}>{chunks}</a>\n              )\n            })}\n          </Text>\n        ) : (\n          <Text>{formatMessage(platformsMessages.contactAdmin)}</Text>\n        )}\n      </TextContent>\n    </Fragment>\n  );\n  const filteredItems = {\n    items: platforms\n      .filter(({ name }) =>\n        name.toLowerCase().includes(filterValue.toLowerCase())\n      )\n      .map((item) => <PlatformCard key={item.id} {...item} />),\n    isLoading: isLoading && platforms.length === 0\n  };\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPlatformsToolbarSchema({\n          onFilterChange: (value) => setFilterValue(value),\n          searchValue: filterValue,\n          title: formatMessage(platformsMessages.title)\n        })}\n      />\n      <ContentGallery\n        {...filteredItems}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState\n            title={formatMessage(platformsMessages.noPlatforms)}\n            renderDescription={renderEmptyStateDescription}\n            Icon={SearchIcon}\n          />\n        )}\n      />\n    </Fragment>\n  );\n};\n\nexport default Platforms;\n"],"sourceRoot":""}