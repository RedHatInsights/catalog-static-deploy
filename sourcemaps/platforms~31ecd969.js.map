{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/sync-alt-icon.js","webpack:///./src/presentational-components/platform/platform-card.tsx","webpack:///./src/smart-components/platform/platforms.js","webpack:///./src/smart-components/common/async-pagination.tsx","webpack:///./src/messages/platforms.messages.ts","webpack:///./src/toolbar/schemas/platforms-toolbar.schema.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardHeader.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardFooter.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/cog-icon.js"],"names":["SyncAltIcon","createIcon","name","height","width","svgPath","yOffset","xOffset","TO_DISPLAY","initialState","isFetching","platformCardState","state","action","type","payload","id","updateData","props","formatMessage","dispatch","stateDispatch","GalleryItem","key","ouiaId","CardHeader","sourceId","Tooltip","content","refreshTooltip","variant","onClick","platformId","Promise","resolve","then","isDisabled","color","TextContent","pathname","searchParams","platform","title","className","component","h3","small","last_successful_refresh_at","DateFormat","date","info","platformVersion","version","ansibleVersion","ansible_version","toDisplay","CardFooter","Label","enabled","disabled","availability_status","available","notAvailable","Platforms","useFormatMessage","useState","filterValue","setFilterValue","useSelector","platformReducer","platforms","isLoading","isPlatformDataLoading","useDispatch","is_org_admin","useContext","UserContext","userIdentity","identity","user","useEffect","fetchPlatforms","scrollToTop","insights","chrome","appNavClick","secondaryNav","filteredItems","items","filter","toLowerCase","includes","map","item","length","emptyStateProps","PrimaryAction","Button","filteringMessages","clearFilters","href","document","baseURI","platformsMessages","connectSource","Text","contactAdmin","noResults","noPlatforms","description","noResultsDescription","platformsNoDataDescription","Icon","SearchIcon","CogIcon","schema","createPlatformsToolbarSchema","onFilterChange","value","searchValue","renderEmptyState","meta","limit","count","offset","apiProps","apiRequest","isCompact","perPage","itemCount","onPerPageSelect","_event","page","onSetPage","number","debounce","options","request","dropDirection","workflowColumn","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","offeringTitle","offeringParameters","platformSummary","mqttClientId","refreshState","refreshStarted","refreshFinished","lastSuccessfulRefresh","lastChecked","lastAvailable","availabilityStatus","dateAdded","lastRefreshMessage","fields","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","LEVEL","LEVEL_ITEM","FILTER_TOOLBAR_ITEM","placeholder","createPlatformsTopToolbarSchema","paddingBottom","tabItems","platformEnabled","platformAvailable","TOOLBAR_GROUP","TOOLBAR_ITEM","alignment","LABEL","AppTabs","createPlatformsFilterToolbarSchema","filterPlaceholder","TOOLBAR","AsyncPagination","_a","children","onExpand","toggleButtonProps","Consumer","cardId","Object","assign","cardHeader","cardHeaderToggle","evt","cardHeaderToggleIcon","displayName","Component","cardFooter","exports","__esModule","CogIconConfig"],"mappings":"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","file":"js/platforms~31ecd969.9b041e33414c3304c3f7.js","sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const SyncAltIconConfig = {\n  name: 'SyncAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M370.72 133.28C339.458 104.008 298.888 87.962 255.848 88c-77.458.068-144.328 53.178-162.791 126.85-1.344 5.363-6.122 9.15-11.651 9.15H24.103c-7.498 0-13.194-6.807-11.807-14.176C33.933 94.924 134.813 8 256 8c66.448 0 126.791 26.136 171.315 68.685L463.03 40.97C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.749zM32 296h134.059c21.382 0 32.09 25.851 16.971 40.971l-41.75 41.75c31.262 29.273 71.835 45.319 114.876 45.28 77.418-.07 144.315-53.144 162.787-126.849 1.344-5.363 6.122-9.15 11.651-9.15h57.304c7.498 0 13.194 6.807 11.807 14.176C478.067 417.076 377.187 504 256 504c-66.448 0-126.791-26.136-171.315-68.685L48.97 471.03C33.851 486.149 8 475.441 8 454.059V320c0-13.255 10.745-24 24-24z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const SyncAltIcon = createIcon(SyncAltIconConfig);\n\nexport default SyncAltIcon;","/* eslint-disable react/prop-types */\nimport React, { useReducer } from 'react';\nimport {\n  CardHeader,\n  CardFooter,\n  GalleryItem,\n  Text,\n  TextVariants,\n  TextContent,\n  Label,\n  Button,\n  Tooltip\n} from '@patternfly/react-core';\nimport ItemDetails, {\n  HeaderLevel,\n  HeaderTitle,\n  ItemDetailsProps\n} from '../shared/card-common';\n\nimport { PLATFORM_TEMPLATES_ROUTE } from '../../constants/routes';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport { StyledCard } from '../styled-components/styled-gallery';\nimport { StyledCardBody } from '../styled-components/card';\nimport CardIcon from '../shared/card-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\nimport labelMessages from '../../messages/labels.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport { SyncAltIcon } from '@patternfly/react-icons';\nimport { refreshPlatform } from '../../redux/actions/platform-actions';\nimport platformsMessages from '../../messages/platforms.messages';\nimport { useDispatch } from 'react-redux';\nimport { delay } from '../../helpers/shared/helpers';\n\nconst TO_DISPLAY = ['description', 'modified'];\n\nexport interface PlatformInfo {\n  version?: string;\n  ansible_version?: string;\n}\n\nexport interface PlatformCardProps extends ItemDetailsProps {\n  name: string;\n  id: string;\n  availability_status?: string;\n  last_successful_refresh_at?: string;\n  refresh_started_at?: string;\n  refresh_finished_at?: string;\n  info?: PlatformInfo;\n  source_type_id: string;\n  imageUrl: string;\n}\n\nconst initialState = {\n  isFetching: false\n};\n\nconst platformCardState = (state: any, action: { type: any; payload: any }) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n  }\n\n  return state;\n};\n\nconst PlatformCard: React.ComponentType<PlatformCardProps> = ({\n  name,\n  id,\n  updateData,\n  ...props\n}) => {\n  const formatMessage = useFormatMessage();\n  const dispatch = useDispatch();\n\n  const [{ isFetching }, stateDispatch] = useReducer(\n    platformCardState,\n    initialState\n  );\n  const handleRefreshPlatform = (platformId: string) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.resolve(dispatch(refreshPlatform(platformId))).then(async () => {\n      await delay(10000);\n      stateDispatch({ type: 'setFetching', payload: false });\n      updateData();\n    });\n  };\n\n  return (\n    <GalleryItem>\n      <StyledCard key={id} ouiaId={`platform-${id}`}>\n        <CardHeader>\n          <HeaderLevel>\n            <HeaderTitle>\n              <CardIcon height={40} sourceId={id} />\n            </HeaderTitle>\n            <Tooltip\n              content={\n                <Text>{formatMessage(platformsMessages.refreshTooltip)}</Text>\n              }\n            >\n              <Button\n                id={`refresh-platform-${id}`}\n                ouiaId={`refresh-platform-${id}`}\n                variant=\"link\"\n                onClick={() => handleRefreshPlatform(id)}\n                isDisabled={isFetching}\n              >\n                {isFetching ? (\n                  <SyncAltIcon key={`refresh-${id}`} color=\"grey\" />\n                ) : (\n                  <SyncAltIcon key={`refresh-${id}`} color=\"blue\" />\n                )}\n              </Button>\n            </Tooltip>\n          </HeaderLevel>\n        </CardHeader>\n        <StyledCardBody>\n          <TextContent>\n            <CatalogLink\n              pathname={PLATFORM_TEMPLATES_ROUTE}\n              searchParams={{ platform: id }}\n            >\n              <Text\n                title={name}\n                className=\"pf-u-mb-0\"\n                component={TextVariants.h3}\n              >\n                <EllipsisTextContainer>{name}</EllipsisTextContainer>\n              </Text>\n            </CatalogLink>\n            {isFetching ? (\n              <TextContent className=\"pf-u-mb-md\">\n                <Text component={TextVariants.small} className=\"pf-u-mb-0\">\n                  Retrieving data.... &nbsp;\n                </Text>\n              </TextContent>\n            ) : (\n              props.last_successful_refresh_at && (\n                <TextContent className=\"pf-u-mb-md\">\n                  <Text component={TextVariants.small} className=\"pf-u-mb-0\">\n                    Last refreshed &nbsp;\n                    <DateFormat\n                      date={props.last_successful_refresh_at}\n                      type=\"relative\"\n                    />\n                  </Text>\n                </TextContent>\n              )\n            )}\n            {props.info && (\n              <TextContent className=\"pf-u-mb-md\">\n                <Text component={TextVariants.small} className=\"pf-u-mb-0\">\n                  {formatMessage(platformsMessages.platformVersion)}\n                </Text>\n                <Text component={TextVariants.small} className=\"pf-u-mb-0\">\n                  {props?.info?.version}\n                </Text>\n                <Text component={TextVariants.small} className=\"pf-u-mb-0\">\n                  {formatMessage(platformsMessages.ansibleVersion)}\n                </Text>\n                <Text component={TextVariants.small} className=\"pf-u-mb-0\">\n                  {props?.info?.ansible_version}\n                </Text>\n              </TextContent>\n            )}\n          </TextContent>\n          <ItemDetails {...{ name, ...props }} toDisplay={TO_DISPLAY} />\n        </StyledCardBody>\n        <CardFooter>\n          <Label variant=\"filled\" color={props.enabled ? 'green' : 'red'}>\n            {props.enabled\n              ? formatMessage(labelMessages.enabled)\n              : formatMessage(labelMessages.disabled)}\n          </Label>\n          &nbsp;\n          <Label\n            variant=\"filled\"\n            color={props.availability_status === 'available' ? 'green' : 'red'}\n          >\n            {props.availability_status === 'available'\n              ? formatMessage(labelMessages.available)\n              : formatMessage(labelMessages.notAvailable)}\n          </Label>\n        </CardFooter>\n      </StyledCard>\n    </GalleryItem>\n  );\n};\n\nexport default PlatformCard;\n","import React, { Fragment, useEffect, useState, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Text } from '@patternfly/react-core';\nimport { SearchIcon, CogIcon } from '@patternfly/react-icons';\n\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport PlatformCard from '../../presentational-components/platform/platform-card';\nimport { createPlatformsToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport UserContext from '../../user-context';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport filteringMessages from '../../messages/filtering.messages';\n\nconst Platforms = () => {\n  const formatMessage = useFormatMessage();\n  const [filterValue, setFilterValue] = useState('');\n  const { platforms, isLoading } = useSelector(\n    ({ platformReducer: { platforms, isPlatformDataLoading } }) => ({\n      platforms,\n      isLoading: isPlatformDataLoading\n    })\n  );\n  const dispatch = useDispatch();\n  const {\n    userIdentity: {\n      identity: {\n        user: { is_org_admin }\n      }\n    }\n  } = useContext(UserContext);\n\n  useEffect(() => {\n    dispatch(fetchPlatforms());\n    scrollToTop();\n    insights.chrome.appNavClick({ id: 'platforms', secondaryNav: true });\n  }, []);\n\n  const filteredItems = {\n    items: platforms\n      .filter(({ name }) =>\n        name.toLowerCase().includes(filterValue.toLowerCase())\n      )\n      .map((item) => (\n        <PlatformCard\n          ouiaId={`platform-${item.id}`}\n          key={item.id}\n          {...item}\n          updateData={() => dispatch(fetchPlatforms())}\n        />\n      )),\n    isLoading: isLoading && platforms.length === 0\n  };\n\n  const NoDataAction = () =>\n    is_org_admin ? (\n      <Button\n        component=\"a\"\n        href={`${document.baseURI}settings/sources`}\n        id=\"add-source\"\n      >\n        {formatMessage(platformsMessages.connectSource)}\n      </Button>\n    ) : (\n      <Text>{formatMessage(platformsMessages.contactAdmin)}</Text>\n    );\n\n  const FilterAction = () => (\n    <Button\n      ouiaId={'clear-filter'}\n      variant=\"link\"\n      onClick={() => setFilterValue('')}\n    >\n      {formatMessage(filteringMessages.clearFilters)}\n    </Button>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction:\n      filterValue && filterValue !== '' ? FilterAction : NoDataAction,\n    title:\n      filterValue && filterValue !== ''\n        ? formatMessage(filteringMessages.noResults)\n        : formatMessage(platformsMessages.noPlatforms),\n    description:\n      filterValue && filterValue !== ''\n        ? formatMessage(filteringMessages.noResultsDescription)\n        : formatMessage(platformsMessages.platformsNoDataDescription),\n    Icon: filterValue && filterValue !== '' ? SearchIcon : CogIcon\n  };\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPlatformsToolbarSchema({\n          onFilterChange: (value) => setFilterValue(value),\n          searchValue: filterValue,\n          title: formatMessage(platformsMessages.title)\n        })}\n      />\n      <ContentGallery\n        {...filteredItems}\n        renderEmptyState={() => {\n          return <ContentGalleryEmptyState {...emptyStateProps} />;\n        }}\n      />\n    </Fragment>\n  );\n};\n\nexport default Platforms;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { OnPerPageSelect, OnSetPage, Pagination } from '@patternfly/react-core';\n\nimport {\n  getCurrentPage,\n  getNewPage,\n  PaginationConfiguration\n} from '../../helpers/shared/pagination';\nimport { AnyObject } from '@data-driven-forms/react-form-renderer';\n\nexport interface AsyncPaginationProps<T = any> extends AnyObject {\n  meta: PaginationConfiguration;\n  apiRequest: (...args: any[]) => Promise<T>;\n  apiProps?: any;\n  className?: string;\n  isCompact?: boolean;\n}\nconst AsyncPagination: React.ComponentType<AsyncPaginationProps> = ({\n  meta: { limit = 50, count = 0, offset = 0 },\n  apiProps,\n  apiRequest,\n  className = '',\n  isCompact = false,\n  ...props\n}) => {\n  const handleOnPerPageSelect: OnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage: OnSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        dropDirection=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default AsyncPagination;\n","import { defineMessages } from 'react-intl';\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  platformsNoDataDescription: {\n    id: 'platforms.list.configure-source',\n    defaultMessage: 'To get started, add an Ansible Tower cluster as a source.'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage: 'Go to Sources'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  },\n  platformVersion: {\n    id: 'platforms.version',\n    defaultMessage: 'Platform version'\n  },\n  ansibleVersion: {\n    id: 'platforms.ansible.version',\n    defaultMessage: 'Ansible version'\n  },\n  platformSummary: {\n    id: 'platforms.summary',\n    defaultMessage: 'Summmary'\n  },\n  mqttClientId: {\n    id: 'platform.mqttClientId',\n    defaultMessage: 'MQTT Client Id'\n  },\n  refreshState: {\n    id: 'platforms.refreshState',\n    defaultMessage: 'Refresh state'\n  },\n  refreshStarted: {\n    id: 'platforms.refreshStarted',\n    defaultMessage: 'Refresh started'\n  },\n  refreshFinished: {\n    id: 'platforms.refreshFinished',\n    defaultMessage: 'Refresh finished'\n  },\n  lastSuccessfulRefresh: {\n    id: 'platforms.lastSuccessfulRefresh',\n    defaultMessage: 'Last successful refresh'\n  },\n  lastChecked: {\n    id: 'platforms.lastChecked',\n    defaultMessage: 'Last checked'\n  },\n  lastAvailable: {\n    id: 'platforms.lastAvailable',\n    defaultMessage: 'Last available'\n  },\n  enabled: {\n    id: 'platforms.enabled',\n    defaultMessage: 'Enabled'\n  },\n  availabilityStatus: {\n    id: 'platforms.availabilityStatus',\n    defaultMessage: 'Availability status'\n  },\n  dateAdded: {\n    id: 'platforms.dateAdded',\n    defaultMessage: 'Date added'\n  },\n  refreshTooltip: {\n    id: 'platforms.refreshTooltip',\n    defaultMessage: 'Refresh platform'\n  },\n  lastRefreshMessage: {\n    id: 'platforms.lastRefreshMessage',\n    defaultMessage: 'Last refresh message'\n  }\n});\n\nexport default platformsMessages;\n","import AppTabs from '../../presentational-components/shared/app-tabs';\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nexport const createPlatformsToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  title\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'platforms-toolbar-title',\n          title\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: 'Filter by platform'\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields: []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsTopToolbarSchema = ({\n  title,\n  paddingBottom,\n  tabItems,\n  platformEnabled,\n  platformAvailable\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'platforms-toolbar',\n      paddingBottom,\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          fields: [\n            {\n              component: toolbarComponentTypes.TOOLBAR_GROUP,\n              key: 'platform-toolbar',\n              fields: [\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'platform-toolbar-group',\n                  fields: [\n                    {\n                      component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n                      key: 'platforms-toolbar-title',\n                      title\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.TOOLBAR_GROUP,\n              key: 'platform-toolbar',\n              alignment: 'alignRight',\n              fields: [\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'platform-label',\n                  alignment: 'alignRight',\n                  fields: [\n                    {\n                      component: toolbarComponentTypes.LABEL,\n                      key: 'platform-enabled-label',\n                      ...platformEnabled()\n                    },\n                    {\n                      component: toolbarComponentTypes.LABEL,\n                      key: 'platform-available-label',\n                      ...platformAvailable()\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          component: toolbarComponentTypes.LEVEL_ITEM,\n          key: 'tabs-level-item',\n          fields: tabItems\n            ? [\n                {\n                  component: AppTabs,\n                  key: 'platform-tabs',\n                  tabItems\n                }\n              ]\n            : []\n        }\n      ]\n    }\n  ]\n});\n\nexport const createPlatformsFilterToolbarSchema = ({\n  searchValue,\n  onFilterChange,\n  meta,\n  apiRequest,\n  filterPlaceholder\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOOLBAR,\n      key: 'platforms-filter-toolbar',\n      className: 'pf-u-pt-md pf-u-pb-md pf-u-pr-lg pf-u-pl-lg',\n      fields: [\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'platforms-toolbar-actions',\n          className: 'pf-m-grow',\n          fields: [\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'input-level-item',\n              fields: [\n                {\n                  component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                  key: 'platforms-toolbar-filter-input',\n                  searchValue,\n                  onFilterChange,\n                  placeholder: filterPlaceholder\n                }\n              ]\n            },\n            {\n              component: toolbarComponentTypes.LEVEL_ITEM,\n              key: 'pagination-level-item',\n              fields:\n                meta.count > 0\n                  ? [\n                      {\n                        component: AsyncPagination,\n                        key: 'platform-pagination',\n                        apiRequest,\n                        meta,\n                        isCompact: true\n                      }\n                    ]\n                  : []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n});\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { CardContext } from './Card';\nimport { Button } from '../Button';\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nexport const CardHeader = (_a) => {\n    var { children = null, className = '', id, onExpand, toggleButtonProps } = _a, props = __rest(_a, [\"children\", \"className\", \"id\", \"onExpand\", \"toggleButtonProps\"]);\n    return (React.createElement(CardContext.Consumer, null, ({ cardId }) => (React.createElement(\"div\", Object.assign({ className: css(styles.cardHeader, className), id: id }, props),\n        onExpand && (React.createElement(\"div\", { className: css(styles.cardHeaderToggle) },\n            React.createElement(Button, Object.assign({ variant: \"plain\", type: \"button\", onClick: evt => {\n                    onExpand(evt, cardId);\n                } }, toggleButtonProps),\n                React.createElement(\"span\", { className: css(styles.cardHeaderToggleIcon) },\n                    React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" }))))),\n        children))));\n};\nCardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nexport const CardFooter = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardFooter, className) }, props), children));\n};\nCardFooter.displayName = 'CardFooter';\n//# sourceMappingURL=CardFooter.js.map","\"use strict\"\nexports.__esModule = true;\nexports.CogIconConfig = {\n  name: 'CogIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CogIcon = require('../createIcon').createIcon(exports.CogIconConfig);\nexports[\"default\"] = exports.CogIcon;"],"sourceRoot":""}