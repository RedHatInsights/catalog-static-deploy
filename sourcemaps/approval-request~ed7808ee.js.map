{"version":3,"sources":["webpack:///./src/smart-components/order/order-detail/approval-request.js"],"names":["delay","ms","Promise","resolve","setTimeout","checkRequest","fetchRequests","a","data","length","isEmpty","approvalRequest","ApprovalRequests","dispatch","useDispatch","useSelector","orderReducer","orderDetail","order","orderItem","useEffect","state","id","fetchApprovalRequests","direction","default","grow","size","headingLevel","component","TextVariants","h2","map","request","key","TextListVariants","dl","TextListItemVariants","dt","href","document","baseURI","approval_request_ref","dd","date","created_at","variant","reason","request_completed_at"],"mappings":"2QAmBMA,EAAQ,SAACC,GAAD,OAAQ,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OAE7DI,EAAY,+BAAG,WAAOC,GAAP,SAAAC,EAAA,sEAGID,IAHJ,mBAINE,KAAKC,OAAS,GAJR,yCAKR,YALQ,uBAQXT,EAAM,KARK,kEAAH,sDAYZU,EAAU,SAACC,GAAD,OACbA,IACAA,EAAgBH,MACe,IAAhCG,EAAgBH,KAAKC,QAqGRG,UAnGU,WACvB,IAAMC,EAAWC,wBADY,EAEiBC,uBAC5C,qBAAGC,aAAgBC,eADbC,EAFqB,EAErBA,MAAOP,EAFc,EAEdA,gBAAiBQ,EAFH,EAEGA,UAUhC,OANAC,qBAAU,WACY,WAAhBF,EAAMG,QAAsBF,aAA5B,EAA4BA,EAAWG,KAAMZ,EAAQC,IACvDN,GAAa,kBAAMQ,EAASU,YAAsBJ,EAAUG,UAE7D,IAEiB,WAAhBJ,EAAMG,OAAsBX,EAAQC,GAEpC,kBAAC,WAAD,CAAUW,GAAG,wBACX,kBAAC,OAAD,CAAME,UAAW,CAAEC,QAAS,UAAYC,KAAM,CAAED,QAAS,SACvD,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAUE,KAAK,QAEjB,kBAAC,WAAD,KACE,kBAAC,QAAD,CAAOC,aAAa,KAAKD,KAAK,OAA9B,mEAUR,kBAAC,cAAD,KACGjB,EAAQC,GACP,kBAAC,WAAD,KACE,kBAAC,OAAD,CAAMa,UAAW,CAAEC,QAAS,UAAYC,KAAM,CAAED,QAAS,SACvD,kBAAC,WAAD,CAAUH,GAAI,6BACZ,kBAAC,QAAD,CAAOM,aAAa,KAAKD,KAAK,MAA9B,8BAIF,kBAAC,WAAD,KACE,kBAAC,UAAD,CAASA,KAAK,UAKpB,kBAAC,WAAD,KACE,kBAAC,OAAD,CAAME,UAAWC,eAAaC,IAA9B,oBACCpB,EAAgBH,KAAKwB,KAAI,SAACC,GAAD,OACxB,kBAAC,WAAD,CAAUC,IAAKD,EAAQX,GAAIO,UAAWM,mBAAiBC,IACrD,kBAAC,eAAD,CAAcP,UAAWQ,uBAAqBC,IAC5C,uBACEC,KAAI,UAAKC,SAASC,QAAd,oDAAiER,EAAQS,uBAD/E,+CAMF,kBAAC,eAAD,CAAcb,UAAWQ,uBAAqBC,IAA9C,mBAGA,kBAAC,eAAD,CAAcT,UAAWQ,uBAAqBM,IAC5C,kBAAC,aAAD,CAAYC,KAAM1B,EAAM2B,WAAYC,QAAQ,cAE9C,kBAAC,eAAD,CAAcjB,UAAWQ,uBAAqBC,IAA9C,SAGA,kBAAC,eAAD,CAAcT,UAAWQ,uBAAqBM,IAC3CV,EAAQZ,OAEVY,EAAQc,QACP,kBAAC,WAAD,KACE,kBAAC,eAAD,CAAclB,UAAWQ,uBAAqBC,IAA9C,mBAGA,kBAAC,eAAD,CAAcT,UAAWQ,uBAAqBM,IAC3CV,EAAQc,SAIdd,EAAQe,sBACP,kBAAC,WAAD,KACE,kBAAC,eAAD,CAAcnB,UAAWQ,uBAAqBC,IAA9C,gBAGA,kBAAC,eAAD,CAAcT,UAAWQ,uBAAqBM,IAC5C,kBAAC,aAAD,CACEC,KAAMX,EAAQe,qBACdF,QAAQ","file":"js/approval-request~ed7808ee.e6c0c32b18efc8ee906a.js","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Bullseye,\n  Flex,\n  Spinner,\n  TextContent,\n  Text,\n  TextVariants,\n  TextList,\n  TextListVariants,\n  TextListItem,\n  TextListItemVariants,\n  Title\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/components/cjs/DateFormat';\nimport InfoIcon from '@patternfly/react-icons/dist/js/icons/info-icon';\nimport { fetchApprovalRequests } from '../../../redux/actions/order-actions';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst checkRequest = async (fetchRequests) => {\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const result = await fetchRequests();\n    if (result.data.length > 0) {\n      return 'Finished';\n    }\n\n    await delay(3000);\n  }\n};\n\nconst isEmpty = (approvalRequest) =>\n  !approvalRequest ||\n  !approvalRequest.data ||\n  approvalRequest.data.length === 0;\n\nconst ApprovalRequests = () => {\n  const dispatch = useDispatch();\n  const { order, approvalRequest, orderItem } = useSelector(\n    ({ orderReducer: { orderDetail } }) => orderDetail\n  );\n\n  useEffect(() => {\n    if (order.state !== 'Failed' && orderItem?.id && isEmpty(approvalRequest)) {\n      checkRequest(() => dispatch(fetchApprovalRequests(orderItem.id)));\n    }\n  }, []);\n\n  if (order.state === 'Failed' && isEmpty(approvalRequest)) {\n    return (\n      <Bullseye id=\"no-approval-requests\">\n        <Flex direction={{ default: 'column' }} grow={{ default: 'grow' }}>\n          <Bullseye>\n            <InfoIcon size=\"xl\" />\n          </Bullseye>\n          <Bullseye>\n            <Title headingLevel=\"h1\" size=\"2xl\">\n              We were unable to find any approval requests for this order.\n            </Title>\n          </Bullseye>\n        </Flex>\n      </Bullseye>\n    );\n  }\n\n  return (\n    <TextContent>\n      {isEmpty(approvalRequest) ? (\n        <Bullseye>\n          <Flex direction={{ default: 'column' }} grow={{ default: 'grow' }}>\n            <Bullseye id={'creating-approval-request'}>\n              <Title headingLevel=\"h1\" size=\"xl\">\n                Creating approval request\n              </Title>\n            </Bullseye>\n            <Bullseye>\n              <Spinner size=\"xl\" />\n            </Bullseye>\n          </Flex>\n        </Bullseye>\n      ) : (\n        <Fragment>\n          <Text component={TextVariants.h2}>Approval request</Text>\n          {approvalRequest.data.map((request) => (\n            <TextList key={request.id} component={TextListVariants.dl}>\n              <TextListItem component={TextListItemVariants.dt}>\n                <a\n                  href={`${document.baseURI}ansible/catalog/approval/request?request=${request.approval_request_ref}`}\n                >\n                  {`View this order's approval request details`}\n                </a>\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                Request created\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                <DateFormat date={order.created_at} variant=\"relative\" />\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dt}>\n                State\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd}>\n                {request.state}\n              </TextListItem>\n              {request.reason && (\n                <Fragment>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Approval reason\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {request.reason}\n                  </TextListItem>\n                </Fragment>\n              )}\n              {request.request_completed_at && (\n                <Fragment>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    Completed at\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    <DateFormat\n                      date={request.request_completed_at}\n                      variant=\"relative\"\n                    />\n                  </TextListItem>\n                </Fragment>\n              )}\n            </TextList>\n          ))}\n        </Fragment>\n      )}\n    </TextContent>\n  );\n};\n\nexport default ApprovalRequests;\n"],"sourceRoot":""}