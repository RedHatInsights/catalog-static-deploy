{"version":3,"file":"js/orders.1641592425834.c8ea49a35a067ffa227c.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/EmptyTable/EmptyTable.js","webpack:///./src/messages/filtering.messages.ts","webpack:///./src/messages/states.messages.ts","webpack:///./src/presentational-components/styled-components/lazy-load-image.ts","webpack:///./src/presentational-components/shared/card-icon.tsx","webpack:///./src/smart-components/common/async-pagination.tsx","webpack:///./src/smart-components/order/order-status-mapper.tsx","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/TableToolbar/TableToolbar.js","webpack:///./src/helpers/shared/orders.ts","webpack:///./src/smart-components/order/orders-list.tsx","webpack:///./src/smart-components/order/order-item.tsx","webpack:///./src/smart-components/order/orders.tsx","webpack:///./src/toolbar/schemas/orders-toolbar.schema.ts"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport \"../../EmptyTable/./EmptyTable.css\";\n\nvar EmptyTable = function EmptyTable(_ref) {\n  var centered = _ref.centered,\n      className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"centered\", \"className\", \"children\"]);\n\n  var emptyTableClasses = classNames('ins-c-table__empty', _defineProperty({}, \"is-centered\", centered), className);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: emptyTableClasses\n  }, props), \" \", children);\n};\n\nexport default EmptyTable;\nEmptyTable.propTypes = {\n  centered: propTypes.bool,\n  children: propTypes.any,\n  className: propTypes.string\n};","import { defineMessages } from 'react-intl';\n\nconst filteringMessages = defineMessages({\n  noItems: {\n    id: 'common.filtering.noItems',\n    defaultMessage: 'No items found'\n  },\n  filterByProduct: {\n    id: 'common.filtering.filterByProduct',\n    defaultMessage: 'Filter by product'\n  },\n  noResults: {\n    id: 'common.filtering.noResults',\n    defaultMessage: 'No results found'\n  },\n  noResultsDescription: {\n    id: 'common.filtering.noResultsDescription',\n    defaultMessage:\n      'No results match the filter criteria. Remove all filters or clear all filters to show results.'\n  },\n  clearFilters: {\n    id: 'common.filtering.clear-filters',\n    defaultMessage: 'Clear all filters'\n  },\n  noProducts: {\n    id: 'common.filtering.no-products',\n    defaultMessage: 'No products yet'\n  },\n  noRecords: {\n    id: 'commonMessages.noRecords',\n    defaultMessage: 'No records'\n  },\n  filterByTitle: {\n    id: 'tableToolbar.filterByTitle',\n    defaultMessage: 'Filter by {title}'\n  },\n  noResultsFound: {\n    id: 'tableToolbar.noResultsFound',\n    defaultMessage: 'No results found'\n  },\n  noResult: {\n    id: 'tableToolbar.noResult',\n    defaultMessage: 'No {results}'\n  },\n  unknown: {\n    id: 'commonMessages.unknown',\n    defaultMessage: 'Unknown'\n  }\n});\n\nexport default filteringMessages;\n","import labelMessages from './labels.messages';\n\nimport { defineMessages } from 'react-intl';\n\nconst statesMessages = defineMessages({\n  title: {\n    id: 'common.states.title',\n    defaultMessage: 'State'\n  },\n  ordered: {\n    id: 'common.states.ordered',\n    defaultMessage: 'Ordered'\n  },\n  approvalPending: {\n    id: 'common.states.approval-pending',\n    defaultMessage: 'Approval Pending'\n  },\n  canceled: {\n    id: 'common.states.canceled',\n    defaultMessage: 'Canceled'\n  },\n  completed: {\n    id: 'common.states.completed',\n    defaultMessage: 'Completed'\n  },\n  failed: {\n    id: 'common.states.failed',\n    defaultMessage: 'Failed'\n  },\n  undecided: {\n    id: 'common.states.undecided',\n    defaultMessage: 'Undecided'\n  },\n  approved: {\n    id: 'common.states.approved',\n    defaultMessage: 'Approved'\n  },\n  denied: {\n    id: 'common.states.denied',\n    defaultMessage: 'Denied'\n  },\n  error: {\n    id: 'common.states.error',\n    defaultMessage: 'Error'\n  },\n  pending: {\n    id: 'common.states.pending',\n    defaultMessage: 'Pending'\n  },\n  skipped: {\n    id: 'common.states.skipped',\n    defaultMessage: 'Skipped'\n  },\n  started: {\n    id: 'common.states.started',\n    defaultMessage: 'Started'\n  },\n  notified: {\n    id: 'common.states.notified',\n    defaultMessage: 'Notified'\n  },\n  unknown: {\n    id: 'common.states.unknown',\n    defaultMessage: 'Unknown'\n  }\n});\n\nexport const getTranslatableState = (\n  state: string\n): keyof typeof statesMessages =>\n  (state\n    ? state.replace(/\\s/g, '').replace(/^./, (char) => char.toLowerCase())\n    : 'unknown') as keyof typeof statesMessages;\n\n/**\n * We must include the created state so the dynamic data from DB can look for these messages in one place\n * The created message is shared among other components and is just a state message\n */\nexport default { ...statesMessages, created: labelMessages.created };\n","import styled from 'styled-components';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst StyledLazyLoadImage = styled(LazyLoadImage)`\n  height: ${({ height, hidden }) => (hidden ? '0px' : `${height}px` || '40px')};\n  display: ${({ hidden }) => (hidden ? 'none' : 'inherit')};\n  float: ${({ hidden }) => (hidden ? 'left' : 'inherit')};\n  width: ${({ hidden }) => (hidden ? 0 : 'inherit')};\n`;\n\nexport default StyledLazyLoadImage;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\n\nimport { IconPlaceholder } from './loader-placeholders';\nimport CardIconDefault from '../../assets/images/card-icon-default.svg';\nimport StyledLazyLoadImage from '../styled-components/lazy-load-image';\nimport { CatalogRootState } from '../../types/redux';\nimport { StringObject } from '../../types/common-types';\n\ninterface CardIconContainerProps {\n  height: number;\n}\nconst CardIconContainer = styled.div<CardIconContainerProps>`\n  display: inline-block;\n  height: ${({ height }) => `${height}px`};\n`;\n\nexport interface CardIconProps {\n  src?: string;\n  height?: number;\n  sourceId?: string;\n}\nconst CardIcon: React.ComponentType<CardIconProps> = ({\n  src,\n  height = 40,\n  sourceId\n}) => {\n  const [isLoaded, setLoaded] = useState(false);\n  const [isUnknown, setUnknown] = useState(false);\n  const platformIconMapping = useSelector<CatalogRootState, StringObject>(\n    ({ platformReducer: { platformIconMapping } }) => platformIconMapping\n  );\n  const defaultIcon = sourceId\n    ? platformIconMapping[sourceId]\n    : CardIconDefault;\n\n  return (\n    <CardIconContainer height={height}>\n      {!isLoaded && <IconPlaceholder height={height} />}\n      <StyledLazyLoadImage\n        threshold={2000}\n        delayTime={0}\n        hidden={!isLoaded}\n        height={isLoaded ? height : 0}\n        onError={() => setUnknown(true)}\n        onLoad={() => setLoaded(true)}\n        src={!src || isUnknown ? defaultIcon : src}\n      />\n    </CardIconContainer>\n  );\n};\n\nexport default CardIcon;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { OnPerPageSelect, OnSetPage, Pagination } from '@patternfly/react-core';\n\nimport {\n  getCurrentPage,\n  getNewPage,\n  PaginationConfiguration\n} from '../../helpers/shared/pagination';\nimport { AnyObject } from '@data-driven-forms/react-form-renderer';\n\nexport interface AsyncPaginationProps<T = any> extends AnyObject {\n  meta: PaginationConfiguration;\n  apiRequest: (...args: any[]) => Promise<T>;\n  apiProps?: any;\n  className?: string;\n  isCompact?: boolean;\n}\nconst AsyncPagination: React.ComponentType<AsyncPaginationProps> = ({\n  meta: { limit = 50, count = 0, offset = 0 },\n  apiProps,\n  apiRequest,\n  className = '',\n  isCompact = false,\n  ...props\n}) => {\n  const handleOnPerPageSelect: OnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage: OnSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        dropDirection=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default AsyncPagination;\n","import React, { ReactNode } from 'react';\nimport {\n  ExclamationCircleIcon,\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n  ClockIcon,\n  PlusCircleIcon\n} from '@patternfly/react-icons';\n\nconst orderStatusMapper: {\n  Completed: { icon: ReactNode; color: 'green' };\n  Ordered: { icon: ReactNode; color: 'grey' };\n  Failed: { icon: ReactNode; color: 'red' };\n  Canceled: { icon: ReactNode; color: 'orange' };\n  Created: { icon: ReactNode; color: 'grey' };\n  'Approval Pending': { icon: ReactNode; color: 'blue' };\n  Approved: { icon: ReactNode; color: 'green' };\n  Denied: { icon: ReactNode; color: 'red' };\n  Undecided: { icon: ReactNode; color: 'blue' };\n  Unknown: { icon: ReactNode; color: 'grey' };\n  Error: { icon: ReactNode; color: 'red' };\n} = {\n  Completed: { icon: <CheckCircleIcon />, color: 'green' },\n  'Approval Pending': {\n    icon: <ClockIcon />,\n    color: 'blue'\n  },\n  Ordered: { icon: <PlusCircleIcon />, color: 'grey' },\n  Failed: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Canceled: { icon: <ExclamationTriangleIcon />, color: 'orange' },\n  Created: { icon: <PlusCircleIcon />, color: 'grey' },\n  Approved: { icon: <CheckCircleIcon />, color: 'green' },\n  Denied: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Error: { icon: <ExclamationCircleIcon />, color: 'red' },\n  Undecided: {\n    icon: <ClockIcon />,\n    color: 'blue'\n  },\n  Unknown: { icon: <ExclamationTriangleIcon />, color: 'grey' }\n};\n\nexport default orderStatusMapper;\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React, { Fragment } from 'react';\nimport { Toolbar } from \"@patternfly/react-core/dist/esm/components/Toolbar/Toolbar.js\";\nimport { useOUIAId } from '@patternfly/react-core/';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\nimport \"../../TableToolbar/./TableToolbar.css\";\n\nfunction generateCount(results) {\n  if (results > 1 || results < 1) {\n    return \"\".concat(results, \" Results\");\n  } else {\n    return \"\".concat(results, \" Result\");\n  }\n}\n\nvar TableToolbar = function TableToolbar(_ref) {\n  var isFooter = _ref.isFooter,\n      results = _ref.results,\n      className = _ref.className,\n      selected = _ref.selected,\n      children = _ref.children,\n      ouiaId = _ref.ouiaId,\n      _ref$ouiaSafe = _ref.ouiaSafe,\n      ouiaSafe = _ref$ouiaSafe === void 0 ? true : _ref$ouiaSafe,\n      props = _objectWithoutProperties(_ref, [\"isFooter\", \"results\", \"className\", \"selected\", \"children\", \"ouiaId\", \"ouiaSafe\"]);\n\n  var tableToolbarClasses = classNames('ins-c-table__toolbar', _defineProperty({}, \"ins-m-footer\", isFooter), className);\n  var ouiaComponentType = 'RHI/TableToolbar';\n  var ouiaFinalId = useOUIAId(ouiaComponentType, ouiaId, ouiaSafe);\n  return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(Toolbar, _extends({\n    className: tableToolbarClasses,\n    \"data-ouia-component-type\": ouiaComponentType,\n    \"data-ouia-component-id\": ouiaFinalId,\n    \"data-ouia-safe\": ouiaSafe\n  }, props), children), (results >= 0 || selected >= 0) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ins-c-table__toolbar-results\"\n  }, results >= 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ins-c-table__toolbar-results-count\"\n  }, \" \", generateCount(results), \" \"), selected >= 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ins-c-table__toolbar-results-selected\"\n  }, \" \", selected, \" Selected \")));\n};\n\nexport default TableToolbar;\nTableToolbar.propTypes = {\n  isFooter: propTypes.bool,\n  results: propTypes.number,\n  children: propTypes.any,\n  className: propTypes.string,\n  selected: propTypes.number,\n  ouiaId: propTypes.string,\n  ouiaSafe: propTypes.bool\n};\nTableToolbar.defaultProps = {\n  isFooter: false\n};","import { CATALOG_API_BASE } from '../../utilities/constants';\nimport { PortfolioItem } from '@redhat-cloud-services/catalog-client';\nimport { OrderDetail } from '../../redux/reducers/order-reducer';\n\nexport const getOrderIcon = (orderDetail: OrderDetail): string | undefined => {\n  if (localStorage.getItem('catalog_standalone')) {\n    const orderItem =\n      orderDetail?.extra_data?.order_items &&\n      orderDetail?.extra_data?.order_items[0];\n    return orderItem?.extra_data?.portfolio_item?.icon_url;\n  } else {\n    const { orderItems } = orderDetail;\n    return (\n      orderItems &&\n      orderItems[0] &&\n      `${CATALOG_API_BASE}/portfolio_items/${orderItems[0].portfolio_item_id}/icon`\n    );\n  }\n};\n\nconst getIOrderPortfolioName = (\n  { orderItems, id }: OrderDetail,\n  portfolioItems: PortfolioItem[]\n): string => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem ? portfolioItem.name : `Order ${id}`;\n};\n\nconst getSOrderPortfolioName = (order: OrderDetail): string => {\n  const orderItem = order?.extra_data?.order_items[0];\n  const portfolioItem = orderItem?.extra_data.portfolio_item;\n  return portfolioItem ? portfolioItem.name : `Order ${order.id}`;\n};\n\nexport const getOrderPortfolioName = (\n  order: OrderDetail,\n  portfolioItems: PortfolioItem[]\n): string =>\n  localStorage.getItem('catalog_standalone')\n    ? getSOrderPortfolioName(order)\n    : getIOrderPortfolioName(order, portfolioItems);\n\nconst getIOrderPlatformId = (\n  { orderItems }: OrderDetail,\n  portfolioItems: PortfolioItem[]\n): {\n  orderPlatform?: string;\n  orderPortfolio?: string;\n} => {\n  const portfolioItem =\n    orderItems[0] &&\n    portfolioItems.find(({ id }) => orderItems[0].portfolio_item_id === id);\n  return portfolioItem\n    ? {\n        orderPlatform: portfolioItem.service_offering_source_ref,\n        orderPortfolio: portfolioItem.portfolio_id\n      }\n    : {};\n};\n\nconst getSOrderPlatformId = (\n  order: OrderDetail\n): {\n  orderPlatform?: string;\n  orderPortfolio?: string;\n} => {\n  const orderItem = order?.extra_data?.order_items[0];\n  const portfolioItem = orderItem?.extra_data.portfolio_item;\n  return portfolioItem\n    ? {\n        orderPlatform: portfolioItem.service_offering_source_ref,\n        orderPortfolio: portfolioItem.portfolio_id\n      }\n    : {};\n};\n\nexport const getOrderPlatformId = (\n  order: OrderDetail,\n  portfolioItems: PortfolioItem[]\n): {\n  orderPlatform?: string;\n  orderPortfolio?: string;\n} =>\n  localStorage.getItem('catalog_standalone')\n    ? getSOrderPlatformId(order)\n    : getIOrderPlatformId(order, portfolioItems);\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Grid,\n  GridItem,\n  Title,\n  Bullseye,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Flex,\n  EmptyStateSecondaryActions,\n  Button\n} from '@patternfly/react-core';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport {\n  Chip,\n  PrimaryToolbar\n} from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  sortable,\n  SortByDirection,\n  ISortBy,\n  OnSort,\n  ICell\n} from '@patternfly/react-table';\n\nimport { fetchOrders } from '../../redux/actions/order-actions';\nimport { fetchOrders as fetchOrdersS } from '../../redux/actions/order-actions-s';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport { fetchPlatforms as fetchPlatformsS } from '../../redux/actions/platform-actions-s';\nimport { ListLoader } from '../../presentational-components/shared/loader-placeholders';\nimport createOrderItem from './order-item';\nimport AsyncPagination from '../common/async-pagination';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport {\n  defaultSettings,\n  PaginationConfiguration\n} from '../../helpers/shared/pagination';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport statesMessages from '../../messages/states.messages';\nimport filteringMessages from '../../messages/filtering.messages';\nimport ordersMessages from '../../messages/orders.messages';\nimport labelMessages from '../../messages/labels.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport {\n  getOrderPlatformId,\n  getOrderPortfolioName\n} from '../../helpers/shared/orders';\nimport { CatalogRootState } from '../../types/redux';\nimport {\n  ApiCollectionResponse,\n  Full,\n  StringObject\n} from '../../types/common-types';\n\nimport { PortfolioItem } from '@redhat-cloud-services/catalog-client';\nimport { OrderDetail } from '../../redux/reducers/order-reducer';\n\nconst debouncedFilter = asyncFormValidator(\n  (filters, meta = defaultSettings, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(\n      localStorage.getItem('catalog_standalone')\n        ? fetchOrdersS(filters, meta)\n        : fetchOrders(filters, meta)\n    ).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst initialState = {\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false,\n  filterType: 'state',\n  filters: {\n    state: [],\n    owner: ''\n  },\n  sortBy: {\n    index: 0,\n    direction: SortByDirection.desc\n  }\n};\n\nconst changeFilters = (\n  value: string,\n  type: string,\n  filters: StringObject\n): StringObject => ({\n  ...filters,\n  [type]: value\n});\n\ninterface OrdersListState {\n  isFetching?: boolean;\n  filters: StringObject;\n  filterType: string;\n  isFiltering?: boolean;\n  sortBy: Full<ISortBy>;\n}\nconst ordersListState = (\n  state: OrdersListState,\n  action: { type: string; payload: any }\n): OrdersListState => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return {\n        ...state,\n        filters: changeFilters(action.payload, state.filterType, state.filters)\n      };\n    case 'replaceFilterChip':\n      return { ...state, filters: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    case 'setFilterType':\n      return { ...state, filterType: action.payload };\n    case 'setSortBy':\n      return { ...state, sortBy: action.payload, isFetching: true };\n  }\n\n  return state;\n};\n\nconst sortIndexMapper = {\n  0: 'id',\n  3: 'owner',\n  4: 'created_at',\n  6: 'state'\n};\n\nconst OrdersList: React.ComponentType = () => {\n  const formatMessage = useFormatMessage();\n  const dispatch = useDispatch();\n  const viewState = useInitialUriHash();\n  const [\n    { isFetching, isFiltering, filterType, filters, sortBy },\n    stateDispatch\n  ] = useReducer(ordersListState, {\n    ...initialState,\n    filters: viewState?.orders?.filters || { state: [], owner: '' },\n    sortBy: {\n      direction: viewState?.orders?.sortDirection || SortByDirection.desc,\n      index: viewState?.orders?.sortIndex || 0\n    }\n  });\n\n  const orders = useSelector<\n    CatalogRootState,\n    ApiCollectionResponse<OrderDetail>\n  >(({ orderReducer }) => orderReducer.orders);\n\n  const data = localStorage.getItem('catalog_standalone')\n    ? orders.results\n    : orders.data;\n  const meta = localStorage.getItem('catalog_standalone')\n    ? // @ts-ignore\n      { count: orders.count, noData: false }\n    : orders.meta;\n\n  const columns: ICell[] = [\n    { title: formatMessage(ordersMessages.orderID) },\n    formatMessage(labelMessages.product),\n    '', // need empty row column to correctly align product names after the icon column\n    {\n      title: formatMessage(ordersMessages.orderedByLabel)\n    },\n    { title: formatMessage(ordersMessages.orderDate) },\n    formatMessage(labelMessages.updated),\n    { title: formatMessage(labelMessages.status) }\n  ].map((column) =>\n    typeof column === 'object' &&\n    !isFetching &&\n    !isFiltering &&\n    data.length !== 0\n      ? { ...column, transforms: [sortable] }\n      : column\n  ) as ICell[];\n\n  const portfolioItemsResults = useSelector<\n    CatalogRootState,\n    ApiCollectionResponse<PortfolioItem>\n  >(({ portfolioReducer }) => portfolioReducer.portfolioItems);\n  const portfolioItems = localStorage.getItem('catalog_standalone')\n    ? portfolioItemsResults.results\n    : portfolioItemsResults.data;\n\n  const onSort: OnSort = (_e, index, direction) => {\n    stateDispatch({\n      type: 'setSortBy',\n      payload: { index, direction }\n    });\n    return ((dispatch(\n      localStorage.getItem('catalog_standalone')\n        ? fetchOrdersS(filters, {\n            ...meta,\n            sortBy: sortIndexMapper[index as keyof typeof sortIndexMapper],\n            sortDirection: direction,\n            sortIndex: index\n          })\n        : fetchOrders(filters, {\n            ...meta,\n            sortBy: sortIndexMapper[index as keyof typeof sortIndexMapper],\n            sortDirection: direction,\n            sortIndex: index\n          })\n    ) as unknown) as Promise<void>).then(() =>\n      stateDispatch({ type: 'setFetching', payload: false })\n    );\n  };\n\n  const rows = data.map((item) => {\n    const { orderPlatform, orderPortfolio } = getOrderPlatformId(\n      item,\n      portfolioItems\n    );\n    const orderName = getOrderPortfolioName(item, portfolioItems);\n    return createOrderItem(\n      { ...item, orderName },\n      orderPlatform,\n      orderPortfolio,\n      formatMessage\n    );\n  });\n\n  useEffect(() => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    Promise.all([\n      dispatch(\n        localStorage.getItem('catalog_standalone')\n          ? fetchOrdersS(filters, viewState?.orders)\n          : fetchOrders(filters, viewState?.orders)\n      ),\n      dispatch(\n        localStorage.getItem('catalog_standalone')\n          ? fetchPlatformsS()\n          : fetchPlatforms()\n      )\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n  }, []);\n\n  const handlePagination = (\n    _apiProps: any,\n    pagination: PaginationConfiguration\n  ) => {\n    stateDispatch({ type: 'setFetching', payload: true });\n    return ((dispatch(\n      localStorage.getItem('catalog_standalone')\n        ? fetchOrdersS(filters, {\n            ...pagination,\n            sortBy:\n              sortIndexMapper[sortBy.index as keyof typeof sortIndexMapper],\n            sortDirection: sortBy.direction as SortByDirection,\n            sortIndex: sortBy.index\n          })\n        : fetchOrders(filters, {\n            ...pagination,\n            sortBy:\n              sortIndexMapper[sortBy.index as keyof typeof sortIndexMapper],\n            sortDirection: sortBy.direction as SortByDirection,\n            sortIndex: sortBy.index\n          })\n    ) as unknown) as Promise<void>)\n      .then(() => stateDispatch({ type: 'setFetching', payload: false }))\n      .catch(() => stateDispatch({ type: 'setFetching', payload: false }));\n  };\n\n  const handleFilterItems = (value = '') => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      { ...filters, [filterType]: value },\n      {\n        ...meta,\n        sortBy: sortIndexMapper[sortBy.index as keyof typeof sortIndexMapper],\n        sortDirection: sortBy.direction,\n        sortIndex: sortBy.index,\n        offset: 0\n      },\n      dispatch,\n      (isFiltering: boolean) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  const handleClearAll = () => {\n    stateDispatch({\n      type: 'replaceFilterChip',\n      payload: initialState.filters\n    });\n    return debouncedFilter(\n      initialState.filters,\n      {\n        ...meta,\n        sortBy: sortIndexMapper[sortBy.index as keyof typeof sortIndexMapper],\n        sortDirection: sortBy.direction,\n        sortIndex: sortBy.index\n      },\n      dispatch,\n      (isFiltering: boolean) =>\n        stateDispatch({\n          type: 'setFilteringFlag',\n          payload: isFiltering\n        })\n    );\n  };\n\n  return (\n    <Grid hasGutter>\n      <GridItem>\n        <Section type=\"content\">\n          {!meta.noData && (\n            <PrimaryToolbar\n              activeFiltersConfig={{\n                filters: Object.entries(filters)\n                  .filter(([, value]) => value && value.length > 0)\n                  .map<{ category: string; type: string; chips: Chip[] }>(\n                    ([key, value]) => ({\n                      category: key,\n                      type: key,\n                      chips: Array.isArray(value)\n                        ? value.map<Chip>((name) => ({ name }))\n                        : ([{ name: value }] as Chip[])\n                    })\n                  ),\n                onDelete: (_e, [chip], clearAll) => {\n                  if (clearAll) {\n                    return handleClearAll();\n                  }\n\n                  const newFilters = { ...filters };\n                  if (chip.type === 'state') {\n                    newFilters[chip.type] = (((newFilters[\n                      chip.type\n                    ] as unknown) as string[]).filter(\n                      (value) => value !== chip?.chips?.[0].name\n                    ) as unknown) as string;\n                  } else {\n                    newFilters[chip.type!] = '';\n                  }\n\n                  stateDispatch({\n                    type: 'replaceFilterChip',\n                    payload: newFilters\n                  });\n                  debouncedFilter(\n                    newFilters,\n                    meta,\n                    dispatch,\n                    (isFiltering: boolean) =>\n                      stateDispatch({\n                        type: 'setFilteringFlag',\n                        payload: isFiltering\n                      })\n                  );\n                }\n              }}\n              filterConfig={{\n                onChange: (_e, value) =>\n                  stateDispatch({ type: 'setFilterType', payload: value }),\n                value: filterType,\n                items: [\n                  {\n                    filterValues: {\n                      items: [\n                        {\n                          value: 'Approval Pending',\n                          label: formatMessage(statesMessages.approvalPending)\n                        },\n                        {\n                          value: 'Canceled',\n                          label: formatMessage(statesMessages.canceled)\n                        },\n                        {\n                          value: 'Completed',\n                          label: formatMessage(statesMessages.completed)\n                        },\n                        {\n                          value: 'Created',\n                          label: formatMessage(labelMessages.created)\n                        },\n                        {\n                          value: 'Failed',\n                          label: formatMessage(statesMessages.failed)\n                        },\n                        {\n                          value: 'Ordered',\n                          label: formatMessage(statesMessages.ordered)\n                        }\n                      ],\n                      value: filters.state,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'State',\n                    value: 'state',\n                    type: 'checkbox'\n                  },\n                  {\n                    filterValues: {\n                      value: filters.owner,\n                      onChange: (_e, value) => handleFilterItems(value)\n                    },\n                    label: 'Owner',\n                    value: 'owner'\n                  }\n                ]\n              }}\n              pagination={\n                <AsyncPagination\n                  isDisabled={isFetching || isFiltering}\n                  apiRequest={handlePagination}\n                  meta={meta}\n                  isCompact\n                />\n              }\n            />\n          )}\n          <Table\n            aria-label=\"orders\"\n            {...(!(isFetching || isFiltering) && data.length === 0\n              ? {}\n              : { sortBy, onSort })}\n            cells={columns}\n            rows={isFetching || isFiltering ? [] : rows}\n            className=\"orders-table\"\n          >\n            <TableHeader />\n            <TableBody />\n          </Table>\n          {!(isFetching || isFiltering) && data.length === 0 && (\n            <EmptyTable>\n              <Bullseye>\n                <EmptyState>\n                  <Bullseye>\n                    <EmptyStateIcon icon={SearchIcon} />\n                  </Bullseye>\n                  <Title headingLevel=\"h1\" size=\"lg\">\n                    {meta.noData\n                      ? formatMessage(ordersMessages.noOrdersTitle)\n                      : formatMessage(filteringMessages.noResults)}\n                  </Title>\n                  <EmptyStateBody>\n                    {meta.noData\n                      ? formatMessage(ordersMessages.noOrdersDescription)\n                      : formatMessage(filteringMessages.noResultsDescription)}\n                  </EmptyStateBody>\n                  {!meta.noData && (\n                    <EmptyStateSecondaryActions>\n                      <Button\n                        ouiaId={'clear-filter'}\n                        variant=\"link\"\n                        onClick={handleClearAll}\n                      >\n                        {formatMessage(filteringMessages.clearFilters)}\n                      </Button>\n                    </EmptyStateSecondaryActions>\n                  )}\n                </EmptyState>\n              </Bullseye>\n            </EmptyTable>\n          )}\n          {(isFetching || isFiltering) && <ListLoader />}\n          <TableToolbar className=\"pf-u-mr-0\">\n            <div className=\"bottom-pagination-container\">\n              <Flex justifyContent={{ default: 'justifyContentFlexEnd' }}>\n                {meta && meta.count! > 0 && (\n                  <AsyncPagination\n                    className=\"pf-u-mt-0\"\n                    isDisabled={isFetching || isFiltering}\n                    apiRequest={handlePagination}\n                    meta={meta}\n                  />\n                )}\n              </Flex>\n            </div>\n          </TableToolbar>\n        </Section>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default OrdersList;\n","import React, { Fragment, ReactNode } from 'react';\nimport { Label, Text, TextVariants } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport { getOrderIcon } from '../../helpers/shared/orders';\nimport CatalogLink from '../common/catalog-link';\nimport { ORDER_ROUTE } from '../../constants/routes';\nimport statesMessages, {\n  getTranslatableState\n} from '../../messages/states.messages';\n\nimport { TableText } from '@patternfly/react-table';\nimport orderStatusMapper from './order-status-mapper';\nimport { OrderDetail } from '../../redux/reducers/order-reducer';\nimport { FormatMessage, StringObject } from '../../types/common-types';\nimport { OrderItem } from '../../helpers/order/order-helper-s';\n\nconst firstOrderItem = (order: OrderDetail): OrderItem => {\n  let orderItem = { count: 0, portfolio_item: '' };\n  if (localStorage.getItem('catalog_standalone')) {\n    orderItem =\n      (order?.extra_data?.order_items && order?.extra_data?.order_items[0]) ||\n      {};\n  } else {\n    orderItem = (order?.orderItems && order.orderItems[0]) || {};\n  }\n  return orderItem;\n};\n\nconst createOrderItem = (\n  item: OrderDetail,\n  orderPlatform: string | undefined,\n  orderPortfolio: string | undefined,\n  formatMessage: FormatMessage\n): { title: ReactNode }[] => {\n  const orderItem = firstOrderItem(item);\n  const searchParams: StringObject = {\n    order: item.id,\n    ...(orderItem.id ? { 'order-item': orderItem.id } : {}),\n    ...(orderItem.portfolio_item\n      ? { 'portfolio-item': orderItem.portfolio_item }\n      : {}),\n    ...(orderPlatform ? { platform: orderPlatform } : {}),\n    ...(orderPortfolio ? { portfolio: orderPortfolio } : {})\n  };\n  const translatableState = getTranslatableState(item.state);\n  return [\n    {\n      title: (\n        <TableText>\n          <CatalogLink pathname={ORDER_ROUTE} searchParams={searchParams}>\n            {item.id}\n          </CatalogLink>\n        </TableText>\n      )\n    },\n    {\n      title: (\n        <Fragment>\n          <CardIcon\n            height={60}\n            src={getOrderIcon(item)}\n            sourceId={orderPlatform}\n          />\n        </Fragment>\n      )\n    },\n    item.orderName,\n    item.owner,\n    {\n      title: (\n        <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n          <DateFormat date={item.created_at} variant=\"relative\" />\n        </Text>\n      )\n    },\n    {\n      title: (\n        <Text className=\"pf-u-mb-0\" component={TextVariants.small}>\n          <DateFormat\n            date={\n              item?.orderItems &&\n              item.orderItems[0] &&\n              item.orderItems[0].updated_at\n            }\n            variant=\"relative\"\n          />\n        </Text>\n      )\n    },\n    {\n      title: (\n        <TableText>\n          <Label\n            {...orderStatusMapper[item.state as keyof typeof orderStatusMapper]}\n            variant=\"outline\"\n          >\n            {formatMessage(statesMessages[translatableState])}\n          </Label>\n        </TableText>\n      )\n    }\n  ];\n};\n\nexport default createOrderItem;\n","import React, { useEffect } from 'react';\nimport { Stack } from '@patternfly/react-core';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createOrdersToolbarSchema from '../../toolbar/schemas/orders-toolbar.schema';\nimport OrdersList from './orders-list';\n\nconst Orders: React.ComponentType = () => {\n  return (\n    <Stack>\n      <ToolbarRenderer schema={createOrdersToolbarSchema()} />\n      <OrdersList />\n    </Stack>\n  );\n};\n\nexport default Orders;\n","import { toolbarComponentTypes } from '../toolbar-mapper';\nimport { ToolbarSchema } from '../toolbar-renderer';\n\nconst createOrdersToolbarSchema = (): ToolbarSchema => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      className: 'orders pf-u-p-lg',\n      key: 'orders-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'orders-toolbar-title',\n          title: 'Orders',\n          className: ''\n        }\n      ]\n    }\n  ]\n});\n\nexport default createOrdersToolbarSchema;\n"],"names":["EmptyTable","_ref","centered","className","children","props","emptyTableClasses","propTypes","noItems","id","defaultMessage","filterByProduct","noResults","noResultsDescription","clearFilters","noProducts","noRecords","filterByTitle","noResultsFound","noResult","unknown","statesMessages","title","ordered","approvalPending","canceled","completed","failed","undecided","approved","denied","error","pending","skipped","started","notified","getTranslatableState","state","replace","char","toLowerCase","created","LazyLoadImage","height","CardIconContainer","src","sourceId","useState","isLoaded","setLoaded","isUnknown","setUnknown","platformIconMapping","defaultIcon","threshold","delayTime","hidden","onError","onLoad","meta","limit","count","offset","apiProps","apiRequest","isCompact","Pagination","perPage","itemCount","onPerPageSelect","_event","page","onSetPage","number","debounce","options","request","dropDirection","Completed","icon","CheckCircleIcon","color","ClockIcon","Ordered","PlusCircleIcon","Failed","ExclamationCircleIcon","Canceled","ExclamationTriangleIcon","Created","Approved","Denied","Error","Undecided","Unknown","TableToolbar","isFooter","results","selected","ouiaId","_ref$ouiaSafe","ouiaSafe","tableToolbarClasses","ouiaComponentType","ouiaFinalId","Fragment","Toolbar","concat","generateCount","defaultProps","getOrderIcon","orderDetail","localStorage","getItem","orderItem","extra_data","order_items","portfolio_item","icon_url","orderItems","portfolio_item_id","debouncedFilter","filters","dispatch","filteringCallback","then","initialState","isOpen","isFetching","isFiltering","filterType","owner","sortBy","index","direction","SortByDirection","ordersListState","action","type","payload","value","sortIndexMapper","formatMessage","viewState","useReducer","orders","sortDirection","sortIndex","stateDispatch","data","noData","columns","map","column","length","transforms","sortable","portfolioItemsResults","portfolioItems","rows","item","order","portfolioItem","orderPlatform","service_offering_source_ref","orderPortfolio","portfolio_id","getSOrderPlatformId","find","getIOrderPlatformId","getOrderPlatformId","orderName","name","getSOrderPortfolioName","getIOrderPortfolioName","getOrderPortfolioName","searchParams","platform","portfolio","translatableState","TableText","pathname","Text","component","TextVariants","DateFormat","date","created_at","variant","updated_at","Label","useEffect","Promise","all","handlePagination","_apiProps","pagination","catch","handleFilterItems","handleClearAll","Grid","hasGutter","GridItem","Section","PrimaryToolbar","activeFiltersConfig","Object","entries","filter","key","category","chips","Array","isArray","onDelete","_e","clearAll","chip","newFilters","filterConfig","onChange","items","filterValues","label","isDisabled","Table","onSort","cells","TableHeader","TableBody","Bullseye","EmptyState","EmptyStateIcon","SearchIcon","Title","headingLevel","size","EmptyStateBody","EmptyStateSecondaryActions","Button","onClick","Flex","justifyContent","default","Stack","schema","fields"],"sourceRoot":""}