{"version":3,"sources":["webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/messages/platforms.messages.ts","webpack:///./src/presentational-components/shared/service-offering-body.tsx","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Checkbox/Checkbox.js","webpack:///./src/presentational-components/shared/card-checkbox.tsx","webpack:///./src/presentational-components/platform/platform-item.tsx","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardHeader.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardFooter.js","webpack:///./src/smart-components/platform/platform-templates.js"],"names":["BottomPaginationContainer","children","className","propTypes","PropTypes","oneOfType","node","arrayOf","platformsMessages","workflowColumn","id","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","configureSourceTitle","connectSource","contactAdmin","title","noPlatforms","offeringTitle","offeringParameters","name","distributor","pathname","searchParams","preserveSearch","portfolioName","props","component","h3","small","toDisplay","description","defaultOnChange","super","this","handleChange","event","onChange","currentTarget","checked","_a","ariaLabel","isValid","isDisabled","isChecked","label","defaultChecked","checkedProps","includes","check","Object","assign","checkInput","type","disabled","ref","elem","indeterminate","checkLabel","modifiers","htmlFor","checkDescription","displayName","defaultProps","handleCheck","onClick","stopPropagation","StyledLevel","key","height","sourceId","source_id","editMode","onToggleItemSelect","CardHeader","cardHeader","CardFooter","Component","cardFooter","initialState","filterValue","isOpen","isFetching","isFiltering","platformItemsState","state","action","payload","debouncedFilter","asyncFormValidator","value","dispatch","filteringCallback","meta","defaultSettings","fetchPlatformItems","then","PlatformTemplates","formatMessage","useFormatMessage","useQuery","platform","useReducer","stateDispatch","useSelector","platformItems","platformReducer","data","selectedPlatform","platformIconMapping","useDispatch","useEffect","scrollToTop","handleFilterChange","offset","filteredItems","items","map","item","PLATFORM_SERVICE_OFFERINGS_ROUTE","service","src","schema","createPlatformsFilterToolbarSchema","onFilterChange","searchValue","filterPlaceholder","apiRequest","_","options","isLoading","renderEmptyState","filteringMessages","noResults","Icon","SearchIcon","PrimaryAction","variant","clearFilters","noResultsDescription","count","dropDirection"],"mappings":"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","file":"js/platform-templates~31ecd969.74ac6290857d4451f43b.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    {children}\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","import { defineMessages } from 'react-intl';\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  configureSourceTitle: {\n    id: 'platforms.list.configure-source',\n    defaultMessage: 'Configure a source in order to add products to portfolios.'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage:\n      'To connect to a source, go to <a>Sources</a> under Settings.'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  }\n});\n\nexport default platformsMessages;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment } from 'react';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ItemDetails from './card-common';\nimport ConditionalLink from './conditional-link';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { StyledCardBody } from '../styled-components/card';\nimport { StringObject } from '../../types/common-types';\n\nexport interface ServiceOfferingCardBodyProps {\n  name?: string;\n  display_name?: string;\n  distributor?: string;\n  pathname?: string;\n  searchParams?: StringObject;\n  preserveSearch?: boolean;\n  description?: string;\n  long_description?: string;\n  portfolioName?: string;\n}\nconst ServiceOfferingCardBody: React.ComponentType<ServiceOfferingCardBodyProps> = ({\n  name,\n  distributor,\n  pathname,\n  searchParams,\n  preserveSearch,\n  portfolioName,\n  ...props\n}) => (\n  <StyledCardBody>\n    <TextContent>\n      <ConditionalLink\n        pathname={pathname}\n        searchParams={searchParams}\n        preserveSearch={preserveSearch}\n      >\n        <Text component={TextVariants.h3} title={name}>\n          <EllipsisTextContainer>{name}</EllipsisTextContainer>\n        </Text>\n      </ConditionalLink>\n      {distributor && <Text component={TextVariants.small}>{distributor}</Text>}\n      {portfolioName && (\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component=\"small\">\n            Portfolio\n          </Text>\n          <Text>{portfolioName}</Text>\n        </Fragment>\n      )}\n    </TextContent>\n    <ItemDetails\n      toDisplay={[props.description ? 'description' : 'long_description']}\n      {...props}\n    />\n  </StyledCardBody>\n);\n\nexport default ServiceOfferingCardBody;\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\n// tslint:disable-next-line:no-empty\nconst defaultOnChange = () => { };\nexport class Checkbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event.currentTarget.checked, event);\n        };\n    }\n    render() {\n        const _a = this.props, { 'aria-label': ariaLabel, className, onChange, isValid, isDisabled, isChecked, label, checked, defaultChecked, description } = _a, props = __rest(_a, ['aria-label', \"className\", \"onChange\", \"isValid\", \"isDisabled\", \"isChecked\", \"label\", \"checked\", \"defaultChecked\", \"description\"]);\n        const checkedProps = {};\n        if ([true, false].includes(checked) || isChecked === true) {\n            checkedProps.checked = checked || isChecked;\n        }\n        if (onChange !== defaultOnChange) {\n            checkedProps.checked = isChecked;\n        }\n        if ([false, true].includes(defaultChecked)) {\n            checkedProps.defaultChecked = defaultChecked;\n        }\n        checkedProps.checked = checkedProps.checked === null ? false : checkedProps.checked;\n        return (React.createElement(\"div\", { className: css(styles.check, className) },\n            React.createElement(\"input\", Object.assign({}, props, { className: css(styles.checkInput), type: \"checkbox\", onChange: this.handleChange, \"aria-invalid\": !isValid, \"aria-label\": ariaLabel, disabled: isDisabled, ref: elem => elem && (elem.indeterminate = isChecked === null) }, checkedProps)),\n            label && (React.createElement(\"label\", { className: css(styles.checkLabel, isDisabled && styles.modifiers.disabled), htmlFor: props.id }, label)),\n            description && React.createElement(\"div\", { className: css(styles.checkDescription) }, description)));\n    }\n}\nCheckbox.displayName = 'Checkbox';\nCheckbox.defaultProps = {\n    className: '',\n    isValid: true,\n    isDisabled: false,\n    isChecked: false,\n    onChange: defaultOnChange\n};\n//# sourceMappingURL=Checkbox.js.map","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Checkbox } from '@patternfly/react-core';\n\nexport interface CardCheckboxProps {\n  handleCheck: (value: any) => void;\n  isChecked?: boolean;\n  id: string;\n}\nconst CardCheckbox: React.ComponentType<CardCheckboxProps> = ({\n  handleCheck,\n  isChecked,\n  id\n}) => (\n  <Checkbox\n    onClick={(event) => event.stopPropagation()}\n    isChecked={isChecked}\n    onChange={handleCheck}\n    aria-label=\"card checkbox\"\n    id={id}\n  />\n);\n\nexport default CardCheckbox;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { CardHeader, CardFooter, Level } from '@patternfly/react-core';\n\nimport CardIcon from '../shared/card-icon';\nimport CardCheckbox from '../shared/card-checkbox';\nimport ServiceOfferingCardBody from '../shared/service-offering-body';\nimport { StyledCard } from '../styled-components/styled-gallery';\nimport styled from 'styled-components';\n\nconst StyledLevel = styled(Level)`\n  flex: 1;\n`;\n\nexport interface PlatformItemProps {\n  id: string;\n  source_id?: string;\n  editMode?: boolean;\n  checked?: boolean;\n  onToggleItemSelect: (value: any) => void;\n}\nconst PlatformItem: React.ComponentType<PlatformItemProps> = (props) => (\n  <StyledCard key={props.id}>\n    <CardHeader>\n      <StyledLevel>\n        <CardIcon height={40} sourceId={props.source_id} />\n        {props.editMode && (\n          <CardCheckbox\n            id={props.id}\n            isChecked={props.checked}\n            handleCheck={props.onToggleItemSelect}\n          />\n        )}\n      </StyledLevel>\n    </CardHeader>\n    <ServiceOfferingCardBody {...props} />\n    <CardFooter />\n  </StyledCard>\n);\n\nexport default PlatformItem;\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nexport const CardHeader = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.cardHeader, className) }, props), children));\n};\nCardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nexport const CardFooter = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardFooter, className) }, props), children));\n};\nCardFooter.displayName = 'CardFooter';\n//# sourceMappingURL=CardFooter.js.map","import React, { Fragment, useEffect, useReducer } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { fetchPlatformItems } from '../../redux/actions/platform-actions';\nimport PlatformItem from '../../presentational-components/platform/platform-item';\nimport { createPlatformsFilterToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { Button } from '@patternfly/react-core';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useQuery from '../../utilities/use-query';\nimport { PLATFORM_SERVICE_OFFERINGS_ROUTE } from '../../constants/routes';\nimport filteringMessages from '../../messages/filtering.messages';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst platformItemsState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (id, value, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(fetchPlatformItems(id, value, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst PlatformTemplates = () => {\n  const formatMessage = useFormatMessage();\n  const [{ platform: id }] = useQuery(['platform']);\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch] = useReducer(\n    platformItemsState,\n    initialState\n  );\n  const { data, meta } = useSelector(({ platformReducer: { platformItems } }) =>\n    platformItems[id] ? platformItems[id] : { data: [], meta: defaultSettings }\n  );\n  const { platform, platformIconMapping } = useSelector(\n    ({ platformReducer: { selectedPlatform, platformIconMapping } }) => ({\n      platform: selectedPlatform,\n      platformIconMapping\n    })\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPlatformItems(id, filterValue, defaultSettings)).then(() =>\n      stateDispatch({ type: 'setFetching', payload: false })\n    );\n    scrollToTop();\n  }, [id]);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      id,\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const filteredItems = {\n    items: data\n      ? data.map((item) => (\n          <PlatformItem\n            key={item.id}\n            pathname={PLATFORM_SERVICE_OFFERINGS_ROUTE}\n            searchParams={{\n              service: item.id\n            }}\n            preserveSearch\n            src={platformIconMapping[id]}\n            {...item}\n          />\n        ))\n      : []\n  };\n\n  const title = platform ? platform.name : '';\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPlatformsFilterToolbarSchema({\n          onFilterChange: handleFilterChange,\n          searchValue: filterValue,\n          filterPlaceholder: formatMessage(platformsMessages.templatesFilter),\n          meta,\n          apiRequest: (_, options) =>\n            dispatch(fetchPlatformItems(id, filterValue, options))\n        })}\n      />\n      <ContentGallery\n        title={title}\n        isLoading={isFetching || isFiltering}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState\n            title={\n              filterValue === ''\n                ? formatMessage(platformsMessages.noTemplatesTitle)\n                : formatMessage(filteringMessages.noResults)\n            }\n            Icon={SearchIcon}\n            PrimaryAction={() =>\n              filterValue !== '' ? (\n                <Button onClick={() => handleFilterChange('')} variant=\"link\">\n                  {formatMessage(filteringMessages.clearFilters)}\n                </Button>\n              ) : null\n            }\n            description={\n              filterValue === ''\n                ? formatMessage(platformsMessages.noTemplatesDescription)\n                : formatMessage(filteringMessages.noResultsDescription)\n            }\n          />\n        )}\n        {...filteredItems}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiRequest={(_, options) =>\n              dispatch(fetchPlatformItems(id, filterValue, options))\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PlatformTemplates;\n"],"sourceRoot":""}