{"version":3,"sources":["webpack:///./src/utilities/async-form-validator.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Checkbox/Checkbox.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/messages/platforms.messages.js","webpack:///./src/presentational-components/shared/card-checkbox.js","webpack:///./src/presentational-components/shared/service-offering-body.js","webpack:///./src/presentational-components/platform/platform-item.js","webpack:///./src/smart-components/platform/platform-templates.js"],"names":["asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","Object","defineProperty","exports","value","tslib_1","React","__importStar","check_1","__importDefault","react_styles_1","defaultOnChange","Checkbox","Component","props","super","this","handleChange","event","onChange","currentTarget","checked","_a","ariaLabel","className","isValid","isDisabled","isChecked","label","defaultChecked","description","__rest","checkedProps","includes","createElement","css","default","check","assign","checkInput","type","disabled","ref","elem","indeterminate","checkLabel","modifiers","htmlFor","id","checkDescription","displayName","defaultProps","BottomPaginationContainer","children","propTypes","PropTypes","oneOfType","node","arrayOf","platformsMessages","defineMessages","require","workflowColumn","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","configureSourceTitle","connectSource","contactAdmin","title","noPlatforms","offeringTitle","offeringParameters","CardCheckbox","handleCheck","onClick","stopPropagation","aria-label","func","bool","string","ServiceOfferingCardBody","name","distributor","display_name","pathname","searchParams","preserveSearch","portfolioName","component","TextVariants","h3","small","toDisplay","long_description","shape","StyledLevel","styled","Level","PlatformItem","src","key","height","sourceId","source_id","editMode","onToggleItemSelect","isRequired","service_offering_icon_id","platformId","initialState","filterValue","isOpen","isFetching","isFiltering","platformItemsState","state","action","payload","debouncedFilter","asyncFormValidator","dispatch","filteringCallback","meta","defaultSettings","fetchPlatformItems","then","PlatformTemplates","formatMessage","useFormatMessage","useQuery","platform","useReducer","stateDispatch","useSelector","platformItems","platformReducer","data","selectedPlatform","platformIconMapping","useDispatch","useEffect","scrollToTop","handleFilterChange","offset","filteredItems","items","map","item","PLATFORM_SERVICE_OFFERINGS_ROUTE","service","schema","createPlatformsFilterToolbarSchema","onFilterChange","searchValue","filterPlaceholder","apiRequest","_","isLoading","renderEmptyState","filteringMessages","noResults","Icon","SearchIcon","PrimaryAction","variant","clearFilters","noResultsDescription","count","dropDirection"],"mappings":"2FAAA,aAEe,aACbA,GADa,IAEbC,EAFa,uDAEE,IACfC,EAHa,uDAGH,CAAEC,kBAAkB,GAHjB,OAIVC,YAAuBJ,EAAeC,EAAcC,K,iCCLzDG,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMC,EAAU,EAAQ,GAClBC,EAAQD,EAAQE,aAAa,EAAQ,IACrCC,EAAUH,EAAQI,gBAAgB,EAAQ,MAC1CC,EAAiB,EAAQ,GAEzBC,EAAkB,OACxB,MAAMC,UAAiBN,EAAMO,UACzB,YAAYC,GACRC,MAAMD,GACNE,KAAKC,aAAgBC,IACjBF,KAAKF,MAAMK,SAASD,EAAME,cAAcC,QAASH,IAGzD,SACI,MAAMI,EAAKN,KAAKF,OAAS,aAAcS,EAAS,UAAEC,EAAS,SAAEL,EAAQ,QAAEM,EAAO,WAAEC,EAAU,UAAEC,EAAS,MAAEC,EAAK,QAAEP,EAAO,eAAEQ,EAAc,YAAEC,GAAgBR,EAAIR,EAAQT,EAAQ0B,OAAOT,EAAI,CAAC,aAAc,YAAa,WAAY,UAAW,aAAc,YAAa,QAAS,UAAW,iBAAkB,gBACpSU,EAAe,GAWrB,OAVI,EAAC,GAAM,GAAOC,SAASZ,KAA0B,IAAdM,KACnCK,EAAaX,QAAUA,GAAWM,GAElCR,IAAaR,IACbqB,EAAaX,QAAUM,GAEvB,EAAC,GAAO,GAAMM,SAASJ,KACvBG,EAAaH,eAAiBA,GAElCG,EAAaX,QAAmC,OAAzBW,EAAaX,SAA2BW,EAAaX,QACpEf,EAAM4B,cAAc,MAAO,CAAEV,UAAWd,EAAeyB,IAAI3B,EAAQ4B,QAAQC,MAAOb,IACtFlB,EAAM4B,cAAc,QAASjC,OAAOqC,OAAO,GAAIxB,EAAO,CAAEU,UAAWd,EAAeyB,IAAI3B,EAAQ4B,QAAQG,YAAaC,KAAM,WAAYrB,SAAUH,KAAKC,aAAc,gBAAiBQ,EAAS,aAAcF,EAAWkB,SAAUf,EAAYgB,IAAKC,GAAQA,IAASA,EAAKC,cAA8B,OAAdjB,IAAuBK,IAC7SJ,GAAUtB,EAAM4B,cAAc,QAAS,CAAEV,UAAWd,EAAeyB,IAAI3B,EAAQ4B,QAAQS,WAAYnB,GAAclB,EAAQ4B,QAAQU,UAAUL,UAAWM,QAASjC,EAAMkC,IAAMpB,GAC3KE,GAAexB,EAAM4B,cAAc,MAAO,CAAEV,UAAWd,EAAeyB,IAAI3B,EAAQ4B,QAAQa,mBAAqBnB,KAG3H3B,EAAQS,SAAWA,EACnBA,EAASsC,YAAc,WACvBtC,EAASuC,aAAe,CACpB3B,UAAW,GACXC,SAAS,EACTC,YAAY,EACZC,WAAW,EACXR,SAAUR,I,iCCzCd,qCAGMyC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChC,yBAAK7B,UAAU,0EACZ6B,IAILD,EAA0BE,UAAY,CACpCD,SAAUE,IAAUC,UAAU,CAC5BD,IAAUE,KACVF,IAAUG,QAAQH,IAAUE,SAIjBL,O,qCCdTO,GAAoBC,EAFCC,EAAQ,IAA3BD,gBAEiC,CACvCE,eAAgB,CACdd,GAAI,wCACJe,eAAgB,YAElBC,yBAA0B,CACxBhB,GAAI,4CACJe,eAAgB,yBAElBE,+BAAgC,CAC9BjB,GAAI,wCACJe,eAAgB,8CAElBG,kBAAmB,CACjBlB,GAAI,0CACJe,eAAgB,uBAElBI,gBAAiB,CACfnB,GAAI,wCACJe,eAAgB,sBAElBK,iBAAkB,CAChBpB,GAAI,kCACJe,eAAgB,gBAElBM,uBAAwB,CACtBrB,GAAI,wCACJe,eAAgB,mCAElBO,qBAAsB,CACpBtB,GAAI,kCACJe,eAAgB,8DAElBQ,cAAe,CACbvB,GAAI,gCACJe,eACE,gEAEJS,aAAc,CACZxB,GAAI,+BACJe,eACE,yEAEJU,MAAO,CACLzB,GAAI,kBACJe,eAAgB,aAElBW,YAAa,CACX1B,GAAI,6BACJe,eAAgB,oBAElBY,cAAe,CACb3B,GAAI,mCACJe,eAAgB,oBAElBa,mBAAoB,CAClB5B,GAAI,0CACJe,eAAgB,sBAILJ,O,iCC/Df,8CAIMkB,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAanD,EAAhB,EAAgBA,UAAWqB,EAA3B,EAA2BA,GAA3B,OACnB,kBAAC,WAAD,CACE+B,QAAS,SAAC7D,GAAD,OAAWA,EAAM8D,mBAC1BrD,UAAWA,EACXR,SAAU2D,EACVG,aAAW,gBACXjC,GAAIA,KAIR6B,EAAavB,UAAY,CACvBwB,YAAaxB,IAAU4B,KACvBvD,UAAW2B,IAAU6B,KACrBnC,GAAIM,IAAU8B,QAGDP,O,4KCZTQ,EAA0B,SAAC,GAAD,IAC9BC,EAD8B,EAC9BA,KAEAC,GAH8B,EAE9BC,aAF8B,EAG9BD,aACAE,EAJ8B,EAI9BA,SACAC,EAL8B,EAK9BA,aACAC,EAN8B,EAM9BA,eACAC,EAP8B,EAO9BA,cACG9E,EAR2B,+GAU9B,kBAAC,IAAD,KACE,kBAAC,cAAD,KACE,kBAAC,IAAD,CACE2E,SAAUA,EACVC,aAAcA,EACdC,eAAgBA,GAEhB,kBAAC,OAAD,CAAME,UAAWC,eAAaC,GAAItB,MAAOa,GACvC,kBAAC,IAAD,KAAwBA,KAG3BC,GAAe,kBAAC,OAAD,CAAMM,UAAWC,eAAaE,OAAQT,GACrDK,GACC,kBAAC,WAAD,KACE,kBAAC,OAAD,CAAMpE,UAAU,YAAYqE,UAAU,SAAtC,aAGA,kBAAC,OAAD,KAAOD,KAIb,kBAAC,IAAD,KACEK,UAAW,CAACnF,EAAMgB,YAAc,cAAgB,qBAC5ChB,MAKVuE,EAAwB/B,UAAY,CAClCgC,KAAM/B,IAAU6B,OAChBI,aAAcjC,IAAU6B,OACxBG,YAAahC,IAAU6B,OACvBc,iBAAkB3C,IAAU6B,OAC5BtD,YAAayB,IAAU6B,OACvBK,SAAUlC,IAAU6B,OACpBO,eAAgBpC,IAAU4B,KAC1BO,aAAcnC,IAAU4C,MAAV,OAAmB5C,IAAU6B,OAAS7B,IAAU6B,SAC9DQ,cAAerC,IAAU6B,QAGZC,O,yPChDf,IAAMe,EAAcC,YAAOC,QAAPD,CAAH,KAIXE,EAAe,SAAC,GAAD,EAAGC,IAAH,IAAW1F,EAAX,sBACnB,kBAAC,IAAD,CAAY2F,IAAK3F,EAAMkC,IACrB,kBAAC,aAAD,KACE,kBAACoD,EAAD,KACE,kBAAC,IAAD,CAAUM,OAAQ,GAAIC,SAAU7F,EAAM8F,YACrC9F,EAAM+F,UACL,kBAAC,IAAD,CACE7D,GAAIlC,EAAMkC,GACVrB,UAAWb,EAAMO,QACjByD,YAAahE,EAAMgG,uBAK3B,kBAAC,IAA4BhG,GAC7B,kBAAC,aAAD,QAIJyF,EAAajD,UAAY,CACvBN,GAAIO,IAAU6B,OAAO2B,WACrBC,yBAA0BzD,IAAU6B,OACpCwB,UAAWrD,IAAU6B,OACrB6B,WAAY1D,IAAU6B,OACtBE,KAAM/B,IAAU6B,OAChByB,SAAUtD,IAAU4B,KACpB9D,QAASkC,IAAU4B,KACnB2B,mBAAoBvD,IAAU2B,KAC9BsB,IAAKjD,IAAU6B,QAGFmB,O,41BCxBf,IAAMW,EAAe,CACnBC,YAAa,GACbC,QAAQ,EACRC,YAAY,EACZC,aAAa,GAGTC,EAAqB,SAACC,EAAOC,GACjC,OAAQA,EAAOjF,MACb,IAAK,cACH,cAAYgF,GAAZ,IAAmBH,WAAYI,EAAOC,UACxC,IAAK,iBACH,cAAYF,GAAZ,IAAmBL,YAAaM,EAAOC,UACzC,IAAK,mBACH,cAAYF,GAAZ,IAAmBF,YAAaG,EAAOC,UACzC,QACE,OAAOF,IAIPG,EAAkBC,aACtB,SAAC5E,EAAI5C,EAAOyH,EAAUC,GAA8C,IAA3BC,EAA2B,uDAApBC,IAC9CF,GAAkB,GAClBD,EAASI,YAAmBjF,EAAI5C,EAAO2H,IAAOG,MAAK,kBACjDJ,GAAkB,QAGtB,KAmHaK,UAhHW,WACxB,IAAMC,EAAgBC,cADQ,EAEHC,YAAS,CAAC,aAAlBtF,EAFW,YAErBuF,SAFqB,EAGoCC,qBAChEjB,EACAL,GAL4B,kBAGrBC,EAHqB,EAGrBA,YAAaE,EAHQ,EAGRA,WAAYC,EAHJ,EAGIA,YAAemB,EAHnB,OAOPC,uBAAY,gBAAsBC,EAAtB,EAAGC,gBAAmBD,cAAtB,OACjCA,EAAc3F,GAAM2F,EAAc3F,GAAM,CAAE6F,KAAM,GAAId,KAAMC,QADpDa,EAPsB,EAOtBA,KAAMd,EAPgB,EAOhBA,KAPgB,EAUYW,uBACxC,oBAAGE,gBAAH,MAAqE,CACnEL,SADF,EAAsBO,iBAEpBC,oBAFF,EAAwCA,wBADlCR,EAVsB,EAUtBA,SAAUQ,EAVY,EAUZA,oBAMZlB,EAAWmB,wBAEjBC,qBAAU,WACRpB,EAASI,YAAmBjF,EAAImE,EAAaa,MAAkBE,MAAK,kBAClEO,EAAc,CAAEjG,KAAM,cAAekF,SAAS,OAEhDwB,gBACC,CAAClG,IAEJ,IAAMmG,EAAqB,SAAC/I,GAC1BqI,EAAc,CAAEjG,KAAM,iBAAkBkF,QAAStH,IACjDuH,EACE3E,EACA5C,EACAyH,GACA,SAACP,GAAD,OACEmB,EAAc,CAAEjG,KAAM,mBAAoBkF,QAASJ,MALxC,OAORS,GAPQ,IAQXqB,OAAQ,MAKRC,EAAgB,CACpBC,MAAOT,EACHA,EAAKU,KAAI,SAACC,GAAD,OACP,kBAAC,IAAD,KACE/C,IAAK+C,EAAKxG,GACVyC,SAAUgE,IACV/D,aAAc,CACZgE,QAASF,EAAKxG,IAEhB2C,gBAAc,EACda,IAAKuC,EAAoB/F,IACrBwG,OAGR,IAGA/E,EAAQ8D,EAAWA,EAASjD,KAAO,GACzC,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CACEqE,OAAQC,YAAmC,CACzCC,eAAgBV,EAChBW,YAAa3C,EACb4C,kBAAmB3B,EAAczE,IAAkBQ,iBACnD4D,OACAiC,WAAY,SAACC,EAAGnK,GAAJ,OACV+H,EAASI,YAAmBjF,EAAImE,EAAarH,SAGnD,kBAAC,IAAD,KACE2E,MAAOA,EACPyF,UAAW7C,GAAcC,EACzB6C,iBAAkB,kBAChB,kBAAC,IAAD,CACE1F,MAEM2D,EADY,KAAhBjB,EACkBxD,IAAkBS,iBAClBgG,IAAkBC,WAEtCC,KAAMC,IACNC,cAAe,iBACG,KAAhBrD,EACE,kBAAC,SAAD,CAAQpC,QAAS,kBAAMoE,EAAmB,KAAKsB,QAAQ,QACpDrC,EAAcgC,IAAkBM,eAEjC,MAEN5I,YAEMsG,EADY,KAAhBjB,EACkBxD,IAAkBU,uBAClB+F,IAAkBO,0BAItCtB,IAELtB,EAAK6C,MAAQ,GACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,cAAc,KACd9C,KAAMA,EACNiC,WAAY,SAACC,EAAGnK,GAAJ,OACV+H,EAASI,YAAmBjF,EAAImE,EAAarH","file":"js/platform-templates~31ecd969.5cf3d386400f066bbb91.js","sourcesContent":["import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst check_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Check/check\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\n// tslint:disable-next-line:no-empty\nconst defaultOnChange = () => { };\nclass Checkbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event.currentTarget.checked, event);\n        };\n    }\n    render() {\n        const _a = this.props, { 'aria-label': ariaLabel, className, onChange, isValid, isDisabled, isChecked, label, checked, defaultChecked, description } = _a, props = tslib_1.__rest(_a, ['aria-label', \"className\", \"onChange\", \"isValid\", \"isDisabled\", \"isChecked\", \"label\", \"checked\", \"defaultChecked\", \"description\"]);\n        const checkedProps = {};\n        if ([true, false].includes(checked) || isChecked === true) {\n            checkedProps.checked = checked || isChecked;\n        }\n        if (onChange !== defaultOnChange) {\n            checkedProps.checked = isChecked;\n        }\n        if ([false, true].includes(defaultChecked)) {\n            checkedProps.defaultChecked = defaultChecked;\n        }\n        checkedProps.checked = checkedProps.checked === null ? false : checkedProps.checked;\n        return (React.createElement(\"div\", { className: react_styles_1.css(check_1.default.check, className) },\n            React.createElement(\"input\", Object.assign({}, props, { className: react_styles_1.css(check_1.default.checkInput), type: \"checkbox\", onChange: this.handleChange, \"aria-invalid\": !isValid, \"aria-label\": ariaLabel, disabled: isDisabled, ref: elem => elem && (elem.indeterminate = isChecked === null) }, checkedProps)),\n            label && (React.createElement(\"label\", { className: react_styles_1.css(check_1.default.checkLabel, isDisabled && check_1.default.modifiers.disabled), htmlFor: props.id }, label)),\n            description && React.createElement(\"div\", { className: react_styles_1.css(check_1.default.checkDescription) }, description)));\n    }\n}\nexports.Checkbox = Checkbox;\nCheckbox.displayName = 'Checkbox';\nCheckbox.defaultProps = {\n    className: '',\n    isValid: true,\n    isDisabled: false,\n    isChecked: false,\n    onChange: defaultOnChange\n};\n//# sourceMappingURL=Checkbox.js.map","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    {children}\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","const { defineMessages } = require('react-intl');\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  configureSourceTitle: {\n    id: 'platforms.list.configure-source',\n    defaultMessage: 'Configure a source in order to add products to portfolios.'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage:\n      'To connect to a source, go to <a>Sources</a> under Settings.'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  }\n});\n\nexport default platformsMessages;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CardCheckbox = ({ handleCheck, isChecked, id }) => (\n  <Checkbox\n    onClick={(event) => event.stopPropagation()}\n    isChecked={isChecked}\n    onChange={handleCheck}\n    aria-label=\"card checkbox\"\n    id={id}\n  />\n);\n\nCardCheckbox.propTypes = {\n  handleCheck: propTypes.func,\n  isChecked: propTypes.bool,\n  id: propTypes.string\n};\n\nexport default CardCheckbox;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ItemDetails from './card-common';\nimport ConditionalLink from './conditional-link';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { StyledCardBody } from '../styled-components/card';\n\nconst ServiceOfferingCardBody = ({\n  name,\n  display_name,\n  distributor,\n  pathname,\n  searchParams,\n  preserveSearch,\n  portfolioName,\n  ...props\n}) => (\n  <StyledCardBody>\n    <TextContent>\n      <ConditionalLink\n        pathname={pathname}\n        searchParams={searchParams}\n        preserveSearch={preserveSearch}\n      >\n        <Text component={TextVariants.h3} title={name}>\n          <EllipsisTextContainer>{name}</EllipsisTextContainer>\n        </Text>\n      </ConditionalLink>\n      {distributor && <Text component={TextVariants.small}>{distributor}</Text>}\n      {portfolioName && (\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component=\"small\">\n            Portfolio\n          </Text>\n          <Text>{portfolioName}</Text>\n        </Fragment>\n      )}\n    </TextContent>\n    <ItemDetails\n      toDisplay={[props.description ? 'description' : 'long_description']}\n      {...props}\n    />\n  </StyledCardBody>\n);\n\nServiceOfferingCardBody.propTypes = {\n  name: PropTypes.string,\n  display_name: PropTypes.string,\n  distributor: PropTypes.string,\n  long_description: PropTypes.string,\n  description: PropTypes.string,\n  pathname: PropTypes.string,\n  preserveSearch: PropTypes.bool,\n  searchParams: PropTypes.shape({ [PropTypes.string]: PropTypes.string }),\n  portfolioName: PropTypes.string\n};\n\nexport default ServiceOfferingCardBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level } from '@patternfly/react-core';\n\nimport CardIcon from '../shared/card-icon';\nimport CardCheckbox from '../shared/card-checkbox';\nimport ServiceOfferingCardBody from '../shared/service-offering-body';\nimport { StyledCard } from '../styled-components/styled-gallery';\nimport styled from 'styled-components';\n\nconst StyledLevel = styled(Level)`\n  flex: 1;\n`;\n\nconst PlatformItem = ({ src, ...props }) => (\n  <StyledCard key={props.id}>\n    <CardHeader>\n      <StyledLevel>\n        <CardIcon height={40} sourceId={props.source_id} />\n        {props.editMode && (\n          <CardCheckbox\n            id={props.id}\n            isChecked={props.checked}\n            handleCheck={props.onToggleItemSelect}\n          />\n        )}\n      </StyledLevel>\n    </CardHeader>\n    <ServiceOfferingCardBody {...props} />\n    <CardFooter />\n  </StyledCard>\n);\n\nPlatformItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  service_offering_icon_id: PropTypes.string,\n  source_id: PropTypes.string,\n  platformId: PropTypes.string,\n  name: PropTypes.string,\n  editMode: PropTypes.bool,\n  checked: PropTypes.bool,\n  onToggleItemSelect: PropTypes.func,\n  src: PropTypes.string\n};\n\nexport default PlatformItem;\n","import React, { Fragment, useEffect, useReducer } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport { fetchPlatformItems } from '../../redux/actions/platform-actions';\nimport PlatformItem from '../../presentational-components/platform/platform-item';\nimport { createPlatformsFilterToolbarSchema } from '../../toolbar/schemas/platforms-toolbar.schema';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { Button } from '@patternfly/react-core';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useQuery from '../../utilities/use-query';\nimport { PLATFORM_SERVICE_OFFERINGS_ROUTE } from '../../constants/routes';\nimport filteringMessages from '../../messages/filtering.messages';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst platformItemsState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (id, value, dispatch, filteringCallback, meta = defaultSettings) => {\n    filteringCallback(true);\n    dispatch(fetchPlatformItems(id, value, meta)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst PlatformTemplates = () => {\n  const formatMessage = useFormatMessage();\n  const [{ platform: id }] = useQuery(['platform']);\n  const [{ filterValue, isFetching, isFiltering }, stateDispatch] = useReducer(\n    platformItemsState,\n    initialState\n  );\n  const { data, meta } = useSelector(({ platformReducer: { platformItems } }) =>\n    platformItems[id] ? platformItems[id] : { data: [], meta: defaultSettings }\n  );\n  const { platform, platformIconMapping } = useSelector(\n    ({ platformReducer: { selectedPlatform, platformIconMapping } }) => ({\n      platform: selectedPlatform,\n      platformIconMapping\n    })\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPlatformItems(id, filterValue, defaultSettings)).then(() =>\n      stateDispatch({ type: 'setFetching', payload: false })\n    );\n    scrollToTop();\n  }, [id]);\n\n  const handleFilterChange = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(\n      id,\n      value,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0\n      }\n    );\n  };\n\n  const filteredItems = {\n    items: data\n      ? data.map((item) => (\n          <PlatformItem\n            key={item.id}\n            pathname={PLATFORM_SERVICE_OFFERINGS_ROUTE}\n            searchParams={{\n              service: item.id\n            }}\n            preserveSearch\n            src={platformIconMapping[id]}\n            {...item}\n          />\n        ))\n      : []\n  };\n\n  const title = platform ? platform.name : '';\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPlatformsFilterToolbarSchema({\n          onFilterChange: handleFilterChange,\n          searchValue: filterValue,\n          filterPlaceholder: formatMessage(platformsMessages.templatesFilter),\n          meta,\n          apiRequest: (_, options) =>\n            dispatch(fetchPlatformItems(id, filterValue, options))\n        })}\n      />\n      <ContentGallery\n        title={title}\n        isLoading={isFetching || isFiltering}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState\n            title={\n              filterValue === ''\n                ? formatMessage(platformsMessages.noTemplatesTitle)\n                : formatMessage(filteringMessages.noResults)\n            }\n            Icon={SearchIcon}\n            PrimaryAction={() =>\n              filterValue !== '' ? (\n                <Button onClick={() => handleFilterChange('')} variant=\"link\">\n                  {formatMessage(filteringMessages.clearFilters)}\n                </Button>\n              ) : null\n            }\n            description={\n              filterValue === ''\n                ? formatMessage(platformsMessages.noTemplatesDescription)\n                : formatMessage(filteringMessages.noResultsDescription)\n            }\n          />\n        )}\n        {...filteredItems}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiRequest={(_, options) =>\n              dispatch(fetchPlatformItems(id, filterValue, options))\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PlatformTemplates;\n"],"sourceRoot":""}