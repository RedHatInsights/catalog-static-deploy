{"version":3,"sources":["webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/defaults.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/core/createError.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/cancel/Cancel.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/dist/index.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/utils.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/dist/api.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/index.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/axios.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/is-buffer/index.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/core/settle.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/node_modules/axios/lib/helpers/spread.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/dist/configuration.js"],"names":["utils","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","value","isUndefined","adapter","defaults","XMLHttpRequest","process","transformRequest","data","isFormData","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","toString","isObject","JSON","stringify","transformResponse","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","forEach","method","merge","module","exports","fn","thisArg","args","Array","arguments","length","i","apply","settle","buildURL","parseHeaders","isURLSameOrigin","createError","config","Promise","resolve","reject","requestData","requestHeaders","request","auth","username","password","Authorization","btoa","open","toUpperCase","url","params","paramsSerializer","onreadystatechange","readyState","responseURL","indexOf","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onerror","ontimeout","isStandardBrowserEnv","cookies","xsrfValue","withCredentials","read","undefined","val","key","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","enhanceError","message","code","error","Error","__CANCEL__","Cancel","this","prototype","__export","m","p","hasOwnProperty","Object","defineProperty","bind","isArray","call","isFunction","obj","l","FormData","ArrayBuffer","isView","isString","isNumber","isDate","pipe","URLSearchParams","navigator","product","window","document","result","assignValue","extend","a","b","trim","str","replace","extendStatics","__extends","d","setPrototypeOf","__proto__","__","constructor","create","axios_1","BASE_PATH","COLLECTION_FORMATS","csv","ssv","tsv","pipes","BaseAPI","configuration","basePath","axios","default","RequiredError","_super","field","msg","_this","name","ResourceDefinitionFilter","OperationEnum","AccessApiAxiosParamCreator","getPrincipalAccess","application","limit","offset","options","baseOptions","localVarUrlObj","localVarRequestOptions","assign","localVarHeaderParameter","localVarQueryParameter","query","search","format","AccessApiFp","localVarAxiosArgs","axiosRequestArgs","AccessApiFactory","AccessApi","GroupApiAxiosParamCreator","addPrincipalToGroup","uuid","groupPrincipalIn","localVarPath","encodeURIComponent","String","createGroup","group","deleteGroup","deletePrincipalFromGroup","usernames","getGroup","listGroups","orderBy","updateGroup","GroupApiFp","GroupApiFactory","GroupApi","PolicyApiAxiosParamCreator","createPolicies","policyIn","deletePolicy","getPolicy","listPolicies","updatePolicy","PolicyApiFp","PolicyApiFactory","PolicyApi","PrincipalApiAxiosParamCreator","listPrincipals","PrincipalApiFp","PrincipalApiFactory","PrincipalApi","RoleApiAxiosParamCreator","createRoles","roleIn","deleteRole","getRole","listRoles","updateRole","roleWithAccess","RoleApiFp","RoleApiFactory","RoleApi","StatusApiAxiosParamCreator","getStatus","StatusApiFp","StatusApiFactory","StatusApi","Axios","createInstance","defaultConfig","context","instance","instanceConfig","CancelToken","isCancel","all","promises","spread","InterceptorManager","dispatchRequest","interceptors","chain","interceptor","unshift","fulfilled","rejected","push","shift","normalizedName","encode","serializedParams","parts","v","toISOString","join","ignoreDuplicateOf","parsed","split","line","substr","concat","originURL","msie","test","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","hash","hostname","port","pathname","charAt","location","requestURL","write","expires","path","domain","secure","cookie","Date","toGMTString","match","RegExp","decodeURIComponent","remove","now","handlers","use","eject","id","h","transformData","isAbsoluteURL","combineURLs","throwIfCancellationRequested","throwIfRequested","baseURL","reason","fns","relativeURL","executor","TypeError","resolvePromise","token","source","c","callback","arr","Configuration","param","apiKey","accessToken"],"mappings":"4FAAA,YAEA,IAAIA,EAAQ,EAAQ,IAChBC,EAAsB,EAAQ,KAE9BC,EAAuB,CACzB,eAAgB,qCAGlB,SAASC,EAAsBC,EAASC,IACjCL,EAAMM,YAAYF,IAAYJ,EAAMM,YAAYF,EAAQ,mBAC3DA,EAAQ,gBAAkBC,GAgB9B,IAXME,EAWFC,EAAW,CACbD,UAX8B,oBAAnBE,qBAGmB,IAAZC,KADhBH,EAAU,EAAQ,MAKbA,GAMPI,iBAAkB,CAAC,SAA0BC,EAAMR,GAEjD,OADAH,EAAoBG,EAAS,gBACzBJ,EAAMa,WAAWD,IACnBZ,EAAMc,cAAcF,IACpBZ,EAAMe,SAASH,IACfZ,EAAMgB,SAASJ,IACfZ,EAAMiB,OAAOL,IACbZ,EAAMkB,OAAON,GAENA,EAELZ,EAAMmB,kBAAkBP,GACnBA,EAAKQ,OAEVpB,EAAMqB,kBAAkBT,IAC1BT,EAAsBC,EAAS,mDACxBQ,EAAKU,YAEVtB,EAAMuB,SAASX,IACjBT,EAAsBC,EAAS,kCACxBoB,KAAKC,UAAUb,IAEjBA,IAGTc,kBAAmB,CAAC,SAA2Bd,GAE7C,GAAoB,iBAATA,EACT,IACEA,EAAOY,KAAKG,MAAMf,GAClB,MAAOgB,IAEX,OAAOhB,IAOTiB,QAAS,EAETC,eAAgB,aAChBC,eAAgB,eAEhBC,kBAAmB,EAEnBC,eAAgB,SAAwBC,GACtC,OAAOA,GAAU,KAAOA,EAAS,MAIrC1B,EAASJ,QAAU,CACjB+B,OAAQ,CACN,OAAU,sCAIdnC,EAAMoC,QAAQ,CAAC,SAAU,MAAO,SAAS,SAA6BC,GACpE7B,EAASJ,QAAQiC,GAAU,MAG7BrC,EAAMoC,QAAQ,CAAC,OAAQ,MAAO,UAAU,SAA+BC,GACrE7B,EAASJ,QAAQiC,GAAUrC,EAAMsC,MAAMpC,MAGzCqC,EAAOC,QAAUhC,I,mDC7FjB+B,EAAOC,QAAU,SAAcC,EAAIC,GACjC,OAAO,WAEL,IADA,IAAIC,EAAO,IAAIC,MAAMC,UAAUC,QACtBC,EAAI,EAAGA,EAAIJ,EAAKG,OAAQC,IAC/BJ,EAAKI,GAAKF,UAAUE,GAEtB,OAAON,EAAGO,MAAMN,EAASC,M,iCCN7B,IAAI3C,EAAQ,EAAQ,IAChBiD,EAAS,EAAQ,KACjBC,EAAW,EAAQ,KACnBC,EAAe,EAAQ,KACvBC,EAAkB,EAAQ,KAC1BC,EAAc,EAAQ,KAE1Bd,EAAOC,QAAU,SAAoBc,GACnC,OAAO,IAAIC,SAAQ,SAA4BC,EAASC,GACtD,IAAIC,EAAcJ,EAAO1C,KACrB+C,EAAiBL,EAAOlD,QAExBJ,EAAMa,WAAW6C,WACZC,EAAe,gBAGxB,IAAIC,EAAU,IAAInD,eAGlB,GAAI6C,EAAOO,KAAM,CACf,IAAIC,EAAWR,EAAOO,KAAKC,UAAY,GACnCC,EAAWT,EAAOO,KAAKE,UAAY,GACvCJ,EAAeK,cAAgB,SAAWC,KAAKH,EAAW,IAAMC,GA8DlE,GA3DAH,EAAQM,KAAKZ,EAAOjB,OAAO8B,cAAejB,EAASI,EAAOc,IAAKd,EAAOe,OAAQf,EAAOgB,mBAAmB,GAGxGV,EAAQ/B,QAAUyB,EAAOzB,QAGzB+B,EAAQW,mBAAqB,WAC3B,GAAKX,GAAkC,IAAvBA,EAAQY,aAQD,IAAnBZ,EAAQ1B,QAAkB0B,EAAQa,aAAwD,IAAzCb,EAAQa,YAAYC,QAAQ,UAAjF,CAKA,IAAIC,EAAkB,0BAA2Bf,EAAUT,EAAaS,EAAQgB,yBAA2B,KAEvGC,EAAW,CACbjE,KAFkB0C,EAAOwB,cAAwC,SAAxBxB,EAAOwB,aAAiDlB,EAAQiB,SAA/BjB,EAAQmB,aAGlF7C,OAAQ0B,EAAQ1B,OAChB8C,WAAYpB,EAAQoB,WACpB5E,QAASuE,EACTrB,OAAQA,EACRM,QAASA,GAGXX,EAAOO,EAASC,EAAQoB,GAGxBjB,EAAU,OAIZA,EAAQqB,QAAU,WAGhBxB,EAAOJ,EAAY,gBAAiBC,EAAQ,KAAMM,IAGlDA,EAAU,MAIZA,EAAQsB,UAAY,WAClBzB,EAAOJ,EAAY,cAAgBC,EAAOzB,QAAU,cAAeyB,EAAQ,eACzEM,IAGFA,EAAU,MAMR5D,EAAMmF,uBAAwB,CAChC,IAAIC,EAAU,EAAQ,KAGlBC,GAAa/B,EAAOgC,iBAAmBlC,EAAgBE,EAAOc,OAASd,EAAOxB,eAC9EsD,EAAQG,KAAKjC,EAAOxB,qBACpB0D,EAEAH,IACF1B,EAAeL,EAAOvB,gBAAkBsD,GAuB5C,GAlBI,qBAAsBzB,GACxB5D,EAAMoC,QAAQuB,GAAgB,SAA0B8B,EAAKC,QAChC,IAAhBhC,GAAqD,iBAAtBgC,EAAIC,qBAErChC,EAAe+B,GAGtB9B,EAAQgC,iBAAiBF,EAAKD,MAMhCnC,EAAOgC,kBACT1B,EAAQ0B,iBAAkB,GAIxBhC,EAAOwB,aACT,IACElB,EAAQkB,aAAexB,EAAOwB,aAC9B,MAAOlD,GAGP,GAA4B,SAAxB0B,EAAOwB,aACT,MAAMlD,EAM6B,mBAA9B0B,EAAOuC,oBAChBjC,EAAQkC,iBAAiB,WAAYxC,EAAOuC,oBAIP,mBAA5BvC,EAAOyC,kBAAmCnC,EAAQoC,QAC3DpC,EAAQoC,OAAOF,iBAAiB,WAAYxC,EAAOyC,kBAGjDzC,EAAO2C,aAET3C,EAAO2C,YAAYC,QAAQC,MAAK,SAAoBC,GAC7CxC,IAILA,EAAQyC,QACR5C,EAAO2C,GAEPxC,EAAU,cAIM4B,IAAhB9B,IACFA,EAAc,MAIhBE,EAAQ0C,KAAK5C,Q,iCC7JjB,IAAI6C,EAAe,EAAQ,KAY3BhE,EAAOC,QAAU,SAAqBgE,EAASlD,EAAQmD,EAAM7C,EAASiB,GACpE,IAAI6B,EAAQ,IAAIC,MAAMH,GACtB,OAAOD,EAAaG,EAAOpD,EAAQmD,EAAM7C,EAASiB,K,iCCdpDtC,EAAOC,QAAU,SAAkBnC,GACjC,SAAUA,IAASA,EAAMuG,c,iCCK3B,SAASC,EAAOL,GACdM,KAAKN,QAAUA,EAGjBK,EAAOE,UAAUzF,SAAW,WAC1B,MAAO,UAAYwF,KAAKN,QAAU,KAAOM,KAAKN,QAAU,KAG1DK,EAAOE,UAAUH,YAAa,EAE9BrE,EAAOC,QAAUqE,G,iCCLjB,SAASG,EAASC,GACd,IAAK,IAAIC,KAAKD,EAAQzE,EAAQ2E,eAAeD,KAAI1E,EAAQ0E,GAAKD,EAAEC,IAEpEE,OAAOC,eAAe7E,EAAS,aAAc,CAAEnC,OAAO,IACtD2G,EAAS,EAAQ,MACjBA,EAAS,EAAQ,O,gCChBjB,IAAIM,EAAO,EAAQ,KACfvG,EAAW,EAAQ,KAMnBO,EAAW8F,OAAOL,UAAUzF,SAQhC,SAASiG,EAAQ9B,GACf,MAA8B,mBAAvBnE,EAASkG,KAAK/B,GA2EvB,SAASlE,EAASkE,GAChB,OAAe,OAARA,GAA+B,iBAARA,EAuChC,SAASgC,EAAWhC,GAClB,MAA8B,sBAAvBnE,EAASkG,KAAK/B,GAoEvB,SAASrD,EAAQsF,EAAKjF,GAEpB,GAAIiF,QAUJ,GALmB,iBAARA,IAETA,EAAM,CAACA,IAGLH,EAAQG,GAEV,IAAK,IAAI3E,EAAI,EAAG4E,EAAID,EAAI5E,OAAQC,EAAI4E,EAAG5E,IACrCN,EAAG+E,KAAK,KAAME,EAAI3E,GAAIA,EAAG2E,QAI3B,IAAK,IAAIhC,KAAOgC,EACVN,OAAOL,UAAUI,eAAeK,KAAKE,EAAKhC,IAC5CjD,EAAG+E,KAAK,KAAME,EAAIhC,GAAMA,EAAKgC,GA0DrCnF,EAAOC,QAAU,CACf+E,QAASA,EACTzG,cAhQF,SAAuB2E,GACrB,MAA8B,yBAAvBnE,EAASkG,KAAK/B,IAgQrB1E,SAAUA,EACVF,WAxPF,SAAoB4E,GAClB,MAA4B,oBAAbmC,UAA8BnC,aAAemC,UAwP5DzG,kBA/OF,SAA2BsE,GAOzB,MAL4B,oBAAhBoC,aAAiCA,YAAkB,OACpDA,YAAYC,OAAOrC,GAEnB,GAAUA,EAAU,QAAMA,EAAIrE,kBAAkByG,aA2O3DE,SAhOF,SAAkBtC,GAChB,MAAsB,iBAARA,GAgOduC,SAvNF,SAAkBvC,GAChB,MAAsB,iBAARA,GAuNdlE,SAAUA,EACVjB,YA/MF,SAAqBmF,GACnB,YAAsB,IAARA,GA+MdwC,OA5LF,SAAgBxC,GACd,MAA8B,kBAAvBnE,EAASkG,KAAK/B,IA4LrBxE,OAnLF,SAAgBwE,GACd,MAA8B,kBAAvBnE,EAASkG,KAAK/B,IAmLrBvE,OA1KF,SAAgBuE,GACd,MAA8B,kBAAvBnE,EAASkG,KAAK/B,IA0KrBgC,WAAYA,EACZzG,SAxJF,SAAkByE,GAChB,OAAOlE,EAASkE,IAAQgC,EAAWhC,EAAIyC,OAwJvC7G,kBA/IF,SAA2BoE,GACzB,MAAkC,oBAApB0C,iBAAmC1C,aAAe0C,iBA+IhEhD,qBArHF,WACE,OAAyB,oBAAdiD,WAAmD,gBAAtBA,UAAUC,WAI9B,oBAAXC,QACa,oBAAbC,WAgHTnG,QAASA,EACTE,MArDF,SAASA,IACP,IAAIkG,EAAS,GACb,SAASC,EAAYhD,EAAKC,GACG,iBAAhB8C,EAAO9C,IAAoC,iBAARD,EAC5C+C,EAAO9C,GAAOpD,EAAMkG,EAAO9C,GAAMD,GAEjC+C,EAAO9C,GAAOD,EAIlB,IAAK,IAAI1C,EAAI,EAAG4E,EAAI9E,UAAUC,OAAQC,EAAI4E,EAAG5E,IAC3CX,EAAQS,UAAUE,GAAI0F,GAExB,OAAOD,GAyCPE,OA9BF,SAAgBC,EAAGC,EAAGlG,GAQpB,OAPAN,EAAQwG,GAAG,SAAqBnD,EAAKC,GAEjCiD,EAAEjD,GADAhD,GAA0B,mBAAR+C,EACX6B,EAAK7B,EAAK/C,GAEV+C,KAGNkD,GAuBPE,KA1IF,SAAcC,GACZ,OAAOA,EAAIC,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,O,iCCtJjD,IACQC,EADJC,EAAanC,MAAQA,KAAKmC,YACtBD,EAAgB,SAAUE,EAAGN,GAI7B,OAHAI,EAAgB5B,OAAO+B,gBAClB,CAAEC,UAAW,cAAgBxG,OAAS,SAAUsG,EAAGN,GAAKM,EAAEE,UAAYR,IACvE,SAAUM,EAAGN,GAAK,IAAK,IAAI1B,KAAK0B,EAAOA,EAAEzB,eAAeD,KAAIgC,EAAEhC,GAAK0B,EAAE1B,MACpDgC,EAAGN,IAErB,SAAUM,EAAGN,GAEhB,SAASS,IAAOvC,KAAKwC,YAAcJ,EADnCF,EAAcE,EAAGN,GAEjBM,EAAEnC,UAAkB,OAAN6B,EAAaxB,OAAOmC,OAAOX,IAAMS,EAAGtC,UAAY6B,EAAE7B,UAAW,IAAIsC,KAGvFjC,OAAOC,eAAe7E,EAAS,aAAc,CAAEnC,OAAO,IACtD,IAAI+D,EAAM,EAAQ,KACdoF,EAAU,EAAQ,KAClBC,EAAY,gDAAgDV,QAAQ,OAAQ,IAKhFvG,EAAQkH,mBAAqB,CACzBC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,MAAO,KAOX,IAAIC,EACA,SAAiBC,EAAeC,EAAUC,QACrB,IAAbD,IAAuBA,EAAWR,QACxB,IAAVS,IAAoBA,EAAQV,EAAQW,SACxCrD,KAAKmD,SAAWA,EAChBnD,KAAKoD,MAAQA,EACTF,IACAlD,KAAKkD,cAAgBA,EACrBlD,KAAKmD,SAAWD,EAAcC,UAAYnD,KAAKmD,WAK3DzH,EAAQuH,QAAUA,EAQlB,IAAIK,EAA+B,SAAUC,GAEzC,SAASD,EAAcE,EAAOC,GAC1B,IAAIC,EAAQH,EAAO7C,KAAKV,KAAMyD,IAAQzD,KAGtC,OAFA0D,EAAMF,MAAQA,EACdE,EAAMC,KAAO,gBACND,EAEX,OAPAvB,EAAUmB,EAAeC,GAOlBD,EARuB,CAShCzD,OACFnE,EAAQ4H,cAAgBA,EAMxB,SAAWM,IAMP,SAAWC,GACPA,EAAqB,MAAI,QACzBA,EAAkB,GAAI,KAF1B,CAGmBD,EAAyBC,gBAAkBD,EAAyBC,cAAgB,KAT3G,CAU8BnI,EAAQkI,2BAA6BlI,EAAQkI,yBAA2B,KAKtGlI,EAAQoI,2BAA6B,SAAUZ,GAC3C,MAAO,CAWHa,mBAAoB,SAAUC,EAAahH,EAAUiH,EAAOC,EAAQC,GAGhE,QAFgB,IAAZA,IAAsBA,EAAU,IAEhCH,QACA,MAAM,IAAIV,EAAc,cAAe,yFAE3C,IAEIc,EADAC,EAAiB/G,EAAIzC,MADN,YAC0B,GAEzCqI,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,OAAS6I,EAAaD,GACvEK,EAA0B,GAC1BC,EAAyB,GAsB7B,OAnBIvB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,gBAExFyB,IAAhBsF,IACAS,EAAoC,YAAIT,QAE3BtF,IAAb1B,IACAyH,EAAiC,SAAIzH,QAE3B0B,IAAVuF,IACAQ,EAA8B,MAAIR,QAEvBvF,IAAXwF,IACAO,EAA+B,OAAIP,GAEvCG,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAAOD,EAAwBN,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAC7E,CACHgE,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,MASzB5I,EAAQmJ,YAAc,SAAU3B,GAC5B,MAAO,CAWHa,mBAAoB,SAAUC,EAAahH,EAAUiH,EAAOC,EAAQC,GAChE,IAAIW,EAAoBpJ,EAAQoI,2BAA2BZ,GAAea,mBAAmBC,EAAahH,EAAUiH,EAAOC,EAAQC,GACnI,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,OASrCrJ,EAAQsJ,iBAAmB,SAAU9B,EAAeC,EAAUC,GAC1D,MAAO,CAWHW,mBAAoB,SAAUC,EAAahH,EAAUiH,EAAOC,EAAQC,GAChE,OAAOzI,EAAQmJ,YAAY3B,GAAea,mBAAmBC,EAAahH,EAAUiH,EAAOC,EAAQC,EAA5FzI,CAAqG0H,EAAOD,MAU/H,IAAI8B,EAA2B,SAAU1B,GAErC,SAAS0B,IACL,OAAkB,OAAX1B,GAAmBA,EAAOrH,MAAM8D,KAAMjE,YAAciE,KAgB/D,OAlBAmC,EAAU8C,EAAW1B,GAerB0B,EAAUhF,UAAU8D,mBAAqB,SAAUC,EAAahH,EAAUiH,EAAOC,EAAQC,GACrF,OAAOzI,EAAQmJ,YAAY7E,KAAKkD,eAAea,mBAAmBC,EAAahH,EAAUiH,EAAOC,EAAQC,EAAjGzI,CAA0GsE,KAAKoD,MAAOpD,KAAKmD,WAE/H8B,EAnBmB,CAoB5BhC,GACFvH,EAAQuJ,UAAYA,EAKpBvJ,EAAQwJ,0BAA4B,SAAUhC,GAC1C,MAAO,CASHiC,oBAAqB,SAAUC,EAAMC,EAAkBlB,GAGnD,QAFgB,IAAZA,IAAsBA,EAAU,IAEhCiB,QACA,MAAM,IAAI9B,EAAc,OAAQ,mFAGpC,GAAI+B,QACA,MAAM,IAAI/B,EAAc,mBAAoB,+FAEhD,IAGIc,EAHAkB,EAAe,6BACdrD,QAAQ,SAAoBsD,mBAAmBC,OAAOJ,KACvDf,EAAiB/G,EAAIzC,MAAMyK,GAAc,GAEzCpC,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,QAAU6I,EAAaD,GACxEK,EAA0B,GAI1BtB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,WAE5GuH,EAAwB,gBAAkB,mBAC1CH,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAP3B,GAO0DP,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAGpF,OADAgL,EAAuBxK,KAA4BY,KAAKC,UAAU0K,GAAoB,IAC/E,CACH/H,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,IAUjBmB,YAAa,SAAUC,EAAOvB,GAG1B,QAFgB,IAAZA,IAAsBA,EAAU,IAEhCuB,QACA,MAAM,IAAIpC,EAAc,QAAS,4EAErC,IAEIc,EADAC,EAAiB/G,EAAIzC,MADN,YAC0B,GAEzCqI,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,QAAU6I,EAAaD,GACxEK,EAA0B,GAI1BtB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,WAE5GuH,EAAwB,gBAAkB,mBAC1CH,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAP3B,GAO0DP,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAGpF,OADAgL,EAAuBxK,KAA4BY,KAAKC,UAAU+K,GAAS,IACpE,CACHpI,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,IAUjBqB,YAAa,SAAUP,EAAMjB,GAGzB,QAFgB,IAAZA,IAAsBA,EAAU,IAEhCiB,QACA,MAAM,IAAI9B,EAAc,OAAQ,2EAEpC,IAGIc,EAHAkB,EAAe,kBACdrD,QAAQ,SAAoBsD,mBAAmBC,OAAOJ,KACvDf,EAAiB/G,EAAIzC,MAAMyK,GAAc,GAEzCpC,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,UAAY6I,EAAaD,GAC1EK,EAA0B,GAW9B,OAPItB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,WAE5GoH,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAN3B,GAM0DP,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAC7E,CACHgE,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,IAWjBsB,yBAA0B,SAAUR,EAAMS,EAAW1B,GAGjD,QAFgB,IAAZA,IAAsBA,EAAU,IAEhCiB,QACA,MAAM,IAAI9B,EAAc,OAAQ,wFAGpC,GAAIuC,QACA,MAAM,IAAIvC,EAAc,YAAa,6FAEzC,IAGIc,EAHAkB,EAAe,6BACdrD,QAAQ,SAAoBsD,mBAAmBC,OAAOJ,KACvDf,EAAiB/G,EAAIzC,MAAMyK,GAAc,GAEzCpC,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,UAAY6I,EAAaD,GAC1EK,EAA0B,GAC1BC,EAAyB,GAa7B,OAVIvB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,gBAE1FyB,IAAdmH,IACApB,EAAkC,UAAIoB,GAE1CxB,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAAOD,EAAwBN,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAC7E,CACHgE,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,IAUjBwB,SAAU,SAAUV,EAAMjB,GAGtB,QAFgB,IAAZA,IAAsBA,EAAU,IAEhCiB,QACA,MAAM,IAAI9B,EAAc,OAAQ,wEAEpC,IAGIc,EAHAkB,EAAe,kBACdrD,QAAQ,SAAoBsD,mBAAmBC,OAAOJ,KACvDf,EAAiB/G,EAAIzC,MAAMyK,GAAc,GAEzCpC,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,OAAS6I,EAAaD,GACvEK,EAA0B,GAW9B,OAPItB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,WAE5GoH,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAN3B,GAM0DP,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAC7E,CACHgE,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,IAcjByB,WAAY,SAAU9B,EAAOC,EAAQP,EAAM3G,EAAUgJ,EAAS7B,QAC1C,IAAZA,IAAsBA,EAAU,IACpC,IAEIC,EADAC,EAAiB/G,EAAIzC,MADN,YAC0B,GAEzCqI,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,OAAS6I,EAAaD,GACvEK,EAA0B,GAC1BC,EAAyB,GAyB7B,OAtBIvB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,gBAE9FyB,IAAVuF,IACAQ,EAA8B,MAAIR,QAEvBvF,IAAXwF,IACAO,EAA+B,OAAIP,QAE1BxF,IAATiF,IACAc,EAA6B,KAAId,QAEpBjF,IAAb1B,IACAyH,EAAiC,SAAIzH,QAEzB0B,IAAZsH,IACAvB,EAAiC,SAAIuB,GAEzC3B,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAAOD,EAAwBN,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAC7E,CACHgE,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,IAWjB2B,YAAa,SAAUb,EAAMM,EAAOvB,GAGhC,QAFgB,IAAZA,IAAsBA,EAAU,IAEhCiB,QACA,MAAM,IAAI9B,EAAc,OAAQ,2EAGpC,GAAIoC,QACA,MAAM,IAAIpC,EAAc,QAAS,4EAErC,IAGIc,EAHAkB,EAAe,kBACdrD,QAAQ,SAAoBsD,mBAAmBC,OAAOJ,KACvDf,EAAiB/G,EAAIzC,MAAMyK,GAAc,GAEzCpC,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,OAAS6I,EAAaD,GACvEK,EAA0B,GAI1BtB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,WAE5GuH,EAAwB,gBAAkB,mBAC1CH,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAP3B,GAO0DP,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAGpF,OADAgL,EAAuBxK,KAA4BY,KAAKC,UAAU+K,GAAS,IACpE,CACHpI,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,MASzB5I,EAAQwK,WAAa,SAAUhD,GAC3B,MAAO,CASHiC,oBAAqB,SAAUC,EAAMC,EAAkBlB,GACnD,IAAIW,EAAoBpJ,EAAQwJ,0BAA0BhC,GAAeiC,oBAAoBC,EAAMC,EAAkBlB,GACrH,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,KAU7BU,YAAa,SAAUC,EAAOvB,GAC1B,IAAIW,EAAoBpJ,EAAQwJ,0BAA0BhC,GAAeuC,YAAYC,EAAOvB,GAC5F,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,KAU7BY,YAAa,SAAUP,EAAMjB,GACzB,IAAIW,EAAoBpJ,EAAQwJ,0BAA0BhC,GAAeyC,YAAYP,EAAMjB,GAC3F,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,KAW7Ba,yBAA0B,SAAUR,EAAMS,EAAW1B,GACjD,IAAIW,EAAoBpJ,EAAQwJ,0BAA0BhC,GAAe0C,yBAAyBR,EAAMS,EAAW1B,GACnH,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,KAU7Be,SAAU,SAAUV,EAAMjB,GACtB,IAAIW,EAAoBpJ,EAAQwJ,0BAA0BhC,GAAe4C,SAASV,EAAMjB,GACxF,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,KAc7BgB,WAAY,SAAU9B,EAAOC,EAAQP,EAAM3G,EAAUgJ,EAAS7B,GAC1D,IAAIW,EAAoBpJ,EAAQwJ,0BAA0BhC,GAAe6C,WAAW9B,EAAOC,EAAQP,EAAM3G,EAAUgJ,EAAS7B,GAC5H,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,KAW7BkB,YAAa,SAAUb,EAAMM,EAAOvB,GAChC,IAAIW,EAAoBpJ,EAAQwJ,0BAA0BhC,GAAe+C,YAAYb,EAAMM,EAAOvB,GAClG,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,OASrCrJ,EAAQyK,gBAAkB,SAAUjD,EAAeC,EAAUC,GACzD,MAAO,CASH+B,oBAAqB,SAAUC,EAAMC,EAAkBlB,GACnD,OAAOzI,EAAQwK,WAAWhD,GAAeiC,oBAAoBC,EAAMC,EAAkBlB,EAA9EzI,CAAuF0H,EAAOD,IASzGsC,YAAa,SAAUC,EAAOvB,GAC1B,OAAOzI,EAAQwK,WAAWhD,GAAeuC,YAAYC,EAAOvB,EAArDzI,CAA8D0H,EAAOD,IAShFwC,YAAa,SAAUP,EAAMjB,GACzB,OAAOzI,EAAQwK,WAAWhD,GAAeyC,YAAYP,EAAMjB,EAApDzI,CAA6D0H,EAAOD,IAU/EyC,yBAA0B,SAAUR,EAAMS,EAAW1B,GACjD,OAAOzI,EAAQwK,WAAWhD,GAAe0C,yBAAyBR,EAAMS,EAAW1B,EAA5EzI,CAAqF0H,EAAOD,IASvG2C,SAAU,SAAUV,EAAMjB,GACtB,OAAOzI,EAAQwK,WAAWhD,GAAe4C,SAASV,EAAMjB,EAAjDzI,CAA0D0H,EAAOD,IAa5E4C,WAAY,SAAU9B,EAAOC,EAAQP,EAAM3G,EAAUgJ,EAAS7B,GAC1D,OAAOzI,EAAQwK,WAAWhD,GAAe6C,WAAW9B,EAAOC,EAAQP,EAAM3G,EAAUgJ,EAAS7B,EAArFzI,CAA8F0H,EAAOD,IAUhH8C,YAAa,SAAUb,EAAMM,EAAOvB,GAChC,OAAOzI,EAAQwK,WAAWhD,GAAe+C,YAAYb,EAAMM,EAAOvB,EAA3DzI,CAAoE0H,EAAOD,MAU9F,IAAIiD,EAA0B,SAAU7C,GAEpC,SAAS6C,IACL,OAAkB,OAAX7C,GAAmBA,EAAOrH,MAAM8D,KAAMjE,YAAciE,KAsF/D,OAxFAmC,EAAUiE,EAAU7C,GAapB6C,EAASnG,UAAUkF,oBAAsB,SAAUC,EAAMC,EAAkBlB,GACvE,OAAOzI,EAAQwK,WAAWlG,KAAKkD,eAAeiC,oBAAoBC,EAAMC,EAAkBlB,EAAnFzI,CAA4FsE,KAAKoD,MAAOpD,KAAKmD,WAUxHiD,EAASnG,UAAUwF,YAAc,SAAUC,EAAOvB,GAC9C,OAAOzI,EAAQwK,WAAWlG,KAAKkD,eAAeuC,YAAYC,EAAOvB,EAA1DzI,CAAmEsE,KAAKoD,MAAOpD,KAAKmD,WAU/FiD,EAASnG,UAAU0F,YAAc,SAAUP,EAAMjB,GAC7C,OAAOzI,EAAQwK,WAAWlG,KAAKkD,eAAeyC,YAAYP,EAAMjB,EAAzDzI,CAAkEsE,KAAKoD,MAAOpD,KAAKmD,WAW9FiD,EAASnG,UAAU2F,yBAA2B,SAAUR,EAAMS,EAAW1B,GACrE,OAAOzI,EAAQwK,WAAWlG,KAAKkD,eAAe0C,yBAAyBR,EAAMS,EAAW1B,EAAjFzI,CAA0FsE,KAAKoD,MAAOpD,KAAKmD,WAUtHiD,EAASnG,UAAU6F,SAAW,SAAUV,EAAMjB,GAC1C,OAAOzI,EAAQwK,WAAWlG,KAAKkD,eAAe4C,SAASV,EAAMjB,EAAtDzI,CAA+DsE,KAAKoD,MAAOpD,KAAKmD,WAc3FiD,EAASnG,UAAU8F,WAAa,SAAU9B,EAAOC,EAAQP,EAAM3G,EAAUgJ,EAAS7B,GAC9E,OAAOzI,EAAQwK,WAAWlG,KAAKkD,eAAe6C,WAAW9B,EAAOC,EAAQP,EAAM3G,EAAUgJ,EAAS7B,EAA1FzI,CAAmGsE,KAAKoD,MAAOpD,KAAKmD,WAW/HiD,EAASnG,UAAUgG,YAAc,SAAUb,EAAMM,EAAOvB,GACpD,OAAOzI,EAAQwK,WAAWlG,KAAKkD,eAAe+C,YAAYb,EAAMM,EAAOvB,EAAhEzI,CAAyEsE,KAAKoD,MAAOpD,KAAKmD,WAE9FiD,EAzFkB,CA0F3BnD,GACFvH,EAAQ0K,SAAWA,EAKnB1K,EAAQ2K,2BAA6B,SAAUnD,GAC3C,MAAO,CAQHoD,eAAgB,SAAUC,EAAUpC,GAGhC,QAFgB,IAAZA,IAAsBA,EAAU,IAEhCoC,QACA,MAAM,IAAIjD,EAAc,WAAY,kFAExC,IAEIc,EADAC,EAAiB/G,EAAIzC,MADN,cAC0B,GAEzCqI,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,QAAU6I,EAAaD,GACxEK,EAA0B,GAI1BtB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,WAE5GuH,EAAwB,gBAAkB,mBAC1CH,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAP3B,GAO0DP,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAGpF,OADAgL,EAAuBxK,KAA4BY,KAAKC,UAAU4L,GAAY,IACvE,CACHjJ,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,IAUjBkC,aAAc,SAAUpB,EAAMjB,GAG1B,QAFgB,IAAZA,IAAsBA,EAAU,IAEhCiB,QACA,MAAM,IAAI9B,EAAc,OAAQ,4EAEpC,IAGIc,EAHAkB,EAAe,oBACdrD,QAAQ,SAAoBsD,mBAAmBC,OAAOJ,KACvDf,EAAiB/G,EAAIzC,MAAMyK,GAAc,GAEzCpC,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,UAAY6I,EAAaD,GAC1EK,EAA0B,GAW9B,OAPItB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,WAE5GoH,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAN3B,GAM0DP,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAC7E,CACHgE,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,IAUjBmC,UAAW,SAAUrB,EAAMjB,GAGvB,QAFgB,IAAZA,IAAsBA,EAAU,IAEhCiB,QACA,MAAM,IAAI9B,EAAc,OAAQ,yEAEpC,IAGIc,EAHAkB,EAAe,oBACdrD,QAAQ,SAAoBsD,mBAAmBC,OAAOJ,KACvDf,EAAiB/G,EAAIzC,MAAMyK,GAAc,GAEzCpC,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,OAAS6I,EAAaD,GACvEK,EAA0B,GAW9B,OAPItB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,WAE5GoH,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAN3B,GAM0DP,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAC7E,CACHgE,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,IAajBoC,aAAc,SAAUzC,EAAOC,EAAQP,EAAMqC,EAAS7B,QAClC,IAAZA,IAAsBA,EAAU,IACpC,IAEIC,EADAC,EAAiB/G,EAAIzC,MADN,cAC0B,GAEzCqI,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,OAAS6I,EAAaD,GACvEK,EAA0B,GAC1BC,EAAyB,GAsB7B,OAnBIvB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,gBAE9FyB,IAAVuF,IACAQ,EAA8B,MAAIR,QAEvBvF,IAAXwF,IACAO,EAA+B,OAAIP,QAE1BxF,IAATiF,IACAc,EAA6B,KAAId,QAErBjF,IAAZsH,IACAvB,EAAiC,SAAIuB,GAEzC3B,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAAOD,EAAwBN,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAC7E,CACHgE,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,IAWjBqC,aAAc,SAAUvB,EAAMmB,EAAUpC,GAGpC,QAFgB,IAAZA,IAAsBA,EAAU,IAEhCiB,QACA,MAAM,IAAI9B,EAAc,OAAQ,4EAGpC,GAAIiD,QACA,MAAM,IAAIjD,EAAc,WAAY,gFAExC,IAGIc,EAHAkB,EAAe,oBACdrD,QAAQ,SAAoBsD,mBAAmBC,OAAOJ,KACvDf,EAAiB/G,EAAIzC,MAAMyK,GAAc,GAEzCpC,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,OAAS6I,EAAaD,GACvEK,EAA0B,GAI1BtB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,WAE5GuH,EAAwB,gBAAkB,mBAC1CH,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAP3B,GAO0DP,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAGpF,OADAgL,EAAuBxK,KAA4BY,KAAKC,UAAU4L,GAAY,IACvE,CACHjJ,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,MASzB5I,EAAQkL,YAAc,SAAU1D,GAC5B,MAAO,CAQHoD,eAAgB,SAAUC,EAAUpC,GAChC,IAAIW,EAAoBpJ,EAAQ2K,2BAA2BnD,GAAeoD,eAAeC,EAAUpC,GACnG,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,KAU7ByB,aAAc,SAAUpB,EAAMjB,GAC1B,IAAIW,EAAoBpJ,EAAQ2K,2BAA2BnD,GAAesD,aAAapB,EAAMjB,GAC7F,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,KAU7B0B,UAAW,SAAUrB,EAAMjB,GACvB,IAAIW,EAAoBpJ,EAAQ2K,2BAA2BnD,GAAeuD,UAAUrB,EAAMjB,GAC1F,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,KAa7B2B,aAAc,SAAUzC,EAAOC,EAAQP,EAAMqC,EAAS7B,GAClD,IAAIW,EAAoBpJ,EAAQ2K,2BAA2BnD,GAAewD,aAAazC,EAAOC,EAAQP,EAAMqC,EAAS7B,GACrH,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,KAW7B4B,aAAc,SAAUvB,EAAMmB,EAAUpC,GACpC,IAAIW,EAAoBpJ,EAAQ2K,2BAA2BnD,GAAeyD,aAAavB,EAAMmB,EAAUpC,GACvG,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,OASrCrJ,EAAQmL,iBAAmB,SAAU3D,EAAeC,EAAUC,GAC1D,MAAO,CAQHkD,eAAgB,SAAUC,EAAUpC,GAChC,OAAOzI,EAAQkL,YAAY1D,GAAeoD,eAAeC,EAAUpC,EAA5DzI,CAAqE0H,EAAOD,IASvFqD,aAAc,SAAUpB,EAAMjB,GAC1B,OAAOzI,EAAQkL,YAAY1D,GAAesD,aAAapB,EAAMjB,EAAtDzI,CAA+D0H,EAAOD,IASjFsD,UAAW,SAAUrB,EAAMjB,GACvB,OAAOzI,EAAQkL,YAAY1D,GAAeuD,UAAUrB,EAAMjB,EAAnDzI,CAA4D0H,EAAOD,IAY9EuD,aAAc,SAAUzC,EAAOC,EAAQP,EAAMqC,EAAS7B,GAClD,OAAOzI,EAAQkL,YAAY1D,GAAewD,aAAazC,EAAOC,EAAQP,EAAMqC,EAAS7B,EAA9EzI,CAAuF0H,EAAOD,IAUzGwD,aAAc,SAAUvB,EAAMmB,EAAUpC,GACpC,OAAOzI,EAAQkL,YAAY1D,GAAeyD,aAAavB,EAAMmB,EAAUpC,EAAhEzI,CAAyE0H,EAAOD,MAUnG,IAAI2D,EAA2B,SAAUvD,GAErC,SAASuD,IACL,OAAkB,OAAXvD,GAAmBA,EAAOrH,MAAM8D,KAAMjE,YAAciE,KA6D/D,OA/DAmC,EAAU2E,EAAWvD,GAYrBuD,EAAU7G,UAAUqG,eAAiB,SAAUC,EAAUpC,GACrD,OAAOzI,EAAQkL,YAAY5G,KAAKkD,eAAeoD,eAAeC,EAAUpC,EAAjEzI,CAA0EsE,KAAKoD,MAAOpD,KAAKmD,WAUtG2D,EAAU7G,UAAUuG,aAAe,SAAUpB,EAAMjB,GAC/C,OAAOzI,EAAQkL,YAAY5G,KAAKkD,eAAesD,aAAapB,EAAMjB,EAA3DzI,CAAoEsE,KAAKoD,MAAOpD,KAAKmD,WAUhG2D,EAAU7G,UAAUwG,UAAY,SAAUrB,EAAMjB,GAC5C,OAAOzI,EAAQkL,YAAY5G,KAAKkD,eAAeuD,UAAUrB,EAAMjB,EAAxDzI,CAAiEsE,KAAKoD,MAAOpD,KAAKmD,WAa7F2D,EAAU7G,UAAUyG,aAAe,SAAUzC,EAAOC,EAAQP,EAAMqC,EAAS7B,GACvE,OAAOzI,EAAQkL,YAAY5G,KAAKkD,eAAewD,aAAazC,EAAOC,EAAQP,EAAMqC,EAAS7B,EAAnFzI,CAA4FsE,KAAKoD,MAAOpD,KAAKmD,WAWxH2D,EAAU7G,UAAU0G,aAAe,SAAUvB,EAAMmB,EAAUpC,GACzD,OAAOzI,EAAQkL,YAAY5G,KAAKkD,eAAeyD,aAAavB,EAAMmB,EAAUpC,EAArEzI,CAA8EsE,KAAKoD,MAAOpD,KAAKmD,WAEnG2D,EAhEmB,CAiE5B7D,GACFvH,EAAQoL,UAAYA,EAKpBpL,EAAQqL,8BAAgC,SAAU7D,GAC9C,MAAO,CAUH8D,eAAgB,SAAU/C,EAAOC,EAAQ2B,EAAW1B,QAChC,IAAZA,IAAsBA,EAAU,IACpC,IAEIC,EADAC,EAAiB/G,EAAIzC,MADN,gBAC0B,GAEzCqI,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,OAAS6I,EAAaD,GACvEK,EAA0B,GAC1BC,EAAyB,GAmB7B,OAhBIvB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,gBAE9FyB,IAAVuF,IACAQ,EAA8B,MAAIR,QAEvBvF,IAAXwF,IACAO,EAA+B,OAAIP,QAErBxF,IAAdmH,IACApB,EAAkC,UAAIoB,GAE1CxB,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAAOD,EAAwBN,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAC7E,CACHgE,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,MASzB5I,EAAQuL,eAAiB,SAAU/D,GAC/B,MAAO,CAUH8D,eAAgB,SAAU/C,EAAOC,EAAQ2B,EAAW1B,GAChD,IAAIW,EAAoBpJ,EAAQqL,8BAA8B7D,GAAe8D,eAAe/C,EAAOC,EAAQ2B,EAAW1B,GACtH,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,OASrCrJ,EAAQwL,oBAAsB,SAAUhE,EAAeC,EAAUC,GAC7D,MAAO,CAUH4D,eAAgB,SAAU/C,EAAOC,EAAQ2B,EAAW1B,GAChD,OAAOzI,EAAQuL,eAAe/D,GAAe8D,eAAe/C,EAAOC,EAAQ2B,EAAW1B,EAA/EzI,CAAwF0H,EAAOD,MAUlH,IAAIgE,EAA8B,SAAU5D,GAExC,SAAS4D,IACL,OAAkB,OAAX5D,GAAmBA,EAAOrH,MAAM8D,KAAMjE,YAAciE,KAe/D,OAjBAmC,EAAUgF,EAAc5D,GAcxB4D,EAAalH,UAAU+G,eAAiB,SAAU/C,EAAOC,EAAQ2B,EAAW1B,GACxE,OAAOzI,EAAQuL,eAAejH,KAAKkD,eAAe8D,eAAe/C,EAAOC,EAAQ2B,EAAW1B,EAApFzI,CAA6FsE,KAAKoD,MAAOpD,KAAKmD,WAElHgE,EAlBsB,CAmB/BlE,GACFvH,EAAQyL,aAAeA,EAKvBzL,EAAQ0L,yBAA2B,SAAUlE,GACzC,MAAO,CAQHmE,YAAa,SAAUC,EAAQnD,GAG3B,QAFgB,IAAZA,IAAsBA,EAAU,IAEhCmD,QACA,MAAM,IAAIhE,EAAc,SAAU,6EAEtC,IAEIc,EADAC,EAAiB/G,EAAIzC,MADN,WAC0B,GAEzCqI,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,QAAU6I,EAAaD,GACxEK,EAA0B,GAI1BtB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,WAE5GuH,EAAwB,gBAAkB,mBAC1CH,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAP3B,GAO0DP,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAGpF,OADAgL,EAAuBxK,KAA4BY,KAAKC,UAAU2M,GAAU,IACrE,CACHhK,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,IAUjBiD,WAAY,SAAUnC,EAAMjB,GAGxB,QAFgB,IAAZA,IAAsBA,EAAU,IAEhCiB,QACA,MAAM,IAAI9B,EAAc,OAAQ,0EAEpC,IAGIc,EAHAkB,EAAe,iBACdrD,QAAQ,SAAoBsD,mBAAmBC,OAAOJ,KACvDf,EAAiB/G,EAAIzC,MAAMyK,GAAc,GAEzCpC,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,UAAY6I,EAAaD,GAC1EK,EAA0B,GAW9B,OAPItB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,WAE5GoH,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAN3B,GAM0DP,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAC7E,CACHgE,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,IAUjBkD,QAAS,SAAUpC,EAAMjB,GAGrB,QAFgB,IAAZA,IAAsBA,EAAU,IAEhCiB,QACA,MAAM,IAAI9B,EAAc,OAAQ,uEAEpC,IAGIc,EAHAkB,EAAe,iBACdrD,QAAQ,SAAoBsD,mBAAmBC,OAAOJ,KACvDf,EAAiB/G,EAAIzC,MAAMyK,GAAc,GAEzCpC,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,OAAS6I,EAAaD,GACvEK,EAA0B,GAW9B,OAPItB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,WAE5GoH,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAN3B,GAM0DP,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAC7E,CACHgE,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,IAajBmD,UAAW,SAAUxD,EAAOC,EAAQP,EAAMqC,EAAS7B,QAC/B,IAAZA,IAAsBA,EAAU,IACpC,IAEIC,EADAC,EAAiB/G,EAAIzC,MADN,WAC0B,GAEzCqI,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,OAAS6I,EAAaD,GACvEK,EAA0B,GAC1BC,EAAyB,GAsB7B,OAnBIvB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,gBAE9FyB,IAAVuF,IACAQ,EAA8B,MAAIR,QAEvBvF,IAAXwF,IACAO,EAA+B,OAAIP,QAE1BxF,IAATiF,IACAc,EAA6B,KAAId,QAErBjF,IAAZsH,IACAvB,EAAiC,SAAIuB,GAEzC3B,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAAOD,EAAwBN,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAC7E,CACHgE,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,IAWjBoD,WAAY,SAAUtC,EAAMuC,EAAgBxD,GAGxC,QAFgB,IAAZA,IAAsBA,EAAU,IAEhCiB,QACA,MAAM,IAAI9B,EAAc,OAAQ,0EAGpC,GAAIqE,QACA,MAAM,IAAIrE,EAAc,iBAAkB,oFAE9C,IAGIc,EAHAkB,EAAe,iBACdrD,QAAQ,SAAoBsD,mBAAmBC,OAAOJ,KACvDf,EAAiB/G,EAAIzC,MAAMyK,GAAc,GAEzCpC,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,OAAS6I,EAAaD,GACvEK,EAA0B,GAI1BtB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,WAE5GuH,EAAwB,gBAAkB,mBAC1CH,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAP3B,GAO0DP,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAGpF,OADAgL,EAAuBxK,KAA4BY,KAAKC,UAAUgN,GAAkB,IAC7E,CACHrK,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,MASzB5I,EAAQkM,UAAY,SAAU1E,GAC1B,MAAO,CAQHmE,YAAa,SAAUC,EAAQnD,GAC3B,IAAIW,EAAoBpJ,EAAQ0L,yBAAyBlE,GAAemE,YAAYC,EAAQnD,GAC5F,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,KAU7BwC,WAAY,SAAUnC,EAAMjB,GACxB,IAAIW,EAAoBpJ,EAAQ0L,yBAAyBlE,GAAeqE,WAAWnC,EAAMjB,GACzF,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,KAU7ByC,QAAS,SAAUpC,EAAMjB,GACrB,IAAIW,EAAoBpJ,EAAQ0L,yBAAyBlE,GAAesE,QAAQpC,EAAMjB,GACtF,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,KAa7B0C,UAAW,SAAUxD,EAAOC,EAAQP,EAAMqC,EAAS7B,GAC/C,IAAIW,EAAoBpJ,EAAQ0L,yBAAyBlE,GAAeuE,UAAUxD,EAAOC,EAAQP,EAAMqC,EAAS7B,GAChH,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,KAW7B2C,WAAY,SAAUtC,EAAMuC,EAAgBxD,GACxC,IAAIW,EAAoBpJ,EAAQ0L,yBAAyBlE,GAAewE,WAAWtC,EAAMuC,EAAgBxD,GACzG,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,OASrCrJ,EAAQmM,eAAiB,SAAU3E,EAAeC,EAAUC,GACxD,MAAO,CAQHiE,YAAa,SAAUC,EAAQnD,GAC3B,OAAOzI,EAAQkM,UAAU1E,GAAemE,YAAYC,EAAQnD,EAArDzI,CAA8D0H,EAAOD,IAShFoE,WAAY,SAAUnC,EAAMjB,GACxB,OAAOzI,EAAQkM,UAAU1E,GAAeqE,WAAWnC,EAAMjB,EAAlDzI,CAA2D0H,EAAOD,IAS7EqE,QAAS,SAAUpC,EAAMjB,GACrB,OAAOzI,EAAQkM,UAAU1E,GAAesE,QAAQpC,EAAMjB,EAA/CzI,CAAwD0H,EAAOD,IAY1EsE,UAAW,SAAUxD,EAAOC,EAAQP,EAAMqC,EAAS7B,GAC/C,OAAOzI,EAAQkM,UAAU1E,GAAeuE,UAAUxD,EAAOC,EAAQP,EAAMqC,EAAS7B,EAAzEzI,CAAkF0H,EAAOD,IAUpGuE,WAAY,SAAUtC,EAAMuC,EAAgBxD,GACxC,OAAOzI,EAAQkM,UAAU1E,GAAewE,WAAWtC,EAAMuC,EAAgBxD,EAAlEzI,CAA2E0H,EAAOD,MAUrG,IAAI2E,EAAyB,SAAUvE,GAEnC,SAASuE,IACL,OAAkB,OAAXvE,GAAmBA,EAAOrH,MAAM8D,KAAMjE,YAAciE,KA6D/D,OA/DAmC,EAAU2F,EAASvE,GAYnBuE,EAAQ7H,UAAUoH,YAAc,SAAUC,EAAQnD,GAC9C,OAAOzI,EAAQkM,UAAU5H,KAAKkD,eAAemE,YAAYC,EAAQnD,EAA1DzI,CAAmEsE,KAAKoD,MAAOpD,KAAKmD,WAU/F2E,EAAQ7H,UAAUsH,WAAa,SAAUnC,EAAMjB,GAC3C,OAAOzI,EAAQkM,UAAU5H,KAAKkD,eAAeqE,WAAWnC,EAAMjB,EAAvDzI,CAAgEsE,KAAKoD,MAAOpD,KAAKmD,WAU5F2E,EAAQ7H,UAAUuH,QAAU,SAAUpC,EAAMjB,GACxC,OAAOzI,EAAQkM,UAAU5H,KAAKkD,eAAesE,QAAQpC,EAAMjB,EAApDzI,CAA6DsE,KAAKoD,MAAOpD,KAAKmD,WAazF2E,EAAQ7H,UAAUwH,UAAY,SAAUxD,EAAOC,EAAQP,EAAMqC,EAAS7B,GAClE,OAAOzI,EAAQkM,UAAU5H,KAAKkD,eAAeuE,UAAUxD,EAAOC,EAAQP,EAAMqC,EAAS7B,EAA9EzI,CAAuFsE,KAAKoD,MAAOpD,KAAKmD,WAWnH2E,EAAQ7H,UAAUyH,WAAa,SAAUtC,EAAMuC,EAAgBxD,GAC3D,OAAOzI,EAAQkM,UAAU5H,KAAKkD,eAAewE,WAAWtC,EAAMuC,EAAgBxD,EAAvEzI,CAAgFsE,KAAKoD,MAAOpD,KAAKmD,WAErG2E,EAhEiB,CAiE1B7E,GACFvH,EAAQoM,QAAUA,EAKlBpM,EAAQqM,2BAA6B,SAAU7E,GAC3C,MAAO,CAOH8E,UAAW,SAAU7D,QACD,IAAZA,IAAsBA,EAAU,IACpC,IAEIC,EADAC,EAAiB/G,EAAIzC,MADN,YAC0B,GAEzCqI,IACAkB,EAAclB,EAAckB,aAEhC,IAAIE,EAAyBhE,OAAOiE,OAAO,CAAEhJ,OAAQ,OAAS6I,EAAaD,GACvEK,EAA0B,GAW9B,OAPItB,IAAkBA,EAAclG,UAAYkG,EAAcjG,YAC1DuH,EAAuC,cAAI,SAAWrH,KAAK+F,EAAclG,SAAW,IAAMkG,EAAcjG,WAE5GoH,EAAeK,MAAQpE,OAAOiE,OAAO,GAAIF,EAAeK,MAN3B,GAM0DP,EAAQO,cAExFL,EAAeM,OACtBL,EAAuBhL,QAAUgH,OAAOiE,OAAO,GAAIC,EAAyBL,EAAQ7K,SAC7E,CACHgE,IAAKA,EAAIsH,OAAOP,GAChBF,QAASG,MASzB5I,EAAQuM,YAAc,SAAU/E,GAC5B,MAAO,CAOH8E,UAAW,SAAU7D,GACjB,IAAIW,EAAoBpJ,EAAQqM,2BAA2B7E,GAAe8E,UAAU7D,GACpF,OAAO,SAAUf,EAAOD,QACN,IAAVC,IAAoBA,EAAQV,EAAQW,cACvB,IAAbF,IAAuBA,EAAWR,GACtC,IAAIoC,EAAmBzE,OAAOiE,OAAOO,EAAkBX,QAAS,CAAE7G,IAAK6F,EAAW2B,EAAkBxH,MACpG,OAAO8F,EAAMtG,QAAQiI,OASrCrJ,EAAQwM,iBAAmB,SAAUhF,EAAeC,EAAUC,GAC1D,MAAO,CAOH4E,UAAW,SAAU7D,GACjB,OAAOzI,EAAQuM,YAAY/E,GAAe8E,UAAU7D,EAA7CzI,CAAsD0H,EAAOD,MAUhF,IAAIgF,EAA2B,SAAU5E,GAErC,SAAS4E,IACL,OAAkB,OAAX5E,GAAmBA,EAAOrH,MAAM8D,KAAMjE,YAAciE,KAY/D,OAdAmC,EAAUgG,EAAW5E,GAWrB4E,EAAUlI,UAAU+H,UAAY,SAAU7D,GACtC,OAAOzI,EAAQuM,YAAYjI,KAAKkD,eAAe8E,UAAU7D,EAAlDzI,CAA2DsE,KAAKoD,MAAOpD,KAAKmD,WAEhFgF,EAfmB,CAgB5BlF,GACFvH,EAAQyM,UAAYA,G,oBCh6DpB1M,EAAOC,QAAU,EAAQ,M,iCCEzB,IAAIxC,EAAQ,EAAQ,IAChBsH,EAAO,EAAQ,KACf4H,EAAQ,EAAQ,KAChB1O,EAAW,EAAQ,KAQvB,SAAS2O,EAAeC,GACtB,IAAIC,EAAU,IAAIH,EAAME,GACpBE,EAAWhI,EAAK4H,EAAMnI,UAAUnD,QAASyL,GAQ7C,OALArP,EAAM0I,OAAO4G,EAAUJ,EAAMnI,UAAWsI,GAGxCrP,EAAM0I,OAAO4G,EAAUD,GAEhBC,EAIT,IAAIpF,EAAQiF,EAAe3O,GAG3B0J,EAAMgF,MAAQA,EAGdhF,EAAMX,OAAS,SAAgBgG,GAC7B,OAAOJ,EAAenP,EAAMsC,MAAM9B,EAAU+O,KAI9CrF,EAAMrD,OAAS,EAAQ,KACvBqD,EAAMsF,YAAc,EAAQ,KAC5BtF,EAAMuF,SAAW,EAAQ,KAGzBvF,EAAMwF,IAAM,SAAaC,GACvB,OAAOpM,QAAQmM,IAAIC,IAErBzF,EAAM0F,OAAS,EAAQ,KAEvBrN,EAAOC,QAAU0H,EAGjB3H,EAAOC,QAAQ2H,QAAUD,G;;;;;;;AC5CzB3H,EAAOC,QAAU,SAAmBkF,GAClC,OAAc,MAAPA,GAAkC,MAAnBA,EAAI4B,aACY,mBAA7B5B,EAAI4B,YAAYvI,UAA2B2G,EAAI4B,YAAYvI,SAAS2G,K,iCCP/E,IAAIlH,EAAW,EAAQ,KACnBR,EAAQ,EAAQ,IAChB6P,EAAqB,EAAQ,KAC7BC,EAAkB,EAAQ,KAO9B,SAASZ,EAAMK,GACbzI,KAAKtG,SAAW+O,EAChBzI,KAAKiJ,aAAe,CAClBnM,QAAS,IAAIiM,EACbhL,SAAU,IAAIgL,GASlBX,EAAMnI,UAAUnD,QAAU,SAAiBN,GAGnB,iBAAXA,IACTA,EAAStD,EAAMsC,MAAM,CACnB8B,IAAKvB,UAAU,IACdA,UAAU,MAGfS,EAAStD,EAAMsC,MAAM9B,EAAU,CAAC6B,OAAQ,OAAQyE,KAAKtG,SAAU8C,IACxDjB,OAASiB,EAAOjB,OAAOsD,cAG9B,IAAIqK,EAAQ,CAACF,OAAiBtK,GAC1BU,EAAU3C,QAAQC,QAAQF,GAU9B,IARAwD,KAAKiJ,aAAanM,QAAQxB,SAAQ,SAAoC6N,GACpED,EAAME,QAAQD,EAAYE,UAAWF,EAAYG,aAGnDtJ,KAAKiJ,aAAalL,SAASzC,SAAQ,SAAkC6N,GACnED,EAAMK,KAAKJ,EAAYE,UAAWF,EAAYG,aAGzCJ,EAAMlN,QACXoD,EAAUA,EAAQC,KAAK6J,EAAMM,QAASN,EAAMM,SAG9C,OAAOpK,GAITlG,EAAMoC,QAAQ,CAAC,SAAU,MAAO,OAAQ,YAAY,SAA6BC,GAE/E6M,EAAMnI,UAAU1E,GAAU,SAAS+B,EAAKd,GACtC,OAAOwD,KAAKlD,QAAQ5D,EAAMsC,MAAMgB,GAAU,GAAI,CAC5CjB,OAAQA,EACR+B,IAAKA,SAKXpE,EAAMoC,QAAQ,CAAC,OAAQ,MAAO,UAAU,SAA+BC,GAErE6M,EAAMnI,UAAU1E,GAAU,SAAS+B,EAAKxD,EAAM0C,GAC5C,OAAOwD,KAAKlD,QAAQ5D,EAAMsC,MAAMgB,GAAU,GAAI,CAC5CjB,OAAQA,EACR+B,IAAKA,EACLxD,KAAMA,SAKZ2B,EAAOC,QAAU0M,G,iCC5EjB,IAAIlP,EAAQ,EAAQ,IAEpBuC,EAAOC,QAAU,SAA6BpC,EAASmQ,GACrDvQ,EAAMoC,QAAQhC,GAAS,SAAuBC,EAAOoK,GAC/CA,IAAS8F,GAAkB9F,EAAKtG,gBAAkBoM,EAAepM,gBACnE/D,EAAQmQ,GAAkBlQ,SACnBD,EAAQqK,S,iCCNrB,IAAIpH,EAAc,EAAQ,KAS1Bd,EAAOC,QAAU,SAAgBgB,EAASC,EAAQoB,GAChD,IAAI5C,EAAiB4C,EAASvB,OAAOrB,eAEhC4C,EAAS3C,QAAWD,IAAkBA,EAAe4C,EAAS3C,QAGjEuB,EAAOJ,EACL,mCAAqCwB,EAAS3C,OAC9C2C,EAASvB,OACT,KACAuB,EAASjB,QACTiB,IAPFrB,EAAQqB,K,iCCHZtC,EAAOC,QAAU,SAAsBkE,EAAOpD,EAAQmD,EAAM7C,EAASiB,GAOnE,OANA6B,EAAMpD,OAASA,EACXmD,IACFC,EAAMD,KAAOA,GAEfC,EAAM9C,QAAUA,EAChB8C,EAAM7B,SAAWA,EACV6B,I,iCCjBT,IAAI1G,EAAQ,EAAQ,IAEpB,SAASwQ,EAAO/K,GACd,OAAO4G,mBAAmB5G,GACxBsD,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KAUrBxG,EAAOC,QAAU,SAAkB4B,EAAKC,EAAQC,GAE9C,IAAKD,EACH,OAAOD,EAGT,IAAIqM,EACJ,GAAInM,EACFmM,EAAmBnM,EAAiBD,QAC/B,GAAIrE,EAAMqB,kBAAkBgD,GACjCoM,EAAmBpM,EAAO/C,eACrB,CACL,IAAIoP,EAAQ,GAEZ1Q,EAAMoC,QAAQiC,GAAQ,SAAmBoB,EAAKC,GACxCD,UAIAzF,EAAMuH,QAAQ9B,GAChBC,GAAY,KAEZD,EAAM,CAACA,GAGTzF,EAAMoC,QAAQqD,GAAK,SAAoBkL,GACjC3Q,EAAMiI,OAAO0I,GACfA,EAAIA,EAAEC,cACG5Q,EAAMuB,SAASoP,KACxBA,EAAInP,KAAKC,UAAUkP,IAErBD,EAAML,KAAKG,EAAO9K,GAAO,IAAM8K,EAAOG,WAI1CF,EAAmBC,EAAMG,KAAK,KAOhC,OAJIJ,IACFrM,KAA8B,IAAtBA,EAAIM,QAAQ,KAAc,IAAM,KAAO+L,GAG1CrM,I,iCC9DT,IAAIpE,EAAQ,EAAQ,IAIhB8Q,EAAoB,CACtB,MAAO,gBAAiB,iBAAkB,eAAgB,OAC1D,UAAW,OAAQ,OAAQ,oBAAqB,sBAChD,gBAAiB,WAAY,eAAgB,sBAC7C,UAAW,cAAe,cAgB5BvO,EAAOC,QAAU,SAAsBpC,GACrC,IACIsF,EACAD,EACA1C,EAHAgO,EAAS,GAKb,OAAK3Q,GAELJ,EAAMoC,QAAQhC,EAAQ4Q,MAAM,OAAO,SAAgBC,GAKjD,GAJAlO,EAAIkO,EAAKvM,QAAQ,KACjBgB,EAAM1F,EAAM6I,KAAKoI,EAAKC,OAAO,EAAGnO,IAAI4C,cACpCF,EAAMzF,EAAM6I,KAAKoI,EAAKC,OAAOnO,EAAI,IAE7B2C,EAAK,CACP,GAAIqL,EAAOrL,IAAQoL,EAAkBpM,QAAQgB,IAAQ,EACnD,OAGAqL,EAAOrL,GADG,eAARA,GACaqL,EAAOrL,GAAOqL,EAAOrL,GAAO,IAAIyL,OAAO,CAAC1L,IAEzCsL,EAAOrL,GAAOqL,EAAOrL,GAAO,KAAOD,EAAMA,MAKtDsL,GAnBgBA,I,iCC9BzB,IAAI/Q,EAAQ,EAAQ,IAEpBuC,EAAOC,QACLxC,EAAMmF,uBAIN,WACE,IAEIiM,EAFAC,EAAO,kBAAkBC,KAAKlJ,UAAUmJ,WACxCC,EAAiBjJ,SAASkJ,cAAc,KAS5C,SAASC,EAAWtN,GAClB,IAAIuN,EAAOvN,EAWX,OATIiN,IAEFG,EAAeI,aAAa,OAAQD,GACpCA,EAAOH,EAAeG,MAGxBH,EAAeI,aAAa,OAAQD,GAG7B,CACLA,KAAMH,EAAeG,KACrBE,SAAUL,EAAeK,SAAWL,EAAeK,SAAS9I,QAAQ,KAAM,IAAM,GAChF+I,KAAMN,EAAeM,KACrBrG,OAAQ+F,EAAe/F,OAAS+F,EAAe/F,OAAO1C,QAAQ,MAAO,IAAM,GAC3EgJ,KAAMP,EAAeO,KAAOP,EAAeO,KAAKhJ,QAAQ,KAAM,IAAM,GACpEiJ,SAAUR,EAAeQ,SACzBC,KAAMT,EAAeS,KACrBC,SAAiD,MAAtCV,EAAeU,SAASC,OAAO,GAChCX,EAAeU,SACf,IAAMV,EAAeU,UAYnC,OARAd,EAAYM,EAAWpJ,OAAO8J,SAAST,MAQhC,SAAyBU,GAC9B,IAAItB,EAAU/Q,EAAM+H,SAASsK,GAAeX,EAAWW,GAAcA,EACrE,OAAQtB,EAAOc,WAAaT,EAAUS,UAChCd,EAAOe,OAASV,EAAUU,MAhDpC,GAsDS,WACL,OAAO,I,iCC9Db,IAAI9R,EAAQ,EAAQ,IAEpBuC,EAAOC,QACLxC,EAAMmF,uBAIG,CACLmN,MAAO,SAAe7H,EAAMpK,EAAOkS,EAASC,EAAMC,EAAQC,GACxD,IAAIC,EAAS,GACbA,EAAOtC,KAAK5F,EAAO,IAAM4B,mBAAmBhM,IAExCL,EAAMgI,SAASuK,IACjBI,EAAOtC,KAAK,WAAa,IAAIuC,KAAKL,GAASM,eAGzC7S,EAAM+H,SAASyK,IACjBG,EAAOtC,KAAK,QAAUmC,GAGpBxS,EAAM+H,SAAS0K,IACjBE,EAAOtC,KAAK,UAAYoC,IAGX,IAAXC,GACFC,EAAOtC,KAAK,UAGd9H,SAASoK,OAASA,EAAO9B,KAAK,OAGhCtL,KAAM,SAAckF,GAClB,IAAIqI,EAAQvK,SAASoK,OAAOG,MAAM,IAAIC,OAAO,aAAetI,EAAO,cACnE,OAAQqI,EAAQE,mBAAmBF,EAAM,IAAM,MAGjDG,OAAQ,SAAgBxI,GACtB3D,KAAKwL,MAAM7H,EAAM,GAAImI,KAAKM,MAAQ,SAO/B,CACLZ,MAAO,aACP/M,KAAM,WAAkB,OAAO,MAC/B0N,OAAQ,e,iCC/Cd,IAAIjT,EAAQ,EAAQ,IAEpB,SAAS6P,IACP/I,KAAKqM,SAAW,GAWlBtD,EAAmB9I,UAAUqM,IAAM,SAAajD,EAAWC,GAKzD,OAJAtJ,KAAKqM,SAAS9C,KAAK,CACjBF,UAAWA,EACXC,SAAUA,IAELtJ,KAAKqM,SAASrQ,OAAS,GAQhC+M,EAAmB9I,UAAUsM,MAAQ,SAAeC,GAC9CxM,KAAKqM,SAASG,KAChBxM,KAAKqM,SAASG,GAAM,OAYxBzD,EAAmB9I,UAAU3E,QAAU,SAAiBK,GACtDzC,EAAMoC,QAAQ0E,KAAKqM,UAAU,SAAwBI,GACzC,OAANA,GACF9Q,EAAG8Q,OAKThR,EAAOC,QAAUqN,G,iCCjDjB,IAAI7P,EAAQ,EAAQ,IAChBwT,EAAgB,EAAQ,KACxB/D,EAAW,EAAQ,KACnBjP,EAAW,EAAQ,KACnBiT,EAAgB,EAAQ,KACxBC,EAAc,EAAQ,KAK1B,SAASC,EAA6BrQ,GAChCA,EAAO2C,aACT3C,EAAO2C,YAAY2N,mBAUvBrR,EAAOC,QAAU,SAAyBc,GAkCxC,OAjCAqQ,EAA6BrQ,GAGzBA,EAAOuQ,UAAYJ,EAAcnQ,EAAOc,OAC1Cd,EAAOc,IAAMsP,EAAYpQ,EAAOuQ,QAASvQ,EAAOc,MAIlDd,EAAOlD,QAAUkD,EAAOlD,SAAW,GAGnCkD,EAAO1C,KAAO4S,EACZlQ,EAAO1C,KACP0C,EAAOlD,QACPkD,EAAO3C,kBAIT2C,EAAOlD,QAAUJ,EAAMsC,MACrBgB,EAAOlD,QAAQ+B,QAAU,GACzBmB,EAAOlD,QAAQkD,EAAOjB,SAAW,GACjCiB,EAAOlD,SAAW,IAGpBJ,EAAMoC,QACJ,CAAC,SAAU,MAAO,OAAQ,OAAQ,MAAO,QAAS,WAClD,SAA2BC,UAClBiB,EAAOlD,QAAQiC,OAIZiB,EAAO/C,SAAWC,EAASD,SAE1B+C,GAAQ6C,MAAK,SAA6BtB,GAUvD,OATA8O,EAA6BrQ,GAG7BuB,EAASjE,KAAO4S,EACd3O,EAASjE,KACTiE,EAASzE,QACTkD,EAAO5B,mBAGFmD,KACN,SAA4BiP,GAc7B,OAbKrE,EAASqE,KACZH,EAA6BrQ,GAGzBwQ,GAAUA,EAAOjP,WACnBiP,EAAOjP,SAASjE,KAAO4S,EACrBM,EAAOjP,SAASjE,KAChBkT,EAAOjP,SAASzE,QAChBkD,EAAO5B,qBAKN6B,QAAQE,OAAOqQ,Q,iCCjF1B,IAAI9T,EAAQ,EAAQ,IAUpBuC,EAAOC,QAAU,SAAuB5B,EAAMR,EAAS2T,GAMrD,OAJA/T,EAAMoC,QAAQ2R,GAAK,SAAmBtR,GACpC7B,EAAO6B,EAAG7B,EAAMR,MAGXQ,I,iCCVT2B,EAAOC,QAAU,SAAuB4B,GAItC,MAAO,gCAAgCkN,KAAKlN,K,iCCH9C7B,EAAOC,QAAU,SAAqBqR,EAASG,GAC7C,OAAOA,EACHH,EAAQ9K,QAAQ,OAAQ,IAAM,IAAMiL,EAAYjL,QAAQ,OAAQ,IAChE8K,I,iCCVN,IAAIhN,EAAS,EAAQ,KAQrB,SAAS2I,EAAYyE,GACnB,GAAwB,mBAAbA,EACT,MAAM,IAAIC,UAAU,gCAGtB,IAAIC,EACJrN,KAAKZ,QAAU,IAAI3C,SAAQ,SAAyBC,GAClD2Q,EAAiB3Q,KAGnB,IAAI4Q,EAAQtN,KACZmN,GAAS,SAAgBzN,GACnB4N,EAAMN,SAKVM,EAAMN,OAAS,IAAIjN,EAAOL,GAC1B2N,EAAeC,EAAMN,YAOzBtE,EAAYzI,UAAU6M,iBAAmB,WACvC,GAAI9M,KAAKgN,OACP,MAAMhN,KAAKgN,QAQftE,EAAY6E,OAAS,WACnB,IAAIjO,EAIJ,MAAO,CACLgO,MAJU,IAAI5E,GAAY,SAAkB8E,GAC5ClO,EAASkO,KAITlO,OAAQA,IAIZ7D,EAAOC,QAAUgN,G,iCClCjBjN,EAAOC,QAAU,SAAgB+R,GAC/B,OAAO,SAAcC,GACnB,OAAOD,EAASvR,MAAM,KAAMwR,M,iCCXhCpN,OAAOC,eAAe7E,EAAS,aAAc,CAAEnC,OAAO,IACtD,IAAIoU,EACA,SAAuBC,QACL,IAAVA,IAAoBA,EAAQ,IAChC5N,KAAK6N,OAASD,EAAMC,OACpB7N,KAAKhD,SAAW4Q,EAAM5Q,SACtBgD,KAAK/C,SAAW2Q,EAAM3Q,SACtB+C,KAAK8N,YAAcF,EAAME,YACzB9N,KAAKmD,SAAWyK,EAAMzK,UAI9BzH,EAAQiS,cAAgBA","file":"js/lib~App~5650b515.d3aa530b37167b2ccbff.js","sourcesContent":["'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","\"use strict\";\n// tslint:disable\n/**\n * Role Based Access Control\n * The API for Role Based Access Control.\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./api\"));\n__export(require(\"./configuration\"));\n","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n","\"use strict\";\n// tslint:disable\n/// <reference path=\"./custom.d.ts\" />\n/**\n * Role Based Access Control\n * The API for Role Based Access Control.\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar url = require(\"url\");\nvar axios_1 = require(\"axios\");\nvar BASE_PATH = \"https://raw.githubusercontent.com/api/rbac/v1\".replace(/\\/+$/, \"\");\n/**\n *\n * @export\n */\nexports.COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n/**\n *\n * @export\n * @class BaseAPI\n */\nvar BaseAPI = /** @class */ (function () {\n    function BaseAPI(configuration, basePath, axios) {\n        if (basePath === void 0) { basePath = BASE_PATH; }\n        if (axios === void 0) { axios = axios_1.default; }\n        this.basePath = basePath;\n        this.axios = axios;\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n    return BaseAPI;\n}());\nexports.BaseAPI = BaseAPI;\n;\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nvar RequiredError = /** @class */ (function (_super) {\n    __extends(RequiredError, _super);\n    function RequiredError(field, msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.field = field;\n        _this.name = \"RequiredError\";\n        return _this;\n    }\n    return RequiredError;\n}(Error));\nexports.RequiredError = RequiredError;\n/**\n * @export\n * @namespace ResourceDefinitionFilter\n */\nvar ResourceDefinitionFilter;\n(function (ResourceDefinitionFilter) {\n    /**\n     * @export\n     * @enum {string}\n     */\n    var OperationEnum;\n    (function (OperationEnum) {\n        OperationEnum[\"Equal\"] = \"equal\";\n        OperationEnum[\"In\"] = \"in\";\n    })(OperationEnum = ResourceDefinitionFilter.OperationEnum || (ResourceDefinitionFilter.OperationEnum = {}));\n})(ResourceDefinitionFilter = exports.ResourceDefinitionFilter || (exports.ResourceDefinitionFilter = {}));\n/**\n * AccessApi - axios parameter creator\n * @export\n */\nexports.AccessApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Get the permitted access for a principal in the tenant\n         * @param {string} application The application name to obtain access for the principal\n         * @param {string} [username] Unique username of the principal to obtain access for\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalAccess: function (application, username, limit, offset, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'application' is not null or undefined\n            if (application === null || application === undefined) {\n                throw new RequiredError('application', 'Required parameter application was null or undefined when calling getPrincipalAccess.');\n            }\n            var localVarPath = \"/access/\";\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'GET' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            if (application !== undefined) {\n                localVarQueryParameter['application'] = application;\n            }\n            if (username !== undefined) {\n                localVarQueryParameter['username'] = username;\n            }\n            if (limit !== undefined) {\n                localVarQueryParameter['limit'] = limit;\n            }\n            if (offset !== undefined) {\n                localVarQueryParameter['offset'] = offset;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * AccessApi - functional programming interface\n * @export\n */\nexports.AccessApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Get the permitted access for a principal in the tenant\n         * @param {string} application The application name to obtain access for the principal\n         * @param {string} [username] Unique username of the principal to obtain access for\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalAccess: function (application, username, limit, offset, options) {\n            var localVarAxiosArgs = exports.AccessApiAxiosParamCreator(configuration).getPrincipalAccess(application, username, limit, offset, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    };\n};\n/**\n * AccessApi - factory interface\n * @export\n */\nexports.AccessApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Get the permitted access for a principal in the tenant\n         * @param {string} application The application name to obtain access for the principal\n         * @param {string} [username] Unique username of the principal to obtain access for\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalAccess: function (application, username, limit, offset, options) {\n            return exports.AccessApiFp(configuration).getPrincipalAccess(application, username, limit, offset, options)(axios, basePath);\n        },\n    };\n};\n/**\n * AccessApi - object-oriented interface\n * @export\n * @class AccessApi\n * @extends {BaseAPI}\n */\nvar AccessApi = /** @class */ (function (_super) {\n    __extends(AccessApi, _super);\n    function AccessApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Get the permitted access for a principal in the tenant\n     * @param {string} application The application name to obtain access for the principal\n     * @param {string} [username] Unique username of the principal to obtain access for\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccessApi\n     */\n    AccessApi.prototype.getPrincipalAccess = function (application, username, limit, offset, options) {\n        return exports.AccessApiFp(this.configuration).getPrincipalAccess(application, username, limit, offset, options)(this.axios, this.basePath);\n    };\n    return AccessApi;\n}(BaseAPI));\nexports.AccessApi = AccessApi;\n/**\n * GroupApi - axios parameter creator\n * @export\n */\nexports.GroupApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Add a principal to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupPrincipalIn} groupPrincipalIn Principal to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPrincipalToGroup: function (uuid, groupPrincipalIn, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'uuid' is not null or undefined\n            if (uuid === null || uuid === undefined) {\n                throw new RequiredError('uuid', 'Required parameter uuid was null or undefined when calling addPrincipalToGroup.');\n            }\n            // verify required parameter 'groupPrincipalIn' is not null or undefined\n            if (groupPrincipalIn === null || groupPrincipalIn === undefined) {\n                throw new RequiredError('groupPrincipalIn', 'Required parameter groupPrincipalIn was null or undefined when calling addPrincipalToGroup.');\n            }\n            var localVarPath = \"/groups/{uuid}/principals/\"\n                .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'POST' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            var needsSerialization = (\"GroupPrincipalIn\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data = needsSerialization ? JSON.stringify(groupPrincipalIn || {}) : (groupPrincipalIn || \"\");\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Create a group in a tenant\n         * @param {Group} group Group to create in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup: function (group, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'group' is not null or undefined\n            if (group === null || group === undefined) {\n                throw new RequiredError('group', 'Required parameter group was null or undefined when calling createGroup.');\n            }\n            var localVarPath = \"/groups/\";\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'POST' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            var needsSerialization = (\"Group\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data = needsSerialization ? JSON.stringify(group || {}) : (group || \"\");\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Delete a group in the tenant\n         * @param {string} uuid ID of group to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteGroup: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'uuid' is not null or undefined\n            if (uuid === null || uuid === undefined) {\n                throw new RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deleteGroup.');\n            }\n            var localVarPath = \"/groups/{uuid}/\"\n                .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'DELETE' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Remove a principal from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} usernames A comma separated list of usernames for principals to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePrincipalFromGroup: function (uuid, usernames, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'uuid' is not null or undefined\n            if (uuid === null || uuid === undefined) {\n                throw new RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deletePrincipalFromGroup.');\n            }\n            // verify required parameter 'usernames' is not null or undefined\n            if (usernames === null || usernames === undefined) {\n                throw new RequiredError('usernames', 'Required parameter usernames was null or undefined when calling deletePrincipalFromGroup.');\n            }\n            var localVarPath = \"/groups/{uuid}/principals/\"\n                .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'DELETE' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            if (usernames !== undefined) {\n                localVarQueryParameter['usernames'] = usernames;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Get a group in the tenant\n         * @param {string} uuid ID of group to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getGroup: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'uuid' is not null or undefined\n            if (uuid === null || uuid === undefined) {\n                throw new RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getGroup.');\n            }\n            var localVarPath = \"/groups/{uuid}/\"\n                .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'GET' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary List the groups for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {string} [username] A username for a principal to filter for groups\n         * @param {string} [orderBy] Parameter for ordering resource by value.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listGroups: function (limit, offset, name, username, orderBy, options) {\n            if (options === void 0) { options = {}; }\n            var localVarPath = \"/groups/\";\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'GET' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            if (limit !== undefined) {\n                localVarQueryParameter['limit'] = limit;\n            }\n            if (offset !== undefined) {\n                localVarQueryParameter['offset'] = offset;\n            }\n            if (name !== undefined) {\n                localVarQueryParameter['name'] = name;\n            }\n            if (username !== undefined) {\n                localVarQueryParameter['username'] = username;\n            }\n            if (orderBy !== undefined) {\n                localVarQueryParameter['order_by'] = orderBy;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Udate a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {Group} group Group to update in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup: function (uuid, group, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'uuid' is not null or undefined\n            if (uuid === null || uuid === undefined) {\n                throw new RequiredError('uuid', 'Required parameter uuid was null or undefined when calling updateGroup.');\n            }\n            // verify required parameter 'group' is not null or undefined\n            if (group === null || group === undefined) {\n                throw new RequiredError('group', 'Required parameter group was null or undefined when calling updateGroup.');\n            }\n            var localVarPath = \"/groups/{uuid}/\"\n                .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'PUT' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            var needsSerialization = (\"Group\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data = needsSerialization ? JSON.stringify(group || {}) : (group || \"\");\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * GroupApi - functional programming interface\n * @export\n */\nexports.GroupApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Add a principal to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupPrincipalIn} groupPrincipalIn Principal to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPrincipalToGroup: function (uuid, groupPrincipalIn, options) {\n            var localVarAxiosArgs = exports.GroupApiAxiosParamCreator(configuration).addPrincipalToGroup(uuid, groupPrincipalIn, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         *\n         * @summary Create a group in a tenant\n         * @param {Group} group Group to create in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup: function (group, options) {\n            var localVarAxiosArgs = exports.GroupApiAxiosParamCreator(configuration).createGroup(group, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         *\n         * @summary Delete a group in the tenant\n         * @param {string} uuid ID of group to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteGroup: function (uuid, options) {\n            var localVarAxiosArgs = exports.GroupApiAxiosParamCreator(configuration).deleteGroup(uuid, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         *\n         * @summary Remove a principal from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} usernames A comma separated list of usernames for principals to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePrincipalFromGroup: function (uuid, usernames, options) {\n            var localVarAxiosArgs = exports.GroupApiAxiosParamCreator(configuration).deletePrincipalFromGroup(uuid, usernames, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         *\n         * @summary Get a group in the tenant\n         * @param {string} uuid ID of group to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getGroup: function (uuid, options) {\n            var localVarAxiosArgs = exports.GroupApiAxiosParamCreator(configuration).getGroup(uuid, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         *\n         * @summary List the groups for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {string} [username] A username for a principal to filter for groups\n         * @param {string} [orderBy] Parameter for ordering resource by value.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listGroups: function (limit, offset, name, username, orderBy, options) {\n            var localVarAxiosArgs = exports.GroupApiAxiosParamCreator(configuration).listGroups(limit, offset, name, username, orderBy, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         *\n         * @summary Udate a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {Group} group Group to update in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup: function (uuid, group, options) {\n            var localVarAxiosArgs = exports.GroupApiAxiosParamCreator(configuration).updateGroup(uuid, group, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    };\n};\n/**\n * GroupApi - factory interface\n * @export\n */\nexports.GroupApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Add a principal to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupPrincipalIn} groupPrincipalIn Principal to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPrincipalToGroup: function (uuid, groupPrincipalIn, options) {\n            return exports.GroupApiFp(configuration).addPrincipalToGroup(uuid, groupPrincipalIn, options)(axios, basePath);\n        },\n        /**\n         *\n         * @summary Create a group in a tenant\n         * @param {Group} group Group to create in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup: function (group, options) {\n            return exports.GroupApiFp(configuration).createGroup(group, options)(axios, basePath);\n        },\n        /**\n         *\n         * @summary Delete a group in the tenant\n         * @param {string} uuid ID of group to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteGroup: function (uuid, options) {\n            return exports.GroupApiFp(configuration).deleteGroup(uuid, options)(axios, basePath);\n        },\n        /**\n         *\n         * @summary Remove a principal from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} usernames A comma separated list of usernames for principals to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePrincipalFromGroup: function (uuid, usernames, options) {\n            return exports.GroupApiFp(configuration).deletePrincipalFromGroup(uuid, usernames, options)(axios, basePath);\n        },\n        /**\n         *\n         * @summary Get a group in the tenant\n         * @param {string} uuid ID of group to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getGroup: function (uuid, options) {\n            return exports.GroupApiFp(configuration).getGroup(uuid, options)(axios, basePath);\n        },\n        /**\n         *\n         * @summary List the groups for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {string} [username] A username for a principal to filter for groups\n         * @param {string} [orderBy] Parameter for ordering resource by value.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listGroups: function (limit, offset, name, username, orderBy, options) {\n            return exports.GroupApiFp(configuration).listGroups(limit, offset, name, username, orderBy, options)(axios, basePath);\n        },\n        /**\n         *\n         * @summary Udate a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {Group} group Group to update in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup: function (uuid, group, options) {\n            return exports.GroupApiFp(configuration).updateGroup(uuid, group, options)(axios, basePath);\n        },\n    };\n};\n/**\n * GroupApi - object-oriented interface\n * @export\n * @class GroupApi\n * @extends {BaseAPI}\n */\nvar GroupApi = /** @class */ (function (_super) {\n    __extends(GroupApi, _super);\n    function GroupApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Add a principal to a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {GroupPrincipalIn} groupPrincipalIn Principal to add to a group\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.addPrincipalToGroup = function (uuid, groupPrincipalIn, options) {\n        return exports.GroupApiFp(this.configuration).addPrincipalToGroup(uuid, groupPrincipalIn, options)(this.axios, this.basePath);\n    };\n    /**\n     *\n     * @summary Create a group in a tenant\n     * @param {Group} group Group to create in tenant\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.createGroup = function (group, options) {\n        return exports.GroupApiFp(this.configuration).createGroup(group, options)(this.axios, this.basePath);\n    };\n    /**\n     *\n     * @summary Delete a group in the tenant\n     * @param {string} uuid ID of group to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.deleteGroup = function (uuid, options) {\n        return exports.GroupApiFp(this.configuration).deleteGroup(uuid, options)(this.axios, this.basePath);\n    };\n    /**\n     *\n     * @summary Remove a principal from a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {string} usernames A comma separated list of usernames for principals to remove from the group\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.deletePrincipalFromGroup = function (uuid, usernames, options) {\n        return exports.GroupApiFp(this.configuration).deletePrincipalFromGroup(uuid, usernames, options)(this.axios, this.basePath);\n    };\n    /**\n     *\n     * @summary Get a group in the tenant\n     * @param {string} uuid ID of group to get\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.getGroup = function (uuid, options) {\n        return exports.GroupApiFp(this.configuration).getGroup(uuid, options)(this.axios, this.basePath);\n    };\n    /**\n     *\n     * @summary List the groups for a tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {string} [name] Parameter for filtering resource by name using string contains search.\n     * @param {string} [username] A username for a principal to filter for groups\n     * @param {string} [orderBy] Parameter for ordering resource by value.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.listGroups = function (limit, offset, name, username, orderBy, options) {\n        return exports.GroupApiFp(this.configuration).listGroups(limit, offset, name, username, orderBy, options)(this.axios, this.basePath);\n    };\n    /**\n     *\n     * @summary Udate a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {Group} group Group to update in tenant\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.updateGroup = function (uuid, group, options) {\n        return exports.GroupApiFp(this.configuration).updateGroup(uuid, group, options)(this.axios, this.basePath);\n    };\n    return GroupApi;\n}(BaseAPI));\nexports.GroupApi = GroupApi;\n/**\n * PolicyApi - axios parameter creator\n * @export\n */\nexports.PolicyApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Create a policy in a tenant\n         * @param {PolicyIn} policyIn Policy to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPolicies: function (policyIn, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'policyIn' is not null or undefined\n            if (policyIn === null || policyIn === undefined) {\n                throw new RequiredError('policyIn', 'Required parameter policyIn was null or undefined when calling createPolicies.');\n            }\n            var localVarPath = \"/policies/\";\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'POST' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            var needsSerialization = (\"PolicyIn\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data = needsSerialization ? JSON.stringify(policyIn || {}) : (policyIn || \"\");\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Delete a policy in the tenant\n         * @param {string} uuid ID of policy to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePolicy: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'uuid' is not null or undefined\n            if (uuid === null || uuid === undefined) {\n                throw new RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deletePolicy.');\n            }\n            var localVarPath = \"/policies/{uuid}/\"\n                .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'DELETE' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Get a policy in the tenant\n         * @param {string} uuid ID of policy to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPolicy: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'uuid' is not null or undefined\n            if (uuid === null || uuid === undefined) {\n                throw new RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getPolicy.');\n            }\n            var localVarPath = \"/policies/{uuid}/\"\n                .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'GET' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary List the policies in the tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {string} [orderBy] Parameter for ordering resource by value.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPolicies: function (limit, offset, name, orderBy, options) {\n            if (options === void 0) { options = {}; }\n            var localVarPath = \"/policies/\";\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'GET' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            if (limit !== undefined) {\n                localVarQueryParameter['limit'] = limit;\n            }\n            if (offset !== undefined) {\n                localVarQueryParameter['offset'] = offset;\n            }\n            if (name !== undefined) {\n                localVarQueryParameter['name'] = name;\n            }\n            if (orderBy !== undefined) {\n                localVarQueryParameter['order_by'] = orderBy;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Update a policy in the tenant\n         * @param {string} uuid ID of policy to update\n         * @param {PolicyIn} policyIn Policy to update\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePolicy: function (uuid, policyIn, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'uuid' is not null or undefined\n            if (uuid === null || uuid === undefined) {\n                throw new RequiredError('uuid', 'Required parameter uuid was null or undefined when calling updatePolicy.');\n            }\n            // verify required parameter 'policyIn' is not null or undefined\n            if (policyIn === null || policyIn === undefined) {\n                throw new RequiredError('policyIn', 'Required parameter policyIn was null or undefined when calling updatePolicy.');\n            }\n            var localVarPath = \"/policies/{uuid}/\"\n                .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'PUT' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            var needsSerialization = (\"PolicyIn\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data = needsSerialization ? JSON.stringify(policyIn || {}) : (policyIn || \"\");\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * PolicyApi - functional programming interface\n * @export\n */\nexports.PolicyApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Create a policy in a tenant\n         * @param {PolicyIn} policyIn Policy to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPolicies: function (policyIn, options) {\n            var localVarAxiosArgs = exports.PolicyApiAxiosParamCreator(configuration).createPolicies(policyIn, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         *\n         * @summary Delete a policy in the tenant\n         * @param {string} uuid ID of policy to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePolicy: function (uuid, options) {\n            var localVarAxiosArgs = exports.PolicyApiAxiosParamCreator(configuration).deletePolicy(uuid, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         *\n         * @summary Get a policy in the tenant\n         * @param {string} uuid ID of policy to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPolicy: function (uuid, options) {\n            var localVarAxiosArgs = exports.PolicyApiAxiosParamCreator(configuration).getPolicy(uuid, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         *\n         * @summary List the policies in the tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {string} [orderBy] Parameter for ordering resource by value.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPolicies: function (limit, offset, name, orderBy, options) {\n            var localVarAxiosArgs = exports.PolicyApiAxiosParamCreator(configuration).listPolicies(limit, offset, name, orderBy, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         *\n         * @summary Update a policy in the tenant\n         * @param {string} uuid ID of policy to update\n         * @param {PolicyIn} policyIn Policy to update\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePolicy: function (uuid, policyIn, options) {\n            var localVarAxiosArgs = exports.PolicyApiAxiosParamCreator(configuration).updatePolicy(uuid, policyIn, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    };\n};\n/**\n * PolicyApi - factory interface\n * @export\n */\nexports.PolicyApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Create a policy in a tenant\n         * @param {PolicyIn} policyIn Policy to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPolicies: function (policyIn, options) {\n            return exports.PolicyApiFp(configuration).createPolicies(policyIn, options)(axios, basePath);\n        },\n        /**\n         *\n         * @summary Delete a policy in the tenant\n         * @param {string} uuid ID of policy to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePolicy: function (uuid, options) {\n            return exports.PolicyApiFp(configuration).deletePolicy(uuid, options)(axios, basePath);\n        },\n        /**\n         *\n         * @summary Get a policy in the tenant\n         * @param {string} uuid ID of policy to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPolicy: function (uuid, options) {\n            return exports.PolicyApiFp(configuration).getPolicy(uuid, options)(axios, basePath);\n        },\n        /**\n         *\n         * @summary List the policies in the tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {string} [orderBy] Parameter for ordering resource by value.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPolicies: function (limit, offset, name, orderBy, options) {\n            return exports.PolicyApiFp(configuration).listPolicies(limit, offset, name, orderBy, options)(axios, basePath);\n        },\n        /**\n         *\n         * @summary Update a policy in the tenant\n         * @param {string} uuid ID of policy to update\n         * @param {PolicyIn} policyIn Policy to update\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePolicy: function (uuid, policyIn, options) {\n            return exports.PolicyApiFp(configuration).updatePolicy(uuid, policyIn, options)(axios, basePath);\n        },\n    };\n};\n/**\n * PolicyApi - object-oriented interface\n * @export\n * @class PolicyApi\n * @extends {BaseAPI}\n */\nvar PolicyApi = /** @class */ (function (_super) {\n    __extends(PolicyApi, _super);\n    function PolicyApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Create a policy in a tenant\n     * @param {PolicyIn} policyIn Policy to create\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.createPolicies = function (policyIn, options) {\n        return exports.PolicyApiFp(this.configuration).createPolicies(policyIn, options)(this.axios, this.basePath);\n    };\n    /**\n     *\n     * @summary Delete a policy in the tenant\n     * @param {string} uuid ID of policy to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.deletePolicy = function (uuid, options) {\n        return exports.PolicyApiFp(this.configuration).deletePolicy(uuid, options)(this.axios, this.basePath);\n    };\n    /**\n     *\n     * @summary Get a policy in the tenant\n     * @param {string} uuid ID of policy to get\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.getPolicy = function (uuid, options) {\n        return exports.PolicyApiFp(this.configuration).getPolicy(uuid, options)(this.axios, this.basePath);\n    };\n    /**\n     *\n     * @summary List the policies in the tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {string} [name] Parameter for filtering resource by name using string contains search.\n     * @param {string} [orderBy] Parameter for ordering resource by value.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.listPolicies = function (limit, offset, name, orderBy, options) {\n        return exports.PolicyApiFp(this.configuration).listPolicies(limit, offset, name, orderBy, options)(this.axios, this.basePath);\n    };\n    /**\n     *\n     * @summary Update a policy in the tenant\n     * @param {string} uuid ID of policy to update\n     * @param {PolicyIn} policyIn Policy to update\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.updatePolicy = function (uuid, policyIn, options) {\n        return exports.PolicyApiFp(this.configuration).updatePolicy(uuid, policyIn, options)(this.axios, this.basePath);\n    };\n    return PolicyApi;\n}(BaseAPI));\nexports.PolicyApi = PolicyApi;\n/**\n * PrincipalApi - axios parameter creator\n * @export\n */\nexports.PrincipalApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         *\n         * @summary List the principals for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [usernames] Usernames of principals to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPrincipals: function (limit, offset, usernames, options) {\n            if (options === void 0) { options = {}; }\n            var localVarPath = \"/principals/\";\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'GET' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            if (limit !== undefined) {\n                localVarQueryParameter['limit'] = limit;\n            }\n            if (offset !== undefined) {\n                localVarQueryParameter['offset'] = offset;\n            }\n            if (usernames !== undefined) {\n                localVarQueryParameter['usernames'] = usernames;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * PrincipalApi - functional programming interface\n * @export\n */\nexports.PrincipalApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary List the principals for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [usernames] Usernames of principals to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPrincipals: function (limit, offset, usernames, options) {\n            var localVarAxiosArgs = exports.PrincipalApiAxiosParamCreator(configuration).listPrincipals(limit, offset, usernames, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    };\n};\n/**\n * PrincipalApi - factory interface\n * @export\n */\nexports.PrincipalApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary List the principals for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [usernames] Usernames of principals to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPrincipals: function (limit, offset, usernames, options) {\n            return exports.PrincipalApiFp(configuration).listPrincipals(limit, offset, usernames, options)(axios, basePath);\n        },\n    };\n};\n/**\n * PrincipalApi - object-oriented interface\n * @export\n * @class PrincipalApi\n * @extends {BaseAPI}\n */\nvar PrincipalApi = /** @class */ (function (_super) {\n    __extends(PrincipalApi, _super);\n    function PrincipalApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary List the principals for a tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {string} [usernames] Usernames of principals to get\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PrincipalApi\n     */\n    PrincipalApi.prototype.listPrincipals = function (limit, offset, usernames, options) {\n        return exports.PrincipalApiFp(this.configuration).listPrincipals(limit, offset, usernames, options)(this.axios, this.basePath);\n    };\n    return PrincipalApi;\n}(BaseAPI));\nexports.PrincipalApi = PrincipalApi;\n/**\n * RoleApi - axios parameter creator\n * @export\n */\nexports.RoleApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Create a roles for a tenant\n         * @param {RoleIn} roleIn Role to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoles: function (roleIn, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'roleIn' is not null or undefined\n            if (roleIn === null || roleIn === undefined) {\n                throw new RequiredError('roleIn', 'Required parameter roleIn was null or undefined when calling createRoles.');\n            }\n            var localVarPath = \"/roles/\";\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'POST' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            var needsSerialization = (\"RoleIn\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data = needsSerialization ? JSON.stringify(roleIn || {}) : (roleIn || \"\");\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Delete a role in the tenant\n         * @param {string} uuid ID of role to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRole: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'uuid' is not null or undefined\n            if (uuid === null || uuid === undefined) {\n                throw new RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deleteRole.');\n            }\n            var localVarPath = \"/roles/{uuid}/\"\n                .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'DELETE' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Get a role in the tenant\n         * @param {string} uuid ID of role to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRole: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'uuid' is not null or undefined\n            if (uuid === null || uuid === undefined) {\n                throw new RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getRole.');\n            }\n            var localVarPath = \"/roles/{uuid}/\"\n                .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'GET' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary List the roles for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {string} [orderBy] Parameter for ordering resource by value.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRoles: function (limit, offset, name, orderBy, options) {\n            if (options === void 0) { options = {}; }\n            var localVarPath = \"/roles/\";\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'GET' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            if (limit !== undefined) {\n                localVarQueryParameter['limit'] = limit;\n            }\n            if (offset !== undefined) {\n                localVarQueryParameter['offset'] = offset;\n            }\n            if (name !== undefined) {\n                localVarQueryParameter['name'] = name;\n            }\n            if (orderBy !== undefined) {\n                localVarQueryParameter['order_by'] = orderBy;\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Update a Role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RoleWithAccess} roleWithAccess Update to a Role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRole: function (uuid, roleWithAccess, options) {\n            if (options === void 0) { options = {}; }\n            // verify required parameter 'uuid' is not null or undefined\n            if (uuid === null || uuid === undefined) {\n                throw new RequiredError('uuid', 'Required parameter uuid was null or undefined when calling updateRole.');\n            }\n            // verify required parameter 'roleWithAccess' is not null or undefined\n            if (roleWithAccess === null || roleWithAccess === undefined) {\n                throw new RequiredError('roleWithAccess', 'Required parameter roleWithAccess was null or undefined when calling updateRole.');\n            }\n            var localVarPath = \"/roles/{uuid}/\"\n                .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'PUT' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            var needsSerialization = (\"RoleWithAccess\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data = needsSerialization ? JSON.stringify(roleWithAccess || {}) : (roleWithAccess || \"\");\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * RoleApi - functional programming interface\n * @export\n */\nexports.RoleApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Create a roles for a tenant\n         * @param {RoleIn} roleIn Role to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoles: function (roleIn, options) {\n            var localVarAxiosArgs = exports.RoleApiAxiosParamCreator(configuration).createRoles(roleIn, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         *\n         * @summary Delete a role in the tenant\n         * @param {string} uuid ID of role to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRole: function (uuid, options) {\n            var localVarAxiosArgs = exports.RoleApiAxiosParamCreator(configuration).deleteRole(uuid, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         *\n         * @summary Get a role in the tenant\n         * @param {string} uuid ID of role to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRole: function (uuid, options) {\n            var localVarAxiosArgs = exports.RoleApiAxiosParamCreator(configuration).getRole(uuid, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         *\n         * @summary List the roles for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {string} [orderBy] Parameter for ordering resource by value.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRoles: function (limit, offset, name, orderBy, options) {\n            var localVarAxiosArgs = exports.RoleApiAxiosParamCreator(configuration).listRoles(limit, offset, name, orderBy, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         *\n         * @summary Update a Role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RoleWithAccess} roleWithAccess Update to a Role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRole: function (uuid, roleWithAccess, options) {\n            var localVarAxiosArgs = exports.RoleApiAxiosParamCreator(configuration).updateRole(uuid, roleWithAccess, options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    };\n};\n/**\n * RoleApi - factory interface\n * @export\n */\nexports.RoleApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Create a roles for a tenant\n         * @param {RoleIn} roleIn Role to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoles: function (roleIn, options) {\n            return exports.RoleApiFp(configuration).createRoles(roleIn, options)(axios, basePath);\n        },\n        /**\n         *\n         * @summary Delete a role in the tenant\n         * @param {string} uuid ID of role to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRole: function (uuid, options) {\n            return exports.RoleApiFp(configuration).deleteRole(uuid, options)(axios, basePath);\n        },\n        /**\n         *\n         * @summary Get a role in the tenant\n         * @param {string} uuid ID of role to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRole: function (uuid, options) {\n            return exports.RoleApiFp(configuration).getRole(uuid, options)(axios, basePath);\n        },\n        /**\n         *\n         * @summary List the roles for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {string} [orderBy] Parameter for ordering resource by value.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRoles: function (limit, offset, name, orderBy, options) {\n            return exports.RoleApiFp(configuration).listRoles(limit, offset, name, orderBy, options)(axios, basePath);\n        },\n        /**\n         *\n         * @summary Update a Role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RoleWithAccess} roleWithAccess Update to a Role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRole: function (uuid, roleWithAccess, options) {\n            return exports.RoleApiFp(configuration).updateRole(uuid, roleWithAccess, options)(axios, basePath);\n        },\n    };\n};\n/**\n * RoleApi - object-oriented interface\n * @export\n * @class RoleApi\n * @extends {BaseAPI}\n */\nvar RoleApi = /** @class */ (function (_super) {\n    __extends(RoleApi, _super);\n    function RoleApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Create a roles for a tenant\n     * @param {RoleIn} roleIn Role to create\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.createRoles = function (roleIn, options) {\n        return exports.RoleApiFp(this.configuration).createRoles(roleIn, options)(this.axios, this.basePath);\n    };\n    /**\n     *\n     * @summary Delete a role in the tenant\n     * @param {string} uuid ID of role to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.deleteRole = function (uuid, options) {\n        return exports.RoleApiFp(this.configuration).deleteRole(uuid, options)(this.axios, this.basePath);\n    };\n    /**\n     *\n     * @summary Get a role in the tenant\n     * @param {string} uuid ID of role to get\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.getRole = function (uuid, options) {\n        return exports.RoleApiFp(this.configuration).getRole(uuid, options)(this.axios, this.basePath);\n    };\n    /**\n     *\n     * @summary List the roles for a tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {string} [name] Parameter for filtering resource by name using string contains search.\n     * @param {string} [orderBy] Parameter for ordering resource by value.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.listRoles = function (limit, offset, name, orderBy, options) {\n        return exports.RoleApiFp(this.configuration).listRoles(limit, offset, name, orderBy, options)(this.axios, this.basePath);\n    };\n    /**\n     *\n     * @summary Update a Role in the tenant\n     * @param {string} uuid ID of role to update\n     * @param {RoleWithAccess} roleWithAccess Update to a Role\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.updateRole = function (uuid, roleWithAccess, options) {\n        return exports.RoleApiFp(this.configuration).updateRole(uuid, roleWithAccess, options)(this.axios, this.basePath);\n    };\n    return RoleApi;\n}(BaseAPI));\nexports.RoleApi = RoleApi;\n/**\n * StatusApi - axios parameter creator\n * @export\n */\nexports.StatusApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Obtain server status\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getStatus: function (options) {\n            if (options === void 0) { options = {}; }\n            var localVarPath = \"/status/\";\n            var localVarUrlObj = url.parse(localVarPath, true);\n            var baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            var localVarRequestOptions = Object.assign({ method: 'GET' }, baseOptions, options);\n            var localVarHeaderParameter = {};\n            var localVarQueryParameter = {};\n            // authentication basic_auth required\n            // http basic authentication required\n            if (configuration && (configuration.username || configuration.password)) {\n                localVarHeaderParameter[\"Authorization\"] = \"Basic \" + btoa(configuration.username + \":\" + configuration.password);\n            }\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    };\n};\n/**\n * StatusApi - functional programming interface\n * @export\n */\nexports.StatusApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Obtain server status\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getStatus: function (options) {\n            var localVarAxiosArgs = exports.StatusApiAxiosParamCreator(configuration).getStatus(options);\n            return function (axios, basePath) {\n                if (axios === void 0) { axios = axios_1.default; }\n                if (basePath === void 0) { basePath = BASE_PATH; }\n                var axiosRequestArgs = Object.assign(localVarAxiosArgs.options, { url: basePath + localVarAxiosArgs.url });\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    };\n};\n/**\n * StatusApi - factory interface\n * @export\n */\nexports.StatusApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Obtain server status\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getStatus: function (options) {\n            return exports.StatusApiFp(configuration).getStatus(options)(axios, basePath);\n        },\n    };\n};\n/**\n * StatusApi - object-oriented interface\n * @export\n * @class StatusApi\n * @extends {BaseAPI}\n */\nvar StatusApi = /** @class */ (function (_super) {\n    __extends(StatusApi, _super);\n    function StatusApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Obtain server status\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof StatusApi\n     */\n    StatusApi.prototype.getStatus = function (options) {\n        return exports.StatusApiFp(this.configuration).getStatus(options)(this.axios, this.basePath);\n    };\n    return StatusApi;\n}(BaseAPI));\nexports.StatusApi = StatusApi;\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","\"use strict\";\n// tslint:disable\n/**\n * Role Based Access Control\n * The API for Role Based Access Control.\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Configuration = /** @class */ (function () {\n    function Configuration(param) {\n        if (param === void 0) { param = {}; }\n        this.apiKey = param.apiKey;\n        this.username = param.username;\n        this.password = param.password;\n        this.accessToken = param.accessToken;\n        this.basePath = param.basePath;\n    }\n    return Configuration;\n}());\nexports.Configuration = Configuration;\n"],"sourceRoot":""}