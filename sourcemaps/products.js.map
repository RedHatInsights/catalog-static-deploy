{"version":3,"sources":["webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/toolbar/toolbar-mapper.js","webpack:///./src/utilities/async-form-validator.js","webpack:///./src/utilities/use-enhanced-history.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/styled-components/toolbars.js","webpack:///./src/redux/actions/portfolio-actions.js","webpack:///./src/presentational-components/shared/conditional-link.js","webpack:///./src/helpers/platform/platform-helper.js","webpack:///./src/redux/actions/platform-actions.js","webpack:///./src/smart-components/common/catalog-breadcrumbs.js","webpack:///./src/helpers/portfolio/portfolio-helper.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/presentational-components/shared/app-tabs.js","webpack:///./src/toolbar/toolbar-renderer.js","webpack:///./src/presentational-components/styled-components/lazy-load-image.js","webpack:///./src/presentational-components/shared/card-icon.js","webpack:///./src/presentational-components/styled-components/ellipsis-text-container.js","webpack:///./src/presentational-components/shared/content-gallery-empty-state.js","webpack:///./src/presentational-components/styled-components/styled-gallery.js","webpack:///./src/smart-components/content-gallery/content-gallery.js","webpack:///./src/assets/images/card-icon-default.svg","webpack:///./src/presentational-components/shared/card-common.js","webpack:///./src/presentational-components/styled-components/card.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/routing/use-initial-uri-hash.js","webpack:///./src/presentational-components/shared/card-checkbox.js","webpack:///./src/presentational-components/shared/service-offering-body.js","webpack:///./src/toolbar/helpers.js","webpack:///./src/smart-components/portfolio/portfolio-item.js","webpack:///./src/toolbar/schemas/products-toolbar.schema.js","webpack:///./src/smart-components/products/products.js"],"names":["FilterInputGroup","styled","div","FilterInput","TextInput","FilterIconsContainer","span","StyledCloseIcon","CloseIcon","StyledSearchIcon","SearchIcon","FilterToolbarItem","searchValue","onFilterChange","placeholder","isClearable","rest","ToolbarItem","id","value","type","onChange","aria-label","width","height","onClick","propTypes","PropTypes","func","isRequired","string","bool","defaultProps","ToolbarButton","title","props","Button","toolbarMapper","TopToolbar","TopToolbarTitle","Toolbar","className","ToolbarGroup","Link","CatalogLink","Level","LevelItem","AppTabs","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","TOOLBAR","TOOLBAR_ITEM","TOOLBAR_GROUP","FILTER_TOOLBAR_ITEM","LINK","BUTTON","LEVEL","LEVEL_ITEM","TABS","asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","useEnhancedHistory","removeSearch","history","useHistory","push","target","split","search","undefined","removeSearchQuery","AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","isCompact","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","getNewPage","request","debouncePromise","direction","shape","any","StyledToolbar","TopToolbarWrapper","TopToolbarTitleContainer","doFetchPortfolios","defaultSettings","filter","ActionTypes","payload","PortfolioHelper","fetchPortfolios","dispatch","fetchPortfoliosWithState","storeState","stateKey","fetchPortfolioItems","fetchPortfolioItemsWithPortfolio","portfolioId","fetchSelectedPortfolio","addPortfolio","portfolioData","items","isDisabled","isTemporary","Date","now","toString","created_at","then","error","notifications","fulfilled","variant","description","name","addToPortfolio","updatePortfolio","getState","ADD_NOTIFICATION","dismissable","removePortfolio","restore_key","href","event","preventDefault","restoreKey","CLEAR_NOTIFICATIONS","portfolio","portfolioReducer","portfolios","undoRemovePortfolio","data","length","removeProductsFromPortfolio","portfolioItems","portfolioName","selectedPortfolio","defaultMessage","values","undo","restoreData","err","undoRemoveProductsFromPortfolio","copyPortfolio","copyPortfolioItem","portfolioItemId","copyObject","newPortfolio","resetSelectedPortfolio","updatePortfolioItem","item","getPortfolioItemDetail","params","portfolioItem","source","ConditionalLink","children","pathname","oneOfType","node","arrayOf","axiosInstance","getAxiosInstance","graphqlInstance","getGraphqlInstance","getPlatforms","post","SOURCES_API_BASE","query","application_types","sources","getPlatform","platformId","get","getPlatformItems","filterQuery","TOPOLOGICAL_INVENTORY_API_BASE","getPlatformInventories","getServiceOffering","serviceOfferingId","sourceId","Promise","all","source_type_id","icon_url","service","fetchPlatforms","PlatformHelper","fetchPlatformItems","fetchSelectedPlatform","fetchPlatformInventories","fetchServiceOffering","CatalogBreadcrumbs","fragments","useSelector","breadcrumbsReducer","map","index","searchParams","nav","exact","key","isActive","portfolioApi","getPortfolioApi","portfolioItemApi","getPortfolioItemApi","listPortfolios","CATALOG_API_BASE","listPortfolioItems","portfolioReference","reduce","acc","curr","portfolio_id","Object","keys","join","forEach","portfolioItemIndex","getPortfolio","showPortfolio","getPortfolioItemsWithPortfolio","a","createPortfolio","createPortfolioItem","service_offering_ref","store","sanitizeValues","destroyPortfolio","removePortfolioItem","destroyPortfolioItem","removePortfolioItems","portfolioItemIds","itemId","fetchPortfolioByName","restorePortfolioItems","unDeletePortfolioItem","postCopyPortfolio","postCopyPortfolioItem","uploadPortfolioItemIcon","file","iconId","FormData","append","patch","headers","accept","_boundary","status","object","notFound","getPortfolioFromState","find","undeletePortfolio","paddingBottom","breadcrumbs","breadcrumbsSpacing","noData","clsx","component","TextVariants","h2","p","tabItems","useLocation","activeTab","includes","activeKey","eventKey","onSelect","tabIndex","array","ToolbarContext","createContext","Component","Consumer","componentMapper","C","element","render","fields","hidden","field","ToolbarRenderer","schema","Provider","StyledLazyLoadImage","LazyLoadImage","CardIconContainer","CardIcon","src","useState","isLoaded","setLoaded","isUnknown","setUnknown","platformIconMapping","platformReducer","defaultIcon","CardIconDefault","threshold","delayTime","onError","onLoad","style","EllipsisTextContainer","ContentGalleryEmptyState","Icon","PrimaryAction","renderDescription","icon","h1","EmptyStatePrimaryAction","url","label","hasPermission","preserveSearch","od","StyledCard","Card","StyledGalleryItem","NoItems","ContentGallery","isLoading","renderEmptyState","gutter","module","exports","CardPropText","ItemDetails","toDisplay","prop","StyledCardBody","CardBody","BottomPaginationContainer","useInitialUriHash","decodeState","window","location","hash","substring","CardCheckbox","handleCheck","isChecked","stopPropagation","ServiceOfferingCardBody","distributor","display_name","h3","small","long_description","createSingleItemGroup","groupName","createLinkButton","PortfolioItem","removeInProgress","isSelected","service_offering_source_ref","isSelectable","orderUrl","metadata","user_capabilities","destroy","createPortfolioToolbarSchema","fetchProducts","filterProps","debouncedFilter","asyncFormValidator","filteringCallback","initialState","filterValue","isOpen","isFetching","isFiltering","productsState","state","action","Products","viewState","release","useContext","AppContext","useReducer","products","stateDispatch","useDispatch","useEffect","scrollToTop","insights","chrome","appNavClick","secondaryNav","handleFilterItems","galleryItems","PORTFOLIO_ITEM_ROUTE","emptyStateProps","WrenchIcon","createProductsToolbarSchema","dropDirection","_e"],"mappings":"s5BAMA,IAAMA,EAAmBC,IAAOC,IAAV,KAMhBC,EAAcF,YAAOG,YAAPH,CAAH,KAMXI,EAAuBJ,IAAOK,KAAV,KAMpBC,EAAkBN,YAAOO,IAAPP,CAAH,KASfQ,EAAmBR,YAAOS,IAAPT,CAAH,KAKhBU,EAAoB,SAAC,GAAD,IACxBC,EADwB,EACxBA,YACAC,EAFwB,EAExBA,eACAC,EAHwB,EAGxBA,YACAC,EAJwB,EAIxBA,YACGC,EALqB,2EAOxB,kBAACC,EAAA,YAAD,KACE,kBAACjB,EAAD,KACE,kBAACG,EAAD,KACEe,GAAG,iBACHJ,YAAaA,EACbK,MAAOP,EACPQ,KAAK,OACLC,SAAUR,EACVS,aAAYR,GACRE,IAEN,kBAACX,EAAD,KACIU,GAAeH,GACf,kBAACL,EAAD,CACEgB,MAAM,KACNC,OAAO,KACPC,QAAS,kBAAMZ,EAAe,QAE5B,kBAACJ,EAAD,WAMdE,EAAkBe,UAAY,CAC5Bb,eAAgBc,IAAUC,KAAKC,WAC/Bf,YAAaa,IAAUG,OACvBlB,YAAae,IAAUG,OACvBf,YAAaY,IAAUI,MAGzBpB,EAAkBqB,aAAe,CAC/BpB,YAAa,GACbG,aAAa,GAGAJ,Q,qEC/Df,IAAMsB,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAUC,EAAb,wBACpB,kBAACC,EAAA,OAAWD,EAAQD,KAGtBD,EAAcP,UAAY,CACxBQ,MAAOP,IAAUG,OAAOD,YAG1B,IAIMQ,EAAgB,CACpBC,eACAC,oBACAC,QAPiB,SAAC,GAAD,IAAML,EAAN,iBACjB,kBAAC,IAAD,KAAeM,UAAU,cAAiBN,MAO1CO,4BACAzB,0BACAN,oBACAgC,KAAMC,IACNC,cACAC,sBACAV,OAAQH,EACRc,aAGWC,EAAwB,CACnCC,YAAa,aACbC,kBAAmB,kBACnBC,QAAS,UACTC,aAAc,cACdC,cAAe,eACfC,oBAAqB,oBACrBC,KAAM,OACNC,OAAQ,SACRC,MAAO,QACPC,WAAY,YACZC,KAAM,WAGOtB,O,iCC1Df,aAEe,aACbuB,GADa,IAEbC,EAFa,uDAEE,IACfC,EAHa,uDAGH,CAAEC,kBAAkB,GAHjB,OAIVC,YAAuBJ,EAAeC,EAAcC,K,gpBC6B1CG,IAdY,SAACC,GAC1B,IAAMC,EAAUC,cAChB,YACKD,EADL,CAEEE,KAAM,SAACC,GACL,OAAIJ,EACKC,EAAQE,KAzBG,SAACC,GACzB,MAAsB,iBAAXA,EACFA,EAAOC,MAAM,KAAK,GAGL,WAAlB,IAAOD,GACT,KACKA,EADL,CAEEE,YAAQC,IAILH,EAamBI,CAAkBJ,IAGjCH,EAAQE,KAAKC,Q,iICtBpBK,EAAkB,SAAC,GAOnB,QANJC,KAAQC,EAMJ,EANIA,MAAOC,EAMX,EANWA,MAAOC,EAMlB,EANkBA,OACtBC,EAKI,EALJA,SACAC,EAII,EAJJA,WACAxC,EAGI,EAHJA,UACAyC,EAEI,EAFJA,UACG/C,EACC,gEAqBJ,OACE,yBAAKM,UAAWA,GACd,kBAAC,aAAD,KACE0C,QAASN,GAAS,GAClBO,UAAWN,GAAS,EACpBO,gBAzBwB,SAACC,EAAQT,GAAT,OAC5BI,EAAWD,EAAU,CACnBD,SACAF,WAuBEU,KAAMC,YAAeX,EAAOE,GAC5BU,UArBgB,SAACH,EAAQI,EAAQC,GACrC,IAAM7B,EAAU,CACdiB,OAAQa,YAAWF,EAAQb,GAC3BA,SAGIgB,EAAU,kBAAMZ,EAAWD,EAAUlB,IAC3C,OAAI6B,EACKG,YAAgBD,EAAS,IAAzBC,GAGFD,KAWHE,UAAU,OACVb,UAAWA,GACP/C,MAMZwC,EAAgBjD,UAAY,CAC1BkD,KAAMjD,IAAUqE,MAAM,CACpBlB,MAAOnD,IAAU+D,OACjBb,MAAOlD,IAAU+D,OAAO7D,WACxBkD,OAAQpD,IAAU+D,OAAO7D,aAE3BoD,WAAYtD,IAAUC,KAAKC,WAC3BmD,SAAUrD,IAAUsE,IACpBxD,UAAWd,IAAUG,OACrBoD,UAAWvD,IAAUI,MAGvB4C,EAAgB3C,aAAe,CAC7B4C,KAAM,CACJE,MAAO,EACPD,MAAO,GACPE,OAAQ,GAEVtC,UAAW,GACXyC,WAAW,GAGEP,O,u5BCvER,IAAMuB,EAAgBjG,YAAOuC,UAAPvC,CAAH,KASbkG,EAAoBlG,IAAOC,IAAV,KAoBjBkG,EAA2BnG,YAAO4C,QAAP5C,CAAH,M,+sCCrB9B,IAAMoG,EAAoB,wEAG7BC,IAFFC,EAD+B,EAC/BA,OACGzC,EAF4B,wBAGR,CACvB1C,KAAMoF,IACN5B,KAAM,EAAF,CAAI2B,UAAWzC,GACnB2C,QAASC,IAA+BH,EAAQzC,KAGrC6C,EAAkB,SAAC7C,GAAD,OAAa,SAAC8C,GAAD,OAC1CA,EAASP,EAAkBvC,MAEhB+C,EAA2B,eAAC/C,EAAD,uDAAWwC,IAAX,OAA+B,SACrEM,GADqE,OAGrEA,EACEP,EAAkB,EAAD,GAAMvC,EAAN,CAAegD,YAAY,EAAMC,SAAU,kBAGnDC,EAAsB,eACjCT,EADiC,uDACxB,GACTzC,EAFiC,uDAEvBwC,IAFuB,MAG7B,CACJlF,KAAMoF,IACN5B,KAAM,CAAE2B,SAAQO,YAAY,EAAMC,SAAU,YAC5CN,QAASC,IACP5C,EAAQe,MACRf,EAAQiB,OACRwB,KAISU,EAAmC,SAC9CC,GAD8C,IAE9CpD,EAF8C,uDAEpCwC,IAFoC,MAG1C,CACJlF,KAAMoF,IACNC,QAASC,IAA+CQ,EAAapD,GACrEc,KAAM,EAAF,GACCd,EADD,CAEFgD,YAAY,EACZC,SAAU,qBAIDI,EAAyB,SAACjG,GAAD,MAAS,CAC7CE,KAAMoF,IACNC,QAASC,IAA6BxF,KAU3BkG,EAAe,SAACC,EAAeC,GAAhB,OAA0B,SAACV,GAWrD,OAVAA,EAAS,CACPxF,KAAMoF,IACNC,QAAS,EAAF,GACFY,EADE,CAELE,YAAY,EACZC,aAAa,EACbtG,GAAIuG,KAAKC,MAAMC,WACfC,YAAY,IAAIH,MAAOE,eAGpBf,EAAS,CACdxF,KAAMoF,IACNC,QAASC,IAAA,KAEFW,GAELC,GAECO,MAAK,kBAAMjB,EAASP,QANd,OAOA,SAACyB,GAEN,MADAlB,EAAS,CAAExF,KAAMoF,MACXsB,KAEVlD,KAAM,CACJmD,cAAe,CACbC,UAAW,CACTC,QAAS,UACT/F,MAAO,2BACPgG,YAAa,aAAF,OAAeb,EAAcc,KAA7B,mCAORC,EAAiB,SAAClB,EAAaI,GAAd,MAAyB,CACrDlG,KAAMoF,IACNC,QAASC,IAA+BQ,EAAaI,GACrD1C,KAAM,CACJmD,cAAe,CACbC,UAAW,CACTC,QAAS,UACT/F,MAAO,0BACPgG,YAAa,sDAMRG,EAAkB,SAAChB,GAAD,OAAmB,SAACT,EAAU0B,GAM3D,OALA1B,EAAS,CACPxF,KAAMoF,IACNC,QAASY,IAGJX,IAAgCW,EAAe,CAAEiB,aACrDT,MAAK,kBAAMjB,EAASP,QACpBwB,MAAK,kBACJjB,EAAS,CACPxF,KAAMmH,mBACN9B,QAAS,CACP+B,aAAa,EACbP,QAAS,UACT/F,MAAO,6BACPgG,YAAa,gDATd,OAaE,SAACJ,GAEN,MADAlB,EAAS,CAAExF,KAAMoF,MACXsB,KAfH,OAiBE,SAACA,GAAD,OACLlB,EAAS,CACPxF,KAAM,GAAF,OAAKoF,IAAL,aACJC,QAASqB,SA2BJW,EAAkB,SAACvB,GAAD,OAAiB,SAACN,EAAU0B,GAKzD,OAJA1B,EAAS,CACPxF,KAAMoF,IACNC,QAASS,IAEJN,EAAS,CACdxF,KAAMoF,IACNC,QAASC,IAAgCQ,GACtCW,MAAK,YAAqB,IAAlBa,EAAkB,EAAlBA,YACP9B,EAAS,CACPxF,KAAMmH,mBACN9B,QAAS,CACPwB,QAAS,UACT/F,MAAO,6BACPsG,aAAa,EACbN,YACE,kBAAC,WAAD,wDAEE,uBACES,KAAK,IACLzH,GAAE,gCAA2BgG,GAC7BzF,QAAS,SAACmH,GACRA,EAAMC,iBACNjC,EA7Ce,SAACM,EAAa4B,GAAd,OAA6B,SAC9DlC,EACA0B,GAGA,OADA1B,EAAS,CAAExF,KAAM2H,wBACVrC,IAAkCQ,EAAa4B,GAAYjB,MAChE,SAACmB,GASC,OARApC,EAAS,CACPxF,KAAMmH,mBACN9B,QAAS,CACPwB,QAAS,UACTO,aAAa,EACbtG,MAAO,aAAF,OAAe8G,EAAUb,KAAzB,yBAGFvB,EACLD,EAAgB2B,IAAWW,iBAAiBC,WAAWtE,WA6BlCuE,CAAoBjC,EAAawB,MAL9C,QAFF,0CARmB,MAyBFJ,IAAWW,iBAAiBC,WAA3CtE,EAzBiB,EAyBjBA,KAAMwE,EAzBW,EAyBXA,KACd,OAAOxC,EACLD,EAAgB,EAAD,GACV/B,EADU,CAEbG,OAAwB,IAAhBqE,EAAKC,OAAe,EAAIzE,EAAKG,cA9BpC,OAkCA,SAAC+C,GAEN,MADAlB,EAAS,CAAExF,KAAMoF,MACXsB,SAsCDwB,EAA8B,SAACC,EAAgBC,GAAjB,OAAmC,SAC5E5C,EACA0B,GAEA1B,EAAS,CACPxF,KAAM,GAAF,OAAKoF,IAAL,cAFH,MASC8B,IAJFW,iBACoBrE,EANnB,EAMC2E,eAAkB3E,KACOsC,EAP1B,EAOCuC,kBAAqBvI,GAGzB,OAAOwF,IAAqC6C,GACzC1B,MAAK,SAACuB,GAAD,OACJxC,EACEK,EAAiCC,EAAa,CAC5CnC,OAAQ,EACRF,MAAOD,EAAKC,MACZ0B,OAAQ,MAEVsB,MAAK,kBAAMuB,QAEdvB,MAAK,SAACuB,GACL,OAAOxC,EAAS,CACdxF,KAAMmH,mBACN9B,QAAS,CACPwB,QAAS,UACT/F,MAAO,mBACPsG,aAAa,EACbN,YACE,kBAAC,IAAD,CACEhH,GAAG,mCACHwI,eAAc,2LAIdC,OAAQ,CACN7E,MAAOyE,EAAeF,OACtBG,gBACAI,KACE,uBACEjB,KAAK,IACLzH,GAAE,iCAA4BgG,GAC9BzF,QAAS,SAACmH,GACRA,EAAMC,iBACNjC,EA1EyB,SAACiD,EAAa3C,GAAd,OAA8B,SAC3EN,GAGA,OADAA,EAAS,CAAExF,KAAM,GAAF,OAAKoF,IAAL,cACRE,IAAsCmD,GAC1ChC,MAAK,kBACJjB,EAAS,CAAExF,KAAM,GAAF,OAAKoF,IAAL,mBAEhBqB,MAAK,kBAAMjB,EAAS,CAAExF,KAAM2H,2BAC5BlB,MAAK,kBAAMjB,EAASK,EAAiCC,OACrDW,MAAK,kBACJjB,EAAS,CACPxF,KAAMmH,mBACN9B,QAAS,CACPwB,QAAS,UACTO,aAAa,EACbtG,MAAO,oCAZR,OAgBE,SAAC4H,GAAD,OACLlD,EAAS,CACPxF,KAAM,GAAF,OAAKoF,IAAL,aACJC,QAASqD,QAoDOC,CAAgCX,EAAMlC,MAN5C,iBAmBbW,MAAK,kBACJjB,EAAS,CAAExF,KAAM,GAAF,OAAKoF,IAAL,mBAhDZ,OAkDE,SAACsD,GAAD,OACLlD,EAAS,CACPxF,KAAM,GAAF,OAAKoF,IAAL,aACJC,QAASqD,SAKJE,EAAgB,SAAC9I,GAAD,OAAQ,SAAC0F,GAEpC,OADAA,EAAS,CAAExF,KAAM,2BACVsF,IAA8BxF,GAClC2G,MAAK,SAACmB,GAWL,OAVApC,EAAS,CAAExF,KAAM,6BACjBwF,EAAS,CACPxF,KAAMmH,mBACN9B,QAAS,CACPwB,QAAS,UACT/F,MAAO,2CACPgG,YAAa,GAAF,OAAKc,EAAUb,KAAf,qBACXK,aAAa,KAGVQ,KAZJ,OAcE,SAACc,GAAD,OACLlD,EAAS,CAAExF,KAAM,0BAA2BqF,QAASqD,SAI9CG,EAAoB,SAC/BC,EACAC,EACAC,GAH+B,OAI5B,SAACxD,GACJ,OAAOF,IAAkCwD,EAAiBC,GACvDtC,MAAK,SAACuB,GAUL,OATAxC,EAAS,CACPxF,KAAMmH,mBACN9B,QAAS,CACPwB,QAAS,UACT/F,MAAO,yCACPgG,YAAa,GAAF,OAAKkB,EAAKjB,KAAV,iCAAuCiC,EAAajC,MAC/DK,aAAa,KAGVY,KAXJ,OAaE,SAACU,GAAD,OACLlD,EAAS,CAAExF,KAAM,+BAAgCqF,QAASqD,SAInDO,EAAyB,iBAAO,CAC3CjJ,KAAMoF,MAGK8D,EAAsB,SAACX,GAAD,OAAY,SAAC/C,EAAU0B,GAKxD,OAJA1B,EAAS,CACPxF,KAAMoF,IACNC,QAASkD,IAEJjD,IAAoCiD,EAAQ,CAAErB,aAClDT,MAAK,WAEJ,OADAjB,EAAS,CAAExF,KAAMoF,IAAmCC,QAASkD,IACtDA,KAER9B,MAAK,SAAC0C,GAAD,OACJ3D,EAAS,CACPxF,KAAMmH,mBACN9B,QAAS,CACPwB,QAAS,UACT/F,MAAO,YAAF,OAAcqI,EAAKpC,KAAnB,8BACLK,aAAa,QAXd,OAeE,SAACV,GAEN,MADAlB,EAAS,CAAExF,KAAMoF,MACXsB,KAjBH,OAmBE,SAACA,GAAD,OACLlB,EAAS,CACPxF,KAAM,GAAF,OAAKoF,IAAL,aACJC,QAASqB,SAKJ0C,EAAyB,SAACC,GAAD,OAAY,SAAC7D,GAEjD,OADAA,EAAS,CAAExF,KAAM,GAAF,OAAKoF,IAAL,cACRE,IAAuC+D,GAAQ5C,MACpD,2BAAE6C,EAAF,KAAiBC,EAAjB,YACE/D,EAAS,CACPxF,KAAM,GAAF,OAAKoF,IAAL,cACJC,QAAS,CACPiE,gBACAC,kB,+GCvZJC,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAa3I,EAA1B,sCACtB2I,EACE,kBAAC,IAAD,KAAaA,SAAUA,GAAc3I,GAClC0I,GAGHA,GAGJD,EAAgBlJ,UAAY,CAC1BoJ,SAAUnJ,IAAUG,OACpB+I,SAAUlJ,IAAUoJ,UAAU,CAC5BpJ,IAAUqJ,KACVrJ,IAAUsJ,QAAQtJ,IAAUqJ,QAC3BnJ,YAGU+I,O,ukBCff,IAAMM,EAAgBC,cAChBC,EAAkBC,cAeXC,EAAe,WAC1B,OAAOF,EACJG,KADI,UACIC,IADJ,YACgC,CAAEC,MAftB,kLAgBhB5D,MAAK,qBAAGuB,KAAQsC,qBAChB7D,MAAK,+BAAI8D,YAGDC,EAAc,SAACC,GAC1B,OAAOX,EAAcY,IAAd,UAAqBN,IAArB,oBAAiDK,KAG7CE,EAAmB,SAACF,EAAYtF,EAAQzC,GACnD,IAAMkI,EAAczF,EAAS,6BAAH,OAAgCA,GAAW,GACrE,OAAIsF,EACKX,EAAcY,IAAd,UACFG,IADE,oBACwCJ,EADxC,sDACgGG,GADhG,OAEHlI,EAAU,UAAH,OAAaA,EAAQe,MAArB,mBAAqCf,EAAQiB,QAAW,KAI5DmG,EAAcY,IAAd,UACFG,IADE,wBAMEC,EAAyB,SACpCL,GAGG,IAFHtF,EAEG,uDAFM,GACTzC,EACG,uDADOwC,IAEV,OAAIuF,EACKX,EAAcY,IAAd,UACFG,IADE,oBACwCJ,EADxC,yDACmGtF,GADnG,OAEHzC,EAAU,UAAH,OAAaA,EAAQe,MAArB,mBAAqCf,EAAQiB,QAAW,KAI5DmG,EAAcY,IAAd,UACFG,IADE,sCAC0DnI,EAAQe,MADlE,mBACkFf,EAAQiB,UAKxFoH,EAAqB,SAACC,EAAmBC,GAApB,OAChCC,QAAQC,IAAI,CACVrB,EAAcY,IAAd,UACKG,IADL,8BACyDG,IAEzDlB,EACGY,IADH,UACUN,IADV,oBACsCa,IACnCxE,MAAK,SAAC8C,GACL,OAAOO,EACJY,IADI,UACGN,IADH,yBACoCb,EAAO6B,iBAC/C3E,MAAK,gBAAG4E,EAAH,EAAGA,SAAH,O,iWAAA,IACD9B,EADC,CAEJ8B,qBAGP5E,MAAK,iCAAwB,CAC9B6E,QADM,KAEN/B,OAFM,U,2uBC9EH,IAAMgC,EAAiB,kBAAM,SAAC/F,GAEnC,OADAA,EAAS,CAAExF,KAAM,GAAF,OAAKoF,IAAL,cACRoG,IACJ/E,MAAK,SAACuB,GAAD,OACJxC,EAAS,CACPxF,KAAM,GAAF,OAAKoF,IAAL,cACJC,QAAS2C,OAJR,OAOE,SAACtB,GAAD,OACLlB,EAAS,CACPxF,KAAM,GAAF,OAAKoF,IAAL,aACJC,QAASqB,SAKJ+E,EAAqB,SAAChB,EAAYtF,EAAQzC,GAArB,MAAkC,CAClE1C,KAAMoF,IACNC,QAASmG,EAAgCf,EAAYtF,EAAQzC,GAC7Dc,KAAM,GACJiH,aACAtF,UACGzC,KAwBMgJ,EAAwB,SAAC5L,GAAD,MAAS,CAC5CE,KAAMoF,IACNC,QAASmG,EAA2B1L,KAUzB6L,EAA2B,SAAClB,EAAYtF,EAAQzC,GAArB,MAAkC,CACxE1C,KAAMoF,IACNC,QAASmG,EAAsCf,EAAYtF,EAAQzC,KAGxDkJ,EAAuB,iBAAc,CAChD5L,KAAMoF,IACNC,QAASmG,EAAA,MAAAA,EAAc,c,iCCrEzB,uDAiCeK,IA5BY,WACzB,IAAMC,EAAYC,uBAChB,qBAAGC,mBAAsBF,aAE3B,OAAIA,EAAU7D,QAAU,EACf,KAIP,kBAAC,aAAD,KACG6D,EAAUG,KAAI,WAAoCC,GAApC,IAAGpL,EAAH,EAAGA,MAAO4I,EAAV,EAAUA,SAAUyC,EAApB,EAAoBA,aAApB,OACb,kBAAC,IAAD,CACEzC,SAAYoC,EAAU7D,SAAWiE,EAAQ,EAAKxC,OAAWrG,EACzD8I,aAAcA,EACdC,KAAG,EACHC,OAAK,EACLC,IAAK5C,EACLrI,UAAU,yBAEV,kBAAC,iBAAD,CAAgBkL,SAAUT,EAAU7D,SAAWiE,EAAQ,GACpDpL,W,8zCChBb,IAAMgJ,EAAgBC,cAChByC,EAAeC,cACfC,EAAmBC,cAElB,SAASC,IAGd,IAFAzH,EAEA,uDAFS,GAET,yDADoBD,IAAlBzB,EACF,EADEA,MAAOE,EACT,EADSA,OAET,OAAOmG,EAAcY,IAAd,UACFmC,IADE,gDACsD1H,EADtD,kBACsE1B,EADtE,mBACsFE,IAIxF,SAASmJ,IAAwD,IAArCrJ,EAAqC,uDAA7B,GAAIE,EAAyB,uDAAhB,EAAGwB,EAAa,uDAAJ,GAClE,OAAO2E,EACJY,IADI,UAEAmC,IAFA,qDAE6D1H,EAF7D,kBAE6E1B,EAF7E,mBAE6FE,IAEjG8C,MAAK,SAAC0B,GACL,IAAM4E,EAAqB5E,EAAeH,KAAKgF,QAC7C,SAACC,EAAKC,EAAMhB,GAAZ,OACEgB,EAAKC,aAAL,KAESF,EAFT,OAGOC,EAAKC,aAAeF,EAAIC,EAAKC,cAAT,cACbF,EAAIC,EAAKC,eADI,CACWjB,IAC5B,CAACA,KAEPe,IACN,IAEF,OAAOnD,EACJY,IADI,UAEAmC,IAFA,uBAE+BO,OAAOC,KAAKN,GAC3Cd,KAAI,SAACnM,GAAD,6BAAwBA,MAC5BwN,KAAK,OAET7G,MAAK,gBAAGuB,EAAH,EAAGA,KAAH,MAAe,CACnBG,iBACA4E,qBACAjF,WAAYE,SAGjBvB,MAAK,YAAwD,IAArD0B,EAAqD,EAArDA,eAAgB4E,EAAqC,EAArCA,mBAQvB,OAR4D,EAAjBjF,WAChCyF,SACT,gBAAGzN,EAAH,EAAGA,GAAIiH,EAAP,EAAOA,KAAP,OACEgG,EAAmBjN,IACnBiN,EAAmBjN,GAAIyN,SAAQ,SAACC,GAC9BrF,EAAeH,KAAKwF,GAAoBpF,cAAgBrB,QAGvDoB,KAIN,SAASsF,EAAa3H,GAC3B,OAAO0G,EAAakB,cAAc5H,GAG7B,SAAS6H,EACd7H,GAEA,6DADiCZ,IAA/BzB,EACF,EADEA,MAAOE,EACT,EADSA,OACT,IADiBwB,cACjB,MAD0B,GAC1B,EACA,OAAO2E,EAAcY,IAAd,UACFmC,IADE,uBAC6B/G,EAD7B,qDACqFX,EADrF,kBACqG1B,EADrG,mBACqHE,IAKvH,SAAeqC,EAAtB,oC,oCAAO,WAA4BC,EAAeC,GAA3C,eAAA0H,EAAA,sEACiBpB,EAAaqB,gBAAgB5H,GAD9C,UACD2B,EADC,gDAGIA,GAHJ,YAMD1B,GAASA,EAAM+B,OAAS,GANvB,yCAOIjB,EAAeY,EAAW1B,IAP9B,4C,sBAWA,SAAec,EAAtB,oC,oCAAO,WAA8BlB,EAAaI,GAA3C,SAAA0H,EAAA,+EACE1C,QAAQC,IACbjF,EAAM+F,KAAI,SAAC9C,GAAD,OACRuD,EAAiBoB,oBAAoB,CACnCX,aAAcrH,EACdiI,qBAAsB5E,SALvB,4C,sBAWA,SAAelC,EAAtB,oC,oCAAO,aAAyD+G,GAAzD,iBAAAJ,EAAA,6DAAiC9N,EAAjC,EAAiCA,GAAOmG,EAAxC,uBACQuG,EAAavF,gBACxBnH,EACAmO,YAAehI,EAAe,YAAa+H,IAHxC,oF,sBAOA,SAAe3G,EAAtB,kC,oCAAO,WAA+BvB,GAA/B,SAAA8H,EAAA,+EACEpB,EAAa0B,iBAAiBpI,IADhC,4C,sBAIA,SAAeqI,EAAtB,kC,oCAAO,WAAmCrF,GAAnC,SAAA8E,EAAA,+EACElB,EAAiB0B,qBAAqBtF,IADxC,4C,sBAIA,SAAeuF,EAAtB,kC,oCAAO,WAAoCC,GAApC,SAAAV,EAAA,+EACE1C,QAAQC,IACbmD,EAAiBrC,IAAjB,+BAAqB,WAAOsC,GAAP,iBAAAX,EAAA,sEACWO,EAAoBI,GAD/B,uBACXjH,EADW,EACXA,YADW,kBAEZ,CACLwB,gBAAiByF,EACjB7G,WAAYJ,IAJK,2CAArB,yDAFG,4C,sBA8BA,SAAe4B,EAAtB,oC,oCAAO,aAA6D8E,GAA7D,iBAAAJ,EAAA,6DAAqC9N,EAArC,EAAqCA,GAAOwJ,EAA5C,uBACQoD,EAAiBxD,oBAC5BpJ,EACAmO,YAAe3E,EAAe,gBAAiB0E,IAH5C,oF,sBAOA,SAASQ,IAAgC,IAAXzH,EAAW,uDAAJ,GAC1C,OAAO+C,EAAcY,IAAd,UAAqBmC,IAArB,eAAoD,CACzDxD,OAAQ,CACNlE,OAAQ,CACN4B,WAMD,IAAM0H,EAAwB,SAAChG,GAAD,OACnCyC,QAAQC,IACN1C,EAAYwD,KAAI,gBAAGnD,EAAH,EAAGA,gBAAiBpB,EAApB,EAAoBA,WAApB,OACdgF,EAAiBgC,sBAAsB5F,EAAiB,CACtDxB,YAAaI,SAKRkB,EAAgB,SAAC9C,GAAD,OAC3B0G,EAAamC,kBAAkB7I,IAEpB+C,EAAoB,SAACC,GAAD,IAAkBC,EAAlB,uDAA+B,GAA/B,OAC/B2D,EAAiBkC,sBAAsB9F,EAAiBC,IAE7C8F,EAA0B,SAAC/F,EAAiBgG,EAAMC,GAC7D,IAAI/G,EAAO,IAAIgH,SAEf,OADAhH,EAAKiH,OAAO,UAAWH,EAAMA,EAAK/H,MAC9BgI,EACKjF,EAAcoF,MAAd,UAAuBrC,IAAvB,kBAAiDkC,GAAU/G,IAGpEA,EAAKiH,OAAO,oBAAqBnG,GAC1BgB,EAAcK,KAAd,UAAsB0C,IAAtB,UAAgD7E,EAAM,CAC3DmH,QAAS,CACPC,OAAQ,mBACR,uDAAiDpH,EAAKqH,gBAK/CjG,EAAyB,SAACC,GAAD,OACpC6B,QAAQC,IAAI,CACVrB,EAAcY,IAAd,UACKmC,IADL,4BACyCxD,EAAOC,gBAEhDQ,EACGY,IADH,UACUN,IADV,oBACsCf,EAAOE,SAD7C,OAES,SAAC7C,GACN,GAAqB,MAAjBA,EAAM4I,OACR,MAAO,CACLC,OAAQ,WACRC,UAAU,GAId,MAAM9I,QAID+I,EAAwB,SAAC5H,EAAkB/B,GAAnB,OACnC+B,EAAiBQ,mBACjBR,EAAiBQ,kBAAkBvI,KAAOgG,EACtC+B,EAAiBQ,kBACjBR,EAAiBC,WAAWE,KAAK0H,MAAK,qBAAG5P,KAAgBgG,MAElD6J,EAAoB,SAAC7J,EAAa4B,GAAd,OAC/BoC,EAAcK,KAAd,UAAsB0C,IAAtB,uBAAqD/G,EAArD,aAA6E,CAC3EwB,YAAaI,M,qMC5MXxG,EAAa,SAAC,GAAD,IACjBuI,EADiB,EACjBA,SACAmG,EAFiB,EAEjBA,cACAC,EAHiB,EAGjBA,YAEGjQ,GALc,EAIjBkQ,mBAJiB,+EAOjB,kBAAC,IAAD,KACEzO,UAAS,2CACPuO,EAAgB,aAAe,KAE7BhQ,GAEHiQ,GACC,yBAAKxO,UAAU,cACZ,IACD,kBAAC,IAAD,OAGHoI,KAILvI,EAAWZ,UAAY,CACrBmJ,SAAUlJ,IAAUoJ,UAAU,CAC5BpJ,IAAUsJ,QAAQtJ,IAAUqJ,MAC5BrJ,IAAUqJ,OACTnJ,WACHmP,cAAerP,IAAUI,KACzBkP,YAAatP,IAAUI,KACvBmP,mBAAoBvP,IAAUI,MAGhCO,EAAWN,aAAe,CACxBgP,eAAe,EACfC,aAAa,GAGA3O,MAER,IAAMC,EAAkB,SAAC,GAAD,IAC7BL,EAD6B,EAC7BA,MACAgG,EAF6B,EAE7BA,YACA2C,EAH6B,EAG7BA,SACAsG,EAJ6B,EAI7BA,OACGnQ,EAL0B,0DAO7B,kBAAC,WAAD,KACE,kBAAC,IAAD,KACEyB,UAAW2O,YAAK,CACd,cAAeD,KAEbnQ,GAEJ,kBAAC,YAAD,KACE,kBAAC,cAAD,CAAayB,UAAU,qBACrB,kBAAC,OAAD,CAAM4O,UAAWC,eAAaC,GAAI9O,UAAU,uBACzCP,GAEFgG,GACC,kBAAC,OAAD,CACEzF,UAAU,gCACV4O,UAAWC,eAAaE,GAEvBtJ,KAKR2C,MAKPtI,EAAgBb,UAAY,CAC1BQ,MAAOP,IAAUqJ,KACjB9C,YAAavG,IAAUqJ,KACvBH,SAAUlJ,IAAUoJ,UAAU,CAC5BpJ,IAAUqJ,KACVrJ,IAAUsJ,QAAQtJ,IAAUqJ,QAE9BmG,OAAQxP,IAAUI,MAGpBQ,EAAgBP,aAAe,CAC7BE,MAAO,kBAAC,IAAD,Q,iCCrGT,uEAMMa,EAAU,SAAC,GAAiB,IAAf0O,EAAe,EAAfA,SACTpN,EAASJ,cAATI,KADwB,EAEHqN,cAArB5G,EAFwB,EAExBA,SAAUtG,EAFc,EAEdA,OACZmN,EAAYF,EAASX,MAAK,gBAAG3I,EAAH,EAAGA,KAAH,OAAc2C,EAAS8G,SAASzJ,MAIhE,OACE,kBAAC,OAAD,CACE0J,UAAWF,EAAYA,EAAUG,SAAW,EAC5CC,SANmB,SAACzM,EAAQ0M,GAAT,OACrB3N,EAAK,CAAEyG,SAAU2G,EAASO,GAAU7J,KAAM3D,aAOvCiN,EAASpE,KAAI,SAAC9C,GAAD,OACZ,kBAAC,MAAD,CACErI,MAAOqI,EAAKrI,MACZwL,IAAKnD,EAAKuH,SACVA,SAAUvH,EAAKuH,SACf3J,KAAMoC,EAAKpC,YAOrBpF,EAAQrB,UAAY,CAClB+P,SAAU9P,IAAUsQ,MAAMpQ,YAGbkB,O,gHC9BTmP,EAAiBC,0BAEjBC,EAAY,SAAC,GAAD,IAAGf,EAAH,EAAGA,UAAclP,EAAjB,4BAChB,kBAAC+P,EAAeG,SAAhB,MACG,YAAyB,IAAtBC,EAAsB,EAAtBA,gBACIC,EACiB,iBAAdlB,EAAyBiB,EAAgBjB,GAAaA,EAC/D,OAAO,kBAACkB,EAAMpQ,QAKpBiQ,EAAU1Q,UAAY,CACpB2P,UAAW1P,IAAUoJ,UAAU,CAC7BpJ,IAAUG,OACVH,IAAUqJ,KACVrJ,IAAUC,KACVD,IAAU6Q,UACT3Q,YAOL,IAAM4Q,EAAS,SAATA,EAAUC,GAAD,OACbA,EAAOC,OACH,KACAD,EAAOrF,KAAI,gBAAGsF,EAAH,EAAGA,OAAQD,EAAX,EAAWA,OAAQhF,EAAnB,EAAmBA,IAAQkF,EAA3B,wCACTD,EAAS,KAAOD,EACd,kBAACN,EAAD,KAAW1E,IAAKA,GAASkF,GACtBH,EAAOC,IAGV,kBAACN,EAAD,KAAW1E,IAAKA,GAASkF,QAI7BC,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQR,EAAX,EAAWA,gBAAX,OACtB,kBAACJ,EAAea,SAAhB,CAAyB5R,MAAO,CAAEsR,SAAQH,oBACvCG,EAAOK,EAAOJ,WAInBG,EAAgBnR,UAAY,CAC1BoR,OAAQnR,IAAUqE,MAAM,CACtB0M,OAAQ/Q,IAAUsQ,MAAMpQ,aACvBA,WACHyQ,gBAAiB3Q,IAAUgP,QAG7BkC,EAAgB7Q,aAAe,CAC7BsQ,gBAAiBjQ,KAGJwQ,O,wRCxDf,IAOeG,EAPa/S,YAAOgT,gBAAPhT,CAAH,KACb,gBAAGuB,EAAH,EAAGA,OAAH,SAAWmR,OAAuB,MAAQ,UAAGnR,EAAH,QAAiB,KAC1D,qBAAGmR,OAAuB,OAAS,aACrC,qBAAGA,OAAuB,OAAS,aACnC,qBAAGA,OAAuB,EAAI,a,yGCEzC,IAAMO,EAAoBjT,IAAOC,IAAV,KAEX,gBAAGsB,EAAH,EAAGA,OAAH,gBAAmBA,EAAnB,SAGN2R,EAAW,SAAC,GAA8B,IAA5BC,EAA4B,EAA5BA,IAAK5R,EAAuB,EAAvBA,OAAQ6K,EAAe,EAAfA,SAAe,EAChBgH,oBAAS,GADO,WACvCC,EADuC,KAC7BC,EAD6B,OAEdF,oBAAS,GAFK,WAEvCG,EAFuC,KAE5BC,EAF4B,KAGxCC,EAAsBvG,uBAC1B,qBAAGwG,gBAAmBD,uBAElBE,EAAcvH,EAChBqH,EAAoBrH,GACpBwH,IAEJ,OACE,kBAACX,EAAD,CAAmB1R,OAAQA,IACvB8R,GAAY,kBAAC,IAAD,CAAiB9R,OAAQA,IACvC,kBAAC,EAAD,CACEsS,UAAW,IACXC,UAAW,EACXpB,QAASW,EACT9R,OAAQ8R,EAAW9R,EAAS,EAC5BwS,QAAS,kBAAMP,GAAW,IAC1BQ,OAAQ,kBAAMV,GAAU,IACxBH,KAAMA,GAAOI,EAAYI,EAAcR,MAM/CD,EAASzR,UAAY,CACnB0R,IAAKzR,IAAUG,OACf+J,WAAYlK,IAAUG,OACtBoS,MAAOvS,IAAUgP,OACjBnP,OAAQG,IAAU+D,OAClB2G,SAAU1K,IAAUG,QAGtBqR,EAASnR,aAAe,CACtBkS,MAAO,GACP1S,OAAQ,IAGK2R,O,8LCnDf,IAAMgB,E,MAAwBlU,EAAOC,IAAV,KAMZiU,O,iCCRf,0IAcMC,EAA2B,SAAC,GAAD,IAC/BlS,EAD+B,EAC/BA,MACAmS,EAF+B,EAE/BA,KACAnM,EAH+B,EAG/BA,YACAoM,EAJ+B,EAI/BA,cACAC,EAL+B,EAK/BA,kBAL+B,OAO/B,yBAAK9R,UAAU,cACb,kBAAC,aAAD,CAAYA,UAAU,6BACpB,kBAAC,iBAAD,CAAgB+R,KAAMH,IACtB,kBAAC,cAAD,KACE,kBAAC,OAAD,CAAMhD,UAAWC,eAAamD,IAAKvS,IAErC,kBAAC,iBAAD,KACGgG,EACAqM,KAEH,kBAAC,6BAAD,KACGD,GAAiB,kBAACA,EAAD,WAM1BF,EAAyBpS,aAAe,CACtCuS,kBAAmB,kBAAM,OAG3BH,EAAyB1S,UAAY,CACnCQ,MAAOP,IAAUG,OAAOD,WACxBwS,KAAM1S,IAAUsE,IAAIpE,WACpBqG,YAAavG,IAAUG,OACvBwS,cAAe3S,IAAUsE,IACzBsO,kBAAmB5S,IAAUC,MAGhBwS,MAER,IAAMM,EAA0B,SAAC,GAAD,IACrCC,EADqC,EACrCA,IACAC,EAFqC,EAErCA,MAFqC,IAGrCC,qBAHqC,SAIrC3T,EAJqC,EAIrCA,GAJqC,OAMrC2T,GACE,kBAAC,IAAD,CAAa3T,GAAIA,EAAI4J,SAAU6J,EAAKG,gBAAc,GAChD,kBAAC,SAAD,CAAQ7M,QAAQ,WAAW2M,KAIjCF,EAAwBhT,UAAY,CAClCiT,IAAKhT,IAAUG,OAAOD,WACtB+S,MAAOjT,IAAUG,OAAOD,WACxBkT,GAAIpT,IAAUG,S,qlBC/DT,IAAMkT,EAAa/U,YAAOgV,OAAPhV,CAAH,KAKViV,EAAoBjV,aAAO,cAAGsH,WAAH,IAAkBpF,EAAlB,6BACtC,kBAAC,cAAgBA,MADclC,CAAH,KAKf,qBAAGsH,WAA+B,QAAU,W,iCCd3D,sEAOM4N,EAAU,kBACd,6BACE,kBAAC,OAAD,CAAM9D,UAAWC,eAAamD,IAA9B,oBAIEW,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAW/N,EAAd,EAAcA,MAAOgO,EAArB,EAAqBA,iBAArB,OACrBD,EACE,kBAAC,IAAD,MACmB,IAAjB/N,EAAM+B,OACRiM,EACEA,IAEA,kBAACH,EAAD,MAGF,kBAAC,UAAD,CAAS/T,KAAK,WACZ,kBAAC,UAAD,CAASmU,OAAO,KAAK9S,UAAU,mBAC5B6E,KAKT8N,EAAe1T,UAAY,CACzB2T,UAAW1T,IAAUI,KACrBuF,MAAO3F,IAAUsQ,MACjBqD,iBAAkB3T,IAAUC,MAEfwT,O,oBCnCfI,EAAOC,QAAU,IAA0B,+B,mMCI3C,IAAMC,EAAezV,IAAOC,IAAV,KAIZyV,EAAc,SAAC,GAAD,QAAGC,iBAAH,MAAe,GAAf,EAAsBrL,EAAtB,4BAClBqL,EAAUvI,KAAI,SAACwI,GAAD,OACZ,kBAACH,EAAD,CAAchI,IAAG,oBAAemI,IAAStL,EAAKsL,QAGlDF,EAAYjU,UAAY,CACtBkU,UAAWjU,IAAUsJ,QACnBtJ,IAAUoJ,UAAU,CAClBpJ,IAAUG,OACVH,IAAUqJ,KACVrJ,IAAUsJ,QAAQtJ,IAAUqJ,UAKlC2K,EAAY3T,aAAe,CACzB4T,UAAW,IAGED,O,gQCxBR,IAAMG,EAAiB7V,YAAO8V,WAAP9V,CAAH,M,iCCH3B,oCAGM+V,EAA4B,SAAC,GAAD,IAAGnL,EAAH,EAAGA,SAAH,OAChC,yBAAKpI,UAAU,0EACZoI,KAILmL,EAA0BtU,UAAY,CACpCmJ,SAAUlJ,IAAUoJ,UAAU,CAC5BpJ,IAAUqJ,KACVrJ,IAAUsJ,QAAQtJ,IAAUqJ,SAIjBgL,O,iCChBf,aAIeC,IAFW,kBAAMC,YAAYC,OAAOC,SAASC,KAAKC,UAAU,M,iCCF3E,6CAIMC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,UAAWvV,EAA3B,EAA2BA,GAA3B,OACnB,kBAAC,WAAD,CACEO,QAAS,SAACmH,GAAD,OAAWA,EAAM8N,mBAC1BD,UAAWA,EACXpV,SAAUmV,EACVlV,aAAW,gBACXJ,GAAIA,MAIRqV,EAAa7U,UAAY,CACvB8U,YAAa9U,IAAUE,KACvB6U,UAAW/U,IAAUK,KACrBb,GAAIQ,IAAUI,QAGDyU,O,2KCZTI,EAA0B,SAAC,GAAD,IAC9BxO,EAD8B,EAC9BA,KAEAyO,GAH8B,EAE9BC,aAF8B,EAG9BD,aACA9L,EAJ8B,EAI9BA,SACAyC,EAL8B,EAK9BA,aACAuH,EAN8B,EAM9BA,eACAtL,EAP8B,EAO9BA,cACGrH,EAR2B,+GAU9B,kBAAC,IAAD,KACE,kBAAC,cAAD,KACE,kBAAC,IAAD,CACE2I,SAAUA,EACVyC,aAAcA,EACduH,eAAgBA,GAEhB,kBAAC,OAAD,CAAMzD,UAAWC,eAAawF,GAAI5U,MAAOiG,GACvC,kBAAC,IAAD,KAAwBA,KAG3ByO,GAAe,kBAAC,OAAD,CAAMvF,UAAWC,eAAayF,OAAQH,GACrDpN,GACC,kBAAC,WAAD,KACE,kBAAC,OAAD,CAAM/G,UAAU,YAAY4O,UAAU,SAAtC,aAGA,kBAAC,OAAD,KAAO7H,KAIb,kBAAC,IAAD,KACEoM,UAAW,CAACzT,EAAM+F,YAAc,cAAgB,qBAC5C/F,OAKVwU,EAAwBjV,UAAY,CAClCyG,KAAMxG,IAAUG,OAChB+U,aAAclV,IAAUG,OACxB8U,YAAajV,IAAUG,OACvBkV,iBAAkBrV,IAAUG,OAC5BoG,YAAavG,IAAUG,OACvBgJ,SAAUnJ,IAAUG,OACpBgT,eAAgBnT,IAAUI,KAC1BwL,aAAc5L,IAAUqE,MAAV,OAAmBrE,IAAUG,OAASH,IAAUG,SAC9D0H,cAAe7H,IAAUG,QAGZ6U,O,otBCxDR,IAAMM,EAAwB,SAAC,GAAD,IACnCC,EADmC,EACnCA,UADmC,IAEnCvE,cAFmC,SAGhCpI,EAHgC,oCAI9B,CACL8G,UAAWrO,IAAsBK,cACjCqK,IAAK,GAAF,OAAKwJ,EAAL,8BACHxE,OAAQC,EACJ,GACA,CACE,CACEtB,UAAWrO,IAAsBI,aACjCsK,IAAK,GAAF,OAAKwJ,EAAL,wBACHxE,OAAQ,CAACnI,OAKN4M,EAAmB,SAAC,GAAD,IAAGrM,EAAH,EAAGA,SAAUgK,EAAb,EAAaA,eAAmBvK,EAAhC,2CAA4C,CAC1E8G,UAAWrO,IAAsBO,KACjCuH,WACAgK,iBACApH,IAAK,GAAF,OAAKnD,EAAKmD,IAAV,gBACHnG,WAAYgD,EAAKhD,WACjBmL,OAAQ,CAAC,EAAD,CAEJrB,UAAWrO,IAAsBQ,QAC9B+G,O,iCC7BT,2GAaM6M,EAAgB,SAACjV,GAAD,OACpB,kBAAC,IAAD,CAAmBoF,WAAYpF,EAAMkV,kBAAoBlV,EAAMmV,YAC7D,kBAAC,IAAD,KACE,kBAAC,aAAD,CAAY7U,UAAU,eACpB,kBAAC,QAAD,KACE,kBAAC,IAAD,CACE2Q,IAAG,UAAKnF,IAAL,4BAAyC9L,EAAMjB,GAA/C,SACHmL,SAAUlK,EAAMoV,8BAEjBpV,EAAMqV,cACL,kBAAC,IAAD,CACEhB,YAAa,kBAAMrU,EAAM4P,SAAS5P,EAAMjB,KACxCuV,UAAWtU,EAAMmV,WACjBpW,GAAIiB,EAAMjB,OAKlB,kBAAC,IAA4BiB,GAC7B,kBAAC,aAAD,SAKNiV,EAAc1V,UAAY,CACxBR,GAAIS,IAAUG,OACd+J,WAAYlK,IAAUG,OACtByV,4BAA6B5V,IAAUG,OACvC0V,aAAc7V,IAAUI,KACxBuV,WAAY3V,IAAUI,KACtBgQ,SAAUpQ,IAAUC,KACpB6V,SAAU9V,IAAUG,OACpBuV,iBAAkB1V,IAAUI,KAC5BwM,aAAc5M,IAAUG,OACxB4V,SAAU/V,IAAUqE,MAAM,CACxB2R,kBAAmBhW,IAAUqE,MAAM,CAAE4R,QAASjW,IAAUI,OAAQF,aAC/DA,YAGUuV,O,+MCiBAS,EAhEsB,SAAC,GAAD,IACnCjT,EADmC,EACnCA,KACAkT,EAFmC,EAEnCA,cACAzC,EAHmC,EAGnCA,UAHmC,IAInC0C,YAAenX,EAJoB,EAIpBA,YAAaC,EAJO,EAIPA,eAAgBC,EAJT,EAISA,YAJT,MAK9B,CACL4R,OAAQ,CACN,CACErB,UAAWrO,IAAsBC,YACjCyK,IAAK,uBACLgF,OAAQ,CACN,CACErB,UAAWrO,IAAsBE,kBACjCwK,IAAK,yBACLxL,MAAO,WACPgG,YAAa,8CACbiJ,OAAQvM,EAAKuM,QAEf,CACEE,UAAWrO,IAAsBS,MACjCiK,IAAK,mBACLgF,OAAQ9N,EAAKuM,OACT,GACA,CACE,CACEE,UAAWrO,IAAsBG,QACjCuK,IAAK,yBACLgF,OAAQ,CACNuE,YAAsB,CACpBC,UAAW,eACX7F,UAAWrO,IAAsBM,oBACjCoK,IAAK,eACL9M,cACAC,iBACAC,cACAC,aAAa,MAInB,CACEsQ,UAAWrO,IAAsBU,WACjCgK,IAAK,kBACLgF,OACE9N,EAAKE,MAAQ,EACT,CACE,CACEuM,UAAW1M,IACX+I,IAAK,sBACL9I,OACAI,SAAUpE,EACVqE,WAAY6S,EACZvQ,WAAY8N,EACZnQ,WAAW,IAGf,W,iqBCvCxB,IAAM8S,EAAkBC,aACtB,SAAC9W,EAAOyF,EAAUsR,GAChBA,GAAkB,GAClBtR,EAASI,YAAoB7F,EAAOmF,MAAkBuB,MAAK,kBACzDqQ,GAAkB,QAGtB,KAkBIC,EAAe,CACnBC,YAAa,GACbC,QAAQ,EACRC,YAAY,EACZC,aAAa,GAGTC,EAAgB,SAACC,EAAOC,GAC5B,OAAQA,EAAOtX,MACb,IAAK,cACH,YAAYqX,EAAZ,CAAmBH,WAAYI,EAAOjS,UACxC,IAAK,iBACH,YAAYgS,EAAZ,CAAmBL,YAAaM,EAAOjS,UACzC,IAAK,mBACH,YAAYgS,EAAZ,CAAmBF,YAAaG,EAAOjS,UAG3C,OAAOgS,GA0GME,UAvGE,WAAM,MACfC,EAAY3C,cACV4C,EAAYC,qBAAWC,KAAvBF,QAFa,EAG6CG,qBAChER,EAD0E,KAGrEL,EAHqE,CAIxEC,aAAaQ,aAAA,YAAAA,EAAWK,gBAAX,eAAqB1S,SAAU,MAP3B,kBAGZ+R,EAHY,EAGZA,WAAYF,EAHA,EAGAA,YAAaG,EAHb,EAGaA,YAAeW,EAH5B,KAUftS,EAAWuS,wBAVI,EAWEhM,uBACrB,qBAAGlE,iBAAoBM,kBADjBH,EAXa,EAWbA,KAAMxE,EAXO,EAWPA,KAIdwU,qBAAU,WAAM,MACd9M,QAAQC,IAAI,CACV3F,EACEI,YAAoB4R,aAAD,YAACA,EAAWK,gBAAZ,aAAC,EAAqB1S,OAAQqS,aAA9B,EAA8BA,EAAWK,WAE9DrS,EAAS+F,iBACR9E,MAAK,kBAAMqR,EAAc,CAAE9X,KAAM,cAAeqF,SAAS,OAC5D4S,cACAC,SAASC,OAAOC,YAAY,CAAEtY,GAAI,WAAYuY,cAAc,MAC3D,IAEH,IAAMC,EAAoB,SAACvY,GACzB+X,EAAc,CAAE9X,KAAM,iBAAkBqF,QAAStF,IACjD6W,EAAgB7W,EAAOyF,GAAU,SAAC2R,GAAD,OAC/BW,EAAc,CAAE9X,KAAM,mBAAoBqF,QAAS8R,QAIjDoB,EAAevQ,EAAKiE,KAAI,SAAC9C,GAAD,OAC5B,kBAAC,IAAD,KACEmD,IAAKnD,EAAKrJ,GACV4J,SAAUP,EAAKgE,cAAgBqL,MAvEZrL,GAAF,EAwEChE,GAxECgE,aAAcrN,EAAsC,EAAtCA,GAAIqW,EAAkC,EAAlCA,4BACrChJ,GAAgBrN,GAAMqW,EACjB,CACLzM,SAAUyD,GAAgBqL,IAC1BrM,aAAc,CACZvE,UAAWuF,EACX,iBAAkBrN,EAClByJ,OAAQ4M,IAKP,IA6DChN,EAJN,CAKEqL,UAAW,MA1EK,IAAC,EAAErH,EAAcrN,EAAIqW,KA0FnCsC,EAAkB,CACtBvF,cAAe1P,EAAKuM,OAbA,kBACpB,uBAAGxI,KAAI,UAAKkQ,EAAL,yBACL,kBAACzW,EAAA,OAAD,CAAQ6F,QAAQ,WAAhB,gBAIiB,kBACnB,kBAAC7F,EAAA,OAAD,CAAQ6F,QAAQ,OAAOxG,QAAS,kBAAMiY,EAAkB,MAAxD,sBAOAxX,MAAO0C,EAAKuM,OAAS,kBAAoB,mBACzCjJ,YAAatD,EAAKuM,OACd,sDACA,iGACJkD,KAAMzP,EAAKuM,OAAS2I,IAAapZ,KAGnC,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CACEoS,OAAQiH,EAA4B,CAClChC,YAAa,CACXnX,YAAawX,EACbvX,eAAgB6Y,EAChB5Y,YAAa,qBAEfoB,MAAO,WACPmT,UAAWkD,GAAeD,EAC1B1T,OACAkT,cAAe,kBAAalR,EAASI,IAAmB,WAAnB,mBAGzC,kBAAC,IAAD,CACEqO,UAAWkD,GAAeD,EAC1BhR,MAAOqS,EACPrE,iBAAkB,kBAChB,kBAAC,IAA6BuE,MAGjCjV,EAAKE,MAAQ,GACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEkV,cAAc,KACdpV,KAAMA,EACNK,WAAY,SAACgV,EAAInW,GAAL,aACV8C,EACEI,YAAoB4R,aAAD,YAACA,EAAWK,gBAAZ,aAAC,EAAqB1S,OAAQzC","file":"js/products.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterInputGroup = styled.div`\n  position: relative;\n  width: 300px;\n  height: 36px;\n`;\n\nconst FilterInput = styled(TextInput)`\n  position: absolute;\n  width: 300px;\n  background: transparent;\n`;\n\nconst FilterIconsContainer = styled.span`\n  position: absolute;\n  right: 8px;\n  top: 8px;\n`;\n\nconst StyledCloseIcon = styled(CloseIcon)`\n  z-index: 1000;\n  fill: #72767b;\n  :hover {\n    fill: var(--pf-global--Color--100);\n    cursor: pointer;\n  }\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  z-index: 1000;\n  fill: #72767b;\n`;\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable,\n  ...rest\n}) => (\n  <ToolbarItem>\n    <FilterInputGroup>\n      <FilterInput\n        id=\"toolbar-filter\"\n        placeholder={placeholder}\n        value={searchValue}\n        type=\"text\"\n        onChange={onFilterChange}\n        aria-label={placeholder}\n        {...rest}\n      />\n      <FilterIconsContainer>\n        {(isClearable && searchValue && (\n          <StyledCloseIcon\n            width=\"16\"\n            height=\"16\"\n            onClick={() => onFilterChange('')}\n          />\n        )) || <StyledSearchIcon />}\n      </FilterIconsContainer>\n    </FilterInputGroup>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Level,\n  LevelItem,\n  ToolbarItem,\n  ToolbarGroup\n} from '@patternfly/react-core';\n\nimport FilterToolbarItem from '../presentational-components/shared/filter-toolbar-item';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../presentational-components/shared/top-toolbar';\nimport AppTabs from '../presentational-components/shared/app-tabs';\nimport CatalogLink from '../smart-components/common/catalog-link';\nimport { StyledToolbar } from '../presentational-components/styled-components/toolbars';\n\nconst ToolbarButton = ({ title, ...props }) => (\n  <Button {...props}>{title}</Button>\n);\n\nToolbarButton.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst AppToolbar = ({ ...props }) => (\n  <StyledToolbar className=\"pf-u-pr-lg\" {...props} />\n);\n\nconst toolbarMapper = {\n  TopToolbar,\n  TopToolbarTitle,\n  Toolbar: AppToolbar,\n  ToolbarGroup,\n  ToolbarItem,\n  FilterToolbarItem,\n  Link: CatalogLink,\n  Level,\n  LevelItem,\n  Button: ToolbarButton,\n  AppTabs\n};\n\nexport const toolbarComponentTypes = {\n  TOP_TOOLBAR: 'TopToolbar',\n  TOP_TOOLBAR_TITLE: 'TopToolbarTitle',\n  TOOLBAR: 'Toolbar',\n  TOOLBAR_ITEM: 'ToolbarItem',\n  TOOLBAR_GROUP: 'ToolbarGroup',\n  FILTER_TOOLBAR_ITEM: 'FilterToolbarItem',\n  LINK: 'Link',\n  BUTTON: 'Button',\n  LEVEL: 'Level',\n  LEVEL_ITEM: 'LevelItem',\n  TABS: 'AppTabs'\n};\n\nexport default toolbarMapper;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import { useHistory } from 'react-router-dom';\n\nconst removeSearchQuery = (target) => {\n  if (typeof target === 'string') {\n    return target.split('?')[0];\n  }\n\n  if (typeof target === 'object') {\n    return {\n      ...target,\n      search: undefined\n    };\n  }\n\n  return target;\n};\n\n/**\n * Wrapper around useHistory hook which adds aditional settings to standard history methods\n * @param {Boolean} removeSearch if true, using history navigation methods will remove search string from path\n */\nconst useEnhancedHistory = (removeSearch) => {\n  const history = useHistory();\n  return {\n    ...history,\n    push: (target) => {\n      if (removeSearch) {\n        return history.push(removeSearchQuery(target));\n      }\n\n      return history.push(target);\n    }\n  };\n};\n\nexport default useEnhancedHistory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import styled from 'styled-components';\nimport { Toolbar, Level } from '@patternfly/react-core';\n\nexport const StyledToolbar = styled(Toolbar)`\n  background-color: #ffffff;\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  position: relative;\n  top: 1px;\n`;\n\nexport const TopToolbarWrapper = styled.div`\n  background-color: #ffffff;\n  .pf-c-breadcrumb__item {\n    .active {\n      color: var(--pf-c-breadcrumb__item--Color);\n      text-decoration: none;\n      pointer-events: none;\n    }\n  }\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  .top-toolbar-title {\n    min-width: 200px;\n  }\n  .top-toolbar-title-description {\n    word-break: break-word;\n  }\n`;\n\nexport const TopToolbarTitleContainer = styled(Level)`\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n  }\n`;\n","import React, { Fragment } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  ADD_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport * as ActionTypes from '../action-types';\nimport * as PortfolioHelper from '../../helpers/portfolio/portfolio-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const doFetchPortfolios = ({\n  filter,\n  ...options\n} = defaultSettings) => ({\n  type: ActionTypes.FETCH_PORTFOLIOS,\n  meta: { filter, ...options },\n  payload: PortfolioHelper.listPortfolios(filter, options)\n});\n\nexport const fetchPortfolios = (options) => (dispatch) =>\n  dispatch(doFetchPortfolios(options));\n\nexport const fetchPortfoliosWithState = (options = defaultSettings) => (\n  dispatch\n) =>\n  dispatch(\n    doFetchPortfolios({ ...options, storeState: true, stateKey: 'portfolio' })\n  );\n\nexport const fetchPortfolioItems = (\n  filter = '',\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS,\n  meta: { filter, storeState: true, stateKey: 'products' },\n  payload: PortfolioHelper.listPortfolioItems(\n    options.limit,\n    options.offset,\n    filter\n  )\n});\n\nexport const fetchPortfolioItemsWithPortfolio = (\n  portfolioId,\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolioItemsWithPortfolio(portfolioId, options),\n  meta: {\n    ...options,\n    storeState: true,\n    stateKey: 'portfolioItems'\n  }\n});\n\nexport const fetchSelectedPortfolio = (id) => ({\n  type: ActionTypes.FETCH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolio(id)\n});\n\nexport const searchPortfolioItems = (value) => ({\n  type: ActionTypes.FILTER_PORTFOLIO_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const addPortfolio = (portfolioData, items) => (dispatch) => {\n  dispatch({\n    type: ActionTypes.ADD_TEMPORARY_PORTFOLIO,\n    payload: {\n      ...portfolioData,\n      isDisabled: true,\n      isTemporary: true,\n      id: Date.now().toString(),\n      created_at: new Date().toString()\n    }\n  });\n  return dispatch({\n    type: ActionTypes.ADD_PORTFOLIO,\n    payload: PortfolioHelper.addPortfolio(\n      {\n        ...portfolioData\n      },\n      items\n    )\n      .then(() => dispatch(doFetchPortfolios()))\n      .catch((error) => {\n        dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n        throw error;\n      }),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: 'Success adding portfolio',\n          description: `Portfolio ${portfolioData.name} was added successfully.`\n        }\n      }\n    }\n  });\n};\n\nexport const addToPortfolio = (portfolioId, items) => ({\n  type: ActionTypes.ADD_TO_PORTFOLIO,\n  payload: PortfolioHelper.addToPortfolio(portfolioId, items),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding products',\n        description: 'Products were successfully added to portfolio.'\n      }\n    }\n  }\n});\n\nexport const updatePortfolio = (portfolioData) => (dispatch, getState) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO,\n    payload: portfolioData\n  });\n\n  return PortfolioHelper.updatePortfolio(portfolioData, { getState })\n    .then(() => dispatch(doFetchPortfolios()))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          dismissable: true,\n          variant: 'success',\n          title: 'Success updating portfolio',\n          description: 'The portfolio was updated successfully.'\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const undoRemovePortfolio = (portfolioId, restoreKey) => (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: CLEAR_NOTIFICATIONS });\n  return PortfolioHelper.undeletePortfolio(portfolioId, restoreKey).then(\n    (portfolio) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: `Portfolio ${portfolio.name} has been restored`\n        }\n      });\n      return dispatch(\n        fetchPortfolios(getState().portfolioReducer.portfolios.meta)\n      );\n    }\n  );\n};\n\nexport const removePortfolio = (portfolioId) => (dispatch, getState) => {\n  dispatch({\n    type: ActionTypes.DELETE_TEMPORARY_PORTFOLIO,\n    payload: portfolioId\n  });\n  return dispatch({\n    type: ActionTypes.REMOVE_PORTFOLIO,\n    payload: PortfolioHelper.removePortfolio(portfolioId)\n      .then(({ restore_key }) => {\n        dispatch({\n          type: ADD_NOTIFICATION,\n          payload: {\n            variant: 'success',\n            title: 'Success removing portfolio',\n            dismissable: true,\n            description: (\n              <Fragment>\n                The portfolio was removed successfully. You can&nbsp;\n                <a\n                  href=\"#\"\n                  id={`undo-delete-portfolio-${portfolioId}`}\n                  onClick={(event) => {\n                    event.preventDefault();\n                    dispatch(undoRemovePortfolio(portfolioId, restore_key));\n                  }}\n                >\n                  Undo\n                </a>\n                &nbsp;this action if this was a mistake.\n              </Fragment>\n            )\n          }\n        });\n        const { meta, data } = getState().portfolioReducer.portfolios;\n        return dispatch(\n          fetchPortfolios({\n            ...meta,\n            offset: data.length === 0 ? 0 : meta.offset\n          })\n        );\n      })\n      .catch((error) => {\n        dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n        throw error;\n      })\n  });\n};\n\nexport const selectPortfolioItem = (portfolioItem) => ({\n  type: ActionTypes.SELECT_PORTFOLIO_ITEM,\n  payload: portfolioItem\n});\n\nexport const undoRemoveProductsFromPortfolio = (restoreData, portfolioId) => (\n  dispatch\n) => {\n  dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_PENDING` });\n  return PortfolioHelper.restorePortfolioItems(restoreData)\n    .then(() =>\n      dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .then(() => dispatch({ type: CLEAR_NOTIFICATIONS }))\n    .then(() => dispatch(fetchPortfolioItemsWithPortfolio(portfolioId)))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: 'Products have been restored'\n        }\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const removeProductsFromPortfolio = (portfolioItems, portfolioName) => (\n  dispatch,\n  getState\n) => {\n  dispatch({\n    type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_PENDING`\n  });\n  const {\n    portfolioReducer: {\n      portfolioItems: { meta },\n      selectedPortfolio: { id: portfolioId }\n    }\n  } = getState();\n  return PortfolioHelper.removePortfolioItems(portfolioItems)\n    .then((data) =>\n      dispatch(\n        fetchPortfolioItemsWithPortfolio(portfolioId, {\n          offset: 0,\n          limit: meta.limit,\n          filter: ''\n        })\n      ).then(() => data)\n    )\n    .then((data) => {\n      return dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'Products removed',\n          dismissable: true,\n          description: (\n            <FormattedMessage\n              id=\"portfolio.remove-portfolio-items\"\n              defaultMessage={`You have removed {count, number} {count, plural,\n            one {product}\n            other {products}\n          } from the {portfolioName} portfolio. {undo} if this was a mistake.`}\n              values={{\n                count: portfolioItems.length,\n                portfolioName,\n                undo: (\n                  <a\n                    href=\"#\"\n                    id={`restore-portfolio-item-${portfolioId}`}\n                    onClick={(event) => {\n                      event.preventDefault();\n                      dispatch(\n                        undoRemoveProductsFromPortfolio(data, portfolioId)\n                      );\n                    }}\n                  >\n                    Undo\n                  </a>\n                )\n              }}\n            />\n          )\n        }\n      });\n    })\n    .then(() =>\n      dispatch({ type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const copyPortfolio = (id) => (dispatch) => {\n  dispatch({ type: 'COPY_PORTFOLIO_PENDING' });\n  return PortfolioHelper.copyPortfolio(id)\n    .then((portfolio) => {\n      dispatch({ type: 'COPY_PORTFOLIO_FULFILLED' });\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a portfolio',\n          description: `${portfolio.name} has been copied.`,\n          dismissable: true\n        }\n      });\n      return portfolio;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_REJECTED', payload: err })\n    );\n};\n\nexport const copyPortfolioItem = (\n  portfolioItemId,\n  copyObject,\n  newPortfolio\n) => (dispatch) => {\n  return PortfolioHelper.copyPortfolioItem(portfolioItemId, copyObject)\n    .then((data) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a product',\n          description: `${data.name} has been copied into ${newPortfolio.name}`,\n          dismissable: true\n        }\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_ITEM_REJECTED', payload: err })\n    );\n};\n\nexport const resetSelectedPortfolio = () => ({\n  type: ActionTypes.RESET_SELECTED_PORTFOLIO\n});\n\nexport const updatePortfolioItem = (values) => (dispatch, getState) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM,\n    payload: values\n  });\n  return PortfolioHelper.updatePortfolioItem(values, { getState })\n    .then(() => {\n      dispatch({ type: ActionTypes.UPDATE_PORTFOLIO_ITEM, payload: values });\n      return values;\n    })\n    .then((item) =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: `Product \"${item.name}\" was successfully updated`,\n          dismissable: true\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_ITEM_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const getPortfolioItemDetail = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_PENDING` });\n  return PortfolioHelper.getPortfolioItemDetail(params).then(\n    ([portfolioItem, source]) =>\n      dispatch({\n        type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_FULFILLED`,\n        payload: {\n          portfolioItem,\n          source\n        }\n      })\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ConditionalLink = ({ children, pathname, ...props }) =>\n  pathname ? (\n    <CatalogLink pathname={pathname} {...props}>\n      {children}\n    </CatalogLink>\n  ) : (\n    children\n  );\n\nConditionalLink.propTypes = {\n  pathname: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]).isRequired\n};\n\nexport default ConditionalLink;\n","import { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport {\n  TOPOLOGICAL_INVENTORY_API_BASE,\n  SOURCES_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nexport const getPlatforms = () => {\n  return graphqlInstance\n    .post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n    .then(({ data: { application_types } }) => application_types)\n    .then(([{ sources }]) => sources);\n};\n\nexport const getPlatform = (platformId) => {\n  return axiosInstance.get(`${SOURCES_API_BASE}/sources/${platformId}`);\n};\n\nexport const getPlatformItems = (platformId, filter, options) => {\n  const filterQuery = filter ? `&filter[name][contains_i]=${filter}` : '';\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_offerings?filter[archived_at][nil]${filterQuery}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings`\n    );\n  }\n};\n\nexport const getPlatformInventories = (\n  platformId,\n  filter = '',\n  options = defaultSettings\n) => {\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_inventories?filter[name][contains_i]=${filter}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_inventories?limit=${options.limit}&offset=${options.offset}`\n    );\n  }\n};\n\nexport const getServiceOffering = (serviceOfferingId, sourceId) =>\n  Promise.all([\n    axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings/${serviceOfferingId}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${sourceId}`)\n      .then((source) => {\n        return axiosInstance\n          .get(`${SOURCES_API_BASE}/source_types/${source.source_type_id}`)\n          .then(({ icon_url }) => ({\n            ...source,\n            icon_url\n          }));\n      })\n  ]).then(([service, source]) => ({\n    service,\n    source\n  }));\n","import * as ActionTypes from '../action-types';\nimport * as PlatformHelper from '../../helpers/platform/platform-helper';\n\nexport const fetchPlatforms = () => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_PLATFORMS}_PENDING` });\n  return PlatformHelper.getPlatforms()\n    .then((data) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_FULFILLED`,\n        payload: data\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchPlatformItems = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_ITEMS,\n  payload: PlatformHelper.getPlatformItems(platformId, filter, options),\n  meta: {\n    platformId,\n    filter,\n    ...options\n  }\n});\n\nexport const fetchMultiplePlatformItems = (platformsId) => {\n  const platformPromisses = platformsId.map((platformId) =>\n    PlatformHelper.getPlatformItems(platformId).then((data) => ({\n      [platformId]: data\n    }))\n  );\n  return {\n    type: ActionTypes.FETCH_MULTIPLE_PLATFORM_ITEMS,\n    payload: Promise.all(platformPromisses).then((data) =>\n      data.reduce(\n        (acc, curr) => ({\n          ...acc,\n          ...curr\n        }),\n        {}\n      )\n    )\n  };\n};\n\nexport const fetchSelectedPlatform = (id) => ({\n  type: ActionTypes.FETCH_PLATFORM,\n  payload: PlatformHelper.getPlatform(id)\n});\n\nexport const searchPlatformItems = (value) => ({\n  type: ActionTypes.FILTER_PLATFORM_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const fetchPlatformInventories = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_INVENTORIES,\n  payload: PlatformHelper.getPlatformInventories(platformId, filter, options)\n});\n\nexport const fetchServiceOffering = (...args) => ({\n  type: ActionTypes.FETCH_SERVICE_OFFERING,\n  payload: PlatformHelper.getServiceOffering(...args)\n});\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport ConditionalLink from '../../presentational-components/shared/conditional-link';\n\nconst CatalogBreadcrumbs = () => {\n  const fragments = useSelector(\n    ({ breadcrumbsReducer: { fragments } }) => fragments\n  );\n  if (fragments.length <= 1) {\n    return null;\n  }\n\n  return (\n    <Breadcrumb>\n      {fragments.map(({ title, pathname, searchParams }, index) => (\n        <ConditionalLink\n          pathname={!(fragments.length === index + 1) ? pathname : undefined}\n          searchParams={searchParams}\n          nav\n          exact\n          key={pathname}\n          className=\"pf-c-breadcrumb__item\"\n        >\n          <BreadcrumbItem isActive={fragments.length === index + 1}>\n            {title}\n          </BreadcrumbItem>\n        </ConditionalLink>\n      ))}\n    </Breadcrumb>\n  );\n};\n\nexport default CatalogBreadcrumbs;\n","import {\n  getAxiosInstance,\n  getPortfolioApi,\n  getPortfolioItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { sanitizeValues } from '../shared/helpers';\nimport { defaultSettings } from '../shared/pagination';\n\nconst axiosInstance = getAxiosInstance();\nconst portfolioApi = getPortfolioApi();\nconst portfolioItemApi = getPortfolioItemApi();\n\nexport function listPortfolios(\n  filter = '',\n  { limit, offset } = defaultSettings\n) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n}\n\nexport function listPortfolioItems(limit = 50, offset = 0, filter = '') {\n  return axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n    )\n    .then((portfolioItems) => {\n      const portfolioReference = portfolioItems.data.reduce(\n        (acc, curr, index) =>\n          curr.portfolio_id\n            ? {\n                ...acc,\n                [curr.portfolio_id]: acc[curr.portfolio_id]\n                  ? [...acc[curr.portfolio_id], index]\n                  : [index]\n              }\n            : acc,\n        {}\n      );\n      return axiosInstance\n        .get(\n          `${CATALOG_API_BASE}/portfolios?${Object.keys(portfolioReference)\n            .map((id) => `filter[id][]=${id}`)\n            .join('&')}`\n        )\n        .then(({ data }) => ({\n          portfolioItems,\n          portfolioReference,\n          portfolios: data\n        }));\n    })\n    .then(({ portfolioItems, portfolioReference, portfolios }) => {\n      portfolios.forEach(\n        ({ id, name }) =>\n          portfolioReference[id] &&\n          portfolioReference[id].forEach((portfolioItemIndex) => {\n            portfolioItems.data[portfolioItemIndex].portfolioName = name;\n          })\n      );\n      return portfolioItems;\n    });\n}\n\nexport function getPortfolio(portfolioId) {\n  return portfolioApi.showPortfolio(portfolioId);\n}\n\nexport function getPortfolioItemsWithPortfolio(\n  portfolioId,\n  { limit, offset, filter = '' } = defaultSettings\n) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios/${portfolioId}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n}\n\n// TO DO - change to use the API call that adds multiple items to a portfolio when available\nexport async function addPortfolio(portfolioData, items) {\n  let portfolio = await portfolioApi.createPortfolio(portfolioData);\n  if (!portfolio) {\n    return portfolio;\n  }\n\n  if (items && items.length > 0) {\n    return addToPortfolio(portfolio, items);\n  }\n}\n\nexport async function addToPortfolio(portfolioId, items) {\n  return Promise.all(\n    items.map((item) =>\n      portfolioItemApi.createPortfolioItem({\n        portfolio_id: portfolioId,\n        service_offering_ref: item\n      })\n    )\n  );\n}\n\nexport async function updatePortfolio({ id, ...portfolioData }, store) {\n  return await portfolioApi.updatePortfolio(\n    id,\n    sanitizeValues(portfolioData, 'Portfolio', store)\n  );\n}\n\nexport async function removePortfolio(portfolioId) {\n  return portfolioApi.destroyPortfolio(portfolioId);\n}\n\nexport async function removePortfolioItem(portfolioItemId) {\n  return portfolioItemApi.destroyPortfolioItem(portfolioItemId);\n}\n\nexport async function removePortfolioItems(portfolioItemIds) {\n  return Promise.all(\n    portfolioItemIds.map(async (itemId) => {\n      const { restore_key } = await removePortfolioItem(itemId);\n      return {\n        portfolioItemId: itemId,\n        restoreKey: restore_key\n      };\n    })\n  );\n}\n\nexport function fetchProviderControlParameters(portfolioItemId) {\n  return axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}/provider_control_parameters`\n    )\n    .then((data) => ({\n      required: [],\n      ...data,\n      properties: {\n        ...data.properties,\n        namespace: {\n          ...data.properties.namespace,\n          enum: Array.from(new Set([...data.properties.namespace.enum]))\n        }\n      }\n    }));\n}\n\nexport async function updatePortfolioItem({ id, ...portfolioItem }, store) {\n  return await portfolioItemApi.updatePortfolioItem(\n    id,\n    sanitizeValues(portfolioItem, 'PortfolioItem', store)\n  );\n}\n\nexport function fetchPortfolioByName(name = '') {\n  return axiosInstance.get(`${CATALOG_API_BASE}/portfolios`, {\n    params: {\n      filter: {\n        name\n      }\n    }\n  });\n}\n\nexport const restorePortfolioItems = (restoreData) =>\n  Promise.all(\n    restoreData.map(({ portfolioItemId, restoreKey }) =>\n      portfolioItemApi.unDeletePortfolioItem(portfolioItemId, {\n        restore_key: restoreKey\n      })\n    )\n  );\n\nexport const copyPortfolio = (portfolioId) =>\n  portfolioApi.postCopyPortfolio(portfolioId);\n\nexport const copyPortfolioItem = (portfolioItemId, copyObject = {}) =>\n  portfolioItemApi.postCopyPortfolioItem(portfolioItemId, copyObject);\n\nexport const uploadPortfolioItemIcon = (portfolioItemId, file, iconId) => {\n  let data = new FormData();\n  data.append('content', file, file.name);\n  if (iconId) {\n    return axiosInstance.patch(`${CATALOG_API_BASE}/icons/${iconId}`, data);\n  }\n\n  data.append('portfolio_item_id', portfolioItemId);\n  return axiosInstance.post(`${CATALOG_API_BASE}/icons`, data, {\n    headers: {\n      accept: 'application/json',\n      'Content-Type': `multipart/form-data; boundary=${data._boundary}`\n    }\n  });\n};\n\nexport const getPortfolioItemDetail = (params) =>\n  Promise.all([\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/portfolio_items/${params.portfolioItem}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${params.source}`)\n      .catch((error) => {\n        if (error.status === 404) {\n          return {\n            object: 'platform',\n            notFound: true\n          };\n        }\n\n        throw error;\n      })\n  ]);\n\nexport const getPortfolioFromState = (portfolioReducer, portfolioId) =>\n  portfolioReducer.selectedPortfolio &&\n  portfolioReducer.selectedPortfolio.id === portfolioId\n    ? portfolioReducer.selectedPortfolio\n    : portfolioReducer.portfolios.data.find(({ id }) => id === portfolioId);\n\nexport const undeletePortfolio = (portfolioId, restoreKey) =>\n  axiosInstance.post(`${CATALOG_API_BASE}/portfolios/${portfolioId}/undelete`, {\n    restore_key: restoreKey\n  });\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport clsx from 'clsx';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport CatalogBreadcrumbs from '../../smart-components/common/catalog-breadcrumbs';\nimport {\n  TopToolbarWrapper,\n  TopToolbarTitleContainer\n} from '../styled-components/toolbars';\n\nconst TopToolbar = ({\n  children,\n  paddingBottom,\n  breadcrumbs,\n  breadcrumbsSpacing,\n  ...rest\n}) => (\n  <TopToolbarWrapper\n    className={`pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${\n      paddingBottom ? 'pf-u-pb-lg' : ''\n    }`}\n    {...rest}\n  >\n    {breadcrumbs && (\n      <div className=\"pf-u-mb-md\">\n        {' '}\n        <CatalogBreadcrumbs />\n      </div>\n    )}\n    {children}\n  </TopToolbarWrapper>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  paddingBottom: PropTypes.bool,\n  breadcrumbs: PropTypes.bool,\n  breadcrumbsSpacing: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: true,\n  breadcrumbs: true\n};\n\nexport default TopToolbar;\n\nexport const TopToolbarTitle = ({\n  title,\n  description,\n  children,\n  noData,\n  ...rest\n}) => (\n  <Fragment>\n    <TopToolbarTitleContainer\n      className={clsx({\n        'pf-u-mb-lg': !noData\n      })}\n      {...rest}\n    >\n      <LevelItem>\n        <TextContent className=\"top-toolbar-title\">\n          <Text component={TextVariants.h2} className=\"pf-u-m-0 pf-u-mr-md\">\n            {title}\n          </Text>\n          {description && (\n            <Text\n              className=\"top-toolbar-title-description\"\n              component={TextVariants.p}\n            >\n              {description}\n            </Text>\n          )}\n        </TextContent>\n      </LevelItem>\n      {children}\n    </TopToolbarTitleContainer>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  noData: PropTypes.bool\n};\n\nTopToolbarTitle.defaultProps = {\n  title: <ToolbarTitlePlaceholder />\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation } from 'react-router-dom';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nconst AppTabs = ({ tabItems }) => {\n  const { push } = useEnhancedHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) =>\n    push({ pathname: tabItems[tabIndex].name, search });\n\n  return (\n    <Tabs\n      activeKey={activeTab ? activeTab.eventKey : 0}\n      onSelect={handleTabClick}\n    >\n      {tabItems.map((item) => (\n        <Tab\n          title={item.title}\n          key={item.eventKey}\n          eventKey={item.eventKey}\n          name={item.name}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default AppTabs;\n","import React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport toolbarMapper from './toolbar-mapper';\n\nconst ToolbarContext = createContext();\n\nconst Component = ({ component, ...props }) => (\n  <ToolbarContext.Consumer>\n    {({ componentMapper }) => {\n      const C =\n        typeof component === 'string' ? componentMapper[component] : component;\n      return <C {...props} />;\n    }}\n  </ToolbarContext.Consumer>\n);\n\nComponent.propTypes = {\n  component: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.element\n  ]).isRequired\n};\n\n/**\n * Render loop that renders all toolbar components based on its type\n * @param {Array} fields list of React components to be rendered\n */\nconst render = (fields) =>\n  fields.hidden\n    ? null\n    : fields.map(({ hidden, fields, key, ...field }) =>\n        hidden ? null : fields ? (\n          <Component key={key} {...field}>\n            {render(fields)}\n          </Component>\n        ) : (\n          <Component key={key} {...field} />\n        )\n      );\n\nconst ToolbarRenderer = ({ schema, componentMapper }) => (\n  <ToolbarContext.Provider value={{ render, componentMapper }}>\n    {render(schema.fields)}\n  </ToolbarContext.Provider>\n);\n\nToolbarRenderer.propTypes = {\n  schema: PropTypes.shape({\n    fields: PropTypes.array.isRequired\n  }).isRequired,\n  componentMapper: PropTypes.object\n};\n\nToolbarRenderer.defaultProps = {\n  componentMapper: toolbarMapper\n};\n\nexport default ToolbarRenderer;\n","import styled from 'styled-components';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst StyledLazyLoadImage = styled(LazyLoadImage)`\n  height: ${({ height, hidden }) => (hidden ? '0px' : `${height}px` || '40px')};\n  display: ${({ hidden }) => (hidden ? 'none' : 'inherit')};\n  float: ${({ hidden }) => (hidden ? 'left' : 'inherit')};\n  width: ${({ hidden }) => (hidden ? 0 : 'inherit')};\n`;\n\nexport default StyledLazyLoadImage;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\n\nimport { IconPlaceholder } from './loader-placeholders';\nimport CardIconDefault from '../../assets/images/card-icon-default.svg';\nimport StyledLazyLoadImage from '../styled-components/lazy-load-image';\n\nconst CardIconContainer = styled.div`\n  display: inline-block;\n  height: ${({ height }) => `${height}px`};\n`;\n\nconst CardIcon = ({ src, height, sourceId }) => {\n  const [isLoaded, setLoaded] = useState(false);\n  const [isUnknown, setUnknown] = useState(false);\n  const platformIconMapping = useSelector(\n    ({ platformReducer: { platformIconMapping } }) => platformIconMapping\n  );\n  const defaultIcon = sourceId\n    ? platformIconMapping[sourceId]\n    : CardIconDefault;\n\n  return (\n    <CardIconContainer height={height}>\n      {!isLoaded && <IconPlaceholder height={height} />}\n      <StyledLazyLoadImage\n        threshold={2000}\n        delayTime={0}\n        hidden={!isLoaded}\n        height={isLoaded ? height : 0}\n        onError={() => setUnknown(true)}\n        onLoad={() => setLoaded(true)}\n        src={!src || isUnknown ? defaultIcon : src}\n      />\n    </CardIconContainer>\n  );\n};\n\nCardIcon.propTypes = {\n  src: PropTypes.string,\n  platformId: PropTypes.string,\n  style: PropTypes.object,\n  height: PropTypes.number,\n  sourceId: PropTypes.string\n};\n\nCardIcon.defaultProps = {\n  style: {},\n  height: 40\n};\n\nexport default CardIcon;\n","import styled from 'styled-components';\n\nconst EllipsisTextContainer = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nexport default EllipsisTextContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ContentGalleryEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <div className=\"pf-u-mt-xl\">\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={Icon} />\n      <TextContent>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </TextContent>\n      <EmptyStateBody>\n        {description}\n        {renderDescription()}\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        {PrimaryAction && <PrimaryAction />}\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </div>\n);\n\nContentGalleryEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nContentGalleryEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default ContentGalleryEmptyState;\n\nexport const EmptyStatePrimaryAction = ({\n  url,\n  label,\n  hasPermission = false,\n  id\n}) =>\n  hasPermission && (\n    <CatalogLink id={id} pathname={url} preserveSearch>\n      <Button variant=\"primary\">{label}</Button>\n    </CatalogLink>\n  );\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  od: PropTypes.string\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Card, GalleryItem } from '@patternfly/react-core';\n\nexport const StyledCard = styled(Card)`\n  height: 330px;\n  position: relative;\n`;\n\nexport const StyledGalleryItem = styled(({ isDisabled, ...props }) => (\n  <GalleryItem {...props} />\n))`\n  position: relative;\n  ::after {\n    display: ${({ isDisabled }) => (isDisabled ? 'block' : 'none')};\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    content: '';\n    background-color: rgba(210, 210, 210, 0.5);\n    z-index: 1;\n    cursor: progress;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport { Text, TextVariants, Gallery } from '@patternfly/react-core';\n\nimport { CardLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst NoItems = () => (\n  <div>\n    <Text component={TextVariants.h1}>No items found</Text>\n  </div>\n);\n\nconst ContentGallery = ({ isLoading, items, renderEmptyState }) =>\n  isLoading ? (\n    <CardLoader />\n  ) : items.length === 0 ? (\n    renderEmptyState ? (\n      renderEmptyState()\n    ) : (\n      <NoItems />\n    )\n  ) : (\n    <Section type=\"content\">\n      <Gallery gutter=\"md\" className=\"content-gallery\">\n        {items}\n      </Gallery>\n    </Section>\n  );\n\nContentGallery.propTypes = {\n  isLoading: PropTypes.bool,\n  items: PropTypes.array,\n  renderEmptyState: PropTypes.func\n};\nexport default ContentGallery;\n","module.exports = __webpack_public_path__ + \"fonts/card-icon-default.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst CardPropText = styled.div`\n  overflow: hidden;\n`;\n\nconst ItemDetails = ({ toDisplay = [], ...item }) =>\n  toDisplay.map((prop) => (\n    <CardPropText key={`card-prop-${prop}`}>{item[prop]}</CardPropText>\n  ));\n\nItemDetails.propTypes = {\n  toDisplay: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.arrayOf(PropTypes.node)\n    ])\n  )\n};\n\nItemDetails.defaultProps = {\n  toDisplay: []\n};\n\nexport default ItemDetails;\n","import styled from 'styled-components';\nimport { CardBody } from '@patternfly/react-core';\n\nexport const StyledCardBody = styled(CardBody)`\n  height: 230px;\n  overflow: hidden;\n  padding: 0 !important;\n  margin: 0 24px 24px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    {children}\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","import { decodeState } from './uri-state-manager';\n\nconst useInitialUriHash = () => decodeState(window.location.hash.substring(1));\n\nexport default useInitialUriHash;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CardCheckbox = ({ handleCheck, isChecked, id }) => (\n  <Checkbox\n    onClick={(event) => event.stopPropagation()}\n    isChecked={isChecked}\n    onChange={handleCheck}\n    aria-label=\"card checkbox\"\n    id={id}\n  />\n);\n\nCardCheckbox.propTypes = {\n  handleCheck: propTypes.func,\n  isChecked: propTypes.bool,\n  id: propTypes.string\n};\n\nexport default CardCheckbox;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ItemDetails from './card-common';\nimport ConditionalLink from './conditional-link';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { StyledCardBody } from '../styled-components/card';\n\nconst ServiceOfferingCardBody = ({\n  name,\n  display_name,\n  distributor,\n  pathname,\n  searchParams,\n  preserveSearch,\n  portfolioName,\n  ...props\n}) => (\n  <StyledCardBody>\n    <TextContent>\n      <ConditionalLink\n        pathname={pathname}\n        searchParams={searchParams}\n        preserveSearch={preserveSearch}\n      >\n        <Text component={TextVariants.h3} title={name}>\n          <EllipsisTextContainer>{name}</EllipsisTextContainer>\n        </Text>\n      </ConditionalLink>\n      {distributor && <Text component={TextVariants.small}>{distributor}</Text>}\n      {portfolioName && (\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component=\"small\">\n            Portfolio\n          </Text>\n          <Text>{portfolioName}</Text>\n        </Fragment>\n      )}\n    </TextContent>\n    <ItemDetails\n      toDisplay={[props.description ? 'description' : 'long_description']}\n      {...props}\n    />\n  </StyledCardBody>\n);\n\nServiceOfferingCardBody.propTypes = {\n  name: PropTypes.string,\n  display_name: PropTypes.string,\n  distributor: PropTypes.string,\n  long_description: PropTypes.string,\n  description: PropTypes.string,\n  pathname: PropTypes.string,\n  preserveSearch: PropTypes.bool,\n  searchParams: PropTypes.shape({ [PropTypes.string]: PropTypes.string }),\n  portfolioName: PropTypes.string\n};\n\nexport default ServiceOfferingCardBody;\n","import { toolbarComponentTypes } from './toolbar-mapper';\n\nexport const createSingleItemGroup = ({\n  groupName,\n  hidden = false,\n  ...item\n}) => ({\n  component: toolbarComponentTypes.TOOLBAR_GROUP,\n  key: `${groupName}/single-toolbar-item-group`,\n  fields: hidden\n    ? []\n    : [\n        {\n          component: toolbarComponentTypes.TOOLBAR_ITEM,\n          key: `${groupName}/single-toolbar-item`,\n          fields: [item]\n        }\n      ]\n});\n\nexport const createLinkButton = ({ pathname, preserveSearch, ...item }) => ({\n  component: toolbarComponentTypes.LINK,\n  pathname,\n  preserveSearch,\n  key: `${item.key}/button-link`,\n  isDisabled: item.isDisabled,\n  fields: [\n    {\n      component: toolbarComponentTypes.BUTTON,\n      ...item\n    }\n  ]\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level } from '@patternfly/react-core';\n\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport CardCheckbox from '../../presentational-components/shared/card-checkbox';\nimport ServiceOfferingCardBody from '../../presentational-components/shared/service-offering-body';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../../presentational-components/styled-components/styled-gallery';\n\nconst PortfolioItem = (props) => (\n  <StyledGalleryItem isDisabled={props.removeInProgress && props.isSelected}>\n    <StyledCard>\n      <CardHeader className=\"card_header\">\n        <Level>\n          <CardIcon\n            src={`${CATALOG_API_BASE}/portfolio_items/${props.id}/icon`}\n            sourceId={props.service_offering_source_ref}\n          />\n          {props.isSelectable && (\n            <CardCheckbox\n              handleCheck={() => props.onSelect(props.id)}\n              isChecked={props.isSelected}\n              id={props.id}\n            />\n          )}\n        </Level>\n      </CardHeader>\n      <ServiceOfferingCardBody {...props} />\n      <CardFooter></CardFooter>\n    </StyledCard>\n  </StyledGalleryItem>\n);\n\nPortfolioItem.propTypes = {\n  id: PropTypes.string,\n  platformId: PropTypes.string,\n  service_offering_source_ref: PropTypes.string,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  orderUrl: PropTypes.string,\n  removeInProgress: PropTypes.bool,\n  portfolio_id: PropTypes.string,\n  metadata: PropTypes.shape({\n    user_capabilities: PropTypes.shape({ destroy: PropTypes.bool }).isRequired\n  }).isRequired\n};\n\nexport default PortfolioItem;\n","import { toolbarComponentTypes } from '../toolbar-mapper';\nimport { createSingleItemGroup } from '../helpers';\n\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nconst createPortfolioToolbarSchema = ({\n  meta,\n  fetchProducts,\n  isLoading,\n  filterProps: { searchValue, onFilterChange, placeholder }\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'products-top-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'products-toolbar-title',\n          title: 'Products',\n          description: 'All products collected from your portfolios',\n          noData: meta.noData\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'Products-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'main-portfolio-toolbar',\n                  fields: [\n                    createSingleItemGroup({\n                      groupName: 'filter-group',\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      key: 'filter-input',\n                      searchValue,\n                      onFilterChange,\n                      placeholder,\n                      isClearable: true\n                    })\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            key: 'products-pagination',\n                            meta,\n                            apiProps: searchValue,\n                            apiRequest: fetchProducts,\n                            isDisabled: isLoading,\n                            isCompact: true\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","import React, { useContext, useEffect, useReducer, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { WrenchIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport { fetchPortfolioItems } from '../../redux/actions/portfolio-actions';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport PortfolioItem from '../portfolio/portfolio-item';\nimport createProductsToolbarSchema from '../../toolbar/schemas/products-toolbar.schema';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport { Button } from '@patternfly/react-core';\nimport AppContext from '../../app-context';\nimport AsyncPagination from '../common/async-pagination';\nimport { PORTFOLIO_ITEM_ROUTE } from '../../constants/routes';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\n\nconst debouncedFilter = asyncFormValidator(\n  (value, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(fetchPortfolioItems(value, defaultSettings)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst buildItemLink = ({ portfolio_id, id, service_offering_source_ref }) => {\n  if (portfolio_id && id && service_offering_source_ref) {\n    return {\n      pathname: portfolio_id && PORTFOLIO_ITEM_ROUTE,\n      searchParams: {\n        portfolio: portfolio_id,\n        'portfolio-item': id,\n        source: service_offering_source_ref\n      }\n    };\n  }\n\n  return {};\n};\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst productsState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n  }\n\n  return state;\n};\n\nconst Products = () => {\n  const viewState = useInitialUriHash();\n  const { release } = useContext(AppContext);\n  const [{ isFetching, filterValue, isFiltering }, stateDispatch] = useReducer(\n    productsState,\n    {\n      ...initialState,\n      filterValue: viewState?.products?.filter || ''\n    }\n  );\n  const dispatch = useDispatch();\n  const { data, meta } = useSelector(\n    ({ portfolioReducer: { portfolioItems } }) => portfolioItems\n  );\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(\n        fetchPortfolioItems(viewState?.products?.filter, viewState?.products)\n      ),\n      dispatch(fetchPlatforms())\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n    insights.chrome.appNavClick({ id: 'products', secondaryNav: true });\n  }, []);\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(value, dispatch, (isFiltering) =>\n      stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  const galleryItems = data.map((item) => (\n    <PortfolioItem\n      key={item.id}\n      pathname={item.portfolio_id && PORTFOLIO_ITEM_ROUTE}\n      {...buildItemLink(item)}\n      {...item}\n      toDisplay={[]}\n    />\n  ));\n\n  const SourcesAction = () => (\n    <a href={`${release}settings/sources/new`}>\n      <Button variant=\"primary\">Add source</Button>\n    </a>\n  );\n\n  const FilterAction = () => (\n    <Button variant=\"link\" onClick={() => handleFilterItems('')}>\n      Clear all filters\n    </Button>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? SourcesAction : FilterAction,\n    title: meta.noData ? 'No products yet' : 'No results found',\n    description: meta.noData\n      ? 'Configure a source to add products into portfolios.'\n      : 'No results match the filter criteria. Remove all filters or clear all filters to show results.',\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createProductsToolbarSchema({\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterItems,\n            placeholder: 'Filter by product'\n          },\n          title: 'Products',\n          isLoading: isFiltering || isFetching,\n          meta,\n          fetchProducts: (...args) => dispatch(fetchPortfolioItems(...args))\n        })}\n      />\n      <ContentGallery\n        isLoading={isFiltering || isFetching}\n        items={galleryItems}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState {...emptyStateProps} />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiRequest={(_e, options) =>\n              dispatch(\n                fetchPortfolioItems(viewState?.products?.filter, options)\n              )\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Products;\n"],"sourceRoot":""}