{"version":3,"sources":["webpack:///./src/presentational-components/shared/filter-toolbar-item.js","webpack:///./src/toolbar/toolbar-mapper.js","webpack:///./src/utilities/use-enhanced-history.js","webpack:///./src/utilities/async-form-validator.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/styled-components/toolbars.js","webpack:///./src/redux/actions/portfolio-actions.js","webpack:///./src/presentational-components/shared/conditional-link.js","webpack:///./src/helpers/platform/platform-helper.js","webpack:///./src/redux/actions/platform-actions.js","webpack:///./src/smart-components/common/catalog-breadcrumbs.js","webpack:///./src/helpers/portfolio/portfolio-helper.js","webpack:///./src/presentational-components/shared/top-toolbar.js","webpack:///./src/presentational-components/shared/app-tabs.js","webpack:///./src/toolbar/toolbar-renderer.js","webpack:///./src/presentational-components/styled-components/lazy-load-image.js","webpack:///./src/presentational-components/shared/card-icon.js","webpack:///./src/presentational-components/styled-components/ellipsis-text-container.js","webpack:///./src/presentational-components/shared/content-gallery-empty-state.js","webpack:///./src/presentational-components/styled-components/styled-gallery.js","webpack:///./src/smart-components/content-gallery/content-gallery.js","webpack:///./src/assets/images/card-icon-default.svg","webpack:///./src/presentational-components/shared/card-common.js","webpack:///./src/presentational-components/styled-components/card.js","webpack:///./src/presentational-components/shared/card-checkbox.js","webpack:///./src/presentational-components/shared/service-offering-body.js","webpack:///./src/toolbar/helpers.js","webpack:///./src/smart-components/portfolio/portfolio-item.js","webpack:///./src/toolbar/schemas/products-toolbar.schema.js","webpack:///./src/smart-components/products/products.js"],"names":["FilterInputGroup","styled","div","FilterInput","TextInput","FilterIconsContainer","span","StyledCloseIcon","CloseIcon","StyledSearchIcon","SearchIcon","FilterToolbarItem","searchValue","onFilterChange","placeholder","isClearable","ToolbarItem","value","type","onChange","aria-label","width","height","onClick","propTypes","PropTypes","func","isRequired","string","bool","defaultProps","ToolbarButton","title","props","Button","toolbarMapper","TopToolbar","TopToolbarTitle","Toolbar","className","ToolbarGroup","Link","CatalogLink","Level","LevelItem","AppTabs","toolbarComponentTypes","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","TOOLBAR","TOOLBAR_ITEM","TOOLBAR_GROUP","FILTER_TOOLBAR_ITEM","LINK","BUTTON","LEVEL","LEVEL_ITEM","TABS","useEnhancedHistory","removeSearch","history","useHistory","push","target","split","search","undefined","removeSearchQuery","asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","isCompact","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","getNewPage","request","debouncePromise","direction","shape","any","StyledToolbar","TopToolbarWrapper","TopToolbarTitleContainer","doFetchPortfolios","defaultSettings","filter","ActionTypes","payload","PortfolioHelper","fetchPortfolios","args","dispatch","fetchPortfolioItems","fetchPortfolioItemsWithPortfolio","portfolioId","fetchSelectedPortfolio","id","addPortfolio","portfolioData","items","isDisabled","isTemporary","then","error","notifications","fulfilled","variant","description","name","addToPortfolio","updatePortfolio","getState","ADD_NOTIFICATION","dismissable","removePortfolio","removeProductsFromPortfolio","portfolioItems","portfolioName","portfolioReducer","selectedPortfolio","data","defaultMessage","values","length","undo","href","event","preventDefault","restoreData","CLEAR_NOTIFICATIONS","err","undoRemoveProductsFromPortfolio","copyPortfolio","portfolio","copyPortfolioItem","portfolioItemId","copyObject","newPortfolio","resetSelectedPortfolio","updatePortfolioItem","item","getPortfolioItemDetail","params","portfolioItem","source","ConditionalLink","children","pathname","oneOfType","node","arrayOf","axiosInstance","getAxiosInstance","graphqlInstance","getGraphqlInstance","getPlatforms","post","SOURCES_API_BASE","query","application_types","sources","getPlatform","platformId","get","getPlatformItems","filterQuery","TOPOLOGICAL_INVENTORY_API_BASE","getPlatformInventories","getServiceOffering","serviceOfferingId","sourceId","Promise","all","source_type_id","icon_url","service","fetchPlatforms","PlatformHelper","fetchPlatformItems","fetchSelectedPlatform","fetchPlatformInventories","fetchServiceOffering","CatalogBreadcrumbs","fragments","useSelector","breadcrumbsReducer","map","index","searchParams","nav","exact","key","isActive","portfolioApi","getPortfolioApi","portfolioItemApi","getPortfolioItemApi","listPortfolios","CATALOG_API_BASE","listPortfolioItems","portfolioReference","reduce","acc","curr","portfolio_id","Object","keys","join","portfolios","forEach","portfolioItemIndex","getPortfolioItem","getPortfolio","showPortfolio","getPortfolioItemsWithPortfolio","a","async","createPortfolio","createPortfolioItem","service_offering_ref","store","sanitizeValues","destroyPortfolio","removePortfolioItem","destroyPortfolioItem","removePortfolioItems","portfolioItemIds","itemId","restore_key","restoreKey","fetchPortfolioByName","restorePortfolioItems","unDeletePortfolioItem","postCopyPortfolio","postCopyPortfolioItem","uploadPortfolioItemIcon","file","iconId","FormData","append","patch","headers","accept","_boundary","status","object","notFound","getPortfolioFromState","find","paddingBottom","breadcrumbs","rest","breadcrumbsSpacing","noData","clsx","component","TextVariants","h2","p","tabItems","useLocation","activeTab","includes","activeKey","eventKey","onSelect","tabIndex","array","ToolbarContext","createContext","Component","Consumer","componentMapper","C","element","render","fields","hidden","field","ToolbarRenderer","schema","Provider","StyledLazyLoadImage","LazyLoadImage","CardIconContainer","CardIcon","src","useState","isLoaded","setLoaded","isUnknown","setUnknown","platformIconMapping","platformReducer","defaultIcon","CardIconDefault","threshold","delayTime","onError","onLoad","style","EllipsisTextContainer","ContentGalleryEmptyState","Icon","PrimaryAction","renderDescription","icon","h1","EmptyStatePrimaryAction","url","label","hasPermission","preserveSearch","StyledCard","Card","StyledGalleryItem","GalleryItem","NoItems","ContentGallery","isLoading","renderEmptyState","gutter","module","exports","CardPropText","ItemDetails","toDisplay","prop","StyledCardBody","CardBody","CardCheckbox","handleCheck","isChecked","stopPropagation","ServiceOfferingCardBody","distributor","display_name","h3","small","long_description","createSingleItemGroup","groupName","createLinkButton","PortfolioItem","removeInProgress","isSelected","service_offering_source_ref","isSelectable","orderUrl","createPortfolioToolbarSchema","fetchProducts","filterProps","debouncedFilter","asyncFormValidator","filteringCallback","initialState","filterValue","isOpen","isFetching","isFiltering","productsState","state","action","Products","release","useContext","AppContext","useReducer","stateDispatch","useDispatch","useEffect","scrollToTop","insights","chrome","appNavClick","secondaryNav","handleFilterItems","galleryItems","PORTFOLIO_ITEM_ROUTE","emptyStateProps","WrenchIcon","createProductsToolbarSchema","dropDirection"],"mappings":"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","file":"js/products.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterInputGroup = styled.div`\n  position: relative;\n  width: 300px;\n  height: 36px;\n`;\n\nconst FilterInput = styled(TextInput)`\n  position: absolute;\n  width: 300px;\n  background: transparent;\n`;\n\nconst FilterIconsContainer = styled.span`\n  position: absolute;\n  right: 8px;\n  top: 8px;\n`;\n\nconst StyledCloseIcon = styled(CloseIcon)`\n  z-index: 1000;\n  fill: #72767b;\n  :hover {\n    fill: var(--pf-global--Color--100);\n    cursor: pointer;\n  }\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  z-index: 1000;\n  fill: #72767b;\n`;\n\nconst FilterToolbarItem = ({\n  searchValue,\n  onFilterChange,\n  placeholder,\n  isClearable\n}) => (\n  <ToolbarItem>\n    <FilterInputGroup>\n      <FilterInput\n        placeholder={placeholder}\n        value={searchValue}\n        type=\"text\"\n        onChange={onFilterChange}\n        aria-label={placeholder}\n      />\n      <FilterIconsContainer>\n        {(isClearable && searchValue && (\n          <StyledCloseIcon\n            width=\"16\"\n            height=\"16\"\n            onClick={() => onFilterChange('')}\n          />\n        )) || <StyledSearchIcon />}\n      </FilterIconsContainer>\n    </FilterInputGroup>\n  </ToolbarItem>\n);\n\nFilterToolbarItem.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  searchValue: PropTypes.string,\n  isClearable: PropTypes.bool\n};\n\nFilterToolbarItem.defaultProps = {\n  searchValue: '',\n  isClearable: false\n};\n\nexport default FilterToolbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Level,\n  LevelItem,\n  ToolbarItem,\n  ToolbarGroup\n} from '@patternfly/react-core';\n\nimport FilterToolbarItem from '../presentational-components/shared/filter-toolbar-item';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../presentational-components/shared/top-toolbar';\nimport AppTabs from '../presentational-components/shared/app-tabs';\nimport CatalogLink from '../smart-components/common/catalog-link';\nimport { StyledToolbar } from '../presentational-components/styled-components/toolbars';\n\nconst ToolbarButton = ({ title, ...props }) => (\n  <Button {...props}>{title}</Button>\n);\n\nToolbarButton.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst AppToolbar = ({ ...props }) => (\n  <StyledToolbar className=\"pf-u-pr-lg\" {...props} />\n);\n\nconst toolbarMapper = {\n  TopToolbar,\n  TopToolbarTitle,\n  Toolbar: AppToolbar,\n  ToolbarGroup,\n  ToolbarItem,\n  FilterToolbarItem,\n  Link: CatalogLink,\n  Level,\n  LevelItem,\n  Button: ToolbarButton,\n  AppTabs\n};\n\nexport const toolbarComponentTypes = {\n  TOP_TOOLBAR: 'TopToolbar',\n  TOP_TOOLBAR_TITLE: 'TopToolbarTitle',\n  TOOLBAR: 'Toolbar',\n  TOOLBAR_ITEM: 'ToolbarItem',\n  TOOLBAR_GROUP: 'ToolbarGroup',\n  FILTER_TOOLBAR_ITEM: 'FilterToolbarItem',\n  LINK: 'Link',\n  BUTTON: 'Button',\n  LEVEL: 'Level',\n  LEVEL_ITEM: 'LevelItem',\n  TABS: 'AppTabs'\n};\n\nexport default toolbarMapper;\n","import { useHistory } from 'react-router-dom';\n\nconst removeSearchQuery = (target) => {\n  if (typeof target === 'string') {\n    return target.split('?')[0];\n  }\n\n  if (typeof target === 'object') {\n    return {\n      ...target,\n      search: undefined\n    };\n  }\n\n  return target;\n};\n\n/**\n * Wrapper around useHistory hook which adds aditional settings to standard history methods\n * @param {Boolean} removeSearch if true, using history navigation methods will remove search string from path\n */\nconst useEnhancedHistory = (removeSearch) => {\n  const history = useHistory();\n  return {\n    ...history,\n    push: (target) => {\n      if (removeSearch) {\n        return history.push(removeSearchQuery(target));\n      }\n\n      return history.push(target);\n    }\n  };\n};\n\nexport default useEnhancedHistory;\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import styled from 'styled-components';\nimport { Toolbar, Level } from '@patternfly/react-core';\n\nexport const StyledToolbar = styled(Toolbar)`\n  background-color: #ffffff;\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  position: relative;\n  top: 1px;\n`;\n\nexport const TopToolbarWrapper = styled.div`\n  background-color: #ffffff;\n  .pf-c-breadcrumb__item {\n    .active {\n      color: var(--pf-c-breadcrumb__item--Color);\n      text-decoration: none;\n      pointer-events: none;\n    }\n  }\n  h2 {\n    margin-bottom: 0 !important;\n  }\n  .top-toolbar-title {\n    min-width: 200px;\n  }\n  .top-toolbar-title-description {\n    word-break: break-word;\n  }\n`;\n\nexport const TopToolbarTitleContainer = styled(Level)`\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n  }\n`;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  ADD_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications/';\n\nimport * as ActionTypes from '../action-types';\nimport * as PortfolioHelper from '../../helpers/portfolio/portfolio-helper';\nimport { defaultSettings } from '../../helpers/shared/pagination';\n\nexport const doFetchPortfolios = ({\n  filter,\n  ...options\n} = defaultSettings) => ({\n  type: ActionTypes.FETCH_PORTFOLIOS,\n  meta: { filter },\n  payload: PortfolioHelper.listPortfolios(filter, options)\n});\n\nexport const fetchPortfolios = (...args) => (dispatch) => {\n  return dispatch(doFetchPortfolios(...args));\n};\n\nexport const fetchPortfolioItems = (\n  filter = '',\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS,\n  meta: { filter },\n  payload: PortfolioHelper.listPortfolioItems(\n    options.limit,\n    options.offset,\n    filter\n  )\n});\n\nexport const fetchPortfolioItem = (portfolioItemId) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEM,\n  payload: PortfolioHelper.getPortfolioItem(portfolioItemId)\n});\n\nexport const fetchPortfolioItemsWithPortfolio = (\n  portfolioId,\n  options = defaultSettings\n) => ({\n  type: ActionTypes.FETCH_PORTFOLIO_ITEMS_WITH_PORTFOLIO,\n  meta: { filter: options.filter },\n  payload: PortfolioHelper.getPortfolioItemsWithPortfolio(portfolioId, options)\n});\n\nexport const fetchSelectedPortfolio = (id) => ({\n  type: ActionTypes.FETCH_PORTFOLIO,\n  payload: PortfolioHelper.getPortfolio(id)\n});\n\nexport const searchPortfolioItems = (value) => ({\n  type: ActionTypes.FILTER_PORTFOLIO_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const addPortfolio = (portfolioData, items) => (dispatch) => {\n  dispatch({\n    type: ActionTypes.ADD_TEMPORARY_PORTFOLIO,\n    payload: { ...portfolioData, isDisabled: true, isTemporary: true }\n  });\n  return dispatch({\n    type: ActionTypes.ADD_PORTFOLIO,\n    payload: PortfolioHelper.addPortfolio(\n      {\n        ...portfolioData\n      },\n      items\n    )\n      .then(() => dispatch(doFetchPortfolios()))\n      .catch((error) => {\n        dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n        throw error;\n      }),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: 'Success adding portfolio',\n          description: `Portfolio ${portfolioData.name} was added successfully.`\n        }\n      }\n    }\n  });\n};\n\nexport const addToPortfolio = (portfolioId, items) => ({\n  type: ActionTypes.ADD_TO_PORTFOLIO,\n  payload: PortfolioHelper.addToPortfolio(portfolioId, items),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Success adding products',\n        description: 'Products were successfully added to portfolio.'\n      }\n    }\n  }\n});\n\nexport const updatePortfolio = (portfolioData) => (dispatch, getState) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO,\n    payload: portfolioData\n  });\n\n  return PortfolioHelper.updatePortfolio(portfolioData, { getState })\n    .then(() => dispatch(doFetchPortfolios()))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          dismissable: true,\n          variant: 'success',\n          title: 'Success updating portfolio',\n          description: 'The portfolio was updated successfully.'\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const removePortfolio = (portfolioId) => (dispatch) => {\n  dispatch({\n    type: ActionTypes.DELETE_TEMPORARY_PORTFOLIO,\n    payload: portfolioId\n  });\n  return dispatch({\n    type: ActionTypes.REMOVE_PORTFOLIO,\n    payload: PortfolioHelper.removePortfolio(portfolioId)\n      .then(() => dispatch(doFetchPortfolios()))\n      .catch((error) => {\n        dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_PREV_STATE });\n        throw error;\n      }),\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: 'Success removing portfolio',\n          description: 'The portfolio was removed successfully.'\n        }\n      }\n    }\n  });\n};\n\nexport const selectPortfolioItem = (portfolioItem) => ({\n  type: ActionTypes.SELECT_PORTFOLIO_ITEM,\n  payload: portfolioItem\n});\n\nexport const undoRemoveProductsFromPortfolio = (restoreData, portfolioId) => (\n  dispatch\n) => {\n  dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_PENDING` });\n  return PortfolioHelper.restorePortfolioItems(restoreData)\n    .then(() =>\n      dispatch({ type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .then(() => dispatch({ type: CLEAR_NOTIFICATIONS }))\n    .then(() => dispatch(fetchPortfolioItemsWithPortfolio(portfolioId)))\n    .then(() =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          dismissable: true,\n          title: 'Products have been restored'\n        }\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.RESTORE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const removeProductsFromPortfolio = (portfolioItems, portfolioName) => (\n  dispatch,\n  getState\n) => {\n  dispatch({\n    type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_PENDING`\n  });\n  const {\n    portfolioReducer: {\n      portfolioItems: { meta },\n      selectedPortfolio: { id: portfolioId }\n    }\n  } = getState();\n  return PortfolioHelper.removePortfolioItems(portfolioItems)\n    .then((data) =>\n      dispatch(\n        fetchPortfolioItemsWithPortfolio(portfolioId, {\n          offset: 0,\n          limit: meta.limit,\n          filter: ''\n        })\n      ).then(() => data)\n    )\n    .then((data) => {\n      return dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'Products removed',\n          dismissable: true,\n          description: (\n            <FormattedMessage\n              id=\"portfolio.remove-portfolio-items\"\n              defaultMessage={`You have removed {count, number} {count, plural,\n            one {product}\n            other {products}\n          } from the {portfolioName} portfolio. {undo} if this was a mistake.`}\n              values={{\n                count: portfolioItems.length,\n                portfolioName,\n                undo: (\n                  <a\n                    href=\"#\"\n                    onClick={(event) => {\n                      event.preventDefault();\n                      dispatch(\n                        undoRemoveProductsFromPortfolio(data, portfolioId)\n                      );\n                    }}\n                  >\n                    Undo\n                  </a>\n                )\n              }}\n            />\n          )\n        }\n      });\n    })\n    .then(() =>\n      dispatch({ type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_FULFILLED` })\n    )\n    .catch((err) =>\n      dispatch({\n        type: `${ActionTypes.REMOVE_PORTFOLIO_ITEMS}_REJECTED`,\n        payload: err\n      })\n    );\n};\n\nexport const copyPortfolio = (id) => (dispatch) => {\n  dispatch({ type: 'COPY_PORTFOLIO_PENDING' });\n  return PortfolioHelper.copyPortfolio(id)\n    .then((portfolio) => {\n      dispatch({ type: 'COPY_PORTFOLIO_FULFILLED' });\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a portfolio',\n          description: `${portfolio.name} has been copied.`,\n          dismissable: true\n        }\n      });\n      return portfolio;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_REJECTED', payload: err })\n    );\n};\n\nexport const copyPortfolioItem = (\n  portfolioItemId,\n  copyObject,\n  newPortfolio\n) => (dispatch) => {\n  return PortfolioHelper.copyPortfolioItem(portfolioItemId, copyObject)\n    .then((data) => {\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: 'You have successfully copied a product',\n          description: `${data.name} has been copied into ${newPortfolio.name}`,\n          dismissable: true\n        }\n      });\n      return data;\n    })\n    .catch((err) =>\n      dispatch({ type: 'COPY_PORTFOLIO_ITEM_REJECTED', payload: err })\n    );\n};\n\nexport const resetSelectedPortfolio = () => ({\n  type: ActionTypes.RESET_SELECTED_PORTFOLIO\n});\n\nexport const updatePortfolioItem = (values) => (dispatch, getState) => {\n  dispatch({\n    type: ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM,\n    payload: values\n  });\n  return PortfolioHelper.updatePortfolioItem(values, { getState })\n    .then(() => {\n      dispatch({ type: ActionTypes.UPDATE_PORTFOLIO_ITEM, payload: values });\n      return values;\n    })\n    .then((item) =>\n      dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n          variant: 'success',\n          title: `Portfolio item \"${item.name}\" was successfully updated`,\n          dismissable: true\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({ type: ActionTypes.RESTORE_PORTFOLIO_ITEM_PREV_STATE });\n      throw error;\n    })\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.UPDATE_TEMPORARY_PORTFOLIO_ITEM}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const getPortfolioItemDetail = (params) => (dispatch) => {\n  dispatch({ type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_PENDING` });\n  return PortfolioHelper.getPortfolioItemDetail(params).then(\n    ([portfolioItem, portfolio, source]) =>\n      dispatch({\n        type: `${ActionTypes.SELECT_PORTFOLIO_ITEM}_FULFILLED`,\n        payload: {\n          portfolioItem,\n          portfolio,\n          source\n        }\n      })\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ConditionalLink = ({ children, pathname, ...props }) =>\n  pathname ? (\n    <CatalogLink pathname={pathname} {...props}>\n      {children}\n    </CatalogLink>\n  ) : (\n    children\n  );\n\nConditionalLink.propTypes = {\n  pathname: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]).isRequired\n};\n\nexport default ConditionalLink;\n","import { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport {\n  TOPOLOGICAL_INVENTORY_API_BASE,\n  SOURCES_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nexport const getPlatforms = () => {\n  return graphqlInstance\n    .post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n    .then(({ data: { application_types } }) => application_types)\n    .then(([{ sources }]) => sources);\n};\n\nexport const getPlatform = (platformId) => {\n  return axiosInstance.get(`${SOURCES_API_BASE}/sources/${platformId}`);\n};\n\nexport const getPlatformItems = (platformId, filter, options) => {\n  const filterQuery = filter ? `&filter[name][contains_i]=${filter}` : '';\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_offerings?filter[archived_at][nil]${filterQuery}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings`\n    );\n  }\n};\n\nexport const getPlatformInventories = (\n  platformId,\n  filter = '',\n  options = defaultSettings\n) => {\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_inventories?filter[name][contains_i]=${filter}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_inventories?limit=${options.limit}&offset=${options.offset}`\n    );\n  }\n};\n\nexport const getServiceOffering = (serviceOfferingId, sourceId) =>\n  Promise.all([\n    axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings/${serviceOfferingId}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${sourceId}`)\n      .then((source) => {\n        return axiosInstance\n          .get(`${SOURCES_API_BASE}/source_types/${source.source_type_id}`)\n          .then(({ icon_url }) => ({\n            ...source,\n            icon_url\n          }));\n      })\n  ]).then(([service, source]) => ({\n    service,\n    source\n  }));\n","import * as ActionTypes from '../action-types';\nimport * as PlatformHelper from '../../helpers/platform/platform-helper';\n\nconst doFetchPlatforms = () => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_PLATFORMS}_PENDING` });\n  return PlatformHelper.getPlatforms()\n    .then((data) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_FULFILLED`,\n        payload: data\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchPlatforms = () => (dispatch) => dispatch(doFetchPlatforms());\n\nexport const fetchPlatformItems = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_ITEMS,\n  payload: PlatformHelper.getPlatformItems(platformId, filter, options),\n  meta: {\n    platformId,\n    filter,\n    ...options\n  }\n});\n\nexport const fetchMultiplePlatformItems = (platformsId) => {\n  const platformPromisses = platformsId.map((platformId) =>\n    PlatformHelper.getPlatformItems(platformId).then((data) => ({\n      [platformId]: data\n    }))\n  );\n  return {\n    type: ActionTypes.FETCH_MULTIPLE_PLATFORM_ITEMS,\n    payload: Promise.all(platformPromisses).then((data) =>\n      data.reduce(\n        (acc, curr) => ({\n          ...acc,\n          ...curr\n        }),\n        {}\n      )\n    )\n  };\n};\n\nexport const fetchSelectedPlatform = (id) => ({\n  type: ActionTypes.FETCH_PLATFORM,\n  payload: PlatformHelper.getPlatform(id)\n});\n\nexport const searchPlatformItems = (value) => ({\n  type: ActionTypes.FILTER_PLATFORM_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const fetchPlatformInventories = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_INVENTORIES,\n  payload: PlatformHelper.getPlatformInventories(platformId, filter, options)\n});\n\nexport const fetchServiceOffering = (...args) => ({\n  type: ActionTypes.FETCH_SERVICE_OFFERING,\n  payload: PlatformHelper.getServiceOffering(...args)\n});\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\nimport ConditionalLink from '../../presentational-components/shared/conditional-link';\n\nconst CatalogBreadcrumbs = () => {\n  const fragments = useSelector(\n    ({ breadcrumbsReducer: { fragments } }) => fragments\n  );\n  if (fragments.length <= 1) {\n    return null;\n  }\n\n  return (\n    <Breadcrumb>\n      {fragments.map(({ title, pathname, searchParams }, index) => (\n        <ConditionalLink\n          pathname={!(fragments.length === index + 1) ? pathname : undefined}\n          searchParams={searchParams}\n          nav\n          exact\n          key={pathname}\n          className=\"pf-c-breadcrumb__item\"\n        >\n          <BreadcrumbItem isActive={fragments.length === index + 1}>\n            {title}\n          </BreadcrumbItem>\n        </ConditionalLink>\n      ))}\n    </Breadcrumb>\n  );\n};\n\nexport default CatalogBreadcrumbs;\n","import {\n  getAxiosInstance,\n  getPortfolioApi,\n  getPortfolioItemApi\n} from '../shared/user-login';\nimport { CATALOG_API_BASE, SOURCES_API_BASE } from '../../utilities/constants';\nimport { sanitizeValues } from '../shared/helpers';\nimport { defaultSettings } from '../shared/pagination';\n\nconst axiosInstance = getAxiosInstance();\nconst portfolioApi = getPortfolioApi();\nconst portfolioItemApi = getPortfolioItemApi();\n\nexport function listPortfolios(\n  filter = '',\n  { limit, offset } = defaultSettings\n) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n}\n\nexport function listPortfolioItems(limit = 50, offset = 0, filter = '') {\n  return axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n    )\n    .then((portfolioItems) => {\n      const portfolioReference = portfolioItems.data.reduce(\n        (acc, curr, index) =>\n          curr.portfolio_id\n            ? {\n                ...acc,\n                [curr.portfolio_id]: acc[curr.portfolio_id]\n                  ? [...acc[curr.portfolio_id], index]\n                  : [index]\n              }\n            : acc,\n        {}\n      );\n      return axiosInstance\n        .get(\n          `${CATALOG_API_BASE}/portfolios?${Object.keys(portfolioReference)\n            .map((id) => `filter[id][]=${id}`)\n            .join('&')}`\n        )\n        .then(({ data }) => ({\n          portfolioItems,\n          portfolioReference,\n          portfolios: data\n        }));\n    })\n    .then(({ portfolioItems, portfolioReference, portfolios }) => {\n      portfolios.forEach(({ id, name }) =>\n        portfolioReference[id].forEach((portfolioItemIndex) => {\n          portfolioItems.data[portfolioItemIndex].portfolioName = name;\n        })\n      );\n      return portfolioItems;\n    });\n}\n\nexport function getPortfolioItem(portfolioItemId) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}`\n  );\n}\n\nexport function getPortfolio(portfolioId) {\n  return portfolioApi.showPortfolio(portfolioId);\n}\n\nexport function getPortfolioItemsWithPortfolio(\n  portfolioId,\n  { limit, offset, filter = '' } = defaultSettings\n) {\n  return axiosInstance.get(\n    `${CATALOG_API_BASE}/portfolios/${portfolioId}/portfolio_items?filter[name][contains_i]=${filter}&limit=${limit}&offset=${offset}`\n  );\n}\n\n// TO DO - change to use the API call that adds multiple items to a portfolio when available\nexport async function addPortfolio(portfolioData, items) {\n  let portfolio = await portfolioApi.createPortfolio(portfolioData);\n  if (!portfolio) {\n    return portfolio;\n  }\n\n  if (items && items.length > 0) {\n    return addToPortfolio(portfolio, items);\n  }\n}\n\nexport async function addToPortfolio(portfolioId, items) {\n  return Promise.all(\n    items.map((item) =>\n      portfolioItemApi.createPortfolioItem({\n        portfolio_id: portfolioId,\n        service_offering_ref: item\n      })\n    )\n  );\n}\n\nexport async function updatePortfolio({ id, ...portfolioData }, store) {\n  return await portfolioApi.updatePortfolio(\n    id,\n    sanitizeValues(portfolioData, 'Portfolio', store)\n  );\n}\n\nexport async function removePortfolio(portfolioId) {\n  await portfolioApi.destroyPortfolio(portfolioId);\n}\n\nexport async function removePortfolioItem(portfolioItemId) {\n  return portfolioItemApi.destroyPortfolioItem(portfolioItemId);\n}\n\nexport async function removePortfolioItems(portfolioItemIds) {\n  return Promise.all(\n    portfolioItemIds.map(async (itemId) => {\n      const { restore_key } = await removePortfolioItem(itemId);\n      return {\n        portfolioItemId: itemId,\n        restoreKey: restore_key\n      };\n    })\n  );\n}\n\nexport function fetchProviderControlParameters(portfolioItemId) {\n  return axiosInstance\n    .get(\n      `${CATALOG_API_BASE}/portfolio_items/${portfolioItemId}/provider_control_parameters`\n    )\n    .then((data) => ({\n      required: [],\n      ...data,\n      properties: {\n        ...data.properties,\n        namespace: {\n          ...data.properties.namespace,\n          enum: Array.from(new Set([...data.properties.namespace.enum]))\n        }\n      }\n    }));\n}\n\nexport async function updatePortfolioItem({ id, ...portfolioItem }, store) {\n  return await portfolioItemApi.updatePortfolioItem(\n    id,\n    sanitizeValues(portfolioItem, 'PortfolioItem', store)\n  );\n}\n\nexport function fetchPortfolioByName(name = '') {\n  return axiosInstance.get(`${CATALOG_API_BASE}/portfolios`, {\n    params: {\n      filter: {\n        name\n      }\n    }\n  });\n}\n\nexport const restorePortfolioItems = (restoreData) =>\n  Promise.all(\n    restoreData.map(({ portfolioItemId, restoreKey }) =>\n      portfolioItemApi.unDeletePortfolioItem(portfolioItemId, {\n        restore_key: restoreKey\n      })\n    )\n  );\n\nexport const copyPortfolio = (portfolioId) =>\n  portfolioApi.postCopyPortfolio(portfolioId);\n\nexport const copyPortfolioItem = (portfolioItemId, copyObject = {}) =>\n  portfolioItemApi.postCopyPortfolioItem(portfolioItemId, copyObject);\n\nexport const uploadPortfolioItemIcon = (portfolioItemId, file, iconId) => {\n  let data = new FormData();\n  data.append('content', file, file.name);\n  if (iconId) {\n    return axiosInstance.patch(`${CATALOG_API_BASE}/icons/${iconId}`, data);\n  }\n\n  data.append('portfolio_item_id', portfolioItemId);\n  return axiosInstance.post(`${CATALOG_API_BASE}/icons`, data, {\n    headers: {\n      accept: 'application/json',\n      'Content-Type': `multipart/form-data; boundary=${data._boundary}`\n    }\n  });\n};\n\nexport const getPortfolioItemDetail = (params) =>\n  Promise.all([\n    axiosInstance.get(\n      `${CATALOG_API_BASE}/portfolio_items/${params.portfolioItem}`\n    ),\n    axiosInstance.get(`${CATALOG_API_BASE}/portfolios/${params.portfolio}`),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${params.source}`)\n      .catch((error) => {\n        if (error.status === 404) {\n          return {\n            object: 'platform',\n            notFound: true\n          };\n        }\n\n        throw error;\n      })\n  ]);\n\nexport const getPortfolioFromState = (portfolioReducer, portfolioId) =>\n  portfolioReducer.selectedPortfolio &&\n  portfolioReducer.selectedPortfolio.id === portfolioId\n    ? portfolioReducer.selectedPortfolio\n    : portfolioReducer.portfolios.data.find(({ id }) => id === portfolioId);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  LevelItem,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport clsx from 'clsx';\nimport { ToolbarTitlePlaceholder } from './loader-placeholders';\nimport CatalogBreadcrumbs from '../../smart-components/common/catalog-breadcrumbs';\nimport {\n  TopToolbarWrapper,\n  TopToolbarTitleContainer\n} from '../styled-components/toolbars';\n\nconst TopToolbar = ({\n  children,\n  paddingBottom,\n  breadcrumbs,\n  breadcrumbsSpacing,\n  ...rest\n}) => (\n  <TopToolbarWrapper\n    className={`pf-u-pt-lg pf-u-pr-lg pf-u-pl-lg ${\n      paddingBottom ? 'pf-u-pb-lg' : ''\n    }`}\n    {...rest}\n  >\n    {breadcrumbs && (\n      <div className=\"pf-u-mb-md\">\n        {' '}\n        <CatalogBreadcrumbs />\n      </div>\n    )}\n    {children}\n  </TopToolbarWrapper>\n);\n\nTopToolbar.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  paddingBottom: PropTypes.bool,\n  breadcrumbs: PropTypes.bool,\n  breadcrumbsSpacing: PropTypes.bool\n};\n\nTopToolbar.defaultProps = {\n  paddingBottom: true,\n  breadcrumbs: true\n};\n\nexport default TopToolbar;\n\nexport const TopToolbarTitle = ({\n  title,\n  description,\n  children,\n  noData,\n  ...rest\n}) => (\n  <Fragment>\n    <TopToolbarTitleContainer\n      className={clsx({\n        'pf-u-mb-lg': !noData\n      })}\n      {...rest}\n    >\n      <LevelItem>\n        <TextContent className=\"top-toolbar-title\">\n          <Text component={TextVariants.h2} className=\"pf-u-m-0 pf-u-mr-md\">\n            {title}\n          </Text>\n          {description && (\n            <Text\n              className=\"top-toolbar-title-description\"\n              component={TextVariants.p}\n            >\n              {description}\n            </Text>\n          )}\n        </TextContent>\n      </LevelItem>\n      {children}\n    </TopToolbarTitleContainer>\n  </Fragment>\n);\n\nTopToolbarTitle.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ]),\n  noData: PropTypes.bool\n};\n\nTopToolbarTitle.defaultProps = {\n  title: <ToolbarTitlePlaceholder />\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation } from 'react-router-dom';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nconst AppTabs = ({ tabItems }) => {\n  const { push } = useEnhancedHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (_event, tabIndex) =>\n    push({ pathname: tabItems[tabIndex].name, search });\n\n  return (\n    <Tabs\n      activeKey={activeTab ? activeTab.eventKey : 0}\n      onSelect={handleTabClick}\n    >\n      {tabItems.map((item) => (\n        <Tab\n          title={item.title}\n          key={item.eventKey}\n          eventKey={item.eventKey}\n          name={item.name}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nAppTabs.propTypes = {\n  tabItems: PropTypes.array.isRequired\n};\n\nexport default AppTabs;\n","import React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport toolbarMapper from './toolbar-mapper';\n\nconst ToolbarContext = createContext();\n\nconst Component = ({ component, ...props }) => (\n  <ToolbarContext.Consumer>\n    {({ componentMapper }) => {\n      const C =\n        typeof component === 'string' ? componentMapper[component] : component;\n      return <C {...props} />;\n    }}\n  </ToolbarContext.Consumer>\n);\n\nComponent.propTypes = {\n  component: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.element\n  ]).isRequired\n};\n\n/**\n * Render loop that renders all toolbar components based on its type\n * @param {Array} fields list of React components to be rendered\n */\nconst render = (fields) =>\n  fields.hidden\n    ? null\n    : fields.map(({ fields, key, ...field }) =>\n        fields ? (\n          <Component key={key} {...field}>\n            {render(fields)}\n          </Component>\n        ) : (\n          <Component key={key} {...field} />\n        )\n      );\n\nconst ToolbarRenderer = ({ schema, componentMapper }) => (\n  <ToolbarContext.Provider value={{ render, componentMapper }}>\n    {render(schema.fields)}\n  </ToolbarContext.Provider>\n);\n\nToolbarRenderer.propTypes = {\n  schema: PropTypes.shape({\n    fields: PropTypes.array.isRequired\n  }).isRequired,\n  componentMapper: PropTypes.object\n};\n\nToolbarRenderer.defaultProps = {\n  componentMapper: toolbarMapper\n};\n\nexport default ToolbarRenderer;\n","import styled from 'styled-components';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst StyledLazyLoadImage = styled(LazyLoadImage)`\n  height: ${({ height, hidden }) => (hidden ? '0px' : `${height}px` || '40px')};\n  display: ${({ hidden }) => (hidden ? 'none' : 'inherit')};\n  float: ${({ hidden }) => (hidden ? 'left' : 'inherit')};\n  width: ${({ hidden }) => (hidden ? 0 : 'inherit')};\n`;\n\nexport default StyledLazyLoadImage;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\n\nimport { IconPlaceholder } from './loader-placeholders';\nimport CardIconDefault from '../../assets/images/card-icon-default.svg';\nimport StyledLazyLoadImage from '../styled-components/lazy-load-image';\n\nconst CardIconContainer = styled.div`\n  display: inline-block;\n  height: ${({ height }) => `${height}px`};\n`;\n\nconst CardIcon = ({ src, height, sourceId }) => {\n  const [isLoaded, setLoaded] = useState(false);\n  const [isUnknown, setUnknown] = useState(false);\n  const platformIconMapping = useSelector(\n    ({ platformReducer: { platformIconMapping } }) => platformIconMapping\n  );\n  const defaultIcon = sourceId\n    ? platformIconMapping[sourceId]\n    : CardIconDefault;\n\n  return (\n    <CardIconContainer height={height}>\n      {!isLoaded && <IconPlaceholder height={height} />}\n      <StyledLazyLoadImage\n        threshold={2000}\n        delayTime={0}\n        hidden={!isLoaded}\n        height={isLoaded ? height : 0}\n        onError={() => setUnknown(true)}\n        onLoad={() => setLoaded(true)}\n        src={!src || isUnknown ? defaultIcon : src}\n      />\n    </CardIconContainer>\n  );\n};\n\nCardIcon.propTypes = {\n  src: PropTypes.string,\n  platformId: PropTypes.string,\n  style: PropTypes.object,\n  height: PropTypes.number,\n  sourceId: PropTypes.string\n};\n\nCardIcon.defaultProps = {\n  style: {},\n  height: 40\n};\n\nexport default CardIcon;\n","import styled from 'styled-components';\n\nconst EllipsisTextContainer = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nexport default EllipsisTextContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Text,\n  TextContent,\n  TextVariants\n} from '@patternfly/react-core';\nimport CatalogLink from '../../smart-components/common/catalog-link';\n\nconst ContentGalleryEmptyState = ({\n  title,\n  Icon,\n  description,\n  PrimaryAction,\n  renderDescription\n}) => (\n  <div className=\"pf-u-mt-xl\">\n    <EmptyState className=\"pf-u-ml-auto pf-u-mr-auto\">\n      <EmptyStateIcon icon={Icon} />\n      <TextContent>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </TextContent>\n      <EmptyStateBody>\n        {description}\n        {renderDescription()}\n      </EmptyStateBody>\n      <EmptyStateSecondaryActions>\n        {PrimaryAction && <PrimaryAction />}\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </div>\n);\n\nContentGalleryEmptyState.defaultProps = {\n  renderDescription: () => null\n};\n\nContentGalleryEmptyState.propTypes = {\n  title: PropTypes.string.isRequired,\n  Icon: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  PrimaryAction: PropTypes.any,\n  renderDescription: PropTypes.func\n};\n\nexport default ContentGalleryEmptyState;\n\nexport const EmptyStatePrimaryAction = ({\n  url,\n  label,\n  hasPermission = false\n}) =>\n  hasPermission && (\n    <CatalogLink pathname={url} preserveSearch>\n      <Button variant=\"primary\">{label}</Button>\n    </CatalogLink>\n  );\n\nEmptyStatePrimaryAction.propTypes = {\n  url: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\n","import styled from 'styled-components';\nimport { Card, GalleryItem } from '@patternfly/react-core';\n\nexport const StyledCard = styled(Card)`\n  height: 330px;\n  position: relative;\n`;\n\nexport const StyledGalleryItem = styled(GalleryItem)`\n  position: relative;\n  ::after {\n    display: ${({ isDisabled }) => (isDisabled ? 'block' : 'none')};\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    content: '';\n    background-color: rgba(210, 210, 210, 0.5);\n    z-index: 1;\n    cursor: progress;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\nimport { Text, TextVariants, Gallery } from '@patternfly/react-core';\n\nimport { CardLoader } from '../../presentational-components/shared/loader-placeholders';\n\nconst NoItems = () => (\n  <div>\n    <Text component={TextVariants.h1}>No items found</Text>\n  </div>\n);\n\nconst ContentGallery = ({ isLoading, items, renderEmptyState }) =>\n  isLoading ? (\n    <CardLoader />\n  ) : items.length === 0 ? (\n    renderEmptyState ? (\n      renderEmptyState()\n    ) : (\n      <NoItems />\n    )\n  ) : (\n    <Section type=\"content\">\n      <Gallery gutter=\"md\" className=\"content-gallery\">\n        {items}\n      </Gallery>\n    </Section>\n  );\n\nContentGallery.propTypes = {\n  isLoading: PropTypes.bool,\n  items: PropTypes.array,\n  renderEmptyState: PropTypes.func\n};\nexport default ContentGallery;\n","module.exports = __webpack_public_path__ + \"fonts/card-icon-default.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst CardPropText = styled.div`\n  overflow: hidden;\n`;\n\nconst ItemDetails = ({ toDisplay = [], ...item }) =>\n  toDisplay.map((prop) => (\n    <CardPropText key={`card-prop-${prop}`}>{item[prop]}</CardPropText>\n  ));\n\nItemDetails.propTypes = {\n  toDisplay: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.node,\n      PropTypes.arrayOf(PropTypes.node)\n    ])\n  )\n};\n\nItemDetails.defaultProps = {\n  toDisplay: []\n};\n\nexport default ItemDetails;\n","import styled from 'styled-components';\nimport { CardBody } from '@patternfly/react-core';\n\nexport const StyledCardBody = styled(CardBody)`\n  height: 230px;\n  overflow: hidden;\n  padding: 0;\n  margin: 0 24px 24px;\n`;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CardCheckbox = ({ handleCheck, isChecked, id }) => (\n  <Checkbox\n    onClick={(event) => event.stopPropagation()}\n    isChecked={isChecked}\n    onChange={handleCheck}\n    aria-label=\"card checkbox\"\n    id={id}\n  />\n);\n\nCardCheckbox.propTypes = {\n  handleCheck: propTypes.func,\n  isChecked: propTypes.bool,\n  id: propTypes.string\n};\n\nexport default CardCheckbox;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ItemDetails from './card-common';\nimport ConditionalLink from './conditional-link';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { StyledCardBody } from '../styled-components/card';\n\nconst ServiceOfferingCardBody = ({\n  name,\n  display_name,\n  distributor,\n  pathname,\n  searchParams,\n  preserveSearch,\n  portfolioName,\n  ...props\n}) => (\n  <StyledCardBody>\n    <TextContent>\n      <ConditionalLink\n        pathname={pathname}\n        searchParams={searchParams}\n        preserveSearch={preserveSearch}\n      >\n        <Text component={TextVariants.h3} title={name}>\n          <EllipsisTextContainer>{name}</EllipsisTextContainer>\n        </Text>\n      </ConditionalLink>\n      {distributor && <Text component={TextVariants.small}>{distributor}</Text>}\n      {portfolioName && (\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component=\"small\">\n            Portfolio\n          </Text>\n          <Text>{portfolioName}</Text>\n        </Fragment>\n      )}\n    </TextContent>\n    <ItemDetails\n      toDisplay={[props.description ? 'description' : 'long_description']}\n      {...props}\n    />\n  </StyledCardBody>\n);\n\nServiceOfferingCardBody.propTypes = {\n  name: PropTypes.string,\n  display_name: PropTypes.string,\n  distributor: PropTypes.string,\n  long_description: PropTypes.string,\n  description: PropTypes.string,\n  pathname: PropTypes.string,\n  preserveSearch: PropTypes.bool,\n  searchParams: PropTypes.shape({ [PropTypes.string]: PropTypes.string }),\n  portfolioName: PropTypes.string\n};\n\nexport default ServiceOfferingCardBody;\n","import { toolbarComponentTypes } from './toolbar-mapper';\n\nexport const createSingleItemGroup = ({\n  groupName,\n  hidden = false,\n  ...item\n}) => ({\n  component: toolbarComponentTypes.TOOLBAR_GROUP,\n  key: `${groupName}/single-toolbar-item-group`,\n  fields: hidden\n    ? []\n    : [\n        {\n          component: toolbarComponentTypes.TOOLBAR_ITEM,\n          key: `${groupName}/single-toolbar-item`,\n          fields: [item]\n        }\n      ]\n});\n\nexport const createLinkButton = ({ pathname, preserveSearch, ...item }) => ({\n  component: toolbarComponentTypes.LINK,\n  pathname,\n  preserveSearch,\n  key: `${item.key}/button-link`,\n  isDisabled: item.isDisabled,\n  fields: [\n    {\n      component: toolbarComponentTypes.BUTTON,\n      ...item\n    }\n  ]\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level } from '@patternfly/react-core';\n\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport CardCheckbox from '../../presentational-components/shared/card-checkbox';\nimport ServiceOfferingCardBody from '../../presentational-components/shared/service-offering-body';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../../presentational-components/styled-components/styled-gallery';\n\nconst PortfolioItem = (props) => (\n  <StyledGalleryItem isDisabled={props.removeInProgress && props.isSelected}>\n    <StyledCard>\n      <CardHeader className=\"card_header\">\n        <Level>\n          <CardIcon\n            src={`${CATALOG_API_BASE}/portfolio_items/${props.id}/icon`}\n            sourceId={props.service_offering_source_ref}\n          />\n          {props.isSelectable && (\n            <CardCheckbox\n              handleCheck={() => props.onSelect(props.id)}\n              isChecked={props.isSelected}\n              id={props.id}\n            />\n          )}\n        </Level>\n      </CardHeader>\n      <ServiceOfferingCardBody {...props} />\n      <CardFooter></CardFooter>\n    </StyledCard>\n  </StyledGalleryItem>\n);\n\nPortfolioItem.propTypes = {\n  id: PropTypes.string,\n  platformId: PropTypes.string,\n  service_offering_source_ref: PropTypes.string,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  orderUrl: PropTypes.string,\n  removeInProgress: PropTypes.bool,\n  portfolio_id: PropTypes.string\n};\n\nexport default PortfolioItem;\n","import { toolbarComponentTypes } from '../toolbar-mapper';\nimport { createSingleItemGroup } from '../helpers';\n\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nconst createPortfolioToolbarSchema = ({\n  meta,\n  fetchProducts,\n  isLoading,\n  filterProps: { searchValue, onFilterChange, placeholder }\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'products-top-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'products-toolbar-title',\n          title: 'Products',\n          description: 'All products collected from your portfolios',\n          noData: meta.noData\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'Products-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'main-portfolio-toolbar',\n                  fields: [\n                    createSingleItemGroup({\n                      groupName: 'filter-group',\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      key: 'filter-input',\n                      searchValue,\n                      onFilterChange,\n                      placeholder,\n                      isClearable: true\n                    })\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            key: 'products-pagination',\n                            meta,\n                            apiProps: searchValue,\n                            apiRequest: fetchProducts,\n                            isDisabled: isLoading,\n                            isCompact: true\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","import React, { useContext, useEffect, useReducer } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { WrenchIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport { fetchPortfolioItems } from '../../redux/actions/portfolio-actions';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport PortfolioItem from '../portfolio/portfolio-item';\nimport createProductsToolbarSchema from '../../toolbar/schemas/products-toolbar.schema';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport { Button } from '@patternfly/react-core';\nimport AppContext from '../../app-context';\nimport AsyncPagination from '../common/async-pagination';\nimport { PORTFOLIO_ITEM_ROUTE } from '../../constants/routes';\n\nconst debouncedFilter = asyncFormValidator(\n  (value, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(fetchPortfolioItems(value, defaultSettings)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst buildItemLink = ({ portfolio_id, id, service_offering_source_ref }) => {\n  if (portfolio_id && id && service_offering_source_ref) {\n    return {\n      pathname: portfolio_id && PORTFOLIO_ITEM_ROUTE,\n      searchParams: {\n        portfolio: portfolio_id,\n        'portfolio-item': id,\n        source: service_offering_source_ref\n      }\n    };\n  }\n\n  return {};\n};\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst productsState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n  }\n\n  return state;\n};\n\nconst Products = () => {\n  const { release } = useContext(AppContext);\n  const [{ isFetching, filterValue, isFiltering }, stateDispatch] = useReducer(\n    productsState,\n    initialState\n  );\n  const dispatch = useDispatch();\n  const { data, meta } = useSelector(\n    ({ portfolioReducer: { portfolioItems } }) => portfolioItems\n  );\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(fetchPortfolioItems(undefined, defaultSettings)),\n      dispatch(fetchPlatforms())\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n    insights.chrome.appNavClick({ id: 'products', secondaryNav: true });\n  }, []);\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(value, dispatch, (isFiltering) =>\n      stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  const galleryItems = data.map((item) => (\n    <PortfolioItem\n      key={item.id}\n      pathname={item.portfolio_id && PORTFOLIO_ITEM_ROUTE}\n      {...buildItemLink(item)}\n      {...item}\n      toDisplay={[]}\n    />\n  ));\n\n  const SourcesAction = () => (\n    <a href={`${release}settings/sources/new`}>\n      <Button variant=\"primary\">Add source</Button>\n    </a>\n  );\n\n  const FilterAction = () => (\n    <Button variant=\"link\" onClick={() => handleFilterItems('')}>\n      Clear all filters\n    </Button>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? SourcesAction : FilterAction,\n    title: meta.noData ? 'No products yet' : 'No results found',\n    description: meta.noData\n      ? 'Configure a source to add products into portfolios.'\n      : 'No results match the filter criteria. Remove all filters or clear all filters to show results.',\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n\n  return (\n    <div>\n      <ToolbarRenderer\n        schema={createProductsToolbarSchema({\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterItems,\n            placeholder: 'Filter by product...'\n          },\n          title: 'Products',\n          isLoading: isFiltering || isFetching,\n          meta,\n          fetchProducts: (...args) => dispatch(fetchPortfolioItems(...args))\n        })}\n      />\n      <ContentGallery\n        isLoading={isFiltering || isFetching}\n        items={galleryItems}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState {...emptyStateProps} />\n        )}\n      />\n      {meta.count > 0 && (\n        <div className=\"pf-u-p-lg global-primary-background content-layout\">\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiRequest={(...args) => dispatch(fetchPortfolioItems(...args))}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Products;\n"],"sourceRoot":""}