{"version":3,"file":"js/order-details.1639422896596.96f533918d496bca4686.js","mappings":"0PAoHA,QAzF0C,WACxC,IAAMA,GAAgB,SAChB,GAMF,SACF,SAAC,GAAsC,OAAT,8BAN9BC,EAAK,QACLC,EAAQ,WACRC,EAAgB,mBAChBC,EAAS,YACTC,EAAS,YAKX,OACE,kBAAC,EAAAC,KAAI,CAACC,WAAS,GACb,kBAAC,EAAAC,SAAQ,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC3B,kBAAC,EAAAC,MAAK,CAACL,WAAS,GACd,kBAAC,EAAAM,UAAS,KACR,kBAAC,EAAAC,KAAI,KACH,kBAAC,EAAAC,SAAQ,KACP,kBAAC,EAAAC,YAAW,KACV,kBAAC,EAAAC,KAAI,CAACC,UAAU,aAAaC,UAAW,EAAAC,aAAA,IACrCpB,EAAc,mBAEjB,kBAAC,EAAAqB,SAAQ,CAACF,UAAW,EAAAG,iBAAA,IACnB,kBAAC,EAAAC,aAAY,CAACJ,UAAW,EAAAK,qBAAA,IACtBxB,EAAc,cAEjB,kBAAC,EAAAuB,aAAY,CAACJ,UAAW,EAAAK,qBAAA,IACtBvB,EAAMwB,IAET,kBAAC,EAAAF,aAAY,CAACJ,UAAW,EAAAK,qBAAA,IACtBxB,EAAc,cAEjB,kBAAC,EAAAuB,aAAY,CAACJ,UAAW,EAAAK,qBAAA,IACvB,kBAAC,IAAU,CAACE,KAAMzB,EAAM0B,WAAYC,QAAQ,cAE9C,kBAAC,EAAAL,aAAY,CAACJ,UAAW,EAAAK,qBAAA,IACtBxB,EAAc,gBAEjB,kBAAC,EAAAuB,aAAY,CAACJ,UAAW,EAAAK,qBAAA,IACtBpB,MAAAA,OAAS,EAATA,EAAWyB,MAEd,kBAAC,EAAAN,aAAY,CAACJ,UAAW,EAAAK,qBAAA,IACtBxB,EAAc,eAEjB,kBAAC,EAAAuB,aAAY,CAACJ,UAAW,EAAAK,qBAAA,KACtBtB,MAAAA,OAAQ,EAARA,EAAU2B,YAAQC,QAO/B,kBAAC,EAAAjB,UAAS,KACR,kBAAC,EAAAC,KAAI,KACH,kBAAC,EAAAC,SAAQ,KACP,kBAAC,EAAAC,YAAW,KACV,kBAAC,EAAAC,KAAI,CAACC,UAAU,aAAaC,UAAW,EAAAC,aAAA,IACrCpB,EAAc,uBAGnB,kBAAC,EAAAgB,YAAW,CAACE,UAAU,kBACpBb,MAAAA,OAAS,EAATA,EAAW0B,qBACV,kBAAC,IAAa,CAACC,IAAK3B,EAAU0B,2BAQ5C,kBAAC,EAAAvB,SAAQ,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC3B,kBAAC,EAAAG,KAAI,KACH,kBAAC,EAAAC,SAAQ,KACP,kBAAC,EAAAC,YAAW,KACV,kBAAC,EAAAC,KAAI,CAACC,UAAU,aAAaC,UAAW,EAAAC,aAAA,IACrCpB,EAAc,8BAGlBG,MAAAA,OAAgB,EAAhBA,EAAkB8B,OACjB,kBAAC,IAAa,CAACD,IAAK7B,EAAiB8B","sources":["webpack:///./src/smart-components/order/order-detail/order-details.tsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  TextContent,\n  Text,\n  TextVariants,\n  TextList,\n  TextListVariants,\n  TextListItem,\n  TextListItemVariants,\n  Grid,\n  Card,\n  CardBody,\n  GridItem,\n  Stack,\n  StackItem\n} from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nimport ReactJsonView from 'react-json-view';\nimport statesMessages from '../../../messages/states.messages';\nimport labelMessages from '../../../messages/labels.messages';\nimport ordersMessages from '../../../messages/orders.messages';\nimport useFormatMessage from '../../../utilities/use-format-message';\nimport { OrderDetail } from '../../../redux/reducers/order-reducer';\nimport { CatalogRootState } from '../../../types/redux';\n\nconst OrderDetails: React.ComponentType = () => {\n  const formatMessage = useFormatMessage();\n  const {\n    order,\n    platform,\n    progressMessages,\n    portfolio,\n    orderItem\n  } = useSelector<CatalogRootState, OrderDetail>(\n    ({ orderReducer: { orderDetail } }) => orderDetail\n  );\n\n  return (\n    <Grid hasGutter>\n      <GridItem md={12} lg={6} xl={4}>\n        <Stack hasGutter>\n          <StackItem>\n            <Card>\n              <CardBody>\n                <TextContent>\n                  <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n                    {formatMessage(ordersMessages.orderDetails)}\n                  </Text>\n                  <TextList component={TextListVariants.dl}>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      {formatMessage(ordersMessages.orderID)}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {order.id}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      {formatMessage(statesMessages.ordered)}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      <DateFormat date={order.created_at} variant=\"relative\" />\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      {formatMessage(labelMessages.portfolio)}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {portfolio?.name}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dt}>\n                      {formatMessage(labelMessages.platform)}\n                    </TextListItem>\n                    <TextListItem component={TextListItemVariants.dd}>\n                      {platform?.name || undefined}\n                    </TextListItem>\n                  </TextList>\n                </TextContent>\n              </CardBody>\n            </Card>\n          </StackItem>\n          <StackItem>\n            <Card>\n              <CardBody>\n                <TextContent>\n                  <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n                    {formatMessage(ordersMessages.orderParameters)}\n                  </Text>\n                </TextContent>\n                <TextContent className=\"overflow-wrap\">\n                  {orderItem?.service_parameters && (\n                    <ReactJsonView src={orderItem.service_parameters} />\n                  )}\n                </TextContent>\n              </CardBody>\n            </Card>\n          </StackItem>\n        </Stack>\n      </GridItem>\n      <GridItem md={12} lg={6} xl={8}>\n        <Card>\n          <CardBody>\n            <TextContent>\n              <Text className=\"pf-u-mb-md\" component={TextVariants.h2}>\n                {formatMessage(ordersMessages.orderProgressMessages)}\n              </Text>\n            </TextContent>\n            {progressMessages?.data && (\n              <ReactJsonView src={progressMessages.data} />\n            )}\n          </CardBody>\n        </Card>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default OrderDetails;\n"],"names":["formatMessage","order","platform","progressMessages","portfolio","orderItem","Grid","hasGutter","GridItem","md","lg","xl","Stack","StackItem","Card","CardBody","TextContent","Text","className","component","TextVariants","TextList","TextListVariants","TextListItem","TextListItemVariants","id","date","created_at","variant","name","undefined","service_parameters","src","data"],"sourceRoot":""}