{"version":3,"file":"js/rhcsVendor.0e8878cbd7220e1e54ab.js","mappings":"yGAaA,IACQA,EADJC,EAAaC,MAAQA,KAAKD,YACtBD,EAAgB,SAAUG,EAAGC,GAI7B,OAHAJ,EAAgBK,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAErB,SAAUD,EAAGC,GAEhB,SAASO,IAAOT,KAAKU,YAAcT,EADnCH,EAAcG,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,KAGnFI,EAAYb,MAAQA,KAAKa,UAAa,WAStC,OARAA,EAAWV,OAAOW,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIV,KADTS,EAAIG,UAAUF,GACOd,OAAOQ,UAAUH,eAAea,KAAKL,EAAGT,KACzDQ,EAAER,GAAKS,EAAET,IAEjB,OAAOQ,IAEKO,MAAMtB,KAAMmB,YAE5BI,EAAavB,MAAQA,KAAKuB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUL,MAAME,EAASC,GAAc,KAAKS,YAGlEM,EAAexC,MAAQA,KAAKwC,aAAgB,SAAUhB,EAASiB,GAC/D,IAAsGC,EAAGC,EAAG5B,EAAG6B,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPhC,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOiC,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEV,KAAMgB,EAAK,GAAI,MAASA,EAAK,GAAI,OAAUA,EAAK,IAAwB,mBAAXC,SAA0BP,EAAEO,OAAOC,UAAY,WAAa,OAAOpD,OAAU4C,EACvJ,SAASM,EAAKhC,GAAK,OAAO,SAAUmC,GAAK,OACzC,SAAcC,GACV,GAAIZ,EAAG,MAAM,IAAIa,UAAU,mCAC3B,KAAOV,OACH,GAAIH,EAAI,EAAGC,IAAM5B,EAAY,EAARuC,EAAG,GAASX,EAAU,OAAIW,EAAG,GAAKX,EAAS,SAAO5B,EAAI4B,EAAU,SAAM5B,EAAEM,KAAKsB,GAAI,GAAKA,EAAET,SAAWnB,EAAIA,EAAEM,KAAKsB,EAAGW,EAAG,KAAKhB,KAAM,OAAOvB,EAE3J,OADI4B,EAAI,EAAG5B,IAAGuC,EAAK,CAAS,EAARA,EAAG,GAAQvC,EAAEiB,QACzBsB,EAAG,IACP,KAAK,EAAG,KAAK,EAAGvC,EAAIuC,EAAI,MACxB,KAAK,EAAc,OAAXT,EAAEC,QAAgB,CAAEd,MAAOsB,EAAG,GAAIhB,MAAM,GAChD,KAAK,EAAGO,EAAEC,QAASH,EAAIW,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKT,EAAEI,IAAIO,MAAOX,EAAEG,KAAKQ,MAAO,SACxC,QACI,MAAkBzC,GAAZA,EAAI8B,EAAEG,MAAY5B,OAAS,GAAKL,EAAEA,EAAEK,OAAS,KAAkB,IAAVkC,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAET,EAAI,EAAG,SACjG,GAAc,IAAVS,EAAG,MAAcvC,GAAMuC,EAAG,GAAKvC,EAAE,IAAMuC,EAAG,GAAKvC,EAAE,IAAM,CAAE8B,EAAEC,MAAQQ,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYT,EAAEC,MAAQ/B,EAAE,GAAI,CAAE8B,EAAEC,MAAQ/B,EAAE,GAAIA,EAAIuC,EAAI,MAC7D,GAAIvC,GAAK8B,EAAEC,MAAQ/B,EAAE,GAAI,CAAE8B,EAAEC,MAAQ/B,EAAE,GAAI8B,EAAEI,IAAIQ,KAAKH,GAAK,MACvDvC,EAAE,IAAI8B,EAAEI,IAAIO,MAChBX,EAAEG,KAAKQ,MAAO,SAEtBF,EAAKb,EAAKpB,KAAKG,EAASqB,GAC1B,MAAOV,GAAKmB,EAAK,CAAC,EAAGnB,GAAIQ,EAAI,EAAK,QAAUD,EAAI3B,EAAI,EACtD,GAAY,EAARuC,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAEtB,MAAOsB,EAAG,GAAKA,EAAG,QAAK,EAAQhB,MAAM,GArB9BL,CAAK,CAACf,EAAGmC,OAwB7DlD,OAAOuD,eAAeC,EAAS,aAAc,CAAE3B,OAAO,IACtD,IAgDW4B,EAdAC,EATAC,EAfAC,EAVPC,EAAkB,EAAQ,MAC1BC,EAAU,EAAQ,OAGlBC,EAAS,EAAQ,QAMVH,EAScJ,EAAQI,sBAAwBJ,EAAQI,oBAAsB,KARtD,QAAI,UACjCA,EAA4B,OAAI,SAChCA,EAA0B,KAAI,OAC9BA,EAA2B,MAAI,QAC/BA,EAA4B,OAAI,SAChCA,EAA0B,KAAI,OAC9BA,EAA0B,KAAI,OAC9BA,EAA2B,MAAI,SAOxBD,EAGkBH,EAAQG,0BAA4BH,EAAQG,wBAA0B,KAF/D,OAAI,SACpCA,EAA6B,IAAI,OAO1BD,EAQWF,EAAQE,mBAAqBF,EAAQE,iBAAmB,KAP/C,SAAI,WAC/BA,EAA4B,UAAI,YAChCA,EAAyB,OAAI,SAC7BA,EAA2B,SAAI,WAC/BA,EAA0B,QAAI,UAC9BA,EAA0B,QAAI,UAC9BA,EAA0B,QAAI,WAOvBD,EAMcD,EAAQC,sBAAwBD,EAAQC,oBAAsB,KALpD,UAAI,YACnCA,EAA8B,SAAI,WAClCA,EAA8B,SAAI,WAClCA,EAA4B,OAAI,SAChCA,EAA2B,MAAI,QAMnCD,EAAQQ,2BAA6B,SAAUC,GAC3C,IAAIC,EAAQrE,KACZ,MAAO,CASHsE,aAAc,SAAUC,EAAWC,EAAQC,GAEvC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIX,MAAAA,EACA,MAAM,IAAIL,EAAOiB,cAAc,YAAa,iFAGhD,GAAIX,MAAAA,EACA,MAAM,IAAIN,EAAOiB,cAAc,SAAU,8EAmB7C,OAjBAT,EAAe,iCACVU,QAAQ,eAA0BC,mBAAmBC,OAAOf,KACjEI,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAE7EM,EAAyB,IADzBD,EAA0B,IAEF,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAwC,iBAAXT,GAA2E,qBAAnDK,EAAuBc,QAAQ,gBACpFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAqBC,IAAXvB,EAAuBA,EAAS,IAAOA,GAAU,GAC5G,CAAC,EAAc,CACdwB,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BqB,qBAAsB,SAAU3B,EAAWE,GAEvC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIX,MAAAA,EACA,MAAM,IAAIL,EAAOiB,cAAc,YAAa,yFAgBhD,OAdAT,EAAe,iCACVU,QAAQ,eAA0BC,mBAAmBC,OAAOf,KACjEI,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GACzBJ,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BsB,WAAY,SAAUC,EAAI3B,GAEtB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,wEAgBzC,OAdAT,EAAe,gBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GACzBJ,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQ0C,YAAc,SAAUjC,GAC5B,MAAO,CASHE,aAAc,SAAUC,EAAWC,EAAQC,GACvC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQQ,2BAA2BC,GAAeE,aAAaC,EAAWC,EAAQC,IAC/G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDT,qBAAsB,SAAU3B,EAAWE,GACvC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQQ,2BAA2BC,GAAe8B,qBAAqB3B,EAAWE,IAC/G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDR,WAAY,SAAUC,EAAI3B,GACtB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQQ,2BAA2BC,GAAe+B,WAAWC,EAAI3B,IAC9F,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQkD,iBAAmB,SAAUzC,EAAeoC,EAAUD,GAC1D,MAAO,CASHjC,aAAc,SAAUC,EAAWC,EAAQC,GACvC,OAAOd,EAAQ0C,YAAYjC,GAAeE,aAAaC,EAAWC,EAAQC,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASvIN,qBAAsB,SAAU3B,EAAWE,GACvC,OAAOd,EAAQ0C,YAAYjC,GAAe8B,qBAAqB3B,EAAWE,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASvIL,WAAY,SAAUC,EAAI3B,GACtB,OAAOd,EAAQ0C,YAAYjC,GAAe+B,WAAWC,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAU9H,IAAIM,EAA2B,SAAUC,GAErC,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAuC/D,OAzCAD,EAAU+G,EAAWC,GAarBD,EAAUnG,UAAU2D,aAAe,SAAUC,EAAWC,EAAQC,GAC5D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0C,YAAYrG,KAAKoE,eAAeE,aAAaC,EAAWC,EAAQC,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUxJM,EAAUnG,UAAUuF,qBAAuB,SAAU3B,EAAWE,GAC5D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0C,YAAYrG,KAAKoE,eAAe8B,qBAAqB3B,EAAWE,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUxJM,EAAUnG,UAAUwF,WAAa,SAAUC,EAAI3B,GAC3C,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0C,YAAYrG,KAAKoE,eAAe+B,WAAWC,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAEhIM,EA1CmB,CA2C5B5C,EAAO8C,SACTrD,EAAQmD,UAAYA,EAKpBnD,EAAQsD,4BAA8B,SAAU7C,GAC5C,IAAIC,EAAQrE,KACZ,MAAO,CAOHkH,iBAAkB,SAAUzC,GAExB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAc/B,OAZAP,EAAiBX,EAAgBuB,MADlB,iBACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GACzBJ,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQwD,aAAe,SAAU/C,GAC7B,MAAO,CAOH8C,iBAAkB,SAAUzC,GACxB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQsD,4BAA4B7C,GAAe8C,iBAAiBzC,IACjG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQyD,kBAAoB,SAAUhD,EAAeoC,EAAUD,GAC3D,MAAO,CAOHW,iBAAkB,SAAUzC,GACxB,OAAOd,EAAQwD,aAAa/C,GAAe8C,iBAAiBzC,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAUjI,IAAIa,EAA4B,SAAUN,GAEtC,SAASM,IACL,OAAkB,OAAXN,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAa/D,OAfAD,EAAUsH,EAAYN,GAWtBM,EAAW1G,UAAUuG,iBAAmB,SAAUzC,GAC9C,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQwD,aAAanH,KAAKoE,eAAe8C,iBAAiBzC,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAEnIa,EAhBoB,CAiB7BnD,EAAO8C,SACTrD,EAAQ0D,WAAaA,EAKrB1D,EAAQ2D,4BAA8B,SAAUlD,GAC5C,IAAIC,EAAQrE,KACZ,MAAO,CAQHuH,YAAa,SAAUC,EAAW/C,GAE9B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIsC,MAAAA,EACA,MAAM,IAAItD,EAAOiB,cAAc,YAAa,gFAkBhD,OAfAR,EAAiBX,EAAgBuB,MADlB,YACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAE7EM,EAAyB,IADzBD,EAA0B,IAEF,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA2C,iBAAduC,GAA8E,qBAAnD3C,EAAuBc,QAAQ,gBACvFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAwBC,IAAdyB,EAA0BA,EAAY,IAAOA,GAAa,GACrH,CAAC,EAAc,CACdxB,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQ8D,aAAe,SAAUrD,GAC7B,MAAO,CAQHmD,YAAa,SAAUC,EAAW/C,GAC9B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ2D,4BAA4BlD,GAAemD,YAAYC,EAAW/C,IACvG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQ+D,kBAAoB,SAAUtD,EAAeoC,EAAUD,GAC3D,MAAO,CAQHgB,YAAa,SAAUC,EAAW/C,GAC9B,OAAOd,EAAQ8D,aAAarD,GAAemD,YAAYC,EAAW/C,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAUvI,IAAImB,EAA4B,SAAUZ,GAEtC,SAASY,IACL,OAAkB,OAAXZ,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAc/D,OAhBAD,EAAU4H,EAAYZ,GAYtBY,EAAWhH,UAAU4G,YAAc,SAAUC,EAAW/C,GACpD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ8D,aAAazH,KAAKoE,eAAemD,YAAYC,EAAW/C,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAEzImB,EAjBoB,CAkB7BzD,EAAO8C,SACTrD,EAAQgE,WAAaA,EAKrBhE,EAAQiE,4BAA8B,SAAUxD,GAC5C,IAAIC,EAAQrE,KACZ,MAAO,CAQH6H,cAAe,SAAUC,EAAWrD,GAEhC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAI4C,MAAAA,EACA,MAAM,IAAI5D,EAAOiB,cAAc,YAAa,kFAkBhD,OAfAR,EAAiBX,EAAgBuB,MADlB,aACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAE7EM,EAAyB,IADzBD,EAA0B,IAEF,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA2C,iBAAd6C,GAA8E,qBAAnDjD,EAAuBc,QAAQ,gBACvFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAwBC,IAAd+B,EAA0BA,EAAY,IAAOA,GAAa,GACrH,CAAC,EAAc,CACd9B,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAgB7BkD,aAAc,SAAUC,EAAYC,EAAOC,EAAQC,EAAQC,EAAQ3D,GAE/D,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GA6B/B,OA3BAP,EAAiBX,EAAgBuB,MADlB,aACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,QACXgB,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAExBnC,IAAXoC,IACApD,EAA+B,OAAIoD,QAExBpC,IAAXqC,IACArD,EAAgC,QAAIqD,GAEpCJ,MAAAA,IACAlD,EAAwB,gBAAkBQ,OAAO0C,IAErDrD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BwD,sBAAuB,SAAU9D,EAAWyD,EAAYvD,GAEpD,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIX,MAAAA,EACA,MAAM,IAAIL,EAAOiB,cAAc,YAAa,0FAmBhD,OAjBAT,EAAe,kCACVU,QAAQ,eAA0BC,mBAAmBC,OAAOf,KACjEI,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GACrBiD,MAAAA,IACAlD,EAAwB,gBAAkBQ,OAAO0C,IAErDrD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7ByD,YAAa,SAAUlC,EAAI3B,GAEvB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,yEAgBzC,OAdAT,EAAe,iBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GACzBJ,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7B0D,mBAAoB,SAAUhE,EAAWE,GAErC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIX,MAAAA,EACA,MAAM,IAAIL,EAAOiB,cAAc,YAAa,uFAgBhD,OAdAT,EAAe,iCACVU,QAAQ,eAA0BC,mBAAmBC,OAAOf,KACjEI,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GACzBJ,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQ6E,aAAe,SAAUpE,GAC7B,MAAO,CAQHyD,cAAe,SAAUC,EAAWrD,GAChC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQiE,4BAA4BxD,GAAeyD,cAAcC,EAAWrD,IACzG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAiBjDoB,aAAc,SAAUC,EAAYC,EAAOC,EAAQC,EAAQC,EAAQ3D,GAC/D,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQiE,4BAA4BxD,GAAe2D,aAAaC,EAAYC,EAAOC,EAAQC,EAAQC,EAAQ3D,IACxI,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjD0B,sBAAuB,SAAU9D,EAAWyD,EAAYvD,GACpD,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQiE,4BAA4BxD,GAAeiE,sBAAsB9D,EAAWyD,EAAYvD,IAC7H,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajD2B,YAAa,SAAUlC,EAAI3B,GACvB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQiE,4BAA4BxD,GAAekE,YAAYlC,EAAI3B,IAChG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajD4B,mBAAoB,SAAUhE,EAAWE,GACrC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQiE,4BAA4BxD,GAAemE,mBAAmBhE,EAAWE,IAC9G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQ8E,kBAAoB,SAAUrE,EAAeoC,EAAUD,GAC3D,MAAO,CAQHsB,cAAe,SAAUC,EAAWrD,GAChC,OAAOd,EAAQ6E,aAAapE,GAAeyD,cAAcC,EAAWrD,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAajIuB,aAAc,SAAUC,EAAYC,EAAOC,EAAQC,EAAQC,EAAQ3D,GAC/D,OAAOd,EAAQ6E,aAAapE,GAAe2D,aAAaC,EAAYC,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUhK6B,sBAAuB,SAAU9D,EAAWyD,EAAYvD,GACpD,OAAOd,EAAQ6E,aAAapE,GAAeiE,sBAAsB9D,EAAWyD,EAAYvD,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASrJ8B,YAAa,SAAUlC,EAAI3B,GACvB,OAAOd,EAAQ6E,aAAapE,GAAekE,YAAYlC,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASxH+B,mBAAoB,SAAUhE,EAAWE,GACrC,OAAOd,EAAQ6E,aAAapE,GAAemE,mBAAmBhE,EAAWE,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAU9I,IAAIkC,EAA4B,SAAU3B,GAEtC,SAAS2B,IACL,OAAkB,OAAX3B,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAmE/D,OArEAD,EAAU2I,EAAY3B,GAYtB2B,EAAW/H,UAAUkH,cAAgB,SAAUC,EAAWrD,GACtD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ6E,aAAaxI,KAAKoE,eAAeyD,cAAcC,EAAWrD,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAclJkC,EAAW/H,UAAUoH,aAAe,SAAUC,EAAYC,EAAOC,EAAQC,EAAQC,EAAQ3D,GACrF,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ6E,aAAaxI,KAAKoE,eAAe2D,aAAaC,EAAYC,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWjLkC,EAAW/H,UAAU0H,sBAAwB,SAAU9D,EAAWyD,EAAYvD,GAC1E,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ6E,aAAaxI,KAAKoE,eAAeiE,sBAAsB9D,EAAWyD,EAAYvD,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUtKkC,EAAW/H,UAAU2H,YAAc,SAAUlC,EAAI3B,GAC7C,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ6E,aAAaxI,KAAKoE,eAAekE,YAAYlC,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUzIkC,EAAW/H,UAAU4H,mBAAqB,SAAUhE,EAAWE,GAC3D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ6E,aAAaxI,KAAKoE,eAAemE,mBAAmBhE,EAAWE,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAEhJkC,EAtEoB,CAuE7BxE,EAAO8C,SACTrD,EAAQ+E,WAAaA,EAKrB/E,EAAQgF,6BAA+B,SAAUvE,GAC7C,IAAIC,EAAQrE,KACZ,MAAO,CAWH4I,cAAe,SAAUX,EAAOC,EAAQC,EAAQC,EAAQ3D,GAEpD,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GA0B/B,OAxBAP,EAAiBX,EAAgBuB,MADlB,cACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,QACXgB,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAExBnC,IAAXoC,IACApD,EAA+B,OAAIoD,QAExBpC,IAAXqC,IACArD,EAAgC,QAAIqD,GAExCzD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BgE,aAAc,SAAUzC,EAAI3B,GAExB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,0EAgBzC,OAdAT,EAAe,kBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GACzBJ,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQmF,cAAgB,SAAU1E,GAC9B,MAAO,CAWHwE,cAAe,SAAUX,EAAOC,EAAQC,EAAQC,EAAQ3D,GACpD,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQgF,6BAA6BvE,GAAewE,cAAcX,EAAOC,EAAQC,EAAQC,EAAQ3D,IAC9H,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDkC,aAAc,SAAUzC,EAAI3B,GACxB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQgF,6BAA6BvE,GAAeyE,aAAazC,EAAI3B,IAClG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQoF,mBAAqB,SAAU3E,EAAeoC,EAAUD,GAC5D,MAAO,CAWHqC,cAAe,SAAUX,EAAOC,EAAQC,EAAQC,EAAQ3D,GACpD,OAAOd,EAAQmF,cAAc1E,GAAewE,cAAcX,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAStJqC,aAAc,SAAUzC,EAAI3B,GACxB,OAAOd,EAAQmF,cAAc1E,GAAeyE,aAAazC,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAUlI,IAAIwC,EAA6B,SAAUjC,GAEvC,SAASiC,IACL,OAAkB,OAAXjC,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KA6B/D,OA/BAD,EAAUiJ,EAAajC,GAevBiC,EAAYrI,UAAUiI,cAAgB,SAAUX,EAAOC,EAAQC,EAAQC,EAAQ3D,GAC3E,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQmF,cAAc9I,KAAKoE,eAAewE,cAAcX,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUvKwC,EAAYrI,UAAUkI,aAAe,SAAUzC,EAAI3B,GAC/C,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQmF,cAAc9I,KAAKoE,eAAeyE,aAAazC,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAEpIwC,EAhCqB,CAiC9B9E,EAAO8C,SACTrD,EAAQqF,YAAcA,EAKtBrF,EAAQsF,6BAA+B,SAAU7E,GAC7C,IAAIC,EAAQrE,KACZ,MAAO,CASHkJ,sBAAuB,SAAUC,EAAYC,EAAU3E,GAEnD,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIiE,MAAAA,EACA,MAAM,IAAIjF,EAAOiB,cAAc,aAAc,2FAGjD,GAAIiE,MAAAA,EACA,MAAM,IAAIlF,EAAOiB,cAAc,WAAY,yFAmB/C,OAjBAT,EAAe,qCACVU,QAAQ,gBAA2BC,mBAAmBC,OAAO6D,KAClExE,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAE7EM,EAAyB,IADzBD,EAA0B,IAEF,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA0C,iBAAbmE,GAA6E,qBAAnDvE,EAAuBc,QAAQ,gBACtFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAuBC,IAAbqD,EAAyBA,EAAW,IAAOA,GAAY,GAClH,CAAC,EAAc,CACdpD,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BwE,gBAAiB,SAAUjD,EAAI3B,GAE3B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,6EAgBzC,OAdAT,EAAe,kBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,UAAYZ,GAAcH,GAC/EK,EAA0B,GAC1BC,EAAyB,GACzBJ,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7ByE,aAAc,SAAUlD,EAAImD,EAAgB9E,GAExC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,0EAGzC,GAAIoE,MAAAA,EACA,MAAM,IAAIrF,EAAOiB,cAAc,iBAAkB,sFAmBrD,OAjBAT,EAAe,uBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAE7EM,EAAyB,IADzBD,EAA0B,IAEF,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAgD,iBAAnBsE,GAAmF,qBAAnD1E,EAAuBc,QAAQ,gBAC5Fd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAA6BC,IAAnBwD,EAA+BA,EAAiB,IAAOA,GAAkB,GACpI,CAAC,EAAc,CACdvD,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAkB7B2E,cAAe,SAAUC,EAASC,EAAUC,EAAY1B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAEnF,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAmC/B,OAjCAP,EAAiBX,EAAgBuB,MADlB,cACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,QACTgB,IAAZ0D,IACA1E,EAAiC,SAAI0E,QAExB1D,IAAb2D,IACA3E,EAAkC,UAAI2E,QAEvB3D,IAAf4D,IACA5E,EAAoC,YAAI4E,QAE9B5D,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAExBnC,IAAXoC,IACApD,EAA+B,OAAIoD,QAExBpC,IAAXqC,IACArD,EAAgC,QAAIqD,GAExCzD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAgB7B+E,wBAAyB,SAAUT,EAAYlB,EAAOC,EAAQC,EAAQC,EAAQ3D,GAE1E,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIiE,MAAAA,EACA,MAAM,IAAIjF,EAAOiB,cAAc,aAAc,6FA4BjD,OA1BAT,EAAe,qCACVU,QAAQ,gBAA2BC,mBAAmBC,OAAO6D,KAClExE,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,QACXgB,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAExBnC,IAAXoC,IACApD,EAA+B,OAAIoD,QAExBpC,IAAXqC,IACArD,EAAgC,QAAIqD,GAExCzD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BgF,WAAY,SAAUzD,EAAIyD,EAAYpF,GAElC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,wEAGzC,GAAI0E,MAAAA,EACA,MAAM,IAAI3F,EAAOiB,cAAc,aAAc,gFAmBjD,OAjBAT,EAAe,6BACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAE7EM,EAAyB,IADzBD,EAA0B,IAEF,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA4C,iBAAf4E,GAA+E,qBAAnDhF,EAAuBc,QAAQ,gBACxFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAyBC,IAAf8D,EAA2BA,EAAa,IAAOA,GAAc,GACxH,CAAC,EAAc,CACd7D,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BiF,aAAc,SAAU1D,EAAI3B,GAExB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,0EAgBzC,OAdAT,EAAe,kBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GACzBJ,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BkF,eAAgB,SAAU3D,EAAImD,EAAgB9E,GAE1C,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,4EAGzC,GAAIoE,MAAAA,EACA,MAAM,IAAIrF,EAAOiB,cAAc,iBAAkB,wFAmBrD,OAjBAT,EAAe,yBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAE7EM,EAAyB,IADzBD,EAA0B,IAEF,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAgD,iBAAnBsE,GAAmF,qBAAnD1E,EAAuBc,QAAQ,gBAC5Fd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAA6BC,IAAnBwD,EAA+BA,EAAiB,IAAOA,GAAkB,GACpI,CAAC,EAAc,CACdvD,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BmF,eAAgB,SAAU5D,EAAIgD,EAAU3E,GAEpC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,4EAGzC,GAAIiE,MAAAA,EACA,MAAM,IAAIlF,EAAOiB,cAAc,WAAY,kFAmB/C,OAjBAT,EAAe,kBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,SAAWZ,GAAcH,GAE9EM,EAAyB,IADzBD,EAA0B,IAEF,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA0C,iBAAbmE,GAA6E,qBAAnDvE,EAAuBc,QAAQ,gBACtFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAuBC,IAAbqD,EAAyBA,EAAW,IAAOA,GAAY,GAClH,CAAC,EAAc,CACdpD,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQsG,cAAgB,SAAU7F,GAC9B,MAAO,CASH8E,sBAAuB,SAAUC,EAAYC,EAAU3E,GACnD,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQsF,6BAA6B7E,GAAe8E,sBAAsBC,EAAYC,EAAU3E,IAC7H,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajD0C,gBAAiB,SAAUjD,EAAI3B,GAC3B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQsF,6BAA6B7E,GAAeiF,gBAAgBjD,EAAI3B,IACrG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjD2C,aAAc,SAAUlD,EAAImD,EAAgB9E,GACxC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQsF,6BAA6B7E,GAAekF,aAAalD,EAAImD,EAAgB9E,IAClH,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAmBjD6C,cAAe,SAAUC,EAASC,EAAUC,EAAY1B,EAAOC,EAAQC,EAAQC,EAAQ3D,GACnF,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQsF,6BAA6B7E,GAAeoF,cAAcC,EAASC,EAAUC,EAAY1B,EAAOC,EAAQC,EAAQC,EAAQ3D,IAC7J,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAiBjDiD,wBAAyB,SAAUT,EAAYlB,EAAOC,EAAQC,EAAQC,EAAQ3D,GAC1E,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQsF,6BAA6B7E,GAAewF,wBAAwBT,EAAYlB,EAAOC,EAAQC,EAAQC,EAAQ3D,IACpJ,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDkD,WAAY,SAAUzD,EAAIyD,EAAYpF,GAClC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQsF,6BAA6B7E,GAAeyF,WAAWzD,EAAIyD,EAAYpF,IAC5G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDmD,aAAc,SAAU1D,EAAI3B,GACxB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQsF,6BAA6B7E,GAAe0F,aAAa1D,EAAI3B,IAClG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDoD,eAAgB,SAAU3D,EAAImD,EAAgB9E,GAC1C,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQsF,6BAA6B7E,GAAe2F,eAAe3D,EAAImD,EAAgB9E,IACpH,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDqD,eAAgB,SAAU5D,EAAIgD,EAAU3E,GACpC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQsF,6BAA6B7E,GAAe4F,eAAe5D,EAAIgD,EAAU3E,IAC9G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQuG,mBAAqB,SAAU9F,EAAeoC,EAAUD,GAC5D,MAAO,CASH2C,sBAAuB,SAAUC,EAAYC,EAAU3E,GACnD,OAAOd,EAAQsG,cAAc7F,GAAe8E,sBAAsBC,EAAYC,EAAU3E,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASrJ6C,gBAAiB,SAAUjD,EAAI3B,GAC3B,OAAOd,EAAQsG,cAAc7F,GAAeiF,gBAAgBjD,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAU7H8C,aAAc,SAAUlD,EAAImD,EAAgB9E,GACxC,OAAOd,EAAQsG,cAAc7F,GAAekF,aAAalD,EAAImD,EAAgB9E,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAe1IgD,cAAe,SAAUC,EAASC,EAAUC,EAAY1B,EAAOC,EAAQC,EAAQC,EAAQ3D,GACnF,OAAOd,EAAQsG,cAAc7F,GAAeoF,cAAcC,EAASC,EAAUC,EAAY1B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAarLoD,wBAAyB,SAAUT,EAAYlB,EAAOC,EAAQC,EAAQC,EAAQ3D,GAC1E,OAAOd,EAAQsG,cAAc7F,GAAewF,wBAAwBT,EAAYlB,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAU5KqD,WAAY,SAAUzD,EAAIyD,EAAYpF,GAClC,OAAOd,EAAQsG,cAAc7F,GAAeyF,WAAWzD,EAAIyD,EAAYpF,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASpIsD,aAAc,SAAU1D,EAAI3B,GACxB,OAAOd,EAAQsG,cAAc7F,GAAe0F,aAAa1D,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAU1HuD,eAAgB,SAAU3D,EAAImD,EAAgB9E,GAC1C,OAAOd,EAAQsG,cAAc7F,GAAe2F,eAAe3D,EAAImD,EAAgB9E,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAU5IwD,eAAgB,SAAU5D,EAAIgD,EAAU3E,GACpC,OAAOd,EAAQsG,cAAc7F,GAAe4F,eAAe5D,EAAIgD,EAAU3E,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAU9I,IAAI2D,EAA6B,SAAUpD,GAEvC,SAASoD,IACL,OAAkB,OAAXpD,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KA6H/D,OA/HAD,EAAUoK,EAAapD,GAavBoD,EAAYxJ,UAAUuI,sBAAwB,SAAUC,EAAYC,EAAU3E,GAC1E,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQsG,cAAcjK,KAAKoE,eAAe8E,sBAAsBC,EAAYC,EAAU3E,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUtK2D,EAAYxJ,UAAU0I,gBAAkB,SAAUjD,EAAI3B,GAClD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQsG,cAAcjK,KAAKoE,eAAeiF,gBAAgBjD,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAW9I2D,EAAYxJ,UAAU2I,aAAe,SAAUlD,EAAImD,EAAgB9E,GAC/D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQsG,cAAcjK,KAAKoE,eAAekF,aAAalD,EAAImD,EAAgB9E,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAgB3J2D,EAAYxJ,UAAU6I,cAAgB,SAAUC,EAASC,EAAUC,EAAY1B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAC1G,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQsG,cAAcjK,KAAKoE,eAAeoF,cAAcC,EAASC,EAAUC,EAAY1B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cActM2D,EAAYxJ,UAAUiJ,wBAA0B,SAAUT,EAAYlB,EAAOC,EAAQC,EAAQC,EAAQ3D,GACjG,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQsG,cAAcjK,KAAKoE,eAAewF,wBAAwBT,EAAYlB,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAW7L2D,EAAYxJ,UAAUkJ,WAAa,SAAUzD,EAAIyD,EAAYpF,GACzD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQsG,cAAcjK,KAAKoE,eAAeyF,WAAWzD,EAAIyD,EAAYpF,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUrJ2D,EAAYxJ,UAAUmJ,aAAe,SAAU1D,EAAI3B,GAC/C,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQsG,cAAcjK,KAAKoE,eAAe0F,aAAa1D,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAW3I2D,EAAYxJ,UAAUoJ,eAAiB,SAAU3D,EAAImD,EAAgB9E,GACjE,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQsG,cAAcjK,KAAKoE,eAAe2F,eAAe3D,EAAImD,EAAgB9E,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAW7J2D,EAAYxJ,UAAUqJ,eAAiB,SAAU5D,EAAIgD,EAAU3E,GAC3D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQsG,cAAcjK,KAAKoE,eAAe4F,eAAe5D,EAAIgD,EAAU3E,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAEhJ2D,EAhIqB,CAiI9BjG,EAAO8C,SACTrD,EAAQwG,YAAcA,G,sBCtvEtB,IACQrK,EADJC,EAAaC,MAAQA,KAAKD,YACtBD,EAAgB,SAAUG,EAAGC,GAI7B,OAHAJ,EAAgBK,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAErB,SAAUD,EAAGC,GAEhB,SAASO,IAAOT,KAAKU,YAAcT,EADnCH,EAAcG,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,KAGvFN,OAAOuD,eAAeC,EAAS,aAAc,CAAE3B,OAAO,IAGtD,IAAIiC,EAAU,EAAQ,OACtBN,EAAQ+C,UAAY,8CAA8CtB,QAAQ,OAAQ,IAKlFzB,EAAQyG,mBAAqB,CACzBC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,MAAO,KAoBX7G,EAAQqD,QAZJ,SAAiB5C,EAAeoC,EAAUD,QACrB,IAAbC,IAAuBA,EAAW7C,EAAQ+C,gBAChC,IAAVH,IAAoBA,EAAQtC,EAAQwC,SACxCzG,KAAKwG,SAAWA,EAChBxG,KAAKuG,MAAQA,EACTnC,IACApE,KAAKoE,cAAgBA,EACrBpE,KAAKwG,SAAWpC,EAAcoC,UAAYxG,KAAKwG,WAa3D,IAAIrB,EAA+B,SAAU4B,GAEzC,SAAS5B,EAAcsF,EAAOC,GAC1B,IAAIrG,EAAQ0C,EAAO1F,KAAKrB,KAAM0K,IAAQ1K,KAGtC,OAFAqE,EAAMoG,MAAQA,EACdpG,EAAMsG,KAAO,gBACNtG,EAEX,OAPAtE,EAAUoF,EAAe4B,GAOlB5B,EARuB,CAShCyF,OACFjH,EAAQwB,cAAgBA,G,cChExBhF,OAAOuD,eAAeC,EAAS,aAAc,CAAE3B,OAAO,IAatD2B,EAAQkH,cAXJ,SAAuBC,QACL,IAAVA,IAAoBA,EAAQ,IAChC9K,KAAK+K,OAASD,EAAMC,OACpB/K,KAAKgL,SAAWF,EAAME,SACtBhL,KAAKiL,SAAWH,EAAMG,SACtBjL,KAAKkL,YAAcJ,EAAMI,YACzBlL,KAAKwG,SAAWsE,EAAMtE,SACtBxG,KAAK4E,YAAckG,EAAMlG,c,gBCTjC,SAASuG,EAASC,GACd,IAAK,IAAI7K,KAAK6K,EAAQzH,EAAQnD,eAAeD,KAAIoD,EAAQpD,GAAK6K,EAAE7K,IAEpEJ,OAAOuD,eAAeC,EAAS,aAAc,CAAE3B,OAAO,IACtDmJ,EAAS,EAAQ,QACjBA,EAAS,EAAQ,S,qBCLjB,IACQrL,EADJC,EAAaC,MAAQA,KAAKD,YACtBD,EAAgB,SAAUG,EAAGC,GAI7B,OAHAJ,EAAgBK,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAErB,SAAUD,EAAGC,GAEhB,SAASO,IAAOT,KAAKU,YAAcT,EADnCH,EAAcG,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,KAGnFI,EAAYb,MAAQA,KAAKa,UAAa,WAStC,OARAA,EAAWV,OAAOW,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIV,KADTS,EAAIG,UAAUF,GACOd,OAAOQ,UAAUH,eAAea,KAAKL,EAAGT,KACzDQ,EAAER,GAAKS,EAAET,IAEjB,OAAOQ,IAEKO,MAAMtB,KAAMmB,YAE5BI,EAAavB,MAAQA,KAAKuB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUL,MAAME,EAASC,GAAc,KAAKS,YAGlEM,EAAexC,MAAQA,KAAKwC,aAAgB,SAAUhB,EAASiB,GAC/D,IAAsGC,EAAGC,EAAG5B,EAAG6B,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPhC,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOiC,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEV,KAAMgB,EAAK,GAAI,MAASA,EAAK,GAAI,OAAUA,EAAK,IAAwB,mBAAXC,SAA0BP,EAAEO,OAAOC,UAAY,WAAa,OAAOpD,OAAU4C,EACvJ,SAASM,EAAKhC,GAAK,OAAO,SAAUmC,GAAK,OACzC,SAAcC,GACV,GAAIZ,EAAG,MAAM,IAAIa,UAAU,mCAC3B,KAAOV,OACH,GAAIH,EAAI,EAAGC,IAAM5B,EAAY,EAARuC,EAAG,GAASX,EAAU,OAAIW,EAAG,GAAKX,EAAS,SAAO5B,EAAI4B,EAAU,SAAM5B,EAAEM,KAAKsB,GAAI,GAAKA,EAAET,SAAWnB,EAAIA,EAAEM,KAAKsB,EAAGW,EAAG,KAAKhB,KAAM,OAAOvB,EAE3J,OADI4B,EAAI,EAAG5B,IAAGuC,EAAK,CAAS,EAARA,EAAG,GAAQvC,EAAEiB,QACzBsB,EAAG,IACP,KAAK,EAAG,KAAK,EAAGvC,EAAIuC,EAAI,MACxB,KAAK,EAAc,OAAXT,EAAEC,QAAgB,CAAEd,MAAOsB,EAAG,GAAIhB,MAAM,GAChD,KAAK,EAAGO,EAAEC,QAASH,EAAIW,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKT,EAAEI,IAAIO,MAAOX,EAAEG,KAAKQ,MAAO,SACxC,QACI,MAAkBzC,GAAZA,EAAI8B,EAAEG,MAAY5B,OAAS,GAAKL,EAAEA,EAAEK,OAAS,KAAkB,IAAVkC,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAET,EAAI,EAAG,SACjG,GAAc,IAAVS,EAAG,MAAcvC,GAAMuC,EAAG,GAAKvC,EAAE,IAAMuC,EAAG,GAAKvC,EAAE,IAAM,CAAE8B,EAAEC,MAAQQ,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYT,EAAEC,MAAQ/B,EAAE,GAAI,CAAE8B,EAAEC,MAAQ/B,EAAE,GAAIA,EAAIuC,EAAI,MAC7D,GAAIvC,GAAK8B,EAAEC,MAAQ/B,EAAE,GAAI,CAAE8B,EAAEC,MAAQ/B,EAAE,GAAI8B,EAAEI,IAAIQ,KAAKH,GAAK,MACvDvC,EAAE,IAAI8B,EAAEI,IAAIO,MAChBX,EAAEG,KAAKQ,MAAO,SAEtBF,EAAKb,EAAKpB,KAAKG,EAASqB,GAC1B,MAAOV,GAAKmB,EAAK,CAAC,EAAGnB,GAAIQ,EAAI,EAAK,QAAUD,EAAI3B,EAAI,EACtD,GAAY,EAARuC,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAEtB,MAAOsB,EAAG,GAAKA,EAAG,QAAK,EAAQhB,MAAM,GArB9BL,CAAK,CAACf,EAAGmC,OAwB7DlD,OAAOuD,eAAeC,EAAS,aAAc,CAAE3B,OAAO,IACtD,IA6FWqJ,EAXAC,EAXAC,EAXAC,EAVAC,EAfAC,EAbAC,EAZAC,EAVP5H,EAAkB,EAAQ,MAC1BC,EAAU,EAAQ,OAGlBC,EAAS,EAAQ,OAMV0H,EAMmBjI,EAAQiI,2BAA6BjI,EAAQiI,yBAA2B,KAL9D,UAAI,YACxCA,EAAmC,SAAI,WACvCA,EAAiC,OAAI,SACrCA,EAAmC,SAAI,WACvCA,EAAgC,MAAI,SAO7BD,EAOShI,EAAQgI,iBAAmBhI,EAAQgI,eAAiB,KAN5C,QAAI,UAC5BA,EAAgC,gBAAI,mBACpCA,EAAwB,QAAI,UAC5BA,EAAuB,OAAI,SAC3BA,EAA0B,UAAI,YAC9BA,EAAyB,SAAI,YAOtBD,EASa/H,EAAQ+H,qBAAuB/H,EAAQ+H,mBAAqB,KARpD,QAAI,UAChCA,EAAoC,gBAAI,mBACxCA,EAA4B,QAAI,UAChCA,EAA2B,OAAI,SAC/BA,EAA8B,UAAI,YAClCA,EAA6B,SAAI,WACjCA,EAA2B,OAAI,SAC/BA,EAA6B,SAAI,YAO1BD,EAImD9H,EAAQ8H,2DAA6D9H,EAAQ8H,yDAA2D,KAHjI,OAAI,SACrEA,EAAgE,MAAI,QACpEA,EAAiE,OAAI,UAO9DD,EAKmB7H,EAAQ6H,2BAA6B7H,EAAQ6H,yBAA2B,KAJnE,KAAI,OACnCA,EAAgC,MAAI,QACpCA,EAAkC,QAAI,UACtCA,EAAgC,MAAI,SAO7BD,EAKmB5H,EAAQ4H,2BAA6B5H,EAAQ4H,yBAA2B,KAJnE,KAAI,OACnCA,EAAiC,OAAI,SACrCA,EAAiC,OAAI,SACrCA,EAAgC,MAAI,SAO7BD,EAKqB3H,EAAQ2H,6BAA+B3H,EAAQ2H,2BAA6B,KAJvE,KAAI,OACrCA,EAAmC,OAAI,SACvCA,EAAmC,OAAI,SACvCA,EAAkC,MAAI,SAO/BD,EAKuB1H,EAAQ0H,+BAAiC1H,EAAQ0H,6BAA+B,KAJ3E,KAAI,OACvCA,EAAqC,OAAI,SACzCA,EAAqC,OAAI,SACzCA,EAAoC,MAAI,QAM5C1H,EAAQsD,4BAA8B,SAAU7C,GAC5C,IAAIC,EAAQrE,KACZ,MAAO,CAOHkH,iBAAkB,SAAUzC,GAExB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAmB/B,OAjBAP,EAAiBX,EAAgBuB,MADlB,iBACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BgH,YAAa,SAAUC,EAAgBrH,GAEnC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAI4G,MAAAA,EACA,MAAM,IAAI5H,EAAOiB,cAAc,iBAAkB,qFAuBrD,OApBAR,EAAiBX,EAAgBuB,MADlB,YACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAgD,iBAAnB6G,GAAmF,qBAAnDjH,EAAuBc,QAAQ,gBAC5Fd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAA6BC,IAAnB+F,EAA+BA,EAAiB,IAAOA,GAAkB,GACpI,CAAC,EAAc,CACd9F,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQwD,aAAe,SAAU/C,GAC7B,MAAO,CAOH8C,iBAAkB,SAAUzC,GACxB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQsD,4BAA4B7C,GAAe8C,iBAAiBzC,IACjG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDkF,YAAa,SAAUC,EAAgBrH,GACnC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQsD,4BAA4B7C,GAAeyH,YAAYC,EAAgBrH,IAC5G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQyD,kBAAoB,SAAUhD,EAAeoC,EAAUD,GAC3D,MAAO,CAOHW,iBAAkB,SAAUzC,GACxB,OAAOd,EAAQwD,aAAa/C,GAAe8C,iBAAiBzC,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASzHqF,YAAa,SAAUC,EAAgBrH,GACnC,OAAOd,EAAQwD,aAAa/C,GAAeyH,YAAYC,EAAgBrH,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAU5I,IAAIa,EAA4B,SAAUN,GAEtC,SAASM,IACL,OAAkB,OAAXN,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAyB/D,OA3BAD,EAAUsH,EAAYN,GAWtBM,EAAW1G,UAAUuG,iBAAmB,SAAUzC,GAC9C,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQwD,aAAanH,KAAKoE,eAAe8C,iBAAiBzC,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAU1Ia,EAAW1G,UAAUkL,YAAc,SAAUC,EAAgBrH,GACzD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQwD,aAAanH,KAAKoE,eAAeyH,YAAYC,EAAgBrH,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAE9Ia,EA5BoB,CA6B7BnD,EAAO8C,SACTrD,EAAQ0D,WAAaA,EAKrB1D,EAAQoI,yBAA2B,SAAU3H,GACzC,IAAIC,EAAQrE,KACZ,MAAO,CAUHgM,WAAY,SAAUC,EAASC,EAAaC,EAAiB1H,GAEzD,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBqH,EAAoBpH,EAC5I,OAAOxC,EAAYxC,MAAM,SAAUkF,GA+B/B,OA7BAP,EAAiBX,EAAgBuB,MADlB,UACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GACzBqH,EAAqB,IAAIC,SAGrBjI,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEjFlF,IAAZkG,GACAG,EAAmBE,OAAO,UAAWL,QAErBlG,IAAhBmG,GACAE,EAAmBE,OAAO,eAAgBJ,QAEtBnG,IAApBoG,GACAC,EAAmBE,OAAO,oBAAqBH,GAEnDrH,EAAwB,gBAAkB,sBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3Hd,EAAuBe,KAAOwG,EACvB,CAAC,EAAc,CACdpG,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7B0H,YAAa,SAAUnG,EAAI3B,GAEvB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,yEAqBzC,OAnBAT,EAAe,cACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,UAAYZ,GAAcH,GAC/EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQ6I,UAAY,SAAUpI,GAC1B,MAAO,CAUH4H,WAAY,SAAUC,EAASC,EAAaC,EAAiB1H,GACzD,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQoI,yBAAyB3H,GAAe4H,WAAWC,EAASC,EAAaC,EAAiB1H,IAC/H,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajD4F,YAAa,SAAUnG,EAAI3B,GACvB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQoI,yBAAyB3H,GAAemI,YAAYnG,EAAI3B,IAC7F,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQ8I,eAAiB,SAAUrI,EAAeoC,EAAUD,GACxD,MAAO,CAUHyF,WAAY,SAAUC,EAASC,EAAaC,EAAiB1H,GACzD,OAAOd,EAAQ6I,UAAUpI,GAAe4H,WAAWC,EAASC,EAAaC,EAAiB1H,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASvJ+F,YAAa,SAAUnG,EAAI3B,GACvB,OAAOd,EAAQ6I,UAAUpI,GAAemI,YAAYnG,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAU7H,IAAIkG,EAAyB,SAAU3F,GAEnC,SAAS2F,IACL,OAAkB,OAAX3F,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KA4B/D,OA9BAD,EAAU2M,EAAS3F,GAcnB2F,EAAQ/L,UAAUqL,WAAa,SAAUC,EAASC,EAAaC,EAAiB1H,GAC5E,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ6I,UAAUxM,KAAKoE,eAAe4H,WAAWC,EAASC,EAAaC,EAAiB1H,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUxKkG,EAAQ/L,UAAU4L,YAAc,SAAUnG,EAAI3B,GAC1C,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ6I,UAAUxM,KAAKoE,eAAemI,YAAYnG,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAE/HkG,EA/BiB,CAgC1BxI,EAAO8C,SACTrD,EAAQ+I,QAAUA,EAKlB/I,EAAQgJ,0BAA4B,SAAUvI,GAC1C,IAAIC,EAAQrE,KACZ,MAAO,CASH4M,WAAY,SAAUC,EAASC,EAAWrI,GAEtC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAI2H,MAAAA,EACA,MAAM,IAAI3I,EAAOiB,cAAc,UAAW,6EAG9C,GAAI2H,MAAAA,EACA,MAAM,IAAI5I,EAAOiB,cAAc,YAAa,+EAwBhD,OAtBAT,EAAe,iCACVU,QAAQ,aAAwBC,mBAAmBC,OAAOuH,KAC/DlI,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA2C,iBAAd6H,GAA8E,qBAAnDjI,EAAuBc,QAAQ,gBACvFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAwBC,IAAd+G,EAA0BA,EAAY,IAAOA,GAAa,GACrH,CAAC,EAAc,CACd9G,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BkI,YAAa,SAAUF,EAASpI,GAE5B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAI2H,MAAAA,EACA,MAAM,IAAI3I,EAAOiB,cAAc,UAAW,8EAqB9C,OAnBAT,EAAe,4BACVU,QAAQ,aAAwBC,mBAAmBC,OAAOuH,KAC/DlI,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,SAAWZ,GAAcH,GAC9EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAW7BmI,YAAa,SAAUvI,GAEnB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAmB/B,OAjBAP,EAAiBX,EAAgBuB,MADlB,WACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BoI,aAAc,SAAU7G,EAAI3B,GAExB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,0EAqBzC,OAnBAT,EAAe,eACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,UAAYZ,GAAcH,GAC/EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAgB7BqI,wBAAyB,SAAUL,EAAS5E,EAAOC,EAAQC,EAAQC,EAAQ3D,GAEvE,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAI2H,MAAAA,EACA,MAAM,IAAI3I,EAAOiB,cAAc,UAAW,0FAiC9C,OA/BAT,EAAe,iCACVU,QAAQ,aAAwBC,mBAAmBC,OAAOuH,KAC/DlI,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAExBnC,IAAXoC,IACApD,EAA+B,OAAIoD,QAExBpC,IAAXqC,IACArD,EAAgC,QAAIqD,GAExCzD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAgB7BsI,0BAA2B,SAAUN,EAAS5E,EAAOC,EAAQC,EAAQC,EAAQ3D,GAEzE,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAI2H,MAAAA,EACA,MAAM,IAAI3I,EAAOiB,cAAc,UAAW,4FAiC9C,OA/BAT,EAAe,uCACVU,QAAQ,aAAwBC,mBAAmBC,OAAOuH,KAC/DlI,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAExBnC,IAAXoC,IACApD,EAA+B,OAAIoD,QAExBpC,IAAXqC,IACArD,EAAgC,QAAIqD,GAExCzD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAe7BuI,WAAY,SAAUnF,EAAOC,EAAQC,EAAQC,EAAQ3D,GAEjD,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GA+B/B,OA7BAP,EAAiBX,EAAgBuB,MADlB,WACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAExBnC,IAAXoC,IACApD,EAA+B,OAAIoD,QAExBpC,IAAXqC,IACArD,EAAgC,QAAIqD,GAExCzD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BwI,aAAc,SAAUjH,EAAIkH,EAAY7I,GAEpC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,0EAGzC,GAAImI,MAAAA,EACA,MAAM,IAAIpJ,EAAOiB,cAAc,aAAc,kFAwBjD,OAtBAT,EAAe,uBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA4C,iBAAfqI,GAA+E,qBAAnDzI,EAAuBc,QAAQ,gBACxFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAyBC,IAAfuH,EAA2BA,EAAa,IAAOA,GAAc,GACxH,CAAC,EAAc,CACdtH,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7B0I,UAAW,SAAUnH,EAAI3B,GAErB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,uEAqBzC,OAnBAT,EAAe,eACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7B2I,uBAAwB,SAAUX,EAASzG,EAAI3B,GAE3C,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAI2H,MAAAA,EACA,MAAM,IAAI3I,EAAOiB,cAAc,UAAW,yFAG9C,GAAIiB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,oFAsBzC,OApBAT,EAAe,sCACVU,QAAQ,aAAwBC,mBAAmBC,OAAOuH,KAC1DzH,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7B4I,YAAa,SAAUZ,EAASpI,GAE5B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAI2H,MAAAA,EACA,MAAM,IAAI3I,EAAOiB,cAAc,UAAW,8EAqB9C,OAnBAT,EAAe,kCACVU,QAAQ,aAAwBC,mBAAmBC,OAAOuH,KAC/DlI,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQ+J,WAAa,SAAUtJ,GAC3B,MAAO,CASHwI,WAAY,SAAUC,EAASC,EAAWrI,GACtC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQgJ,0BAA0BvI,GAAewI,WAAWC,EAASC,EAAWrI,IAC7G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDoG,YAAa,SAAUF,EAASpI,GAC5B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQgJ,0BAA0BvI,GAAe2I,YAAYF,EAASpI,IACnG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAYjDqG,YAAa,SAAUvI,GACnB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQgJ,0BAA0BvI,GAAe4I,YAAYvI,IAC1F,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDsG,aAAc,SAAU7G,EAAI3B,GACxB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQgJ,0BAA0BvI,GAAe6I,aAAa7G,EAAI3B,IAC/F,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAiBjDuG,wBAAyB,SAAUL,EAAS5E,EAAOC,EAAQC,EAAQC,EAAQ3D,GACvE,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQgJ,0BAA0BvI,GAAe8I,wBAAwBL,EAAS5E,EAAOC,EAAQC,EAAQC,EAAQ3D,IAC9I,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAiBjDwG,0BAA2B,SAAUN,EAAS5E,EAAOC,EAAQC,EAAQC,EAAQ3D,GACzE,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQgJ,0BAA0BvI,GAAe+I,0BAA0BN,EAAS5E,EAAOC,EAAQC,EAAQC,EAAQ3D,IAChJ,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAgBjDyG,WAAY,SAAUnF,EAAOC,EAAQC,EAAQC,EAAQ3D,GACjD,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQgJ,0BAA0BvI,GAAegJ,WAAWnF,EAAOC,EAAQC,EAAQC,EAAQ3D,IACxH,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjD0G,aAAc,SAAUjH,EAAIkH,EAAY7I,GACpC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQgJ,0BAA0BvI,GAAeiJ,aAAajH,EAAIkH,EAAY7I,IAC3G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajD4G,UAAW,SAAUnH,EAAI3B,GACrB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQgJ,0BAA0BvI,GAAemJ,UAAUnH,EAAI3B,IAC5F,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjD6G,uBAAwB,SAAUX,EAASzG,EAAI3B,GAC3C,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQgJ,0BAA0BvI,GAAeoJ,uBAAuBX,EAASzG,EAAI3B,IAClH,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajD8G,YAAa,SAAUZ,EAASpI,GAC5B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQgJ,0BAA0BvI,GAAeqJ,YAAYZ,EAASpI,IACnG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQgK,gBAAkB,SAAUvJ,EAAeoC,EAAUD,GACzD,MAAO,CASHqG,WAAY,SAAUC,EAASC,EAAWrI,GACtC,OAAOd,EAAQ+J,WAAWtJ,GAAewI,WAAWC,EAASC,EAAWrI,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASrIuG,YAAa,SAAUF,EAASpI,GAC5B,OAAOd,EAAQ+J,WAAWtJ,GAAe2I,YAAYF,EAASpI,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAQ3HwG,YAAa,SAAUvI,GACnB,OAAOd,EAAQ+J,WAAWtJ,GAAe4I,YAAYvI,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASlHyG,aAAc,SAAU7G,EAAI3B,GACxB,OAAOd,EAAQ+J,WAAWtJ,GAAe6I,aAAa7G,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAavH0G,wBAAyB,SAAUL,EAAS5E,EAAOC,EAAQC,EAAQC,EAAQ3D,GACvE,OAAOd,EAAQ+J,WAAWtJ,GAAe8I,wBAAwBL,EAAS5E,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAatK2G,0BAA2B,SAAUN,EAAS5E,EAAOC,EAAQC,EAAQC,EAAQ3D,GACzE,OAAOd,EAAQ+J,WAAWtJ,GAAe+I,0BAA0BN,EAAS5E,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAYxK4G,WAAY,SAAUnF,EAAOC,EAAQC,EAAQC,EAAQ3D,GACjD,OAAOd,EAAQ+J,WAAWtJ,GAAegJ,WAAWnF,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUhJ6G,aAAc,SAAUjH,EAAIkH,EAAY7I,GACpC,OAAOd,EAAQ+J,WAAWtJ,GAAeiJ,aAAajH,EAAIkH,EAAY7I,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASnI+G,UAAW,SAAUnH,EAAI3B,GACrB,OAAOd,EAAQ+J,WAAWtJ,GAAemJ,UAAUnH,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUpHgH,uBAAwB,SAAUX,EAASzG,EAAI3B,GAC3C,OAAOd,EAAQ+J,WAAWtJ,GAAeoJ,uBAAuBX,EAASzG,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAS1IiH,YAAa,SAAUZ,EAASpI,GAC5B,OAAOd,EAAQ+J,WAAWtJ,GAAeqJ,YAAYZ,EAASpI,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAUnI,IAAIoH,EAA0B,SAAU7G,GAEpC,SAAS6G,IACL,OAAkB,OAAX7G,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAmJ/D,OArJAD,EAAU6N,EAAU7G,GAapB6G,EAASjN,UAAUiM,WAAa,SAAUC,EAASC,EAAWrI,GAC1D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ+J,WAAW1N,KAAKoE,eAAewI,WAAWC,EAASC,EAAWrI,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUtJoH,EAASjN,UAAUoM,YAAc,SAAUF,EAASpI,GAChD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ+J,WAAW1N,KAAKoE,eAAe2I,YAAYF,EAASpI,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAS5IoH,EAASjN,UAAUqM,YAAc,SAAUvI,GACvC,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ+J,WAAW1N,KAAKoE,eAAe4I,YAAYvI,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUnIoH,EAASjN,UAAUsM,aAAe,SAAU7G,EAAI3B,GAC5C,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ+J,WAAW1N,KAAKoE,eAAe6I,aAAa7G,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAcxIoH,EAASjN,UAAUuM,wBAA0B,SAAUL,EAAS5E,EAAOC,EAAQC,EAAQC,EAAQ3D,GAC3F,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ+J,WAAW1N,KAAKoE,eAAe8I,wBAAwBL,EAAS5E,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAcvLoH,EAASjN,UAAUwM,0BAA4B,SAAUN,EAAS5E,EAAOC,EAAQC,EAAQC,EAAQ3D,GAC7F,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ+J,WAAW1N,KAAKoE,eAAe+I,0BAA0BN,EAAS5E,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAazLoH,EAASjN,UAAUyM,WAAa,SAAUnF,EAAOC,EAAQC,EAAQC,EAAQ3D,GACrE,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ+J,WAAW1N,KAAKoE,eAAegJ,WAAWnF,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWjKoH,EAASjN,UAAU0M,aAAe,SAAUjH,EAAIkH,EAAY7I,GACxD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ+J,WAAW1N,KAAKoE,eAAeiJ,aAAajH,EAAIkH,EAAY7I,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUpJoH,EAASjN,UAAU4M,UAAY,SAAUnH,EAAI3B,GACzC,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ+J,WAAW1N,KAAKoE,eAAemJ,UAAUnH,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWrIoH,EAASjN,UAAU6M,uBAAyB,SAAUX,EAASzG,EAAI3B,GAC/D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ+J,WAAW1N,KAAKoE,eAAeoJ,uBAAuBX,EAASzG,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAU3JoH,EAASjN,UAAU8M,YAAc,SAAUZ,EAASpI,GAChD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ+J,WAAW1N,KAAKoE,eAAeqJ,YAAYZ,EAASpI,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAErIoH,EAtJkB,CAuJ3B1J,EAAO8C,SACTrD,EAAQiK,SAAWA,EAKnBjK,EAAQkK,8BAAgC,SAAUzJ,GAC9C,IAAIC,EAAQrE,KACZ,MAAO,CAQH8N,iBAAkB,SAAU1H,EAAI3B,GAE5B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,8EAqBzC,OAnBAT,EAAe,oBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,UAAYZ,GAAcH,GAC/EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAgB7BkJ,qBAAsB,SAAUC,EAAa/F,EAAOC,EAAQC,EAAQC,EAAQ3D,GAExE,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAI8I,MAAAA,EACA,MAAM,IAAI9J,EAAOiB,cAAc,cAAe,2FAiClD,OA/BAT,EAAe,iDACVU,QAAQ,kBAA6BC,mBAAmBC,OAAO0I,KACpErJ,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAExBnC,IAAXoC,IACApD,EAA+B,OAAIoD,QAExBpC,IAAXqC,IACArD,EAAgC,QAAIqD,GAExCzD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAgB7BoJ,8BAA+B,SAAUD,EAAa/F,EAAOC,EAAQC,EAAQC,EAAQ3D,GAEjF,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAI8I,MAAAA,EACA,MAAM,IAAI9J,EAAOiB,cAAc,cAAe,oGAiClD,OA/BAT,EAAe,iDACVU,QAAQ,kBAA6BC,mBAAmBC,OAAO0I,KACpErJ,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAExBnC,IAAXoC,IACApD,EAA+B,OAAIoD,QAExBpC,IAAXqC,IACArD,EAAgC,QAAIqD,GAExCzD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAe7BqJ,eAAgB,SAAUjG,EAAOC,EAAQC,EAAQC,EAAQ3D,GAErD,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GA+B/B,OA7BAP,EAAiBX,EAAgBuB,MADlB,gBACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAExBnC,IAAXoC,IACApD,EAA+B,OAAIoD,QAExBpC,IAAXqC,IACArD,EAAgC,QAAIqD,GAExCzD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BsJ,iBAAkB,SAAU/H,EAAIkH,EAAY7I,GAExC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,8EAGzC,GAAImI,MAAAA,EACA,MAAM,IAAIpJ,EAAOiB,cAAc,aAAc,sFAwBjD,OAtBAT,EAAe,4BACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA4C,iBAAfqI,GAA+E,qBAAnDzI,EAAuBc,QAAQ,gBACxFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAyBC,IAAfuH,EAA2BA,EAAa,IAAOA,GAAc,GACxH,CAAC,EAAc,CACdtH,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BuJ,cAAe,SAAUhI,EAAI3B,GAEzB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,2EAqBzC,OAnBAT,EAAe,oBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQ0K,eAAiB,SAAUjK,GAC/B,MAAO,CAQH0J,iBAAkB,SAAU1H,EAAI3B,GAC5B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQkK,8BAA8BzJ,GAAe0J,iBAAiB1H,EAAI3B,IACvG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAiBjDoH,qBAAsB,SAAUC,EAAa/F,EAAOC,EAAQC,EAAQC,EAAQ3D,GACxE,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQkK,8BAA8BzJ,GAAe2J,qBAAqBC,EAAa/F,EAAOC,EAAQC,EAAQC,EAAQ3D,IACnJ,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAiBjDsH,8BAA+B,SAAUD,EAAa/F,EAAOC,EAAQC,EAAQC,EAAQ3D,GACjF,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQkK,8BAA8BzJ,GAAe6J,8BAA8BD,EAAa/F,EAAOC,EAAQC,EAAQC,EAAQ3D,IAC5J,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAgBjDuH,eAAgB,SAAUjG,EAAOC,EAAQC,EAAQC,EAAQ3D,GACrD,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQkK,8BAA8BzJ,GAAe8J,eAAejG,EAAOC,EAAQC,EAAQC,EAAQ3D,IAChI,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDwH,iBAAkB,SAAU/H,EAAIkH,EAAY7I,GACxC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQkK,8BAA8BzJ,GAAe+J,iBAAiB/H,EAAIkH,EAAY7I,IACnH,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDyH,cAAe,SAAUhI,EAAI3B,GACzB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQkK,8BAA8BzJ,GAAegK,cAAchI,EAAI3B,IACpG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQ2K,oBAAsB,SAAUlK,EAAeoC,EAAUD,GAC7D,MAAO,CAQHuH,iBAAkB,SAAU1H,EAAI3B,GAC5B,OAAOd,EAAQ0K,eAAejK,GAAe0J,iBAAiB1H,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAa/HuH,qBAAsB,SAAUC,EAAa/F,EAAOC,EAAQC,EAAQC,EAAQ3D,GACxE,OAAOd,EAAQ0K,eAAejK,GAAe2J,qBAAqBC,EAAa/F,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAa3KyH,8BAA+B,SAAUD,EAAa/F,EAAOC,EAAQC,EAAQC,EAAQ3D,GACjF,OAAOd,EAAQ0K,eAAejK,GAAe6J,8BAA8BD,EAAa/F,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAYpL0H,eAAgB,SAAUjG,EAAOC,EAAQC,EAAQC,EAAQ3D,GACrD,OAAOd,EAAQ0K,eAAejK,GAAe8J,eAAejG,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUxJ2H,iBAAkB,SAAU/H,EAAIkH,EAAY7I,GACxC,OAAOd,EAAQ0K,eAAejK,GAAe+J,iBAAiB/H,EAAIkH,EAAY7I,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAS3I4H,cAAe,SAAUhI,EAAI3B,GACzB,OAAOd,EAAQ0K,eAAejK,GAAegK,cAAchI,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAUpI,IAAI+H,EAA8B,SAAUxH,GAExC,SAASwH,IACL,OAAkB,OAAXxH,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAsF/D,OAxFAD,EAAUwO,EAAcxH,GAYxBwH,EAAa5N,UAAUmN,iBAAmB,SAAU1H,EAAI3B,GACpD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0K,eAAerO,KAAKoE,eAAe0J,iBAAiB1H,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAchJ+H,EAAa5N,UAAUoN,qBAAuB,SAAUC,EAAa/F,EAAOC,EAAQC,EAAQC,EAAQ3D,GAChG,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0K,eAAerO,KAAKoE,eAAe2J,qBAAqBC,EAAa/F,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAc5L+H,EAAa5N,UAAUsN,8BAAgC,SAAUD,EAAa/F,EAAOC,EAAQC,EAAQC,EAAQ3D,GACzG,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0K,eAAerO,KAAKoE,eAAe6J,8BAA8BD,EAAa/F,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAarM+H,EAAa5N,UAAUuN,eAAiB,SAAUjG,EAAOC,EAAQC,EAAQC,EAAQ3D,GAC7E,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0K,eAAerO,KAAKoE,eAAe8J,eAAejG,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWzK+H,EAAa5N,UAAUwN,iBAAmB,SAAU/H,EAAIkH,EAAY7I,GAChE,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0K,eAAerO,KAAKoE,eAAe+J,iBAAiB/H,EAAIkH,EAAY7I,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAU5J+H,EAAa5N,UAAUyN,cAAgB,SAAUhI,EAAI3B,GACjD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0K,eAAerO,KAAKoE,eAAegK,cAAchI,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAEtI+H,EAzFsB,CA0F/BrK,EAAO8C,SACTrD,EAAQ4K,aAAeA,EAKvB5K,EAAQ6K,iCAAmC,SAAUpK,GACjD,IAAIC,EAAQrE,KACZ,MAAO,CASHyO,yBAA0B,SAAUrI,EAAIsI,EAA6BjK,GAEjE,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,sFAGzC,GAAIuJ,MAAAA,EACA,MAAM,IAAIxK,EAAOiB,cAAc,8BAA+B,+GAwBlE,OAtBAT,EAAe,6CACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,SAAWZ,GAAcH,GAC9EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA6D,iBAAhCyJ,GAAgG,qBAAnD7J,EAAuBc,QAAQ,gBACzGd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAA0CC,IAAhC2I,EAA4CA,EAA8B,IAAOA,GAA+B,GAC3K,CAAC,EAAc,CACd1I,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7B8J,0BAA2B,SAAUvI,EAAIsI,EAA6BjK,GAElE,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,uFAGzC,GAAIuJ,MAAAA,EACA,MAAM,IAAIxK,EAAOiB,cAAc,8BAA+B,gHAwBlE,OAtBAT,EAAe,8CACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,SAAWZ,GAAcH,GAC9EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA6D,iBAAhCyJ,GAAgG,qBAAnD7J,EAAuBc,QAAQ,gBACzGd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAA0CC,IAAhC2I,EAA4CA,EAA8B,IAAOA,GAA+B,GAC3K,CAAC,EAAc,CACd1I,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7B+J,0BAA2B,SAAUxI,EAAIsI,EAA6BjK,GAElE,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,uFAGzC,GAAIuJ,MAAAA,EACA,MAAM,IAAIxK,EAAOiB,cAAc,8BAA+B,gHAwBlE,OAtBAT,EAAe,8CACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,SAAWZ,GAAcH,GAC9EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA6D,iBAAhCyJ,GAAgG,qBAAnD7J,EAAuBc,QAAQ,gBACzGd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAA0CC,IAAhC2I,EAA4CA,EAA8B,IAAOA,GAA+B,GAC3K,CAAC,EAAc,CACd1I,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BgK,mBAAoB,SAAUC,EAAcrK,GAExC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAI4J,MAAAA,EACA,MAAM,IAAI5K,EAAOiB,cAAc,eAAgB,0FAuBnD,OApBAR,EAAiBX,EAAgBuB,MADlB,oBACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA8C,iBAAjB6J,GAAiF,qBAAnDjK,EAAuBc,QAAQ,gBAC1Fd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAA2BC,IAAjB+I,EAA6BA,EAAe,IAAOA,GAAgB,GAC9H,CAAC,EAAc,CACd9I,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BkK,oBAAqB,SAAU3I,EAAI3B,GAE/B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,iFAqBzC,OAnBAT,EAAe,wBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,UAAYZ,GAAcH,GAC/EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BmK,sBAAuB,SAAU5I,EAAImD,EAAgB9E,GAEjD,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,mFAGzC,GAAIoE,MAAAA,EACA,MAAM,IAAIrF,EAAOiB,cAAc,iBAAkB,+FAwBrD,OAtBAT,EAAe,6BACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAgD,iBAAnBsE,GAAmF,qBAAnD1E,EAAuBc,QAAQ,gBAC5Fd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAA6BC,IAAnBwD,EAA+BA,EAAiB,IAAOA,GAAkB,GACpI,CAAC,EAAc,CACdvD,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAkB7BoK,mBAAoB,SAAUxF,EAASC,EAAUC,EAAY1B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAExF,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAwC/B,OAtCAP,EAAiBX,EAAgBuB,MADlB,oBACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEjFlF,IAAZ0D,IACA1E,EAAiC,SAAI0E,QAExB1D,IAAb2D,IACA3E,EAAkC,UAAI2E,QAEvB3D,IAAf4D,IACA5E,EAAoC,YAAI4E,QAE9B5D,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAExBnC,IAAXoC,IACApD,EAA+B,OAAIoD,QAExBpC,IAAXqC,IACArD,EAAgC,QAAIqD,GAExCzD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BqK,8BAA+B,SAAU9I,EAAI+I,EAAkC1K,GAE3E,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,2FAGzC,GAAIgK,MAAAA,EACA,MAAM,IAAIjL,EAAOiB,cAAc,mCAAoC,yHAwBvE,OAtBAT,EAAe,2CACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAkE,iBAArCkK,GAAqG,qBAAnDtK,EAAuBc,QAAQ,gBAC9Gd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAA+CC,IAArCoJ,EAAiDA,EAAmC,IAAOA,GAAoC,GAC1L,CAAC,EAAc,CACdnJ,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BuK,iBAAkB,SAAUhJ,EAAI3B,GAE5B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,8EAqBzC,OAnBAT,EAAe,wBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BwK,0BAA2B,SAAUjJ,EAAImD,EAAgB9E,GAErD,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,uFAGzC,GAAIoE,MAAAA,EACA,MAAM,IAAIrF,EAAOiB,cAAc,iBAAkB,mGAwBrD,OAtBAT,EAAe,+BACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAgD,iBAAnBsE,GAAmF,qBAAnD1E,EAAuBc,QAAQ,gBAC5Fd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAA6BC,IAAnBwD,EAA+BA,EAAiB,IAAOA,GAAkB,GACpI,CAAC,EAAc,CACdvD,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7ByK,mBAAoB,SAAUlJ,EAAI0I,EAAcrK,GAE5C,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,gFAGzC,GAAI2J,MAAAA,EACA,MAAM,IAAI5K,EAAOiB,cAAc,eAAgB,0FAwBnD,OAtBAT,EAAe,wBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,SAAWZ,GAAcH,GAC9EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA8C,iBAAjB6J,GAAiF,qBAAnDjK,EAAuBc,QAAQ,gBAC1Fd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAA2BC,IAAjB+I,EAA6BA,EAAe,IAAOA,GAAgB,GAC9H,CAAC,EAAc,CACd9I,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQ4L,kBAAoB,SAAUnL,GAClC,MAAO,CASHqK,yBAA0B,SAAUrI,EAAIsI,EAA6BjK,GACjE,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ6K,iCAAiCpK,GAAeqK,yBAAyBrI,EAAIsI,EAA6BjK,IAC/I,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDgI,0BAA2B,SAAUvI,EAAIsI,EAA6BjK,GAClE,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ6K,iCAAiCpK,GAAeuK,0BAA0BvI,EAAIsI,EAA6BjK,IAChJ,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDiI,0BAA2B,SAAUxI,EAAIsI,EAA6BjK,GAClE,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ6K,iCAAiCpK,GAAewK,0BAA0BxI,EAAIsI,EAA6BjK,IAChJ,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDkI,mBAAoB,SAAUC,EAAcrK,GACxC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ6K,iCAAiCpK,GAAeyK,mBAAmBC,EAAcrK,IACtH,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDoI,oBAAqB,SAAU3I,EAAI3B,GAC/B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ6K,iCAAiCpK,GAAe2K,oBAAoB3I,EAAI3B,IAC7G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDqI,sBAAuB,SAAU5I,EAAImD,EAAgB9E,GACjD,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ6K,iCAAiCpK,GAAe4K,sBAAsB5I,EAAImD,EAAgB9E,IAC/H,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAmBjDsI,mBAAoB,SAAUxF,EAASC,EAAUC,EAAY1B,EAAOC,EAAQC,EAAQC,EAAQ3D,GACxF,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ6K,iCAAiCpK,GAAe6K,mBAAmBxF,EAASC,EAAUC,EAAY1B,EAAOC,EAAQC,EAAQC,EAAQ3D,IACtK,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDuI,8BAA+B,SAAU9I,EAAI+I,EAAkC1K,GAC3E,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ6K,iCAAiCpK,GAAe8K,8BAA8B9I,EAAI+I,EAAkC1K,IACzJ,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDyI,iBAAkB,SAAUhJ,EAAI3B,GAC5B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ6K,iCAAiCpK,GAAegL,iBAAiBhJ,EAAI3B,IAC1G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjD0I,0BAA2B,SAAUjJ,EAAImD,EAAgB9E,GACrD,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ6K,iCAAiCpK,GAAeiL,0BAA0BjJ,EAAImD,EAAgB9E,IACnI,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjD2I,mBAAoB,SAAUlJ,EAAI0I,EAAcrK,GAC5C,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ6K,iCAAiCpK,GAAekL,mBAAmBlJ,EAAI0I,EAAcrK,IAC1H,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQ6L,uBAAyB,SAAUpL,EAAeoC,EAAUD,GAChE,MAAO,CASHkI,yBAA0B,SAAUrI,EAAIsI,EAA6BjK,GACjE,OAAOd,EAAQ4L,kBAAkBnL,GAAeqK,yBAAyBrI,EAAIsI,EAA6BjK,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUvKmI,0BAA2B,SAAUvI,EAAIsI,EAA6BjK,GAClE,OAAOd,EAAQ4L,kBAAkBnL,GAAeuK,0BAA0BvI,EAAIsI,EAA6BjK,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUxKoI,0BAA2B,SAAUxI,EAAIsI,EAA6BjK,GAClE,OAAOd,EAAQ4L,kBAAkBnL,GAAewK,0BAA0BxI,EAAIsI,EAA6BjK,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASxKqI,mBAAoB,SAAUC,EAAcrK,GACxC,OAAOd,EAAQ4L,kBAAkBnL,GAAeyK,mBAAmBC,EAAcrK,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAS9IuI,oBAAqB,SAAU3I,EAAI3B,GAC/B,OAAOd,EAAQ4L,kBAAkBnL,GAAe2K,oBAAoB3I,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUrIwI,sBAAuB,SAAU5I,EAAImD,EAAgB9E,GACjD,OAAOd,EAAQ4L,kBAAkBnL,GAAe4K,sBAAsB5I,EAAImD,EAAgB9E,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAevJyI,mBAAoB,SAAUxF,EAASC,EAAUC,EAAY1B,EAAOC,EAAQC,EAAQC,EAAQ3D,GACxF,OAAOd,EAAQ4L,kBAAkBnL,GAAe6K,mBAAmBxF,EAASC,EAAUC,EAAY1B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAU9L0I,8BAA+B,SAAU9I,EAAI+I,EAAkC1K,GAC3E,OAAOd,EAAQ4L,kBAAkBnL,GAAe8K,8BAA8B9I,EAAI+I,EAAkC1K,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASjL4I,iBAAkB,SAAUhJ,EAAI3B,GAC5B,OAAOd,EAAQ4L,kBAAkBnL,GAAegL,iBAAiBhJ,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUlI6I,0BAA2B,SAAUjJ,EAAImD,EAAgB9E,GACrD,OAAOd,EAAQ4L,kBAAkBnL,GAAeiL,0BAA0BjJ,EAAImD,EAAgB9E,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAU3J8I,mBAAoB,SAAUlJ,EAAI0I,EAAcrK,GAC5C,OAAOd,EAAQ4L,kBAAkBnL,GAAekL,mBAAmBlJ,EAAI0I,EAAcrK,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAU1J,IAAIiJ,EAAiC,SAAU1I,GAE3C,SAAS0I,IACL,OAAkB,OAAX1I,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAmJ/D,OArJAD,EAAU0P,EAAiB1I,GAa3B0I,EAAgB9O,UAAU8N,yBAA2B,SAAUrI,EAAIsI,EAA6BjK,GAC5F,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ4L,kBAAkBvP,KAAKoE,eAAeqK,yBAAyBrI,EAAIsI,EAA6BjK,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWxLiJ,EAAgB9O,UAAUgO,0BAA4B,SAAUvI,EAAIsI,EAA6BjK,GAC7F,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ4L,kBAAkBvP,KAAKoE,eAAeuK,0BAA0BvI,EAAIsI,EAA6BjK,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWzLiJ,EAAgB9O,UAAUiO,0BAA4B,SAAUxI,EAAIsI,EAA6BjK,GAC7F,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ4L,kBAAkBvP,KAAKoE,eAAewK,0BAA0BxI,EAAIsI,EAA6BjK,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUzLiJ,EAAgB9O,UAAUkO,mBAAqB,SAAUC,EAAcrK,GACnE,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ4L,kBAAkBvP,KAAKoE,eAAeyK,mBAAmBC,EAAcrK,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAU/JiJ,EAAgB9O,UAAUoO,oBAAsB,SAAU3I,EAAI3B,GAC1D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ4L,kBAAkBvP,KAAKoE,eAAe2K,oBAAoB3I,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWtJiJ,EAAgB9O,UAAUqO,sBAAwB,SAAU5I,EAAImD,EAAgB9E,GAC5E,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ4L,kBAAkBvP,KAAKoE,eAAe4K,sBAAsB5I,EAAImD,EAAgB9E,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAgBxKiJ,EAAgB9O,UAAUsO,mBAAqB,SAAUxF,EAASC,EAAUC,EAAY1B,EAAOC,EAAQC,EAAQC,EAAQ3D,GACnH,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ4L,kBAAkBvP,KAAKoE,eAAe6K,mBAAmBxF,EAASC,EAAUC,EAAY1B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAW/MiJ,EAAgB9O,UAAUuO,8BAAgC,SAAU9I,EAAI+I,EAAkC1K,GACtG,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ4L,kBAAkBvP,KAAKoE,eAAe8K,8BAA8B9I,EAAI+I,EAAkC1K,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUlMiJ,EAAgB9O,UAAUyO,iBAAmB,SAAUhJ,EAAI3B,GACvD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ4L,kBAAkBvP,KAAKoE,eAAegL,iBAAiBhJ,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWnJiJ,EAAgB9O,UAAU0O,0BAA4B,SAAUjJ,EAAImD,EAAgB9E,GAChF,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ4L,kBAAkBvP,KAAKoE,eAAeiL,0BAA0BjJ,EAAImD,EAAgB9E,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAW5KiJ,EAAgB9O,UAAU2O,mBAAqB,SAAUlJ,EAAI0I,EAAcrK,GACvE,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ4L,kBAAkBvP,KAAKoE,eAAekL,mBAAmBlJ,EAAI0I,EAAcrK,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAE5JiJ,EAtJyB,CAuJlCvL,EAAO8C,SACTrD,EAAQ8L,gBAAkBA,EAK1B9L,EAAQ+L,8BAAgC,SAAUtL,GAC9C,IAAIC,EAAQrE,KACZ,MAAO,CASH2P,gBAAiB,SAAUvJ,EAAIwJ,EAAKnL,GAEhC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,6EAGzC,GAAIyK,MAAAA,EACA,MAAM,IAAI1L,EAAOiB,cAAc,MAAO,8EAwB1C,OAtBAT,EAAe,uBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAqC,iBAAR2K,GAAwE,qBAAnD/K,EAAuBc,QAAQ,gBACjFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAkBC,IAAR6J,EAAoBA,EAAM,IAAOA,GAAO,GACnG,CAAC,EAAc,CACd5J,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BgL,gBAAiB,SAAUC,EAAWrL,GAElC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAI4K,MAAAA,EACA,MAAM,IAAI5L,EAAOiB,cAAc,YAAa,oFAuBhD,OApBAR,EAAiBX,EAAgBuB,MADlB,eACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA2C,iBAAd6K,GAA8E,qBAAnDjL,EAAuBc,QAAQ,gBACvFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAwBC,IAAd+J,EAA0BA,EAAY,IAAOA,GAAa,GACrH,CAAC,EAAc,CACd9J,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BkL,iBAAkB,SAAU3J,EAAI3B,GAE5B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,8EAqBzC,OAnBAT,EAAe,mBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,UAAYZ,GAAcH,GAC/EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAgB7BmL,iCAAkC,SAAU9D,EAAajE,EAAOC,EAAQC,EAAQC,EAAQ3D,GAEpF,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIgH,MAAAA,EACA,MAAM,IAAIhI,EAAOiB,cAAc,cAAe,uGAiClD,OA/BAT,EAAe,6CACVU,QAAQ,iBAA4BC,mBAAmBC,OAAO4G,KACnEvH,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAExBnC,IAAXoC,IACApD,EAA+B,OAAIoD,QAExBpC,IAAXqC,IACArD,EAAgC,QAAIqD,GAExCzD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAgB7BoL,kBAAmB,SAAU7J,EAAI6B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAE5D,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,+EAiCzC,OA/BAT,EAAe,wBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAExBnC,IAAXoC,IACApD,EAA+B,OAAIoD,QAExBpC,IAAXqC,IACArD,EAAgC,QAAIqD,GAExCzD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAe7BqL,eAAgB,SAAUjI,EAAOC,EAAQC,EAAQC,EAAQ3D,GAErD,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GA+B/B,OA7BAP,EAAiBX,EAAgBuB,MADlB,eACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAExBnC,IAAXoC,IACApD,EAA+B,OAAIoD,QAExBpC,IAAXqC,IACArD,EAAgC,QAAIqD,GAExCzD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BsL,kBAAmB,SAAUjE,EAAazH,GAEtC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIgH,MAAAA,EACA,MAAM,IAAIhI,EAAOiB,cAAc,cAAe,wFAqBlD,OAnBAT,EAAe,kCACVU,QAAQ,iBAA4BC,mBAAmBC,OAAO4G,KACnEvH,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BuL,oBAAqB,SAAUhK,EAAIwJ,EAAKnL,GAEpC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,iFAGzC,GAAIyK,MAAAA,EACA,MAAM,IAAI1L,EAAOiB,cAAc,MAAO,kFAwB1C,OAtBAT,EAAe,yBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAqC,iBAAR2K,GAAwE,qBAAnD/K,EAAuBc,QAAQ,gBACjFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAkBC,IAAR6J,EAAoBA,EAAM,IAAOA,GAAO,GACnG,CAAC,EAAc,CACd5J,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BwL,UAAW,SAAUnE,EAAazH,GAE9B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIgH,MAAAA,EACA,MAAM,IAAIhI,EAAOiB,cAAc,cAAe,gFAqBlD,OAnBAT,EAAe,wCACVU,QAAQ,iBAA4BC,mBAAmBC,OAAO4G,KACnEvH,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7ByL,eAAgB,SAAUpE,EAAaqE,EAAa9L,GAEhD,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIgH,MAAAA,EACA,MAAM,IAAIhI,EAAOiB,cAAc,cAAe,qFAGlD,GAAIoL,MAAAA,EACA,MAAM,IAAIrM,EAAOiB,cAAc,cAAe,qFAwBlD,OAtBAT,EAAe,mCACVU,QAAQ,iBAA4BC,mBAAmBC,OAAO4G,KACnEvH,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA6C,iBAAhBsL,GAAgF,qBAAnD1L,EAAuBc,QAAQ,gBACzFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAA0BC,IAAhBwK,EAA4BA,EAAc,IAAOA,GAAe,GAC3H,CAAC,EAAc,CACdvK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7B2L,cAAe,SAAUpK,EAAI3B,GAEzB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,2EAqBzC,OAnBAT,EAAe,mBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7B4L,kBAAmB,SAAUvE,EAAawE,EAASjM,GAE/C,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIgH,MAAAA,EACA,MAAM,IAAIhI,EAAOiB,cAAc,cAAe,wFAwBlD,OAtBAT,EAAe,kCACVU,QAAQ,iBAA4BC,mBAAmBC,OAAO4G,KACnEvH,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEjFlF,IAAZ2K,IACA3L,EAAiC,SAAI2L,GAEzC/L,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7B8L,kBAAmB,SAAUvK,EAAIkH,EAAY7I,GAEzC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,+EAGzC,GAAImI,MAAAA,EACA,MAAM,IAAIpJ,EAAOiB,cAAc,aAAc,uFAwBjD,OAtBAT,EAAe,4BACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA4C,iBAAfqI,GAA+E,qBAAnDzI,EAAuBc,QAAQ,gBACxFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAyBC,IAAfuH,EAA2BA,EAAa,IAAOA,GAAc,GACxH,CAAC,EAAc,CACdtH,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7B+L,iBAAkB,SAAU1E,EAAa2E,EAAepM,GAEpD,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIgH,MAAAA,EACA,MAAM,IAAIhI,EAAOiB,cAAc,cAAe,uFAGlD,GAAI0L,MAAAA,EACA,MAAM,IAAI3M,EAAOiB,cAAc,gBAAiB,yFAwBpD,OAtBAT,EAAe,qCACVU,QAAQ,iBAA4BC,mBAAmBC,OAAO4G,KACnEvH,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA+C,iBAAlB4L,GAAkF,qBAAnDhM,EAAuBc,QAAQ,gBAC3Fd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAA4BC,IAAlB8K,EAA8BA,EAAgB,IAAOA,GAAiB,GACjI,CAAC,EAAc,CACd7K,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BiM,gBAAiB,SAAU1K,EAAI0J,EAAWrL,GAEtC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,6EAGzC,GAAI2K,MAAAA,EACA,MAAM,IAAI5L,EAAOiB,cAAc,YAAa,oFAwBhD,OAtBAT,EAAe,mBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,SAAWZ,GAAcH,GAC9EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA2C,iBAAd6K,GAA8E,qBAAnDjL,EAAuBc,QAAQ,gBACvFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAwBC,IAAd+J,EAA0BA,EAAY,IAAOA,GAAa,GACrH,CAAC,EAAc,CACd9J,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQoN,eAAiB,SAAU3M,GAC/B,MAAO,CASHuL,gBAAiB,SAAUvJ,EAAIwJ,EAAKnL,GAChC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ+L,8BAA8BtL,GAAeuL,gBAAgBvJ,EAAIwJ,EAAKnL,IAC3G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDkJ,gBAAiB,SAAUC,EAAWrL,GAClC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ+L,8BAA8BtL,GAAeyL,gBAAgBC,EAAWrL,IAC7G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDoJ,iBAAkB,SAAU3J,EAAI3B,GAC5B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ+L,8BAA8BtL,GAAe2L,iBAAiB3J,EAAI3B,IACvG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAiBjDqJ,iCAAkC,SAAU9D,EAAajE,EAAOC,EAAQC,EAAQC,EAAQ3D,GACpF,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ+L,8BAA8BtL,GAAe4L,iCAAiC9D,EAAajE,EAAOC,EAAQC,EAAQC,EAAQ3D,IAC/J,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAiBjDsJ,kBAAmB,SAAU7J,EAAI6B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAC5D,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ+L,8BAA8BtL,GAAe6L,kBAAkB7J,EAAI6B,EAAOC,EAAQC,EAAQC,EAAQ3D,IACvI,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAgBjDuJ,eAAgB,SAAUjI,EAAOC,EAAQC,EAAQC,EAAQ3D,GACrD,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ+L,8BAA8BtL,GAAe8L,eAAejI,EAAOC,EAAQC,EAAQC,EAAQ3D,IAChI,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDwJ,kBAAmB,SAAUjE,EAAazH,GACtC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ+L,8BAA8BtL,GAAe+L,kBAAkBjE,EAAazH,IACjH,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDyJ,oBAAqB,SAAUhK,EAAIwJ,EAAKnL,GACpC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ+L,8BAA8BtL,GAAegM,oBAAoBhK,EAAIwJ,EAAKnL,IAC/G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajD0J,UAAW,SAAUnE,EAAazH,GAC9B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ+L,8BAA8BtL,GAAeiM,UAAUnE,EAAazH,IACzG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjD2J,eAAgB,SAAUpE,EAAaqE,EAAa9L,GAChD,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ+L,8BAA8BtL,GAAekM,eAAepE,EAAaqE,EAAa9L,IAC3H,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajD6J,cAAe,SAAUpK,EAAI3B,GACzB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ+L,8BAA8BtL,GAAeoM,cAAcpK,EAAI3B,IACpG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjD8J,kBAAmB,SAAUvE,EAAawE,EAASjM,GAC/C,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ+L,8BAA8BtL,GAAeqM,kBAAkBvE,EAAawE,EAASjM,IAC1H,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDgK,kBAAmB,SAAUvK,EAAIkH,EAAY7I,GACzC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ+L,8BAA8BtL,GAAeuM,kBAAkBvK,EAAIkH,EAAY7I,IACpH,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDiK,iBAAkB,SAAU1E,EAAa2E,EAAepM,GACpD,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ+L,8BAA8BtL,GAAewM,iBAAiB1E,EAAa2E,EAAepM,IAC/H,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDmK,gBAAiB,SAAU1K,EAAI0J,EAAWrL,GACtC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ+L,8BAA8BtL,GAAe0M,gBAAgB1K,EAAI0J,EAAWrL,IACjH,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQqN,oBAAsB,SAAU5M,EAAeoC,EAAUD,GAC7D,MAAO,CASHoJ,gBAAiB,SAAUvJ,EAAIwJ,EAAKnL,GAChC,OAAOd,EAAQoN,eAAe3M,GAAeuL,gBAAgBvJ,EAAIwJ,EAAKnL,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASnIqJ,gBAAiB,SAAUC,EAAWrL,GAClC,OAAOd,EAAQoN,eAAe3M,GAAeyL,gBAAgBC,EAAWrL,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASrIuJ,iBAAkB,SAAU3J,EAAI3B,GAC5B,OAAOd,EAAQoN,eAAe3M,GAAe2L,iBAAiB3J,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAa/HwJ,iCAAkC,SAAU9D,EAAajE,EAAOC,EAAQC,EAAQC,EAAQ3D,GACpF,OAAOd,EAAQoN,eAAe3M,GAAe4L,iCAAiC9D,EAAajE,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAavLyJ,kBAAmB,SAAU7J,EAAI6B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAC5D,OAAOd,EAAQoN,eAAe3M,GAAe6L,kBAAkB7J,EAAI6B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAY/J0J,eAAgB,SAAUjI,EAAOC,EAAQC,EAAQC,EAAQ3D,GACrD,OAAOd,EAAQoN,eAAe3M,GAAe8L,eAAejI,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASxJ2J,kBAAmB,SAAUjE,EAAazH,GACtC,OAAOd,EAAQoN,eAAe3M,GAAe+L,kBAAkBjE,EAAazH,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUzI4J,oBAAqB,SAAUhK,EAAIwJ,EAAKnL,GACpC,OAAOd,EAAQoN,eAAe3M,GAAegM,oBAAoBhK,EAAIwJ,EAAKnL,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASvI6J,UAAW,SAAUnE,EAAazH,GAC9B,OAAOd,EAAQoN,eAAe3M,GAAeiM,UAAUnE,EAAazH,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUjI8J,eAAgB,SAAUpE,EAAaqE,EAAa9L,GAChD,OAAOd,EAAQoN,eAAe3M,GAAekM,eAAepE,EAAaqE,EAAa9L,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASnJgK,cAAe,SAAUpK,EAAI3B,GACzB,OAAOd,EAAQoN,eAAe3M,GAAeoM,cAAcpK,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAU5HiK,kBAAmB,SAAUvE,EAAawE,EAASjM,GAC/C,OAAOd,EAAQoN,eAAe3M,GAAeqM,kBAAkBvE,EAAawE,EAASjM,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUlJmK,kBAAmB,SAAUvK,EAAIkH,EAAY7I,GACzC,OAAOd,EAAQoN,eAAe3M,GAAeuM,kBAAkBvK,EAAIkH,EAAY7I,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAU5IoK,iBAAkB,SAAU1E,EAAa2E,EAAepM,GACpD,OAAOd,EAAQoN,eAAe3M,GAAewM,iBAAiB1E,EAAa2E,EAAepM,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUvJsK,gBAAiB,SAAU1K,EAAI0J,EAAWrL,GACtC,OAAOd,EAAQoN,eAAe3M,GAAe0M,gBAAgB1K,EAAI0J,EAAWrL,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAUjJ,IAAIyK,EAA8B,SAAUlK,GAExC,SAASkK,IACL,OAAkB,OAAXlK,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAwM/D,OA1MAD,EAAUkR,EAAclK,GAaxBkK,EAAatQ,UAAUgP,gBAAkB,SAAUvJ,EAAIwJ,EAAKnL,GACxD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQoN,eAAe/Q,KAAKoE,eAAeuL,gBAAgBvJ,EAAIwJ,EAAKnL,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUpJyK,EAAatQ,UAAUkP,gBAAkB,SAAUC,EAAWrL,GAC1D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQoN,eAAe/Q,KAAKoE,eAAeyL,gBAAgBC,EAAWrL,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUtJyK,EAAatQ,UAAUoP,iBAAmB,SAAU3J,EAAI3B,GACpD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQoN,eAAe/Q,KAAKoE,eAAe2L,iBAAiB3J,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAchJyK,EAAatQ,UAAUqP,iCAAmC,SAAU9D,EAAajE,EAAOC,EAAQC,EAAQC,EAAQ3D,GAC5G,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQoN,eAAe/Q,KAAKoE,eAAe4L,iCAAiC9D,EAAajE,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAcxMyK,EAAatQ,UAAUsP,kBAAoB,SAAU7J,EAAI6B,EAAOC,EAAQC,EAAQC,EAAQ3D,GACpF,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQoN,eAAe/Q,KAAKoE,eAAe6L,kBAAkB7J,EAAI6B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAahLyK,EAAatQ,UAAUuP,eAAiB,SAAUjI,EAAOC,EAAQC,EAAQC,EAAQ3D,GAC7E,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQoN,eAAe/Q,KAAKoE,eAAe8L,eAAejI,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUzKyK,EAAatQ,UAAUwP,kBAAoB,SAAUjE,EAAazH,GAC9D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQoN,eAAe/Q,KAAKoE,eAAe+L,kBAAkBjE,EAAazH,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAW1JyK,EAAatQ,UAAUyP,oBAAsB,SAAUhK,EAAIwJ,EAAKnL,GAC5D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQoN,eAAe/Q,KAAKoE,eAAegM,oBAAoBhK,EAAIwJ,EAAKnL,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUxJyK,EAAatQ,UAAU0P,UAAY,SAAUnE,EAAazH,GACtD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQoN,eAAe/Q,KAAKoE,eAAeiM,UAAUnE,EAAazH,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWlJyK,EAAatQ,UAAU2P,eAAiB,SAAUpE,EAAaqE,EAAa9L,GACxE,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQoN,eAAe/Q,KAAKoE,eAAekM,eAAepE,EAAaqE,EAAa9L,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUpKyK,EAAatQ,UAAU6P,cAAgB,SAAUpK,EAAI3B,GACjD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQoN,eAAe/Q,KAAKoE,eAAeoM,cAAcpK,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAW7IyK,EAAatQ,UAAU8P,kBAAoB,SAAUvE,EAAawE,EAASjM,GACvE,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQoN,eAAe/Q,KAAKoE,eAAeqM,kBAAkBvE,EAAawE,EAASjM,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWnKyK,EAAatQ,UAAUgQ,kBAAoB,SAAUvK,EAAIkH,EAAY7I,GACjE,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQoN,eAAe/Q,KAAKoE,eAAeuM,kBAAkBvK,EAAIkH,EAAY7I,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAW7JyK,EAAatQ,UAAUiQ,iBAAmB,SAAU1E,EAAa2E,EAAepM,GAC5E,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQoN,eAAe/Q,KAAKoE,eAAewM,iBAAiB1E,EAAa2E,EAAepM,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWxKyK,EAAatQ,UAAUmQ,gBAAkB,SAAU1K,EAAI0J,EAAWrL,GAC9D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQoN,eAAe/Q,KAAKoE,eAAe0M,gBAAgB1K,EAAI0J,EAAWrL,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAEnJyK,EA3MsB,CA4M/B/M,EAAO8C,SACTrD,EAAQsN,aAAeA,EAKvBtN,EAAQuN,kCAAoC,SAAU9M,GAClD,IAAIC,EAAQrE,KACZ,MAAO,CASHmR,oBAAqB,SAAU/K,EAAIwJ,EAAKnL,GAEpC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,iFAGzC,GAAIyK,MAAAA,EACA,MAAM,IAAI1L,EAAOiB,cAAc,MAAO,kFAwB1C,OAtBAT,EAAe,4BACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAqC,iBAAR2K,GAAwE,qBAAnD/K,EAAuBc,QAAQ,gBACjFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAkBC,IAAR6J,EAAoBA,EAAM,IAAOA,GAAO,GACnG,CAAC,EAAc,CACd5J,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BuM,oBAAqB,SAAUA,EAAqB3M,GAEhD,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkM,MAAAA,EACA,MAAM,IAAIlN,EAAOiB,cAAc,sBAAuB,kGAuB1D,OApBAR,EAAiBX,EAAgBuB,MADlB,oBACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAqD,iBAAxBmM,GAAwF,qBAAnDvM,EAAuBc,QAAQ,gBACjGd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAkCC,IAAxBqL,EAAoCA,EAAsB,IAAOA,GAAuB,GACnJ,CAAC,EAAc,CACdpL,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BwM,qBAAsB,SAAUjL,EAAI3B,GAEhC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,kFAqBzC,OAnBAT,EAAe,wBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,UAAYZ,GAAcH,GAC/EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7ByM,yBAA0B,SAAUnF,EAAiBoF,EAAwB9M,GAEzE,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIiH,MAAAA,EACA,MAAM,IAAIjI,EAAOiB,cAAc,kBAAmB,mGAwBtD,OAtBAT,EAAe,iDACVU,QAAQ,sBAAiCC,mBAAmBC,OAAO6G,KACxExH,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAElElF,IAA3BwL,IACAxM,EAAiD,yBAAIwM,GAEzD5M,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAgB7B2M,sBAAuB,SAAUpL,EAAI6B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAEhE,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,mFAiCzC,OA/BAT,EAAe,6BACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAExBnC,IAAXoC,IACApD,EAA+B,OAAIoD,QAExBpC,IAAXqC,IACArD,EAAgC,QAAIqD,GAExCzD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAe7B4M,mBAAoB,SAAUxJ,EAAOC,EAAQC,EAAQC,EAAQ3D,GAEzD,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GA+B/B,OA7BAP,EAAiBX,EAAgBuB,MADlB,oBACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAExBnC,IAAXoC,IACApD,EAA+B,OAAIoD,QAExBpC,IAAXqC,IACArD,EAAgC,QAAIqD,GAExCzD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7B6M,8BAA+B,SAAUvF,EAAiB1H,GAEtD,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIiH,MAAAA,EACA,MAAM,IAAIjI,EAAOiB,cAAc,kBAAmB,wGAqBtD,OAnBAT,EAAe,mEACVU,QAAQ,sBAAiCC,mBAAmBC,OAAO6G,KACxExH,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7B8M,iBAAkB,SAAUxF,EAAiB1H,GAEzC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIiH,MAAAA,EACA,MAAM,IAAIjI,EAAOiB,cAAc,kBAAmB,2FAqBtD,OAnBAT,EAAe,qDACVU,QAAQ,sBAAiCC,mBAAmBC,OAAO6G,KACxExH,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7B+M,sBAAuB,SAAUzF,EAAiB0F,EAAmBpN,GAEjE,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIiH,MAAAA,EACA,MAAM,IAAIjI,EAAOiB,cAAc,kBAAmB,gGAwBtD,OAtBAT,EAAe,4CACVU,QAAQ,sBAAiCC,mBAAmBC,OAAO6G,KACxExH,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAmD,iBAAtB4M,GAAsF,qBAAnDhN,EAAuBc,QAAQ,gBAC/Fd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAgCC,IAAtB8L,EAAkCA,EAAoB,IAAOA,GAAqB,GAC7I,CAAC,EAAc,CACd7L,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BiN,wBAAyB,SAAU1L,EAAIwJ,EAAKnL,GAExC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,qFAGzC,GAAIyK,MAAAA,EACA,MAAM,IAAI1L,EAAOiB,cAAc,MAAO,sFAwB1C,OAtBAT,EAAe,8BACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAqC,iBAAR2K,GAAwE,qBAAnD/K,EAAuBc,QAAQ,gBACjFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAkBC,IAAR6J,EAAoBA,EAAM,IAAOA,GAAO,GACnG,CAAC,EAAc,CACd5J,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BkN,kBAAmB,SAAU3L,EAAI4L,EAAevN,GAE5C,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,+EAwBzC,OAtBAT,EAAe,wBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAE3ElF,IAAlBiM,IACAjN,EAAuC,eAAIiN,GAE/CrN,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BoN,sBAAuB,SAAU9F,EAAiB1H,GAE9C,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIiH,MAAAA,EACA,MAAM,IAAIjI,EAAOiB,cAAc,kBAAmB,gGAqBtD,OAnBAT,EAAe,4CACVU,QAAQ,sBAAiCC,mBAAmBC,OAAO6G,KACxExH,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BqN,sBAAuB,SAAU/F,EAAiBmB,EAAY7I,GAE1D,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIiH,MAAAA,EACA,MAAM,IAAIjI,EAAOiB,cAAc,kBAAmB,gGAGtD,GAAImI,MAAAA,EACA,MAAM,IAAIpJ,EAAOiB,cAAc,aAAc,2FAwBjD,OAtBAT,EAAe,gDACVU,QAAQ,sBAAiCC,mBAAmBC,OAAO6G,KACxExH,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA4C,iBAAfqI,GAA+E,qBAAnDzI,EAAuBc,QAAQ,gBACxFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAyBC,IAAfuH,EAA2BA,EAAa,IAAOA,GAAc,GACxH,CAAC,EAAc,CACdtH,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BsN,oBAAqB,SAAU/L,EAAIgM,EAAe3N,GAE9C,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,iFAGzC,GAAIiN,MAAAA,EACA,MAAM,IAAIlO,EAAOiB,cAAc,gBAAiB,4FAwBpD,OAtBAT,EAAe,wBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,SAAWZ,GAAcH,GAC9EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA+C,iBAAlBmN,GAAkF,qBAAnDvN,EAAuBc,QAAQ,gBAC3Fd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAA4BC,IAAlBqM,EAA8BA,EAAgB,IAAOA,GAAiB,GACjI,CAAC,EAAc,CACdpM,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQ0O,mBAAqB,SAAUjO,GACnC,MAAO,CASH+M,oBAAqB,SAAU/K,EAAIwJ,EAAKnL,GACpC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQuN,kCAAkC9M,GAAe+M,oBAAoB/K,EAAIwJ,EAAKnL,IACnH,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDyK,oBAAqB,SAAUA,EAAqB3M,GAChD,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQuN,kCAAkC9M,GAAegN,oBAAoBA,EAAqB3M,IAC/H,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajD0K,qBAAsB,SAAUjL,EAAI3B,GAChC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQuN,kCAAkC9M,GAAeiN,qBAAqBjL,EAAI3B,IAC/G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjD2K,yBAA0B,SAAUnF,EAAiBoF,EAAwB9M,GACzE,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQuN,kCAAkC9M,GAAekN,yBAAyBnF,EAAiBoF,EAAwB9M,IACxJ,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAiBjD6K,sBAAuB,SAAUpL,EAAI6B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAChE,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQuN,kCAAkC9M,GAAeoN,sBAAsBpL,EAAI6B,EAAOC,EAAQC,EAAQC,EAAQ3D,IAC/I,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAgBjD8K,mBAAoB,SAAUxJ,EAAOC,EAAQC,EAAQC,EAAQ3D,GACzD,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQuN,kCAAkC9M,GAAeqN,mBAAmBxJ,EAAOC,EAAQC,EAAQC,EAAQ3D,IACxI,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajD+K,8BAA+B,SAAUvF,EAAiB1H,GACtD,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQuN,kCAAkC9M,GAAesN,8BAA8BvF,EAAiB1H,IACrI,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDgL,iBAAkB,SAAUxF,EAAiB1H,GACzC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQuN,kCAAkC9M,GAAeuN,iBAAiBxF,EAAiB1H,IACxH,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDiL,sBAAuB,SAAUzF,EAAiB0F,EAAmBpN,GACjE,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQuN,kCAAkC9M,GAAewN,sBAAsBzF,EAAiB0F,EAAmBpN,IAChJ,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDmL,wBAAyB,SAAU1L,EAAIwJ,EAAKnL,GACxC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQuN,kCAAkC9M,GAAe0N,wBAAwB1L,EAAIwJ,EAAKnL,IACvH,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDoL,kBAAmB,SAAU3L,EAAI4L,EAAevN,GAC5C,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQuN,kCAAkC9M,GAAe2N,kBAAkB3L,EAAI4L,EAAevN,IAC3H,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDsL,sBAAuB,SAAU9F,EAAiB1H,GAC9C,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQuN,kCAAkC9M,GAAe6N,sBAAsB9F,EAAiB1H,IAC7H,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDuL,sBAAuB,SAAU/F,EAAiBmB,EAAY7I,GAC1D,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQuN,kCAAkC9M,GAAe8N,sBAAsB/F,EAAiBmB,EAAY7I,IACzI,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDwL,oBAAqB,SAAU/L,EAAIgM,EAAe3N,GAC9C,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQuN,kCAAkC9M,GAAe+N,oBAAoB/L,EAAIgM,EAAe3N,IAC7H,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQ2O,wBAA0B,SAAUlO,EAAeoC,EAAUD,GACjE,MAAO,CASH4K,oBAAqB,SAAU/K,EAAIwJ,EAAKnL,GACpC,OAAOd,EAAQ0O,mBAAmBjO,GAAe+M,oBAAoB/K,EAAIwJ,EAAKnL,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAS3I4K,oBAAqB,SAAUA,EAAqB3M,GAChD,OAAOd,EAAQ0O,mBAAmBjO,GAAegN,oBAAoBA,EAAqB3M,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASvJ6K,qBAAsB,SAAUjL,EAAI3B,GAChC,OAAOd,EAAQ0O,mBAAmBjO,GAAeiN,qBAAqBjL,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUvI8K,yBAA0B,SAAUnF,EAAiBoF,EAAwB9M,GACzE,OAAOd,EAAQ0O,mBAAmBjO,GAAekN,yBAAyBnF,EAAiBoF,EAAwB9M,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAahLgL,sBAAuB,SAAUpL,EAAI6B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAChE,OAAOd,EAAQ0O,mBAAmBjO,GAAeoN,sBAAsBpL,EAAI6B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAYvKiL,mBAAoB,SAAUxJ,EAAOC,EAAQC,EAAQC,EAAQ3D,GACzD,OAAOd,EAAQ0O,mBAAmBjO,GAAeqN,mBAAmBxJ,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAShKkL,8BAA+B,SAAUvF,EAAiB1H,GACtD,OAAOd,EAAQ0O,mBAAmBjO,GAAesN,8BAA8BvF,EAAiB1H,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAS7JmL,iBAAkB,SAAUxF,EAAiB1H,GACzC,OAAOd,EAAQ0O,mBAAmBjO,GAAeuN,iBAAiBxF,EAAiB1H,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUhJoL,sBAAuB,SAAUzF,EAAiB0F,EAAmBpN,GACjE,OAAOd,EAAQ0O,mBAAmBjO,GAAewN,sBAAsBzF,EAAiB0F,EAAmBpN,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUxKsL,wBAAyB,SAAU1L,EAAIwJ,EAAKnL,GACxC,OAAOd,EAAQ0O,mBAAmBjO,GAAe0N,wBAAwB1L,EAAIwJ,EAAKnL,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAU/IuL,kBAAmB,SAAU3L,EAAI4L,EAAevN,GAC5C,OAAOd,EAAQ0O,mBAAmBjO,GAAe2N,kBAAkB3L,EAAI4L,EAAevN,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASnJyL,sBAAuB,SAAU9F,EAAiB1H,GAC9C,OAAOd,EAAQ0O,mBAAmBjO,GAAe6N,sBAAsB9F,EAAiB1H,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUrJ0L,sBAAuB,SAAU/F,EAAiBmB,EAAY7I,GAC1D,OAAOd,EAAQ0O,mBAAmBjO,GAAe8N,sBAAsB/F,EAAiBmB,EAAY7I,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUjK2L,oBAAqB,SAAU/L,EAAIgM,EAAe3N,GAC9C,OAAOd,EAAQ0O,mBAAmBjO,GAAe+N,oBAAoB/L,EAAIgM,EAAe3N,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAU7J,IAAI+L,EAAkC,SAAUxL,GAE5C,SAASwL,IACL,OAAkB,OAAXxL,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAwL/D,OA1LAD,EAAUwS,EAAkBxL,GAa5BwL,EAAiB5R,UAAUwQ,oBAAsB,SAAU/K,EAAIwJ,EAAKnL,GAChE,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0O,mBAAmBrS,KAAKoE,eAAe+M,oBAAoB/K,EAAIwJ,EAAKnL,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAU5J+L,EAAiB5R,UAAUyQ,oBAAsB,SAAUA,EAAqB3M,GAC5E,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0O,mBAAmBrS,KAAKoE,eAAegN,oBAAoBA,EAAqB3M,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUxK+L,EAAiB5R,UAAU0Q,qBAAuB,SAAUjL,EAAI3B,GAC5D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0O,mBAAmBrS,KAAKoE,eAAeiN,qBAAqBjL,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWxJ+L,EAAiB5R,UAAU2Q,yBAA2B,SAAUnF,EAAiBoF,EAAwB9M,GACrG,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0O,mBAAmBrS,KAAKoE,eAAekN,yBAAyBnF,EAAiBoF,EAAwB9M,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAcjM+L,EAAiB5R,UAAU6Q,sBAAwB,SAAUpL,EAAI6B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAC5F,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0O,mBAAmBrS,KAAKoE,eAAeoN,sBAAsBpL,EAAI6B,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAaxL+L,EAAiB5R,UAAU8Q,mBAAqB,SAAUxJ,EAAOC,EAAQC,EAAQC,EAAQ3D,GACrF,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0O,mBAAmBrS,KAAKoE,eAAeqN,mBAAmBxJ,EAAOC,EAAQC,EAAQC,EAAQ3D,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUjL+L,EAAiB5R,UAAU+Q,8BAAgC,SAAUvF,EAAiB1H,GAClF,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0O,mBAAmBrS,KAAKoE,eAAesN,8BAA8BvF,EAAiB1H,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAU9K+L,EAAiB5R,UAAUgR,iBAAmB,SAAUxF,EAAiB1H,GACrE,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0O,mBAAmBrS,KAAKoE,eAAeuN,iBAAiBxF,EAAiB1H,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWjK+L,EAAiB5R,UAAUiR,sBAAwB,SAAUzF,EAAiB0F,EAAmBpN,GAC7F,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0O,mBAAmBrS,KAAKoE,eAAewN,sBAAsBzF,EAAiB0F,EAAmBpN,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWzL+L,EAAiB5R,UAAUmR,wBAA0B,SAAU1L,EAAIwJ,EAAKnL,GACpE,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0O,mBAAmBrS,KAAKoE,eAAe0N,wBAAwB1L,EAAIwJ,EAAKnL,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWhK+L,EAAiB5R,UAAUoR,kBAAoB,SAAU3L,EAAI4L,EAAevN,GACxE,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0O,mBAAmBrS,KAAKoE,eAAe2N,kBAAkB3L,EAAI4L,EAAevN,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUpK+L,EAAiB5R,UAAUsR,sBAAwB,SAAU9F,EAAiB1H,GAC1E,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0O,mBAAmBrS,KAAKoE,eAAe6N,sBAAsB9F,EAAiB1H,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWtK+L,EAAiB5R,UAAUuR,sBAAwB,SAAU/F,EAAiBmB,EAAY7I,GACtF,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0O,mBAAmBrS,KAAKoE,eAAe8N,sBAAsB/F,EAAiBmB,EAAY7I,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWlL+L,EAAiB5R,UAAUwR,oBAAsB,SAAU/L,EAAIgM,EAAe3N,GAC1E,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ0O,mBAAmBrS,KAAKoE,eAAe+N,oBAAoB/L,EAAIgM,EAAe3N,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAE/J+L,EA3L0B,CA4LnCrO,EAAO8C,SACTrD,EAAQ4O,iBAAmBA,EAK3B5O,EAAQ6O,iCAAmC,SAAUpO,GACjD,IAAIC,EAAQrE,KACZ,MAAO,CAQHyS,kBAAmB,SAAUC,EAAmBjO,GAE5C,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAsB/B,OApBAP,EAAiBX,EAAgBuB,MADlB,kBACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAmD,iBAAtByN,GAAsF,qBAAnD7N,EAAuBc,QAAQ,gBAC/Fd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAgCC,IAAtB2M,EAAkCA,EAAoB,IAAOA,GAAqB,GAC7I,CAAC,EAAc,CACd1M,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7B8N,yBAA0B,SAAUvM,EAAIwM,EAA0BnO,GAE9D,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,sFAwBzC,OAtBAT,EAAe,+BACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,SAAWZ,GAAcH,GAC9EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA0D,iBAA7B2N,GAA6F,qBAAnD/N,EAAuBc,QAAQ,gBACtGd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAuCC,IAA7B6M,EAAyCA,EAA2B,IAAOA,GAA4B,GAClK,CAAC,EAAc,CACd5M,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BgO,yBAA0B,SAAUzM,EAAI3B,GAEpC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,sFAqBzC,OAnBAT,EAAe,4BACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BiO,gBAAiB,SAAU1M,EAAI3B,GAE3B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,6EAqBzC,OAnBAT,EAAe,sBACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BkO,oBAAqB,SAAU3M,EAAI3B,GAE/B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,iFAqBzC,OAnBAT,EAAe,2BACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BmO,wBAAyB,SAAU5M,EAAI3B,GAEnC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIkB,MAAAA,EACA,MAAM,IAAIlC,EAAOiB,cAAc,KAAM,qFAqBzC,OAnBAT,EAAe,+BACVU,QAAQ,OAAkBC,mBAAmBC,OAAOc,KACzDzB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQsP,kBAAoB,SAAU7O,GAClC,MAAO,CAQHqO,kBAAmB,SAAUC,EAAmBjO,GAC5C,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ6O,iCAAiCpO,GAAeqO,kBAAkBC,EAAmBjO,IAC1H,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDgM,yBAA0B,SAAUvM,EAAIwM,EAA0BnO,GAC9D,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ6O,iCAAiCpO,GAAeuO,yBAAyBvM,EAAIwM,EAA0BnO,IAC5I,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDkM,yBAA0B,SAAUzM,EAAI3B,GACpC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ6O,iCAAiCpO,GAAeyO,yBAAyBzM,EAAI3B,IAClH,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDmM,gBAAiB,SAAU1M,EAAI3B,GAC3B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ6O,iCAAiCpO,GAAe0O,gBAAgB1M,EAAI3B,IACzG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDoM,oBAAqB,SAAU3M,EAAI3B,GAC/B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ6O,iCAAiCpO,GAAe2O,oBAAoB3M,EAAI3B,IAC7G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDqM,wBAAyB,SAAU5M,EAAI3B,GACnC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ6O,iCAAiCpO,GAAe4O,wBAAwB5M,EAAI3B,IACjH,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQuP,uBAAyB,SAAU9O,EAAeoC,EAAUD,GAChE,MAAO,CAQHkM,kBAAmB,SAAUC,EAAmBjO,GAC5C,OAAOd,EAAQsP,kBAAkB7O,GAAeqO,kBAAkBC,EAAmBjO,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUlJmM,yBAA0B,SAAUvM,EAAIwM,EAA0BnO,GAC9D,OAAOd,EAAQsP,kBAAkB7O,GAAeuO,yBAAyBvM,EAAIwM,EAA0BnO,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASpKqM,yBAA0B,SAAUzM,EAAI3B,GACpC,OAAOd,EAAQsP,kBAAkB7O,GAAeyO,yBAAyBzM,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAS1IsM,gBAAiB,SAAU1M,EAAI3B,GAC3B,OAAOd,EAAQsP,kBAAkB7O,GAAe0O,gBAAgB1M,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASjIuM,oBAAqB,SAAU3M,EAAI3B,GAC/B,OAAOd,EAAQsP,kBAAkB7O,GAAe2O,oBAAoB3M,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASrIwM,wBAAyB,SAAU5M,EAAI3B,GACnC,OAAOd,EAAQsP,kBAAkB7O,GAAe4O,wBAAwB5M,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAUjJ,IAAI2M,EAAiC,SAAUpM,GAE3C,SAASoM,IACL,OAAkB,OAAXpM,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KA2E/D,OA7EAD,EAAUoT,EAAiBpM,GAY3BoM,EAAgBxS,UAAU8R,kBAAoB,SAAUC,EAAmBjO,GACvE,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQsP,kBAAkBjT,KAAKoE,eAAeqO,kBAAkBC,EAAmBjO,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWnK2M,EAAgBxS,UAAUgS,yBAA2B,SAAUvM,EAAIwM,EAA0BnO,GACzF,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQsP,kBAAkBjT,KAAKoE,eAAeuO,yBAAyBvM,EAAIwM,EAA0BnO,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUrL2M,EAAgBxS,UAAUkS,yBAA2B,SAAUzM,EAAI3B,GAC/D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQsP,kBAAkBjT,KAAKoE,eAAeyO,yBAAyBzM,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAU3J2M,EAAgBxS,UAAUmS,gBAAkB,SAAU1M,EAAI3B,GACtD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQsP,kBAAkBjT,KAAKoE,eAAe0O,gBAAgB1M,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUlJ2M,EAAgBxS,UAAUoS,oBAAsB,SAAU3M,EAAI3B,GAC1D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQsP,kBAAkBjT,KAAKoE,eAAe2O,oBAAoB3M,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUtJ2M,EAAgBxS,UAAUqS,wBAA0B,SAAU5M,EAAI3B,GAC9D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQsP,kBAAkBjT,KAAKoE,eAAe4O,wBAAwB5M,EAAI3B,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAEnJ2M,EA9EyB,CA+ElCjP,EAAO8C,SACTrD,EAAQwP,gBAAkBA,EAK1BxP,EAAQyP,6BAA+B,SAAUhP,GAC7C,IAAIC,EAAQrE,KACZ,MAAO,CAQHqT,cAAe,SAAUC,EAAS7O,GAE9B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIoO,MAAAA,EACA,MAAM,IAAIpP,EAAOiB,cAAc,UAAW,gFAuB9C,OApBAR,EAAiBX,EAAgBuB,MADlB,aACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAyC,iBAAZqO,GAA4E,qBAAnDzO,EAAuBc,QAAQ,gBACrFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAsBC,IAAZuN,EAAwBA,EAAU,IAAOA,GAAW,GAC/G,CAAC,EAAc,CACdtN,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7B0O,eAAgB,SAAU5I,EAAMlG,GAE5B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIyF,MAAAA,EACA,MAAM,IAAIzG,EAAOiB,cAAc,OAAQ,8EAqB3C,OAnBAT,EAAe,mBACVU,QAAQ,SAAoBC,mBAAmBC,OAAOqF,KAC3DhG,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,UAAYZ,GAAcH,GAC/EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAW7B2O,aAAc,SAAU/O,GAEpB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAmB/B,OAjBAP,EAAiBX,EAAgBuB,MADlB,aACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7B4O,YAAa,SAAU9I,EAAMlG,GAEzB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIyF,MAAAA,EACA,MAAM,IAAIzG,EAAOiB,cAAc,OAAQ,2EAqB3C,OAnBAT,EAAe,mBACVU,QAAQ,SAAoBC,mBAAmBC,OAAOqF,KAC3DhG,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7B6O,cAAe,SAAU/I,EAAMlG,GAE3B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIyF,MAAAA,EACA,MAAM,IAAIzG,EAAOiB,cAAc,OAAQ,6EAqB3C,OAnBAT,EAAe,mBACVU,QAAQ,SAAoBC,mBAAmBC,OAAOqF,KAC3DhG,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,SAAWZ,GAAcH,GAC9EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQgQ,cAAgB,SAAUvP,GAC9B,MAAO,CAQHiP,cAAe,SAAUC,EAAS7O,GAC9B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQyP,6BAA6BhP,GAAeiP,cAAcC,EAAS7O,IACxG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajD4M,eAAgB,SAAU5I,EAAMlG,GAC5B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQyP,6BAA6BhP,GAAemP,eAAe5I,EAAMlG,IACtG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAYjD6M,aAAc,SAAU/O,GACpB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQyP,6BAA6BhP,GAAeoP,aAAa/O,IAC9F,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajD8M,YAAa,SAAU9I,EAAMlG,GACzB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQyP,6BAA6BhP,GAAeqP,YAAY9I,EAAMlG,IACnG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajD+M,cAAe,SAAU/I,EAAMlG,GAC3B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQyP,6BAA6BhP,GAAesP,cAAc/I,EAAMlG,IACrG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQiQ,mBAAqB,SAAUxP,EAAeoC,EAAUD,GAC5D,MAAO,CAQH8M,cAAe,SAAUC,EAAS7O,GAC9B,OAAOd,EAAQgQ,cAAcvP,GAAeiP,cAAcC,EAAS7O,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAShI+M,eAAgB,SAAU5I,EAAMlG,GAC5B,OAAOd,EAAQgQ,cAAcvP,GAAemP,eAAe5I,EAAMlG,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAQ9HgN,aAAc,SAAU/O,GACpB,OAAOd,EAAQgQ,cAAcvP,GAAeoP,aAAa/O,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAStHiN,YAAa,SAAU9I,EAAMlG,GACzB,OAAOd,EAAQgQ,cAAcvP,GAAeqP,YAAY9I,EAAMlG,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAS3HkN,cAAe,SAAU/I,EAAMlG,GAC3B,OAAOd,EAAQgQ,cAAcvP,GAAesP,cAAc/I,EAAMlG,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAUrI,IAAIqN,EAA6B,SAAU9M,GAEvC,SAAS8M,IACL,OAAkB,OAAX9M,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KA6D/D,OA/DAD,EAAU8T,EAAa9M,GAYvB8M,EAAYlT,UAAU0S,cAAgB,SAAUC,EAAS7O,GACrD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQgQ,cAAc3T,KAAKoE,eAAeiP,cAAcC,EAAS7O,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUjJqN,EAAYlT,UAAU4S,eAAiB,SAAU5I,EAAMlG,GACnD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQgQ,cAAc3T,KAAKoE,eAAemP,eAAe5I,EAAMlG,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAS/IqN,EAAYlT,UAAU6S,aAAe,SAAU/O,GAC3C,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQgQ,cAAc3T,KAAKoE,eAAeoP,aAAa/O,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUvIqN,EAAYlT,UAAU8S,YAAc,SAAU9I,EAAMlG,GAChD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQgQ,cAAc3T,KAAKoE,eAAeqP,YAAY9I,EAAMlG,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAU5IqN,EAAYlT,UAAU+S,cAAgB,SAAU/I,EAAMlG,GAClD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQgQ,cAAc3T,KAAKoE,eAAesP,cAAc/I,EAAMlG,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAEvIqN,EAhEqB,CAiE9B3P,EAAO8C,SACTrD,EAAQkQ,YAAcA,EAKtBlQ,EAAQmQ,yBAA2B,SAAU1P,GACzC,IAAIC,EAAQrE,KACZ,MAAO,CAOH+T,SAAU,SAAUtP,GAEhB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAmB/B,OAjBAP,EAAiBX,EAAgBuB,MADlB,SACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQqQ,UAAY,SAAU5P,GAC1B,MAAO,CAOH2P,SAAU,SAAUtP,GAChB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQmQ,yBAAyB1P,GAAe2P,SAAStP,IACtF,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQsQ,eAAiB,SAAU7P,EAAeoC,EAAUD,GACxD,MAAO,CAOHwN,SAAU,SAAUtP,GAChB,OAAOd,EAAQqQ,UAAU5P,GAAe2P,SAAStP,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAUtH,IAAI0N,EAAyB,SAAUnN,GAEnC,SAASmN,IACL,OAAkB,OAAXnN,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAa/D,OAfAD,EAAUmU,EAASnN,GAWnBmN,EAAQvT,UAAUoT,SAAW,SAAUtP,GACnC,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQqQ,UAAUhU,KAAKoE,eAAe2P,SAAStP,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAExH0N,EAhBiB,CAiB1BhQ,EAAO8C,SACTrD,EAAQuQ,QAAUA,EAKlBvQ,EAAQwQ,2BAA6B,SAAU/P,GAC3C,IAAIC,EAAQrE,KACZ,MAAO,CAOHoU,YAAa,SAAU3P,GAEnB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAmB/B,OAjBAP,EAAiBX,EAAgBuB,MADlB,YACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BwP,WAAY,SAAUC,EAAU7P,GAE5B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIoP,MAAAA,EACA,MAAM,IAAIpQ,EAAOiB,cAAc,WAAY,8EAqB/C,OAnBAT,EAAe,uBACVU,QAAQ,cAAyBC,mBAAmBC,OAAOgP,KAChE3P,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7B0P,WAAY,SAAUD,EAAU7P,GAE5B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIoP,MAAAA,EACA,MAAM,IAAIpQ,EAAOiB,cAAc,WAAY,8EAqB/C,OAnBAT,EAAe,4BACVU,QAAQ,cAAyBC,mBAAmBC,OAAOgP,KAChE3P,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQ6Q,YAAc,SAAUpQ,GAC5B,MAAO,CAOHgQ,YAAa,SAAU3P,GACnB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQwQ,2BAA2B/P,GAAegQ,YAAY3P,IAC3F,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajD0N,WAAY,SAAUC,EAAU7P,GAC5B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQwQ,2BAA2B/P,GAAeiQ,WAAWC,EAAU7P,IACpG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajD4N,WAAY,SAAUD,EAAU7P,GAC5B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQwQ,2BAA2B/P,GAAemQ,WAAWD,EAAU7P,IACpG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQ8Q,iBAAmB,SAAUrQ,EAAeoC,EAAUD,GAC1D,MAAO,CAOH6N,YAAa,SAAU3P,GACnB,OAAOd,EAAQ6Q,YAAYpQ,GAAegQ,YAAY3P,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASnH6N,WAAY,SAAUC,EAAU7P,GAC5B,OAAOd,EAAQ6Q,YAAYpQ,GAAeiQ,WAAWC,EAAU7P,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAS5H+N,WAAY,SAAUD,EAAU7P,GAC5B,OAAOd,EAAQ6Q,YAAYpQ,GAAemQ,WAAWD,EAAU7P,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAUpI,IAAIkO,EAA2B,SAAU3N,GAErC,SAAS2N,IACL,OAAkB,OAAX3N,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAqC/D,OAvCAD,EAAU2U,EAAW3N,GAWrB2N,EAAU/T,UAAUyT,YAAc,SAAU3P,GACxC,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ6Q,YAAYxU,KAAKoE,eAAegQ,YAAY3P,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUpIkO,EAAU/T,UAAU0T,WAAa,SAAUC,EAAU7P,GACjD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ6Q,YAAYxU,KAAKoE,eAAeiQ,WAAWC,EAAU7P,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAU7IkO,EAAU/T,UAAU4T,WAAa,SAAUD,EAAU7P,GACjD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ6Q,YAAYxU,KAAKoE,eAAemQ,WAAWD,EAAU7P,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAEtIkO,EAxCmB,CAyC5BxQ,EAAO8C,SACTrD,EAAQ+Q,UAAYA,G,qBCluPpB,IACQ5U,EADJC,EAAaC,MAAQA,KAAKD,YACtBD,EAAgB,SAAUG,EAAGC,GAI7B,OAHAJ,EAAgBK,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAErB,SAAUD,EAAGC,GAEhB,SAASO,IAAOT,KAAKU,YAAcT,EADnCH,EAAcG,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,KAGvFN,OAAOuD,eAAeC,EAAS,aAAc,CAAE3B,OAAO,IAGtD,IAAIiC,EAAU,EAAQ,OACtBN,EAAQ+C,UAAY,6CAA6CtB,QAAQ,OAAQ,IAKjFzB,EAAQyG,mBAAqB,CACzBC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,MAAO,KAoBX7G,EAAQqD,QAZJ,SAAiB5C,EAAeoC,EAAUD,QACrB,IAAbC,IAAuBA,EAAW7C,EAAQ+C,gBAChC,IAAVH,IAAoBA,EAAQtC,EAAQwC,SACxCzG,KAAKwG,SAAWA,EAChBxG,KAAKuG,MAAQA,EACTnC,IACApE,KAAKoE,cAAgBA,EACrBpE,KAAKwG,SAAWpC,EAAcoC,UAAYxG,KAAKwG,WAa3D,IAAIrB,EAA+B,SAAU4B,GAEzC,SAAS5B,EAAcsF,EAAOC,GAC1B,IAAIrG,EAAQ0C,EAAO1F,KAAKrB,KAAM0K,IAAQ1K,KAGtC,OAFAqE,EAAMoG,MAAQA,EACdpG,EAAMsG,KAAO,gBACNtG,EAEX,OAPAtE,EAAUoF,EAAe4B,GAOlB5B,EARuB,CAShCyF,OACFjH,EAAQwB,cAAgBA,G,cChExBhF,OAAOuD,eAAeC,EAAS,aAAc,CAAE3B,OAAO,IAatD2B,EAAQkH,cAXJ,SAAuBC,QACL,IAAVA,IAAoBA,EAAQ,IAChC9K,KAAK+K,OAASD,EAAMC,OACpB/K,KAAKgL,SAAWF,EAAME,SACtBhL,KAAKiL,SAAWH,EAAMG,SACtBjL,KAAKkL,YAAcJ,EAAMI,YACzBlL,KAAKwG,SAAWsE,EAAMtE,SACtBxG,KAAK4E,YAAckG,EAAMlG,c,gBCTjC,SAASuG,EAASC,GACd,IAAK,IAAI7K,KAAK6K,EAAQzH,EAAQnD,eAAeD,KAAIoD,EAAQpD,GAAK6K,EAAE7K,IAEpEJ,OAAOuD,eAAeC,EAAS,aAAc,CAAE3B,OAAO,IACtDmJ,EAAS,EAAQ,OACjBA,EAAS,EAAQ,S,4PCSjB,IAOWwJ,EAA4B,SAAUC,IAC/C,OAAUD,EAAcC,GAExB,IA3BoBC,EAAeC,EA2B/B/N,GA3BgB8N,EA2BMF,EA3BSG,EAErC,WAAuC,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQxU,UAAUyU,QAAQ/T,KAAK0T,QAAQC,UAAUG,QAAS,IAAI,iBAAyB,EAAQ,MAAOhT,GAAK,OAAO,GAF9PkT,GAAoC,WAAkC,IAAsChT,EAAlCiT,GAAQ,OAAgBT,GAAkB,GAAIC,EAA2B,CAAE,IAAIS,GAAY,OAAgBvV,MAAMU,YAAa2B,EAAS0S,QAAQC,UAAUM,EAAOnU,UAAWoU,QAAqBlT,EAASiT,EAAMhU,MAAMtB,KAAMmB,WAAc,OAAO,OAA2BnB,KAAMqC,KA6B1Z,SAASsS,EAAaa,GACpB,IAAInR,EA4BJ,OA1BA,OAAgBrE,KAAM2U,GAEtBtQ,EAAQ0C,EAAO1F,KAAKrB,KAAMwV,IAE1B,QAAgB,OAAuBnR,GAAQ,iBAAiB,WAC9DA,EAAMmR,MAAMC,UAAUpR,EAAMmR,MAAMpP,QAGpC,QAAgB,OAAuB/B,GAAQ,qBAAqB,WAC9DA,EAAMmR,MAAME,cACdrR,EAAMsR,eAAiBC,YAAW,WAChC,OAAOvR,EAAMwR,kBACZxR,EAAMmR,MAAMM,mBAInB,QAAgB,OAAuBzR,GAAQ,uBAAuB,WAChEA,EAAMsR,gBACRI,aAAa1R,EAAMsR,mBAIvBtR,EAAMwR,cAAgBxR,EAAMwR,cAAcG,MAAK,OAAuB3R,IAEtEA,EAAM4R,oBAEC5R,EAyCT,OAtCA,OAAasQ,EAAc,CAAC,CAC1BuB,IAAK,uBACLlU,MAAO,WACLhC,KAAKmW,wBAEN,CACDD,IAAK,SACLlU,MAAO,WACL,IAAIoU,EAAcpW,KAAKwV,MACnBa,EAAcD,EAAYC,YAC1BC,EAAcF,EAAYE,YAG1BC,GAFYH,EAAYX,UACTW,EAAYN,aACnBM,EAAYG,OACpBC,EAAWJ,EAAYI,SACvBjS,EAAY6R,EAAY7R,UAExBkS,GADcL,EAAYV,aACnB,OAAyBU,EAAa,CAAC,cAAe,cAAe,YAAa,eAAgB,QAAS,WAAY,YAAa,iBAE/I,OAAoB,kBAAoBM,EAAA,GAAO,OAAS,CACtDC,UAAW,oBACXJ,MAAOA,GAASA,EAAMnR,QAAQ,kBAAmB,KAChDqR,EAAM,CACPG,YAAaN,EAA2B,kBAAoBO,EAAA,EAAwB,CAClF,aAAc,qBACdC,QAAS,QACTC,QAAS/W,KAAK6V,eACA,kBAAoB,KAAW,OAAS,KACxDmB,aAAchX,KAAKmW,oBACnBc,aAAcjX,KAAKiW,oBACM,iBAAhBI,EAA2BA,EAAYjR,QAAQ,kBAAmB,IAAMiR,EAAaG,GAAyB,kBAAoBU,EAAA,EAAa,KAAmB,kBAAoBC,EAAA,EAAM,CACrMC,UAAWD,EAAA,SACV,gBAAiBX,IAAYjS,GAA0B,kBAAoB2S,EAAA,EAAa,KAAmB,kBAAoBC,EAAA,EAAM,CACtIC,UAAWD,EAAA,SACV,eAAgB5S,SAIhBoQ,EA3E8B,CA4ErC,EAAA0C,WACF1C,EAAa2C,UAAY,CAIvB5B,YAAa,SAKbY,YAAa,SAKbb,UAAW,oBAKXrP,GAAI,sBAKJ0Q,QAAS,UAAgB,CAAC,OAAQ,UAAW,UAAW,WAAWS,WAKnEhB,MAAO,oBAKPF,YAAa,SAKbP,aAAc,WAKdvR,UAAW,WAKXiS,SAAU,YAEZ7B,EAAa6C,aAAe,CAC1B1B,aAxIkB,IAyIlBJ,aAAa,EACbY,aAAa,GAEf,U,sEC7JWmB,EAAyB,SAAgCC,GAClE,IAAIC,EAAOD,EAAKC,KACZC,EAAYF,EAAKE,UACjBC,EAAaH,EAAKG,WAClBC,EAAQJ,EAAKI,MACjB,OAAoB,kBAAoBC,EAAA,EAAM,CAC5CpB,UAAW,qBACG,kBAAoBqB,EAAA,EAAU,KAAmB,kBAAoBC,EAAA,EAAO,KAAmB,kBAAoBC,EAAA,EAAW,KAAmB,kBAAoBC,EAAA,GAAQ,CAC3LrB,QAASqB,EAAA,QACTxB,UAAW,8BACXI,QAASc,GACR,cAA4B,kBAAoBK,EAAA,EAAW,KAAmB,kBAAoBE,EAAA,EAAY,CAC/GC,UAAWP,EACXhB,QAASsB,EAAA,SACTE,eAAgB,CAAC,CACf/B,MAAO,IACPvU,MAAO,IAETuW,OAAQ,CACNC,MAAO,iBAETC,QAAS,EACTd,KAAMA,EACNC,UAAWA,SAGfH,EAAuBH,UAAY,CACjCQ,MAAO,WACPH,KAAM,WACNC,UAAW,SACXC,WAAY,UAEdJ,EAAuBD,aAAe,CACpCM,MAAO,EACPH,KAAM,EACNC,UAAWc,SACXb,WAAYa,UAEd,UC5BA,IAAIC,EAAsB,SAAU/D,IAClC,OAAU+D,EAAQ/D,GAElB,IAdoBC,EAAeC,EAc/B/N,GAdgB8N,EAcM8D,EAdS7D,EAErC,WAAuC,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQxU,UAAUyU,QAAQ/T,KAAK0T,QAAQC,UAAUG,QAAS,IAAI,iBAAyB,EAAQ,MAAOhT,GAAK,OAAO,GAF9P,GAAoC,WAAkC,IAAsCE,EAAlCiT,GAAQ,OAAgBT,GAAkB,GAAIC,EAA2B,CAAE,IAAIS,GAAY,OAAgBvV,MAAMU,YAAa2B,EAAS0S,QAAQC,UAAUM,EAAOnU,UAAWoU,QAAqBlT,EAASiT,EAAMhU,MAAMtB,KAAMmB,WAAc,OAAO,OAA2BnB,KAAMqC,KAgB1Z,SAASsW,IACP,IAAItU,GAEJ,OAAgBrE,KAAM2Y,GAEtB,IAAK,IAAIC,EAAOzX,UAAUC,OAAQyX,EAAO,IAAIvY,MAAMsY,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQ3X,UAAU2X,GAezB,OAZAzU,EAAQ0C,EAAO1F,KAAKC,MAAMyF,EAAQ,CAAC/G,MAAM+Y,OAAOF,KAEhD,QAAgB,OAAuBxU,GAAQ,QAAS,CACtDsT,KAAM,KAGR,QAAgB,OAAuBtT,GAAQ,aAAa,SAAU2U,EAAQrB,GAC5EtT,EAAM4U,SAAS,CACbtB,KAAMA,OAIHtT,EA6BT,OA1BA,OAAasU,EAAQ,CAAC,CACpBzC,IAAK,SACLlU,MAAO,WACL,IAAI2V,EAAO3X,KAAKkZ,MAAMvB,KAClBvB,EAAcpW,KAAKwV,MACnB2D,EAAgB/C,EAAY+C,cAC5BC,EAAqBhD,EAAYgD,mBACjCC,EAASjD,EAAYiD,OACrBxB,EAAazB,EAAYyB,WACzByB,EAAsBH,GAAiBA,EAAc/X,QAAU,EAAI+X,EAAgBA,GAAiBA,EAAcI,MAAmB,GAAZ5B,EAAO,GAAe,EAAPA,GAC5I,OAAQwB,GAAiB7Y,MAAMkZ,QAAQL,IAA2C,IAAzBA,EAAc/X,OAAe,MAAoB,IAAAqY,cAA2B,kBAAoB,MAAO,CAC9J9C,UAAW,wBACVwC,GAAiBA,EAAc/X,OAAS,GAAkB,kBAAoB,EAAwB,CACvGwW,UAAW5X,KAAK4X,UAChBE,MAAOqB,EAAc/X,OACrBuW,KAAMA,EACNE,WAAYA,IACVyB,EAAoBI,KAAI,SAAUlE,GACpC,OAAoB,kBAAoB,GAAc,OAAS,CAC7DC,UAAW2D,EACXlD,IAAKV,EAAMpP,IACVoP,QACAmE,SAASC,eAAeP,IAAWM,SAASlX,UAI9CkW,EAvDiB,CAwDxB,EAAAtB,WAGFsB,EAAOrB,UAAY,CACjB6B,cAAe,YAAkB,UAAgB,CAC/C/S,GAAI,sBACJmQ,MAAO,sBACPO,QAAS,sBACTT,YAAa,SACbC,YAAa,YAEf8C,mBAAoB,oBACpBvB,WAAY,SACZwB,OAAQ,YAEV,U,eCnEA,SAFgC,IAAAQ,UAlBV,SAAyBnC,EAAMoC,GACnD,IAAIX,EAAgBzB,EAAKyB,cACzB,MAAO,CACLA,cAAeW,EAAaX,eAAiBA,MAIxB,SAA4BY,EAAUD,GAC7D,MAAO,CACLV,mBAAoBU,EAAaV,mBAAqBU,EAAaV,mBAAqB,SAAUhT,GAChG,OAAO2T,GAAS,QAAmB3T,KAErCyR,WAAYiC,EAAaE,mBAAqBF,EAAaE,mBAAqB,WAC9E,OAAOD,GAAS,eAKU,CAA6C,I,oGCpB7E,SAASE,EAAQC,EAAQC,GAAkB,IAAIC,EAAOja,OAAOia,KAAKF,GAAS,GAAI/Z,OAAOka,sBAAuB,CAAE,IAAIC,EAAUna,OAAOka,sBAAsBH,GAAaC,IAAkBG,EAAUA,EAAQnS,QAAO,SAAUoS,GAAO,OAAOpa,OAAOqa,yBAAyBN,EAAQK,GAAKE,eAAkBL,EAAK3W,KAAKnC,MAAM8Y,EAAME,GAAY,OAAOF,EAElV,SAASM,EAAcC,GAAU,IAAK,IAAI1Z,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAAK,CAAE,IAAI2Z,EAAyB,MAAhBzZ,UAAUF,GAAaE,UAAUF,GAAK,GAAQA,EAAI,EAAKgZ,EAAQ9Z,OAAOya,IAAS,GAAMC,SAAQ,SAAU3E,IAAO,OAAgByE,EAAQzE,EAAK0E,EAAO1E,OAAsB/V,OAAO2a,0BAA6B3a,OAAO4a,iBAAiBJ,EAAQxa,OAAO2a,0BAA0BF,IAAmBX,EAAQ9Z,OAAOya,IAASC,SAAQ,SAAU3E,GAAO/V,OAAOuD,eAAeiX,EAAQzE,EAAK/V,OAAOqa,yBAAyBI,EAAQ1E,OAAe,OAAOyE,EAM7gB,IAAIK,EAAsB,SAA6BC,EAASC,EAAeC,GAC7E,GAAuB,iBAAZF,EACT,MAAO,CACL1E,MAAO,QACPF,YAAa4E,GAIjB,IAAIG,EAAWF,EAEX5a,MAAMkZ,QAAQ0B,KAChBE,EAAWF,EAAcG,MAAK,SAAUnF,GACtC,OAAO,IAAI+E,EAAS/E,OAIxB,IAAIoF,EAAiBH,EAQrB,OANI7a,MAAMkZ,QAAQ2B,KAChBG,EAAiBH,EAAoBE,MAAK,SAAUnF,GAClD,OAAO,IAAI+E,EAAS/E,OAIjB,CACLK,MAAO,IAAI0E,EAASG,IAAa,QACjC/E,YAAa,IAAI4E,EAASK,GAC1B9E,SAAUyE,GAAWA,EAAQzE,SAC7BjS,UAAW0W,GAAWA,EAAQ1W,YAI9BgX,EAA6B,SAAoC7D,GACnE,IAAI8D,EAAa9D,EAAK8D,WAClBC,EAAwB/D,EAAK+D,sBAC7BC,EAAkBhE,EAAKgE,gBACvBC,EAAyBjE,EAAKiE,uBAClC,OAAOH,IAAeC,IAA0BC,GAAmBC,GAuGrE,QApG2C,WACzC,IAAIlX,EAAUtD,UAAUC,OAAS,QAAsB2E,IAAjB5E,UAAU,GAAmBA,UAAU,GAAK,GAC9Eya,EAAiB,CACnBD,wBAAwB,EACxBE,cAAe,WACfC,gBAAiB,aACjBC,eAAgB,YAChBrG,aAAa,EACbI,aAAc,IACdoF,cAAe,QACfC,oBAAqB,SACrBa,eAAe,GAGbC,EAAoBvB,EAAcA,EAAc,GAAIkB,GAAiBnX,GAErEyX,EAAe,SAAsBC,GACvC,OAAOA,EAAKC,MAAM,IAAIC,OAAO,MAAMtD,OAAOkD,EAAkBJ,cAAe,QAGzES,EAAiB,SAAwBH,GAC3C,OAAOA,EAAKC,MAAM,IAAIC,OAAO,MAAMtD,OAAOkD,EAAkBH,gBAAiB,QAG3ES,EAAgB,SAAuBJ,GACzC,OAAOA,EAAKC,MAAM,IAAIC,OAAO,MAAMtD,OAAOkD,EAAkBF,eAAgB,QAG1ES,EAA6B,CAC/BlG,aAAc2F,EAAkBvG,YAChCI,aAAcmG,EAAkBnG,cAElC,OAAO,SAAU2G,GACf,IAAI1C,EAAW0C,EAAM1C,SACrB,OAAO,SAAU7X,GACf,OAAO,SAAUsC,GACf,IAAIkY,EAAOlY,EAAOkY,KACdP,EAAO3X,EAAO2X,KAElB,GAAIO,GAAQA,EAAKvD,cAAe,CAC9B,IAAIA,EAAgBuD,EAAKvD,cAErB+C,EAAaC,IAAShD,EAAcwD,QACtC5C,GAAS,QAAgBW,EAAcA,EAAc,GAAI8B,GAA6BrD,EAAcwD,WAC3FL,EAAeH,IAAShD,EAAcpX,UAC/CgY,GAAS,QAAgBW,EAAcA,EAAc,GAAI8B,GAA6BrD,EAAcpX,aAC3Fwa,EAAcJ,IAAShD,EAAc/W,UAC9C2X,GAAS,QAAgBW,EAAcA,EAAcA,EAAc,GAAI8B,GAA6BrD,EAAc/W,UAAW,GAAI,CAC/HoU,SAAUhS,EAAOyW,SAAWzW,EAAOyW,QAAQzE,SAC3CjS,UAAWC,EAAOyW,SAAWzW,EAAOyW,QAAQ1W,cAKlD,GAAIgX,EAA2B,CAC7BC,WAAYe,EAAcJ,GAC1BV,sBAAuBiB,GAAQA,EAAKvD,eAAiBuD,EAAKvD,cAAc/W,SACxEsZ,gBAAiBgB,GAAQA,EAAKE,QAC9BjB,uBAAwBM,EAAkBN,yBAE1C,GAAIM,EAAkBD,cACpBjC,GAAS,QAAgBW,EAAc,CACrC5D,QAAS,SACTR,aAAa,GACZ0E,EAAoBxW,EAAOyW,QAASgB,EAAkBf,cAAe,qBACnE,CACL,IAAI2B,EAAevc,MAAMkZ,QAAQyC,EAAkBa,oBAAsBb,EAAkBa,kBAAkBzB,MAAK,SAAUnF,GAC1H,OAAO,IAAI1R,EAAOyW,QAAS/E,MAGzB2G,EACF,IAAIrY,EAAOyW,QAAS4B,GAAcnD,KAAI,SAAUqD,GAC9ChD,GAAS,QAAgBW,EAAc,CACrC5D,QAAS,SACTR,aAAa,GACZ0E,EAAoB+B,EAAMd,EAAkBf,cAAee,EAAkBd,2BAG9E7a,MAAMkZ,QAAQhV,EAAOyW,SACvBzW,EAAOyW,QAAQvB,KAAI,SAAUqD,GAC3BhD,GAAS,QAAgBW,EAAc,CACrC5D,QAAS,SACTR,aAAa,GACZ0E,EAAoB+B,EAAMd,EAAkBf,cAAee,EAAkBd,2BAGlFpB,GAAS,QAAgBW,EAAc,CACrC5D,QAAS,SACTR,aAAa,GACZ0E,EAAoBxW,EAAOyW,QAASgB,EAAkBf,cAAee,EAAkBd,wBAMlGjZ,EAAKsC,Q,oDCjJb,IAAIwY,EAAsB,iCACfC,EAAmB,GAAGlE,OAAOiE,EAAqB,oBAClDE,EAAsB,GAAGnE,OAAOiE,EAAqB,uBACrDG,EAAsB,GAAGpE,OAAOiE,EAAqB,wB,mECFrDI,EAAkB,SAAyBC,GACpD,MAAO,CACLlB,KAAM,KACNlB,QAASoC,IAGFjE,EAAqB,SAA4BkE,GAC1D,MAAO,CACLnB,KAAM,KACNlB,QAASqC,IAGFtD,EAAqB,WAC9B,MAAO,CACLmC,KAAM,Q,kICZV,SAASlC,EAAQC,EAAQC,GAAkB,IAAIC,EAAOja,OAAOia,KAAKF,GAAS,GAAI/Z,OAAOka,sBAAuB,CAAE,IAAIC,EAAUna,OAAOka,sBAAsBH,GAAaC,IAAkBG,EAAUA,EAAQnS,QAAO,SAAUoS,GAAO,OAAOpa,OAAOqa,yBAAyBN,EAAQK,GAAKE,eAAkBL,EAAK3W,KAAKnC,MAAM8Y,EAAME,GAAY,OAAOF,EAElV,SAASM,EAAcC,GAAU,IAAK,IAAI1Z,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAAK,CAAE,IAAI2Z,EAAyB,MAAhBzZ,UAAUF,GAAaE,UAAUF,GAAK,GAAQA,EAAI,EAAKgZ,EAAQ9Z,OAAOya,IAAS,GAAMC,SAAQ,SAAU3E,IAAO,OAAgByE,EAAQzE,EAAK0E,EAAO1E,OAAsB/V,OAAO2a,0BAA6B3a,OAAO4a,iBAAiBJ,EAAQxa,OAAO2a,0BAA0BF,IAAmBX,EAAQ9Z,OAAOya,IAASC,SAAQ,SAAU3E,GAAO/V,OAAOuD,eAAeiX,EAAQzE,EAAK/V,OAAOqa,yBAAyBI,EAAQ1E,OAAe,OAAOyE,EAS7gB,IAAIyC,EAAkB,SAAyBjE,EAAezB,GAC5D,IAAIuD,EAAUvD,EAAKuD,QACnB,MAAO,GAAGlC,QAAO,OAAmBI,GAAgB,CAACuB,EAAc,CACjEtU,IAAe,eAPN,+BAAgC,IAAImX,MAAOC,UAAYC,KAAKC,SAASC,SAAS,IAAIpE,MAAM,KAQhG0B,MAGD7B,EAAqB,SAA4BD,EAAesD,GAClE,IAAIxB,EAAUwB,EAAMxB,QAChBqC,EAAQnE,EAAcyE,WAAU,SAAUC,GAE5C,OADSA,EAAMzX,KACD6U,KAEhB,MAAO,GAAGlC,QAAO,OAAmBI,EAAcI,MAAM,EAAG+D,KAAS,OAAmBnE,EAAcI,MAAM+D,EAAQ,MAO1GQ,EAAe,GAoB1B,QAnBmC,WACjC,IAAI5E,EAAQ/X,UAAUC,OAAS,QAAsB2E,IAAjB5E,UAAU,GAAmBA,UAAU,GAAK2c,EAC5EtZ,EAASrD,UAAUC,OAAS,EAAID,UAAU,QAAK4E,EAEnD,OAAQvB,EAAO2X,MACb,KAAK,KACH,OAAOiB,EAAgBlE,EAAO1U,GAEhC,KAAK,KACH,OAAO4U,EAAmBF,EAAO1U,GAEnC,KAAK,KACH,MAhBG,GAkBL,QACE,OAAO0U,K,+GC5Cb,SAASe,EAAQC,EAAQC,GAAkB,IAAIC,EAAOja,OAAOia,KAAKF,GAAS,GAAI/Z,OAAOka,sBAAuB,CAAE,IAAIC,EAAUna,OAAOka,sBAAsBH,GAAaC,IAAkBG,EAAUA,EAAQnS,QAAO,SAAUoS,GAAO,OAAOpa,OAAOqa,yBAAyBN,EAAQK,GAAKE,eAAkBL,EAAK3W,KAAKnC,MAAM8Y,EAAME,GAAY,OAAOF,EAElV,SAASM,EAAcC,GAAU,IAAK,IAAI1Z,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAAK,CAAE,IAAI2Z,EAAyB,MAAhBzZ,UAAUF,GAAaE,UAAUF,GAAK,GAAQA,EAAI,EAAKgZ,EAAQ9Z,OAAOya,IAAS,GAAMC,SAAQ,SAAU3E,IAAO,OAAgByE,EAAQzE,EAAK0E,EAAO1E,OAAsB/V,OAAO2a,0BAA6B3a,OAAO4a,iBAAiBJ,EAAQxa,OAAO2a,0BAA0BF,IAAmBX,EAAQ9Z,OAAOya,IAASC,SAAQ,SAAU3E,GAAO/V,OAAOuD,eAAeiX,EAAQzE,EAAK/V,OAAOqa,yBAAyBI,EAAQ1E,OAAe,OAAOyE,EAGtgB,SAASoD,EAAiBC,GAC/B,IAAIC,EAAe9c,UAAUC,OAAS,QAAsB2E,IAAjB5E,UAAU,GAAmBA,UAAU,GAAK,GACvF,OAAO,WACL,IAAI+X,EAAQ/X,UAAUC,OAAS,QAAsB2E,IAAjB5E,UAAU,GAAmBA,UAAU,GAAK8c,EAC5EzZ,EAASrD,UAAUC,OAAS,EAAID,UAAU,QAAK4E,EAEnD,OAAI5F,OAAOQ,UAAUH,eAAea,KAAK2c,EAAaxZ,EAAO2X,MACpD6B,EAAYxZ,EAAO2X,MAAMjD,EAAO1U,GAGlC0U,GAgBJ,IAAIgF,EAA+B,WACxC,SAASA,IACP,IAAIC,EAAYhd,UAAUC,OAAS,QAAsB2E,IAAjB5E,UAAU,GAAmBA,UAAU,GAAK,GAChFid,EAAcjd,UAAUC,OAAS,QAAsB2E,IAAjB5E,UAAU,GAAmBA,UAAU,GAAK,GAClFkd,EAA0Bld,UAAUC,OAAS,QAAsB2E,IAAjB5E,UAAU,GAAmBA,UAAU,GAAK,EAAAmd,SAElG,OAAgBte,KAAMke,GAEtB,IAAIK,EAAmBC,OAAOC,sCAAwCJ,EACtEre,KAAK0e,OAAQ,IAAAC,cAAY,WACvB,IAAIzF,EAAQ/X,UAAUC,OAAS,QAAsB2E,IAAjB5E,UAAU,GAAmBA,UAAU,GAAKgd,EAChF,OAAOjF,IACNiF,EAAWI,EAAiB,EAAAK,gBAAAtd,WAAsB,GAAQ,OAAmB8c,MAChFpe,KAAK6e,SAAW,GAqClB,OAlCA,OAAaX,EAAiB,CAAC,CAC7BhI,IAAK,WACLlU,MAAO,WACL,OAAOhC,KAAK0e,QAQb,CACDxI,IAAK,WACLlU,MAAO,SAAkB8c,GACvB,IAAIza,EAAQrE,KAIZ,OAFAA,KAAK6e,SAAWnE,EAAcA,EAAc,GAAI1a,KAAK6e,UAAWC,GAChE9e,KAAK0e,MAAMK,gBAAe,IAAAC,iBAAgBtE,EAAc,GAAI1a,KAAK6e,YAC1D,WACLxa,EAAMwa,SAAW1e,OAAO8e,QAAQ5a,EAAMwa,UAAU1W,QAAO,SAAU+W,GAC/D,OAAQ/e,OAAOia,KAAK0E,GAAaK,SAASD,MACzCE,QAAO,SAAUC,EAAK3H,GACvB,IAAI+E,GAAQ,OAAe/E,EAAM,GAC7BxB,EAAMuG,EAAM,GACZ6C,EAAM7C,EAAM,GAEhB,OAAO/B,EAAcA,EAAc,GAAI2E,GAAM,IAAI,OAAgB,GAAInJ,EAAKoJ,MACzE,IAEHjb,EAAMqa,MAAMK,gBAAe,IAAAC,iBAAgBtE,EAAc,GAAIrW,EAAMwa,iBAKlEX,EAlDiC,GAoDf,IAAIA,EAC/B,W,mGCrFIqB,EAAOC,KACPC,EAAa,GAAPF,EACNG,EAAc,GAAND,EAERE,EAAa,IAANF,EAEPG,EAAa,SAAoBC,EAAQC,GAC3C,MAAO,GAAG/G,OAAO8G,EAAQ,KAAK9G,OAAO8G,EAAS,EAAI,GAAG9G,OAAO+G,EAAM,KAAOA,EAAM,SAG7EC,EAAoB,CAAC,CACvBC,WAAYC,EAAAA,EACZ5J,YAAa,SAAqB6J,GAChC,OAAON,EAAWnC,KAAK0C,MAAMD,EAAOP,GAAO,UAE5C,CACDK,WAAYL,EACZtJ,YAAa,SAAqB6J,GAChC,OAAON,EAAWnC,KAAK0C,MAAMD,EAAOR,GAAQ,WAE7C,CACDM,WAAYN,EACZrJ,YAAa,SAAqB6J,GAChC,OAAON,EAAWnC,KAAK0C,MAAMD,EAAOT,GAAM,SAE3C,CACDO,WAAYP,EACZpJ,YAAa,SAAqB6J,GAChC,OAAON,EAAWnC,KAAK0C,MAAMD,EAAOX,GAAO,UAE5C,CACDS,WAAYT,EACZlJ,YAAa,SAAqB6J,GAChC,OAAON,EAAWnC,KAAK0C,MAAMD,EAlCpBE,KAkCoC,YAE9C,CACDJ,WArCWI,IAsCX/J,YAAa,WACX,MAAO,cAIPgK,EAAS,SAAere,GAC1B,OAAOA,EAAMse,cAAcC,MAAM,KAAK,GAAGhH,MAAM,GAAI,GAAGiH,QAS7CC,EAAmB,SAA0BtE,GACtD,MAAO,CACLuE,MAAO,SAAeR,GACpB,OAAOG,EAAOH,GAAQ,QAExBS,SAAU,SAAkBT,GAC1B,OAAOG,EAAOH,GAAM3G,MAAM,GAAI,IAEhCqH,SAAU,SAAkBV,GAC1B,OAAOH,EAAkBX,QAAO,SAAUC,EAAKpe,GAC7C,OAAOA,EAAE+e,WAAazC,KAAKsD,MAAQX,EAAOjf,EAAEoV,YAAYkH,KAAKsD,MAAQX,GAAQb,IAC5EgB,EAAOH,KAEZY,QAAS,WACP,MAAO,iBAET3E,ICjEW,SAAS4E,EAAWrJ,GACjC,IAAIwI,EAAOxI,EAAKwI,KACZc,EAAYtJ,EAAKyE,KACjBA,OAAqB,IAAd6E,EAAuB,WAAaA,EAC3CC,EAAavJ,EAAKuJ,WAClBC,EAAoBxJ,EAAKyJ,aACzBA,OAAqC,IAAtBD,EAA+B,GAAKA,EACnDE,EAAUlB,aAAgB3C,KAAO2C,EAAO,IAAI3C,KAAK2C,GAGjDmB,EADUnB,MAAAA,GAA8D,iBAAvBkB,EAAQzD,WACpC,UAAYxB,EACrC,OAAoB,kBAAoB,aAAgB,KDwDlC,SAAoBA,EAAMgF,EAAcF,GAC9D,MAAO,CACLP,MAAO,SAAeR,GACpB,OAAOO,EAAiBtE,EAAjBsE,CAAuBP,IAEhCS,SAAU,SAAkBT,GAC1B,OAAOO,EAAiBtE,EAAjBsE,CAAuBP,IAEhCU,SAAU,SAAkBV,GAC1B,OAjCkB,SAAoBA,EAAMoB,EAASH,GACzD,IAAIF,EAAa9f,UAAUC,OAAS,QAAsB2E,IAAjB5E,UAAU,GAAmBA,UAAU,GAAK,GACrF,OAAoB,kBAAoBogB,EAAA,GAAS,OAAS,GAAIJ,EAAc,CAC1ElV,QAAsB,kBAAoB,MAAO,KAAMgV,EAAYf,KACjEoB,GA6BOE,CAAWf,EAAiB,QAAjBA,CAA0BP,GAAoB,kBAAoB,OAAQ,KAAMO,EAAiBtE,EAAjBsE,CAAuBP,IAAQiB,EAAcF,IAEjJH,QAAS,WACP,MAAO,iBAET3E,GCtE4DsF,CAAWJ,EAAUF,EAAcF,EAAnCQ,CAA+CL,IAE/GL,EAAWzJ,UAAY,CACrB4I,KAAM,cAAoB,CAAC,eAAqB3C,MAAO,WAAkB,aAKzEpB,KAAM,UAAgB,CAAC,QAAS,WAAY,aAK5C8E,WAAY,SAKZE,aAAc,a,kIC7BZO,EAAa,SAAoBhK,GACnC,IAAIiK,EAAWjK,EAAKiK,SAChBhL,EAAYe,EAAKf,UACjBiL,EAAWlK,EAAKkK,SAChBpM,GAAQ,OAAyBkC,EAAM,CAAC,WAAY,YAAa,aAEjEmK,EAAoB,IAAW,sBAAsB,OAAgB,GAAI,cAAeF,GAAWhL,GACvG,OAAoB,kBAAoB,OAAO,OAAS,CACtDA,UAAWkL,GACVrM,GAAQ,IAAKoM,IAGlB,UACAF,EAAWpK,UAAY,CACrBqK,SAAU,SACVC,SAAU,QACVjL,UAAW,a,mXCDb,IAAImL,EAA8B,SAAUlN,IAC1C,OAAUkN,EAAgBlN,GAE1B,IAfoBC,EAAeC,EAe/B/N,GAfgB8N,EAeMiN,EAfShN,EAErC,WAAuC,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQxU,UAAUyU,QAAQ/T,KAAK0T,QAAQC,UAAUG,QAAS,IAAI,iBAAyB,EAAQ,MAAOhT,GAAK,OAAO,GAF9PkT,GAAoC,WAAkC,IAAsChT,EAAlCiT,GAAQ,OAAgBT,GAAkB,GAAIC,EAA2B,CAAE,IAAIS,GAAY,OAAgBvV,MAAMU,YAAa2B,EAAS0S,QAAQC,UAAUM,EAAOnU,UAAWoU,QAAqBlT,EAASiT,EAAMhU,MAAMtB,KAAMmB,WAAc,OAAO,OAA2BnB,KAAMqC,KAiB1Z,SAASyf,IACP,IAAIzd,GAEJ,OAAgBrE,KAAM8hB,GAEtB,IAAK,IAAIlJ,EAAOzX,UAAUC,OAAQyX,EAAO,IAAIvY,MAAMsY,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQ3X,UAAU2X,GA4BzB,OAzBAzU,EAAQ0C,EAAO1F,KAAKC,MAAMyF,EAAQ,CAAC/G,MAAM+Y,OAAOF,KAEhD,QAAgB,OAAuBxU,GAAQ,QAAS,CACtD0d,QAAQ,KAGV,QAAgB,OAAuB1d,GAAQ,YAAY,SAAU0d,GACnE1d,EAAM4U,SAAS,CACb8I,OAAQA,QAIZ,QAAgB,OAAuB1d,GAAQ,YAAY,WACzDA,EAAM4U,SAAS,CACb8I,QAAS1d,EAAM6U,MAAM6I,aAIzB,QAAgB,OAAuB1d,GAAQ,wBAAwB,SAAUud,GAC/E,IAAII,EAAc3d,EAAMmR,MAAMwM,YAC9B,OAAoB,kBAAoB,aAAgB,KAAMA,EAA2B,kBAAoBT,EAAA,EAAS,CACpHtV,QAAS+V,GACRJ,GAAYA,MAGVvd,EAgDT,OA7CA,OAAayd,EAAgB,CAAC,CAC5B5L,IAAK,SACLlU,MAAO,WACL,IAAI+f,EAAS/hB,KAAKkZ,MAAM6I,OAEpB3L,EAAcpW,KAAKwV,MACnByM,EAAa7L,EAAY6L,WACzBC,EAAW9L,EAAY8L,SACvBC,EAAa/L,EAAY+L,WAEzB3M,GADcY,EAAY4L,aAClB,OAAyB5L,EAAa,CAAC,aAAc,WAAY,aAAc,iBAE3F,OAAoB,kBAAoB,aAAgB,KAAMpW,KAAKoiB,qBAAmC,kBAAoBC,EAAA,GAAU,OAAS,GAAI7M,EAAO,CACtJ8M,SAAS,EACTJ,SAAUliB,KAAKkiB,SACfK,OAAqB,kBAAoBC,EAAA,EAAgB,CACvDC,gBAAiB,KACjBC,SAAU1iB,KAAK0iB,SACfP,WAAYA,EACZQ,OAAQ,UACM,kBAAoB,KAAY,CAC9CC,KAAM,QAERb,OAAQA,EACRc,cAAe,CAAc,kBAAoBC,EAAA,EAAc,CAC7D5M,IAAK,eACLyM,OAAQ,eACRvL,UAAW,SACXL,QAAS,SAAiBgM,GACxB,OAAOb,EAASa,EAAO,QAEzBZ,WAAYA,GACX,iBAA+B,kBAAoBW,EAAA,EAAc,CAClE5M,IAAK,gBACLyM,OAAQ,gBACRvL,UAAW,SACXL,QAAS,SAAiBgM,GACxB,OAAOb,EAASa,EAAO,SAEzBZ,WAAYA,GACX,mBAAmBpJ,QAAO,OAAmBkJ,aAK/CH,EAvFyB,CAwFhC,EAAAzK,WAEFyK,EAAexK,UAAY,CACzB2K,WAAY,YAAkB,UAC9BD,YAAa,SACbE,SAAU,SACVC,WAAY,UAEdL,EAAetK,aAAe,CAC5ByK,WAAY,GACZC,SAAU,cAIZ,UC9GA,SAASjI,EAAQC,EAAQC,GAAkB,IAAIC,EAAOja,OAAOia,KAAKF,GAAS,GAAI/Z,OAAOka,sBAAuB,CAAE,IAAIC,EAAUna,OAAOka,sBAAsBH,GAAaC,IAAkBG,EAAUA,EAAQnS,QAAO,SAAUoS,GAAO,OAAOpa,OAAOqa,yBAAyBN,EAAQK,GAAKE,eAAkBL,EAAK3W,KAAKnC,MAAM8Y,EAAME,GAAY,OAAOF,EAElV,SAASM,EAAcC,GAAU,IAAK,IAAI1Z,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAAK,CAAE,IAAI2Z,EAAyB,MAAhBzZ,UAAUF,GAAaE,UAAUF,GAAK,GAAQA,EAAI,EAAKgZ,EAAQ9Z,OAAOya,IAAS,GAAMC,SAAQ,SAAU3E,IAAO,OAAgByE,EAAQzE,EAAK0E,EAAO1E,OAAsB/V,OAAO2a,0BAA6B3a,OAAO4a,iBAAiBJ,EAAQxa,OAAO2a,0BAA0BF,IAAmBX,EAAQ9Z,OAAOya,IAASC,SAAQ,SAAU3E,GAAO/V,OAAOuD,eAAeiX,EAAQzE,EAAK/V,OAAOqa,yBAAyBI,EAAQ1E,OAAe,OAAOyE,EAWtgB,IAAIqI,EAAwB,SAA+Bxe,EAAQ0R,GACxE,OAAoB,kBAAoB4M,EAAA,GAAc,OAAS,GAAIte,EAAOgR,MAAO,CAC/EmB,UAAW,0CACXT,IAAK1R,EAAOxC,OAASwC,EAAO0R,KAAO,GAAG6C,OAAO7C,EAAK,aAClDkB,UAAW5S,EAAOgR,OAAShR,EAAOgR,MAAM4B,WAA0B,mBAAqB5S,EAAO1B,OAAS0B,GAAU,MAAQ,SACzHuS,QAAS,SAAiB5U,GACxB,OAAOqC,EAAOuS,SAAWvS,EAAOuS,QAAQ5U,EAAGqC,EAAQ0R,MAEnD1R,EAAO1B,OAAS0B,IAEXye,EAAuB,SAA8Bze,EAAQ0R,GACtE,OAAOwE,EAAcA,EAAc,GAAIlW,EAAOgR,OAAQ,GAAI,CACxD4B,UAAW5S,EAAOgR,OAAShR,EAAOgR,MAAM4B,YAA4B,mBAAqB5S,EAAO1B,OAAS0B,GAAU,MAAQ,UAC3HuS,QAAS,SAAiB5U,GACxB,OAAOqC,EAAOuS,SAAWvS,EAAOuS,QAAQ5U,EAAGqC,EAAQ0R,IAErD0L,SAAUpd,EAAO1B,OAAS0B,KAI1B0e,EAAuB,SAAUtO,IACnC,OAAUsO,EAAStO,GAEnB,IAxCoBC,EAAeC,EAwC/B/N,GAxCgB8N,EAwCMqO,EAxCSpO,EAErC,WAAuC,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQxU,UAAUyU,QAAQ/T,KAAK0T,QAAQC,UAAUG,QAAS,IAAI,iBAAyB,EAAQ,MAAOhT,GAAK,OAAO,GAF9P,GAAoC,WAAkC,IAAsCE,EAAlCiT,GAAQ,OAAgBT,GAAkB,GAAIC,EAA2B,CAAE,IAAIS,GAAY,OAAgBvV,MAAMU,YAAa2B,EAAS0S,QAAQC,UAAUM,EAAOnU,UAAWoU,QAAqBlT,EAASiT,EAAMhU,MAAMtB,KAAMmB,WAAc,OAAO,OAA2BnB,KAAMqC,KA0C1Z,SAAS6gB,IACP,IAAI7e,GAEJ,OAAgBrE,KAAMkjB,GAEtB,IAAK,IAAItK,EAAOzX,UAAUC,OAAQyX,EAAO,IAAIvY,MAAMsY,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQ3X,UAAU2X,GAezB,OAZAzU,EAAQ0C,EAAO1F,KAAKC,MAAMyF,EAAQ,CAAC/G,MAAM+Y,OAAOF,KAEhD,QAAgB,OAAuBxU,GAAQ,QAAS,CACtD0d,QAAQ,KAGV,QAAgB,OAAuB1d,GAAQ,cAAc,SAAU0d,GACrE1d,EAAM4U,SAAS,CACb8I,OAAQA,OAIL1d,EA0DT,OAvDA,OAAa6e,EAAS,CAAC,CACrBhN,IAAK,SACLlU,MAAO,WACL,IAAImhB,EAASnjB,KAET+hB,EAAS/hB,KAAKkZ,MAAM6I,OACpB3L,EAAcpW,KAAKwV,MACnB4N,EAAUhN,EAAYgN,QACtBC,EAAkBjN,EAAYiN,gBAC9BC,EAAYlN,EAAY8L,SACxBqB,EAAgBnN,EAAYmN,cAC5BC,EAAmBpN,EAAYoN,iBAC/BC,EAAerN,EAAYqN,aAE3BC,GAAW,OAASN,GACpBO,EAAcD,EAAS,GACvBE,EAAcF,EAASnK,MAAM,GAEjC,OAAoB,kBAAoB,EAAAsK,SAAU,KAAMF,GAA4B,kBAAoBG,EAAA,EAAa,CACnHnN,UAAW,sDACVgN,EAAY7gB,MAAqB,kBAAoBqV,EAAA,IAAQ,OAAS,GAAIwL,EAAYnO,MAAO,CAC9FuB,QAAS4M,EAAY5M,SAAW4M,EAAYnO,OAASmO,EAAYnO,MAAMuB,cAAWhR,IAChF4d,EAAY7gB,OAAS6gB,GAAcF,IAAiBA,EAAaxB,YAAcwB,EAAavB,WAA0B,kBAAoB4B,EAAA,EAAa,CACzJnN,UAAW,kBACG,kBAAoB,EAAgB8M,KAAiBL,GAAWA,EAAQhiB,OAAS,GAAKiiB,EAAgBjiB,OAAS,IAAmB,kBAAoB0iB,EAAA,EAAa,CACjLnN,UAAW,GAAGoC,OAAOqK,EAAQhiB,QAAU,EAAI,uBAAyB,GAAI,mDAC1D,kBAAoBihB,EAAA,GAAU,OAAS,GAAIkB,EAAe,CACxExB,OAAQA,EACRO,SAAS,EACTJ,SAAU,WACRoB,GAAaA,EAAUhiB,WAAM,EAAQH,WAErCgiB,EAAOY,YAAW,IAEpBxB,OAAqB,kBAAoByB,EAAA,GAAa,OAAS,GAAIR,EAAkB,CACnFd,SAAU,SAAkBX,GAC1B,OAAOoB,EAAOY,WAAWhC,OAG7Bc,cAAe,GAAG9J,QAAO,OAAmB4K,EAAc,CAAc,kBAAoBb,EAAA,GAAc,OAAS,CACjH5M,IAAK,gBACJ+M,EAAqBU,EAAa,gBAAiB,CACpDhN,UAAW,uCAAuCoC,OAAO4K,EAAYnO,OAASmO,EAAYnO,MAAMmB,WAAa,QACxG,KAAK,OAAmBiN,EAAYlK,KAAI,SAAUlV,EAAQ0R,GAC/D,OAAoB,kBAAoB4M,EAAA,GAAc,OAAS,CAC7D5M,IAAK1R,EAAO0R,KAAO1R,GAAUA,EAAOgR,OAAShR,EAAOgR,MAAMU,KAAOA,GAChE+M,EAAqBze,EAAQ0R,UAC7B,OAAmBkN,EAAQhiB,OAAS,GAAKiiB,EAAgBjiB,OAAS,EAAI,CAAc,kBAAoB6iB,EAAA,EAAmB,CAC9H/N,IAAK,YACLS,UAAW,uDACP,KAAK,OAAmB0M,EAAgB3J,IAAIsJ,cAKjDE,EApFkB,CAqFzB,EAAA7L,WAEE6M,EAAc,YAAkB,cAAoB,CAAC,SAAgB,UAAgB,CACvFphB,MAAO,SACPd,MAAO,cAAoB,CAAC,WAAkB,aAC9C+U,QAAS,SACTvB,MAAO,UACL,cACJ0N,EAAQ5L,UAAY,CAClB8L,QAASc,EACThC,SAAU,SACVmB,gBAAiBa,EACjBX,cAAe,WAAgB,OAAgB,GAAI,WAAkB,UACrEC,iBAAkB,WAAgB,OAAgB,GAAI,WAAkB,UACxEC,aAAc,UAAgB,cAEhCP,EAAQ1L,aAAe,CACrB4L,QAAS,GACTC,gBAAiB,GACjBE,cAAe,GACfE,aAAc,GACdvB,SAAU,cAIZ,U,wDCpIA,IAAIiC,EAA0B,SAAUvP,IACtC,OAAUuP,EAAYvP,GAEtB,IAlBoBC,EAAeC,EAkB/B/N,GAlBgB8N,EAkBMsP,EAlBSrP,EAErC,WAAuC,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQxU,UAAUyU,QAAQ/T,KAAK0T,QAAQC,UAAUG,QAAS,IAAI,iBAAyB,EAAQ,MAAOhT,GAAK,OAAO,GAF9P,GAAoC,WAAkC,IAAsCE,EAAlCiT,GAAQ,OAAgBT,GAAkB,GAAIC,EAA2B,CAAE,IAAIS,GAAY,OAAgBvV,MAAMU,YAAa2B,EAAS0S,QAAQC,UAAUM,EAAOnU,UAAWoU,QAAqBlT,EAASiT,EAAMhU,MAAMtB,KAAMmB,WAAc,OAAO,OAA2BnB,KAAMqC,KAoB1Z,SAAS8hB,IACP,IAAI9f,GAEJ,OAAgBrE,KAAMmkB,GAEtB,IAAK,IAAIvL,EAAOzX,UAAUC,OAAQyX,EAAO,IAAIvY,MAAMsY,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQ3X,UAAU2X,GA0BzB,OAvBAzU,EAAQ0C,EAAO1F,KAAKC,MAAMyF,EAAQ,CAAC/G,MAAM+Y,OAAOF,KAEhD,QAAgB,OAAuBxU,GAAQ,QAAS,CACtD0d,QAAQ,EACRqC,UAAU,EACVC,aAAa,QAAiB,qBAGhC,QAAgB,OAAuBhgB,GAAQ,qBAAqB,WAClEigB,QAAQC,MAAM,+HAGdlgB,EAAM4U,SAAS,CACbmL,UAAU,QAId,QAAgB,OAAuB/f,GAAQ,YAAY,SAAU0d,GACnE1d,EAAM4U,SAAS,CACb8I,OAAQA,OAIL1d,EA8ET,OA3EA,OAAa8f,EAAY,CAAC,CACxBjO,IAAK,SACLlU,MAAO,WACL,IAAImhB,EAASnjB,KAETwkB,EAAcxkB,KAAKkZ,MACnB6I,EAASyC,EAAYzC,OACrBqC,EAAWI,EAAYJ,SAEvBhO,EAAcpW,KAAKwV,MACnBpP,EAAKgQ,EAAYhQ,GACjB+b,EAAa/L,EAAY+L,WACzB3J,EAAQpC,EAAYoC,MACpB0J,EAAW9L,EAAY8L,SACvBuC,EAAUrO,EAAYqO,QACtBC,EAActO,EAAYsO,YAC1B5M,EAAQ1B,EAAY0B,MACpBnB,EAAYP,EAAYO,UACxBgM,EAASvM,EAAYuM,OACrBgC,EAAWvO,EAAYuO,SACvBnP,GAAQ,OAAyBY,EAAa,CAAC,KAAM,aAAc,QAAS,WAAY,UAAW,cAAe,QAAS,YAAa,SAAU,aAElJwO,OAAyB7e,IAAX4c,EAAuBA,EAAS3iB,KAAKkZ,MAAMmL,YAC7D,OAAoB,kBAAoB,EAAAR,SAAU,KAAMrL,GAASA,EAAMpX,OAAS,EAAiB,kBAAoBihB,EAAA,GAAU,OAAS,CACtIH,SAAU,WACR,OAAOiB,EAAOT,UAAS,KAExBlN,EAAO,CACRmB,UAAW,IAAWA,EAAW,qBACjCgM,OAAQiC,EACRD,SAAUA,EACVpC,OAAqB,kBAAoBC,EAAA,GAAgB,OAAS,GAAIkC,EAAa,CACjFvC,WAAYA,EACZQ,OAAQ,GAAG5J,OAAO6L,EAAa,WAC/BC,iBAAkB,CAAc,kBAAoB,EAAAhB,SAAU,CAC5D3N,IAAK,kBACJkO,EAAwB,kBAAoBU,EAAA,EAAwB,CACrE1e,GAAIA,EAAK,GAAG2S,OAAO3S,EAAI,oBAAsB,kBAC7C,aAAc,aACd2e,SAAU7C,EACVuC,QAASA,EACT9B,OAAQ,GAAG5J,OAAO6L,EAAa,sBACf,kBAAoBE,EAAA,EAAwB,CAC5D1e,GAAIA,EAAK,GAAG2S,OAAO3S,EAAI,oBAAsB,kBAC7C,aAAc,aACd2e,SAAU7C,EACV8C,UAAWP,EACX9B,OAAQ,GAAG5J,OAAO6L,EAAa,qBAC9B9M,EAAQ,GAAGiB,OAAOjB,EAAO,aAAe,MAC3C4K,SAAU1iB,KAAK0iB,YAEjBX,OAAQA,EACRc,cAAe,GAAG9J,QAAO,YAA6BhT,IAAV+R,GAAuBA,EAAQ,EAAI,CAAc,kBAAoBgL,EAAA,EAAc,CAC7H5M,IAAK,QACLiM,YAAY,EACZxL,UAAYyN,EAA2C,GAAhC,+BACtBtM,EAAO,cAAgB,KAAK,OAAmBU,EAAMkB,KAAI,SAAUuL,EAAS/O,GAC7E,OAAoB,kBAAoB4M,EAAA,GAAc,OAAS,CAC7D1L,UAAW,SACXlB,IAAK+O,EAAQ/O,KAAOA,EACpByM,OAAQ,GAAG5J,OAAO6L,EAAa,KAAK7L,OAAOkM,EAAQ/O,KAAOA,GAC1Da,QAAS,SAAiBgM,GACxB,OAAOkC,EAAQlO,SAAWkO,EAAQlO,QAAQgM,EAAOkC,EAAS/O,KAE3D+O,MAAAA,OAAyC,EAASA,EAAQzP,OAAQyP,EAAQ1O,eAE9D,kBAAoB2O,EAAA,GAAU,OAAS,GAAI1P,EAAO,CACnEmB,UAAW,IAAWA,EAAW,qBACjCvQ,GAAI,GAAG2S,OAAO3S,EAAI,aAClB4e,UAAWP,EACXM,SAAU7C,UAKTiC,EAnHqB,CAoH5B,EAAA9M,WAEF8M,EAAW7M,UAAY,CACrBQ,MAAO,WACPnB,UAAW,WACX6B,MAAO,YAAkB,UAAgB,CACvCjC,MAAO,WACPQ,QAAS,YAEX0N,QAAS,SACTre,GAAI,WACJ8b,SAAU,SACVwC,YAAa,QACbvC,WAAY,SACZQ,OAAQ,WACRgC,SAAU,UAEZR,EAAW3M,aAAe,CACxBb,UAAW,GACXwL,YAAY,EACZ3J,MAAO,GACPiM,SAAS,EACTvC,SAAU,aAGVyC,UAAU,GAEZ,U,wECrJA,IAAIxN,GAAoB,SAAUvC,IAChC,OAAUuC,EAAMvC,GAEhB,IAboBC,EAAeC,EAa/B/N,GAbgB8N,EAaMsC,EAbSrC,EAErC,WAAuC,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQxU,UAAUyU,QAAQ/T,KAAK0T,QAAQC,UAAUG,QAAS,IAAI,iBAAyB,EAAQ,MAAOhT,GAAK,OAAO,GAF9P,GAAoC,WAAkC,IAAsCE,EAAlCiT,GAAQ,OAAgBT,GAAkB,GAAIC,EAA2B,CAAE,IAAIS,GAAY,OAAgBvV,MAAMU,YAAa2B,EAAS0S,QAAQC,UAAUM,EAAOnU,UAAWoU,QAAqBlT,EAASiT,EAAMhU,MAAMtB,KAAMmB,WAAc,OAAO,OAA2BnB,KAAMqC,KAe1Z,SAAS8U,IACP,IAAI9S,GAEJ,OAAgBrE,KAAMmX,GAEtB,IAAK,IAAIyB,EAAOzX,UAAUC,OAAQyX,EAAO,IAAIvY,MAAMsY,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQ3X,UAAU2X,GAezB,OAZAzU,EAAQ0C,EAAO1F,KAAKC,MAAMyF,EAAQ,CAAC/G,MAAM+Y,OAAOF,KAEhD,QAAgB,OAAuBxU,GAAQ,QAAS,CACtD8gB,WAAY,MAGd,QAAgB,OAAuB9gB,GAAQ,iBAAiB,SAAUlC,EAAGH,GAC3EqC,EAAM4U,SAAS,CACbkM,WAAYnjB,OAITqC,EAuCT,OApCA,OAAa8S,EAAM,CAAC,CAClBjB,IAAK,SACLlU,MAAO,WACL,IAAIoU,EAAcpW,KAAKwV,MACnBxT,EAAQoU,EAAYpU,MACpB+iB,EAAW3O,EAAY2O,SACvBK,EAAWhP,EAAYgP,SACvBhf,EAAKgQ,EAAYhQ,GACjBif,EAAOjP,EAAYiP,KACnB1O,EAAYP,EAAYO,UACxBwL,EAAa/L,EAAY+L,WACzB3M,GAAQ,OAAyBY,EAAa,CAAC,QAAS,WAAY,WAAY,KAAM,OAAQ,YAAa,eAE3GkP,EAAOD,GAAQ,MACfF,EAAanlB,KAAKkZ,MAAMiM,WACxBI,EAAiBR,GAAsB/kB,KAAKwlB,cAChD,OAAoB,kBAAoB,EAAA3B,SAAU,KAAmB,kBAAoB4B,GAAA,IAAW,OAAS,GAAIjQ,EAAO,CACtHmB,UAAW,4BAA4BoC,OAAOpC,GAAa,IAC3DvQ,GAAIA,EACJ+b,WAAYA,EACZngB,MAAO+iB,EAAW/iB,EAAQmjB,EAC1BJ,SAAU,SAAkBW,EAAavjB,GACvC,OAAOojB,EAAepjB,EAAGA,EAAEwY,OAAO3Y,QAEpC,cAAe,gBACf2jB,UAAW,SAAmBxjB,GAC5B,MAAiB,UAAVA,EAAE+T,KAAmBkP,EAASjjB,EAAGH,GAASmjB,IAEnD,2BAA4B,mBACZ,kBAAoBG,EAAM,CAC1C1C,KAAM,KACNjM,UAAW,2BAKVQ,EAjEe,CAkEtB,EAAAE,WAEFF,GAAKG,UAAY,CACftV,MAAO,WACP4jB,YAAa,WACbb,SAAU,SACVK,SAAU,SACVjD,WAAY,SACZ,aAAc,WACd/b,GAAI,WACJif,KAAM,gBACN1O,UAAW,YAEbQ,GAAKK,aAAe,CAClBxV,MAAO,GACPojB,SAAU,aAGVjD,YAAY,EACZ,aAAc,cAEhB,Y,+DChGA,SAAS,GAAQjI,EAAQC,GAAkB,IAAIC,EAAOja,OAAOia,KAAKF,GAAS,GAAI/Z,OAAOka,sBAAuB,CAAE,IAAIC,EAAUna,OAAOka,sBAAsBH,GAAaC,IAAkBG,EAAUA,EAAQnS,QAAO,SAAUoS,GAAO,OAAOpa,OAAOqa,yBAAyBN,EAAQK,GAAKE,eAAkBL,EAAK3W,KAAKnC,MAAM8Y,EAAME,GAAY,OAAOF,EAoBlV,IAAIyL,GAA8B,SAAUjR,IAC1C,OAAUiR,EAAgBjR,GAE1B,IAnBoBC,EAAeC,EAmB/B/N,GAnBgB8N,EAmBMgR,EAnBS/Q,EAErC,WAAuC,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQxU,UAAUyU,QAAQ/T,KAAK0T,QAAQC,UAAUG,QAAS,IAAI,iBAAyB,EAAQ,MAAOhT,GAAK,OAAO,GAF9P,GAAoC,WAAkC,IAAsCE,EAAlCiT,GAAQ,OAAgBT,GAAkB,GAAIC,EAA2B,CAAE,IAAIS,GAAY,OAAgBvV,MAAMU,YAAa2B,EAAS0S,QAAQC,UAAUM,EAAOnU,UAAWoU,QAAqBlT,EAASiT,EAAMhU,MAAMtB,KAAMmB,WAAc,OAAO,OAA2BnB,KAAMqC,KAqB1Z,SAASwjB,IACP,IAAIxhB,GAEJ,OAAgBrE,KAAM6lB,GAEtB,IAAK,IAAIjN,EAAOzX,UAAUC,OAAQyX,EAAO,IAAIvY,MAAMsY,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQ3X,UAAU2X,GA4CzB,OAzCAzU,EAAQ0C,EAAO1F,KAAKC,MAAMyF,EAAQ,CAAC/G,MAAM+Y,OAAOF,KAEhD,QAAgB,OAAuBxU,GAAQ,QAAS,CACtDyhB,YAAY,EACZC,SAAU,MAGZ,QAAgB,OAAuB1hB,GAAQ,YAAY,SAAUyhB,GACnEzhB,EAAM4U,SAAS,CACb6M,WAAYA,QAIhB,QAAgB,OAAuBzhB,GAAQ,qBAAqB,WAClE,IAAI0hB,EAAW1hB,EAAM6U,MAAM6M,SACvB/jB,EAAQqC,EAAMmR,MAAMxT,MACxB,OAAO1B,MAAM0lB,KAAK,IAAIC,IAAI,GAAGlN,QAAO,OAAmB/W,GAASA,EAAMZ,OAAS,GAAKY,EAAMtB,cAAgBJ,MAAQ0B,EAAM0X,KAAI,SAAUqD,GACpI,OAAOA,EAAK/a,OAAS+a,KAClB,KAAK,OAAmBgJ,UAG/B,QAAgB,OAAuB1hB,GAAQ,YAAY,SAAU0e,EAAOmD,GAC1E,IAAInB,EAAW1gB,EAAMmR,MAAMuP,SAEvBoB,EAAe9hB,EAAM+hB,oBAUzBrB,EAAShC,EAPPoD,EADEA,EAAahH,SAAS+G,GACTC,EAAahe,QAAO,SAAU4U,GAC3C,OAAOA,IAASmJ,KAGH,GAAGnN,QAAO,OAAmBoN,GAAe,CAACD,IAGhCA,GAE9B7hB,EAAM4U,SAAS,CACb8M,SAAUI,OAIP9hB,EA0DT,OAvDA,OAAawhB,EAAgB,CAAC,CAC5B3P,IAAK,qBACLlU,MAAO,SAA4B0V,GACjC,IAAI2O,EAAe3O,EAAK1V,MACpBA,EAAQhC,KAAKwV,MAAMxT,MAElB,KAAQqkB,EAAcrkB,IACzBhC,KAAKiZ,SAAS,CACZ8M,SAAU/jB,MAIf,CACDkU,IAAK,SACLlU,MAAO,WACL,IAAI8jB,EAAa9lB,KAAKkZ,MAAM4M,WACxB1P,EAAcpW,KAAKwV,MACnBgD,EAAQpC,EAAYoC,MACpBoN,EAAcxP,EAAYwP,YAC1BzD,EAAa/L,EAAY+L,WACzBxL,EAAYP,EAAYO,UAC5B,OAAoB,kBAAoB,EAAAkN,SAAU,MAAOrL,GAASA,GAASA,EAAMpX,QAAU,EAAiB,kBAAoB,IAAM,OAAS,GAAIpB,KAAKwV,MAAO,CAC7JxT,MAAO,GAAG+W,OAAO/Y,KAAKomB,wBACL,kBAAoBE,GAAA,EAAQ,CAC7C3P,UAAWA,EACXG,QAAS,eACT,aAAc,eACd4L,SAAU1iB,KAAK0iB,SACfP,WAAYA,EACZD,SAAUliB,KAAKkiB,SACfqE,WAAYvmB,KAAKomB,oBACjBrE,OAAQ+D,EACRU,gBAAiBZ,GAChBpN,EAAMkB,KAAI,SAAU+C,EAAOvG,GAC5B,IAAIlU,EAAQya,EAAMza,MACdykB,EAAWhK,EAAM1F,QACjBjU,EAAQ2Z,EAAM3Z,MACdsD,EAAKqW,EAAMrW,GACX2W,GAAO,OAAyBN,EAAO,CAAC,QAAS,UAAW,QAAS,OAEzE,OAAoB,kBAAoBiK,GAAA,GAAc,OAAS,GAAI3J,EAAM,CACvE7G,IAAK9P,GAAM8P,EACXlU,MAAOsD,OAAOtD,GAASoE,GAAM8P,GAC7Ba,QAAS,SAAiB5U,GACxB,OAAOskB,GAAYA,EAAStkB,EAxHxC,SAAuBwY,GAAU,IAAK,IAAI1Z,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAAK,CAAE,IAAI2Z,EAAyB,MAAhBzZ,UAAUF,GAAaE,UAAUF,GAAK,GAAQA,EAAI,EAAK,GAAQd,OAAOya,IAAS,GAAMC,SAAQ,SAAU3E,IAAO,OAAgByE,EAAQzE,EAAK0E,EAAO1E,OAAsB/V,OAAO2a,0BAA6B3a,OAAO4a,iBAAiBJ,EAAQxa,OAAO2a,0BAA0BF,IAAmB,GAAQza,OAAOya,IAASC,SAAQ,SAAU3E,GAAO/V,OAAOuD,eAAeiX,EAAQzE,EAAK/V,OAAOqa,yBAAyBI,EAAQ1E,OAAe,OAAOyE,EAwHle,CAAc,CAC3C3Y,MAAOA,EACPc,MAAOA,EACPsD,GAAIA,GACH2W,GAAO7G,MAEVpT,YAKH+iB,EAjHyB,CAkHhC,EAAAxO,WAEFwO,GAAevO,UAAY,CAIzByN,SAAU,SAKV/iB,MAAO,YAAkB,cAAoB,CAAC,WAAkB,UAAgB,CAC9Ec,MAAO,SACPd,MAAO,gBAMT4jB,YAAa,WAKbpN,MAAO,YAAkB,UAAgB,CACvCxW,MAAO,WACPc,MAAO,SACPsD,GAAI,WACJ2Q,QAAS,YAMXoL,WAAY,SACZxL,UAAW,YAEbkP,GAAerO,aAAe,CAC5BgB,MAAO,GACPxW,MAAO,GACP+iB,SAAU,aAGV5C,YAAY,GAEd,Y,gBCpLA,SAAS,GAAQjI,EAAQC,GAAkB,IAAIC,EAAOja,OAAOia,KAAKF,GAAS,GAAI/Z,OAAOka,sBAAuB,CAAE,IAAIC,EAAUna,OAAOka,sBAAsBH,GAAaC,IAAkBG,EAAUA,EAAQnS,QAAO,SAAUoS,GAAO,OAAOpa,OAAOqa,yBAAyBN,EAAQK,GAAKE,eAAkBL,EAAK3W,KAAKnC,MAAM8Y,EAAME,GAAY,OAAOF,EAgBlV,IAAIuM,GAAqB,SAAU/R,IACjC,OAAU+R,EAAO/R,GAEjB,IAfoBC,EAAeC,EAe/B/N,GAfgB8N,EAeM8R,EAfS7R,EAErC,WAAuC,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQxU,UAAUyU,QAAQ/T,KAAK0T,QAAQC,UAAUG,QAAS,IAAI,iBAAyB,EAAQ,MAAOhT,GAAK,OAAO,GAF9P,GAAoC,WAAkC,IAAsCE,EAAlCiT,GAAQ,OAAgBT,GAAkB,GAAIC,EAA2B,CAAE,IAAIS,GAAY,OAAgBvV,MAAMU,YAAa2B,EAAS0S,QAAQC,UAAUM,EAAOnU,UAAWoU,QAAqBlT,EAASiT,EAAMhU,MAAMtB,KAAMmB,WAAc,OAAO,OAA2BnB,KAAMqC,KAiB1Z,SAASskB,IACP,IAAItiB,GAEJ,OAAgBrE,KAAM2mB,GAEtB,IAAK,IAAI/N,EAAOzX,UAAUC,OAAQyX,EAAO,IAAIvY,MAAMsY,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQ3X,UAAU2X,GA+BzB,OA5BAzU,EAAQ0C,EAAO1F,KAAKC,MAAMyF,EAAQ,CAAC/G,MAAM+Y,OAAOF,KAEhD,QAAgB,OAAuBxU,GAAQ,QAAS,CACtDyhB,YAAY,EACZrB,aAAS1e,KAGX,QAAgB,OAAuB1B,GAAQ,YAAY,SAAUyhB,GACnEzhB,EAAM4U,SAAS,CACb6M,WAAYA,QAIhB,QAAgB,OAAuBzhB,GAAQ,qBAAqB,WAClE,IAAIogB,EAAUpgB,EAAM6U,MAAMuL,QACtBmC,EAAgBviB,EAAMmR,MAAMxT,MAChC,OAAO4kB,IAAkBA,EAAc5kB,OAAS4kB,IAAkBnC,IAAYA,EAAQziB,OAASyiB,OAGjG,QAAgB,OAAuBpgB,GAAQ,YAAY,SAAU0e,EAAOmD,IAE1EnB,EADe1gB,EAAMmR,MAAMuP,UAClBhC,EAAOmD,GAEhB7hB,EAAM4U,SAAS,CACbwL,QAASyB,OAIN7hB,EAsDT,OAnDA,OAAasiB,EAAO,CAAC,CACnBzQ,IAAK,SACLlU,MAAO,WACL,IAAI8jB,EAAa9lB,KAAKkZ,MAAM4M,WACxB1P,EAAcpW,KAAKwV,MACnBgD,EAAQpC,EAAYoC,MACpBoN,EAAcxP,EAAYwP,YAC1BzD,EAAa/L,EAAY+L,WACzBxL,EAAYP,EAAYO,UACxBkQ,EAAe7mB,KAAKomB,oBACxB,OAAoB,kBAAoB,EAAAvC,SAAU,MAAOrL,GAASA,GAASA,EAAMpX,QAAU,EAAiB,kBAAoB,IAAM,OAAS,GAAIpB,KAAKwV,MAAO,CAC7JxT,MAAO,GAAG+W,OAAO/Y,KAAKomB,wBACL,kBAAoBE,GAAA,EAAQ,CAC7C3P,UAAWA,EACXG,QAAS,aACT,aAAc,eACdqL,WAAYA,EACZO,SAAU1iB,KAAK0iB,SACfR,SAAUliB,KAAKkiB,SACfH,OAAQ+D,EACRU,gBAAiBZ,GAChBpN,EAAMkB,KAAI,SAAUhC,EAAMxB,GAC3B,IAAIlU,EAAQ0V,EAAK1V,MACbgjB,EAAYtN,EAAKsN,UACjB8B,EAAYpP,EAAKqN,SACjBjiB,EAAQ4U,EAAK5U,MACbsD,EAAKsR,EAAKtR,GACV2W,GAAO,OAAyBrF,EAAM,CAAC,QAAS,YAAa,WAAY,QAAS,OAEtF,OAAoB,kBAAoBgP,GAAA,GAAc,OAAS,GAAI3J,EAAM,CACvE7G,IAAK9P,GAAM8P,EACXlU,MAAOA,GAAS,GAAKkU,IACN,kBAAoB,MAAY,OAAS,GAAI6G,EAAM,CAClEpS,KAAMvE,GAAM,GAAG2S,OAAO7C,EAAK,UAC3BpT,MAAOA,EACPd,MAAOA,GAASkU,EAChB8O,UAAWA,QAA8Bjf,IAAjB8gB,GAA8BA,IAAiB7kB,QAA0B+D,IAAjB8gB,GAA8BA,IAAiB,GAAK3Q,IAAO,EAC3I6O,SAAU,SAAkBgC,EAAQ5kB,GAClC,OAAO2kB,GAAaA,EAAU3kB,EAjG1C,SAAuBwY,GAAU,IAAK,IAAI1Z,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAAK,CAAE,IAAI2Z,EAAyB,MAAhBzZ,UAAUF,GAAaE,UAAUF,GAAK,GAAQA,EAAI,EAAK,GAAQd,OAAOya,IAAS,GAAMC,SAAQ,SAAU3E,IAAO,OAAgByE,EAAQzE,EAAK0E,EAAO1E,OAAsB/V,OAAO2a,0BAA6B3a,OAAO4a,iBAAiBJ,EAAQxa,OAAO2a,0BAA0BF,IAAmB,GAAQza,OAAOya,IAASC,SAAQ,SAAU3E,GAAO/V,OAAOuD,eAAeiX,EAAQzE,EAAK/V,OAAOqa,yBAAyBI,EAAQ1E,OAAe,OAAOyE,EAiGhe,CAAc,CAC7CvU,GAAIA,EACJtD,MAAOA,EACPd,MAAOA,EACPgjB,UAAWA,GACVjI,GAAO7G,IAEZ9P,GAAIA,GAAM,GAAG2S,OAAO/W,EAAO,KAAK+W,OAAO7C,gBAMxCyQ,EAhGgB,CAiGvB,EAAAtP,WAEFsP,GAAMrP,UAAY,CAChByN,SAAU,SACV/iB,MAAO,cAAoB,CAAC,WAAkB,UAAgB,CAC5Dc,MAAO,SACPd,MAAO,eAET4jB,YAAa,WACbpN,MAAO,YAAkB,UAAgB,CACvCxW,MAAO,WACPc,MAAO,SACPsD,GAAI,WACJ4e,UAAW,SACXD,SAAU,YAEZ5C,WAAY,SACZxL,UAAW,YAEbgQ,GAAMnP,aAAe,CACnBgB,MAAO,GACPuM,SAAU,aAGV5C,YAAY,GAEd,Y,IC3II6E,G,YAEJ,SAAS,GAAQ9M,EAAQC,GAAkB,IAAIC,EAAOja,OAAOia,KAAKF,GAAS,GAAI/Z,OAAOka,sBAAuB,CAAE,IAAIC,EAAUna,OAAOka,sBAAsBH,GAAaC,IAAkBG,EAAUA,EAAQnS,QAAO,SAAUoS,GAAO,OAAOpa,OAAOqa,yBAAyBN,EAAQK,GAAKE,eAAkBL,EAAK3W,KAAKnC,MAAM8Y,EAAME,GAAY,OAAOF,EAElV,SAAS,GAAcO,GAAU,IAAK,IAAI1Z,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAAK,CAAE,IAAI2Z,EAAyB,MAAhBzZ,UAAUF,GAAaE,UAAUF,GAAK,GAAQA,EAAI,EAAK,GAAQd,OAAOya,IAAS,GAAMC,SAAQ,SAAU3E,IAAO,OAAgByE,EAAQzE,EAAK0E,EAAO1E,OAAsB/V,OAAO2a,0BAA6B3a,OAAO4a,iBAAiBJ,EAAQxa,OAAO2a,0BAA0BF,IAAmB,GAAQza,OAAOya,IAASC,SAAQ,SAAU3E,GAAO/V,OAAOuD,eAAeiX,EAAQzE,EAAK/V,OAAOqa,yBAAyBI,EAAQ1E,OAAe,OAAOyE,EAiBtgB,IAAIsM,GAAY,CACrBC,SAAU,WACVC,MAAO,QACPC,OAAQ,SACRC,MAAO,SAGLC,GAAqB,SAAU1S,IACjC,OAAU0S,EAAO1S,GAEjB,IAzBoBC,EAAeC,EAyB/B/N,GAzBgB8N,EAyBMyS,EAzBSxS,EAErC,WAAuC,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQxU,UAAUyU,QAAQ/T,KAAK0T,QAAQC,UAAUG,QAAS,IAAI,iBAAyB,EAAQ,MAAOhT,GAAK,OAAO,GAF9P,GAAoC,WAAkC,IAAsCE,EAAlCiT,GAAQ,OAAgBT,GAAkB,GAAIC,EAA2B,CAAE,IAAIS,GAAY,OAAgBvV,MAAMU,YAAa2B,EAAS0S,QAAQC,UAAUM,EAAOnU,UAAWoU,QAAqBlT,EAASiT,EAAMhU,MAAMtB,KAAMmB,WAAc,OAAO,OAA2BnB,KAAMqC,KA2B1Z,SAASilB,IACP,IAAIjjB,GAEJ,OAAgBrE,KAAMsnB,GAEtB,IAAK,IAAI1O,EAAOzX,UAAUC,OAAQyX,EAAO,IAAIvY,MAAMsY,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQ3X,UAAU2X,GAqOzB,OAlOAzU,EAAQ0C,EAAO1F,KAAKC,MAAMyF,EAAQ,CAAC/G,MAAM+Y,OAAOF,KAEhD,QAAgB,OAAuBxU,GAAQ,QAAS,CACtDyhB,YAAY,EACZC,SAAU,GACVwB,SAAU,MAGZ,QAAgB,OAAuBljB,GAAQ,YAAY,SAAUyhB,GACnEzhB,EAAM4U,SAAS,CACb6M,WAAYA,QAIhB,QAAgB,OAAuBzhB,GAAQ,YAAY,SAAUqT,EAAM8P,GACzE,IAWIC,EAXAC,EAAahQ,EAAKgQ,WAClBxF,EAAWxK,EAAKwK,SAChByF,EAAajQ,EAAKiQ,WAClBC,EAAUlQ,EAAKkQ,QACfzL,EAAOzE,EAAKyE,KACZrF,EAAUY,EAAKZ,QACf0B,EAAQd,EAAKc,MACbqP,GAAQ,OAAyBnQ,EAAM,CAAC,aAAc,WAAY,aAAc,UAAW,OAAQ,UAAW,UAE9GoQ,EAAWzjB,EAAMmR,MAAMsS,SACvBP,EAAWljB,EAAM6U,MAAMqO,SAG3B,IACEE,EAAQ,IAAIpL,OAAOkL,EAAU,KAC7B,MAAOQ,GACPN,EAAQ,IAAIpL,OAAOkL,EAASniB,QAAQ,sBAAuB,QAAS,KAGtE,OAAOoT,EAAMrQ,QAAO,SAAU4U,GAC5B,OAAO+K,GAAYJ,GAAcD,EAAMO,KAAKN,IAAeC,GAAcF,EAAMO,KAAKL,IAAe5K,EAAK/a,OAASylB,EAAMO,KAAKjL,EAAK/a,QAAU+a,EAAKja,OAAS2kB,EAAMO,KAAKjL,EAAKja,UACxK4W,KAAI,SAAU+C,EAAOvG,GACtB,IAAIlU,EAAQya,EAAMza,MACdgjB,EAAYvI,EAAMuI,UAClByB,EAAWhK,EAAM1F,QACjBjU,EAAQ2Z,EAAM3Z,MACdmlB,EAAYxL,EAAMjH,MAClBpP,EAAKqW,EAAMrW,GACX2W,GAAO,OAAyBN,EAAO,CAAC,QAAS,YAAa,UAAW,QAAS,QAAS,OAE/F,OAAoB,kBAAoBiK,GAAA,GAAc,OAAS,GAAI3J,EAAM,CACvEja,MAAO6kB,GAAc,GACrBzR,IAAK9P,GAAM8P,EACXlU,MAAOsD,OAAOtD,GAASoE,GAAM8P,GAAO,IACpCa,QAAS,SAAiB5U,GACxB,IAAIghB,EAEqB,UAArBhhB,EAAEwY,OAAOuN,UACX/lB,EAAEgmB,iBACFhmB,EAAEimB,mBAGJ,IAeI5S,EAAQ,CAACrT,EAfM,GAAc,CAC/BH,MAAO0lB,EACP5kB,MAAO6kB,EACPvhB,GAAIwhB,EACJzL,KAAMA,EACN3D,MAAOA,GACNqP,GAEe,GAAc,CAC9B7lB,MAAOA,EACPc,MAAOA,EACPsD,GAAIA,EACJ+V,KAAMA,GACLY,GAEwC2K,GAAcF,EAAUxlB,GAASkU,IAE3EiN,EAAS9e,GAAO6d,SAAS5gB,MAAM6hB,EAAQ3N,GAExC0M,GAAYA,EAAS5gB,WAAM,EAAQkU,GACnCiR,GAAYA,EAASnlB,WAAM,EAAQkU,MAEnC2G,IAAS8K,GAAUC,SAAwB,kBAAoBhC,EAAA,GAAU,OAAS,GAAI+C,EAAW,CACnGnlB,MAAOA,EACPkiB,UAAWA,GAAa3gB,EAAM2gB,UAAU0C,GAAcF,EAAUxlB,GAASkU,EAAK9P,EAAI2W,MAAAA,OAAmC,EAASA,EAAKsL,YAAa,EAChJtD,SAAU,SAAkB/iB,EAAO+gB,GACjChG,EAAKgI,UAAYhI,EAAKgI,SAAS/iB,EAAO+gB,IAExCpY,KAAMoS,EAAKpS,MAAQ3I,GAAS,GAAG+W,OAAOyO,EAAU,KAAKzO,OAAO7C,GAC5D9P,GAAIA,GAAMpE,GAAS,GAAG+W,OAAOyO,EAAU,KAAKzO,OAAO7C,MAC/CiG,IAAS8K,GAAUE,MAAqB,kBAAoB,KAAO,CACvEnC,UAAWA,GAAa3gB,EAAM2gB,UAAU0C,GAAcF,EAAUxlB,GAASkU,EAAK9P,EAAI2W,MAAAA,OAAmC,EAASA,EAAKsL,YAAa,EAChJtD,SAAU,SAAkB/iB,EAAO+gB,GACjChG,EAAKgI,UAAYhI,EAAKgI,SAAS/iB,EAAO+gB,IAExC/gB,MAAOA,GAASkU,EAChBvL,KAAMoS,EAAKpS,MAAQ3I,GAAS,GAAG+W,OAAOyO,EAAU,KAAKzO,OAAO7C,GAC5DpT,MAAOA,EACPsD,GAAIA,GAAMpE,GAAS,GAAG+W,OAAOyO,EAAU,KAAKzO,OAAO7C,KAChDiG,IAAS8K,GAAUG,OAAsB,kBAAoBjP,EAAA,IAAQ,OAAS,GAAI8P,EAAW,CAChGtR,UAAW,8BAA8BoC,QAAQkP,MAAAA,OAA6C,EAASA,EAAUtR,YAAc,IAC/HG,QAASA,EACTC,QAASgG,EAAKhG,UACZjU,GAAS,CACbqZ,IAAS8K,GAAUC,UAAY/K,IAAS8K,GAAUE,MAAQrkB,EAAQ,YAItE,QAAgB,OAAuBuB,GAAQ,qBAAqB,SAAUwZ,EAAO2J,EAAUc,GAC7F,IAAInM,EAAO0B,EAAM1B,KACb4J,EAAW1hB,EAAM6U,MAAM6M,SACvBwC,EAAelkB,EAAMmR,MAAMuQ,SAC3ByC,EAAczC,EAASyB,IAAae,EAAaf,GAErD,OAAIgB,EACErM,IAAS8K,GAAUE,QAAUqB,EAAYF,aAAoBnoB,OAASqoB,EAAYF,GAASG,WAAatT,QAAQqT,EAAYF,KACvH,GAAc,GAAc,GAAc,GAAIC,GAAexC,GAAW,IAAI,OAAgB,GAAIyB,EAAU,GAAc,GAAc,GAAIgB,GAAe,IAAK,IAAI,OAAgB,GAAIF,GAAS,MAGjM,GAAc,GAAc,GAAc,GAAIC,GAAexC,GAAW,IAAI,OAAgB,GAAIyB,EAAU,GAAc,GAAc,GAAIrL,IAAS8K,GAAUE,OAAQqB,GAAoB,IAAK,IAAI,OAAgB,GAAIF,GAAS,MAGjO,GAAc,GAAc,GAAc,GAAIC,GAAexC,GAAW,IAAI,OAAgB,GAAIyB,GAAU,OAAgB,GAAIc,GAAS,SAGhJ,QAAgB,OAAuBjkB,GAAQ,mBAAmB,SAAU0gB,EAAUhC,EAAOoD,EAAc0B,EAAO9K,EAAMyK,EAAUc,GAC5HvD,IACE8C,EACF9C,EAAShC,EAAOoD,EAAc0B,EAAO9K,EAAMyK,EAAUc,GAErDvD,EAAShC,EAAOoD,GAGlB9hB,EAAM4U,SAAS,CACb8M,SAAU,MAId1hB,EAAM4U,SAAS,CACb8M,SAAUI,QAId,QAAgB,OAAuB9hB,GAAQ,YAAY,SAAU0e,EAAO8E,EAAO9K,EAAMyK,EAAUc,GACjG,IAAInC,EAAe9hB,EAAM+hB,kBAAkByB,EAAOL,EAAUc,GAExDvD,EAAW1gB,EAAMmR,MAAMuP,SAE3B1gB,EAAMqkB,gBAAgB3D,EAAUhC,EAAOoD,EAAc0B,EAAO9K,EAAMyK,EAAUc,OAG9E,QAAgB,OAAuBjkB,GAAQ,iBAAiB,SAAU0e,EAAO2E,EAAYlP,GAC3F,IAAIuM,EAAW1gB,EAAMmR,MAAMuP,SACvB4D,EAAmBtkB,EAAM6U,MAAM6M,SAI/BI,EAHchmB,OAAOyoB,OAAOD,EAAiBjB,IAAe,IAAIvf,QAAO,SAAUnG,GACnF,OAAiB,IAAVA,KACNZ,SAAWoX,EAAMpX,OACa,GAAK,GAAc,GAAc,GAAIunB,GAAmB,IAAI,OAAgB,GAAIjB,EAAYlP,EAAM4G,QAAO,SAAU8G,EAAW2C,GAC7J,OAAO,GAAc,GAAc,GAAI3C,GAAY,IAAI,OAAgB,GAAI2C,EAAY7mB,OAAO,MAC7F,MAEHqC,EAAMqkB,gBAAgB3D,EAAUhC,EAAOoD,OAGzC,QAAgB,OAAuB9hB,GAAQ,kBAAkB,SAAUqjB,EAAYlP,GACrF,IAAIsQ,EAAgBzkB,EAAM6U,MAAM6M,SAG5BA,EAAW,GAAc,GAAc,GAFxB1hB,EAAMmR,MAAMuQ,UAE+B+C,GAE1DC,EAAsB5oB,OAAOyoB,OAAO7C,EAAS2B,IAAe,IAAIvf,QAAO,SAAUnG,GACnF,OAAiB,IAAVA,KAGT,OADoB+mB,EAAoB3nB,OAAS,IAAI2nB,EAAoB3nB,SAAWoX,EAAMpX,QAAgB,UAI5G,QAAgB,OAAuBiD,GAAQ,aAAa,SAAUqjB,EAAYsB,EAAW5iB,EAAIiiB,GAC/F,IAAIS,EAAgBzkB,EAAM6U,MAAM6M,SAG5BA,EAAW,GAAc,GAAc,GAFxB1hB,EAAMmR,MAAMuQ,UAE+B+C,GAE9D,QAAoC,IAAzB/C,EAAS2B,GAClB,OAAO,EAGT,GAAI3B,EAAS2B,GAAYsB,aAAsB7oB,OAAQ,CACrD,GAAI4lB,EAAS2B,GAAYsB,GAAWP,WAAY,CAC9C,IAAIQ,EAAuBC,EAAwBC,EAAwBC,EAGrEC,EAAwBC,EAIxBC,EAAwBC,EAL9B,GAAkE,QAA7DP,EAAwBlD,EAAS2B,GAAYsB,UAAkD,IAA1BC,GAA8F,QAAzDC,EAAyBD,EAAsBlM,YAA6C,IAA3BmM,GAAqCA,EAAuB9iB,GAG1O,OAAOA,KAAuE,QAA9DijB,EAAyBtD,EAAS2B,GAAYsB,UAAmD,IAA3BK,GAAwG,QAA1DC,EAAyBD,EAAuBtM,YAA6C,IAA3BuM,OAA5E,EAAyHA,EAAuBljB,IACrQ,GAAmE,QAA9D+iB,EAAyBpD,EAAS2B,GAAYsB,UAAmD,IAA3BG,GAAgG,QAA1DC,EAAyBD,EAAuBpM,YAA6C,IAA3BqM,GAAqCA,EAAuBf,SAGpP,OAAOA,KAA6E,QAA9DkB,EAAyBxD,EAAS2B,GAAYsB,UAAmD,IAA3BO,GAAwG,QAA1DC,EAAyBD,EAAuBxM,YAA6C,IAA3ByM,OAA5E,EAAyHA,EAAuBnB,UAIpR,OAAOtC,EAAS2B,GAAYsB,GAAWP,WAGzC,OAAOtT,QAAQ4Q,EAAS2B,GAAYsB,QAGtC,QAAgB,OAAuB3kB,GAAQ,gBAAgB,SAAUlC,GACvE,IAAI2lB,EAAWzjB,EAAMmR,MAAMsS,SACvB9lB,EAAQG,EAAEwY,OAAO3Y,MAErBqC,EAAM4U,SAAS,CACbsO,SAAUvlB,IACT,WACD8lB,GAAYA,EAAS9lB,UAIzB,QAAgB,OAAuBqC,GAAQ,kBAAkB,WAC/D,IAAIyjB,EAAWzjB,EAAMmR,MAAMsS,SAC3BA,GAAYA,EAAS,IAErBzjB,EAAM4U,SAAS,CACbsO,SAAU,GACVzB,YAAY,OAITzhB,EAkJT,OA/IA,OAAaijB,EAAO,CAAC,CACnBpR,IAAK,qBACLlU,MAAO,SAA4BynB,GACjC,IAAIpD,EAAeoD,EAAM1D,SACrB2D,EAAeD,EAAMlC,SACrBnR,EAAcpW,KAAKwV,MACnBuQ,EAAW3P,EAAY2P,SACvBwB,EAAWnR,EAAYmR,SAEtB,KAAQlB,EAAcN,IACzB/lB,KAAKiZ,SAAS,CACZ8M,SAAUA,SAIGhgB,IAAbwhB,GAA0BmC,IAAiBnC,GAC7CvnB,KAAKiZ,SAAS,CACZsO,SAAUA,MAIf,CACDrR,IAAK,SACLlU,MAAO,WACL,IAAI2nB,EAAS3pB,KAETwkB,EAAcxkB,KAAKkZ,MACnB4M,EAAatB,EAAYsB,WACzByB,EAAW/C,EAAY+C,SACvBqC,EAAe5pB,KAAKwV,MACpBqU,EAASD,EAAaC,OACtBrR,EAAQoR,EAAapR,MACrBoN,EAAcgE,EAAahE,YAC3BjP,EAAYiT,EAAajT,UACzBoP,EAAW6D,EAAa7D,SACxB+D,EAAeF,EAAaE,aAC5B3H,EAAayH,EAAazH,WAC1B2F,EAAW8B,EAAa9B,SACxBiC,EAAaH,EAAaG,WAC1BC,EAAgBJ,EAAaI,cAC7BC,EAAkBL,EAAaK,gBAC/BC,EAAc1R,GAASqR,EACvBM,EAAW,CACbhO,KAAM8K,GAAUG,OAChBtQ,SAAUmT,MAAAA,OAAyD,EAASA,EAAgBnT,UAAY,OACxG0B,MAAO,CAAC,GAAc,GAAc,GAAIyR,GAAkB,GAAI,CAC5DnnB,MAAOknB,EACP7N,KAAM8K,GAAUG,OAChBrQ,QAAS,SAAiB5U,GACxB,OAAO4nB,EAAW5nB,GAAG,WACnB,OAAOwnB,EAAO1Q,SAAS,CACrB6M,YAAY,YAMtB,OAAoB,kBAAoB,EAAAjC,SAAU,MAAOqG,GAAeA,GAAeA,EAAY9oB,QAAU,EAAiB,kBAAoB,IAAM,OAAS,GAAIpB,KAAKwV,MAAO,CAC/KxT,MAAO,GAAG+W,OAAOgN,MACA,kBAAoBO,GAAA,GAAQ,OAAS,CACtD3P,UAAWA,EACXG,QAASgT,GAAgBhC,EAAW,gBAA0B,aAC9D,aAAc,eACdpF,SAAU1iB,KAAK0iB,SACfX,OAAQ+D,EACR3D,WAAYA,EACZD,SAAU,aAGVsE,gBAAiBZ,EACjBwE,QAASpqB,KAAKqqB,eACd9D,WAAyB,KAAbgB,EAAkB,KAAOA,IACnCuC,GAAgBhC,IAAa,CAC/BA,SAAU,SAAkB3lB,GAC1B,OAAOA,GAAKwnB,EAAOW,aAAanoB,KAEjC0nB,GAAUA,EAAOzoB,OAAS,GAAK,CAChCmpB,WAAW,IACI,kBAAoB,MAAO,CAC1C5T,UAAW,mCACX3U,MAAO,IACN6nB,GAAUA,EAAOzoB,OAAS,EAAIyoB,EAAOnQ,KAAI,SAAU8Q,EAAOhD,GAC3D,IAAIE,EAAa8C,EAAMxoB,MACnBkgB,EAAWsI,EAAMtI,SACjBuI,EAAkBD,EAAMC,gBACxB9C,EAAa6C,EAAM1nB,MACnB8kB,EAAU4C,EAAMpkB,GAChB+V,EAAOqO,EAAMrO,KACb3D,EAAQgS,EAAMhS,MACdqP,GAAQ,OAAyB2C,EAAO,CAAC,QAAS,WAAY,kBAAmB,QAAS,KAAM,OAAQ,UAExGE,EAAgBf,EAAOgB,SAAS,GAAc,CAChDjD,WAAYA,EACZxF,SAAUA,EACVyF,WAAYA,EACZC,QAASA,EACT6C,gBAAiBA,EACjBtO,KAAMA,EACN3D,MAAOA,GACNqP,GAAQL,GAAUrf,OAAOgN,SAE5B,OASE,kBAAoB,MAAO,CACzBe,IAAK0R,GAAWF,GAAcF,EAC9BxlB,MAAO,IACNyoB,GAAgC,kBAAoB/D,GAAA,EAAc,CACnE3P,QAAS,SAAiBgM,GACxB4G,EAAOiB,cAAc7H,EAAO2E,GAAcF,EAAUhP,KAExC,kBAAoB0M,EAAA,EAAU,CAC5CF,UAAW2E,EAAOkB,eAAenD,GAAcF,EAAUhP,GACzD1V,MAAO6kB,KACS,kBAAoBmD,GAAA,GAAa,OAAS,GAAIjD,EAAO,CACrElR,UAAW,aACX7T,OAAQ2nB,GAAmB9C,EAC3B3lB,MAAO4lB,GAAWF,GAAcF,EAChCphB,GAAIwhB,GAAW,SAAS7O,OAAO2O,GAAcF,KAC3CkD,OAEH1qB,KAAK2qB,SAAS,CACjBnS,MAAOA,KACJuR,EAA0B,kBAAoBe,GAAA,EAAa,CAC9D9oB,MAAO,IACO,kBAAoBmW,EAAA,IAAQ,OAAS,GAAIgS,EAAS3R,MAAM,GAAI,CAC1E7B,UAAW,yBACXG,QAASqT,EAASrT,QAClBC,QAASoT,EAAS3R,MAAM,GAAGzB,QAC3B/U,MAAO,cACLmoB,EAAS3R,MAAM,GAAG1V,QAAuB,kBAAoB,OAAQ,CACvEioB,QAAQ,EACR/oB,MAAO,WAKNslB,EAlYgB,CAmYvB,EAAAjQ,WAEE2T,GAAa,YAAkB,UAAgB,CACjDhpB,MAAO,WACPc,MAAO,SACPsD,GAAI,WACJ4e,UAAW,SACXjO,QAAS,SACTvB,MAAO,WAAgB,OAAgB,GAAI,WAAkB,aAE/D8R,GAAMhQ,UAAY,CAChByO,SAAU,WAAgB,OAAgB,GAAI,WAAkB,WAAgB,OAAgB,GAAI,WAAkB,cAAoB,CAAC,SAAgB,UAAgB,CACzK0C,WAAY,iBAEd1D,SAAU,SACV8E,OAAQ,YAAkB,UAAgB,CACxC/mB,MAAO,SACPd,MAAO,WACPkgB,SAAU,SACV/F,KAAM,UAAgBhc,OAAOyoB,OAAO3B,KACpCzO,MAAOwS,MAETzD,SAAU,WACV/O,MAAOwS,GACPlB,aAAc,SACdhC,SAAU,SACViC,WAAY,SACZC,cAAe,WACf7H,WAAY,SACZ8H,gBAAiB,WAAiBjD,GAAoB,CACpDlQ,QAAS,aACR,OAAgBkQ,GAAmB,WAAkB,cAAoB,CAAC,WAAkB,eAAqB,OAAgBA,GAAmB,SAAS,OAAgB,GAAI,WAAkB,cAAoB,CAAC,WAAkB,eAAsBA,KACnQpB,YAAa,SACbjP,UAAW,YAEb2Q,GAAM9P,aAAe,CACnBuO,SAAU,GACVwB,SAAU,GACVxC,SAAU,aAGViF,cAAe,YACfH,OAAQ,GACRC,cAAc,EACd3H,YAAY,GAEd,YCldO,IAAI8I,GAID,SAGCC,GAAa,CACtBC,KAAM,GACNjE,SAAU,GACVC,MAAO,GACPiE,OAAQ,EAAAvH,SACRgE,MAAO,ICPT,SAAS,GAAQ3N,EAAQC,GAAkB,IAAIC,EAAOja,OAAOia,KAAKF,GAAS,GAAI/Z,OAAOka,sBAAuB,CAAE,IAAIC,EAAUna,OAAOka,sBAAsBH,GAAaC,IAAkBG,EAAUA,EAAQnS,QAAO,SAAUoS,GAAO,OAAOpa,OAAOqa,yBAAyBN,EAAQK,GAAKE,eAAkBL,EAAK3W,KAAKnC,MAAM8Y,EAAME,GAAY,OAAOF,EAElV,SAAS,GAAcO,GAAU,IAAK,IAAI1Z,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAAK,CAAE,IAAI2Z,EAAyB,MAAhBzZ,UAAUF,GAAaE,UAAUF,GAAK,GAAQA,EAAI,EAAK,GAAQd,OAAOya,IAAS,GAAMC,SAAQ,SAAU3E,IAAO,OAAgByE,EAAQzE,EAAK0E,EAAO1E,OAAsB/V,OAAO2a,0BAA6B3a,OAAO4a,iBAAiBJ,EAAQxa,OAAO2a,0BAA0BF,IAAmB,GAAQza,OAAOya,IAASC,SAAQ,SAAU3E,GAAO/V,OAAOuD,eAAeiX,EAAQzE,EAAK/V,OAAOqa,yBAAyBI,EAAQ1E,OAAe,OAAOyE,EAuB7gB,IAAI0Q,GAAiC,SAAUzW,IAC7C,OAAUyW,EAAmBzW,GAE7B,IAxBoBC,EAAeC,EAwB/B/N,GAxBgB8N,EAwBMwW,EAxBSvW,EAErC,WAAuC,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQxU,UAAUyU,QAAQ/T,KAAK0T,QAAQC,UAAUG,QAAS,IAAI,iBAAyB,EAAQ,MAAOhT,GAAK,OAAO,GAF9P,GAAoC,WAAkC,IAAsCE,EAAlCiT,GAAQ,OAAgBT,GAAkB,GAAIC,EAA2B,CAAE,IAAIS,GAAY,OAAgBvV,MAAMU,YAAa2B,EAAS0S,QAAQC,UAAUM,EAAOnU,UAAWoU,QAAqBlT,EAASiT,EAAMhU,MAAMtB,KAAMmB,WAAc,OAAO,OAA2BnB,KAAMqC,KA0B1Z,SAASgpB,EAAkBC,GACzB,IAAIjnB,EAgCJ,OA9BA,OAAgBrE,KAAMqrB,GAEtBhnB,EAAQ0C,EAAO1F,KAAKrB,KAAMsrB,IAE1B,QAAgB,OAAuBjnB,GAAQ,kBAAkB,SAAU0d,GACzE1d,EAAM4U,SAAS,CACb8I,OAAQA,QAIZ,QAAgB,OAAuB1d,GAAQ,YAAY,SAAUknB,EAAIvpB,GACvEqC,EAAM4U,SAAS,CACbkM,WAAYnjB,QAIhB,QAAgB,OAAuBqC,GAAQ,cAAc,WAC3D,OAAOA,EAAMmR,MAAMgW,gBAAkB,SAAUhW,GAC7C,OAAoB,kBAAoBiW,EAAA,GAAoB,OAAS,GAAIjW,EAAO,CAC9EkW,WAAY,KACZC,WAAyB,kBAAoB,KAAY,UAEzD,EAAA9H,YAGNxf,EAAM6U,MAAQ,CACZ6I,QAAQ,EACRoD,gBAAYpf,EACZ6lB,QAASvnB,EAAMwnB,cAEVxnB,EAoGT,OAjGA,OAAagnB,EAAmB,CAAC,CAC/BnV,IAAK,qBACLlU,MAAO,SAA4B8pB,GAC7B9rB,KAAKwV,MAAMgW,kBAAoBM,EAAUN,iBAC3CxrB,KAAKiZ,SAAS,CACZ2S,QAAS5rB,KAAK6rB,iBAInB,CACD3V,IAAK,SACLlU,MAAO,WACL,IAAImhB,EAASnjB,KAEToW,EAAcpW,KAAKwV,MACnBgD,EAAQpC,EAAYoC,MACpBxW,EAAQoU,EAAYpU,MACpB+iB,EAAW3O,EAAY2O,SACvBa,EAAcxP,EAAYwP,YAC1BmG,EAAY3V,EAAY2V,UACxB5J,EAAa/L,EAAY+L,WACzB3M,GAAQ,OAAyBY,EAAa,CAAC,QAAS,QAAS,WAAY,cAAe,YAAa,eAEzGoO,EAAcxkB,KAAKkZ,MACnB6I,EAASyC,EAAYzC,OACrBoD,EAAaX,EAAYW,WACzByG,EAAUpH,EAAYoH,QACtBI,EAAejH,EAAW/iB,EAAQmjB,EAClC8G,EAAazT,GAASA,EAAMpX,SAAWoX,EAAM6C,MAAK,SAAU0B,EAAM7G,GACpE,OAAO6G,EAAK/a,QAAUgqB,GAAgB9V,IAAQ8V,MAC1CxT,EAAM,IACR0T,EAAmBnH,GAAY/kB,KAAK+kB,SACpCoH,EAAkBF,IAAef,GAAWe,EAAW9P,OAAS+O,GAAWC,MAE3EiB,EAAa,SAAoBC,GACnC,OAAOA,EAAO,GAAGC,cAAgBD,EAAOE,UAAU,IAGpD,OAAoB,kBAAoBX,EAAS,KAAM5rB,KAAKwV,MAAMgW,iBAAgC,kBAAoBgB,EAAA,EAAc,CAClI7V,UAAW,mCACV6B,EAAMkB,KAAI,SAAUuS,EAAY/V,GACjC,IAAIiW,EAAkBF,IAAef,GAAWe,EAAW9P,OAAS+O,GAAWC,MAC/E,OAAoB,kBAAoBrH,EAAA,EAAa,CACnD5N,IAAKA,GACS,kBAAoBiW,GAAiB,OAAS,GAAIF,EAAW9P,OAAS8O,IAAgC,CACpHrF,YAAaA,GAAeqG,EAAWrG,aAAe,aAAa7M,OAAOkT,EAAWnpB,OACrFsD,GAAI6lB,EAAWQ,cAAgBR,EAAWQ,aAAarmB,IAAM4lB,GAC5DC,EAAWQ,qBACVjU,GAASA,GAASA,EAAMpX,QAAU,EAAiB,kBAAoB,MAAO,CAClFuV,UAAW,IAAW,2BAA4B,CAChD+V,QAAS1sB,KAAKwV,MAAMgW,mBAER,kBAAoB,IAAM,OAAS,GAAIhW,EAAO,CAC5DxT,MAAOgqB,EACPjH,SAAU,SAAkB5iB,GAC1B,OAAO+pB,EAAiB/pB,EAAGA,EAAEwY,OAAO3Y,QAEtC4jB,YAAaA,EACb,cAAe,oBACG,kBAAoB+G,EAAA,EAAO,CAC7ChW,UAAW,IAAW,2BAA4B,CAChD+V,QAAS1sB,KAAKwV,MAAMgW,mBAErBhT,EAAMpX,OAAS,GAAkB,kBAAoBwrB,EAAA,EAAW,KAAmB,kBAAoBvK,EAAA,EAAU,CAClH1L,UAAW,kCACXuL,SAAU,WACR,OAAOiB,EAAO0J,gBAAe,IAE/B9K,OAAQA,EACRQ,OAAqB,kBAAoBC,EAAA,EAAgB,CACvDE,SAAU1iB,KAAK6sB,eACf1K,WAAYA,EACZxL,UAAWoV,EAAY,qCAAuC,IAChD,kBAAoB,KAAY,CAC9CnJ,KAAM,QACHmJ,GAA0B,kBAAoB,OAAQ,CACzDpV,UAAW,4CACVsV,GAAcG,EAAWH,EAAWnpB,SACvC+f,cAAerK,EAAMkB,KAAI,SAAUqD,EAAM7G,GACvC,OAAoB,kBAAoB4M,EAAA,EAAc,CACpD5M,IAAK6G,EAAK3W,GAAK,GAAG2S,OAAOgE,EAAK3W,GAAI,aAAe8P,EACjDkB,UAAW,SACXL,QAAS,SAAiB5U,GACxB,OAAO+pB,EAAiB/pB,EAAG4a,EAAK/a,OAASkU,EAAK6G,IAEhD+P,UAAWb,EAAWnpB,QAAUia,EAAKja,OACpCspB,EAAWrP,EAAKja,cAElBqpB,GAAgC,kBAAoBS,EAAA,EAAW,CAClEG,UAAU,GACI,kBAAoBZ,GAAiB,OAAS,GAAIF,EAAW9P,OAAS8O,IAAgC,CACpHrF,YAAaA,GAAeqG,EAAWrG,aAAe,aAAa7M,OAAOkT,EAAWnpB,OACrFsD,GAAI6lB,EAAWQ,cAAgBR,EAAWQ,aAAarmB,IAAM4lB,GAC5DC,EAAWQ,sBAIXpB,EA1I4B,CA2InC,EAAAhU,WAEE2V,GAAiB,CACnBhrB,MAAO,WACP4jB,YAAa,WACbb,SAAU,UAEZsG,GAAkB/T,UAAY,GAAc,GAAc,CACxDyU,UAAW,SACXvT,MAAO,YAAkB,UAAgB,CACvCpS,GAAI,WACJtD,MAAO,SACPd,MAAO,WACPma,KAAM,UAAgB,CAAC,OAAQ,WAAY,QAAS,SAAU,UAC9DsQ,aAAc,cAAoB,CAAC,UAAgBO,IAAiB,UAAgB,GAAc,GAAc,GAAIA,IAAiB,GAAI,CACvIhrB,MAAO,cAAoB,CAAC,WAAkB,YAAkB,cAAoB,CAAC,WAAkB,UAAgB,CACrHc,MAAO,SACPd,MAAO,gBACF,WAAgB,OAAgB,GAAI,WAAkB,YAC7DwW,MAAO,YAAkB,UAAgB,CACvC1V,MAAO,SACPd,MAAO,uBAIZgrB,IAAiB,GAAI,CACtB5mB,GAAI,WACJ+b,WAAY,SACZqJ,gBAAiB,WAEnBH,GAAkB7T,aAAe,CAC/BxV,MAAO,GACPwW,MAAO,GACPuT,WAAW,EACX5J,YAAY,EACZ/b,GAAI,gBACJolB,iBAAiB,GAEnB,Y,wCCjNA,SAAS,GAAQtR,EAAQC,GAAkB,IAAIC,EAAOja,OAAOia,KAAKF,GAAS,GAAI/Z,OAAOka,sBAAuB,CAAE,IAAIC,EAAUna,OAAOka,sBAAsBH,GAAaC,IAAkBG,EAAUA,EAAQnS,QAAO,SAAUoS,GAAO,OAAOpa,OAAOqa,yBAAyBN,EAAQK,GAAKE,eAAkBL,EAAK3W,KAAKnC,MAAM8Y,EAAME,GAAY,OAAOF,EAElV,SAAS,GAAcO,GAAU,IAAK,IAAI1Z,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAAK,CAAE,IAAI2Z,EAAyB,MAAhBzZ,UAAUF,GAAaE,UAAUF,GAAK,GAAQA,EAAI,EAAK,GAAQd,OAAOya,IAAS,GAAMC,SAAQ,SAAU3E,IAAO,OAAgByE,EAAQzE,EAAK0E,EAAO1E,OAAsB/V,OAAO2a,0BAA6B3a,OAAO4a,iBAAiBJ,EAAQxa,OAAO2a,0BAA0BF,IAAmB,GAAQza,OAAOya,IAASC,SAAQ,SAAU3E,GAAO/V,OAAOuD,eAAeiX,EAAQzE,EAAK/V,OAAOqa,yBAAyBI,EAAQ1E,OAAe,OAAOyE,EAW7gB,IAAIsS,GAAc,SAAqBvV,GACrC,IAAIf,EAAYe,EAAKf,UACjBuW,EAAUxV,EAAKwV,QACfC,EAAWzV,EAAKyV,SAChBC,EAAc1V,EAAK0V,YACnBC,EAAmB3V,EAAK2V,iBACxBC,EAAgB5V,EAAK4V,cACrBzD,EAASqD,EAAQ/kB,QAAO,SAAU0f,GACpC,OAAOA,EAAM0F,YAEXC,EAAiB3D,EAAOnQ,KAAI,SAAUmO,EAAOL,GAC/C,OAAoB,kBAAoBiG,GAAA,GAAW,OAAS,CAC1DvX,IAAK,SAAS6C,OAAO8O,EAAM0F,UAC3BG,aAAc7F,EAAM0F,UACnBD,GAAiB,CAClBK,YAAY,EACZ5W,QAAS,SAAiBgM,GACxBA,EAAMqF,kBACNkF,EAAcvK,EAAO,CAAC8E,GAAQgC,EAAO1hB,QAAO,SAAUylB,EAAO1X,GAC3D,OAAOA,IAAQsR,SAGjBK,EAAMgG,MAAMnU,KAAI,SAAUoU,GAC5B,OAAoB,kBAAoBC,GAAA,EAAM,CAC5C7X,IAAK4X,EAAKnjB,KACVoM,QAAS,SAAiBgM,GACxBA,EAAMqF,kBACN+E,EAASpK,EAAO,CAAC,GAAc,GAAc,GAAI8E,GAAQ,GAAI,CAC3DgG,MAAO,CAACC,SAGXA,EAAKnjB,KAAMmjB,EAAKhW,OAAsB,kBAAoBkW,GAAA,EAAO,CAClE9X,IAAK,cAAc6C,OAAO+U,EAAK1nB,IAC/B6nB,OAAQH,EAAKG,QACZH,EAAKhW,eAGRoW,EAAehB,EAAQ/kB,QAAO,SAAU0f,GAC1C,OAAQA,EAAM0F,YAEhB,OAAoB,kBAAoB,OAAQ,CAC9C5W,UAAW,IAAWA,EAAW,uBAChC6W,EAAgBU,GAAgBA,EAAaxU,KAAI,SAAUoU,GAC5D,OAAoB,kBAAoBL,GAAA,EAAW,CACjDvX,IAAK,oBAAoB6C,OAAO+U,EAAKnjB,OACvB,kBAAoBojB,GAAA,EAAM,CACxChX,QAAS,SAAiBgM,GACxBA,EAAMqF,kBACN+E,EAASpK,EAAO,CAAC+K,MAElBA,EAAKnjB,KAAMmjB,EAAKhW,OAAsB,kBAAoBkW,GAAA,EAAO,CAClE9X,IAAK,cAAc6C,OAAO+U,EAAK1nB,IAC/B6nB,OAAQH,EAAKG,QACZH,EAAKhW,cACgB,IAArBuV,QAAkDtnB,IAArBsnB,GAAkCH,EAAQ9rB,OAAS,IAAmB,kBAAoB+W,EAAA,GAAQ,CAClIrB,QAAS,OACTC,QAAS,SAAiBgM,GACxB,OAAOoK,EAASpK,EAAOmK,GAAS,KAEjCE,KAGLH,GAAY3V,UAAY,CACtBX,UAAW,WACXuW,QAAS,YAAkB,cAAoB,CAAC,UAAgB,CAC9DK,SAAU,sBACVM,MAAO,YAAkB,UAAgB,CACvCljB,KAAM,sBACNsjB,OAAQ,SACRnW,MAAO,cACLP,aACF,UAAgB,CAClB5M,KAAM,sBACNsjB,OAAQ,SACRnW,MAAO,gBAETqV,SAAU,SACVG,cAAe,SACfF,YAAa,SACbC,iBAAkB,UAEpBJ,GAAYzV,aAAe,CACzB0V,QAAS,GACTC,SAAU,aAGVC,YAAa,iBAEf,Y,wCC9FIe,GAAS,SAAgBzW,GAC3B,IAAI0W,EAAY1W,EAAK0W,UACjBC,EAAe3W,EAAK2W,aACxB,OAAoB,kBAAoBlW,EAAA,GAAQ,CAC9CrB,QAAS,QACTC,QAAS,SAAiB5U,GACxB,OAAOksB,EAAalsB,EAVnB,SAAuBisB,GAC5B,OAAOA,IAAc,GAAAE,gBAAA,IAAsB,GAAAA,gBAAA,KAAuB,GAAAA,gBAAA,IASvCC,CAAcH,MAEtCA,IAAc,GAAAE,gBAAA,IAAmC,kBAAoB,MAAkB,CACxF1L,KAAM,OACU,kBAAoB,MAAoB,CACxDA,KAAM,SAIVuL,GAAO7W,UAAY,CACjB8W,UAAW,UAAgBjuB,OAAOyoB,OAAO,GAAA0F,kBACzCD,aAAc,UAEhBF,GAAO3W,aAAe,CACpB4W,UAAW,GAAAE,gBAAA,IACXD,aAAc,cAIhB,YCFA,IAAIG,GAA8B,SAAU5Z,IAC1C,OAAU4Z,EAAgB5Z,GAE1B,IA3BoBC,EAAeC,EA2B/B/N,GA3BgB8N,EA2BM2Z,EA3BS1Z,EAErC,WAAuC,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQxU,UAAUyU,QAAQ/T,KAAK0T,QAAQC,UAAUG,QAAS,IAAI,iBAAyB,EAAQ,MAAOhT,GAAK,OAAO,GAF9P,GAAoC,WAAkC,IAAsCE,EAAlCiT,GAAQ,OAAgBT,GAAkB,GAAIC,EAA2B,CAAE,IAAIS,GAAY,OAAgBvV,MAAMU,YAAa2B,EAAS0S,QAAQC,UAAUM,EAAOnU,UAAWoU,QAAqBlT,EAASiT,EAAMhU,MAAMtB,KAAMmB,WAAc,OAAO,OAA2BnB,KAAMqC,KA6B1Z,SAASmsB,IAGP,OAFA,OAAgBxuB,KAAMwuB,GAEfznB,EAAOzF,MAAMtB,KAAMmB,WAuE5B,OApEA,OAAaqtB,EAAgB,CAAC,CAC5BtY,IAAK,SACLlU,MAAO,WACL,IAAIoU,EAAcpW,KAAKwV,MACnBpP,EAAKgQ,EAAYhQ,GACjBuQ,EAAYP,EAAYO,UACxB8X,EAAmBrY,EAAYqY,iBAC/BC,EAAatY,EAAYsY,WACzBC,EAAevY,EAAYuY,aAC3BC,EAAkBxY,EAAYwY,gBAC9BC,EAAgBzY,EAAYyY,cAC5BC,EAAe1Y,EAAY0Y,aAC3BC,EAAa3Y,EAAY2Y,WACzBC,EAAsB5Y,EAAY4Y,oBAClCpN,EAAWxL,EAAYwL,SACvB6B,EAAerN,EAAYqN,aAC3BwL,EAAY7Y,EAAY6Y,UACxBzD,EAAkBpV,EAAYoV,gBAC9BhW,GAAQ,OAAyBY,EAAa,CAAC,KAAM,YAAa,mBAAoB,aAAc,eAAgB,kBAAmB,gBAAiB,eAAgB,aAAc,sBAAuB,WAAY,eAAgB,YAAa,oBAEtPiN,GAAkB,OAAmByL,EAAe,CAAC,CACvDhsB,MAAO,iBACP0S,MAAO,CACL2M,WAAY2M,EAAaV,YAAc,GAAAE,gBAAA,KAEzCvX,QAAS,SAAiB5U,GACxB,OAAO2sB,EAAaT,cAAgBS,EAAaT,aAAalsB,EAAG,GAAAmsB,gBAAA,OAElE,CACDxrB,MAAO,kBACP0S,MAAO,CACL2M,WAAY2M,EAAaV,YAAc,GAAAE,gBAAA,MAEzCvX,QAAS,SAAiB5U,GACxB,OAAO2sB,EAAaT,cAAgBS,EAAaT,aAAalsB,EAAG,GAAAmsB,gBAAA,SAEhE,IAEL,OAAoB,kBAAoBY,EAAA,GAAS,OAAS,GAAI1Z,EAAO,CACnEmB,UAAW,GAAGoC,OAAOpC,GAAa,GAAI,0BACtC8X,iBAAkBA,EAClBroB,GAAIA,GAAM,6BACK,kBAAoB+oB,EAAA,EAAgB,MAAOF,GAAaP,GAAcC,GAAgBC,IAAiC,kBAAoBpC,EAAA,EAAc,CACxK7V,UAAW,yEACXG,QAAS,gBACRmY,GAA0B,kBAAoBnL,EAAA,EAAa,KAAmB,mBAAqBmL,GAAaA,EAAyB,kBAAoB9W,EAAA,GAAQ,CACtKrB,QAAS,QACT,aAAc,GAAGiC,OAAOkW,EAAUG,cAAgB,WAAa,SAAU,QACzErY,QAAS,SAAiB5U,GACxB,OAAO8sB,EAAUlY,QAAQ5U,GAAI8sB,EAAUG,iBAE3B,kBAAoBC,EAAA,EAA0B,KAAMJ,EAAUG,cAA6B,kBAAoB,KAAe,MAAqB,kBAAoB,KAAgB,SAAUV,GAA2B,kBAAoB5K,EAAA,EAAa,KAAmB,mBAAqB4K,GAAcA,EAA0B,kBAAoB,EAAYA,IAAcC,GAA6B,kBAAoB7K,EAAA,EAAa,CACvcnN,UAAW,iCACG,mBAAqBgY,GAAgBA,EAA4B,kBAAoB,IAAmB,OAAS,CAC/HnD,gBAAiBA,GAChBmD,KAAiBC,GAAgC,kBAAoB9K,EAAA,EAAa,KAAM8K,IAAgC,mBAAqBC,GAAiBA,GAAiBA,GAAiBA,EAAczL,SAAWyL,EAAczL,QAAQhiB,OAAS,GAAK0tB,GAAgBrL,IAA8B,kBAAoB,GAAS,OAAS,GAAIoL,GAAiB,GAAI,CAC3WpL,aAAcA,EACdJ,gBAAiBA,KACdyL,GAA6B,kBAAoBhL,EAAA,EAAa,CACjEnN,UAAW,kCACG,mBAAqBmY,GAAgBA,EAA4B,kBAAoB,GAAQA,IAAgBlN,EAAUmN,GAA2B,kBAAoBjL,EAAA,EAAa,CACjMnN,UAAW,qCACG,mBAAqBoY,GAAcA,EAA0B,kBAAoB3W,EAAA,GAAY,OAAS,CACpHkX,WAAW,GACVP,MAAgBC,GAAoC,mBAAqBA,GAAoC,kBAAoBG,EAAA,EAAgB,KAAmB,kBAAoBrL,EAAA,EAAa,KAAMkL,SAAgDjpB,IAAxBipB,IAAsCA,EAAoB9B,QAAQ9rB,OAAS,IAA8C,IAAzC4tB,EAAoB3B,mBAA2C,kBAAoB8B,EAAA,EAAgB,KAAmB,kBAAoBrL,EAAA,EAAa,KAAmB,kBAAoB,GAAakL,UAI9fR,EA/EyB,CAgFhC,EAAAnX,WAEFmX,GAAelX,UAAY,CACzBlR,GAAI,cAAoB,CAAC,WAAkB,aAC3CuQ,UAAW,WACX8X,iBAAkB,SAGlBC,WAAY,UAAgB,aAG5BC,aAAc,UAAgB,cAC9BC,gBAAiB,SAGjBG,WAAY,UAAgB3W,EAAA,aAG5B0W,aAAc,UAAgB,cAG9BrL,aAAc,UAAgB,aAG9BuL,oBAAqB,UAAgB,cACrCpN,SAAU,SACViN,cAAe,UAAgB,CAC7BzL,QAAS,oBACTG,cAAe,0BACfrB,SAAU,uBAEZ+M,UAAW,cAAoB,CAAC,SAAgB,UAAgB,CAC9DlY,QAAS,SACTqY,cAAe,aAIjB5D,gBAAiB,UAEnB,a,kIChJI+D,EAAU,SAAiB7X,GAC7B,IAAIyE,EAAOzE,EAAKyE,KACZyF,EAAWlK,EAAKkK,SAChBjL,EAAYe,EAAKf,UACjBnB,GAAQ,OAAyBkC,EAAM,CAAC,OAAQ,WAAY,cAE5D8X,EAAiB,IAAW7Y,GAAW,OAAgB,GAAI,SAASoC,OAAOoD,QAAgBpW,IAAToW,IACtF,OAAoB,kBAAoB,WAAW,OAAS,GAAI3G,EAAO,CACrEmB,UAAW6Y,IACT,IAAK5N,EAAU,MAGrB,UACA2N,EAAQjY,UAAY,CAClB6E,KAAM,WACNxF,UAAW,WACXiL,SAAU,qB,wJCNR6N,EAAe,SAAsB/X,GACvC,IAAIgY,EAAWhY,EAAKgY,SAChBC,EAAUjY,EAAKiY,QACfhZ,EAAYe,EAAKf,UACjBoP,EAAWrO,EAAKqO,SAChBnE,EAAWlK,EAAKkK,SAChBe,EAASjL,EAAKiL,OACdiN,EAAgBlY,EAAKiN,SACrBA,OAA6B,IAAlBiL,GAAkCA,EAC7Cpa,GAAQ,OAAyBkC,EAAM,CAAC,WAAY,UAAW,YAAa,WAAY,WAAY,SAAU,aAE9GmY,EAAsB,IAAW,wBAAwB,OAAgB,GAAI,eAAgBH,GAAW/Y,GACxGmZ,EAAoB,mBACpBlL,GAAc,QAAUkL,EAAmBnN,EAAQgC,GACvD,OAAoB,kBAAoB,EAAAd,SAAU,KAAmB,kBAAoB,KAAS,OAAS,CACzGlN,UAAWkZ,EACX,2BAA4BC,EAC5B,yBAA0BlL,EAC1B,iBAAkBD,GACjBnP,GAAQoM,IAAY+N,GAAW,GAAK5J,GAAY,IAAmB,kBAAoB,MAAO,CAC/FpP,UAAW,gCACVgZ,GAAW,GAAkB,kBAAoB,OAAQ,CAC1DhZ,UAAW,sCACV,IA/BL,SAAuBgZ,GACrB,MACS,GAAG5W,OAAO4W,EADfA,EAAU,GAAKA,EAAU,EACD,WAEA,WA2BpBI,CAAcJ,GAAU,KAAM5J,GAAY,GAAkB,kBAAoB,OAAQ,CAC9FpP,UAAW,yCACV,IAAKoP,EAAU,iBAGpB,UACA0J,EAAanY,UAAY,CACvBoY,SAAU,SACVC,QAAS,WACT/N,SAAU,QACVjL,UAAW,WACXoP,SAAU,WACVpD,OAAQ,WACRgC,SAAU,UAEZ8K,EAAajY,aAAe,CAC1BkY,UAAU,I,sBC5CZ,IACQ5vB,EADJC,EAAaC,MAAQA,KAAKD,YACtBD,EAAgB,SAAUG,EAAGC,GAI7B,OAHAJ,EAAgBK,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAErB,SAAUD,EAAGC,GAEhB,SAASO,IAAOT,KAAKU,YAAcT,EADnCH,EAAcG,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,KAGnFI,EAAYb,MAAQA,KAAKa,UAAa,WAStC,OARAA,EAAWV,OAAOW,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIV,KADTS,EAAIG,UAAUF,GACOd,OAAOQ,UAAUH,eAAea,KAAKL,EAAGT,KACzDQ,EAAER,GAAKS,EAAET,IAEjB,OAAOQ,IAEKO,MAAMtB,KAAMmB,YAE5BI,EAAavB,MAAQA,KAAKuB,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUL,MAAME,EAASC,GAAc,KAAKS,YAGlEM,EAAexC,MAAQA,KAAKwC,aAAgB,SAAUhB,EAASiB,GAC/D,IAAsGC,EAAGC,EAAG5B,EAAG6B,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPhC,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOiC,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEV,KAAMgB,EAAK,GAAI,MAASA,EAAK,GAAI,OAAUA,EAAK,IAAwB,mBAAXC,SAA0BP,EAAEO,OAAOC,UAAY,WAAa,OAAOpD,OAAU4C,EACvJ,SAASM,EAAKhC,GAAK,OAAO,SAAUmC,GAAK,OACzC,SAAcC,GACV,GAAIZ,EAAG,MAAM,IAAIa,UAAU,mCAC3B,KAAOV,OACH,GAAIH,EAAI,EAAGC,IAAM5B,EAAY,EAARuC,EAAG,GAASX,EAAU,OAAIW,EAAG,GAAKX,EAAS,SAAO5B,EAAI4B,EAAU,SAAM5B,EAAEM,KAAKsB,GAAI,GAAKA,EAAET,SAAWnB,EAAIA,EAAEM,KAAKsB,EAAGW,EAAG,KAAKhB,KAAM,OAAOvB,EAE3J,OADI4B,EAAI,EAAG5B,IAAGuC,EAAK,CAAS,EAARA,EAAG,GAAQvC,EAAEiB,QACzBsB,EAAG,IACP,KAAK,EAAG,KAAK,EAAGvC,EAAIuC,EAAI,MACxB,KAAK,EAAc,OAAXT,EAAEC,QAAgB,CAAEd,MAAOsB,EAAG,GAAIhB,MAAM,GAChD,KAAK,EAAGO,EAAEC,QAASH,EAAIW,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKT,EAAEI,IAAIO,MAAOX,EAAEG,KAAKQ,MAAO,SACxC,QACI,MAAkBzC,GAAZA,EAAI8B,EAAEG,MAAY5B,OAAS,GAAKL,EAAEA,EAAEK,OAAS,KAAkB,IAAVkC,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAET,EAAI,EAAG,SACjG,GAAc,IAAVS,EAAG,MAAcvC,GAAMuC,EAAG,GAAKvC,EAAE,IAAMuC,EAAG,GAAKvC,EAAE,IAAM,CAAE8B,EAAEC,MAAQQ,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYT,EAAEC,MAAQ/B,EAAE,GAAI,CAAE8B,EAAEC,MAAQ/B,EAAE,GAAIA,EAAIuC,EAAI,MAC7D,GAAIvC,GAAK8B,EAAEC,MAAQ/B,EAAE,GAAI,CAAE8B,EAAEC,MAAQ/B,EAAE,GAAI8B,EAAEI,IAAIQ,KAAKH,GAAK,MACvDvC,EAAE,IAAI8B,EAAEI,IAAIO,MAChBX,EAAEG,KAAKQ,MAAO,SAEtBF,EAAKb,EAAKpB,KAAKG,EAASqB,GAC1B,MAAOV,GAAKmB,EAAK,CAAC,EAAGnB,GAAIQ,EAAI,EAAK,QAAUD,EAAI3B,EAAI,EACtD,GAAY,EAARuC,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAEtB,MAAOsB,EAAG,GAAKA,EAAG,QAAK,EAAQhB,MAAM,GArB9BL,CAAK,CAACf,EAAGmC,OAwB7DlD,OAAOuD,eAAeC,EAAS,aAAc,CAAE3B,OAAO,IACtD,IAUWguB,EAVPhsB,EAAkB,EAAQ,MAC1BC,EAAU,EAAQ,OAGlBC,EAAS,EAAQ,QAMV8rB,EAGgCrsB,EAAQqsB,wCAA0CrsB,EAAQqsB,sCAAwC,KAF5F,MAAI,QACjDA,EAA0C,GAAI,KAMlDrsB,EAAQssB,2BAA6B,SAAU7rB,GAC3C,IAAIC,EAAQrE,KACZ,MAAO,CAWHkwB,mBAAoB,SAAUC,EAAanlB,EAAU/C,EAAOC,EAAQzD,GAEhE,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIirB,MAAAA,EACA,MAAM,IAAIjsB,EAAOiB,cAAc,cAAe,yFAgClD,OA7BAR,EAAiBX,EAAgBuB,MADlB,YACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAE7ElF,IAAhBoqB,IACAprB,EAAoC,YAAIorB,QAE3BpqB,IAAbiF,IACAjG,EAAiC,SAAIiG,QAE3BjF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,GAEvCvD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQysB,YAAc,SAAUhsB,GAC5B,MAAO,CAWH8rB,mBAAoB,SAAUC,EAAanlB,EAAU/C,EAAOC,EAAQzD,GAChE,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQssB,2BAA2B7rB,GAAe8rB,mBAAmBC,EAAanlB,EAAU/C,EAAOC,EAAQzD,IACxI,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQ0sB,iBAAmB,SAAUjsB,EAAeoC,EAAUD,GAC1D,MAAO,CAWH2pB,mBAAoB,SAAUC,EAAanlB,EAAU/C,EAAOC,EAAQzD,GAChE,OAAOd,EAAQysB,YAAYhsB,GAAe8rB,mBAAmBC,EAAanlB,EAAU/C,EAAOC,EAAQzD,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAUxK,IAAI8pB,EAA2B,SAAUvpB,GAErC,SAASupB,IACL,OAAkB,OAAXvpB,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAiB/D,OAnBAD,EAAUuwB,EAAWvpB,GAerBupB,EAAU3vB,UAAUuvB,mBAAqB,SAAUC,EAAanlB,EAAU/C,EAAOC,EAAQzD,GACrF,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQysB,YAAYpwB,KAAKoE,eAAe8rB,mBAAmBC,EAAanlB,EAAU/C,EAAOC,EAAQzD,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAE1K8pB,EApBmB,CAqB5BpsB,EAAO8C,SACTrD,EAAQ2sB,UAAYA,EAKpB3sB,EAAQ4sB,0BAA4B,SAAUnsB,GAC1C,IAAIC,EAAQrE,KACZ,MAAO,CASHwwB,oBAAqB,SAAUC,EAAMC,EAAkBjsB,GAEnD,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIurB,MAAAA,EACA,MAAM,IAAIvsB,EAAOiB,cAAc,OAAQ,mFAG3C,GAAIurB,MAAAA,EACA,MAAM,IAAIxsB,EAAOiB,cAAc,mBAAoB,+FAwBvD,OAtBAT,EAAe,6BACVU,QAAQ,SAAoBC,mBAAmBC,OAAOmrB,KAC3D9rB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAkD,iBAArByrB,GAAqF,qBAAnD7rB,EAAuBc,QAAQ,gBAC9Fd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAA+BC,IAArB2qB,EAAiCA,EAAmB,IAAOA,GAAoB,GAC1I,CAAC,EAAc,CACd1qB,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7B8rB,eAAgB,SAAUF,EAAMG,EAAansB,GAEzC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIurB,MAAAA,EACA,MAAM,IAAIvsB,EAAOiB,cAAc,OAAQ,8EAG3C,GAAIyrB,MAAAA,EACA,MAAM,IAAI1sB,EAAOiB,cAAc,cAAe,qFAwBlD,OAtBAT,EAAe,wBACVU,QAAQ,SAAoBC,mBAAmBC,OAAOmrB,KAC3D9rB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA6C,iBAAhB2rB,GAAgF,qBAAnD/rB,EAAuBc,QAAQ,gBACzFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAA0BC,IAAhB6qB,EAA4BA,EAAc,IAAOA,GAAe,GAC3H,CAAC,EAAc,CACd5qB,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BgsB,YAAa,SAAUhJ,EAAOpjB,GAE1B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAI2iB,MAAAA,EACA,MAAM,IAAI3jB,EAAOiB,cAAc,QAAS,4EAuB5C,OApBAR,EAAiBX,EAAgBuB,MADlB,YACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAuC,iBAAV4iB,GAA0E,qBAAnDhjB,EAAuBc,QAAQ,gBACnFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAoBC,IAAV8hB,EAAsBA,EAAQ,IAAOA,GAAS,GACzG,CAAC,EAAc,CACd7hB,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BisB,YAAa,SAAUL,EAAMhsB,GAEzB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIurB,MAAAA,EACA,MAAM,IAAIvsB,EAAOiB,cAAc,OAAQ,2EAqB3C,OAnBAT,EAAe,kBACVU,QAAQ,SAAoBC,mBAAmBC,OAAOmrB,KAC3D9rB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,UAAYZ,GAAcH,GAC/EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BksB,yBAA0B,SAAUN,EAAMO,EAAWvsB,GAEjD,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIurB,MAAAA,EACA,MAAM,IAAIvsB,EAAOiB,cAAc,OAAQ,wFAG3C,GAAI6rB,MAAAA,EACA,MAAM,IAAI9sB,EAAOiB,cAAc,YAAa,6FAwBhD,OAtBAT,EAAe,6BACVU,QAAQ,SAAoBC,mBAAmBC,OAAOmrB,KAC3D9rB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,UAAYZ,GAAcH,GAC/EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAE/ElF,IAAdirB,IACAjsB,EAAkC,UAAIisB,GAE1CrsB,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BosB,oBAAqB,SAAUR,EAAMS,EAAOzsB,GAExC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIurB,MAAAA,EACA,MAAM,IAAIvsB,EAAOiB,cAAc,OAAQ,mFAG3C,GAAI+rB,MAAAA,EACA,MAAM,IAAIhtB,EAAOiB,cAAc,QAAS,oFAwB5C,OAtBAT,EAAe,wBACVU,QAAQ,SAAoBC,mBAAmBC,OAAOmrB,KAC3D9rB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,UAAYZ,GAAcH,GAC/EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVmrB,IACAnsB,EAA8B,MAAImsB,GAEtCvsB,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BssB,SAAU,SAAUV,EAAMhsB,GAEtB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIurB,MAAAA,EACA,MAAM,IAAIvsB,EAAOiB,cAAc,OAAQ,wEAqB3C,OAnBAT,EAAe,kBACVU,QAAQ,SAAoBC,mBAAmBC,OAAOmrB,KAC3D9rB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAgB7BusB,uBAAwB,SAAUX,EAAMY,EAAmBppB,EAAOC,EAAQopB,EAAS7sB,GAE/E,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIurB,MAAAA,EACA,MAAM,IAAIvsB,EAAOiB,cAAc,OAAQ,sFAiC3C,OA/BAT,EAAe,6BACVU,QAAQ,SAAoBC,mBAAmBC,OAAOmrB,KAC3D9rB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEvElF,IAAtBsrB,IACAtsB,EAA2C,mBAAIssB,QAErCtrB,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAEvBnC,IAAZurB,IACAvsB,EAAiC,SAAIusB,GAEzC3sB,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAqB7B0sB,WAAY,SAAUtpB,EAAOC,EAAQyC,EAAM6mB,EAAWC,EAAOzmB,EAAUylB,EAAMiB,EAAWC,EAAmBL,EAAS7sB,GAEhH,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAiD/B,OA/CAP,EAAiBX,EAAgBuB,MADlB,YACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAE1BnC,IAAT4E,IACA5F,EAA6B,KAAI4F,QAEnB5E,IAAdyrB,IACAzsB,EAAmC,WAAIysB,QAE7BzrB,IAAV0rB,IACA1sB,EAA8B,MAAI0sB,QAErB1rB,IAAbiF,IACAjG,EAAiC,SAAIiG,GAErCylB,IACA1rB,EAA6B,KAAI0rB,EAAKmB,KAAK1tB,EAAOkG,mBAAmBC,MAErEqnB,IACA3sB,EAAmC,WAAI2sB,EAAUE,KAAK1tB,EAAOkG,mBAAmBC,WAE1DtE,IAAtB4rB,IACA5sB,EAA2C,mBAAI4sB,QAEnC5rB,IAAZurB,IACAvsB,EAAiC,SAAIusB,GAEzC3sB,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAmB7BgtB,kBAAmB,SAAUpB,EAAMqB,EAASC,EAAUC,EAAiBC,EAAiBhqB,EAAOC,EAAQopB,EAAS7sB,GAE5G,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIurB,MAAAA,EACA,MAAM,IAAIvsB,EAAOiB,cAAc,OAAQ,iFA0C3C,OAxCAT,EAAe,wBACVU,QAAQ,SAAoBC,mBAAmBC,OAAOmrB,KAC3D9rB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEjFlF,IAAZ+rB,IACA/sB,EAAgC,QAAI+sB,QAEvB/rB,IAAbgsB,IACAhtB,EAAkC,UAAIgtB,QAElBhsB,IAApBisB,IACAjtB,EAA0C,kBAAIitB,QAE1BjsB,IAApBksB,IACAltB,EAAyC,iBAAIktB,QAEnClsB,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAEvBnC,IAAZurB,IACAvsB,EAAiC,SAAIusB,GAEzC3sB,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BqtB,YAAa,SAAUzB,EAAM5I,EAAOpjB,GAEhC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIurB,MAAAA,EACA,MAAM,IAAIvsB,EAAOiB,cAAc,OAAQ,2EAG3C,GAAI0iB,MAAAA,EACA,MAAM,IAAI3jB,EAAOiB,cAAc,QAAS,4EAwB5C,OAtBAT,EAAe,kBACVU,QAAQ,SAAoBC,mBAAmBC,OAAOmrB,KAC3D9rB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAuC,iBAAV4iB,GAA0E,qBAAnDhjB,EAAuBc,QAAQ,gBACnFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAoBC,IAAV8hB,EAAsBA,EAAQ,IAAOA,GAAS,GACzG,CAAC,EAAc,CACd7hB,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQwuB,WAAa,SAAU/tB,GAC3B,MAAO,CASHosB,oBAAqB,SAAUC,EAAMC,EAAkBjsB,GACnD,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ4sB,0BAA0BnsB,GAAeosB,oBAAoBC,EAAMC,EAAkBjsB,IAC1H,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDgqB,eAAgB,SAAUF,EAAMG,EAAansB,GACzC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ4sB,0BAA0BnsB,GAAeusB,eAAeF,EAAMG,EAAansB,IAChH,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDkqB,YAAa,SAAUhJ,EAAOpjB,GAC1B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ4sB,0BAA0BnsB,GAAeysB,YAAYhJ,EAAOpjB,IACjG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDmqB,YAAa,SAAUL,EAAMhsB,GACzB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ4sB,0BAA0BnsB,GAAe0sB,YAAYL,EAAMhsB,IAChG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDoqB,yBAA0B,SAAUN,EAAMO,EAAWvsB,GACjD,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ4sB,0BAA0BnsB,GAAe2sB,yBAAyBN,EAAMO,EAAWvsB,IACxH,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDsqB,oBAAqB,SAAUR,EAAMS,EAAOzsB,GACxC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ4sB,0BAA0BnsB,GAAe6sB,oBAAoBR,EAAMS,EAAOzsB,IAC/G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDwqB,SAAU,SAAUV,EAAMhsB,GACtB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ4sB,0BAA0BnsB,GAAe+sB,SAASV,EAAMhsB,IAC7F,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAiBjDyqB,uBAAwB,SAAUX,EAAMY,EAAmBppB,EAAOC,EAAQopB,EAAS7sB,GAC/E,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ4sB,0BAA0BnsB,GAAegtB,uBAAuBX,EAAMY,EAAmBppB,EAAOC,EAAQopB,EAAS7sB,IACtJ,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAsBjD4qB,WAAY,SAAUtpB,EAAOC,EAAQyC,EAAM6mB,EAAWC,EAAOzmB,EAAUylB,EAAMiB,EAAWC,EAAmBL,EAAS7sB,GAChH,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ4sB,0BAA0BnsB,GAAemtB,WAAWtpB,EAAOC,EAAQyC,EAAM6mB,EAAWC,EAAOzmB,EAAUylB,EAAMiB,EAAWC,EAAmBL,EAAS7sB,IACvL,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAoBjDkrB,kBAAmB,SAAUpB,EAAMqB,EAASC,EAAUC,EAAiBC,EAAiBhqB,EAAOC,EAAQopB,EAAS7sB,GAC5G,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ4sB,0BAA0BnsB,GAAeytB,kBAAkBpB,EAAMqB,EAASC,EAAUC,EAAiBC,EAAiBhqB,EAAOC,EAAQopB,EAAS7sB,IACnL,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDurB,YAAa,SAAUzB,EAAM5I,EAAOpjB,GAChC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ4sB,0BAA0BnsB,GAAe8tB,YAAYzB,EAAM5I,EAAOpjB,IACvG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQyuB,gBAAkB,SAAUhuB,EAAeoC,EAAUD,GACzD,MAAO,CASHiqB,oBAAqB,SAAUC,EAAMC,EAAkBjsB,GACnD,OAAOd,EAAQwuB,WAAW/tB,GAAeosB,oBAAoBC,EAAMC,EAAkBjsB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUlJmqB,eAAgB,SAAUF,EAAMG,EAAansB,GACzC,OAAOd,EAAQwuB,WAAW/tB,GAAeusB,eAAeF,EAAMG,EAAansB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASxIqqB,YAAa,SAAUhJ,EAAOpjB,GAC1B,OAAOd,EAAQwuB,WAAW/tB,GAAeysB,YAAYhJ,EAAOpjB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASzHsqB,YAAa,SAAUL,EAAMhsB,GACzB,OAAOd,EAAQwuB,WAAW/tB,GAAe0sB,YAAYL,EAAMhsB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUxHuqB,yBAA0B,SAAUN,EAAMO,EAAWvsB,GACjD,OAAOd,EAAQwuB,WAAW/tB,GAAe2sB,yBAAyBN,EAAMO,EAAWvsB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUhJyqB,oBAAqB,SAAUR,EAAMS,EAAOzsB,GACxC,OAAOd,EAAQwuB,WAAW/tB,GAAe6sB,oBAAoBR,EAAMS,EAAOzsB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASvI2qB,SAAU,SAAUV,EAAMhsB,GACtB,OAAOd,EAAQwuB,WAAW/tB,GAAe+sB,SAASV,EAAMhsB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAarH4qB,uBAAwB,SAAUX,EAAMY,EAAmBppB,EAAOC,EAAQopB,EAAS7sB,GAC/E,OAAOd,EAAQwuB,WAAW/tB,GAAegtB,uBAAuBX,EAAMY,EAAmBppB,EAAOC,EAAQopB,EAAS7sB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAkB9K+qB,WAAY,SAAUtpB,EAAOC,EAAQyC,EAAM6mB,EAAWC,EAAOzmB,EAAUylB,EAAMiB,EAAWC,EAAmBL,EAAS7sB,GAChH,OAAOd,EAAQwuB,WAAW/tB,GAAemtB,WAAWtpB,EAAOC,EAAQyC,EAAM6mB,EAAWC,EAAOzmB,EAAUylB,EAAMiB,EAAWC,EAAmBL,EAAS7sB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAgB/MqrB,kBAAmB,SAAUpB,EAAMqB,EAASC,EAAUC,EAAiBC,EAAiBhqB,EAAOC,EAAQopB,EAAS7sB,GAC5G,OAAOd,EAAQwuB,WAAW/tB,GAAeytB,kBAAkBpB,EAAMqB,EAASC,EAAUC,EAAiBC,EAAiBhqB,EAAOC,EAAQopB,EAAS7sB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAU3M0rB,YAAa,SAAUzB,EAAM5I,EAAOpjB,GAChC,OAAOd,EAAQwuB,WAAW/tB,GAAe8tB,YAAYzB,EAAM5I,EAAOpjB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAUvI,IAAI6rB,EAA0B,SAAUtrB,GAEpC,SAASsrB,IACL,OAAkB,OAAXtrB,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KA+J/D,OAjKAD,EAAUsyB,EAAUtrB,GAapBsrB,EAAS1xB,UAAU6vB,oBAAsB,SAAUC,EAAMC,EAAkBjsB,GACvE,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQwuB,WAAWnyB,KAAKoE,eAAeosB,oBAAoBC,EAAMC,EAAkBjsB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWnK6rB,EAAS1xB,UAAUgwB,eAAiB,SAAUF,EAAMG,EAAansB,GAC7D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQwuB,WAAWnyB,KAAKoE,eAAeusB,eAAeF,EAAMG,EAAansB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUzJ6rB,EAAS1xB,UAAUkwB,YAAc,SAAUhJ,EAAOpjB,GAC9C,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQwuB,WAAWnyB,KAAKoE,eAAeysB,YAAYhJ,EAAOpjB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAU1I6rB,EAAS1xB,UAAUmwB,YAAc,SAAUL,EAAMhsB,GAC7C,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQwuB,WAAWnyB,KAAKoE,eAAe0sB,YAAYL,EAAMhsB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWzI6rB,EAAS1xB,UAAUowB,yBAA2B,SAAUN,EAAMO,EAAWvsB,GACrE,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQwuB,WAAWnyB,KAAKoE,eAAe2sB,yBAAyBN,EAAMO,EAAWvsB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWjK6rB,EAAS1xB,UAAUswB,oBAAsB,SAAUR,EAAMS,EAAOzsB,GAC5D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQwuB,WAAWnyB,KAAKoE,eAAe6sB,oBAAoBR,EAAMS,EAAOzsB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUxJ6rB,EAAS1xB,UAAUwwB,SAAW,SAAUV,EAAMhsB,GAC1C,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQwuB,WAAWnyB,KAAKoE,eAAe+sB,SAASV,EAAMhsB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cActI6rB,EAAS1xB,UAAUywB,uBAAyB,SAAUX,EAAMY,EAAmBppB,EAAOC,EAAQopB,EAAS7sB,GACnG,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQwuB,WAAWnyB,KAAKoE,eAAegtB,uBAAuBX,EAAMY,EAAmBppB,EAAOC,EAAQopB,EAAS7sB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAmB/L6rB,EAAS1xB,UAAU4wB,WAAa,SAAUtpB,EAAOC,EAAQyC,EAAM6mB,EAAWC,EAAOzmB,EAAUylB,EAAMiB,EAAWC,EAAmBL,EAAS7sB,GACpI,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQwuB,WAAWnyB,KAAKoE,eAAemtB,WAAWtpB,EAAOC,EAAQyC,EAAM6mB,EAAWC,EAAOzmB,EAAUylB,EAAMiB,EAAWC,EAAmBL,EAAS7sB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAiBhO6rB,EAAS1xB,UAAUkxB,kBAAoB,SAAUpB,EAAMqB,EAASC,EAAUC,EAAiBC,EAAiBhqB,EAAOC,EAAQopB,EAAS7sB,GAChI,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQwuB,WAAWnyB,KAAKoE,eAAeytB,kBAAkBpB,EAAMqB,EAASC,EAAUC,EAAiBC,EAAiBhqB,EAAOC,EAAQopB,EAAS7sB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAW5N6rB,EAAS1xB,UAAUuxB,YAAc,SAAUzB,EAAM5I,EAAOpjB,GACpD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQwuB,WAAWnyB,KAAKoE,eAAe8tB,YAAYzB,EAAM5I,EAAOpjB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAEzI6rB,EAlKkB,CAmK3BnuB,EAAO8C,SACTrD,EAAQ0uB,SAAWA,EAKnB1uB,EAAQ2uB,+BAAiC,SAAUluB,GAC/C,IAAIC,EAAQrE,KACZ,MAAO,CAaHuyB,sBAAuB,SAAU9nB,EAAOxC,EAAOC,EAAQioB,EAAaqC,EAActvB,EAAMuB,GAEpF,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIuF,MAAAA,EACA,MAAM,IAAIvG,EAAOiB,cAAc,QAAS,sFAsC5C,OAnCAR,EAAiBX,EAAgBuB,MADlB,yBACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAEzBnC,IAAV0E,IACA1F,EAA8B,MAAI0F,QAElB1E,IAAhBoqB,IACAprB,EAAoC,YAAIorB,QAEvBpqB,IAAjBysB,IACAztB,EAAsC,cAAIytB,QAEjCzsB,IAAT7C,IACA6B,EAA6B,KAAI7B,GAErCyB,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAmB7B4tB,gBAAiB,SAAUxqB,EAAOC,EAAQopB,EAASnB,EAAaqC,EAActvB,EAAMwvB,EAAYC,EAAgBluB,GAE5G,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GA2C/B,OAzCAP,EAAiBX,EAAgBuB,MADlB,iBACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAEvBnC,IAAZurB,IACAvsB,EAAiC,SAAIusB,QAErBvrB,IAAhBoqB,IACAprB,EAAoC,YAAIorB,QAEvBpqB,IAAjBysB,IACAztB,EAAsC,cAAIytB,QAEjCzsB,IAAT7C,IACA6B,EAA6B,KAAI7B,QAElB6C,IAAf2sB,IACA3tB,EAAmC,WAAI2tB,QAEpB3sB,IAAnB4sB,IACA5tB,EAAwC,gBAAI4tB,GAEhDhuB,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQivB,gBAAkB,SAAUxuB,GAChC,MAAO,CAaHmuB,sBAAuB,SAAU9nB,EAAOxC,EAAOC,EAAQioB,EAAaqC,EAActvB,EAAMuB,GACpF,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ2uB,+BAA+BluB,GAAemuB,sBAAsB9nB,EAAOxC,EAAOC,EAAQioB,EAAaqC,EAActvB,EAAMuB,IAChK,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAoBjD8rB,gBAAiB,SAAUxqB,EAAOC,EAAQopB,EAASnB,EAAaqC,EAActvB,EAAMwvB,EAAYC,EAAgBluB,GAC5G,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ2uB,+BAA+BluB,GAAequB,gBAAgBxqB,EAAOC,EAAQopB,EAASnB,EAAaqC,EAActvB,EAAMwvB,EAAYC,EAAgBluB,IACxL,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQkvB,qBAAuB,SAAUzuB,EAAeoC,EAAUD,GAC9D,MAAO,CAaHgsB,sBAAuB,SAAU9nB,EAAOxC,EAAOC,EAAQioB,EAAaqC,EAActvB,EAAMuB,GACpF,OAAOd,EAAQivB,gBAAgBxuB,GAAemuB,sBAAsB9nB,EAAOxC,EAAOC,EAAQioB,EAAaqC,EAActvB,EAAMuB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAgBxLisB,gBAAiB,SAAUxqB,EAAOC,EAAQopB,EAASnB,EAAaqC,EAActvB,EAAMwvB,EAAYC,EAAgBluB,GAC5G,OAAOd,EAAQivB,gBAAgBxuB,GAAequB,gBAAgBxqB,EAAOC,EAAQopB,EAASnB,EAAaqC,EAActvB,EAAMwvB,EAAYC,EAAgBluB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAUxN,IAAIssB,EAA+B,SAAU/rB,GAEzC,SAAS+rB,IACL,OAAkB,OAAX/rB,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAsC/D,OAxCAD,EAAU+yB,EAAe/rB,GAiBzB+rB,EAAcnyB,UAAU4xB,sBAAwB,SAAU9nB,EAAOxC,EAAOC,EAAQioB,EAAaqC,EAActvB,EAAMuB,GAC7G,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQivB,gBAAgB5yB,KAAKoE,eAAemuB,sBAAsB9nB,EAAOxC,EAAOC,EAAQioB,EAAaqC,EAActvB,EAAMuB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAiBzMssB,EAAcnyB,UAAU8xB,gBAAkB,SAAUxqB,EAAOC,EAAQopB,EAASnB,EAAaqC,EAActvB,EAAMwvB,EAAYC,EAAgBluB,GACrI,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQivB,gBAAgB5yB,KAAKoE,eAAequB,gBAAgBxqB,EAAOC,EAAQopB,EAASnB,EAAaqC,EAActvB,EAAMwvB,EAAYC,EAAgBluB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAE1NssB,EAzCuB,CA0ChC5uB,EAAO8C,SACTrD,EAAQmvB,cAAgBA,EAKxBnvB,EAAQovB,2BAA6B,SAAU3uB,GAC3C,IAAIC,EAAQrE,KACZ,MAAO,CAQHgzB,eAAgB,SAAUC,EAAUxuB,GAEhC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAI+tB,MAAAA,EACA,MAAM,IAAI/uB,EAAOiB,cAAc,WAAY,kFAuB/C,OApBAR,EAAiBX,EAAgBuB,MADlB,cACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA0C,iBAAbguB,GAA6E,qBAAnDpuB,EAAuBc,QAAQ,gBACtFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAuBC,IAAbktB,EAAyBA,EAAW,IAAOA,GAAY,GAClH,CAAC,EAAc,CACdjtB,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BquB,aAAc,SAAUzC,EAAMhsB,GAE1B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIurB,MAAAA,EACA,MAAM,IAAIvsB,EAAOiB,cAAc,OAAQ,4EAqB3C,OAnBAT,EAAe,oBACVU,QAAQ,SAAoBC,mBAAmBC,OAAOmrB,KAC3D9rB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,UAAYZ,GAAcH,GAC/EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7BsuB,UAAW,SAAU1C,EAAMhsB,GAEvB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIurB,MAAAA,EACA,MAAM,IAAIvsB,EAAOiB,cAAc,OAAQ,yEAqB3C,OAnBAT,EAAe,oBACVU,QAAQ,SAAoBC,mBAAmBC,OAAOmrB,KAC3D9rB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAkB7BuuB,aAAc,SAAUnrB,EAAOC,EAAQyC,EAAM8mB,EAAO4B,EAAWC,EAAWhC,EAAS7sB,GAE/E,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAwC/B,OAtCAP,EAAiBX,EAAgBuB,MADlB,cACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAE1BnC,IAAT4E,IACA5F,EAA6B,KAAI4F,QAEvB5E,IAAV0rB,IACA1sB,EAA8B,MAAI0sB,QAEpB1rB,IAAdstB,IACAtuB,EAAmC,WAAIsuB,QAEzBttB,IAAdutB,IACAvuB,EAAmC,WAAIuuB,QAE3BvtB,IAAZurB,IACAvsB,EAAiC,SAAIusB,GAEzC3sB,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7B0uB,aAAc,SAAU9C,EAAMwC,EAAUxuB,GAEpC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIurB,MAAAA,EACA,MAAM,IAAIvsB,EAAOiB,cAAc,OAAQ,4EAG3C,GAAI8tB,MAAAA,EACA,MAAM,IAAI/uB,EAAOiB,cAAc,WAAY,gFAwB/C,OAtBAT,EAAe,oBACVU,QAAQ,SAAoBC,mBAAmBC,OAAOmrB,KAC3D9rB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA0C,iBAAbguB,GAA6E,qBAAnDpuB,EAAuBc,QAAQ,gBACtFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAuBC,IAAbktB,EAAyBA,EAAW,IAAOA,GAAY,GAClH,CAAC,EAAc,CACdjtB,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQ6vB,YAAc,SAAUpvB,GAC5B,MAAO,CAQH4uB,eAAgB,SAAUC,EAAUxuB,GAChC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQovB,2BAA2B3uB,GAAe4uB,eAAeC,EAAUxuB,IACxG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDusB,aAAc,SAAUzC,EAAMhsB,GAC1B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQovB,2BAA2B3uB,GAAe8uB,aAAazC,EAAMhsB,IAClG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajDwsB,UAAW,SAAU1C,EAAMhsB,GACvB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQovB,2BAA2B3uB,GAAe+uB,UAAU1C,EAAMhsB,IAC/F,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAmBjDysB,aAAc,SAAUnrB,EAAOC,EAAQyC,EAAM8mB,EAAO4B,EAAWC,EAAWhC,EAAS7sB,GAC/E,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQovB,2BAA2B3uB,GAAegvB,aAAanrB,EAAOC,EAAQyC,EAAM8mB,EAAO4B,EAAWC,EAAWhC,EAAS7sB,IACvJ,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjD4sB,aAAc,SAAU9C,EAAMwC,EAAUxuB,GACpC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQovB,2BAA2B3uB,GAAemvB,aAAa9C,EAAMwC,EAAUxuB,IAC5G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQ8vB,iBAAmB,SAAUrvB,EAAeoC,EAAUD,GAC1D,MAAO,CAQHysB,eAAgB,SAAUC,EAAUxuB,GAChC,OAAOd,EAAQ6vB,YAAYpvB,GAAe4uB,eAAeC,EAAUxuB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAShI0sB,aAAc,SAAUzC,EAAMhsB,GAC1B,OAAOd,EAAQ6vB,YAAYpvB,GAAe8uB,aAAazC,EAAMhsB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAS1H2sB,UAAW,SAAU1C,EAAMhsB,GACvB,OAAOd,EAAQ6vB,YAAYpvB,GAAe+uB,UAAU1C,EAAMhsB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAevH4sB,aAAc,SAAUnrB,EAAOC,EAAQyC,EAAM8mB,EAAO4B,EAAWC,EAAWhC,EAAS7sB,GAC/E,OAAOd,EAAQ6vB,YAAYpvB,GAAegvB,aAAanrB,EAAOC,EAAQyC,EAAM8mB,EAAO4B,EAAWC,EAAWhC,EAAS7sB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAU/K+sB,aAAc,SAAU9C,EAAMwC,EAAUxuB,GACpC,OAAOd,EAAQ6vB,YAAYpvB,GAAemvB,aAAa9C,EAAMwC,EAAUxuB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAU5I,IAAIktB,EAA2B,SAAU3sB,GAErC,SAAS2sB,IACL,OAAkB,OAAX3sB,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAqE/D,OAvEAD,EAAU2zB,EAAW3sB,GAYrB2sB,EAAU/yB,UAAUqyB,eAAiB,SAAUC,EAAUxuB,GACrD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ6vB,YAAYxzB,KAAKoE,eAAe4uB,eAAeC,EAAUxuB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAUjJktB,EAAU/yB,UAAUuyB,aAAe,SAAUzC,EAAMhsB,GAC/C,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ6vB,YAAYxzB,KAAKoE,eAAe8uB,aAAazC,EAAMhsB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAU3IktB,EAAU/yB,UAAUwyB,UAAY,SAAU1C,EAAMhsB,GAC5C,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ6vB,YAAYxzB,KAAKoE,eAAe+uB,UAAU1C,EAAMhsB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAgBxIktB,EAAU/yB,UAAUyyB,aAAe,SAAUnrB,EAAOC,EAAQyC,EAAM8mB,EAAO4B,EAAWC,EAAWhC,EAAS7sB,GACpG,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ6vB,YAAYxzB,KAAKoE,eAAegvB,aAAanrB,EAAOC,EAAQyC,EAAM8mB,EAAO4B,EAAWC,EAAWhC,EAAS7sB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWhMktB,EAAU/yB,UAAU4yB,aAAe,SAAU9C,EAAMwC,EAAUxuB,GACzD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ6vB,YAAYxzB,KAAKoE,eAAemvB,aAAa9C,EAAMwC,EAAUxuB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAE9IktB,EAxEmB,CAyE5BxvB,EAAO8C,SACTrD,EAAQ+vB,UAAYA,EAKpB/vB,EAAQgwB,8BAAgC,SAAUvvB,GAC9C,IAAIC,EAAQrE,KACZ,MAAO,CAgBH4zB,eAAgB,SAAU3rB,EAAOC,EAAQ2rB,EAAe7C,EAAW8C,EAAWC,EAAOC,EAAQC,EAAW3C,EAAS7sB,GAE7G,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GA8C/B,OA5CAP,EAAiBX,EAAgBuB,MADlB,gBACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAEjBnC,IAAlB8tB,IACA9uB,EAAuC,eAAI8uB,QAE7B9tB,IAAdirB,IACAjsB,EAAkC,UAAIisB,QAExBjrB,IAAd+tB,IACA/uB,EAAmC,WAAI+uB,QAE7B/tB,IAAVguB,IACAhvB,EAA8B,MAAIgvB,QAEvBhuB,IAAXiuB,IACAjvB,EAA+B,OAAIivB,QAErBjuB,IAAdkuB,IACAlvB,EAAmC,WAAIkvB,QAE3BluB,IAAZurB,IACAvsB,EAAiC,SAAIusB,GAEzC3sB,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQuwB,eAAiB,SAAU9vB,GAC/B,MAAO,CAgBHwvB,eAAgB,SAAU3rB,EAAOC,EAAQ2rB,EAAe7C,EAAW8C,EAAWC,EAAOC,EAAQC,EAAW3C,EAAS7sB,GAC7G,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQgwB,8BAA8BvvB,GAAewvB,eAAe3rB,EAAOC,EAAQ2rB,EAAe7C,EAAW8C,EAAWC,EAAOC,EAAQC,EAAW3C,EAAS7sB,IACxL,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQwwB,oBAAsB,SAAU/vB,EAAeoC,EAAUD,GAC7D,MAAO,CAgBHqtB,eAAgB,SAAU3rB,EAAOC,EAAQ2rB,EAAe7C,EAAW8C,EAAWC,EAAOC,EAAQC,EAAW3C,EAAS7sB,GAC7G,OAAOd,EAAQuwB,eAAe9vB,GAAewvB,eAAe3rB,EAAOC,EAAQ2rB,EAAe7C,EAAW8C,EAAWC,EAAOC,EAAQC,EAAW3C,EAAS7sB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAUxN,IAAI4tB,EAA8B,SAAUrtB,GAExC,SAASqtB,IACL,OAAkB,OAAXrtB,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAsB/D,OAxBAD,EAAUq0B,EAAcrtB,GAoBxBqtB,EAAazzB,UAAUizB,eAAiB,SAAU3rB,EAAOC,EAAQ2rB,EAAe7C,EAAW8C,EAAWC,EAAOC,EAAQC,EAAW3C,EAAS7sB,GACrI,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQuwB,eAAel0B,KAAKoE,eAAewvB,eAAe3rB,EAAOC,EAAQ2rB,EAAe7C,EAAW8C,EAAWC,EAAOC,EAAQC,EAAW3C,EAAS7sB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAE1N4tB,EAzBsB,CA0B/BlwB,EAAO8C,SACTrD,EAAQywB,aAAeA,EAKvBzwB,EAAQ0wB,yBAA2B,SAAUjwB,GACzC,IAAIC,EAAQrE,KACZ,MAAO,CAQHs0B,YAAa,SAAUC,EAAQ9vB,GAE3B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIqvB,MAAAA,EACA,MAAM,IAAIrwB,EAAOiB,cAAc,SAAU,6EAuB7C,OApBAR,EAAiBX,EAAgBuB,MADlB,WACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,QAAUZ,GAAcH,GAC7EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAwC,iBAAXsvB,GAA2E,qBAAnD1vB,EAAuBc,QAAQ,gBACpFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAqBC,IAAXwuB,EAAuBA,EAAS,IAAOA,GAAU,GAC5G,CAAC,EAAc,CACdvuB,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAY7B2vB,WAAY,SAAU/D,EAAMhsB,GAExB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIurB,MAAAA,EACA,MAAM,IAAIvsB,EAAOiB,cAAc,OAAQ,0EAqB3C,OAnBAT,EAAe,iBACVU,QAAQ,SAAoBC,mBAAmBC,OAAOmrB,KAC3D9rB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,UAAYZ,GAAcH,GAC/EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7B4vB,QAAS,SAAUhE,EAAMgB,EAAOhtB,GAE5B,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIurB,MAAAA,EACA,MAAM,IAAIvsB,EAAOiB,cAAc,OAAQ,uEAwB3C,OAtBAT,EAAe,iBACVU,QAAQ,SAAoBC,mBAAmBC,OAAOmrB,KAC3D9rB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAV0rB,IACA1sB,EAA8B,MAAI0sB,GAEtC9sB,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAc7B6vB,cAAe,SAAUjE,EAAMxoB,EAAOC,EAAQzD,GAE1C,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIurB,MAAAA,EACA,MAAM,IAAIvsB,EAAOiB,cAAc,OAAQ,6EA2B3C,OAzBAT,EAAe,wBACVU,QAAQ,SAAoBC,mBAAmBC,OAAOmrB,KAC3D9rB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,GAEvCvD,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAsB7B8vB,UAAW,SAAU1sB,EAAOC,EAAQyC,EAAMiqB,EAAapD,EAAWC,EAAOH,EAASuD,EAAW7pB,EAAUmlB,EAAauC,EAAYjuB,GAE5H,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAoD/B,OAlDAP,EAAiBX,EAAgBuB,MADlB,WACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,gBAEnFlF,IAAVkC,IACAlD,EAA8B,MAAIkD,QAEvBlC,IAAXmC,IACAnD,EAA+B,OAAImD,QAE1BnC,IAAT4E,IACA5F,EAA6B,KAAI4F,QAEjB5E,IAAhB6uB,IACA7vB,EAAqC,aAAI6vB,QAE3B7uB,IAAdyrB,IACAzsB,EAAmC,WAAIysB,QAE7BzrB,IAAV0rB,IACA1sB,EAA8B,MAAI0sB,QAEtB1rB,IAAZurB,IACAvsB,EAAiC,SAAIusB,GAErCuD,IACA9vB,EAAmC,WAAI8vB,EAAUjD,KAAK1tB,EAAOkG,mBAAmBC,WAEnEtE,IAAbiF,IACAjG,EAAiC,SAAIiG,QAErBjF,IAAhBoqB,IACAprB,EAAoC,YAAIorB,QAEzBpqB,IAAf2sB,IACA3tB,EAAmC,WAAI2tB,GAE3C/tB,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BiwB,UAAW,SAAUrE,EAAMsE,EAAWtwB,GAElC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIurB,MAAAA,EACA,MAAM,IAAIvsB,EAAOiB,cAAc,OAAQ,yEAwB3C,OAtBAT,EAAe,iBACVU,QAAQ,SAAoBC,mBAAmBC,OAAOmrB,KAC3D9rB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,SAAWZ,GAAcH,GAC9EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAA2C,iBAAd8vB,GAA8E,qBAAnDlwB,EAAuBc,QAAQ,gBACvFd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAAwBC,IAAdgvB,EAA0BA,EAAY,IAAOA,GAAa,GACrH,CAAC,EAAc,CACd/uB,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,WAa7BmwB,WAAY,SAAUvE,EAAMwE,EAAgBxwB,GAExC,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAIK,EAAcC,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EAAwBC,EAChJ,OAAOzC,EAAYxC,MAAM,SAAUkF,GAE/B,GAAIurB,MAAAA,EACA,MAAM,IAAIvsB,EAAOiB,cAAc,OAAQ,0EAG3C,GAAI8vB,MAAAA,EACA,MAAM,IAAI/wB,EAAOiB,cAAc,iBAAkB,oFAwBrD,OAtBAT,EAAe,iBACVU,QAAQ,SAAoBC,mBAAmBC,OAAOmrB,KAC3D9rB,EAAiBX,EAAgBuB,MAAMb,GAAc,GACjDN,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGnG,EAAwB,gBAAkB,mBAC1CH,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SAC3HV,EAAgD,iBAAnBgwB,GAAmF,qBAAnDpwB,EAAuBc,QAAQ,gBAC5Fd,EAAuBe,KAAOX,EAAqBY,KAAKC,eAA6BC,IAAnBkvB,EAA+BA,EAAiB,IAAOA,GAAkB,GACpI,CAAC,EAAc,CACdjvB,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQuxB,UAAY,SAAU9wB,GAC1B,MAAO,CAQHkwB,YAAa,SAAUC,EAAQ9vB,GAC3B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ0wB,yBAAyBjwB,GAAekwB,YAAYC,EAAQ9vB,IACjG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAajD6tB,WAAY,SAAU/D,EAAMhsB,GACxB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ0wB,yBAAyBjwB,GAAeowB,WAAW/D,EAAMhsB,IAC9F,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjD8tB,QAAS,SAAUhE,EAAMgB,EAAOhtB,GAC5B,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ0wB,yBAAyBjwB,GAAeqwB,QAAQhE,EAAMgB,EAAOhtB,IAClG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAejD+tB,cAAe,SAAUjE,EAAMxoB,EAAOC,EAAQzD,GAC1C,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ0wB,yBAAyBjwB,GAAeswB,cAAcjE,EAAMxoB,EAAOC,EAAQzD,IAChH,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAuBjDguB,UAAW,SAAU1sB,EAAOC,EAAQyC,EAAMiqB,EAAapD,EAAWC,EAAOH,EAASuD,EAAW7pB,EAAUmlB,EAAauC,EAAYjuB,GAC5H,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ0wB,yBAAyBjwB,GAAeuwB,UAAU1sB,EAAOC,EAAQyC,EAAMiqB,EAAapD,EAAWC,EAAOH,EAASuD,EAAW7pB,EAAUmlB,EAAauC,EAAYjuB,IAClM,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDmuB,UAAW,SAAUrE,EAAMsE,EAAWtwB,GAClC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ0wB,yBAAyBjwB,GAAe0wB,UAAUrE,EAAMsE,EAAWtwB,IACxG,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,aAcjDquB,WAAY,SAAUvE,EAAMwE,EAAgBxwB,GACxC,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ0wB,yBAAyBjwB,GAAe4wB,WAAWvE,EAAMwE,EAAgBxwB,IAC9G,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQwxB,eAAiB,SAAU/wB,EAAeoC,EAAUD,GACxD,MAAO,CAQH+tB,YAAa,SAAUC,EAAQ9vB,GAC3B,OAAOd,EAAQuxB,UAAU9wB,GAAekwB,YAAYC,EAAQ9vB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OASzHguB,WAAY,SAAU/D,EAAMhsB,GACxB,OAAOd,EAAQuxB,UAAU9wB,GAAeowB,WAAW/D,EAAMhsB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUtHiuB,QAAS,SAAUhE,EAAMgB,EAAOhtB,GAC5B,OAAOd,EAAQuxB,UAAU9wB,GAAeqwB,QAAQhE,EAAMgB,EAAOhtB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAW1HkuB,cAAe,SAAUjE,EAAMxoB,EAAOC,EAAQzD,GAC1C,OAAOd,EAAQuxB,UAAU9wB,GAAeswB,cAAcjE,EAAMxoB,EAAOC,EAAQzD,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAmBxImuB,UAAW,SAAU1sB,EAAOC,EAAQyC,EAAMiqB,EAAapD,EAAWC,EAAOH,EAASuD,EAAW7pB,EAAUmlB,EAAauC,EAAYjuB,GAC5H,OAAOd,EAAQuxB,UAAU9wB,GAAeuwB,UAAU1sB,EAAOC,EAAQyC,EAAMiqB,EAAapD,EAAWC,EAAOH,EAASuD,EAAW7pB,EAAUmlB,EAAauC,EAAYjuB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAU1NsuB,UAAW,SAAUrE,EAAMsE,EAAWtwB,GAClC,OAAOd,EAAQuxB,UAAU9wB,GAAe0wB,UAAUrE,EAAMsE,EAAWtwB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,OAUhIwuB,WAAY,SAAUvE,EAAMwE,EAAgBxwB,GACxC,OAAOd,EAAQuxB,UAAU9wB,GAAe4wB,WAAWvE,EAAMwE,EAAgBxwB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAU9I,IAAI4uB,EAAyB,SAAUruB,GAEnC,SAASquB,IACL,OAAkB,OAAXruB,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAqG/D,OAvGAD,EAAUq1B,EAASruB,GAYnBquB,EAAQz0B,UAAU2zB,YAAc,SAAUC,EAAQ9vB,GAC9C,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQuxB,UAAUl1B,KAAKoE,eAAekwB,YAAYC,EAAQ9vB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAU1I4uB,EAAQz0B,UAAU6zB,WAAa,SAAU/D,EAAMhsB,GAC3C,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQuxB,UAAUl1B,KAAKoE,eAAeowB,WAAW/D,EAAMhsB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWvI4uB,EAAQz0B,UAAU8zB,QAAU,SAAUhE,EAAMgB,EAAOhtB,GAC/C,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQuxB,UAAUl1B,KAAKoE,eAAeqwB,QAAQhE,EAAMgB,EAAOhtB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAY3I4uB,EAAQz0B,UAAU+zB,cAAgB,SAAUjE,EAAMxoB,EAAOC,EAAQzD,GAC7D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQuxB,UAAUl1B,KAAKoE,eAAeswB,cAAcjE,EAAMxoB,EAAOC,EAAQzD,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAoBzJ4uB,EAAQz0B,UAAUg0B,UAAY,SAAU1sB,EAAOC,EAAQyC,EAAMiqB,EAAapD,EAAWC,EAAOH,EAASuD,EAAW7pB,EAAUmlB,EAAauC,EAAYjuB,GAC/I,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQuxB,UAAUl1B,KAAKoE,eAAeuwB,UAAU1sB,EAAOC,EAAQyC,EAAMiqB,EAAapD,EAAWC,EAAOH,EAASuD,EAAW7pB,EAAUmlB,EAAauC,EAAYjuB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAW3O4uB,EAAQz0B,UAAUm0B,UAAY,SAAUrE,EAAMsE,EAAWtwB,GACrD,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQuxB,UAAUl1B,KAAKoE,eAAe0wB,UAAUrE,EAAMsE,EAAWtwB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAWjJ4uB,EAAQz0B,UAAUq0B,WAAa,SAAUvE,EAAMwE,EAAgBxwB,GAC3D,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQuxB,UAAUl1B,KAAKoE,eAAe4wB,WAAWvE,EAAMwE,EAAgBxwB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAEhJ4uB,EAxGiB,CAyG1BlxB,EAAO8C,SACTrD,EAAQyxB,QAAUA,EAKlBzxB,EAAQ0xB,2BAA6B,SAAUjxB,GAC3C,IAAIC,EAAQrE,KACZ,MAAO,CAOHs1B,UAAW,SAAU7wB,GAEjB,YADgB,IAAZA,IAAsBA,EAAU,IAC7BlD,EAAU8C,OAAO,OAAQ,GAAQ,WACpC,IAAkBM,EAAgBC,EAAaC,EAAwBC,EAAyBC,EAAwBC,EACxH,OAAOxC,EAAYxC,MAAM,SAAUkF,GAmB/B,OAjBAP,EAAiBX,EAAgBuB,MADlB,YACsC,GACjDnB,IACAQ,EAAcR,EAAcQ,aAEhCC,EAAyBhE,EAASA,EAAS,CAAE2E,OAAQ,OAASZ,GAAcH,GAC5EK,EAA0B,GAC1BC,EAAyB,GAGrBX,IAAkBA,EAAc4G,UAAY5G,EAAc6G,YAC1DpG,EAA6B,KAAI,CAAEmG,SAAU5G,EAAc4G,SAAUC,SAAU7G,EAAc6G,WAEjGtG,EAAec,MAAQ5E,EAASA,EAASA,EAAS,GAAI8D,EAAec,OAAQV,GAAyBN,EAAQgB,cAEvGd,EAAee,OACtBV,EAAyBJ,GAAeA,EAAYe,QAAUf,EAAYe,QAAU,GACpFd,EAAuBc,QAAU9E,EAASA,EAASA,EAAS,GAAIiE,GAA0BE,GAAyBP,EAAQkB,SACpH,CAAC,EAAc,CACdK,IAAKhC,EAAgBiC,OAAOtB,GAC5BF,QAASI,aAWrClB,EAAQ4xB,YAAc,SAAUnxB,GAC5B,MAAO,CAOHkxB,UAAW,SAAU7wB,GACjB,OAAOlD,EAAUvB,UAAM,OAAQ,GAAQ,WACnC,IAAIsG,EACJ,OAAO9D,EAAYxC,MAAM,SAAUkF,GAC/B,OAAQA,EAAGpC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaa,EAAQ0xB,2BAA2BjxB,GAAekxB,UAAU7wB,IACzF,KAAK,EAED,OADA6B,EAAoBpB,EAAGnC,OAChB,CAAC,EAAc,SAAUwD,EAAOC,QACjB,IAAVD,IAAoBA,EAAQtC,EAAQwC,cACvB,IAAbD,IAAuBA,EAAWtC,EAAOwC,WAC7C,IAAIC,EAAmB9F,EAASA,EAAS,GAAIyF,EAAkB7B,SAAU,CAAEuB,IAAKQ,EAAWF,EAAkBN,MAC7G,OAAOO,EAAMK,QAAQD,eAYzDhD,EAAQ6xB,iBAAmB,SAAUpxB,EAAeoC,EAAUD,GAC1D,MAAO,CAOH+uB,UAAW,SAAU7wB,GACjB,OAAOd,EAAQ4xB,YAAYnxB,GAAekxB,UAAU7wB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQL,EAAOC,SAUzH,IAAIivB,EAA2B,SAAU1uB,GAErC,SAAS0uB,IACL,OAAkB,OAAX1uB,GAAmBA,EAAOzF,MAAMtB,KAAMmB,YAAcnB,KAa/D,OAfAD,EAAU01B,EAAW1uB,GAWrB0uB,EAAU90B,UAAU20B,UAAY,SAAU7wB,GACtC,IAAIJ,EAAQrE,KACZ,OAAO2D,EAAQ4xB,YAAYv1B,KAAKoE,eAAekxB,UAAU7wB,GAASlC,MAAK,SAAUqE,GAAW,OAAOA,EAAQvC,EAAMkC,MAAOlC,EAAMmC,cAE3HivB,EAhBmB,CAiB5BvxB,EAAO8C,SACTrD,EAAQ8xB,UAAYA,G,sBCpxGpB,IACQ31B,EADJC,EAAaC,MAAQA,KAAKD,YACtBD,EAAgB,SAAUG,EAAGC,GAI7B,OAHAJ,EAAgBK,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAErB,SAAUD,EAAGC,GAEhB,SAASO,IAAOT,KAAKU,YAAcT,EADnCH,EAAcG,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMO,EAAGE,UAAYT,EAAES,UAAW,IAAIF,KAGvFN,OAAOuD,eAAeC,EAAS,aAAc,CAAE3B,OAAO,IAGtD,IAAIiC,EAAU,EAAQ,OACtBN,EAAQ+C,UAAY,gDAAgDtB,QAAQ,OAAQ,IAKpFzB,EAAQyG,mBAAqB,CACzBC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,MAAO,KAoBX7G,EAAQqD,QAZJ,SAAiB5C,EAAeoC,EAAUD,QACrB,IAAbC,IAAuBA,EAAW7C,EAAQ+C,gBAChC,IAAVH,IAAoBA,EAAQtC,EAAQwC,SACxCzG,KAAKwG,SAAWA,EAChBxG,KAAKuG,MAAQA,EACTnC,IACApE,KAAKoE,cAAgBA,EACrBpE,KAAKwG,SAAWpC,EAAcoC,UAAYxG,KAAKwG,WAa3D,IAAIrB,EAA+B,SAAU4B,GAEzC,SAAS5B,EAAcsF,EAAOC,GAC1B,IAAIrG,EAAQ0C,EAAO1F,KAAKrB,KAAM0K,IAAQ1K,KAGtC,OAFAqE,EAAMoG,MAAQA,EACdpG,EAAMsG,KAAO,gBACNtG,EAEX,OAPAtE,EAAUoF,EAAe4B,GAOlB5B,EARuB,CAShCyF,OACFjH,EAAQwB,cAAgBA,G,cChExBhF,OAAOuD,eAAeC,EAAS,aAAc,CAAE3B,OAAO,IAatD2B,EAAQkH,cAXJ,SAAuBC,QACL,IAAVA,IAAoBA,EAAQ,IAChC9K,KAAK+K,OAASD,EAAMC,OACpB/K,KAAKgL,SAAWF,EAAME,SACtBhL,KAAKiL,SAAWH,EAAMG,SACtBjL,KAAKkL,YAAcJ,EAAMI,YACzBlL,KAAKwG,SAAWsE,EAAMtE,SACtBxG,KAAK4E,YAAckG,EAAMlG,c,gBCTjC,SAASuG,EAASC,GACd,IAAK,IAAI7K,KAAK6K,EAAQzH,EAAQnD,eAAeD,KAAIoD,EAAQpD,GAAK6K,EAAE7K,IAEpEJ,OAAOuD,eAAeC,EAAS,aAAc,CAAE3B,OAAO,IACtDmJ,EAAS,EAAQ,QACjBA,EAAS,EAAQ","sources":["webpack:///./node_modules/@redhat-cloud-services/approval-client/dist/api.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/dist/base.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/dist/configuration.js","webpack:///./node_modules/@redhat-cloud-services/approval-client/dist/index.js","webpack:///./node_modules/@redhat-cloud-services/catalog-client/dist/api.js","webpack:///./node_modules/@redhat-cloud-services/catalog-client/dist/base.js","webpack:///./node_modules/@redhat-cloud-services/catalog-client/dist/configuration.js","webpack:///./node_modules/@redhat-cloud-services/catalog-client/dist/index.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/Notification/Notification.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/NotificationPagination/NotificationPagination.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/Portal/Portal.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/NotificationPortal/NotificationPortal.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/notificationsMiddleware/notificationsMiddleware.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/redux/actions/action-types.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/redux/actions/notifications.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/redux/reducers/notifications.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-utilities/esm/ReducerRegistry/ReducerRegistry.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/helper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/DateFormat.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/EmptyTable/EmptyTable.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DownloadButton/DownloadButton.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PrimaryToolbar/Actions.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/BulkSelect/BulkSelect.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/ConditionalFilter/TextFilter.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/ConditionalFilter/CheckboxFilter.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/ConditionalFilter/RadioFilter.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/ConditionalFilter/GroupFilter.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/ConditionalFilter/conditionalFilterConstants.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/ConditionalFilter/ConditionalFilter.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/FilterChips/FilterChips.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PrimaryToolbar/SortBy.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PrimaryToolbar/PrimaryToolbar.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Section/Section.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/TableToolbar/TableToolbar.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/dist/api.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/dist/base.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/dist/configuration.js","webpack:///./node_modules/@redhat-cloud-services/rbac-client/dist/index.js"],"sourcesContent":["\"use strict\";\n// tslint:disable\n/**\n * Insights Approval Service API\n * The API to create and query approval requests\n *\n * The version of the OpenAPI document: 1.2.2\n * Contact: support@redhat.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar globalImportUrl = require(\"url\");\nvar axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nvar base_1 = require(\"./base\");\n/**\n    * @export\n    * @enum {string}\n    */\nvar ActionOperationEnum;\n(function (ActionOperationEnum) {\n    ActionOperationEnum[\"Approve\"] = \"approve\";\n    ActionOperationEnum[\"Cancel\"] = \"cancel\";\n    ActionOperationEnum[\"Deny\"] = \"deny\";\n    ActionOperationEnum[\"Error\"] = \"error\";\n    ActionOperationEnum[\"Notify\"] = \"notify\";\n    ActionOperationEnum[\"Memo\"] = \"memo\";\n    ActionOperationEnum[\"Skip\"] = \"skip\";\n    ActionOperationEnum[\"Start\"] = \"start\";\n})(ActionOperationEnum = exports.ActionOperationEnum || (exports.ActionOperationEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar RepositionPlacementEnum;\n(function (RepositionPlacementEnum) {\n    RepositionPlacementEnum[\"Bottom\"] = \"bottom\";\n    RepositionPlacementEnum[\"Top\"] = \"top\";\n})(RepositionPlacementEnum = exports.RepositionPlacementEnum || (exports.RepositionPlacementEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar RequestStateEnum;\n(function (RequestStateEnum) {\n    RequestStateEnum[\"Canceled\"] = \"canceled\";\n    RequestStateEnum[\"Completed\"] = \"completed\";\n    RequestStateEnum[\"Failed\"] = \"failed\";\n    RequestStateEnum[\"Notified\"] = \"notified\";\n    RequestStateEnum[\"Pending\"] = \"pending\";\n    RequestStateEnum[\"Skipped\"] = \"skipped\";\n    RequestStateEnum[\"Started\"] = \"started\";\n})(RequestStateEnum = exports.RequestStateEnum || (exports.RequestStateEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar RequestDecisionEnum;\n(function (RequestDecisionEnum) {\n    RequestDecisionEnum[\"Undecided\"] = \"undecided\";\n    RequestDecisionEnum[\"Approved\"] = \"approved\";\n    RequestDecisionEnum[\"Canceled\"] = \"canceled\";\n    RequestDecisionEnum[\"Denied\"] = \"denied\";\n    RequestDecisionEnum[\"Error\"] = \"error\";\n})(RequestDecisionEnum = exports.RequestDecisionEnum || (exports.RequestDecisionEnum = {}));\n/**\n * ActionApi - axios parameter creator\n * @export\n */\nexports.ActionApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Create an action under a request identified by its id. Admin can create approve, deny, memo, and cancel operations; approver can create approve, deny, and memo operations; while requester can create only cancel operation.\n         * @summary Create an action under the request\n         * @param {string} requestId ID of a request\n         * @param {Action} action Action object that needs to be added\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createAction: function (requestId, action, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'requestId' is not null or undefined\n                    if (requestId === null || requestId === undefined) {\n                        throw new base_1.RequiredError('requestId', 'Required parameter requestId was null or undefined when calling createAction.');\n                    }\n                    // verify required parameter 'action' is not null or undefined\n                    if (action === null || action === undefined) {\n                        throw new base_1.RequiredError('action', 'Required parameter action was null or undefined when calling createAction.');\n                    }\n                    localVarPath = \"/requests/{request_id}/actions\"\n                        .replace(\"{\" + \"request_id\" + \"}\", encodeURIComponent(String(requestId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof action !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(action !== undefined ? action : {}) : (action || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Find actions of a request identified by its id, available to everyone\n         * @summary List all actions of a request\n         * @param {string} requestId ID of a request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listActionsByRequest: function (requestId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'requestId' is not null or undefined\n                    if (requestId === null || requestId === undefined) {\n                        throw new base_1.RequiredError('requestId', 'Required parameter requestId was null or undefined when calling listActionsByRequest.');\n                    }\n                    localVarPath = \"/requests/{request_id}/actions\"\n                        .replace(\"{\" + \"request_id\" + \"}\", encodeURIComponent(String(requestId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Find an action by its id, available to everyone\n         * @summary Return an action\n         * @param {string} id ID used to select a resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showAction: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showAction.');\n                    }\n                    localVarPath = \"/actions/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * ActionApi - functional programming interface\n * @export\n */\nexports.ActionApiFp = function (configuration) {\n    return {\n        /**\n         * Create an action under a request identified by its id. Admin can create approve, deny, memo, and cancel operations; approver can create approve, deny, and memo operations; while requester can create only cancel operation.\n         * @summary Create an action under the request\n         * @param {string} requestId ID of a request\n         * @param {Action} action Action object that needs to be added\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createAction: function (requestId, action, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.ActionApiAxiosParamCreator(configuration).createAction(requestId, action, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Find actions of a request identified by its id, available to everyone\n         * @summary List all actions of a request\n         * @param {string} requestId ID of a request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listActionsByRequest: function (requestId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.ActionApiAxiosParamCreator(configuration).listActionsByRequest(requestId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Find an action by its id, available to everyone\n         * @summary Return an action\n         * @param {string} id ID used to select a resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showAction: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.ActionApiAxiosParamCreator(configuration).showAction(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * ActionApi - factory interface\n * @export\n */\nexports.ActionApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Create an action under a request identified by its id. Admin can create approve, deny, memo, and cancel operations; approver can create approve, deny, and memo operations; while requester can create only cancel operation.\n         * @summary Create an action under the request\n         * @param {string} requestId ID of a request\n         * @param {Action} action Action object that needs to be added\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createAction: function (requestId, action, options) {\n            return exports.ActionApiFp(configuration).createAction(requestId, action, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Find actions of a request identified by its id, available to everyone\n         * @summary List all actions of a request\n         * @param {string} requestId ID of a request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listActionsByRequest: function (requestId, options) {\n            return exports.ActionApiFp(configuration).listActionsByRequest(requestId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Find an action by its id, available to everyone\n         * @summary Return an action\n         * @param {string} id ID used to select a resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showAction: function (id, options) {\n            return exports.ActionApiFp(configuration).showAction(id, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * ActionApi - object-oriented interface\n * @export\n * @class ActionApi\n * @extends {BaseAPI}\n */\nvar ActionApi = /** @class */ (function (_super) {\n    __extends(ActionApi, _super);\n    function ActionApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Create an action under a request identified by its id. Admin can create approve, deny, memo, and cancel operations; approver can create approve, deny, and memo operations; while requester can create only cancel operation.\n     * @summary Create an action under the request\n     * @param {string} requestId ID of a request\n     * @param {Action} action Action object that needs to be added\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ActionApi\n     */\n    ActionApi.prototype.createAction = function (requestId, action, options) {\n        var _this = this;\n        return exports.ActionApiFp(this.configuration).createAction(requestId, action, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Find actions of a request identified by its id, available to everyone\n     * @summary List all actions of a request\n     * @param {string} requestId ID of a request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ActionApi\n     */\n    ActionApi.prototype.listActionsByRequest = function (requestId, options) {\n        var _this = this;\n        return exports.ActionApiFp(this.configuration).listActionsByRequest(requestId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Find an action by its id, available to everyone\n     * @summary Return an action\n     * @param {string} id ID used to select a resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ActionApi\n     */\n    ActionApi.prototype.showAction = function (id, options) {\n        var _this = this;\n        return exports.ActionApiFp(this.configuration).showAction(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return ActionApi;\n}(base_1.BaseAPI));\nexports.ActionApi = ActionApi;\n/**\n * DefaultApi - axios parameter creator\n * @export\n */\nexports.DefaultApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         *\n         * @summary Return this API document in JSON format\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getDocumentation: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/openapi.json\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * DefaultApi - functional programming interface\n * @export\n */\nexports.DefaultApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Return this API document in JSON format\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getDocumentation: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.DefaultApiAxiosParamCreator(configuration).getDocumentation(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * DefaultApi - factory interface\n * @export\n */\nexports.DefaultApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Return this API document in JSON format\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getDocumentation: function (options) {\n            return exports.DefaultApiFp(configuration).getDocumentation(options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * DefaultApi - object-oriented interface\n * @export\n * @class DefaultApi\n * @extends {BaseAPI}\n */\nvar DefaultApi = /** @class */ (function (_super) {\n    __extends(DefaultApi, _super);\n    function DefaultApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Return this API document in JSON format\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    DefaultApi.prototype.getDocumentation = function (options) {\n        var _this = this;\n        return exports.DefaultApiFp(this.configuration).getDocumentation(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return DefaultApi;\n}(base_1.BaseAPI));\nexports.DefaultApi = DefaultApi;\n/**\n * GraphqlApi - axios parameter creator\n * @export\n */\nexports.GraphqlApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Perform a GraphQL query\n         * @summary Perform a GraphQL query\n         * @param {GraphqlIn} graphqlIn GraphQL query request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postGraphql: function (graphqlIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'graphqlIn' is not null or undefined\n                    if (graphqlIn === null || graphqlIn === undefined) {\n                        throw new base_1.RequiredError('graphqlIn', 'Required parameter graphqlIn was null or undefined when calling postGraphql.');\n                    }\n                    localVarPath = \"/graphql\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof graphqlIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(graphqlIn !== undefined ? graphqlIn : {}) : (graphqlIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * GraphqlApi - functional programming interface\n * @export\n */\nexports.GraphqlApiFp = function (configuration) {\n    return {\n        /**\n         * Perform a GraphQL query\n         * @summary Perform a GraphQL query\n         * @param {GraphqlIn} graphqlIn GraphQL query request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postGraphql: function (graphqlIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.GraphqlApiAxiosParamCreator(configuration).postGraphql(graphqlIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * GraphqlApi - factory interface\n * @export\n */\nexports.GraphqlApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Perform a GraphQL query\n         * @summary Perform a GraphQL query\n         * @param {GraphqlIn} graphqlIn GraphQL query request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postGraphql: function (graphqlIn, options) {\n            return exports.GraphqlApiFp(configuration).postGraphql(graphqlIn, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * GraphqlApi - object-oriented interface\n * @export\n * @class GraphqlApi\n * @extends {BaseAPI}\n */\nvar GraphqlApi = /** @class */ (function (_super) {\n    __extends(GraphqlApi, _super);\n    function GraphqlApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Perform a GraphQL query\n     * @summary Perform a GraphQL query\n     * @param {GraphqlIn} graphqlIn GraphQL query request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GraphqlApi\n     */\n    GraphqlApi.prototype.postGraphql = function (graphqlIn, options) {\n        var _this = this;\n        return exports.GraphqlApiFp(this.configuration).postGraphql(graphqlIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return GraphqlApi;\n}(base_1.BaseAPI));\nexports.GraphqlApi = GraphqlApi;\n/**\n * RequestApi - axios parameter creator\n * @export\n */\nexports.RequestApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Create an approval request using given parameters, available to everyone\n         * @summary Create a new approval request\n         * @param {RequestIn} requestIn Parameters needed to create a request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRequest: function (requestIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'requestIn' is not null or undefined\n                    if (requestIn === null || requestIn === undefined) {\n                        throw new base_1.RequiredError('requestIn', 'Required parameter requestIn was null or undefined when calling createRequest.');\n                    }\n                    localVarPath = \"/requests\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof requestIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(requestIn !== undefined ? requestIn : {}) : (requestIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * The result depends on the x-rh-persona header (approval/admin, approval/requseter, or approval/approver). Program generated child requests are not included.\n         * @summary List filtered requests, available to everyone\n         * @param {'approval/admin' | 'approval/approver' | 'approval/requester'} [xRhPersona] Desired persona of the current login user\n         * @param {number} [limit] Maximum number of items per page. Used by pagination\n         * @param {number} [offset] Number of items to skip before starting to collect the result set. Used by pagination\n         * @param {object} [filter] Filter for querying collections\n         * @param {string} [sortBy] Attribute used to sort a collection\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRequests: function (xRhPersona, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/requests\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    if (xRhPersona !== undefined && xRhPersona !== null) {\n                        localVarHeaderParameter['x-rh-persona'] = String(xRhPersona);\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Find child requests based on the parent request id. The result depends on the x-rh-persona header (approval/admin, approval/requseter, or approval/approver).\n         * @summary List filtered child requests of a request\n         * @param {string} requestId ID of a request\n         * @param {'approval/admin' | 'approval/approver' | 'approval/requester'} [xRhPersona] Desired persona of the current login user\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRequestsByRequest: function (requestId, xRhPersona, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'requestId' is not null or undefined\n                    if (requestId === null || requestId === undefined) {\n                        throw new base_1.RequiredError('requestId', 'Required parameter requestId was null or undefined when calling listRequestsByRequest.');\n                    }\n                    localVarPath = \"/requests/{request_id}/requests\"\n                        .replace(\"{\" + \"request_id\" + \"}\", encodeURIComponent(String(requestId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    if (xRhPersona !== undefined && xRhPersona !== null) {\n                        localVarHeaderParameter['x-rh-persona'] = String(xRhPersona);\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Find an approval request by its id, available to anyone who can access the request\n         * @summary Return an approval request\n         * @param {string} id ID used to select a resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showRequest: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showRequest.');\n                    }\n                    localVarPath = \"/requests/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Find the request content based on a request id, available to everyone\n         * @summary Return the request content of a request\n         * @param {string} requestId ID of a request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showRequestContent: function (requestId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'requestId' is not null or undefined\n                    if (requestId === null || requestId === undefined) {\n                        throw new base_1.RequiredError('requestId', 'Required parameter requestId was null or undefined when calling showRequestContent.');\n                    }\n                    localVarPath = \"/requests/{request_id}/content\"\n                        .replace(\"{\" + \"request_id\" + \"}\", encodeURIComponent(String(requestId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * RequestApi - functional programming interface\n * @export\n */\nexports.RequestApiFp = function (configuration) {\n    return {\n        /**\n         * Create an approval request using given parameters, available to everyone\n         * @summary Create a new approval request\n         * @param {RequestIn} requestIn Parameters needed to create a request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRequest: function (requestIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.RequestApiAxiosParamCreator(configuration).createRequest(requestIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * The result depends on the x-rh-persona header (approval/admin, approval/requseter, or approval/approver). Program generated child requests are not included.\n         * @summary List filtered requests, available to everyone\n         * @param {'approval/admin' | 'approval/approver' | 'approval/requester'} [xRhPersona] Desired persona of the current login user\n         * @param {number} [limit] Maximum number of items per page. Used by pagination\n         * @param {number} [offset] Number of items to skip before starting to collect the result set. Used by pagination\n         * @param {object} [filter] Filter for querying collections\n         * @param {string} [sortBy] Attribute used to sort a collection\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRequests: function (xRhPersona, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.RequestApiAxiosParamCreator(configuration).listRequests(xRhPersona, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Find child requests based on the parent request id. The result depends on the x-rh-persona header (approval/admin, approval/requseter, or approval/approver).\n         * @summary List filtered child requests of a request\n         * @param {string} requestId ID of a request\n         * @param {'approval/admin' | 'approval/approver' | 'approval/requester'} [xRhPersona] Desired persona of the current login user\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRequestsByRequest: function (requestId, xRhPersona, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.RequestApiAxiosParamCreator(configuration).listRequestsByRequest(requestId, xRhPersona, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Find an approval request by its id, available to anyone who can access the request\n         * @summary Return an approval request\n         * @param {string} id ID used to select a resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showRequest: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.RequestApiAxiosParamCreator(configuration).showRequest(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Find the request content based on a request id, available to everyone\n         * @summary Return the request content of a request\n         * @param {string} requestId ID of a request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showRequestContent: function (requestId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.RequestApiAxiosParamCreator(configuration).showRequestContent(requestId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * RequestApi - factory interface\n * @export\n */\nexports.RequestApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Create an approval request using given parameters, available to everyone\n         * @summary Create a new approval request\n         * @param {RequestIn} requestIn Parameters needed to create a request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRequest: function (requestIn, options) {\n            return exports.RequestApiFp(configuration).createRequest(requestIn, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * The result depends on the x-rh-persona header (approval/admin, approval/requseter, or approval/approver). Program generated child requests are not included.\n         * @summary List filtered requests, available to everyone\n         * @param {'approval/admin' | 'approval/approver' | 'approval/requester'} [xRhPersona] Desired persona of the current login user\n         * @param {number} [limit] Maximum number of items per page. Used by pagination\n         * @param {number} [offset] Number of items to skip before starting to collect the result set. Used by pagination\n         * @param {object} [filter] Filter for querying collections\n         * @param {string} [sortBy] Attribute used to sort a collection\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRequests: function (xRhPersona, limit, offset, filter, sortBy, options) {\n            return exports.RequestApiFp(configuration).listRequests(xRhPersona, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Find child requests based on the parent request id. The result depends on the x-rh-persona header (approval/admin, approval/requseter, or approval/approver).\n         * @summary List filtered child requests of a request\n         * @param {string} requestId ID of a request\n         * @param {'approval/admin' | 'approval/approver' | 'approval/requester'} [xRhPersona] Desired persona of the current login user\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRequestsByRequest: function (requestId, xRhPersona, options) {\n            return exports.RequestApiFp(configuration).listRequestsByRequest(requestId, xRhPersona, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Find an approval request by its id, available to anyone who can access the request\n         * @summary Return an approval request\n         * @param {string} id ID used to select a resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showRequest: function (id, options) {\n            return exports.RequestApiFp(configuration).showRequest(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Find the request content based on a request id, available to everyone\n         * @summary Return the request content of a request\n         * @param {string} requestId ID of a request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showRequestContent: function (requestId, options) {\n            return exports.RequestApiFp(configuration).showRequestContent(requestId, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * RequestApi - object-oriented interface\n * @export\n * @class RequestApi\n * @extends {BaseAPI}\n */\nvar RequestApi = /** @class */ (function (_super) {\n    __extends(RequestApi, _super);\n    function RequestApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Create an approval request using given parameters, available to everyone\n     * @summary Create a new approval request\n     * @param {RequestIn} requestIn Parameters needed to create a request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RequestApi\n     */\n    RequestApi.prototype.createRequest = function (requestIn, options) {\n        var _this = this;\n        return exports.RequestApiFp(this.configuration).createRequest(requestIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * The result depends on the x-rh-persona header (approval/admin, approval/requseter, or approval/approver). Program generated child requests are not included.\n     * @summary List filtered requests, available to everyone\n     * @param {'approval/admin' | 'approval/approver' | 'approval/requester'} [xRhPersona] Desired persona of the current login user\n     * @param {number} [limit] Maximum number of items per page. Used by pagination\n     * @param {number} [offset] Number of items to skip before starting to collect the result set. Used by pagination\n     * @param {object} [filter] Filter for querying collections\n     * @param {string} [sortBy] Attribute used to sort a collection\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RequestApi\n     */\n    RequestApi.prototype.listRequests = function (xRhPersona, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.RequestApiFp(this.configuration).listRequests(xRhPersona, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Find child requests based on the parent request id. The result depends on the x-rh-persona header (approval/admin, approval/requseter, or approval/approver).\n     * @summary List filtered child requests of a request\n     * @param {string} requestId ID of a request\n     * @param {'approval/admin' | 'approval/approver' | 'approval/requester'} [xRhPersona] Desired persona of the current login user\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RequestApi\n     */\n    RequestApi.prototype.listRequestsByRequest = function (requestId, xRhPersona, options) {\n        var _this = this;\n        return exports.RequestApiFp(this.configuration).listRequestsByRequest(requestId, xRhPersona, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Find an approval request by its id, available to anyone who can access the request\n     * @summary Return an approval request\n     * @param {string} id ID used to select a resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RequestApi\n     */\n    RequestApi.prototype.showRequest = function (id, options) {\n        var _this = this;\n        return exports.RequestApiFp(this.configuration).showRequest(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Find the request content based on a request id, available to everyone\n     * @summary Return the request content of a request\n     * @param {string} requestId ID of a request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RequestApi\n     */\n    RequestApi.prototype.showRequestContent = function (requestId, options) {\n        var _this = this;\n        return exports.RequestApiFp(this.configuration).showRequestContent(requestId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return RequestApi;\n}(base_1.BaseAPI));\nexports.RequestApi = RequestApi;\n/**\n * TemplateApi - axios parameter creator\n * @export\n */\nexports.TemplateApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Find all templates, available to admin only\n         * @summary List templates\n         * @param {number} [limit] Maximum number of items per page. Used by pagination\n         * @param {number} [offset] Number of items to skip before starting to collect the result set. Used by pagination\n         * @param {object} [filter] Filter for querying collections\n         * @param {string} [sortBy] Attribute used to sort a collection\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTemplates: function (limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/templates\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Find a template by its id, available to admin only\n         * @summary Return a template\n         * @param {string} id ID used to select a resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showTemplate: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showTemplate.');\n                    }\n                    localVarPath = \"/templates/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * TemplateApi - functional programming interface\n * @export\n */\nexports.TemplateApiFp = function (configuration) {\n    return {\n        /**\n         * Find all templates, available to admin only\n         * @summary List templates\n         * @param {number} [limit] Maximum number of items per page. Used by pagination\n         * @param {number} [offset] Number of items to skip before starting to collect the result set. Used by pagination\n         * @param {object} [filter] Filter for querying collections\n         * @param {string} [sortBy] Attribute used to sort a collection\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTemplates: function (limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.TemplateApiAxiosParamCreator(configuration).listTemplates(limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Find a template by its id, available to admin only\n         * @summary Return a template\n         * @param {string} id ID used to select a resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showTemplate: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.TemplateApiAxiosParamCreator(configuration).showTemplate(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * TemplateApi - factory interface\n * @export\n */\nexports.TemplateApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Find all templates, available to admin only\n         * @summary List templates\n         * @param {number} [limit] Maximum number of items per page. Used by pagination\n         * @param {number} [offset] Number of items to skip before starting to collect the result set. Used by pagination\n         * @param {object} [filter] Filter for querying collections\n         * @param {string} [sortBy] Attribute used to sort a collection\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTemplates: function (limit, offset, filter, sortBy, options) {\n            return exports.TemplateApiFp(configuration).listTemplates(limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Find a template by its id, available to admin only\n         * @summary Return a template\n         * @param {string} id ID used to select a resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showTemplate: function (id, options) {\n            return exports.TemplateApiFp(configuration).showTemplate(id, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * TemplateApi - object-oriented interface\n * @export\n * @class TemplateApi\n * @extends {BaseAPI}\n */\nvar TemplateApi = /** @class */ (function (_super) {\n    __extends(TemplateApi, _super);\n    function TemplateApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Find all templates, available to admin only\n     * @summary List templates\n     * @param {number} [limit] Maximum number of items per page. Used by pagination\n     * @param {number} [offset] Number of items to skip before starting to collect the result set. Used by pagination\n     * @param {object} [filter] Filter for querying collections\n     * @param {string} [sortBy] Attribute used to sort a collection\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TemplateApi\n     */\n    TemplateApi.prototype.listTemplates = function (limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.TemplateApiFp(this.configuration).listTemplates(limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Find a template by its id, available to admin only\n     * @summary Return a template\n     * @param {string} id ID used to select a resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TemplateApi\n     */\n    TemplateApi.prototype.showTemplate = function (id, options) {\n        var _this = this;\n        return exports.TemplateApiFp(this.configuration).showTemplate(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return TemplateApi;\n}(base_1.BaseAPI));\nexports.TemplateApi = TemplateApi;\n/**\n * WorkflowApi - axios parameter creator\n * @export\n */\nexports.WorkflowApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Create a workflow from a template identified by its id, available to admin only\n         * @summary Create a workflow from a template\n         * @param {string} templateId ID of a template\n         * @param {Workflow} workflow Parameters needed to create a workflow\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addWorkflowToTemplate: function (templateId, workflow, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'templateId' is not null or undefined\n                    if (templateId === null || templateId === undefined) {\n                        throw new base_1.RequiredError('templateId', 'Required parameter templateId was null or undefined when calling addWorkflowToTemplate.');\n                    }\n                    // verify required parameter 'workflow' is not null or undefined\n                    if (workflow === null || workflow === undefined) {\n                        throw new base_1.RequiredError('workflow', 'Required parameter workflow was null or undefined when calling addWorkflowToTemplate.');\n                    }\n                    localVarPath = \"/templates/{template_id}/workflows\"\n                        .replace(\"{\" + \"template_id\" + \"}\", encodeURIComponent(String(templateId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof workflow !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(workflow !== undefined ? workflow : {}) : (workflow || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Delete an approval workflow by its id, available to admin only\n         * @summary Delete an approval workflow\n         * @param {string} id ID used to select a resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyWorkflow: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling destroyWorkflow.');\n                    }\n                    localVarPath = \"/workflows/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Link a resource object to a workflow identified by its id, available to admin only\n         * @summary Create a resource link to a workflow\n         * @param {string} id ID used to select a resource\n         * @param {ResourceObject} resourceObject Parameters needed to create a link\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        linkWorkflow: function (id, resourceObject, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling linkWorkflow.');\n                    }\n                    // verify required parameter 'resourceObject' is not null or undefined\n                    if (resourceObject === null || resourceObject === undefined) {\n                        throw new base_1.RequiredError('resourceObject', 'Required parameter resourceObject was null or undefined when calling linkWorkflow.');\n                    }\n                    localVarPath = \"/workflows/{id}/link\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof resourceObject !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(resourceObject !== undefined ? resourceObject : {}) : (resourceObject || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Find approval workflows matching search parameters, available to admin only. Optionally select workflows linked to a resource object whose app_name, object_type and object_id are specified by query parameters. Default sorting is by sequence number in ascending order.\n         * @summary List approval workflows\n         * @param {string} [appName] Name of the application\n         * @param {string} [objectId] ID of a resource object\n         * @param {string} [objectType] Type of a resource object\n         * @param {number} [limit] Maximum number of items per page. Used by pagination\n         * @param {number} [offset] Number of items to skip before starting to collect the result set. Used by pagination\n         * @param {object} [filter] Filter for querying collections\n         * @param {string} [sortBy] Attribute used to sort a collection\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listWorkflows: function (appName, objectId, objectType, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/workflows\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    if (appName !== undefined) {\n                        localVarQueryParameter['app_name'] = appName;\n                    }\n                    if (objectId !== undefined) {\n                        localVarQueryParameter['object_id'] = objectId;\n                    }\n                    if (objectType !== undefined) {\n                        localVarQueryParameter['object_type'] = objectType;\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Find workflows based on the template id, available to admin only\n         * @summary List all workflows belonging to a template\n         * @param {string} templateId ID of a template\n         * @param {number} [limit] Maximum number of items per page. Used by pagination\n         * @param {number} [offset] Number of items to skip before starting to collect the result set. Used by pagination\n         * @param {object} [filter] Filter for querying collections\n         * @param {string} [sortBy] Attribute used to sort a collection\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listWorkflowsByTemplate: function (templateId, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'templateId' is not null or undefined\n                    if (templateId === null || templateId === undefined) {\n                        throw new base_1.RequiredError('templateId', 'Required parameter templateId was null or undefined when calling listWorkflowsByTemplate.');\n                    }\n                    localVarPath = \"/templates/{template_id}/workflows\"\n                        .replace(\"{\" + \"template_id\" + \"}\", encodeURIComponent(String(templateId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Adjust the position of a workflow related to others by an offset number\n         * @summary Adjust the position of a workflow\n         * @param {string} id ID used to select a resource\n         * @param {Reposition} reposition How many levels should the sequence be brought up or down\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        reposition: function (id, reposition, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling reposition.');\n                    }\n                    // verify required parameter 'reposition' is not null or undefined\n                    if (reposition === null || reposition === undefined) {\n                        throw new base_1.RequiredError('reposition', 'Required parameter reposition was null or undefined when calling reposition.');\n                    }\n                    localVarPath = \"/workflows/{id}/reposition\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof reposition !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(reposition !== undefined ? reposition : {}) : (reposition || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Find an approval workflow by its id, available to admin only\n         * @summary Return an approval workflow\n         * @param {string} id ID used to select a resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showWorkflow: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showWorkflow.');\n                    }\n                    localVarPath = \"/workflows/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Break the link between a resource object selected by the body and a workflow by its id, available to admin only\n         * @summary Break the link between a resource object and a workflow\n         * @param {string} id ID used to select a resource\n         * @param {ResourceObject} resourceObject Parameters needed to select a resource object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unlinkWorkflow: function (id, resourceObject, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling unlinkWorkflow.');\n                    }\n                    // verify required parameter 'resourceObject' is not null or undefined\n                    if (resourceObject === null || resourceObject === undefined) {\n                        throw new base_1.RequiredError('resourceObject', 'Required parameter resourceObject was null or undefined when calling unlinkWorkflow.');\n                    }\n                    localVarPath = \"/workflows/{id}/unlink\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof resourceObject !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(resourceObject !== undefined ? resourceObject : {}) : (resourceObject || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Find an approval workflow by its id and update its content, available to admin only\n         * @summary Update an approval workflow\n         * @param {string} id ID used to select a resource\n         * @param {Workflow} workflow Parameters needed to update an approval workflow\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateWorkflow: function (id, workflow, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling updateWorkflow.');\n                    }\n                    // verify required parameter 'workflow' is not null or undefined\n                    if (workflow === null || workflow === undefined) {\n                        throw new base_1.RequiredError('workflow', 'Required parameter workflow was null or undefined when calling updateWorkflow.');\n                    }\n                    localVarPath = \"/workflows/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof workflow !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(workflow !== undefined ? workflow : {}) : (workflow || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * WorkflowApi - functional programming interface\n * @export\n */\nexports.WorkflowApiFp = function (configuration) {\n    return {\n        /**\n         * Create a workflow from a template identified by its id, available to admin only\n         * @summary Create a workflow from a template\n         * @param {string} templateId ID of a template\n         * @param {Workflow} workflow Parameters needed to create a workflow\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addWorkflowToTemplate: function (templateId, workflow, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.WorkflowApiAxiosParamCreator(configuration).addWorkflowToTemplate(templateId, workflow, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Delete an approval workflow by its id, available to admin only\n         * @summary Delete an approval workflow\n         * @param {string} id ID used to select a resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyWorkflow: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.WorkflowApiAxiosParamCreator(configuration).destroyWorkflow(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Link a resource object to a workflow identified by its id, available to admin only\n         * @summary Create a resource link to a workflow\n         * @param {string} id ID used to select a resource\n         * @param {ResourceObject} resourceObject Parameters needed to create a link\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        linkWorkflow: function (id, resourceObject, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.WorkflowApiAxiosParamCreator(configuration).linkWorkflow(id, resourceObject, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Find approval workflows matching search parameters, available to admin only. Optionally select workflows linked to a resource object whose app_name, object_type and object_id are specified by query parameters. Default sorting is by sequence number in ascending order.\n         * @summary List approval workflows\n         * @param {string} [appName] Name of the application\n         * @param {string} [objectId] ID of a resource object\n         * @param {string} [objectType] Type of a resource object\n         * @param {number} [limit] Maximum number of items per page. Used by pagination\n         * @param {number} [offset] Number of items to skip before starting to collect the result set. Used by pagination\n         * @param {object} [filter] Filter for querying collections\n         * @param {string} [sortBy] Attribute used to sort a collection\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listWorkflows: function (appName, objectId, objectType, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.WorkflowApiAxiosParamCreator(configuration).listWorkflows(appName, objectId, objectType, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Find workflows based on the template id, available to admin only\n         * @summary List all workflows belonging to a template\n         * @param {string} templateId ID of a template\n         * @param {number} [limit] Maximum number of items per page. Used by pagination\n         * @param {number} [offset] Number of items to skip before starting to collect the result set. Used by pagination\n         * @param {object} [filter] Filter for querying collections\n         * @param {string} [sortBy] Attribute used to sort a collection\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listWorkflowsByTemplate: function (templateId, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.WorkflowApiAxiosParamCreator(configuration).listWorkflowsByTemplate(templateId, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Adjust the position of a workflow related to others by an offset number\n         * @summary Adjust the position of a workflow\n         * @param {string} id ID used to select a resource\n         * @param {Reposition} reposition How many levels should the sequence be brought up or down\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        reposition: function (id, reposition, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.WorkflowApiAxiosParamCreator(configuration).reposition(id, reposition, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Find an approval workflow by its id, available to admin only\n         * @summary Return an approval workflow\n         * @param {string} id ID used to select a resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showWorkflow: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.WorkflowApiAxiosParamCreator(configuration).showWorkflow(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Break the link between a resource object selected by the body and a workflow by its id, available to admin only\n         * @summary Break the link between a resource object and a workflow\n         * @param {string} id ID used to select a resource\n         * @param {ResourceObject} resourceObject Parameters needed to select a resource object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unlinkWorkflow: function (id, resourceObject, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.WorkflowApiAxiosParamCreator(configuration).unlinkWorkflow(id, resourceObject, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Find an approval workflow by its id and update its content, available to admin only\n         * @summary Update an approval workflow\n         * @param {string} id ID used to select a resource\n         * @param {Workflow} workflow Parameters needed to update an approval workflow\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateWorkflow: function (id, workflow, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.WorkflowApiAxiosParamCreator(configuration).updateWorkflow(id, workflow, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * WorkflowApi - factory interface\n * @export\n */\nexports.WorkflowApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Create a workflow from a template identified by its id, available to admin only\n         * @summary Create a workflow from a template\n         * @param {string} templateId ID of a template\n         * @param {Workflow} workflow Parameters needed to create a workflow\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addWorkflowToTemplate: function (templateId, workflow, options) {\n            return exports.WorkflowApiFp(configuration).addWorkflowToTemplate(templateId, workflow, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Delete an approval workflow by its id, available to admin only\n         * @summary Delete an approval workflow\n         * @param {string} id ID used to select a resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyWorkflow: function (id, options) {\n            return exports.WorkflowApiFp(configuration).destroyWorkflow(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Link a resource object to a workflow identified by its id, available to admin only\n         * @summary Create a resource link to a workflow\n         * @param {string} id ID used to select a resource\n         * @param {ResourceObject} resourceObject Parameters needed to create a link\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        linkWorkflow: function (id, resourceObject, options) {\n            return exports.WorkflowApiFp(configuration).linkWorkflow(id, resourceObject, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Find approval workflows matching search parameters, available to admin only. Optionally select workflows linked to a resource object whose app_name, object_type and object_id are specified by query parameters. Default sorting is by sequence number in ascending order.\n         * @summary List approval workflows\n         * @param {string} [appName] Name of the application\n         * @param {string} [objectId] ID of a resource object\n         * @param {string} [objectType] Type of a resource object\n         * @param {number} [limit] Maximum number of items per page. Used by pagination\n         * @param {number} [offset] Number of items to skip before starting to collect the result set. Used by pagination\n         * @param {object} [filter] Filter for querying collections\n         * @param {string} [sortBy] Attribute used to sort a collection\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listWorkflows: function (appName, objectId, objectType, limit, offset, filter, sortBy, options) {\n            return exports.WorkflowApiFp(configuration).listWorkflows(appName, objectId, objectType, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Find workflows based on the template id, available to admin only\n         * @summary List all workflows belonging to a template\n         * @param {string} templateId ID of a template\n         * @param {number} [limit] Maximum number of items per page. Used by pagination\n         * @param {number} [offset] Number of items to skip before starting to collect the result set. Used by pagination\n         * @param {object} [filter] Filter for querying collections\n         * @param {string} [sortBy] Attribute used to sort a collection\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listWorkflowsByTemplate: function (templateId, limit, offset, filter, sortBy, options) {\n            return exports.WorkflowApiFp(configuration).listWorkflowsByTemplate(templateId, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Adjust the position of a workflow related to others by an offset number\n         * @summary Adjust the position of a workflow\n         * @param {string} id ID used to select a resource\n         * @param {Reposition} reposition How many levels should the sequence be brought up or down\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        reposition: function (id, reposition, options) {\n            return exports.WorkflowApiFp(configuration).reposition(id, reposition, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Find an approval workflow by its id, available to admin only\n         * @summary Return an approval workflow\n         * @param {string} id ID used to select a resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showWorkflow: function (id, options) {\n            return exports.WorkflowApiFp(configuration).showWorkflow(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Break the link between a resource object selected by the body and a workflow by its id, available to admin only\n         * @summary Break the link between a resource object and a workflow\n         * @param {string} id ID used to select a resource\n         * @param {ResourceObject} resourceObject Parameters needed to select a resource object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unlinkWorkflow: function (id, resourceObject, options) {\n            return exports.WorkflowApiFp(configuration).unlinkWorkflow(id, resourceObject, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Find an approval workflow by its id and update its content, available to admin only\n         * @summary Update an approval workflow\n         * @param {string} id ID used to select a resource\n         * @param {Workflow} workflow Parameters needed to update an approval workflow\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateWorkflow: function (id, workflow, options) {\n            return exports.WorkflowApiFp(configuration).updateWorkflow(id, workflow, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * WorkflowApi - object-oriented interface\n * @export\n * @class WorkflowApi\n * @extends {BaseAPI}\n */\nvar WorkflowApi = /** @class */ (function (_super) {\n    __extends(WorkflowApi, _super);\n    function WorkflowApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Create a workflow from a template identified by its id, available to admin only\n     * @summary Create a workflow from a template\n     * @param {string} templateId ID of a template\n     * @param {Workflow} workflow Parameters needed to create a workflow\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorkflowApi\n     */\n    WorkflowApi.prototype.addWorkflowToTemplate = function (templateId, workflow, options) {\n        var _this = this;\n        return exports.WorkflowApiFp(this.configuration).addWorkflowToTemplate(templateId, workflow, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Delete an approval workflow by its id, available to admin only\n     * @summary Delete an approval workflow\n     * @param {string} id ID used to select a resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorkflowApi\n     */\n    WorkflowApi.prototype.destroyWorkflow = function (id, options) {\n        var _this = this;\n        return exports.WorkflowApiFp(this.configuration).destroyWorkflow(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Link a resource object to a workflow identified by its id, available to admin only\n     * @summary Create a resource link to a workflow\n     * @param {string} id ID used to select a resource\n     * @param {ResourceObject} resourceObject Parameters needed to create a link\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorkflowApi\n     */\n    WorkflowApi.prototype.linkWorkflow = function (id, resourceObject, options) {\n        var _this = this;\n        return exports.WorkflowApiFp(this.configuration).linkWorkflow(id, resourceObject, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Find approval workflows matching search parameters, available to admin only. Optionally select workflows linked to a resource object whose app_name, object_type and object_id are specified by query parameters. Default sorting is by sequence number in ascending order.\n     * @summary List approval workflows\n     * @param {string} [appName] Name of the application\n     * @param {string} [objectId] ID of a resource object\n     * @param {string} [objectType] Type of a resource object\n     * @param {number} [limit] Maximum number of items per page. Used by pagination\n     * @param {number} [offset] Number of items to skip before starting to collect the result set. Used by pagination\n     * @param {object} [filter] Filter for querying collections\n     * @param {string} [sortBy] Attribute used to sort a collection\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorkflowApi\n     */\n    WorkflowApi.prototype.listWorkflows = function (appName, objectId, objectType, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.WorkflowApiFp(this.configuration).listWorkflows(appName, objectId, objectType, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Find workflows based on the template id, available to admin only\n     * @summary List all workflows belonging to a template\n     * @param {string} templateId ID of a template\n     * @param {number} [limit] Maximum number of items per page. Used by pagination\n     * @param {number} [offset] Number of items to skip before starting to collect the result set. Used by pagination\n     * @param {object} [filter] Filter for querying collections\n     * @param {string} [sortBy] Attribute used to sort a collection\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorkflowApi\n     */\n    WorkflowApi.prototype.listWorkflowsByTemplate = function (templateId, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.WorkflowApiFp(this.configuration).listWorkflowsByTemplate(templateId, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Adjust the position of a workflow related to others by an offset number\n     * @summary Adjust the position of a workflow\n     * @param {string} id ID used to select a resource\n     * @param {Reposition} reposition How many levels should the sequence be brought up or down\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorkflowApi\n     */\n    WorkflowApi.prototype.reposition = function (id, reposition, options) {\n        var _this = this;\n        return exports.WorkflowApiFp(this.configuration).reposition(id, reposition, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Find an approval workflow by its id, available to admin only\n     * @summary Return an approval workflow\n     * @param {string} id ID used to select a resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorkflowApi\n     */\n    WorkflowApi.prototype.showWorkflow = function (id, options) {\n        var _this = this;\n        return exports.WorkflowApiFp(this.configuration).showWorkflow(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Break the link between a resource object selected by the body and a workflow by its id, available to admin only\n     * @summary Break the link between a resource object and a workflow\n     * @param {string} id ID used to select a resource\n     * @param {ResourceObject} resourceObject Parameters needed to select a resource object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorkflowApi\n     */\n    WorkflowApi.prototype.unlinkWorkflow = function (id, resourceObject, options) {\n        var _this = this;\n        return exports.WorkflowApiFp(this.configuration).unlinkWorkflow(id, resourceObject, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Find an approval workflow by its id and update its content, available to admin only\n     * @summary Update an approval workflow\n     * @param {string} id ID used to select a resource\n     * @param {Workflow} workflow Parameters needed to update an approval workflow\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorkflowApi\n     */\n    WorkflowApi.prototype.updateWorkflow = function (id, workflow, options) {\n        var _this = this;\n        return exports.WorkflowApiFp(this.configuration).updateWorkflow(id, workflow, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return WorkflowApi;\n}(base_1.BaseAPI));\nexports.WorkflowApi = WorkflowApi;\n","\"use strict\";\n// tslint:disable\n/**\n * Insights Approval Service API\n * The API to create and query approval requests\n *\n * The version of the OpenAPI document: 1.2.2\n * Contact: support@redhat.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Some imports not used depending on template conditions\n// @ts-ignore\nvar axios_1 = require(\"axios\");\nexports.BASE_PATH = \"https://cloud.redhat.com//api/approval/v1.2\".replace(/\\/+$/, \"\");\n/**\n *\n * @export\n */\nexports.COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n/**\n *\n * @export\n * @class BaseAPI\n */\nvar BaseAPI = /** @class */ (function () {\n    function BaseAPI(configuration, basePath, axios) {\n        if (basePath === void 0) { basePath = exports.BASE_PATH; }\n        if (axios === void 0) { axios = axios_1.default; }\n        this.basePath = basePath;\n        this.axios = axios;\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n    return BaseAPI;\n}());\nexports.BaseAPI = BaseAPI;\n;\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nvar RequiredError = /** @class */ (function (_super) {\n    __extends(RequiredError, _super);\n    function RequiredError(field, msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.field = field;\n        _this.name = \"RequiredError\";\n        return _this;\n    }\n    return RequiredError;\n}(Error));\nexports.RequiredError = RequiredError;\n","\"use strict\";\n// tslint:disable\n/**\n * Insights Approval Service API\n * The API to create and query approval requests\n *\n * The version of the OpenAPI document: 1.2.2\n * Contact: support@redhat.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Configuration = /** @class */ (function () {\n    function Configuration(param) {\n        if (param === void 0) { param = {}; }\n        this.apiKey = param.apiKey;\n        this.username = param.username;\n        this.password = param.password;\n        this.accessToken = param.accessToken;\n        this.basePath = param.basePath;\n        this.baseOptions = param.baseOptions;\n    }\n    return Configuration;\n}());\nexports.Configuration = Configuration;\n","\"use strict\";\n// tslint:disable\n/**\n * Insights Approval Service API\n * The API to create and query approval requests\n *\n * The version of the OpenAPI document: 1.2.2\n * Contact: support@redhat.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./api\"));\n__export(require(\"./configuration\"));\n","\"use strict\";\n// tslint:disable\n/**\n * Catalog API\n * This API gets and orders catalog items from different cloud sources.\n *\n * The version of the OpenAPI document: 1.3.0\n * Contact: support@redhat.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar globalImportUrl = require(\"url\");\nvar axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nvar base_1 = require(\"./base\");\n/**\n    * @export\n    * @enum {string}\n    */\nvar ApprovalRequestStateEnum;\n(function (ApprovalRequestStateEnum) {\n    ApprovalRequestStateEnum[\"Undecided\"] = \"undecided\";\n    ApprovalRequestStateEnum[\"Approved\"] = \"approved\";\n    ApprovalRequestStateEnum[\"Denied\"] = \"denied\";\n    ApprovalRequestStateEnum[\"Canceled\"] = \"canceled\";\n    ApprovalRequestStateEnum[\"Error\"] = \"error\";\n})(ApprovalRequestStateEnum = exports.ApprovalRequestStateEnum || (exports.ApprovalRequestStateEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar OrderStateEnum;\n(function (OrderStateEnum) {\n    OrderStateEnum[\"Created\"] = \"Created\";\n    OrderStateEnum[\"ApprovalPending\"] = \"Approval Pending\";\n    OrderStateEnum[\"Ordered\"] = \"Ordered\";\n    OrderStateEnum[\"Failed\"] = \"Failed\";\n    OrderStateEnum[\"Completed\"] = \"Completed\";\n    OrderStateEnum[\"Canceled\"] = \"Canceled\";\n})(OrderStateEnum = exports.OrderStateEnum || (exports.OrderStateEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar OrderItemStateEnum;\n(function (OrderItemStateEnum) {\n    OrderItemStateEnum[\"Created\"] = \"Created\";\n    OrderItemStateEnum[\"ApprovalPending\"] = \"Approval Pending\";\n    OrderItemStateEnum[\"Ordered\"] = \"Ordered\";\n    OrderItemStateEnum[\"Failed\"] = \"Failed\";\n    OrderItemStateEnum[\"Completed\"] = \"Completed\";\n    OrderItemStateEnum[\"Approved\"] = \"Approved\";\n    OrderItemStateEnum[\"Denied\"] = \"Denied\";\n    OrderItemStateEnum[\"Canceled\"] = \"Canceled\";\n})(OrderItemStateEnum = exports.OrderItemStateEnum || (exports.OrderItemStateEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar OrderProcessAssociationsToRemoveAssociationsToRemoveEnum;\n(function (OrderProcessAssociationsToRemoveAssociationsToRemoveEnum) {\n    OrderProcessAssociationsToRemoveAssociationsToRemoveEnum[\"Before\"] = \"before\";\n    OrderProcessAssociationsToRemoveAssociationsToRemoveEnum[\"After\"] = \"after\";\n    OrderProcessAssociationsToRemoveAssociationsToRemoveEnum[\"Return\"] = \"return\";\n})(OrderProcessAssociationsToRemoveAssociationsToRemoveEnum = exports.OrderProcessAssociationsToRemoveAssociationsToRemoveEnum || (exports.OrderProcessAssociationsToRemoveAssociationsToRemoveEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar ProgressMessageLevelEnum;\n(function (ProgressMessageLevelEnum) {\n    ProgressMessageLevelEnum[\"Info\"] = \"info\";\n    ProgressMessageLevelEnum[\"Error\"] = \"error\";\n    ProgressMessageLevelEnum[\"Warning\"] = \"warning\";\n    ProgressMessageLevelEnum[\"Debug\"] = \"debug\";\n})(ProgressMessageLevelEnum = exports.ProgressMessageLevelEnum || (exports.ProgressMessageLevelEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar ShareInfoPermissionsEnum;\n(function (ShareInfoPermissionsEnum) {\n    ShareInfoPermissionsEnum[\"Read\"] = \"read\";\n    ShareInfoPermissionsEnum[\"Update\"] = \"update\";\n    ShareInfoPermissionsEnum[\"Delete\"] = \"delete\";\n    ShareInfoPermissionsEnum[\"Order\"] = \"order\";\n})(ShareInfoPermissionsEnum = exports.ShareInfoPermissionsEnum || (exports.ShareInfoPermissionsEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar SharePolicyPermissionsEnum;\n(function (SharePolicyPermissionsEnum) {\n    SharePolicyPermissionsEnum[\"Read\"] = \"read\";\n    SharePolicyPermissionsEnum[\"Update\"] = \"update\";\n    SharePolicyPermissionsEnum[\"Delete\"] = \"delete\";\n    SharePolicyPermissionsEnum[\"Order\"] = \"order\";\n})(SharePolicyPermissionsEnum = exports.SharePolicyPermissionsEnum || (exports.SharePolicyPermissionsEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar UnsharePolicyPermissionsEnum;\n(function (UnsharePolicyPermissionsEnum) {\n    UnsharePolicyPermissionsEnum[\"Read\"] = \"read\";\n    UnsharePolicyPermissionsEnum[\"Update\"] = \"update\";\n    UnsharePolicyPermissionsEnum[\"Delete\"] = \"delete\";\n    UnsharePolicyPermissionsEnum[\"Order\"] = \"order\";\n})(UnsharePolicyPermissionsEnum = exports.UnsharePolicyPermissionsEnum || (exports.UnsharePolicyPermissionsEnum = {}));\n/**\n * DefaultApi - axios parameter creator\n * @export\n */\nexports.DefaultApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         *\n         * @summary Return this API document in JSON format\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getDocumentation: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/openapi.json\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Performs a GraphQL Query\n         * @summary Perform a GraphQL Query\n         * @param {GraphQLRequest} graphQLRequest GraphQL Query Request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postGraphQL: function (graphQLRequest, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'graphQLRequest' is not null or undefined\n                    if (graphQLRequest === null || graphQLRequest === undefined) {\n                        throw new base_1.RequiredError('graphQLRequest', 'Required parameter graphQLRequest was null or undefined when calling postGraphQL.');\n                    }\n                    localVarPath = \"/graphql\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof graphQLRequest !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(graphQLRequest !== undefined ? graphQLRequest : {}) : (graphQLRequest || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * DefaultApi - functional programming interface\n * @export\n */\nexports.DefaultApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Return this API document in JSON format\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getDocumentation: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.DefaultApiAxiosParamCreator(configuration).getDocumentation(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Performs a GraphQL Query\n         * @summary Perform a GraphQL Query\n         * @param {GraphQLRequest} graphQLRequest GraphQL Query Request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postGraphQL: function (graphQLRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.DefaultApiAxiosParamCreator(configuration).postGraphQL(graphQLRequest, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * DefaultApi - factory interface\n * @export\n */\nexports.DefaultApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Return this API document in JSON format\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getDocumentation: function (options) {\n            return exports.DefaultApiFp(configuration).getDocumentation(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Performs a GraphQL Query\n         * @summary Perform a GraphQL Query\n         * @param {GraphQLRequest} graphQLRequest GraphQL Query Request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postGraphQL: function (graphQLRequest, options) {\n            return exports.DefaultApiFp(configuration).postGraphQL(graphQLRequest, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * DefaultApi - object-oriented interface\n * @export\n * @class DefaultApi\n * @extends {BaseAPI}\n */\nvar DefaultApi = /** @class */ (function (_super) {\n    __extends(DefaultApi, _super);\n    function DefaultApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Return this API document in JSON format\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    DefaultApi.prototype.getDocumentation = function (options) {\n        var _this = this;\n        return exports.DefaultApiFp(this.configuration).getDocumentation(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Performs a GraphQL Query\n     * @summary Perform a GraphQL Query\n     * @param {GraphQLRequest} graphQLRequest GraphQL Query Request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    DefaultApi.prototype.postGraphQL = function (graphQLRequest, options) {\n        var _this = this;\n        return exports.DefaultApiFp(this.configuration).postGraphQL(graphQLRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return DefaultApi;\n}(base_1.BaseAPI));\nexports.DefaultApi = DefaultApi;\n/**\n * IconApi - axios parameter creator\n * @export\n */\nexports.IconApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Creates an Icon from the specified parameters\n         * @summary Create an Icon\n         * @param {any} [content] The binary image contents, maximum size is 250KB\n         * @param {string} [portfolioId] The Portfolio this Icon belongs to\n         * @param {string} [portfolioItemId] The Portfolio Item this Icon belongs to\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createIcon: function (content, portfolioId, portfolioItemId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarFormParams, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/icons\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarFormParams = new FormData();\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (content !== undefined) {\n                        localVarFormParams.append('content', content);\n                    }\n                    if (portfolioId !== undefined) {\n                        localVarFormParams.append('portfolio_id', portfolioId);\n                    }\n                    if (portfolioItemId !== undefined) {\n                        localVarFormParams.append('portfolio_item_id', portfolioItemId);\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'multipart/form-data';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = localVarFormParams;\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Deletes the icon based on the icon ID passed\n         * @summary Delete an existing Icon\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyIcon: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling destroyIcon.');\n                    }\n                    localVarPath = \"/icons/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * IconApi - functional programming interface\n * @export\n */\nexports.IconApiFp = function (configuration) {\n    return {\n        /**\n         * Creates an Icon from the specified parameters\n         * @summary Create an Icon\n         * @param {any} [content] The binary image contents, maximum size is 250KB\n         * @param {string} [portfolioId] The Portfolio this Icon belongs to\n         * @param {string} [portfolioItemId] The Portfolio Item this Icon belongs to\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createIcon: function (content, portfolioId, portfolioItemId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.IconApiAxiosParamCreator(configuration).createIcon(content, portfolioId, portfolioItemId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Deletes the icon based on the icon ID passed\n         * @summary Delete an existing Icon\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyIcon: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.IconApiAxiosParamCreator(configuration).destroyIcon(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * IconApi - factory interface\n * @export\n */\nexports.IconApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Creates an Icon from the specified parameters\n         * @summary Create an Icon\n         * @param {any} [content] The binary image contents, maximum size is 250KB\n         * @param {string} [portfolioId] The Portfolio this Icon belongs to\n         * @param {string} [portfolioItemId] The Portfolio Item this Icon belongs to\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createIcon: function (content, portfolioId, portfolioItemId, options) {\n            return exports.IconApiFp(configuration).createIcon(content, portfolioId, portfolioItemId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Deletes the icon based on the icon ID passed\n         * @summary Delete an existing Icon\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyIcon: function (id, options) {\n            return exports.IconApiFp(configuration).destroyIcon(id, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * IconApi - object-oriented interface\n * @export\n * @class IconApi\n * @extends {BaseAPI}\n */\nvar IconApi = /** @class */ (function (_super) {\n    __extends(IconApi, _super);\n    function IconApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates an Icon from the specified parameters\n     * @summary Create an Icon\n     * @param {any} [content] The binary image contents, maximum size is 250KB\n     * @param {string} [portfolioId] The Portfolio this Icon belongs to\n     * @param {string} [portfolioItemId] The Portfolio Item this Icon belongs to\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof IconApi\n     */\n    IconApi.prototype.createIcon = function (content, portfolioId, portfolioItemId, options) {\n        var _this = this;\n        return exports.IconApiFp(this.configuration).createIcon(content, portfolioId, portfolioItemId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Deletes the icon based on the icon ID passed\n     * @summary Delete an existing Icon\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof IconApi\n     */\n    IconApi.prototype.destroyIcon = function (id, options) {\n        var _this = this;\n        return exports.IconApiFp(this.configuration).destroyIcon(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return IconApi;\n}(base_1.BaseAPI));\nexports.IconApi = IconApi;\n/**\n * OrderApi - axios parameter creator\n * @export\n */\nexports.OrderApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Adds an order item to an order in pending state\n         * @summary Add an order item to an order in pending state\n         * @param {string} orderId The Order ID\n         * @param {OrderItem} orderItem\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addToOrder: function (orderId, orderItem, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderId' is not null or undefined\n                    if (orderId === null || orderId === undefined) {\n                        throw new base_1.RequiredError('orderId', 'Required parameter orderId was null or undefined when calling addToOrder.');\n                    }\n                    // verify required parameter 'orderItem' is not null or undefined\n                    if (orderItem === null || orderItem === undefined) {\n                        throw new base_1.RequiredError('orderItem', 'Required parameter orderItem was null or undefined when calling addToOrder.');\n                    }\n                    localVarPath = \"/orders/{order_id}/order_items\"\n                        .replace(\"{\" + \"order_id\" + \"}\", encodeURIComponent(String(orderId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof orderItem !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(orderItem !== undefined ? orderItem : {}) : (orderItem || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns an updated order.\n         * @summary Cancels a given order\n         * @param {string} orderId The Order ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        cancelOrder: function (orderId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderId' is not null or undefined\n                    if (orderId === null || orderId === undefined) {\n                        throw new base_1.RequiredError('orderId', 'Required parameter orderId was null or undefined when calling cancelOrder.');\n                    }\n                    localVarPath = \"/orders/{order_id}/cancel\"\n                        .replace(\"{\" + \"order_id\" + \"}\", encodeURIComponent(String(orderId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Creates a new order.\n         * @summary Create a new order\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createOrder: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/orders\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Deletes the Order based on order ID passed\n         * @summary Delete an existing Order\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrder: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling destroyOrder.');\n                    }\n                    localVarPath = \"/orders/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of items associated with an order.\n         * @summary Gets a list of items in a given order\n         * @param {string} orderId The Order ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItemsFromOrder: function (orderId, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderId' is not null or undefined\n                    if (orderId === null || orderId === undefined) {\n                        throw new base_1.RequiredError('orderId', 'Required parameter orderId was null or undefined when calling listOrderItemsFromOrder.');\n                    }\n                    localVarPath = \"/orders/{order_id}/order_items\"\n                        .replace(\"{\" + \"order_id\" + \"}\", encodeURIComponent(String(orderId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of progress messages associated with an order. As the order is being processed the provider can update the progress messages.\n         * @summary Gets a list of progress messages in an order\n         * @param {string} orderId The Order ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderProgressMessages: function (orderId, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderId' is not null or undefined\n                    if (orderId === null || orderId === undefined) {\n                        throw new base_1.RequiredError('orderId', 'Required parameter orderId was null or undefined when calling listOrderProgressMessages.');\n                    }\n                    localVarPath = \"/orders/{order_id}/progress_messages\"\n                        .replace(\"{\" + \"order_id\" + \"}\", encodeURIComponent(String(orderId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of orders associated with the logged in user.\n         * @summary Get a list of orders\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrders: function (limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/orders\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Restores the order specified by the order ID.\n         * @summary Restore specific Order\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        restoreOrder: function (id, restoreKey, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling restoreOrder.');\n                    }\n                    // verify required parameter 'restoreKey' is not null or undefined\n                    if (restoreKey === null || restoreKey === undefined) {\n                        throw new base_1.RequiredError('restoreKey', 'Required parameter restoreKey was null or undefined when calling restoreOrder.');\n                    }\n                    localVarPath = \"/orders/{id}/restore\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof restoreKey !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(restoreKey !== undefined ? restoreKey : {}) : (restoreKey || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Get a specific order based on the order ID\n         * @summary Get a specific order\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrder: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showOrder.');\n                    }\n                    localVarPath = \"/orders/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets an order item associated with an order.\n         * @summary Gets an individual order item from a given order\n         * @param {string} orderId The Order ID\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderItemFromOrder: function (orderId, id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderId' is not null or undefined\n                    if (orderId === null || orderId === undefined) {\n                        throw new base_1.RequiredError('orderId', 'Required parameter orderId was null or undefined when calling showOrderItemFromOrder.');\n                    }\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showOrderItemFromOrder.');\n                    }\n                    localVarPath = \"/orders/{order_id}/order_items/{id}\"\n                        .replace(\"{\" + \"order_id\" + \"}\", encodeURIComponent(String(orderId)))\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns an updated order.\n         * @summary Submit a given order\n         * @param {string} orderId The Order ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        submitOrder: function (orderId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderId' is not null or undefined\n                    if (orderId === null || orderId === undefined) {\n                        throw new base_1.RequiredError('orderId', 'Required parameter orderId was null or undefined when calling submitOrder.');\n                    }\n                    localVarPath = \"/orders/{order_id}/submit_order\"\n                        .replace(\"{\" + \"order_id\" + \"}\", encodeURIComponent(String(orderId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * OrderApi - functional programming interface\n * @export\n */\nexports.OrderApiFp = function (configuration) {\n    return {\n        /**\n         * Adds an order item to an order in pending state\n         * @summary Add an order item to an order in pending state\n         * @param {string} orderId The Order ID\n         * @param {OrderItem} orderItem\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addToOrder: function (orderId, orderItem, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).addToOrder(orderId, orderItem, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns an updated order.\n         * @summary Cancels a given order\n         * @param {string} orderId The Order ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        cancelOrder: function (orderId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).cancelOrder(orderId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Creates a new order.\n         * @summary Create a new order\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createOrder: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).createOrder(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Deletes the Order based on order ID passed\n         * @summary Delete an existing Order\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrder: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).destroyOrder(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of items associated with an order.\n         * @summary Gets a list of items in a given order\n         * @param {string} orderId The Order ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItemsFromOrder: function (orderId, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).listOrderItemsFromOrder(orderId, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of progress messages associated with an order. As the order is being processed the provider can update the progress messages.\n         * @summary Gets a list of progress messages in an order\n         * @param {string} orderId The Order ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderProgressMessages: function (orderId, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).listOrderProgressMessages(orderId, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of orders associated with the logged in user.\n         * @summary Get a list of orders\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrders: function (limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).listOrders(limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Restores the order specified by the order ID.\n         * @summary Restore specific Order\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        restoreOrder: function (id, restoreKey, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).restoreOrder(id, restoreKey, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Get a specific order based on the order ID\n         * @summary Get a specific order\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrder: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).showOrder(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets an order item associated with an order.\n         * @summary Gets an individual order item from a given order\n         * @param {string} orderId The Order ID\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderItemFromOrder: function (orderId, id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).showOrderItemFromOrder(orderId, id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns an updated order.\n         * @summary Submit a given order\n         * @param {string} orderId The Order ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        submitOrder: function (orderId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderApiAxiosParamCreator(configuration).submitOrder(orderId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * OrderApi - factory interface\n * @export\n */\nexports.OrderApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Adds an order item to an order in pending state\n         * @summary Add an order item to an order in pending state\n         * @param {string} orderId The Order ID\n         * @param {OrderItem} orderItem\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addToOrder: function (orderId, orderItem, options) {\n            return exports.OrderApiFp(configuration).addToOrder(orderId, orderItem, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns an updated order.\n         * @summary Cancels a given order\n         * @param {string} orderId The Order ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        cancelOrder: function (orderId, options) {\n            return exports.OrderApiFp(configuration).cancelOrder(orderId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Creates a new order.\n         * @summary Create a new order\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createOrder: function (options) {\n            return exports.OrderApiFp(configuration).createOrder(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Deletes the Order based on order ID passed\n         * @summary Delete an existing Order\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrder: function (id, options) {\n            return exports.OrderApiFp(configuration).destroyOrder(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of items associated with an order.\n         * @summary Gets a list of items in a given order\n         * @param {string} orderId The Order ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItemsFromOrder: function (orderId, limit, offset, filter, sortBy, options) {\n            return exports.OrderApiFp(configuration).listOrderItemsFromOrder(orderId, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of progress messages associated with an order. As the order is being processed the provider can update the progress messages.\n         * @summary Gets a list of progress messages in an order\n         * @param {string} orderId The Order ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderProgressMessages: function (orderId, limit, offset, filter, sortBy, options) {\n            return exports.OrderApiFp(configuration).listOrderProgressMessages(orderId, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of orders associated with the logged in user.\n         * @summary Get a list of orders\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrders: function (limit, offset, filter, sortBy, options) {\n            return exports.OrderApiFp(configuration).listOrders(limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Restores the order specified by the order ID.\n         * @summary Restore specific Order\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        restoreOrder: function (id, restoreKey, options) {\n            return exports.OrderApiFp(configuration).restoreOrder(id, restoreKey, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Get a specific order based on the order ID\n         * @summary Get a specific order\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrder: function (id, options) {\n            return exports.OrderApiFp(configuration).showOrder(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets an order item associated with an order.\n         * @summary Gets an individual order item from a given order\n         * @param {string} orderId The Order ID\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderItemFromOrder: function (orderId, id, options) {\n            return exports.OrderApiFp(configuration).showOrderItemFromOrder(orderId, id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns an updated order.\n         * @summary Submit a given order\n         * @param {string} orderId The Order ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        submitOrder: function (orderId, options) {\n            return exports.OrderApiFp(configuration).submitOrder(orderId, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * OrderApi - object-oriented interface\n * @export\n * @class OrderApi\n * @extends {BaseAPI}\n */\nvar OrderApi = /** @class */ (function (_super) {\n    __extends(OrderApi, _super);\n    function OrderApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Adds an order item to an order in pending state\n     * @summary Add an order item to an order in pending state\n     * @param {string} orderId The Order ID\n     * @param {OrderItem} orderItem\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.addToOrder = function (orderId, orderItem, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).addToOrder(orderId, orderItem, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns an updated order.\n     * @summary Cancels a given order\n     * @param {string} orderId The Order ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.cancelOrder = function (orderId, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).cancelOrder(orderId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Creates a new order.\n     * @summary Create a new order\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.createOrder = function (options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).createOrder(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Deletes the Order based on order ID passed\n     * @summary Delete an existing Order\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.destroyOrder = function (id, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).destroyOrder(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of items associated with an order.\n     * @summary Gets a list of items in a given order\n     * @param {string} orderId The Order ID\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.listOrderItemsFromOrder = function (orderId, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).listOrderItemsFromOrder(orderId, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of progress messages associated with an order. As the order is being processed the provider can update the progress messages.\n     * @summary Gets a list of progress messages in an order\n     * @param {string} orderId The Order ID\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.listOrderProgressMessages = function (orderId, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).listOrderProgressMessages(orderId, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of orders associated with the logged in user.\n     * @summary Get a list of orders\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.listOrders = function (limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).listOrders(limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Restores the order specified by the order ID.\n     * @summary Restore specific Order\n     * @param {string} id ID of the resource\n     * @param {RestoreKey} restoreKey\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.restoreOrder = function (id, restoreKey, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).restoreOrder(id, restoreKey, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Get a specific order based on the order ID\n     * @summary Get a specific order\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.showOrder = function (id, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).showOrder(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets an order item associated with an order.\n     * @summary Gets an individual order item from a given order\n     * @param {string} orderId The Order ID\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.showOrderItemFromOrder = function (orderId, id, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).showOrderItemFromOrder(orderId, id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns an updated order.\n     * @summary Submit a given order\n     * @param {string} orderId The Order ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderApi\n     */\n    OrderApi.prototype.submitOrder = function (orderId, options) {\n        var _this = this;\n        return exports.OrderApiFp(this.configuration).submitOrder(orderId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return OrderApi;\n}(base_1.BaseAPI));\nexports.OrderApi = OrderApi;\n/**\n * OrderItemApi - axios parameter creator\n * @export\n */\nexports.OrderItemApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Deletes the order item  based on order item ID passed\n         * @summary Delete an existing OrderItem\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrderItem: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling destroyOrderItem.');\n                    }\n                    localVarPath = \"/order_items/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of approval request associated with an order item. As the item is being approved one can check the status of the approvals.\n         * @summary Gets a list of approval requests for an item\n         * @param {string} orderItemId The Order Item ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listApprovalRequests: function (orderItemId, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderItemId' is not null or undefined\n                    if (orderItemId === null || orderItemId === undefined) {\n                        throw new base_1.RequiredError('orderItemId', 'Required parameter orderItemId was null or undefined when calling listApprovalRequests.');\n                    }\n                    localVarPath = \"/order_items/{order_item_id}/approval_requests\"\n                        .replace(\"{\" + \"order_item_id\" + \"}\", encodeURIComponent(String(orderItemId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of progress messages associated with an order item. As the item is being processed the provider can update the progress messages.\n         * @summary Gets a list of progress messages in an item\n         * @param {string} orderItemId The Order Item ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItemProgressMessages: function (orderItemId, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderItemId' is not null or undefined\n                    if (orderItemId === null || orderItemId === undefined) {\n                        throw new base_1.RequiredError('orderItemId', 'Required parameter orderItemId was null or undefined when calling listOrderItemProgressMessages.');\n                    }\n                    localVarPath = \"/order_items/{order_item_id}/progress_messages\"\n                        .replace(\"{\" + \"order_item_id\" + \"}\", encodeURIComponent(String(orderItemId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of order items.\n         * @summary List Order Items\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItems: function (limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/order_items\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Restores the order item specified by the order item ID.\n         * @summary Restore specific Order item\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        restoreOrderItem: function (id, restoreKey, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling restoreOrderItem.');\n                    }\n                    // verify required parameter 'restoreKey' is not null or undefined\n                    if (restoreKey === null || restoreKey === undefined) {\n                        throw new base_1.RequiredError('restoreKey', 'Required parameter restoreKey was null or undefined when calling restoreOrderItem.');\n                    }\n                    localVarPath = \"/order_items/{id}/restore\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof restoreKey !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(restoreKey !== undefined ? restoreKey : {}) : (restoreKey || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a specific order item based on the order item ID passed\n         * @summary Gets a specific order item\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderItem: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showOrderItem.');\n                    }\n                    localVarPath = \"/order_items/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * OrderItemApi - functional programming interface\n * @export\n */\nexports.OrderItemApiFp = function (configuration) {\n    return {\n        /**\n         * Deletes the order item  based on order item ID passed\n         * @summary Delete an existing OrderItem\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrderItem: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderItemApiAxiosParamCreator(configuration).destroyOrderItem(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of approval request associated with an order item. As the item is being approved one can check the status of the approvals.\n         * @summary Gets a list of approval requests for an item\n         * @param {string} orderItemId The Order Item ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listApprovalRequests: function (orderItemId, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderItemApiAxiosParamCreator(configuration).listApprovalRequests(orderItemId, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of progress messages associated with an order item. As the item is being processed the provider can update the progress messages.\n         * @summary Gets a list of progress messages in an item\n         * @param {string} orderItemId The Order Item ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItemProgressMessages: function (orderItemId, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderItemApiAxiosParamCreator(configuration).listOrderItemProgressMessages(orderItemId, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of order items.\n         * @summary List Order Items\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItems: function (limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderItemApiAxiosParamCreator(configuration).listOrderItems(limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Restores the order item specified by the order item ID.\n         * @summary Restore specific Order item\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        restoreOrderItem: function (id, restoreKey, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderItemApiAxiosParamCreator(configuration).restoreOrderItem(id, restoreKey, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a specific order item based on the order item ID passed\n         * @summary Gets a specific order item\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderItem: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderItemApiAxiosParamCreator(configuration).showOrderItem(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * OrderItemApi - factory interface\n * @export\n */\nexports.OrderItemApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Deletes the order item  based on order item ID passed\n         * @summary Delete an existing OrderItem\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrderItem: function (id, options) {\n            return exports.OrderItemApiFp(configuration).destroyOrderItem(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of approval request associated with an order item. As the item is being approved one can check the status of the approvals.\n         * @summary Gets a list of approval requests for an item\n         * @param {string} orderItemId The Order Item ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listApprovalRequests: function (orderItemId, limit, offset, filter, sortBy, options) {\n            return exports.OrderItemApiFp(configuration).listApprovalRequests(orderItemId, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of progress messages associated with an order item. As the item is being processed the provider can update the progress messages.\n         * @summary Gets a list of progress messages in an item\n         * @param {string} orderItemId The Order Item ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItemProgressMessages: function (orderItemId, limit, offset, filter, sortBy, options) {\n            return exports.OrderItemApiFp(configuration).listOrderItemProgressMessages(orderItemId, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of order items.\n         * @summary List Order Items\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderItems: function (limit, offset, filter, sortBy, options) {\n            return exports.OrderItemApiFp(configuration).listOrderItems(limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Restores the order item specified by the order item ID.\n         * @summary Restore specific Order item\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        restoreOrderItem: function (id, restoreKey, options) {\n            return exports.OrderItemApiFp(configuration).restoreOrderItem(id, restoreKey, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a specific order item based on the order item ID passed\n         * @summary Gets a specific order item\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderItem: function (id, options) {\n            return exports.OrderItemApiFp(configuration).showOrderItem(id, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * OrderItemApi - object-oriented interface\n * @export\n * @class OrderItemApi\n * @extends {BaseAPI}\n */\nvar OrderItemApi = /** @class */ (function (_super) {\n    __extends(OrderItemApi, _super);\n    function OrderItemApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Deletes the order item  based on order item ID passed\n     * @summary Delete an existing OrderItem\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderItemApi\n     */\n    OrderItemApi.prototype.destroyOrderItem = function (id, options) {\n        var _this = this;\n        return exports.OrderItemApiFp(this.configuration).destroyOrderItem(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of approval request associated with an order item. As the item is being approved one can check the status of the approvals.\n     * @summary Gets a list of approval requests for an item\n     * @param {string} orderItemId The Order Item ID\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderItemApi\n     */\n    OrderItemApi.prototype.listApprovalRequests = function (orderItemId, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.OrderItemApiFp(this.configuration).listApprovalRequests(orderItemId, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of progress messages associated with an order item. As the item is being processed the provider can update the progress messages.\n     * @summary Gets a list of progress messages in an item\n     * @param {string} orderItemId The Order Item ID\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderItemApi\n     */\n    OrderItemApi.prototype.listOrderItemProgressMessages = function (orderItemId, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.OrderItemApiFp(this.configuration).listOrderItemProgressMessages(orderItemId, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of order items.\n     * @summary List Order Items\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderItemApi\n     */\n    OrderItemApi.prototype.listOrderItems = function (limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.OrderItemApiFp(this.configuration).listOrderItems(limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Restores the order item specified by the order item ID.\n     * @summary Restore specific Order item\n     * @param {string} id ID of the resource\n     * @param {RestoreKey} restoreKey\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderItemApi\n     */\n    OrderItemApi.prototype.restoreOrderItem = function (id, restoreKey, options) {\n        var _this = this;\n        return exports.OrderItemApiFp(this.configuration).restoreOrderItem(id, restoreKey, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a specific order item based on the order item ID passed\n     * @summary Gets a specific order item\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderItemApi\n     */\n    OrderItemApi.prototype.showOrderItem = function (id, options) {\n        var _this = this;\n        return exports.OrderItemApiFp(this.configuration).showOrderItem(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return OrderItemApi;\n}(base_1.BaseAPI));\nexports.OrderItemApi = OrderItemApi;\n/**\n * OrderProcessApi - axios parameter creator\n * @export\n */\nexports.OrderProcessApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Defines the product that will be executed after ordering when using this Order Process\n         * @summary Adds an \\'after\\' product for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOrderProcessAfterItem: function (id, orderProcessPortfolioItemId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling addOrderProcessAfterItem.');\n                    }\n                    // verify required parameter 'orderProcessPortfolioItemId' is not null or undefined\n                    if (orderProcessPortfolioItemId === null || orderProcessPortfolioItemId === undefined) {\n                        throw new base_1.RequiredError('orderProcessPortfolioItemId', 'Required parameter orderProcessPortfolioItemId was null or undefined when calling addOrderProcessAfterItem.');\n                    }\n                    localVarPath = \"/order_processes/{id}/after_portfolio_item\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof orderProcessPortfolioItemId !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(orderProcessPortfolioItemId !== undefined ? orderProcessPortfolioItemId : {}) : (orderProcessPortfolioItemId || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Defines the product that will be executed before ordering when using this Order Process\n         * @summary Adds a \\'before\\' product for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOrderProcessBeforeItem: function (id, orderProcessPortfolioItemId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling addOrderProcessBeforeItem.');\n                    }\n                    // verify required parameter 'orderProcessPortfolioItemId' is not null or undefined\n                    if (orderProcessPortfolioItemId === null || orderProcessPortfolioItemId === undefined) {\n                        throw new base_1.RequiredError('orderProcessPortfolioItemId', 'Required parameter orderProcessPortfolioItemId was null or undefined when calling addOrderProcessBeforeItem.');\n                    }\n                    localVarPath = \"/order_processes/{id}/before_portfolio_item\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof orderProcessPortfolioItemId !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(orderProcessPortfolioItemId !== undefined ? orderProcessPortfolioItemId : {}) : (orderProcessPortfolioItemId || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Defines the product that will be executed on return when using this Order Process\n         * @summary Adds \\'return\\' product for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOrderProcessReturnItem: function (id, orderProcessPortfolioItemId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling addOrderProcessReturnItem.');\n                    }\n                    // verify required parameter 'orderProcessPortfolioItemId' is not null or undefined\n                    if (orderProcessPortfolioItemId === null || orderProcessPortfolioItemId === undefined) {\n                        throw new base_1.RequiredError('orderProcessPortfolioItemId', 'Required parameter orderProcessPortfolioItemId was null or undefined when calling addOrderProcessReturnItem.');\n                    }\n                    localVarPath = \"/order_processes/{id}/return_portfolio_item\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof orderProcessPortfolioItemId !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(orderProcessPortfolioItemId !== undefined ? orderProcessPortfolioItemId : {}) : (orderProcessPortfolioItemId || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Adds an order process.\n         * @summary Add a new order process\n         * @param {OrderProcess} orderProcess Parameters needed to add an OrderProcess\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createOrderProcess: function (orderProcess, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'orderProcess' is not null or undefined\n                    if (orderProcess === null || orderProcess === undefined) {\n                        throw new base_1.RequiredError('orderProcess', 'Required parameter orderProcess was null or undefined when calling createOrderProcess.');\n                    }\n                    localVarPath = \"/order_processes\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof orderProcess !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(orderProcess !== undefined ? orderProcess : {}) : (orderProcess || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Deletes the order process specified by the ID.\n         * @summary Delete an existing order process\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrderProcess: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling destroyOrderProcess.');\n                    }\n                    localVarPath = \"/order_processes/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Links a tag to an order process\n         * @summary Links a tag to an order process\n         * @param {string} id ID of the resource\n         * @param {ResourceObject} resourceObject\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        linkTagToOrderProcess: function (id, resourceObject, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling linkTagToOrderProcess.');\n                    }\n                    // verify required parameter 'resourceObject' is not null or undefined\n                    if (resourceObject === null || resourceObject === undefined) {\n                        throw new base_1.RequiredError('resourceObject', 'Required parameter resourceObject was null or undefined when calling linkTagToOrderProcess.');\n                    }\n                    localVarPath = \"/order_processes/{id}/link\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof resourceObject !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(resourceObject !== undefined ? resourceObject : {}) : (resourceObject || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of order processes. Optionally select order processes linked to a resource object whose app_name, object_type and object_id are specified by query parameters.\n         * @summary List OrderProcesses\n         * @param {string} [appName] Name of the application.\n         * @param {string} [objectId] Id of the resource object.\n         * @param {string} [objectType] Type of the resource object.\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderProcesses: function (appName, objectId, objectType, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/order_processes\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (appName !== undefined) {\n                        localVarQueryParameter['app_name'] = appName;\n                    }\n                    if (objectId !== undefined) {\n                        localVarQueryParameter['object_id'] = objectId;\n                    }\n                    if (objectType !== undefined) {\n                        localVarQueryParameter['object_type'] = objectType;\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Removes the association to the product(s) defined in the \\'before\\' and/or \\'after\\' that would be executed when using this Order Process\n         * @summary Removes the \\'before\\' and/or \\'after\\' product(s) for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessAssociationsToRemove} orderProcessAssociationsToRemove\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removeOrderProcessAssociation: function (id, orderProcessAssociationsToRemove, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling removeOrderProcessAssociation.');\n                    }\n                    // verify required parameter 'orderProcessAssociationsToRemove' is not null or undefined\n                    if (orderProcessAssociationsToRemove === null || orderProcessAssociationsToRemove === undefined) {\n                        throw new base_1.RequiredError('orderProcessAssociationsToRemove', 'Required parameter orderProcessAssociationsToRemove was null or undefined when calling removeOrderProcessAssociation.');\n                    }\n                    localVarPath = \"/order_processes/{id}/remove_association\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof orderProcessAssociationsToRemove !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(orderProcessAssociationsToRemove !== undefined ? orderProcessAssociationsToRemove : {}) : (orderProcessAssociationsToRemove || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets the order process specified by the order process ID.\n         * @summary Get a specific order process\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderProcess: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showOrderProcess.');\n                    }\n                    localVarPath = \"/order_processes/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Unlinks a tag from an order process\n         * @summary Unlinks a tag from an order process\n         * @param {string} id ID of the resource\n         * @param {ResourceObject} resourceObject\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unlinkTagFromOrderProcess: function (id, resourceObject, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling unlinkTagFromOrderProcess.');\n                    }\n                    // verify required parameter 'resourceObject' is not null or undefined\n                    if (resourceObject === null || resourceObject === undefined) {\n                        throw new base_1.RequiredError('resourceObject', 'Required parameter resourceObject was null or undefined when calling unlinkTagFromOrderProcess.');\n                    }\n                    localVarPath = \"/order_processes/{id}/unlink\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof resourceObject !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(resourceObject !== undefined ? resourceObject : {}) : (resourceObject || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns the edited order process.\n         * @summary Edit an existing order process\n         * @param {string} id ID of the resource\n         * @param {OrderProcess} orderProcess Parameters needed to update a OrderProcess\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateOrderProcess: function (id, orderProcess, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling updateOrderProcess.');\n                    }\n                    // verify required parameter 'orderProcess' is not null or undefined\n                    if (orderProcess === null || orderProcess === undefined) {\n                        throw new base_1.RequiredError('orderProcess', 'Required parameter orderProcess was null or undefined when calling updateOrderProcess.');\n                    }\n                    localVarPath = \"/order_processes/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof orderProcess !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(orderProcess !== undefined ? orderProcess : {}) : (orderProcess || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * OrderProcessApi - functional programming interface\n * @export\n */\nexports.OrderProcessApiFp = function (configuration) {\n    return {\n        /**\n         * Defines the product that will be executed after ordering when using this Order Process\n         * @summary Adds an \\'after\\' product for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOrderProcessAfterItem: function (id, orderProcessPortfolioItemId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).addOrderProcessAfterItem(id, orderProcessPortfolioItemId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Defines the product that will be executed before ordering when using this Order Process\n         * @summary Adds a \\'before\\' product for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOrderProcessBeforeItem: function (id, orderProcessPortfolioItemId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).addOrderProcessBeforeItem(id, orderProcessPortfolioItemId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Defines the product that will be executed on return when using this Order Process\n         * @summary Adds \\'return\\' product for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOrderProcessReturnItem: function (id, orderProcessPortfolioItemId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).addOrderProcessReturnItem(id, orderProcessPortfolioItemId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Adds an order process.\n         * @summary Add a new order process\n         * @param {OrderProcess} orderProcess Parameters needed to add an OrderProcess\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createOrderProcess: function (orderProcess, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).createOrderProcess(orderProcess, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Deletes the order process specified by the ID.\n         * @summary Delete an existing order process\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrderProcess: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).destroyOrderProcess(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Links a tag to an order process\n         * @summary Links a tag to an order process\n         * @param {string} id ID of the resource\n         * @param {ResourceObject} resourceObject\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        linkTagToOrderProcess: function (id, resourceObject, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).linkTagToOrderProcess(id, resourceObject, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of order processes. Optionally select order processes linked to a resource object whose app_name, object_type and object_id are specified by query parameters.\n         * @summary List OrderProcesses\n         * @param {string} [appName] Name of the application.\n         * @param {string} [objectId] Id of the resource object.\n         * @param {string} [objectType] Type of the resource object.\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderProcesses: function (appName, objectId, objectType, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).listOrderProcesses(appName, objectId, objectType, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Removes the association to the product(s) defined in the \\'before\\' and/or \\'after\\' that would be executed when using this Order Process\n         * @summary Removes the \\'before\\' and/or \\'after\\' product(s) for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessAssociationsToRemove} orderProcessAssociationsToRemove\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removeOrderProcessAssociation: function (id, orderProcessAssociationsToRemove, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).removeOrderProcessAssociation(id, orderProcessAssociationsToRemove, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets the order process specified by the order process ID.\n         * @summary Get a specific order process\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderProcess: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).showOrderProcess(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Unlinks a tag from an order process\n         * @summary Unlinks a tag from an order process\n         * @param {string} id ID of the resource\n         * @param {ResourceObject} resourceObject\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unlinkTagFromOrderProcess: function (id, resourceObject, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).unlinkTagFromOrderProcess(id, resourceObject, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns the edited order process.\n         * @summary Edit an existing order process\n         * @param {string} id ID of the resource\n         * @param {OrderProcess} orderProcess Parameters needed to update a OrderProcess\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateOrderProcess: function (id, orderProcess, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.OrderProcessApiAxiosParamCreator(configuration).updateOrderProcess(id, orderProcess, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * OrderProcessApi - factory interface\n * @export\n */\nexports.OrderProcessApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Defines the product that will be executed after ordering when using this Order Process\n         * @summary Adds an \\'after\\' product for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOrderProcessAfterItem: function (id, orderProcessPortfolioItemId, options) {\n            return exports.OrderProcessApiFp(configuration).addOrderProcessAfterItem(id, orderProcessPortfolioItemId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Defines the product that will be executed before ordering when using this Order Process\n         * @summary Adds a \\'before\\' product for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOrderProcessBeforeItem: function (id, orderProcessPortfolioItemId, options) {\n            return exports.OrderProcessApiFp(configuration).addOrderProcessBeforeItem(id, orderProcessPortfolioItemId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Defines the product that will be executed on return when using this Order Process\n         * @summary Adds \\'return\\' product for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addOrderProcessReturnItem: function (id, orderProcessPortfolioItemId, options) {\n            return exports.OrderProcessApiFp(configuration).addOrderProcessReturnItem(id, orderProcessPortfolioItemId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Adds an order process.\n         * @summary Add a new order process\n         * @param {OrderProcess} orderProcess Parameters needed to add an OrderProcess\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createOrderProcess: function (orderProcess, options) {\n            return exports.OrderProcessApiFp(configuration).createOrderProcess(orderProcess, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Deletes the order process specified by the ID.\n         * @summary Delete an existing order process\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyOrderProcess: function (id, options) {\n            return exports.OrderProcessApiFp(configuration).destroyOrderProcess(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Links a tag to an order process\n         * @summary Links a tag to an order process\n         * @param {string} id ID of the resource\n         * @param {ResourceObject} resourceObject\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        linkTagToOrderProcess: function (id, resourceObject, options) {\n            return exports.OrderProcessApiFp(configuration).linkTagToOrderProcess(id, resourceObject, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of order processes. Optionally select order processes linked to a resource object whose app_name, object_type and object_id are specified by query parameters.\n         * @summary List OrderProcesses\n         * @param {string} [appName] Name of the application.\n         * @param {string} [objectId] Id of the resource object.\n         * @param {string} [objectType] Type of the resource object.\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listOrderProcesses: function (appName, objectId, objectType, limit, offset, filter, sortBy, options) {\n            return exports.OrderProcessApiFp(configuration).listOrderProcesses(appName, objectId, objectType, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Removes the association to the product(s) defined in the \\'before\\' and/or \\'after\\' that would be executed when using this Order Process\n         * @summary Removes the \\'before\\' and/or \\'after\\' product(s) for an Order Process\n         * @param {string} id ID of the resource\n         * @param {OrderProcessAssociationsToRemove} orderProcessAssociationsToRemove\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removeOrderProcessAssociation: function (id, orderProcessAssociationsToRemove, options) {\n            return exports.OrderProcessApiFp(configuration).removeOrderProcessAssociation(id, orderProcessAssociationsToRemove, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets the order process specified by the order process ID.\n         * @summary Get a specific order process\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showOrderProcess: function (id, options) {\n            return exports.OrderProcessApiFp(configuration).showOrderProcess(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Unlinks a tag from an order process\n         * @summary Unlinks a tag from an order process\n         * @param {string} id ID of the resource\n         * @param {ResourceObject} resourceObject\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unlinkTagFromOrderProcess: function (id, resourceObject, options) {\n            return exports.OrderProcessApiFp(configuration).unlinkTagFromOrderProcess(id, resourceObject, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns the edited order process.\n         * @summary Edit an existing order process\n         * @param {string} id ID of the resource\n         * @param {OrderProcess} orderProcess Parameters needed to update a OrderProcess\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateOrderProcess: function (id, orderProcess, options) {\n            return exports.OrderProcessApiFp(configuration).updateOrderProcess(id, orderProcess, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * OrderProcessApi - object-oriented interface\n * @export\n * @class OrderProcessApi\n * @extends {BaseAPI}\n */\nvar OrderProcessApi = /** @class */ (function (_super) {\n    __extends(OrderProcessApi, _super);\n    function OrderProcessApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Defines the product that will be executed after ordering when using this Order Process\n     * @summary Adds an \\'after\\' product for an Order Process\n     * @param {string} id ID of the resource\n     * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.addOrderProcessAfterItem = function (id, orderProcessPortfolioItemId, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).addOrderProcessAfterItem(id, orderProcessPortfolioItemId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Defines the product that will be executed before ordering when using this Order Process\n     * @summary Adds a \\'before\\' product for an Order Process\n     * @param {string} id ID of the resource\n     * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.addOrderProcessBeforeItem = function (id, orderProcessPortfolioItemId, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).addOrderProcessBeforeItem(id, orderProcessPortfolioItemId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Defines the product that will be executed on return when using this Order Process\n     * @summary Adds \\'return\\' product for an Order Process\n     * @param {string} id ID of the resource\n     * @param {OrderProcessPortfolioItemId} orderProcessPortfolioItemId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.addOrderProcessReturnItem = function (id, orderProcessPortfolioItemId, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).addOrderProcessReturnItem(id, orderProcessPortfolioItemId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Adds an order process.\n     * @summary Add a new order process\n     * @param {OrderProcess} orderProcess Parameters needed to add an OrderProcess\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.createOrderProcess = function (orderProcess, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).createOrderProcess(orderProcess, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Deletes the order process specified by the ID.\n     * @summary Delete an existing order process\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.destroyOrderProcess = function (id, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).destroyOrderProcess(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Links a tag to an order process\n     * @summary Links a tag to an order process\n     * @param {string} id ID of the resource\n     * @param {ResourceObject} resourceObject\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.linkTagToOrderProcess = function (id, resourceObject, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).linkTagToOrderProcess(id, resourceObject, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of order processes. Optionally select order processes linked to a resource object whose app_name, object_type and object_id are specified by query parameters.\n     * @summary List OrderProcesses\n     * @param {string} [appName] Name of the application.\n     * @param {string} [objectId] Id of the resource object.\n     * @param {string} [objectType] Type of the resource object.\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.listOrderProcesses = function (appName, objectId, objectType, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).listOrderProcesses(appName, objectId, objectType, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Removes the association to the product(s) defined in the \\'before\\' and/or \\'after\\' that would be executed when using this Order Process\n     * @summary Removes the \\'before\\' and/or \\'after\\' product(s) for an Order Process\n     * @param {string} id ID of the resource\n     * @param {OrderProcessAssociationsToRemove} orderProcessAssociationsToRemove\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.removeOrderProcessAssociation = function (id, orderProcessAssociationsToRemove, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).removeOrderProcessAssociation(id, orderProcessAssociationsToRemove, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets the order process specified by the order process ID.\n     * @summary Get a specific order process\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.showOrderProcess = function (id, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).showOrderProcess(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Unlinks a tag from an order process\n     * @summary Unlinks a tag from an order process\n     * @param {string} id ID of the resource\n     * @param {ResourceObject} resourceObject\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.unlinkTagFromOrderProcess = function (id, resourceObject, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).unlinkTagFromOrderProcess(id, resourceObject, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns the edited order process.\n     * @summary Edit an existing order process\n     * @param {string} id ID of the resource\n     * @param {OrderProcess} orderProcess Parameters needed to update a OrderProcess\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OrderProcessApi\n     */\n    OrderProcessApi.prototype.updateOrderProcess = function (id, orderProcess, options) {\n        var _this = this;\n        return exports.OrderProcessApiFp(this.configuration).updateOrderProcess(id, orderProcess, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return OrderProcessApi;\n}(base_1.BaseAPI));\nexports.OrderProcessApi = OrderProcessApi;\n/**\n * PortfolioApi - axios parameter creator\n * @export\n */\nexports.PortfolioApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Adds a single tag to Portfolio object\n         * @summary Add Tag for Portfolio\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPortfolioTag: function (id, tag, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling addPortfolioTag.');\n                    }\n                    // verify required parameter 'tag' is not null or undefined\n                    if (tag === null || tag === undefined) {\n                        throw new base_1.RequiredError('tag', 'Required parameter tag was null or undefined when calling addPortfolioTag.');\n                    }\n                    localVarPath = \"/portfolios/{id}/tag\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof tag !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(tag !== undefined ? tag : {}) : (tag || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Adds a portfolio.\n         * @summary Add a new portfolio\n         * @param {Portfolio} portfolio Parameters needed to add a Portfolio\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPortfolio: function (portfolio, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolio' is not null or undefined\n                    if (portfolio === null || portfolio === undefined) {\n                        throw new base_1.RequiredError('portfolio', 'Required parameter portfolio was null or undefined when calling createPortfolio.');\n                    }\n                    localVarPath = \"/portfolios\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof portfolio !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(portfolio !== undefined ? portfolio : {}) : (portfolio || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Deletes the portfolio specified by the ID.\n         * @summary Delete an existing portfolio\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyPortfolio: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling destroyPortfolio.');\n                    }\n                    localVarPath = \"/portfolios/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets all portfilio items in the portfolio specified by the given ID.\n         * @summary Get all portfolio items from a specific portfolio\n         * @param {string} portfolioId The Portfolio ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        fetchPortfolioItemsWithPortfolio: function (portfolioId, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioId' is not null or undefined\n                    if (portfolioId === null || portfolioId === undefined) {\n                        throw new base_1.RequiredError('portfolioId', 'Required parameter portfolioId was null or undefined when calling fetchPortfolioItemsWithPortfolio.');\n                    }\n                    localVarPath = \"/portfolios/{portfolio_id}/portfolio_items\"\n                        .replace(\"{\" + \"portfolio_id\" + \"}\", encodeURIComponent(String(portfolioId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns an array of Tag objects\n         * @summary List Tags for Portfolio\n         * @param {string} id ID of the resource\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioTags: function (id, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling listPortfolioTags.');\n                    }\n                    localVarPath = \"/portfolios/{id}/tags\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of portfolios.\n         * @summary List portfolios\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolios: function (limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/portfolios\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Make a copy of the Portfolio.\n         * @summary Make a copy of the Portfolio\n         * @param {string} portfolioId The Portfolio ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postCopyPortfolio: function (portfolioId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioId' is not null or undefined\n                    if (portfolioId === null || portfolioId === undefined) {\n                        throw new base_1.RequiredError('portfolioId', 'Required parameter portfolioId was null or undefined when calling postCopyPortfolio.');\n                    }\n                    localVarPath = \"/portfolios/{portfolio_id}/copy\"\n                        .replace(\"{\" + \"portfolio_id\" + \"}\", encodeURIComponent(String(portfolioId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Remove Tags from Portfolio\n         * @summary Remove Tags from Portfolio\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removePortfolioTags: function (id, tag, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling removePortfolioTags.');\n                    }\n                    // verify required parameter 'tag' is not null or undefined\n                    if (tag === null || tag === undefined) {\n                        throw new base_1.RequiredError('tag', 'Required parameter tag was null or undefined when calling removePortfolioTags.');\n                    }\n                    localVarPath = \"/portfolios/{id}/untag\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof tag !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(tag !== undefined ? tag : {}) : (tag || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Fetch share information about a portfolio\n         * @summary Fetch share information about this portfolio, the response would include a collection of groups and permissions with each group\n         * @param {string} portfolioId The Portfolio ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shareInfo: function (portfolioId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioId' is not null or undefined\n                    if (portfolioId === null || portfolioId === undefined) {\n                        throw new base_1.RequiredError('portfolioId', 'Required parameter portfolioId was null or undefined when calling shareInfo.');\n                    }\n                    localVarPath = \"/portfolios/{portfolio_id}/share_info\"\n                        .replace(\"{\" + \"portfolio_id\" + \"}\", encodeURIComponent(String(portfolioId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Share a Portfolio with one or more groups with specific permissions\n         * @summary Share a portfolio with one or more groups with specific permission\n         * @param {string} portfolioId The Portfolio ID\n         * @param {SharePolicy} sharePolicy\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sharePortfolio: function (portfolioId, sharePolicy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioId' is not null or undefined\n                    if (portfolioId === null || portfolioId === undefined) {\n                        throw new base_1.RequiredError('portfolioId', 'Required parameter portfolioId was null or undefined when calling sharePortfolio.');\n                    }\n                    // verify required parameter 'sharePolicy' is not null or undefined\n                    if (sharePolicy === null || sharePolicy === undefined) {\n                        throw new base_1.RequiredError('sharePolicy', 'Required parameter sharePolicy was null or undefined when calling sharePortfolio.');\n                    }\n                    localVarPath = \"/portfolios/{portfolio_id}/share\"\n                        .replace(\"{\" + \"portfolio_id\" + \"}\", encodeURIComponent(String(portfolioId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof sharePolicy !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(sharePolicy !== undefined ? sharePolicy : {}) : (sharePolicy || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets the portfolio specified by the portfolio ID.\n         * @summary Get a specific portfolio\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolio: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showPortfolio.');\n                    }\n                    localVarPath = \"/portfolios/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Fetch the specified portfolio\\'s icon image.\n         * @summary Fetches the specified portfolio\\'s icon image\n         * @param {string} portfolioId The Portfolio ID\n         * @param {string} [cacheId] Artificial string to help avoid falsey browser cache. This can occur after changing static resources like images. The browser will return an outdated cached response. Appending different query will result in a new async call, instead of retrieving the resource from the browser cache.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioIcon: function (portfolioId, cacheId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioId' is not null or undefined\n                    if (portfolioId === null || portfolioId === undefined) {\n                        throw new base_1.RequiredError('portfolioId', 'Required parameter portfolioId was null or undefined when calling showPortfolioIcon.');\n                    }\n                    localVarPath = \"/portfolios/{portfolio_id}/icon\"\n                        .replace(\"{\" + \"portfolio_id\" + \"}\", encodeURIComponent(String(portfolioId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (cacheId !== undefined) {\n                        localVarQueryParameter['cache_id'] = cacheId;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Undeletes the portfolio specified by the portfolio ID.\n         * @summary Undelete specific portfolio\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unDeletePortfolio: function (id, restoreKey, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling unDeletePortfolio.');\n                    }\n                    // verify required parameter 'restoreKey' is not null or undefined\n                    if (restoreKey === null || restoreKey === undefined) {\n                        throw new base_1.RequiredError('restoreKey', 'Required parameter restoreKey was null or undefined when calling unDeletePortfolio.');\n                    }\n                    localVarPath = \"/portfolios/{id}/undelete\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof restoreKey !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(restoreKey !== undefined ? restoreKey : {}) : (restoreKey || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Unshare a Portfolio with one or more groups with specific permissions\n         * @summary Unshare a portfolio from one or more groups with specific permission\n         * @param {string} portfolioId The Portfolio ID\n         * @param {UnsharePolicy} unsharePolicy\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unsharePortfolio: function (portfolioId, unsharePolicy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioId' is not null or undefined\n                    if (portfolioId === null || portfolioId === undefined) {\n                        throw new base_1.RequiredError('portfolioId', 'Required parameter portfolioId was null or undefined when calling unsharePortfolio.');\n                    }\n                    // verify required parameter 'unsharePolicy' is not null or undefined\n                    if (unsharePolicy === null || unsharePolicy === undefined) {\n                        throw new base_1.RequiredError('unsharePolicy', 'Required parameter unsharePolicy was null or undefined when calling unsharePortfolio.');\n                    }\n                    localVarPath = \"/portfolios/{portfolio_id}/unshare\"\n                        .replace(\"{\" + \"portfolio_id\" + \"}\", encodeURIComponent(String(portfolioId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof unsharePolicy !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(unsharePolicy !== undefined ? unsharePolicy : {}) : (unsharePolicy || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns the edited portfolio.\n         * @summary Edit an existing portfolio\n         * @param {string} id ID of the resource\n         * @param {Portfolio} portfolio Parameters needed to update a Portfolio\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePortfolio: function (id, portfolio, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling updatePortfolio.');\n                    }\n                    // verify required parameter 'portfolio' is not null or undefined\n                    if (portfolio === null || portfolio === undefined) {\n                        throw new base_1.RequiredError('portfolio', 'Required parameter portfolio was null or undefined when calling updatePortfolio.');\n                    }\n                    localVarPath = \"/portfolios/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof portfolio !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(portfolio !== undefined ? portfolio : {}) : (portfolio || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * PortfolioApi - functional programming interface\n * @export\n */\nexports.PortfolioApiFp = function (configuration) {\n    return {\n        /**\n         * Adds a single tag to Portfolio object\n         * @summary Add Tag for Portfolio\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPortfolioTag: function (id, tag, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).addPortfolioTag(id, tag, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Adds a portfolio.\n         * @summary Add a new portfolio\n         * @param {Portfolio} portfolio Parameters needed to add a Portfolio\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPortfolio: function (portfolio, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).createPortfolio(portfolio, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Deletes the portfolio specified by the ID.\n         * @summary Delete an existing portfolio\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyPortfolio: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).destroyPortfolio(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets all portfilio items in the portfolio specified by the given ID.\n         * @summary Get all portfolio items from a specific portfolio\n         * @param {string} portfolioId The Portfolio ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        fetchPortfolioItemsWithPortfolio: function (portfolioId, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).fetchPortfolioItemsWithPortfolio(portfolioId, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns an array of Tag objects\n         * @summary List Tags for Portfolio\n         * @param {string} id ID of the resource\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioTags: function (id, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).listPortfolioTags(id, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of portfolios.\n         * @summary List portfolios\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolios: function (limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).listPortfolios(limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Make a copy of the Portfolio.\n         * @summary Make a copy of the Portfolio\n         * @param {string} portfolioId The Portfolio ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postCopyPortfolio: function (portfolioId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).postCopyPortfolio(portfolioId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Remove Tags from Portfolio\n         * @summary Remove Tags from Portfolio\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removePortfolioTags: function (id, tag, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).removePortfolioTags(id, tag, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Fetch share information about a portfolio\n         * @summary Fetch share information about this portfolio, the response would include a collection of groups and permissions with each group\n         * @param {string} portfolioId The Portfolio ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shareInfo: function (portfolioId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).shareInfo(portfolioId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Share a Portfolio with one or more groups with specific permissions\n         * @summary Share a portfolio with one or more groups with specific permission\n         * @param {string} portfolioId The Portfolio ID\n         * @param {SharePolicy} sharePolicy\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sharePortfolio: function (portfolioId, sharePolicy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).sharePortfolio(portfolioId, sharePolicy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets the portfolio specified by the portfolio ID.\n         * @summary Get a specific portfolio\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolio: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).showPortfolio(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Fetch the specified portfolio\\'s icon image.\n         * @summary Fetches the specified portfolio\\'s icon image\n         * @param {string} portfolioId The Portfolio ID\n         * @param {string} [cacheId] Artificial string to help avoid falsey browser cache. This can occur after changing static resources like images. The browser will return an outdated cached response. Appending different query will result in a new async call, instead of retrieving the resource from the browser cache.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioIcon: function (portfolioId, cacheId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).showPortfolioIcon(portfolioId, cacheId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Undeletes the portfolio specified by the portfolio ID.\n         * @summary Undelete specific portfolio\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unDeletePortfolio: function (id, restoreKey, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).unDeletePortfolio(id, restoreKey, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Unshare a Portfolio with one or more groups with specific permissions\n         * @summary Unshare a portfolio from one or more groups with specific permission\n         * @param {string} portfolioId The Portfolio ID\n         * @param {UnsharePolicy} unsharePolicy\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unsharePortfolio: function (portfolioId, unsharePolicy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).unsharePortfolio(portfolioId, unsharePolicy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns the edited portfolio.\n         * @summary Edit an existing portfolio\n         * @param {string} id ID of the resource\n         * @param {Portfolio} portfolio Parameters needed to update a Portfolio\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePortfolio: function (id, portfolio, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioApiAxiosParamCreator(configuration).updatePortfolio(id, portfolio, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * PortfolioApi - factory interface\n * @export\n */\nexports.PortfolioApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Adds a single tag to Portfolio object\n         * @summary Add Tag for Portfolio\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPortfolioTag: function (id, tag, options) {\n            return exports.PortfolioApiFp(configuration).addPortfolioTag(id, tag, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Adds a portfolio.\n         * @summary Add a new portfolio\n         * @param {Portfolio} portfolio Parameters needed to add a Portfolio\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPortfolio: function (portfolio, options) {\n            return exports.PortfolioApiFp(configuration).createPortfolio(portfolio, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Deletes the portfolio specified by the ID.\n         * @summary Delete an existing portfolio\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyPortfolio: function (id, options) {\n            return exports.PortfolioApiFp(configuration).destroyPortfolio(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets all portfilio items in the portfolio specified by the given ID.\n         * @summary Get all portfolio items from a specific portfolio\n         * @param {string} portfolioId The Portfolio ID\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        fetchPortfolioItemsWithPortfolio: function (portfolioId, limit, offset, filter, sortBy, options) {\n            return exports.PortfolioApiFp(configuration).fetchPortfolioItemsWithPortfolio(portfolioId, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns an array of Tag objects\n         * @summary List Tags for Portfolio\n         * @param {string} id ID of the resource\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioTags: function (id, limit, offset, filter, sortBy, options) {\n            return exports.PortfolioApiFp(configuration).listPortfolioTags(id, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of portfolios.\n         * @summary List portfolios\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolios: function (limit, offset, filter, sortBy, options) {\n            return exports.PortfolioApiFp(configuration).listPortfolios(limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Make a copy of the Portfolio.\n         * @summary Make a copy of the Portfolio\n         * @param {string} portfolioId The Portfolio ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postCopyPortfolio: function (portfolioId, options) {\n            return exports.PortfolioApiFp(configuration).postCopyPortfolio(portfolioId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Remove Tags from Portfolio\n         * @summary Remove Tags from Portfolio\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removePortfolioTags: function (id, tag, options) {\n            return exports.PortfolioApiFp(configuration).removePortfolioTags(id, tag, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Fetch share information about a portfolio\n         * @summary Fetch share information about this portfolio, the response would include a collection of groups and permissions with each group\n         * @param {string} portfolioId The Portfolio ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shareInfo: function (portfolioId, options) {\n            return exports.PortfolioApiFp(configuration).shareInfo(portfolioId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Share a Portfolio with one or more groups with specific permissions\n         * @summary Share a portfolio with one or more groups with specific permission\n         * @param {string} portfolioId The Portfolio ID\n         * @param {SharePolicy} sharePolicy\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sharePortfolio: function (portfolioId, sharePolicy, options) {\n            return exports.PortfolioApiFp(configuration).sharePortfolio(portfolioId, sharePolicy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets the portfolio specified by the portfolio ID.\n         * @summary Get a specific portfolio\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolio: function (id, options) {\n            return exports.PortfolioApiFp(configuration).showPortfolio(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Fetch the specified portfolio\\'s icon image.\n         * @summary Fetches the specified portfolio\\'s icon image\n         * @param {string} portfolioId The Portfolio ID\n         * @param {string} [cacheId] Artificial string to help avoid falsey browser cache. This can occur after changing static resources like images. The browser will return an outdated cached response. Appending different query will result in a new async call, instead of retrieving the resource from the browser cache.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioIcon: function (portfolioId, cacheId, options) {\n            return exports.PortfolioApiFp(configuration).showPortfolioIcon(portfolioId, cacheId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Undeletes the portfolio specified by the portfolio ID.\n         * @summary Undelete specific portfolio\n         * @param {string} id ID of the resource\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unDeletePortfolio: function (id, restoreKey, options) {\n            return exports.PortfolioApiFp(configuration).unDeletePortfolio(id, restoreKey, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Unshare a Portfolio with one or more groups with specific permissions\n         * @summary Unshare a portfolio from one or more groups with specific permission\n         * @param {string} portfolioId The Portfolio ID\n         * @param {UnsharePolicy} unsharePolicy\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unsharePortfolio: function (portfolioId, unsharePolicy, options) {\n            return exports.PortfolioApiFp(configuration).unsharePortfolio(portfolioId, unsharePolicy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns the edited portfolio.\n         * @summary Edit an existing portfolio\n         * @param {string} id ID of the resource\n         * @param {Portfolio} portfolio Parameters needed to update a Portfolio\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePortfolio: function (id, portfolio, options) {\n            return exports.PortfolioApiFp(configuration).updatePortfolio(id, portfolio, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * PortfolioApi - object-oriented interface\n * @export\n * @class PortfolioApi\n * @extends {BaseAPI}\n */\nvar PortfolioApi = /** @class */ (function (_super) {\n    __extends(PortfolioApi, _super);\n    function PortfolioApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Adds a single tag to Portfolio object\n     * @summary Add Tag for Portfolio\n     * @param {string} id ID of the resource\n     * @param {Array<Tag>} tag\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.addPortfolioTag = function (id, tag, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).addPortfolioTag(id, tag, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Adds a portfolio.\n     * @summary Add a new portfolio\n     * @param {Portfolio} portfolio Parameters needed to add a Portfolio\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.createPortfolio = function (portfolio, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).createPortfolio(portfolio, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Deletes the portfolio specified by the ID.\n     * @summary Delete an existing portfolio\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.destroyPortfolio = function (id, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).destroyPortfolio(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets all portfilio items in the portfolio specified by the given ID.\n     * @summary Get all portfolio items from a specific portfolio\n     * @param {string} portfolioId The Portfolio ID\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.fetchPortfolioItemsWithPortfolio = function (portfolioId, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).fetchPortfolioItemsWithPortfolio(portfolioId, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns an array of Tag objects\n     * @summary List Tags for Portfolio\n     * @param {string} id ID of the resource\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.listPortfolioTags = function (id, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).listPortfolioTags(id, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of portfolios.\n     * @summary List portfolios\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.listPortfolios = function (limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).listPortfolios(limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Make a copy of the Portfolio.\n     * @summary Make a copy of the Portfolio\n     * @param {string} portfolioId The Portfolio ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.postCopyPortfolio = function (portfolioId, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).postCopyPortfolio(portfolioId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Remove Tags from Portfolio\n     * @summary Remove Tags from Portfolio\n     * @param {string} id ID of the resource\n     * @param {Array<Tag>} tag\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.removePortfolioTags = function (id, tag, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).removePortfolioTags(id, tag, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Fetch share information about a portfolio\n     * @summary Fetch share information about this portfolio, the response would include a collection of groups and permissions with each group\n     * @param {string} portfolioId The Portfolio ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.shareInfo = function (portfolioId, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).shareInfo(portfolioId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Share a Portfolio with one or more groups with specific permissions\n     * @summary Share a portfolio with one or more groups with specific permission\n     * @param {string} portfolioId The Portfolio ID\n     * @param {SharePolicy} sharePolicy\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.sharePortfolio = function (portfolioId, sharePolicy, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).sharePortfolio(portfolioId, sharePolicy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets the portfolio specified by the portfolio ID.\n     * @summary Get a specific portfolio\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.showPortfolio = function (id, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).showPortfolio(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Fetch the specified portfolio\\'s icon image.\n     * @summary Fetches the specified portfolio\\'s icon image\n     * @param {string} portfolioId The Portfolio ID\n     * @param {string} [cacheId] Artificial string to help avoid falsey browser cache. This can occur after changing static resources like images. The browser will return an outdated cached response. Appending different query will result in a new async call, instead of retrieving the resource from the browser cache.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.showPortfolioIcon = function (portfolioId, cacheId, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).showPortfolioIcon(portfolioId, cacheId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Undeletes the portfolio specified by the portfolio ID.\n     * @summary Undelete specific portfolio\n     * @param {string} id ID of the resource\n     * @param {RestoreKey} restoreKey\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.unDeletePortfolio = function (id, restoreKey, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).unDeletePortfolio(id, restoreKey, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Unshare a Portfolio with one or more groups with specific permissions\n     * @summary Unshare a portfolio from one or more groups with specific permission\n     * @param {string} portfolioId The Portfolio ID\n     * @param {UnsharePolicy} unsharePolicy\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.unsharePortfolio = function (portfolioId, unsharePolicy, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).unsharePortfolio(portfolioId, unsharePolicy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns the edited portfolio.\n     * @summary Edit an existing portfolio\n     * @param {string} id ID of the resource\n     * @param {Portfolio} portfolio Parameters needed to update a Portfolio\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioApi\n     */\n    PortfolioApi.prototype.updatePortfolio = function (id, portfolio, options) {\n        var _this = this;\n        return exports.PortfolioApiFp(this.configuration).updatePortfolio(id, portfolio, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return PortfolioApi;\n}(base_1.BaseAPI));\nexports.PortfolioApi = PortfolioApi;\n/**\n * PortfolioItemApi - axios parameter creator\n * @export\n */\nexports.PortfolioItemApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Adds a single tag to a Portfolio Item object\n         * @summary Add Tag for Portfolio Item\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPortfolioItemTag: function (id, tag, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling addPortfolioItemTag.');\n                    }\n                    // verify required parameter 'tag' is not null or undefined\n                    if (tag === null || tag === undefined) {\n                        throw new base_1.RequiredError('tag', 'Required parameter tag was null or undefined when calling addPortfolioItemTag.');\n                    }\n                    localVarPath = \"/portfolio_items/{id}/tag\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof tag !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(tag !== undefined ? tag : {}) : (tag || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Adds a name and description for a portfolio item and returns the newly created portfolio item.\n         * @summary Add a new portfolio item\n         * @param {CreatePortfolioItem} createPortfolioItem\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPortfolioItem: function (createPortfolioItem, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'createPortfolioItem' is not null or undefined\n                    if (createPortfolioItem === null || createPortfolioItem === undefined) {\n                        throw new base_1.RequiredError('createPortfolioItem', 'Required parameter createPortfolioItem was null or undefined when calling createPortfolioItem.');\n                    }\n                    localVarPath = \"/portfolio_items\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof createPortfolioItem !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(createPortfolioItem !== undefined ? createPortfolioItem : {}) : (createPortfolioItem || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Deletes the portfolio item based on portfolio item ID passed\n         * @summary Delete an existing portfolio item\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyPortfolioItem: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling destroyPortfolioItem.');\n                    }\n                    localVarPath = \"/portfolio_items/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Get the next name for a the Portfolio Item prior to a copy operation\n         * @summary Get the next name for a the Portfolio Item prior to a copy operation\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {string} [destinationPortfolioId] The destination portfolio to compare names against\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPortfolioItemNextName: function (portfolioItemId, destinationPortfolioId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioItemId' is not null or undefined\n                    if (portfolioItemId === null || portfolioItemId === undefined) {\n                        throw new base_1.RequiredError('portfolioItemId', 'Required parameter portfolioItemId was null or undefined when calling getPortfolioItemNextName.');\n                    }\n                    localVarPath = \"/portfolio_items/{portfolio_item_id}/next_name\"\n                        .replace(\"{\" + \"portfolio_item_id\" + \"}\", encodeURIComponent(String(portfolioItemId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (destinationPortfolioId !== undefined) {\n                        localVarQueryParameter['destination_portfolio_id'] = destinationPortfolioId;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns an array of Tag objects\n         * @summary List Tags for Portfolio Items\n         * @param {string} id ID of the resource\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioItemTags: function (id, limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling listPortfolioItemTags.');\n                    }\n                    localVarPath = \"/portfolio_items/{id}/tags\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a list of portfolio items.\n         * @summary List all portfolio items\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioItems: function (limit, offset, filter, sortBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/portfolio_items\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (filter !== undefined) {\n                        localVarQueryParameter['filter'] = filter;\n                    }\n                    if (sortBy !== undefined) {\n                        localVarQueryParameter['sort_by'] = sortBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets the provider control parameters for a portfolio item.\n         * @summary Gets the provider control parameters for this portfolio item; requires control paramaters provided when provisioning the portfolio item.\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listProviderControlParameters: function (portfolioItemId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioItemId' is not null or undefined\n                    if (portfolioItemId === null || portfolioItemId === undefined) {\n                        throw new base_1.RequiredError('portfolioItemId', 'Required parameter portfolioItemId was null or undefined when calling listProviderControlParameters.');\n                    }\n                    localVarPath = \"/portfolio_items/{portfolio_item_id}/provider_control_parameters\"\n                        .replace(\"{\" + \"portfolio_item_id\" + \"}\", encodeURIComponent(String(portfolioItemId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets all service plans for a portfolio item.\n         * @summary Gets all service plans for a specific portfolio item; requires a connection to the catalog inventory service.\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listServicePlans: function (portfolioItemId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioItemId' is not null or undefined\n                    if (portfolioItemId === null || portfolioItemId === undefined) {\n                        throw new base_1.RequiredError('portfolioItemId', 'Required parameter portfolioItemId was null or undefined when calling listServicePlans.');\n                    }\n                    localVarPath = \"/portfolio_items/{portfolio_item_id}/service_plans\"\n                        .replace(\"{\" + \"portfolio_item_id\" + \"}\", encodeURIComponent(String(portfolioItemId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Make a copy of the Portfolio Item.\n         * @summary Make a copy of the Portfolio Item\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {CopyPortfolioItem} [copyPortfolioItem]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postCopyPortfolioItem: function (portfolioItemId, copyPortfolioItem, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioItemId' is not null or undefined\n                    if (portfolioItemId === null || portfolioItemId === undefined) {\n                        throw new base_1.RequiredError('portfolioItemId', 'Required parameter portfolioItemId was null or undefined when calling postCopyPortfolioItem.');\n                    }\n                    localVarPath = \"/portfolio_items/{portfolio_item_id}/copy\"\n                        .replace(\"{\" + \"portfolio_item_id\" + \"}\", encodeURIComponent(String(portfolioItemId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof copyPortfolioItem !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(copyPortfolioItem !== undefined ? copyPortfolioItem : {}) : (copyPortfolioItem || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Remove Tags from Portfolio Item\n         * @summary Remove Tags from Portfolio Item\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removePortfolioItemTags: function (id, tag, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling removePortfolioItemTags.');\n                    }\n                    // verify required parameter 'tag' is not null or undefined\n                    if (tag === null || tag === undefined) {\n                        throw new base_1.RequiredError('tag', 'Required parameter tag was null or undefined when calling removePortfolioItemTags.');\n                    }\n                    localVarPath = \"/portfolio_items/{id}/untag\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof tag !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(tag !== undefined ? tag : {}) : (tag || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets a specific portfolio item based on the portfolio item ID passed\n         * @summary Gets a specific portfolio item\n         * @param {string} id ID of the resource\n         * @param {boolean} [showDiscarded] Whether or not to display the discarded result.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioItem: function (id, showDiscarded, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showPortfolioItem.');\n                    }\n                    localVarPath = \"/portfolio_items/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (showDiscarded !== undefined) {\n                        localVarQueryParameter['show_discarded'] = showDiscarded;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Fetch the specified portfolio item\\'s icon image.\n         * @summary Fetches the specified portfolio item\\'s icon image\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioItemIcon: function (portfolioItemId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioItemId' is not null or undefined\n                    if (portfolioItemId === null || portfolioItemId === undefined) {\n                        throw new base_1.RequiredError('portfolioItemId', 'Required parameter portfolioItemId was null or undefined when calling showPortfolioItemIcon.');\n                    }\n                    localVarPath = \"/portfolio_items/{portfolio_item_id}/icon\"\n                        .replace(\"{\" + \"portfolio_item_id\" + \"}\", encodeURIComponent(String(portfolioItemId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * If a record has been discarded, this operation will undelete it so it can be requested normally.\n         * @summary Undelete a specified Portfolio Item\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unDeletePortfolioItem: function (portfolioItemId, restoreKey, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'portfolioItemId' is not null or undefined\n                    if (portfolioItemId === null || portfolioItemId === undefined) {\n                        throw new base_1.RequiredError('portfolioItemId', 'Required parameter portfolioItemId was null or undefined when calling unDeletePortfolioItem.');\n                    }\n                    // verify required parameter 'restoreKey' is not null or undefined\n                    if (restoreKey === null || restoreKey === undefined) {\n                        throw new base_1.RequiredError('restoreKey', 'Required parameter restoreKey was null or undefined when calling unDeletePortfolioItem.');\n                    }\n                    localVarPath = \"/portfolio_items/{portfolio_item_id}/undelete\"\n                        .replace(\"{\" + \"portfolio_item_id\" + \"}\", encodeURIComponent(String(portfolioItemId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof restoreKey !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(restoreKey !== undefined ? restoreKey : {}) : (restoreKey || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Edits portfolio item specified by the given ID.\n         * @summary Edit an existing portfolio item\n         * @param {string} id ID of the resource\n         * @param {PortfolioItem} portfolioItem Parameters needed to update a Portfolio Item\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePortfolioItem: function (id, portfolioItem, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling updatePortfolioItem.');\n                    }\n                    // verify required parameter 'portfolioItem' is not null or undefined\n                    if (portfolioItem === null || portfolioItem === undefined) {\n                        throw new base_1.RequiredError('portfolioItem', 'Required parameter portfolioItem was null or undefined when calling updatePortfolioItem.');\n                    }\n                    localVarPath = \"/portfolio_items/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof portfolioItem !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(portfolioItem !== undefined ? portfolioItem : {}) : (portfolioItem || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * PortfolioItemApi - functional programming interface\n * @export\n */\nexports.PortfolioItemApiFp = function (configuration) {\n    return {\n        /**\n         * Adds a single tag to a Portfolio Item object\n         * @summary Add Tag for Portfolio Item\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPortfolioItemTag: function (id, tag, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).addPortfolioItemTag(id, tag, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Adds a name and description for a portfolio item and returns the newly created portfolio item.\n         * @summary Add a new portfolio item\n         * @param {CreatePortfolioItem} createPortfolioItem\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPortfolioItem: function (createPortfolioItem, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).createPortfolioItem(createPortfolioItem, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Deletes the portfolio item based on portfolio item ID passed\n         * @summary Delete an existing portfolio item\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyPortfolioItem: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).destroyPortfolioItem(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Get the next name for a the Portfolio Item prior to a copy operation\n         * @summary Get the next name for a the Portfolio Item prior to a copy operation\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {string} [destinationPortfolioId] The destination portfolio to compare names against\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPortfolioItemNextName: function (portfolioItemId, destinationPortfolioId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).getPortfolioItemNextName(portfolioItemId, destinationPortfolioId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns an array of Tag objects\n         * @summary List Tags for Portfolio Items\n         * @param {string} id ID of the resource\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioItemTags: function (id, limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).listPortfolioItemTags(id, limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a list of portfolio items.\n         * @summary List all portfolio items\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioItems: function (limit, offset, filter, sortBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).listPortfolioItems(limit, offset, filter, sortBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets the provider control parameters for a portfolio item.\n         * @summary Gets the provider control parameters for this portfolio item; requires control paramaters provided when provisioning the portfolio item.\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listProviderControlParameters: function (portfolioItemId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).listProviderControlParameters(portfolioItemId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets all service plans for a portfolio item.\n         * @summary Gets all service plans for a specific portfolio item; requires a connection to the catalog inventory service.\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listServicePlans: function (portfolioItemId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).listServicePlans(portfolioItemId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Make a copy of the Portfolio Item.\n         * @summary Make a copy of the Portfolio Item\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {CopyPortfolioItem} [copyPortfolioItem]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postCopyPortfolioItem: function (portfolioItemId, copyPortfolioItem, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).postCopyPortfolioItem(portfolioItemId, copyPortfolioItem, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Remove Tags from Portfolio Item\n         * @summary Remove Tags from Portfolio Item\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removePortfolioItemTags: function (id, tag, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).removePortfolioItemTags(id, tag, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets a specific portfolio item based on the portfolio item ID passed\n         * @summary Gets a specific portfolio item\n         * @param {string} id ID of the resource\n         * @param {boolean} [showDiscarded] Whether or not to display the discarded result.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioItem: function (id, showDiscarded, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).showPortfolioItem(id, showDiscarded, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Fetch the specified portfolio item\\'s icon image.\n         * @summary Fetches the specified portfolio item\\'s icon image\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioItemIcon: function (portfolioItemId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).showPortfolioItemIcon(portfolioItemId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * If a record has been discarded, this operation will undelete it so it can be requested normally.\n         * @summary Undelete a specified Portfolio Item\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unDeletePortfolioItem: function (portfolioItemId, restoreKey, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).unDeletePortfolioItem(portfolioItemId, restoreKey, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Edits portfolio item specified by the given ID.\n         * @summary Edit an existing portfolio item\n         * @param {string} id ID of the resource\n         * @param {PortfolioItem} portfolioItem Parameters needed to update a Portfolio Item\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePortfolioItem: function (id, portfolioItem, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PortfolioItemApiAxiosParamCreator(configuration).updatePortfolioItem(id, portfolioItem, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * PortfolioItemApi - factory interface\n * @export\n */\nexports.PortfolioItemApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Adds a single tag to a Portfolio Item object\n         * @summary Add Tag for Portfolio Item\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPortfolioItemTag: function (id, tag, options) {\n            return exports.PortfolioItemApiFp(configuration).addPortfolioItemTag(id, tag, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Adds a name and description for a portfolio item and returns the newly created portfolio item.\n         * @summary Add a new portfolio item\n         * @param {CreatePortfolioItem} createPortfolioItem\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPortfolioItem: function (createPortfolioItem, options) {\n            return exports.PortfolioItemApiFp(configuration).createPortfolioItem(createPortfolioItem, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Deletes the portfolio item based on portfolio item ID passed\n         * @summary Delete an existing portfolio item\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroyPortfolioItem: function (id, options) {\n            return exports.PortfolioItemApiFp(configuration).destroyPortfolioItem(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Get the next name for a the Portfolio Item prior to a copy operation\n         * @summary Get the next name for a the Portfolio Item prior to a copy operation\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {string} [destinationPortfolioId] The destination portfolio to compare names against\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPortfolioItemNextName: function (portfolioItemId, destinationPortfolioId, options) {\n            return exports.PortfolioItemApiFp(configuration).getPortfolioItemNextName(portfolioItemId, destinationPortfolioId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns an array of Tag objects\n         * @summary List Tags for Portfolio Items\n         * @param {string} id ID of the resource\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioItemTags: function (id, limit, offset, filter, sortBy, options) {\n            return exports.PortfolioItemApiFp(configuration).listPortfolioItemTags(id, limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a list of portfolio items.\n         * @summary List all portfolio items\n         * @param {number} [limit] The numbers of items to return per page.\n         * @param {number} [offset] The number of items to skip before starting to collect the result set.\n         * @param {object} [filter] Filter for querying collections.\n         * @param {string} [sortBy] Field to sort collection by.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPortfolioItems: function (limit, offset, filter, sortBy, options) {\n            return exports.PortfolioItemApiFp(configuration).listPortfolioItems(limit, offset, filter, sortBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets the provider control parameters for a portfolio item.\n         * @summary Gets the provider control parameters for this portfolio item; requires control paramaters provided when provisioning the portfolio item.\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listProviderControlParameters: function (portfolioItemId, options) {\n            return exports.PortfolioItemApiFp(configuration).listProviderControlParameters(portfolioItemId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets all service plans for a portfolio item.\n         * @summary Gets all service plans for a specific portfolio item; requires a connection to the catalog inventory service.\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listServicePlans: function (portfolioItemId, options) {\n            return exports.PortfolioItemApiFp(configuration).listServicePlans(portfolioItemId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Make a copy of the Portfolio Item.\n         * @summary Make a copy of the Portfolio Item\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {CopyPortfolioItem} [copyPortfolioItem]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        postCopyPortfolioItem: function (portfolioItemId, copyPortfolioItem, options) {\n            return exports.PortfolioItemApiFp(configuration).postCopyPortfolioItem(portfolioItemId, copyPortfolioItem, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Remove Tags from Portfolio Item\n         * @summary Remove Tags from Portfolio Item\n         * @param {string} id ID of the resource\n         * @param {Array<Tag>} tag\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removePortfolioItemTags: function (id, tag, options) {\n            return exports.PortfolioItemApiFp(configuration).removePortfolioItemTags(id, tag, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets a specific portfolio item based on the portfolio item ID passed\n         * @summary Gets a specific portfolio item\n         * @param {string} id ID of the resource\n         * @param {boolean} [showDiscarded] Whether or not to display the discarded result.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioItem: function (id, showDiscarded, options) {\n            return exports.PortfolioItemApiFp(configuration).showPortfolioItem(id, showDiscarded, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Fetch the specified portfolio item\\'s icon image.\n         * @summary Fetches the specified portfolio item\\'s icon image\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showPortfolioItemIcon: function (portfolioItemId, options) {\n            return exports.PortfolioItemApiFp(configuration).showPortfolioItemIcon(portfolioItemId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * If a record has been discarded, this operation will undelete it so it can be requested normally.\n         * @summary Undelete a specified Portfolio Item\n         * @param {string} portfolioItemId The Portfolio Item ID\n         * @param {RestoreKey} restoreKey\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unDeletePortfolioItem: function (portfolioItemId, restoreKey, options) {\n            return exports.PortfolioItemApiFp(configuration).unDeletePortfolioItem(portfolioItemId, restoreKey, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Edits portfolio item specified by the given ID.\n         * @summary Edit an existing portfolio item\n         * @param {string} id ID of the resource\n         * @param {PortfolioItem} portfolioItem Parameters needed to update a Portfolio Item\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePortfolioItem: function (id, portfolioItem, options) {\n            return exports.PortfolioItemApiFp(configuration).updatePortfolioItem(id, portfolioItem, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * PortfolioItemApi - object-oriented interface\n * @export\n * @class PortfolioItemApi\n * @extends {BaseAPI}\n */\nvar PortfolioItemApi = /** @class */ (function (_super) {\n    __extends(PortfolioItemApi, _super);\n    function PortfolioItemApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Adds a single tag to a Portfolio Item object\n     * @summary Add Tag for Portfolio Item\n     * @param {string} id ID of the resource\n     * @param {Array<Tag>} tag\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.addPortfolioItemTag = function (id, tag, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).addPortfolioItemTag(id, tag, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Adds a name and description for a portfolio item and returns the newly created portfolio item.\n     * @summary Add a new portfolio item\n     * @param {CreatePortfolioItem} createPortfolioItem\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.createPortfolioItem = function (createPortfolioItem, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).createPortfolioItem(createPortfolioItem, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Deletes the portfolio item based on portfolio item ID passed\n     * @summary Delete an existing portfolio item\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.destroyPortfolioItem = function (id, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).destroyPortfolioItem(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Get the next name for a the Portfolio Item prior to a copy operation\n     * @summary Get the next name for a the Portfolio Item prior to a copy operation\n     * @param {string} portfolioItemId The Portfolio Item ID\n     * @param {string} [destinationPortfolioId] The destination portfolio to compare names against\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.getPortfolioItemNextName = function (portfolioItemId, destinationPortfolioId, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).getPortfolioItemNextName(portfolioItemId, destinationPortfolioId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns an array of Tag objects\n     * @summary List Tags for Portfolio Items\n     * @param {string} id ID of the resource\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.listPortfolioItemTags = function (id, limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).listPortfolioItemTags(id, limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a list of portfolio items.\n     * @summary List all portfolio items\n     * @param {number} [limit] The numbers of items to return per page.\n     * @param {number} [offset] The number of items to skip before starting to collect the result set.\n     * @param {object} [filter] Filter for querying collections.\n     * @param {string} [sortBy] Field to sort collection by.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.listPortfolioItems = function (limit, offset, filter, sortBy, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).listPortfolioItems(limit, offset, filter, sortBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets the provider control parameters for a portfolio item.\n     * @summary Gets the provider control parameters for this portfolio item; requires control paramaters provided when provisioning the portfolio item.\n     * @param {string} portfolioItemId The Portfolio Item ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.listProviderControlParameters = function (portfolioItemId, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).listProviderControlParameters(portfolioItemId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets all service plans for a portfolio item.\n     * @summary Gets all service plans for a specific portfolio item; requires a connection to the catalog inventory service.\n     * @param {string} portfolioItemId The Portfolio Item ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.listServicePlans = function (portfolioItemId, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).listServicePlans(portfolioItemId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Make a copy of the Portfolio Item.\n     * @summary Make a copy of the Portfolio Item\n     * @param {string} portfolioItemId The Portfolio Item ID\n     * @param {CopyPortfolioItem} [copyPortfolioItem]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.postCopyPortfolioItem = function (portfolioItemId, copyPortfolioItem, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).postCopyPortfolioItem(portfolioItemId, copyPortfolioItem, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Remove Tags from Portfolio Item\n     * @summary Remove Tags from Portfolio Item\n     * @param {string} id ID of the resource\n     * @param {Array<Tag>} tag\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.removePortfolioItemTags = function (id, tag, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).removePortfolioItemTags(id, tag, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets a specific portfolio item based on the portfolio item ID passed\n     * @summary Gets a specific portfolio item\n     * @param {string} id ID of the resource\n     * @param {boolean} [showDiscarded] Whether or not to display the discarded result.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.showPortfolioItem = function (id, showDiscarded, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).showPortfolioItem(id, showDiscarded, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Fetch the specified portfolio item\\'s icon image.\n     * @summary Fetches the specified portfolio item\\'s icon image\n     * @param {string} portfolioItemId The Portfolio Item ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.showPortfolioItemIcon = function (portfolioItemId, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).showPortfolioItemIcon(portfolioItemId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * If a record has been discarded, this operation will undelete it so it can be requested normally.\n     * @summary Undelete a specified Portfolio Item\n     * @param {string} portfolioItemId The Portfolio Item ID\n     * @param {RestoreKey} restoreKey\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.unDeletePortfolioItem = function (portfolioItemId, restoreKey, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).unDeletePortfolioItem(portfolioItemId, restoreKey, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Edits portfolio item specified by the given ID.\n     * @summary Edit an existing portfolio item\n     * @param {string} id ID of the resource\n     * @param {PortfolioItem} portfolioItem Parameters needed to update a Portfolio Item\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PortfolioItemApi\n     */\n    PortfolioItemApi.prototype.updatePortfolioItem = function (id, portfolioItem, options) {\n        var _this = this;\n        return exports.PortfolioItemApiFp(this.configuration).updatePortfolioItem(id, portfolioItem, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return PortfolioItemApi;\n}(base_1.BaseAPI));\nexports.PortfolioItemApi = PortfolioItemApi;\n/**\n * ServicePlansApi - axios parameter creator\n * @export\n */\nexports.ServicePlansApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Returns the new Service Plan\n         * @summary Create Service Plan\n         * @param {ImportServicePlan} [importServicePlan]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createServicePlan: function (importServicePlan, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/service_plans\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof importServicePlan !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(importServicePlan !== undefined ? importServicePlan : {}) : (importServicePlan || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Patch Service Plan Modified Schema\n         * @param {string} id ID of the resource\n         * @param {PatchModifiedServicePlan} [patchModifiedServicePlan]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchServicePlanModified: function (id, patchModifiedServicePlan, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling patchServicePlanModified.');\n                    }\n                    localVarPath = \"/service_plans/{id}/modified\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof patchModifiedServicePlan !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(patchModifiedServicePlan !== undefined ? patchModifiedServicePlan : {}) : (patchModifiedServicePlan || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Resets the Service Plan\\'s Modified schema and returns the new one if it has been reset\n         * @summary Reset Service Plan Modified schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        resetServicePlanModified: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling resetServicePlanModified.');\n                    }\n                    localVarPath = \"/service_plans/{id}/reset\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns the specified Service Plan\n         * @summary Show Service Plan\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlan: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showServicePlan.');\n                    }\n                    localVarPath = \"/service_plans/{id}\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns the specified Service Plan\\'s base schema\n         * @summary Show Service Plan Base Schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlanBase: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showServicePlanBase.');\n                    }\n                    localVarPath = \"/service_plans/{id}/base\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns the specified Service Plan\\'s modified schema\n         * @summary Show Service Plan modified Schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlanModified: function (id, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'id' is not null or undefined\n                    if (id === null || id === undefined) {\n                        throw new base_1.RequiredError('id', 'Required parameter id was null or undefined when calling showServicePlanModified.');\n                    }\n                    localVarPath = \"/service_plans/{id}/modified\"\n                        .replace(\"{\" + \"id\" + \"}\", encodeURIComponent(String(id)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * ServicePlansApi - functional programming interface\n * @export\n */\nexports.ServicePlansApiFp = function (configuration) {\n    return {\n        /**\n         * Returns the new Service Plan\n         * @summary Create Service Plan\n         * @param {ImportServicePlan} [importServicePlan]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createServicePlan: function (importServicePlan, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.ServicePlansApiAxiosParamCreator(configuration).createServicePlan(importServicePlan, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Patch Service Plan Modified Schema\n         * @param {string} id ID of the resource\n         * @param {PatchModifiedServicePlan} [patchModifiedServicePlan]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchServicePlanModified: function (id, patchModifiedServicePlan, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.ServicePlansApiAxiosParamCreator(configuration).patchServicePlanModified(id, patchModifiedServicePlan, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Resets the Service Plan\\'s Modified schema and returns the new one if it has been reset\n         * @summary Reset Service Plan Modified schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        resetServicePlanModified: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.ServicePlansApiAxiosParamCreator(configuration).resetServicePlanModified(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns the specified Service Plan\n         * @summary Show Service Plan\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlan: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.ServicePlansApiAxiosParamCreator(configuration).showServicePlan(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns the specified Service Plan\\'s base schema\n         * @summary Show Service Plan Base Schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlanBase: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.ServicePlansApiAxiosParamCreator(configuration).showServicePlanBase(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns the specified Service Plan\\'s modified schema\n         * @summary Show Service Plan modified Schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlanModified: function (id, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.ServicePlansApiAxiosParamCreator(configuration).showServicePlanModified(id, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * ServicePlansApi - factory interface\n * @export\n */\nexports.ServicePlansApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Returns the new Service Plan\n         * @summary Create Service Plan\n         * @param {ImportServicePlan} [importServicePlan]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createServicePlan: function (importServicePlan, options) {\n            return exports.ServicePlansApiFp(configuration).createServicePlan(importServicePlan, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Patch Service Plan Modified Schema\n         * @param {string} id ID of the resource\n         * @param {PatchModifiedServicePlan} [patchModifiedServicePlan]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchServicePlanModified: function (id, patchModifiedServicePlan, options) {\n            return exports.ServicePlansApiFp(configuration).patchServicePlanModified(id, patchModifiedServicePlan, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Resets the Service Plan\\'s Modified schema and returns the new one if it has been reset\n         * @summary Reset Service Plan Modified schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        resetServicePlanModified: function (id, options) {\n            return exports.ServicePlansApiFp(configuration).resetServicePlanModified(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns the specified Service Plan\n         * @summary Show Service Plan\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlan: function (id, options) {\n            return exports.ServicePlansApiFp(configuration).showServicePlan(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns the specified Service Plan\\'s base schema\n         * @summary Show Service Plan Base Schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlanBase: function (id, options) {\n            return exports.ServicePlansApiFp(configuration).showServicePlanBase(id, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns the specified Service Plan\\'s modified schema\n         * @summary Show Service Plan modified Schema\n         * @param {string} id ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showServicePlanModified: function (id, options) {\n            return exports.ServicePlansApiFp(configuration).showServicePlanModified(id, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * ServicePlansApi - object-oriented interface\n * @export\n * @class ServicePlansApi\n * @extends {BaseAPI}\n */\nvar ServicePlansApi = /** @class */ (function (_super) {\n    __extends(ServicePlansApi, _super);\n    function ServicePlansApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Returns the new Service Plan\n     * @summary Create Service Plan\n     * @param {ImportServicePlan} [importServicePlan]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ServicePlansApi\n     */\n    ServicePlansApi.prototype.createServicePlan = function (importServicePlan, options) {\n        var _this = this;\n        return exports.ServicePlansApiFp(this.configuration).createServicePlan(importServicePlan, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Patch Service Plan Modified Schema\n     * @param {string} id ID of the resource\n     * @param {PatchModifiedServicePlan} [patchModifiedServicePlan]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ServicePlansApi\n     */\n    ServicePlansApi.prototype.patchServicePlanModified = function (id, patchModifiedServicePlan, options) {\n        var _this = this;\n        return exports.ServicePlansApiFp(this.configuration).patchServicePlanModified(id, patchModifiedServicePlan, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Resets the Service Plan\\'s Modified schema and returns the new one if it has been reset\n     * @summary Reset Service Plan Modified schema\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ServicePlansApi\n     */\n    ServicePlansApi.prototype.resetServicePlanModified = function (id, options) {\n        var _this = this;\n        return exports.ServicePlansApiFp(this.configuration).resetServicePlanModified(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns the specified Service Plan\n     * @summary Show Service Plan\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ServicePlansApi\n     */\n    ServicePlansApi.prototype.showServicePlan = function (id, options) {\n        var _this = this;\n        return exports.ServicePlansApiFp(this.configuration).showServicePlan(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns the specified Service Plan\\'s base schema\n     * @summary Show Service Plan Base Schema\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ServicePlansApi\n     */\n    ServicePlansApi.prototype.showServicePlanBase = function (id, options) {\n        var _this = this;\n        return exports.ServicePlansApiFp(this.configuration).showServicePlanBase(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns the specified Service Plan\\'s modified schema\n     * @summary Show Service Plan modified Schema\n     * @param {string} id ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ServicePlansApi\n     */\n    ServicePlansApi.prototype.showServicePlanModified = function (id, options) {\n        var _this = this;\n        return exports.ServicePlansApiFp(this.configuration).showServicePlanModified(id, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return ServicePlansApi;\n}(base_1.BaseAPI));\nexports.ServicePlansApi = ServicePlansApi;\n/**\n * SettingsApi - axios parameter creator\n * @export\n */\nexports.SettingsApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Create Tenant Setting\n         * @summary Create Tenant Setting\n         * @param {Setting} setting Json encoded key/value pair to create a new setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createSetting: function (setting, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'setting' is not null or undefined\n                    if (setting === null || setting === undefined) {\n                        throw new base_1.RequiredError('setting', 'Required parameter setting was null or undefined when calling createSetting.');\n                    }\n                    localVarPath = \"/settings\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof setting !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(setting !== undefined ? setting : {}) : (setting || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Delete a Tenant Setting\n         * @summary Delete a Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroySetting: function (name, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'name' is not null or undefined\n                    if (name === null || name === undefined) {\n                        throw new base_1.RequiredError('name', 'Required parameter name was null or undefined when calling destroySetting.');\n                    }\n                    localVarPath = \"/settings/{name}\"\n                        .replace(\"{\" + \"name\" + \"}\", encodeURIComponent(String(name)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * List Tenant Settings\n         * @summary List Tenant Settings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listSettings: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/settings\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Get a specific Tenant Setting\n         * @summary Get a specific Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showSetting: function (name, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'name' is not null or undefined\n                    if (name === null || name === undefined) {\n                        throw new base_1.RequiredError('name', 'Required parameter name was null or undefined when calling showSetting.');\n                    }\n                    localVarPath = \"/settings/{name}\"\n                        .replace(\"{\" + \"name\" + \"}\", encodeURIComponent(String(name)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Update a Tenant Setting\n         * @summary Update a Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateSetting: function (name, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'name' is not null or undefined\n                    if (name === null || name === undefined) {\n                        throw new base_1.RequiredError('name', 'Required parameter name was null or undefined when calling updateSetting.');\n                    }\n                    localVarPath = \"/settings/{name}\"\n                        .replace(\"{\" + \"name\" + \"}\", encodeURIComponent(String(name)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * SettingsApi - functional programming interface\n * @export\n */\nexports.SettingsApiFp = function (configuration) {\n    return {\n        /**\n         * Create Tenant Setting\n         * @summary Create Tenant Setting\n         * @param {Setting} setting Json encoded key/value pair to create a new setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createSetting: function (setting, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.SettingsApiAxiosParamCreator(configuration).createSetting(setting, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Delete a Tenant Setting\n         * @summary Delete a Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroySetting: function (name, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.SettingsApiAxiosParamCreator(configuration).destroySetting(name, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * List Tenant Settings\n         * @summary List Tenant Settings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listSettings: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.SettingsApiAxiosParamCreator(configuration).listSettings(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Get a specific Tenant Setting\n         * @summary Get a specific Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showSetting: function (name, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.SettingsApiAxiosParamCreator(configuration).showSetting(name, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Update a Tenant Setting\n         * @summary Update a Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateSetting: function (name, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.SettingsApiAxiosParamCreator(configuration).updateSetting(name, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * SettingsApi - factory interface\n * @export\n */\nexports.SettingsApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Create Tenant Setting\n         * @summary Create Tenant Setting\n         * @param {Setting} setting Json encoded key/value pair to create a new setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createSetting: function (setting, options) {\n            return exports.SettingsApiFp(configuration).createSetting(setting, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Delete a Tenant Setting\n         * @summary Delete a Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        destroySetting: function (name, options) {\n            return exports.SettingsApiFp(configuration).destroySetting(name, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * List Tenant Settings\n         * @summary List Tenant Settings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listSettings: function (options) {\n            return exports.SettingsApiFp(configuration).listSettings(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Get a specific Tenant Setting\n         * @summary Get a specific Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showSetting: function (name, options) {\n            return exports.SettingsApiFp(configuration).showSetting(name, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Update a Tenant Setting\n         * @summary Update a Tenant Setting\n         * @param {string} name name of the setting\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateSetting: function (name, options) {\n            return exports.SettingsApiFp(configuration).updateSetting(name, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * SettingsApi - object-oriented interface\n * @export\n * @class SettingsApi\n * @extends {BaseAPI}\n */\nvar SettingsApi = /** @class */ (function (_super) {\n    __extends(SettingsApi, _super);\n    function SettingsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Create Tenant Setting\n     * @summary Create Tenant Setting\n     * @param {Setting} setting Json encoded key/value pair to create a new setting\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SettingsApi\n     */\n    SettingsApi.prototype.createSetting = function (setting, options) {\n        var _this = this;\n        return exports.SettingsApiFp(this.configuration).createSetting(setting, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Delete a Tenant Setting\n     * @summary Delete a Tenant Setting\n     * @param {string} name name of the setting\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SettingsApi\n     */\n    SettingsApi.prototype.destroySetting = function (name, options) {\n        var _this = this;\n        return exports.SettingsApiFp(this.configuration).destroySetting(name, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * List Tenant Settings\n     * @summary List Tenant Settings\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SettingsApi\n     */\n    SettingsApi.prototype.listSettings = function (options) {\n        var _this = this;\n        return exports.SettingsApiFp(this.configuration).listSettings(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Get a specific Tenant Setting\n     * @summary Get a specific Tenant Setting\n     * @param {string} name name of the setting\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SettingsApi\n     */\n    SettingsApi.prototype.showSetting = function (name, options) {\n        var _this = this;\n        return exports.SettingsApiFp(this.configuration).showSetting(name, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Update a Tenant Setting\n     * @summary Update a Tenant Setting\n     * @param {string} name name of the setting\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SettingsApi\n     */\n    SettingsApi.prototype.updateSetting = function (name, options) {\n        var _this = this;\n        return exports.SettingsApiFp(this.configuration).updateSetting(name, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return SettingsApi;\n}(base_1.BaseAPI));\nexports.SettingsApi = SettingsApi;\n/**\n * TagsApi - axios parameter creator\n * @export\n */\nexports.TagsApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * List Tags\n         * @summary List Tags\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTags: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/tags\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * TagsApi - functional programming interface\n * @export\n */\nexports.TagsApiFp = function (configuration) {\n    return {\n        /**\n         * List Tags\n         * @summary List Tags\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTags: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.TagsApiAxiosParamCreator(configuration).listTags(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * TagsApi - factory interface\n * @export\n */\nexports.TagsApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * List Tags\n         * @summary List Tags\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTags: function (options) {\n            return exports.TagsApiFp(configuration).listTags(options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * TagsApi - object-oriented interface\n * @export\n * @class TagsApi\n * @extends {BaseAPI}\n */\nvar TagsApi = /** @class */ (function (_super) {\n    __extends(TagsApi, _super);\n    function TagsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * List Tags\n     * @summary List Tags\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TagsApi\n     */\n    TagsApi.prototype.listTags = function (options) {\n        var _this = this;\n        return exports.TagsApiFp(this.configuration).listTags(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return TagsApi;\n}(base_1.BaseAPI));\nexports.TagsApi = TagsApi;\n/**\n * TenantApi - axios parameter creator\n * @export\n */\nexports.TenantApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Get a list of tenants.\n         * @summary List Tenants\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTenants: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/tenants\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Gets the tenant specified by the tenant id.\n         * @summary Get a specific Tenant\n         * @param {string} tenantId ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showTenant: function (tenantId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'tenantId' is not null or undefined\n                    if (tenantId === null || tenantId === undefined) {\n                        throw new base_1.RequiredError('tenantId', 'Required parameter tenantId was null or undefined when calling showTenant.');\n                    }\n                    localVarPath = \"/tenants/{tenant_id}\"\n                        .replace(\"{\" + \"tenant_id\" + \"}\", encodeURIComponent(String(tenantId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Run a task to seed the Tenant Groups required for an org admin to onboard additional users.\n         * @summary Seed Tenant Groups\n         * @param {string} tenantId ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        tenantSeed: function (tenantId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'tenantId' is not null or undefined\n                    if (tenantId === null || tenantId === undefined) {\n                        throw new base_1.RequiredError('tenantId', 'Required parameter tenantId was null or undefined when calling tenantSeed.');\n                    }\n                    localVarPath = \"/tenants/{tenant_id}/seed\"\n                        .replace(\"{\" + \"tenant_id\" + \"}\", encodeURIComponent(String(tenantId)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication BasicAuth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * TenantApi - functional programming interface\n * @export\n */\nexports.TenantApiFp = function (configuration) {\n    return {\n        /**\n         * Get a list of tenants.\n         * @summary List Tenants\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTenants: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.TenantApiAxiosParamCreator(configuration).listTenants(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Gets the tenant specified by the tenant id.\n         * @summary Get a specific Tenant\n         * @param {string} tenantId ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showTenant: function (tenantId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.TenantApiAxiosParamCreator(configuration).showTenant(tenantId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Run a task to seed the Tenant Groups required for an org admin to onboard additional users.\n         * @summary Seed Tenant Groups\n         * @param {string} tenantId ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        tenantSeed: function (tenantId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.TenantApiAxiosParamCreator(configuration).tenantSeed(tenantId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * TenantApi - factory interface\n * @export\n */\nexports.TenantApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Get a list of tenants.\n         * @summary List Tenants\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listTenants: function (options) {\n            return exports.TenantApiFp(configuration).listTenants(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Gets the tenant specified by the tenant id.\n         * @summary Get a specific Tenant\n         * @param {string} tenantId ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        showTenant: function (tenantId, options) {\n            return exports.TenantApiFp(configuration).showTenant(tenantId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Run a task to seed the Tenant Groups required for an org admin to onboard additional users.\n         * @summary Seed Tenant Groups\n         * @param {string} tenantId ID of the resource\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        tenantSeed: function (tenantId, options) {\n            return exports.TenantApiFp(configuration).tenantSeed(tenantId, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * TenantApi - object-oriented interface\n * @export\n * @class TenantApi\n * @extends {BaseAPI}\n */\nvar TenantApi = /** @class */ (function (_super) {\n    __extends(TenantApi, _super);\n    function TenantApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Get a list of tenants.\n     * @summary List Tenants\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TenantApi\n     */\n    TenantApi.prototype.listTenants = function (options) {\n        var _this = this;\n        return exports.TenantApiFp(this.configuration).listTenants(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Gets the tenant specified by the tenant id.\n     * @summary Get a specific Tenant\n     * @param {string} tenantId ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TenantApi\n     */\n    TenantApi.prototype.showTenant = function (tenantId, options) {\n        var _this = this;\n        return exports.TenantApiFp(this.configuration).showTenant(tenantId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Run a task to seed the Tenant Groups required for an org admin to onboard additional users.\n     * @summary Seed Tenant Groups\n     * @param {string} tenantId ID of the resource\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TenantApi\n     */\n    TenantApi.prototype.tenantSeed = function (tenantId, options) {\n        var _this = this;\n        return exports.TenantApiFp(this.configuration).tenantSeed(tenantId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return TenantApi;\n}(base_1.BaseAPI));\nexports.TenantApi = TenantApi;\n","\"use strict\";\n// tslint:disable\n/**\n * Catalog API\n * This API gets and orders catalog items from different cloud sources.\n *\n * The version of the OpenAPI document: 1.3.0\n * Contact: support@redhat.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Some imports not used depending on template conditions\n// @ts-ignore\nvar axios_1 = require(\"axios\");\nexports.BASE_PATH = \"https://cloud.redhat.com//api/catalog/v1.3\".replace(/\\/+$/, \"\");\n/**\n *\n * @export\n */\nexports.COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n/**\n *\n * @export\n * @class BaseAPI\n */\nvar BaseAPI = /** @class */ (function () {\n    function BaseAPI(configuration, basePath, axios) {\n        if (basePath === void 0) { basePath = exports.BASE_PATH; }\n        if (axios === void 0) { axios = axios_1.default; }\n        this.basePath = basePath;\n        this.axios = axios;\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n    return BaseAPI;\n}());\nexports.BaseAPI = BaseAPI;\n;\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nvar RequiredError = /** @class */ (function (_super) {\n    __extends(RequiredError, _super);\n    function RequiredError(field, msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.field = field;\n        _this.name = \"RequiredError\";\n        return _this;\n    }\n    return RequiredError;\n}(Error));\nexports.RequiredError = RequiredError;\n","\"use strict\";\n// tslint:disable\n/**\n * Catalog API\n * This API gets and orders catalog items from different cloud sources.\n *\n * The version of the OpenAPI document: 1.3.0\n * Contact: support@redhat.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Configuration = /** @class */ (function () {\n    function Configuration(param) {\n        if (param === void 0) { param = {}; }\n        this.apiKey = param.apiKey;\n        this.username = param.username;\n        this.password = param.password;\n        this.accessToken = param.accessToken;\n        this.basePath = param.basePath;\n        this.baseOptions = param.baseOptions;\n    }\n    return Configuration;\n}());\nexports.Configuration = Configuration;\n","\"use strict\";\n// tslint:disable\n/**\n * Catalog API\n * This API gets and orders catalog items from different cloud sources.\n *\n * The version of the OpenAPI document: 1.3.0\n * Contact: support@redhat.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./api\"));\n__export(require(\"./configuration\"));\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Alert } from \"@patternfly/react-core/dist/esm/components/Alert/Alert.js\";\nimport { TextContent } from \"@patternfly/react-core/dist/esm/components/Text/TextContent.js\";\nimport { Text } from \"@patternfly/react-core/dist/esm/components/Text/Text.js\";\nimport { TextVariants } from \"@patternfly/react-core/dist/esm/components/Text/Text.js\";\nimport { AlertActionCloseButton } from \"@patternfly/react-core/dist/esm/components/Alert/AlertActionCloseButton.js\";\nimport CloseIcon from \"@patternfly/react-icons/dist/esm/icons/close-icon\";\nimport PropTypes from 'prop-types';\nimport \"../../Notification/./notification.css\";\n/**\n * Add some enter and dismiss animation later when PF has designs\n */\n\nvar DEFAULT_DELAY = 8000;\n/**\n * This is a notification component used for showing toast notifications accross the platform UI.\n * Component is used with notification reducer, notification portal and notification middleware.\n * But can be also used as a standalone component.\n */\n\nexport var Notification = /*#__PURE__*/function (_Component) {\n  _inherits(Notification, _Component);\n\n  var _super = _createSuper(Notification);\n\n  function Notification(props) {\n    var _this;\n\n    _classCallCheck(this, Notification);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDismiss\", function () {\n      _this.props.onDismiss(_this.props.id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setDismissTimeout\", function () {\n      if (_this.props.autoDismiss) {\n        _this.dismissTimeout = setTimeout(function () {\n          return _this.handleDismiss();\n        }, _this.props.dismissDelay);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearDismissTimeout\", function () {\n      if (_this.dismissTimeout) {\n        clearTimeout(_this.dismissTimeout);\n      }\n    });\n\n    _this.handleDismiss = _this.handleDismiss.bind(_assertThisInitialized(_this));\n\n    _this.setDismissTimeout();\n\n    return _this;\n  }\n\n  _createClass(Notification, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.clearDismissTimeout();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          description = _this$props.description,\n          dismissable = _this$props.dismissable,\n          onDismiss = _this$props.onDismiss,\n          dismissDelay = _this$props.dismissDelay,\n          title = _this$props.title,\n          sentryId = _this$props.sentryId,\n          requestId = _this$props.requestId,\n          autoDismiss = _this$props.autoDismiss,\n          rest = _objectWithoutProperties(_this$props, [\"description\", \"dismissable\", \"onDismiss\", \"dismissDelay\", \"title\", \"sentryId\", \"requestId\", \"autoDismiss\"]);\n\n      return /*#__PURE__*/React.createElement(Alert, _extends({\n        className: \"notification-item\",\n        title: title && title.replace(/<\\/?[^>]+(>|$)/g, '')\n      }, rest, {\n        actionClose: dismissable ? /*#__PURE__*/React.createElement(AlertActionCloseButton, {\n          \"aria-label\": \"close-notification\",\n          variant: \"plain\",\n          onClick: this.handleDismiss\n        }, /*#__PURE__*/React.createElement(CloseIcon, null)) : null,\n        onMouseEnter: this.clearDismissTimeout,\n        onMouseLeave: this.setDismissTimeout\n      }), typeof description === 'string' ? description.replace(/<\\/?[^>]+(>|$)/g, '') : description, sentryId && /*#__PURE__*/React.createElement(TextContent, null, /*#__PURE__*/React.createElement(Text, {\n        component: TextVariants.small\n      }, \"Tracking Id: \", sentryId)), requestId && /*#__PURE__*/React.createElement(TextContent, null, /*#__PURE__*/React.createElement(Text, {\n        component: TextVariants.small\n      }, \"Request Id: \", requestId)));\n    }\n  }]);\n\n  return Notification;\n}(Component);\nNotification.propTypes = {\n  /**\n   * Flag to automatically call `onDismiss` after `dismissDelay` runs out.\n   */\n  autoDismiss: PropTypes.bool,\n\n  /**\n   * Flag to show/hide notification close button.\n   */\n  dismissable: PropTypes.bool,\n\n  /**\n   * Funcation called after dismiss action is triggered. (id) => void\n   */\n  onDismiss: PropTypes.func.isRequired,\n\n  /**\n   * Unique ID\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Alert variant. <a href=\"https://www.patternfly.org/v4/components/alert#types\" target=\"_blank\">More info.</a>\n   */\n  variant: PropTypes.oneOf(['info', 'success', 'warning', 'danger']).isRequired,\n\n  /**\n   * Alert title\n   */\n  title: PropTypes.node.isRequired,\n\n  /**\n   * Alert description\n   */\n  description: PropTypes.node,\n\n  /**\n   * Time period after which `onDismiss` is called.\n   */\n  dismissDelay: PropTypes.number,\n\n  /**\n   * Unique request ID.\n   */\n  requestId: PropTypes.string,\n\n  /**\n   * Unique sentry error ID.\n   */\n  sentryId: PropTypes.string\n};\nNotification.defaultProps = {\n  dismissDelay: DEFAULT_DELAY,\n  autoDismiss: true,\n  dismissable: true\n};\nexport default Notification;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from \"@patternfly/react-core/dist/esm/components/Card/Card.js\";\nimport { CardBody } from \"@patternfly/react-core/dist/esm/components/Card/CardBody.js\";\nimport { Button } from \"@patternfly/react-core/dist/esm/components/Button/Button.js\";\nimport { ButtonVariant } from \"@patternfly/react-core/dist/esm/components/Button/Button.js\";\nimport { Pagination } from \"@patternfly/react-core/dist/esm/components/Pagination/Pagination.js\";\nimport { Level } from \"@patternfly/react-core/dist/esm/layouts/Level/Level.js\";\nimport { LevelItem } from \"@patternfly/react-core/dist/esm/layouts/Level/LevelItem.js\";\nimport { PaginationVariant } from \"@patternfly/react-core/dist/esm/components/Pagination/Pagination.js\";\nexport var NotificationPagination = function NotificationPagination(_ref) {\n  var page = _ref.page,\n      onSetPage = _ref.onSetPage,\n      onClearAll = _ref.onClearAll,\n      count = _ref.count;\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"notification-item\"\n  }, /*#__PURE__*/React.createElement(CardBody, null, /*#__PURE__*/React.createElement(Level, null, /*#__PURE__*/React.createElement(LevelItem, null, /*#__PURE__*/React.createElement(Button, {\n    variant: ButtonVariant.link,\n    className: \"ins-c-pagination__clear-all\",\n    onClick: onClearAll\n  }, \"Clear all\")), /*#__PURE__*/React.createElement(LevelItem, null, /*#__PURE__*/React.createElement(Pagination, {\n    itemCount: count,\n    variant: PaginationVariant.bottom,\n    perPageOptions: [{\n      title: '5',\n      value: 5\n    }],\n    titles: {\n      items: 'Notifications'\n    },\n    perPage: 5,\n    page: page,\n    onSetPage: onSetPage\n  })))));\n};\nNotificationPagination.propTypes = {\n  count: PropTypes.number,\n  page: PropTypes.number,\n  onSetPage: PropTypes.func,\n  onClearAll: PropTypes.func\n};\nNotificationPagination.defaultProps = {\n  count: 0,\n  page: 1,\n  onSetPage: Function,\n  onClearAll: Function\n};\nexport default NotificationPagination;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Notification from '../Notification';\nimport NotificationPagination from '../NotificationPagination';\nimport \"../../Portal/./portal.css\";\n\nvar Portal = /*#__PURE__*/function (_Component) {\n  _inherits(Portal, _Component);\n\n  var _super = _createSuper(Portal);\n\n  function Portal() {\n    var _this;\n\n    _classCallCheck(this, Portal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      page: 1\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetPage\", function (_event, page) {\n      _this.setState({\n        page: page\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Portal, [{\n    key: \"render\",\n    value: function render() {\n      var page = this.state.page;\n      var _this$props = this.props,\n          notifications = _this$props.notifications,\n          removeNotification = _this$props.removeNotification,\n          rootId = _this$props.rootId,\n          onClearAll = _this$props.onClearAll;\n      var slicedNotifications = notifications && notifications.length <= 5 ? notifications : notifications && notifications.slice((page - 1) * 5, page * 5);\n      return !notifications || Array.isArray(notifications) && notifications.length === 0 ? null : /*#__PURE__*/createPortal( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"notifications-portal\"\n      }, notifications && notifications.length > 5 && /*#__PURE__*/React.createElement(NotificationPagination, {\n        onSetPage: this.onSetPage,\n        count: notifications.length,\n        page: page,\n        onClearAll: onClearAll\n      }), slicedNotifications.map(function (props) {\n        return /*#__PURE__*/React.createElement(Notification, _extends({\n          onDismiss: removeNotification,\n          key: props.id\n        }, props));\n      })), document.getElementById(rootId) || document.body);\n    }\n  }]);\n\n  return Portal;\n}(Component);\n\n;\nPortal.propTypes = {\n  notifications: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    variant: PropTypes.string.isRequired,\n    description: PropTypes.node,\n    dismissable: PropTypes.bool\n  })),\n  removeNotification: PropTypes.func.isRequired,\n  onClearAll: PropTypes.func,\n  rootId: PropTypes.string\n};\nexport default Portal;","import { connect } from 'react-redux';\nimport Portal from '../Portal';\nimport { removeNotification, clearNotifications } from '../redux/actions/notifications';\n\nvar mapStateToProps = function mapStateToProps(_ref, initialProps) {\n  var notifications = _ref.notifications;\n  return {\n    notifications: initialProps.notifications || notifications\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, initialProps) {\n  return {\n    removeNotification: initialProps.removeNotification ? initialProps.removeNotification : function (id) {\n      return dispatch(removeNotification(id));\n    },\n    onClearAll: initialProps.clearNotifications ? initialProps.clearNotifications : function () {\n      return dispatch(clearNotifications());\n    }\n  };\n};\n\nexport var NotificationPortal = connect(mapStateToProps, mapDispatchToProps)(Portal);\nexport { default as Portal } from '../Portal';\nexport default NotificationPortal;","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport get from 'lodash/get';\nimport has from 'lodash/has';\nimport { addNotification } from '../redux/actions/notifications';\n\nvar prepareErrorMessage = function prepareErrorMessage(payload, errorTitleKey, errorDescriptionKey) {\n  if (typeof payload === 'string') {\n    return {\n      title: 'Error',\n      description: payload\n    };\n  }\n\n  var titleKey = errorTitleKey;\n\n  if (Array.isArray(errorTitleKey)) {\n    titleKey = errorTitleKey.find(function (key) {\n      return has(payload, key);\n    });\n  }\n\n  var descriptionKey = errorDescriptionKey;\n\n  if (Array.isArray(errorDescriptionKey)) {\n    descriptionKey = errorDescriptionKey.find(function (key) {\n      return has(payload, key);\n    });\n  }\n\n  return {\n    title: get(payload, titleKey) || 'Error',\n    description: get(payload, descriptionKey),\n    sentryId: payload && payload.sentryId,\n    requestId: payload && payload.requestId\n  };\n};\n\nvar shouldDispatchDefaultError = function shouldDispatchDefaultError(_ref) {\n  var isRejected = _ref.isRejected,\n      hasCustomNotification = _ref.hasCustomNotification,\n      noErrorOverride = _ref.noErrorOverride,\n      dispatchDefaultFailure = _ref.dispatchDefaultFailure;\n  return isRejected && !hasCustomNotification && !noErrorOverride && dispatchDefaultFailure;\n};\n\nexport var createNotificationsMiddleware = function createNotificationsMiddleware() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaultOptions = {\n    dispatchDefaultFailure: true,\n    pendingSuffix: '_PENDING',\n    fulfilledSuffix: '_FULFILLED',\n    rejectedSuffix: '_REJECTED',\n    autoDismiss: false,\n    dismissDelay: 5000,\n    errorTitleKey: 'title',\n    errorDescriptionKey: 'detail',\n    useStatusText: false\n  };\n\n  var middlewareOptions = _objectSpread(_objectSpread({}, defaultOptions), options);\n\n  var matchPending = function matchPending(type) {\n    return type.match(new RegExp(\"^.*\".concat(middlewareOptions.pendingSuffix, \"$\")));\n  };\n\n  var matchFulfilled = function matchFulfilled(type) {\n    return type.match(new RegExp(\"^.*\".concat(middlewareOptions.fulfilledSuffix, \"$\")));\n  };\n\n  var matchRejected = function matchRejected(type) {\n    return type.match(new RegExp(\"^.*\".concat(middlewareOptions.rejectedSuffix, \"$\")));\n  };\n\n  var defaultNotificationOptions = {\n    dismissable: !middlewareOptions.autoDismiss,\n    dismissDelay: middlewareOptions.dismissDelay\n  };\n  return function (_ref2) {\n    var dispatch = _ref2.dispatch;\n    return function (next) {\n      return function (action) {\n        var meta = action.meta,\n            type = action.type;\n\n        if (meta && meta.notifications) {\n          var notifications = meta.notifications;\n\n          if (matchPending(type) && notifications.pending) {\n            dispatch(addNotification(_objectSpread(_objectSpread({}, defaultNotificationOptions), notifications.pending)));\n          } else if (matchFulfilled(type) && notifications.fulfilled) {\n            dispatch(addNotification(_objectSpread(_objectSpread({}, defaultNotificationOptions), notifications.fulfilled)));\n          } else if (matchRejected(type) && notifications.rejected) {\n            dispatch(addNotification(_objectSpread(_objectSpread(_objectSpread({}, defaultNotificationOptions), notifications.rejected), {}, {\n              sentryId: action.payload && action.payload.sentryId,\n              requestId: action.payload && action.payload.requestId\n            })));\n          }\n        }\n\n        if (shouldDispatchDefaultError({\n          isRejected: matchRejected(type),\n          hasCustomNotification: meta && meta.notifications && meta.notifications.rejected,\n          noErrorOverride: meta && meta.noError,\n          dispatchDefaultFailure: middlewareOptions.dispatchDefaultFailure\n        })) {\n          if (middlewareOptions.useStatusText) {\n            dispatch(addNotification(_objectSpread({\n              variant: 'danger',\n              dismissable: true\n            }, prepareErrorMessage(action.payload, middlewareOptions.errorTitleKey, 'statusText'))));\n          } else {\n            var namespaceKey = Array.isArray(middlewareOptions.errorNamespaceKey) && middlewareOptions.errorNamespaceKey.find(function (key) {\n              return has(action.payload, key);\n            });\n\n            if (namespaceKey) {\n              get(action.payload, namespaceKey).map(function (item) {\n                dispatch(addNotification(_objectSpread({\n                  variant: 'danger',\n                  dismissable: true\n                }, prepareErrorMessage(item, middlewareOptions.errorTitleKey, middlewareOptions.errorDescriptionKey))));\n              });\n            } else {\n              if (Array.isArray(action.payload)) {\n                action.payload.map(function (item) {\n                  dispatch(addNotification(_objectSpread({\n                    variant: 'danger',\n                    dismissable: true\n                  }, prepareErrorMessage(item, middlewareOptions.errorTitleKey, middlewareOptions.errorDescriptionKey))));\n                });\n              } else {\n                dispatch(addNotification(_objectSpread({\n                  variant: 'danger',\n                  dismissable: true\n                }, prepareErrorMessage(action.payload, middlewareOptions.errorTitleKey, middlewareOptions.errorDescriptionKey))));\n              }\n            }\n          }\n        }\n\n        next(action);\n      };\n    };\n  };\n};\nexport default createNotificationsMiddleware;","var notificationsPrefix = '@@INSIGHTS-CORE/NOTIFICATIONS/';\nexport var ADD_NOTIFICATION = \"\".concat(notificationsPrefix, \"ADD_NOTIFICATION\");\nexport var REMOVE_NOTIFICATION = \"\".concat(notificationsPrefix, \"REMOVE_NOTIFICATION\");\nexport var CLEAR_NOTIFICATIONS = \"\".concat(notificationsPrefix, \"CLEAR_NOTIFICATIONS\");\nexport default {\n  ADD_NOTIFICATION: ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION: REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS: CLEAR_NOTIFICATIONS\n};","import { ADD_NOTIFICATION, REMOVE_NOTIFICATION, CLEAR_NOTIFICATIONS } from './action-types';\nexport var addNotification = function addNotification(notification) {\n  return {\n    type: ADD_NOTIFICATION,\n    payload: notification\n  };\n};\nexport var removeNotification = function removeNotification(index) {\n  return {\n    type: REMOVE_NOTIFICATION,\n    payload: index\n  };\n};\nexport var clearNotifications = function clearNotifications() {\n  return {\n    type: CLEAR_NOTIFICATIONS\n  };\n};\nexport default {\n  addNotification: addNotification,\n  removeNotification: removeNotification,\n  clearNotifications: clearNotifications\n};","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_NOTIFICATION, REMOVE_NOTIFICATION, CLEAR_NOTIFICATIONS } from '../actions/action-types';\n\nfunction generateID(type) {\n  var text = 'cloud-services' + type + '-' + new Date().getTime() + Math.random().toString(36).slice(2);\n  return text;\n}\n\nvar addNotification = function addNotification(notifications, _ref) {\n  var payload = _ref.payload;\n  return [].concat(_toConsumableArray(notifications), [_objectSpread({\n    id: generateID('notification')\n  }, payload)]);\n};\n\nvar removeNotification = function removeNotification(notifications, _ref2) {\n  var payload = _ref2.payload;\n  var index = notifications.findIndex(function (_ref3) {\n    var id = _ref3.id;\n    return id === payload;\n  });\n  return [].concat(_toConsumableArray(notifications.slice(0, index)), _toConsumableArray(notifications.slice(index + 1)));\n};\n\nvar clearNotifications = function clearNotifications() {\n  return [];\n};\n\nexport var defaultState = [];\nexport var notificationsReducers = function notificationsReducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_NOTIFICATION:\n      return addNotification(state, action);\n\n    case REMOVE_NOTIFICATION:\n      return removeNotification(state, action);\n\n    case CLEAR_NOTIFICATIONS:\n      return clearNotifications(state, action);\n\n    default:\n      return state;\n  }\n};\nexport var notifications = notificationsReducers;\nexport default notifications;","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { applyMiddleware, combineReducers, createStore, compose } from 'redux';\nexport function applyReducerHash(reducerHash) {\n  var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    if (Object.prototype.hasOwnProperty.call(reducerHash, action.type)) {\n      return reducerHash[action.type](state, action);\n    }\n\n    return state;\n  };\n}\nexport function dispatchActionsToStore(actions, store) {\n  return Object.keys(actions).reduce(function (acc, curr) {\n    return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, curr, function () {\n      return store && store.dispatch(actions[curr].apply(actions, arguments));\n    }));\n  }, {});\n}\n/**\n * Class used to added reducers to the store during runtime.\n *\n * http://nicolasgallagher.com/redux-modules-and-code-splitting/\n */\n\nexport var ReducerRegistry = /*#__PURE__*/function () {\n  function ReducerRegistry() {\n    var initState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var middlewares = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var composeEnhancersDefault = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : compose;\n\n    _classCallCheck(this, ReducerRegistry);\n\n    var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || composeEnhancersDefault;\n    this.store = createStore(function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n      return state;\n    }, initState, composeEnhancers(applyMiddleware.apply(void 0, _toConsumableArray(middlewares))));\n    this.reducers = {};\n  }\n\n  _createClass(ReducerRegistry, [{\n    key: \"getStore\",\n    value: function getStore() {\n      return this.store;\n    }\n    /**\n     * Adds new reducers to the store\n     *\n     * @param newReducers the object of new reducers.\n     */\n\n  }, {\n    key: \"register\",\n    value: function register(newReducers) {\n      var _this = this;\n\n      this.reducers = _objectSpread(_objectSpread({}, this.reducers), newReducers);\n      this.store.replaceReducer(combineReducers(_objectSpread({}, this.reducers)));\n      return function () {\n        _this.reducers = Object.entries(_this.reducers).filter(function (reducer) {\n          return !Object.keys(newReducers).includes(reducer);\n        }).reduce(function (acc, _ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              key = _ref2[0],\n              val = _ref2[1];\n\n          return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, val));\n        }, {});\n\n        _this.store.replaceReducer(combineReducers(_objectSpread({}, _this.reducers)));\n      };\n    }\n  }]);\n\n  return ReducerRegistry;\n}();\nexport var reduxRegistry = new ReducerRegistry();\nexport default ReducerRegistry;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { Tooltip } from \"@patternfly/react-core/dist/esm/components/Tooltip/Tooltip.js\";\nvar second = 1000;\nvar minute = second * 60;\nvar hour = minute * 60;\nvar day = hour * 24;\nvar month = day * 30; // let's count that every month has 30 days\n\nvar year = day * 365;\n\nvar formatTime = function formatTime(number, unit) {\n  return \"\".concat(number, \" \").concat(number > 1 ? \"\".concat(unit, \"s\") : unit, \" ago\");\n};\n\nvar relativeTimeTable = [{\n  rightBound: Infinity,\n  description: function description(date) {\n    return formatTime(Math.round(date / year), 'year');\n  }\n}, {\n  rightBound: year,\n  description: function description(date) {\n    return formatTime(Math.round(date / month), 'month');\n  }\n}, {\n  rightBound: month,\n  description: function description(date) {\n    return formatTime(Math.round(date / day), 'day');\n  }\n}, {\n  rightBound: day,\n  description: function description(date) {\n    return formatTime(Math.round(date / hour), 'hour');\n  }\n}, {\n  rightBound: hour,\n  description: function description(date) {\n    return formatTime(Math.round(date / minute), 'minute');\n  }\n}, {\n  rightBound: minute,\n  description: function description() {\n    return 'Just now';\n  }\n}];\n\nvar _exact = function exact(value) {\n  return value.toUTCString().split(',')[1].slice(0, -7).trim();\n};\n\nexport var addTooltip = function addTooltip(date, element, tooltipProps) {\n  var extraTitle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n  return /*#__PURE__*/React.createElement(Tooltip, _extends({}, tooltipProps, {\n    content: /*#__PURE__*/React.createElement(\"div\", null, extraTitle, date)\n  }), element);\n};\nexport var dateStringByType = function dateStringByType(type) {\n  return {\n    exact: function exact(date) {\n      return _exact(date) + ' UTC';\n    },\n    onlyDate: function onlyDate(date) {\n      return _exact(date).slice(0, -6);\n    },\n    relative: function relative(date) {\n      return relativeTimeTable.reduce(function (acc, i) {\n        return i.rightBound > Date.now() - date ? i.description(Date.now() - date) : acc;\n      }, _exact(date));\n    },\n    invalid: function invalid() {\n      return 'Invalid date';\n    }\n  }[type];\n};\nexport var dateByType = function dateByType(type, tooltipProps, extraTitle) {\n  return {\n    exact: function exact(date) {\n      return dateStringByType(type)(date);\n    },\n    onlyDate: function onlyDate(date) {\n      return dateStringByType(type)(date);\n    },\n    relative: function relative(date) {\n      return addTooltip(dateStringByType('exact')(date), /*#__PURE__*/React.createElement(\"span\", null, dateStringByType(type)(date)), tooltipProps, extraTitle);\n    },\n    invalid: function invalid() {\n      return 'Invalid date';\n    }\n  }[type];\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { dateByType } from './helper';\n/**\n * A component that formats date to a unified CRC format.\n * Relative date format adds a tooltip with a full date string.\n */\n\nexport default function DateFormat(_ref) {\n  var date = _ref.date,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'relative' : _ref$type,\n      extraTitle = _ref.extraTitle,\n      _ref$tooltipProps = _ref.tooltipProps,\n      tooltipProps = _ref$tooltipProps === void 0 ? {} : _ref$tooltipProps;\n  var dateObj = date instanceof Date ? date : new Date(date); // Prevent treating null as valid. (new Date(null) == new Date(0) returns 1970 Jan 1)\n\n  var invalid = date === undefined || date === null || dateObj.toString() === 'Invalid Date';\n  var dateType = invalid ? 'invalid' : type;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dateByType(dateType, tooltipProps, extraTitle)(dateObj));\n}\nDateFormat.propTypes = {\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string, PropTypes.number]),\n\n  /**\n   * Output format of the date\n   */\n  type: PropTypes.oneOf(['exact', 'onlyDate', 'relative']),\n\n  /**\n   * Additional text in the tooltip\n   */\n  extraTitle: PropTypes.node,\n\n  /**\n   * <a target=\"_blank\" href=\"https://www.patternfly.org/v4/components/tooltip/#props\">PF Tooltip props object</a>\n   */\n  tooltipProps: PropTypes.object\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport \"../../EmptyTable/./EmptyTable.css\";\n\nvar EmptyTable = function EmptyTable(_ref) {\n  var centered = _ref.centered,\n      className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"centered\", \"className\", \"children\"]);\n\n  var emptyTableClasses = classNames('ins-c-table__empty', _defineProperty({}, \"is-centered\", centered), className);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: emptyTableClasses\n  }, props), \" \", children);\n};\n\nexport default EmptyTable;\nEmptyTable.propTypes = {\n  centered: propTypes.bool,\n  children: propTypes.any,\n  className: propTypes.string\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Dropdown } from \"@patternfly/react-core/dist/esm/components/Dropdown/Dropdown.js\";\nimport { DropdownItem } from \"@patternfly/react-core/dist/esm/components/Dropdown/DropdownItem.js\";\nimport { DropdownToggle } from \"@patternfly/react-core/dist/esm/components/Dropdown/DropdownToggle.js\";\nimport { Tooltip } from \"@patternfly/react-core/dist/esm/components/Tooltip/Tooltip.js\";\nimport React, { Component } from 'react';\nimport ExportIcon from \"@patternfly/react-icons/dist/esm/icons/export-icon\";\nimport PropTypes from 'prop-types';\n\nvar DownloadButton = /*#__PURE__*/function (_Component) {\n  _inherits(DownloadButton, _Component);\n\n  var _super = _createSuper(DownloadButton);\n\n  function DownloadButton() {\n    var _this;\n\n    _classCallCheck(this, DownloadButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isOpen: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggle\", function (isOpen) {\n      _this.setState({\n        isOpen: isOpen\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelect\", function () {\n      _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"conditionallyTooltip\", function (children) {\n      var tooltipText = _this.props.tooltipText;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, tooltipText ? /*#__PURE__*/React.createElement(Tooltip, {\n        content: tooltipText\n      }, children) : children);\n    });\n\n    return _this;\n  }\n\n  _createClass(DownloadButton, [{\n    key: \"render\",\n    value: function render() {\n      var isOpen = this.state.isOpen;\n\n      var _this$props = this.props,\n          extraItems = _this$props.extraItems,\n          onSelect = _this$props.onSelect,\n          isDisabled = _this$props.isDisabled,\n          tooltipText = _this$props.tooltipText,\n          props = _objectWithoutProperties(_this$props, [\"extraItems\", \"onSelect\", \"isDisabled\", \"tooltipText\"]);\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.conditionallyTooltip( /*#__PURE__*/React.createElement(Dropdown, _extends({}, props, {\n        isPlain: true,\n        onSelect: this.onSelect,\n        toggle: /*#__PURE__*/React.createElement(DropdownToggle, {\n          toggleIndicator: null,\n          onToggle: this.onToggle,\n          isDisabled: isDisabled,\n          ouiaId: \"toggle\"\n        }, /*#__PURE__*/React.createElement(ExportIcon, {\n          size: \"sm\"\n        })),\n        isOpen: isOpen,\n        dropdownItems: [/*#__PURE__*/React.createElement(DropdownItem, {\n          key: \"download-csv\",\n          ouiaId: \"download-csv\",\n          component: \"button\",\n          onClick: function onClick(event) {\n            return onSelect(event, 'csv');\n          },\n          isDisabled: isDisabled\n        }, \"Export to CSV\"), /*#__PURE__*/React.createElement(DropdownItem, {\n          key: \"download-json\",\n          ouiaId: \"download-json\",\n          component: \"button\",\n          onClick: function onClick(event) {\n            return onSelect(event, 'json');\n          },\n          isDisabled: isDisabled\n        }, \"Export to JSON\")].concat(_toConsumableArray(extraItems))\n      }))));\n    }\n  }]);\n\n  return DownloadButton;\n}(Component);\n\nDownloadButton.propTypes = {\n  extraItems: PropTypes.arrayOf(PropTypes.node),\n  tooltipText: PropTypes.node,\n  onSelect: PropTypes.func,\n  isDisabled: PropTypes.bool\n};\nDownloadButton.defaultProps = {\n  extraItems: [],\n  onSelect: function onSelect() {\n    return undefined;\n  }\n};\nexport default DownloadButton;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _toArray from \"@babel/runtime/helpers/toArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, Fragment } from 'react';\nimport { Dropdown } from \"@patternfly/react-core/dist/esm/components/Dropdown/Dropdown.js\";\nimport { DropdownItem } from \"@patternfly/react-core/dist/esm/components/Dropdown/DropdownItem.js\";\nimport { KebabToggle } from \"@patternfly/react-core/dist/esm/components/Dropdown/KebabToggle.js\";\nimport { Button } from \"@patternfly/react-core/dist/esm/components/Button/Button.js\";\nimport { DropdownSeparator } from \"@patternfly/react-core/dist/esm/components/Dropdown/DropdownSeparator.js\";\nimport { ToolbarItem } from \"@patternfly/react-core/dist/esm/components/Toolbar/ToolbarItem.js\";\nimport PropTypes from 'prop-types';\nimport { DownloadButton } from '../DownloadButton';\nexport var overflowActionsMapper = function overflowActionsMapper(action, key) {\n  return /*#__PURE__*/React.createElement(DropdownItem, _extends({}, action.props, {\n    className: \"ins-c-primary-toolbar__overflow-actions\",\n    key: action.value || action.key || \"\".concat(key, \"-overflow\"),\n    component: action.props && action.props.component || /*#__PURE__*/React.isValidElement(action.label || action) ? 'div' : 'button',\n    onClick: function onClick(e) {\n      return action.onClick && action.onClick(e, action, key);\n    }\n  }), action.label || action);\n};\nexport var actionPropsGenerator = function actionPropsGenerator(action, key) {\n  return _objectSpread(_objectSpread({}, action.props), {}, {\n    component: action.props && action.props.component || ( /*#__PURE__*/React.isValidElement(action.label || action) ? 'div' : 'button'),\n    onClick: function onClick(e) {\n      return action.onClick && action.onClick(e, action, key);\n    },\n    children: action.label || action\n  });\n};\n\nvar Actions = /*#__PURE__*/function (_Component) {\n  _inherits(Actions, _Component);\n\n  var _super = _createSuper(Actions);\n\n  function Actions() {\n    var _this;\n\n    _classCallCheck(this, Actions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isOpen: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleOpen\", function (isOpen) {\n      _this.setState({\n        isOpen: isOpen\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Actions, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isOpen = this.state.isOpen;\n      var _this$props = this.props,\n          actions = _this$props.actions,\n          overflowActions = _this$props.overflowActions,\n          _onSelect = _this$props.onSelect,\n          dropdownProps = _this$props.dropdownProps,\n          kebabToggleProps = _this$props.kebabToggleProps,\n          exportConfig = _this$props.exportConfig;\n\n      var _actions = _toArray(actions),\n          firstAction = _actions[0],\n          restActions = _actions.slice(1);\n\n      return /*#__PURE__*/React.createElement(Fragment, null, firstAction && /*#__PURE__*/React.createElement(ToolbarItem, {\n        className: \"ins-c-primary-toolbar__first-action pf-m-spacer-sm\"\n      }, firstAction.label ? /*#__PURE__*/React.createElement(Button, _extends({}, firstAction.props, {\n        onClick: firstAction.onClick || firstAction.props && firstAction.props.onClick || undefined\n      }), firstAction.label) : firstAction), exportConfig && (exportConfig.extraItems || exportConfig.onSelect) && /*#__PURE__*/React.createElement(ToolbarItem, {\n        className: \"pf-m-spacer-sm\"\n      }, /*#__PURE__*/React.createElement(DownloadButton, exportConfig)), (actions && actions.length > 0 || overflowActions.length > 0) && /*#__PURE__*/React.createElement(ToolbarItem, {\n        className: \"\".concat(actions.length <= 1 ? 'ins-m-actions--empty' : '', \" ins-c-primary-toolbar__actions pf-m-spacer-sm\")\n      }, /*#__PURE__*/React.createElement(Dropdown, _extends({}, dropdownProps, {\n        isOpen: isOpen,\n        isPlain: true,\n        onSelect: function onSelect() {\n          _onSelect && _onSelect.apply(void 0, arguments);\n\n          _this2.toggleOpen(false);\n        },\n        toggle: /*#__PURE__*/React.createElement(KebabToggle, _extends({}, kebabToggleProps, {\n          onToggle: function onToggle(isOpen) {\n            return _this2.toggleOpen(isOpen);\n          }\n        })),\n        dropdownItems: [].concat(_toConsumableArray(firstAction ? [/*#__PURE__*/React.createElement(DropdownItem, _extends({\n          key: \"first-action\"\n        }, actionPropsGenerator(firstAction, 'first-action'), {\n          className: \"ins-c-primary-toolbar__first-action \".concat(firstAction.props && firstAction.props.className || '')\n        }))] : []), _toConsumableArray(restActions.map(function (action, key) {\n          return /*#__PURE__*/React.createElement(DropdownItem, _extends({\n            key: action.key || action && action.props && action.props.key || key\n          }, actionPropsGenerator(action, key)));\n        })), _toConsumableArray(actions.length > 0 && overflowActions.length > 0 ? [/*#__PURE__*/React.createElement(DropdownSeparator, {\n          key: \"separator\",\n          className: \"ins-c-primary-toolbar__overflow-actions-separator\"\n        })] : []), _toConsumableArray(overflowActions.map(overflowActionsMapper)))\n      }))));\n    }\n  }]);\n\n  return Actions;\n}(Component);\n\nvar actionsType = PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.node, PropTypes.shape({\n  label: PropTypes.node,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  onClick: PropTypes.func,\n  props: PropTypes.any\n}), PropTypes.string]));\nActions.propTypes = {\n  actions: actionsType,\n  onSelect: PropTypes.func,\n  overflowActions: actionsType,\n  dropdownProps: PropTypes.shape(_defineProperty({}, PropTypes.string, PropTypes.any)),\n  kebabToggleProps: PropTypes.shape(_defineProperty({}, PropTypes.string, PropTypes.any)),\n  exportConfig: PropTypes.shape(DownloadButton.propTypes)\n};\nActions.defaultProps = {\n  actions: [],\n  overflowActions: [],\n  dropdownProps: {},\n  exportConfig: {},\n  onSelect: function onSelect() {\n    return undefined;\n  }\n};\nexport default Actions;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Dropdown } from \"@patternfly/react-core/dist/esm/components/Dropdown/Dropdown.js\";\nimport { DropdownItem } from \"@patternfly/react-core/dist/esm/components/Dropdown/DropdownItem.js\";\nimport { DropdownToggle } from \"@patternfly/react-core/dist/esm/components/Dropdown/DropdownToggle.js\";\nimport { DropdownToggleCheckbox } from \"@patternfly/react-core/dist/esm/components/Dropdown/DropdownToggleCheckbox.js\";\nimport { Checkbox } from \"@patternfly/react-core/dist/esm/components/Checkbox/Checkbox.js\";\nimport { getDefaultOUIAId } from '@patternfly/react-core/';\nimport \"../../BulkSelect/./bulk-select.css\";\n\nvar BulkSelect = /*#__PURE__*/function (_Component) {\n  _inherits(BulkSelect, _Component);\n\n  var _super = _createSuper(BulkSelect);\n\n  function BulkSelect() {\n    var _this;\n\n    _classCallCheck(this, BulkSelect);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isOpen: false,\n      hasError: false,\n      ouiaStateId: getDefaultOUIAId('RHI/BulkSelect')\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidCatch\", function () {\n      console.error('Above error is caused because you are using outdated PF react core library. Count will not be \\\nvisible unless you update it.');\n\n      _this.setState({\n        hasError: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggle\", function (isOpen) {\n      _this.setState({\n        isOpen: isOpen\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(BulkSelect, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          isOpen = _this$state.isOpen,\n          hasError = _this$state.hasError;\n\n      var _this$props = this.props,\n          id = _this$props.id,\n          isDisabled = _this$props.isDisabled,\n          items = _this$props.items,\n          onSelect = _this$props.onSelect,\n          checked = _this$props.checked,\n          toggleProps = _this$props.toggleProps,\n          count = _this$props.count,\n          className = _this$props.className,\n          ouiaId = _this$props.ouiaId,\n          ouiaSafe = _this$props.ouiaSafe,\n          props = _objectWithoutProperties(_this$props, [\"id\", \"isDisabled\", \"items\", \"onSelect\", \"checked\", \"toggleProps\", \"count\", \"className\", \"ouiaId\", \"ouiaSafe\"]);\n\n      var ouiaFinalId = ouiaId !== undefined ? ouiaId : this.state.ouiaStateId;\n      return /*#__PURE__*/React.createElement(Fragment, null, items && items.length > 0 ? /*#__PURE__*/React.createElement(Dropdown, _extends({\n        onSelect: function onSelect() {\n          return _this2.onToggle(false);\n        }\n      }, props, {\n        className: classnames(className, 'ins-c-bulk-select'),\n        ouiaId: ouiaFinalId,\n        ouiaSafe: ouiaSafe,\n        toggle: /*#__PURE__*/React.createElement(DropdownToggle, _extends({}, toggleProps, {\n          isDisabled: isDisabled,\n          ouiaId: \"\".concat(ouiaFinalId, \"-toggle\"),\n          splitButtonItems: [/*#__PURE__*/React.createElement(Fragment, {\n            key: \"split-checkbox\"\n          }, hasError ? /*#__PURE__*/React.createElement(DropdownToggleCheckbox, {\n            id: id ? \"\".concat(id, \"-toggle-checkbox\") : 'toggle-checkbox',\n            \"aria-label\": \"Select all\",\n            onChange: onSelect,\n            checked: checked,\n            ouiaId: \"\".concat(ouiaFinalId, \"-toggle-checkbox\")\n          }) : /*#__PURE__*/React.createElement(DropdownToggleCheckbox, {\n            id: id ? \"\".concat(id, \"-toggle-checkbox\") : 'toggle-checkbox',\n            \"aria-label\": \"Select all\",\n            onChange: onSelect,\n            isChecked: checked,\n            ouiaId: \"\".concat(ouiaFinalId, \"-toggle-checkbox\")\n          }, count ? \"\".concat(count, \" selected\") : ''))],\n          onToggle: this.onToggle\n        })),\n        isOpen: isOpen,\n        dropdownItems: [].concat(_toConsumableArray(count !== undefined && count > 0 ? [/*#__PURE__*/React.createElement(DropdownItem, {\n          key: \"count\",\n          isDisabled: true,\n          className: !hasError ? 'ins-c-bulk-select__selected' : ''\n        }, count, \" Selected\")] : []), _toConsumableArray(items.map(function (oneItem, key) {\n          return /*#__PURE__*/React.createElement(DropdownItem, _extends({\n            component: \"button\",\n            key: oneItem.key || key,\n            ouiaId: \"\".concat(ouiaFinalId, \"-\").concat(oneItem.key || key),\n            onClick: function onClick(event) {\n              return oneItem.onClick && oneItem.onClick(event, oneItem, key);\n            }\n          }, oneItem === null || oneItem === void 0 ? void 0 : oneItem.props), oneItem.title);\n        })))\n      })) : /*#__PURE__*/React.createElement(Checkbox, _extends({}, props, {\n        className: classnames(className, 'ins-c-bulk-select'),\n        id: \"\".concat(id, \"-checkbox\"),\n        isChecked: checked,\n        onChange: onSelect\n      })));\n    }\n  }]);\n\n  return BulkSelect;\n}(Component);\n\nBulkSelect.propTypes = {\n  count: PropTypes.number,\n  className: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    onClick: PropTypes.func\n  })),\n  checked: PropTypes.bool,\n  id: PropTypes.string,\n  onSelect: PropTypes.func,\n  toggleProps: PropTypes.any,\n  isDisabled: PropTypes.bool,\n  ouiaId: PropTypes.string,\n  ouiaSafe: PropTypes.bool\n};\nBulkSelect.defaultProps = {\n  className: '',\n  isDisabled: false,\n  items: [],\n  checked: false,\n  onSelect: function onSelect() {\n    return undefined;\n  },\n  ouiaSafe: true\n};\nexport default BulkSelect;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput } from \"@patternfly/react-core/dist/esm/components/TextInput/TextInput.js\";\nimport SearchIcon from \"@patternfly/react-icons/dist/esm/icons/search-icon\";\nimport \"../../ConditionalFilter/./conditional-filter.css\";\n\nvar Text = /*#__PURE__*/function (_Component) {\n  _inherits(Text, _Component);\n\n  var _super = _createSuper(Text);\n\n  function Text() {\n    var _this;\n\n    _classCallCheck(this, Text);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      stateValue: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeValue\", function (e, value) {\n      _this.setState({\n        stateValue: value\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Text, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          onChange = _this$props.onChange,\n          onSubmit = _this$props.onSubmit,\n          id = _this$props.id,\n          icon = _this$props.icon,\n          className = _this$props.className,\n          isDisabled = _this$props.isDisabled,\n          props = _objectWithoutProperties(_this$props, [\"value\", \"onChange\", \"onSubmit\", \"id\", \"icon\", \"className\", \"isDisabled\"]);\n\n      var Icon = icon || SearchIcon;\n      var stateValue = this.state.stateValue;\n      var changeCallback = onChange ? onChange : this.onChangeValue;\n      return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(TextInput, _extends({}, props, {\n        className: \"ins-c-conditional-filter \".concat(className || ''),\n        id: id,\n        isDisabled: isDisabled,\n        value: onChange ? value : stateValue,\n        onChange: function onChange(_inputValue, e) {\n          return changeCallback(e, e.target.value);\n        },\n        \"widget-type\": \"InsightsInput\",\n        onKeyDown: function onKeyDown(e) {\n          return e.key === 'Enter' && onSubmit(e, value || stateValue);\n        },\n        \"data-ouia-component-type\": \"PF4/TextInput\"\n      })), /*#__PURE__*/React.createElement(Icon, {\n        size: \"sm\",\n        className: \"ins-c-search-icon\"\n      }));\n    }\n  }]);\n\n  return Text;\n}(Component);\n\nText.propTypes = {\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  id: PropTypes.string,\n  icon: PropTypes.elementType,\n  className: PropTypes.string\n};\nText.defaultProps = {\n  value: '',\n  onSubmit: function onSubmit() {\n    return undefined;\n  },\n  isDisabled: false,\n  'aria-label': 'text input'\n};\nexport default Text;","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from \"@patternfly/react-core/dist/esm/components/Select/Select.js\";\nimport { SelectOption } from \"@patternfly/react-core/dist/esm/components/Select/SelectOption.js\";\nimport { SelectVariant } from \"@patternfly/react-core/dist/esm/components/Select/selectConstants.js\";\nimport Text from './TextFilter';\nimport isEqual from 'lodash/isEqual';\n/**\n * CheckboxFilter is a part of the <a href=\"/components/ConditionalFilter\">Conditional filter composite component</a>.\n * It was not designed to be used as a standalone component.\n */\n\nvar CheckboxFilter = /*#__PURE__*/function (_Component) {\n  _inherits(CheckboxFilter, _Component);\n\n  var _super = _createSuper(CheckboxFilter);\n\n  function CheckboxFilter() {\n    var _this;\n\n    _classCallCheck(this, CheckboxFilter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isExpanded: false,\n      selected: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggle\", function (isExpanded) {\n      _this.setState({\n        isExpanded: isExpanded\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"calculateSelected\", function () {\n      var selected = _this.state.selected;\n      var value = _this.props.value;\n      return Array.from(new Set([].concat(_toConsumableArray(value && value.length > 0 && value.constructor === Array ? value.map(function (item) {\n        return item.value || item;\n      }) : []), _toConsumableArray(selected))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelect\", function (event, selection) {\n      var onChange = _this.props.onChange;\n\n      var newSelection = _this.calculateSelected();\n\n      if (newSelection.includes(selection)) {\n        newSelection = newSelection.filter(function (item) {\n          return item !== selection;\n        });\n      } else {\n        newSelection = [].concat(_toConsumableArray(newSelection), [selection]);\n      }\n\n      onChange(event, newSelection, selection);\n\n      _this.setState({\n        selected: newSelection\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(CheckboxFilter, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_ref) {\n      var prevSelected = _ref.value;\n      var value = this.props.value;\n\n      if (!isEqual(prevSelected, value)) {\n        this.setState({\n          selected: value\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isExpanded = this.state.isExpanded;\n      var _this$props = this.props,\n          items = _this$props.items,\n          placeholder = _this$props.placeholder,\n          isDisabled = _this$props.isDisabled,\n          className = _this$props.className;\n      return /*#__PURE__*/React.createElement(Fragment, null, !items || items && items.length <= 0 ? /*#__PURE__*/React.createElement(Text, _extends({}, this.props, {\n        value: \"\".concat(this.calculateSelected())\n      })) : /*#__PURE__*/React.createElement(Select, {\n        className: className,\n        variant: SelectVariant.checkbox,\n        \"aria-label\": \"Select Input\",\n        onToggle: this.onToggle,\n        isDisabled: isDisabled,\n        onSelect: this.onSelect,\n        selections: this.calculateSelected(),\n        isOpen: isExpanded,\n        placeholderText: placeholder\n      }, items.map(function (_ref2, key) {\n        var value = _ref2.value,\n            _onClick = _ref2.onClick,\n            label = _ref2.label,\n            id = _ref2.id,\n            item = _objectWithoutProperties(_ref2, [\"value\", \"onClick\", \"label\", \"id\"]);\n\n        return /*#__PURE__*/React.createElement(SelectOption, _extends({}, item, {\n          key: id || key,\n          value: String(value || id || key),\n          onClick: function onClick(e) {\n            return _onClick && _onClick(e, _objectSpread({\n              value: value,\n              label: label,\n              id: id\n            }, item), key);\n          }\n        }), label);\n      })));\n    }\n  }]);\n\n  return CheckboxFilter;\n}(Component);\n\nCheckboxFilter.propTypes = {\n  /**\n   * onChange event callback <br /><code>func(event, newSelection, currentSelection) => undefined</code>\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * List of selected values\n   */\n  value: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n    label: PropTypes.node,\n    value: PropTypes.string\n  })])),\n\n  /**\n   * Select value placeholder\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * List of available options\n   */\n  items: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.node,\n    id: PropTypes.string,\n    onClick: PropTypes.func\n  })),\n\n  /**\n   * Disabled flag\n   */\n  isDisabled: PropTypes.bool,\n  className: PropTypes.string\n};\nCheckboxFilter.defaultProps = {\n  items: [],\n  value: [],\n  onChange: function onChange() {\n    return undefined;\n  },\n  isDisabled: false\n};\nexport default CheckboxFilter;","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from \"@patternfly/react-core/dist/esm/components/Select/Select.js\";\nimport { SelectOption } from \"@patternfly/react-core/dist/esm/components/Select/SelectOption.js\";\nimport { SelectVariant } from \"@patternfly/react-core/dist/esm/components/Select/selectConstants.js\";\nimport { Radio as InputRadio } from \"@patternfly/react-core/dist/esm/components/Radio/Radio.js\";\nimport Text from './TextFilter';\n\nvar Radio = /*#__PURE__*/function (_Component) {\n  _inherits(Radio, _Component);\n\n  var _super = _createSuper(Radio);\n\n  function Radio() {\n    var _this;\n\n    _classCallCheck(this, Radio);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isExpanded: false,\n      checked: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggle\", function (isExpanded) {\n      _this.setState({\n        isExpanded: isExpanded\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"calculateSelected\", function () {\n      var checked = _this.state.checked;\n      var selectedValue = _this.props.value;\n      return selectedValue && (selectedValue.value || selectedValue) || checked && (checked.value || checked);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelect\", function (event, selection) {\n      var onChange = _this.props.onChange;\n      onChange(event, selection);\n\n      _this.setState({\n        checked: selection\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Radio, [{\n    key: \"render\",\n    value: function render() {\n      var isExpanded = this.state.isExpanded;\n      var _this$props = this.props,\n          items = _this$props.items,\n          placeholder = _this$props.placeholder,\n          isDisabled = _this$props.isDisabled,\n          className = _this$props.className;\n      var checkedValue = this.calculateSelected();\n      return /*#__PURE__*/React.createElement(Fragment, null, !items || items && items.length <= 0 ? /*#__PURE__*/React.createElement(Text, _extends({}, this.props, {\n        value: \"\".concat(this.calculateSelected())\n      })) : /*#__PURE__*/React.createElement(Select, {\n        className: className,\n        variant: SelectVariant.single,\n        \"aria-label\": \"Select Input\",\n        isDisabled: isDisabled,\n        onToggle: this.onToggle,\n        onSelect: this.onSelect,\n        isOpen: isExpanded,\n        placeholderText: placeholder\n      }, items.map(function (_ref, key) {\n        var value = _ref.value,\n            isChecked = _ref.isChecked,\n            _onChange = _ref.onChange,\n            label = _ref.label,\n            id = _ref.id,\n            item = _objectWithoutProperties(_ref, [\"value\", \"isChecked\", \"onChange\", \"label\", \"id\"]);\n\n        return /*#__PURE__*/React.createElement(SelectOption, _extends({}, item, {\n          key: id || key,\n          value: value || '' + key\n        }), /*#__PURE__*/React.createElement(InputRadio, _extends({}, item, {\n          name: id || \"\".concat(key, \"-radio\"),\n          label: label,\n          value: value || key,\n          isChecked: isChecked || checkedValue !== undefined && checkedValue === value || checkedValue !== undefined && checkedValue === '' + key || false,\n          onChange: function onChange(_value, e) {\n            return _onChange && _onChange(e, _objectSpread({\n              id: id,\n              label: label,\n              value: value,\n              isChecked: isChecked\n            }, item), key);\n          },\n          id: id || \"\".concat(value, \"-\").concat(key)\n        })));\n      })));\n    }\n  }]);\n\n  return Radio;\n}(Component);\n\nRadio.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n    label: PropTypes.node,\n    value: PropTypes.string\n  })]),\n  placeholder: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.node,\n    id: PropTypes.string,\n    isChecked: PropTypes.bool,\n    onChange: PropTypes.func\n  })),\n  isDisabled: PropTypes.bool,\n  className: PropTypes.string\n};\nRadio.defaultProps = {\n  items: [],\n  onChange: function onChange() {\n    return undefined;\n  },\n  isDisabled: false\n};\nexport default Radio;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _PropTypes$shape4;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from \"@patternfly/react-core/dist/esm/components/Select/Select.js\";\nimport { SelectOption } from \"@patternfly/react-core/dist/esm/components/Select/SelectOption.js\";\nimport { SelectVariant } from \"@patternfly/react-core/dist/esm/components/Select/selectConstants.js\";\nimport { SelectGroup } from \"@patternfly/react-core/dist/esm/components/Select/SelectGroup.js\";\nimport { Radio } from \"@patternfly/react-core/dist/esm/components/Radio/Radio.js\";\nimport { Checkbox } from \"@patternfly/react-core/dist/esm/components/Checkbox/Checkbox.js\";\nimport { Button } from \"@patternfly/react-core/dist/esm/components/Button/Button.js\";\nimport Text from './TextFilter';\nimport isEqual from 'lodash/isEqual';\nexport var groupType = {\n  checkbox: 'checkbox',\n  radio: 'radio',\n  button: 'button',\n  plain: 'plain'\n};\n\nvar Group = /*#__PURE__*/function (_Component) {\n  _inherits(Group, _Component);\n\n  var _super = _createSuper(Group);\n\n  function Group() {\n    var _this;\n\n    _classCallCheck(this, Group);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isExpanded: false,\n      selected: {},\n      filterBy: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggle\", function (isExpanded) {\n      _this.setState({\n        isExpanded: isExpanded\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapItems\", function (_ref, groupKey) {\n      var groupValue = _ref.groupValue,\n          onSelect = _ref.onSelect,\n          groupLabel = _ref.groupLabel,\n          groupId = _ref.groupId,\n          type = _ref.type,\n          variant = _ref.variant,\n          items = _ref.items,\n          group = _objectWithoutProperties(_ref, [\"groupValue\", \"onSelect\", \"groupLabel\", \"groupId\", \"type\", \"variant\", \"items\"]);\n\n      var onFilter = _this.props.onFilter;\n      var filterBy = _this.state.filterBy;\n      var input;\n\n      try {\n        input = new RegExp(filterBy, 'i');\n      } catch (err) {\n        input = new RegExp(filterBy.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i');\n      }\n\n      return items.filter(function (item) {\n        return onFilter || groupValue && input.test(groupValue) || groupLabel && input.test(groupLabel) || item.value && input.test(item.value) || item.label && input.test(item.label);\n      }).map(function (_ref2, key) {\n        var value = _ref2.value,\n            isChecked = _ref2.isChecked,\n            _onClick = _ref2.onClick,\n            label = _ref2.label,\n            itemProps = _ref2.props,\n            id = _ref2.id,\n            item = _objectWithoutProperties(_ref2, [\"value\", \"isChecked\", \"onClick\", \"label\", \"props\", \"id\"]);\n\n        return /*#__PURE__*/React.createElement(SelectOption, _extends({}, item, {\n          label: groupLabel || '',\n          key: id || key,\n          value: String(value || id || key || ''),\n          onClick: function onClick(e) {\n            var _this2;\n\n            if (e.target.tagName !== 'INPUT') {\n              e.preventDefault();\n              e.stopPropagation();\n            }\n\n            var clickedGroup = _objectSpread({\n              value: groupValue,\n              label: groupLabel,\n              id: groupId,\n              type: type,\n              items: items\n            }, group);\n\n            var clickedItem = _objectSpread({\n              value: value,\n              label: label,\n              id: id,\n              type: type\n            }, item);\n\n            var props = [e, clickedGroup, clickedItem, groupValue || groupKey, value || key];\n\n            (_this2 = _this).onSelect.apply(_this2, props);\n\n            onSelect && onSelect.apply(void 0, props);\n            _onClick && _onClick.apply(void 0, props);\n          }\n        }), type === groupType.checkbox ? /*#__PURE__*/React.createElement(Checkbox, _extends({}, itemProps, {\n          label: label,\n          isChecked: isChecked || _this.isChecked(groupValue || groupKey, value || key, id, item === null || item === void 0 ? void 0 : item.tagValue) || false,\n          onChange: function onChange(value, event) {\n            item.onChange && item.onChange(value, event);\n          },\n          name: item.name || value || \"\".concat(groupKey, \"-\").concat(key),\n          id: id || value || \"\".concat(groupKey, \"-\").concat(key)\n        })) : type === groupType.radio ? /*#__PURE__*/React.createElement(Radio, {\n          isChecked: isChecked || _this.isChecked(groupValue || groupKey, value || key, id, item === null || item === void 0 ? void 0 : item.tagValue) || false,\n          onChange: function onChange(value, event) {\n            item.onChange && item.onChange(value, event);\n          },\n          value: value || key,\n          name: item.name || value || \"\".concat(groupKey, \"-\").concat(key),\n          label: label,\n          id: id || value || \"\".concat(groupKey, \"-\").concat(key)\n        }) : type === groupType.button ? /*#__PURE__*/React.createElement(Button, _extends({}, itemProps, {\n          className: \"pf-c-select__option-button \".concat((itemProps === null || itemProps === void 0 ? void 0 : itemProps.className) || ''),\n          variant: variant,\n          onClick: item.onClick\n        }), label) : [// we have to wrap it in array, otherwise PF will complain\n        type !== groupType.checkbox && type !== groupType.radio ? label : '']);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"calculateSelected\", function (_ref3, groupKey, itemKey) {\n      var type = _ref3.type;\n      var selected = _this.state.selected;\n      var propSelected = _this.props.selected;\n      var activeGroup = selected[groupKey] || propSelected[groupKey];\n\n      if (activeGroup) {\n        if (type !== groupType.radio && (activeGroup[itemKey] instanceof Object ? activeGroup[itemKey].isSelected : Boolean(activeGroup[itemKey]))) {\n          return _objectSpread(_objectSpread(_objectSpread({}, propSelected), selected), {}, _defineProperty({}, groupKey, _objectSpread(_objectSpread({}, activeGroup || {}), {}, _defineProperty({}, itemKey, false))));\n        }\n\n        return _objectSpread(_objectSpread(_objectSpread({}, propSelected), selected), {}, _defineProperty({}, groupKey, _objectSpread(_objectSpread({}, type !== groupType.radio ? activeGroup || {} : {}), {}, _defineProperty({}, itemKey, true))));\n      }\n\n      return _objectSpread(_objectSpread(_objectSpread({}, propSelected), selected), {}, _defineProperty({}, groupKey, _defineProperty({}, itemKey, true)));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setNewSelection\", function (onChange, event, newSelection, group, item, groupKey, itemKey) {\n      if (onChange) {\n        if (group) {\n          onChange(event, newSelection, group, item, groupKey, itemKey);\n        } else {\n          onChange(event, newSelection);\n        }\n\n        _this.setState({\n          selected: {}\n        });\n      }\n\n      _this.setState({\n        selected: newSelection\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelect\", function (event, group, item, groupKey, itemKey) {\n      var newSelection = _this.calculateSelected(group, groupKey, itemKey);\n\n      var onChange = _this.props.onChange;\n\n      _this.setNewSelection(onChange, event, newSelection, group, item, groupKey, itemKey);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onGroupSelect\", function (event, groupValue, items) {\n      var onChange = _this.props.onChange;\n      var currentSelection = _this.state.selected;\n      var allSelected = Object.values(currentSelection[groupValue] || {}).filter(function (value) {\n        return value === true;\n      }).length === items.length;\n      var newSelection = allSelected ? {} : _objectSpread(_objectSpread({}, currentSelection), {}, _defineProperty({}, groupValue, items.reduce(function (selection, currentItem) {\n        return _objectSpread(_objectSpread({}, selection), {}, _defineProperty({}, currentItem.value, true));\n      }, {})));\n\n      _this.setNewSelection(onChange, event, newSelection);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isGroupChecked\", function (groupValue, items) {\n      var stateSelected = _this.state.selected;\n      var propSelected = _this.props.selected;\n\n      var selected = _objectSpread(_objectSpread({}, propSelected), stateSelected);\n\n      var selectedGroupValues = Object.values(selected[groupValue] || {}).filter(function (value) {\n        return value === true;\n      });\n      var groupSelected = selectedGroupValues.length > 0 ? selectedGroupValues.length === items.length ? true : null : false;\n      return groupSelected;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isChecked\", function (groupValue, itemValue, id, tagValue) {\n      var stateSelected = _this.state.selected;\n      var propSelected = _this.props.selected;\n\n      var selected = _objectSpread(_objectSpread({}, propSelected), stateSelected);\n\n      if (typeof selected[groupValue] === 'undefined') {\n        return false;\n      }\n\n      if (selected[groupValue][itemValue] instanceof Object) {\n        if (selected[groupValue][itemValue].isSelected) {\n          var _selected$groupValue$, _selected$groupValue$2, _selected$groupValue$5, _selected$groupValue$6;\n\n          if ((_selected$groupValue$ = selected[groupValue][itemValue]) !== null && _selected$groupValue$ !== void 0 && (_selected$groupValue$2 = _selected$groupValue$.item) !== null && _selected$groupValue$2 !== void 0 && _selected$groupValue$2.id) {\n            var _selected$groupValue$3, _selected$groupValue$4;\n\n            return id === ((_selected$groupValue$3 = selected[groupValue][itemValue]) === null || _selected$groupValue$3 === void 0 ? void 0 : (_selected$groupValue$4 = _selected$groupValue$3.item) === null || _selected$groupValue$4 === void 0 ? void 0 : _selected$groupValue$4.id);\n          } else if ((_selected$groupValue$5 = selected[groupValue][itemValue]) !== null && _selected$groupValue$5 !== void 0 && (_selected$groupValue$6 = _selected$groupValue$5.item) !== null && _selected$groupValue$6 !== void 0 && _selected$groupValue$6.tagValue) {\n            var _selected$groupValue$7, _selected$groupValue$8;\n\n            return tagValue === ((_selected$groupValue$7 = selected[groupValue][itemValue]) === null || _selected$groupValue$7 === void 0 ? void 0 : (_selected$groupValue$8 = _selected$groupValue$7.item) === null || _selected$groupValue$8 === void 0 ? void 0 : _selected$groupValue$8.tagValue);\n          }\n        }\n\n        return selected[groupValue][itemValue].isSelected;\n      }\n\n      return Boolean(selected[groupValue][itemValue]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"customFilter\", function (e) {\n      var onFilter = _this.props.onFilter;\n      var value = e.target.value;\n\n      _this.setState({\n        filterBy: value\n      }, function () {\n        onFilter && onFilter(value);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearSelection\", function () {\n      var onFilter = _this.props.onFilter;\n      onFilter && onFilter('');\n\n      _this.setState({\n        filterBy: '',\n        isExpanded: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Group, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_ref4) {\n      var prevSelected = _ref4.selected,\n          prevFilterBy = _ref4.filterBy;\n      var _this$props = this.props,\n          selected = _this$props.selected,\n          filterBy = _this$props.filterBy;\n\n      if (!isEqual(prevSelected, selected)) {\n        this.setState({\n          selected: selected\n        });\n      }\n\n      if (filterBy !== undefined && prevFilterBy !== filterBy) {\n        this.setState({\n          filterBy: filterBy\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          isExpanded = _this$state.isExpanded,\n          filterBy = _this$state.filterBy;\n      var _this$props2 = this.props,\n          groups = _this$props2.groups,\n          items = _this$props2.items,\n          placeholder = _this$props2.placeholder,\n          className = _this$props2.className,\n          selected = _this$props2.selected,\n          isFilterable = _this$props2.isFilterable,\n          isDisabled = _this$props2.isDisabled,\n          onFilter = _this$props2.onFilter,\n          onShowMore = _this$props2.onShowMore,\n          showMoreTitle = _this$props2.showMoreTitle,\n          showMoreOptions = _this$props2.showMoreOptions;\n      var filterItems = items || groups;\n      var showMore = {\n        type: groupType.button,\n        variant: (showMoreOptions === null || showMoreOptions === void 0 ? void 0 : showMoreOptions.variant) || 'link',\n        items: [_objectSpread(_objectSpread({}, showMoreOptions), {}, {\n          label: showMoreTitle,\n          type: groupType.button,\n          onClick: function onClick(e) {\n            return onShowMore(e, function () {\n              return _this3.setState({\n                isExpanded: false\n              });\n            });\n          }\n        })]\n      };\n      return /*#__PURE__*/React.createElement(Fragment, null, !filterItems || filterItems && filterItems.length <= 0 ? /*#__PURE__*/React.createElement(Text, _extends({}, this.props, {\n        value: \"\".concat(selected)\n      })) : /*#__PURE__*/React.createElement(Select, _extends({\n        className: className,\n        variant: isFilterable || onFilter ? SelectVariant.typeahead : SelectVariant.single,\n        \"aria-label\": \"Select Input\",\n        onToggle: this.onToggle,\n        isOpen: isExpanded,\n        isDisabled: isDisabled,\n        onSelect: function onSelect() {\n          return undefined;\n        },\n        placeholderText: placeholder,\n        onClear: this.clearSelection,\n        selections: filterBy === '' ? null : filterBy\n      }, (isFilterable || onFilter) && {\n        onFilter: function onFilter(e) {\n          return e && _this3.customFilter(e);\n        }\n      }, groups && groups.length > 0 && {\n        isGrouped: true\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ins-c-select__scrollable-section\",\n        value: \"\"\n      }, groups && groups.length > 0 ? groups.map(function (_ref5, groupKey) {\n        var groupValue = _ref5.value,\n            onSelect = _ref5.onSelect,\n            groupSelectable = _ref5.groupSelectable,\n            groupLabel = _ref5.label,\n            groupId = _ref5.id,\n            type = _ref5.type,\n            items = _ref5.items,\n            group = _objectWithoutProperties(_ref5, [\"value\", \"onSelect\", \"groupSelectable\", \"label\", \"id\", \"type\", \"items\"]);\n\n        var filteredItems = _this3.mapItems(_objectSpread({\n          groupValue: groupValue,\n          onSelect: onSelect,\n          groupLabel: groupLabel,\n          groupId: groupId,\n          groupSelectable: groupSelectable,\n          type: type,\n          items: items\n        }, group), groupKey).filter(Boolean);\n\n        return (\n          /*#__PURE__*/\n\n          /**\n           * DO NOT DELET THE EMPTY VALUE ON THE DIV ELEMENT\n           * If we delete it, it breaks the select filtering\n           * Here is the code that creates the runtime crash:\n           * https://github.com/patternfly/patternfly-react/blob/master/packages/react-core/src/components/Select/Select.tsx#L615\n           */\n          React.createElement(\"div\", {\n            key: groupId || groupValue || groupKey,\n            value: \"\"\n          }, groupSelectable && /*#__PURE__*/React.createElement(SelectOption, {\n            onClick: function onClick(event) {\n              _this3.onGroupSelect(event, groupValue || groupKey, items);\n            }\n          }, /*#__PURE__*/React.createElement(Checkbox, {\n            isChecked: _this3.isGroupChecked(groupValue || groupKey, items),\n            label: groupLabel\n          })), /*#__PURE__*/React.createElement(SelectGroup, _extends({}, group, {\n            className: \"pf-u-pl-sm\",\n            label: !groupSelectable && groupLabel,\n            value: groupId || groupValue || groupKey,\n            id: groupId || \"group-\".concat(groupValue || groupKey)\n          }), filteredItems))\n        );\n      }) : this.mapItems({\n        items: items\n      })), onShowMore ? /*#__PURE__*/React.createElement(SelectGroup, {\n        value: \"\"\n      }, /*#__PURE__*/React.createElement(Button, _extends({}, showMore.items[0], {\n        className: \"pf-c-select__menu-item\",\n        variant: showMore.variant,\n        onClick: showMore.items[0].onClick,\n        value: \"Show more\"\n      }), showMore.items[0].label)) : /*#__PURE__*/React.createElement(\"span\", {\n        hidden: true,\n        value: \"\"\n      })));\n    }\n  }]);\n\n  return Group;\n}(Component);\n\nvar itemsProps = PropTypes.arrayOf(PropTypes.shape({\n  value: PropTypes.string,\n  label: PropTypes.node,\n  id: PropTypes.string,\n  isChecked: PropTypes.bool,\n  onClick: PropTypes.func,\n  props: PropTypes.shape(_defineProperty({}, PropTypes.string, PropTypes.any))\n}));\nGroup.propTypes = {\n  selected: PropTypes.shape(_defineProperty({}, PropTypes.string, PropTypes.shape(_defineProperty({}, PropTypes.string, PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n    isSelected: PropTypes.bool\n  })]))))),\n  onChange: PropTypes.func,\n  groups: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.node,\n    value: PropTypes.string,\n    onSelect: PropTypes.func,\n    type: PropTypes.oneOf(Object.values(groupType)),\n    items: itemsProps\n  })),\n  filterBy: PropTypes.string,\n  items: itemsProps,\n  isFilterable: PropTypes.bool,\n  onFilter: PropTypes.func,\n  onShowMore: PropTypes.func,\n  showMoreTitle: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  showMoreOptions: PropTypes.shape((_PropTypes$shape4 = {\n    variant: PropTypes.string\n  }, _defineProperty(_PropTypes$shape4, PropTypes.string, PropTypes.oneOfType([PropTypes.string, PropTypes.number])), _defineProperty(_PropTypes$shape4, \"props\", _defineProperty({}, PropTypes.string, PropTypes.oneOfType([PropTypes.string, PropTypes.number]))), _PropTypes$shape4)),\n  placeholder: PropTypes.node,\n  className: PropTypes.string\n};\nGroup.defaultProps = {\n  selected: {},\n  filterBy: '',\n  onChange: function onChange() {\n    return undefined;\n  },\n  showMoreTitle: 'Show more',\n  groups: [],\n  isFilterable: false,\n  isDisabled: false\n};\nexport default Group;","import { Fragment } from 'react';\nimport Text from './TextFilter';\nimport Checkbox from './CheckboxFilter';\nimport Radio from './RadioFilter';\nimport Group from './GroupFilter';\nexport var conditionalFilterType = {\n  text: 'text',\n  checkbox: 'checkbox',\n  radio: 'radio',\n  custom: 'custom',\n  group: 'group'\n};\nexport var typeMapper = {\n  text: Text,\n  checkbox: Checkbox,\n  radio: Radio,\n  custom: Fragment,\n  group: Group\n};\nexport var groupType = {\n  checkbox: 'checkbox',\n  radio: 'radio',\n  plain: 'plain'\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Dropdown } from \"@patternfly/react-core/dist/esm/components/Dropdown/Dropdown.js\";\nimport { DropdownItem } from \"@patternfly/react-core/dist/esm/components/Dropdown/DropdownItem.js\";\nimport { DropdownToggle } from \"@patternfly/react-core/dist/esm/components/Dropdown/DropdownToggle.js\";\nimport { SplitItem } from \"@patternfly/react-core/dist/esm/layouts/Split/SplitItem.js\";\nimport { Split } from \"@patternfly/react-core/dist/esm/layouts/Split/Split.js\";\nimport { ToolbarItem } from \"@patternfly/react-core/dist/esm/components/Toolbar/ToolbarItem.js\";\nimport { ToolbarGroup } from \"@patternfly/react-core/dist/esm/components/Toolbar/ToolbarGroup.js\";\nimport { ToolbarToggleGroup } from \"@patternfly/react-core/dist/esm/components/Toolbar/ToolbarToggleGroup.js\";\nimport FilterIcon from \"@patternfly/react-icons/dist/esm/icons/filter-icon\";\nimport Text from './TextFilter';\nimport { conditionalFilterType, typeMapper } from './conditionalFilterConstants';\nimport PropTypes from 'prop-types';\nimport \"../../ConditionalFilter/./conditional-filter.css\";\nimport { Fragment } from 'react';\nimport classNames from 'classnames';\n\nvar ConditionalFilter = /*#__PURE__*/function (_Component) {\n  _inherits(ConditionalFilter, _Component);\n\n  var _super = _createSuper(ConditionalFilter);\n\n  function ConditionalFilter(_props) {\n    var _this;\n\n    _classCallCheck(this, ConditionalFilter);\n\n    _this = _super.call(this, _props);\n\n    _defineProperty(_assertThisInitialized(_this), \"dropdownToggle\", function (isOpen) {\n      _this.setState({\n        isOpen: isOpen\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (_e, value) {\n      _this.setState({\n        stateValue: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getWrapper\", function () {\n      return _this.props.useMobileLayout ? function (props) {\n        return /*#__PURE__*/React.createElement(ToolbarToggleGroup, _extends({}, props, {\n          breakpoint: \"md\",\n          toggleIcon: /*#__PURE__*/React.createElement(FilterIcon, null)\n        }));\n      } : Fragment;\n    });\n\n    _this.state = {\n      isOpen: false,\n      stateValue: undefined,\n      Wrapper: _this.getWrapper()\n    };\n    return _this;\n  }\n\n  _createClass(ConditionalFilter, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.useMobileLayout !== prevProps.useMobileLayout) {\n        this.setState({\n          Wrapper: this.getWrapper()\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          items = _this$props.items,\n          value = _this$props.value,\n          onChange = _this$props.onChange,\n          placeholder = _this$props.placeholder,\n          hideLabel = _this$props.hideLabel,\n          isDisabled = _this$props.isDisabled,\n          props = _objectWithoutProperties(_this$props, [\"items\", \"value\", \"onChange\", \"placeholder\", \"hideLabel\", \"isDisabled\"]);\n\n      var _this$state = this.state,\n          isOpen = _this$state.isOpen,\n          stateValue = _this$state.stateValue,\n          Wrapper = _this$state.Wrapper;\n      var currentValue = onChange ? value : stateValue;\n      var activeItem = items && items.length && (items.find(function (item, key) {\n        return item.value === currentValue || key === currentValue;\n      }) || items[0]);\n      var onChangeCallback = onChange || this.onChange;\n      var ActiveComponent = activeItem && (typeMapper[activeItem.type] || typeMapper.text);\n\n      var capitalize = function capitalize(string) {\n        return string[0].toUpperCase() + string.substring(1);\n      };\n\n      return /*#__PURE__*/React.createElement(Wrapper, null, this.props.useMobileLayout && /*#__PURE__*/React.createElement(ToolbarGroup, {\n        className: \"ins-c-conditional-filter mobile\"\n      }, items.map(function (activeItem, key) {\n        var ActiveComponent = activeItem && (typeMapper[activeItem.type] || typeMapper.text);\n        return /*#__PURE__*/React.createElement(ToolbarItem, {\n          key: key\n        }, /*#__PURE__*/React.createElement(ActiveComponent, _extends({}, activeItem.type !== conditionalFilterType.custom && {\n          placeholder: placeholder || activeItem.placeholder || \"Filter by \".concat(activeItem.label),\n          id: activeItem.filterValues && activeItem.filterValues.id || currentValue\n        }, activeItem.filterValues)));\n      })), !items || items && items.length <= 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('ins-c-conditional-filter', {\n          desktop: this.props.useMobileLayout\n        })\n      }, /*#__PURE__*/React.createElement(Text, _extends({}, props, {\n        value: currentValue,\n        onChange: function onChange(e) {\n          return onChangeCallback(e, e.target.value);\n        },\n        placeholder: placeholder,\n        \"widget-type\": \"InsightsInput\"\n      }))) : /*#__PURE__*/React.createElement(Split, {\n        className: classNames('ins-c-conditional-filter', {\n          desktop: this.props.useMobileLayout\n        })\n      }, items.length > 1 && /*#__PURE__*/React.createElement(SplitItem, null, /*#__PURE__*/React.createElement(Dropdown, {\n        className: \"ins-c-conditional-filter__group\",\n        onSelect: function onSelect() {\n          return _this2.dropdownToggle(false);\n        },\n        isOpen: isOpen,\n        toggle: /*#__PURE__*/React.createElement(DropdownToggle, {\n          onToggle: this.dropdownToggle,\n          isDisabled: isDisabled,\n          className: hideLabel ? 'ins-c-conditional-filter__no-label' : ''\n        }, /*#__PURE__*/React.createElement(FilterIcon, {\n          size: \"sm\"\n        }), !hideLabel && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"ins-c-conditional-filter__value-selector\"\n        }, activeItem && capitalize(activeItem.label))),\n        dropdownItems: items.map(function (item, key) {\n          return /*#__PURE__*/React.createElement(DropdownItem, {\n            key: item.id ? \"\".concat(item.id, \"-dropdown\") : key,\n            component: \"button\",\n            onClick: function onClick(e) {\n              return onChangeCallback(e, item.value || key, item);\n            },\n            isHovered: activeItem.label === item.label\n          }, capitalize(item.label));\n        })\n      })), ActiveComponent && /*#__PURE__*/React.createElement(SplitItem, {\n        isFilled: true\n      }, /*#__PURE__*/React.createElement(ActiveComponent, _extends({}, activeItem.type !== conditionalFilterType.custom && {\n        placeholder: placeholder || activeItem.placeholder || \"Filter by \".concat(activeItem.label),\n        id: activeItem.filterValues && activeItem.filterValues.id || currentValue\n      }, activeItem.filterValues)))));\n    }\n  }]);\n\n  return ConditionalFilter;\n}(Component);\n\nvar TextInputProps = {\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func\n};\nConditionalFilter.propTypes = _objectSpread(_objectSpread({\n  hideLabel: PropTypes.bool,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    label: PropTypes.node,\n    value: PropTypes.string,\n    type: PropTypes.oneOf(['text', 'checkbox', 'radio', 'custom', 'group']),\n    filterValues: PropTypes.oneOfType([PropTypes.shape(TextInputProps), PropTypes.shape(_objectSpread(_objectSpread({}, TextInputProps), {}, {\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n        label: PropTypes.node,\n        value: PropTypes.string\n      })])), PropTypes.shape(_defineProperty({}, PropTypes.string, PropTypes.any))]),\n      items: PropTypes.arrayOf(PropTypes.shape({\n        label: PropTypes.node,\n        value: PropTypes.string\n      }))\n    }))])\n  }))\n}, TextInputProps), {}, {\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  useMobileLayout: PropTypes.bool\n});\nConditionalFilter.defaultProps = {\n  value: '',\n  items: [],\n  hideLabel: false,\n  isDisabled: false,\n  id: 'default-input',\n  useMobileLayout: false\n};\nexport default ConditionalFilter;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge } from \"@patternfly/react-core/dist/esm/components/Badge/Badge.js\";\nimport { Chip } from \"@patternfly/react-core/dist/esm/components/ChipGroup/Chip.js\";\nimport { ChipGroup } from \"@patternfly/react-core/dist/esm/components/ChipGroup/ChipGroup.js\";\nimport { Button } from \"@patternfly/react-core/dist/esm/components/Button/Button.js\";\nimport classNames from 'classnames';\nimport \"../../FilterChips/./filter-chips.css\";\n\nvar FilterChips = function FilterChips(_ref) {\n  var className = _ref.className,\n      filters = _ref.filters,\n      onDelete = _ref.onDelete,\n      deleteTitle = _ref.deleteTitle,\n      showDeleteButton = _ref.showDeleteButton,\n      onDeleteGroup = _ref.onDeleteGroup;\n  var groups = filters.filter(function (group) {\n    return group.category;\n  });\n  var groupedFilters = groups.map(function (group, groupKey) {\n    return /*#__PURE__*/React.createElement(ChipGroup, _extends({\n      key: \"group_\".concat(group.category),\n      categoryName: group.category\n    }, onDeleteGroup && {\n      isClosable: true,\n      onClick: function onClick(event) {\n        event.stopPropagation();\n        onDeleteGroup(event, [group], groups.filter(function (_item, key) {\n          return key !== groupKey;\n        }));\n      }\n    }), group.chips.map(function (chip) {\n      return /*#__PURE__*/React.createElement(Chip, {\n        key: chip.name,\n        onClick: function onClick(event) {\n          event.stopPropagation();\n          onDelete(event, [_objectSpread(_objectSpread({}, group), {}, {\n            chips: [chip]\n          })]);\n        }\n      }, chip.name, chip.count && /*#__PURE__*/React.createElement(Badge, {\n        key: \"chip_badge_\".concat(chip.id),\n        isRead: chip.isRead\n      }, chip.count));\n    }));\n  });\n  var plainFilters = filters.filter(function (group) {\n    return !group.category;\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(className, 'ins-c-chip-filters')\n  }, groupedFilters, plainFilters && plainFilters.map(function (chip) {\n    return /*#__PURE__*/React.createElement(ChipGroup, {\n      key: \"group_plain_chip_\".concat(chip.name)\n    }, /*#__PURE__*/React.createElement(Chip, {\n      onClick: function onClick(event) {\n        event.stopPropagation();\n        onDelete(event, [chip]);\n      }\n    }, chip.name, chip.count && /*#__PURE__*/React.createElement(Badge, {\n      key: \"chip_badge_\".concat(chip.id),\n      isRead: chip.isRead\n    }, chip.count)));\n  }), (showDeleteButton === true || showDeleteButton === undefined && filters.length > 0) && /*#__PURE__*/React.createElement(Button, {\n    variant: \"link\",\n    onClick: function onClick(event) {\n      return onDelete(event, filters, true);\n    }\n  }, deleteTitle));\n};\n\nFilterChips.propTypes = {\n  className: PropTypes.string,\n  filters: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.shape({\n    category: PropTypes.string.isRequired,\n    chips: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      isRead: PropTypes.bool,\n      count: PropTypes.number\n    })).isRequired\n  }), PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    isRead: PropTypes.bool,\n    count: PropTypes.number\n  })])),\n  onDelete: PropTypes.func,\n  onDeleteGroup: PropTypes.func,\n  deleteTitle: PropTypes.node,\n  showDeleteButton: PropTypes.bool\n};\nFilterChips.defaultProps = {\n  filters: [],\n  onDelete: function onDelete() {\n    return undefined;\n  },\n  deleteTitle: 'Clear filters'\n};\nexport default FilterChips;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { Button } from \"@patternfly/react-core/dist/esm/components/Button/Button.js\";\nimport SortAmountDownIcon from \"@patternfly/react-icons/dist/esm/icons/sort-amount-down-icon\";\nimport SortAmountUpIcon from \"@patternfly/react-icons/dist/esm/icons/sort-amount-up-icon\";\nexport function flipDirection(direction) {\n  return direction === SortByDirection.asc ? SortByDirection.desc : SortByDirection.asc;\n}\n\nvar SortBy = function SortBy(_ref) {\n  var direction = _ref.direction,\n      onSortChange = _ref.onSortChange;\n  return /*#__PURE__*/React.createElement(Button, {\n    variant: \"plain\",\n    onClick: function onClick(e) {\n      return onSortChange(e, flipDirection(direction));\n    }\n  }, direction === SortByDirection.asc ? /*#__PURE__*/React.createElement(SortAmountUpIcon, {\n    size: \"sm\"\n  }) : /*#__PURE__*/React.createElement(SortAmountDownIcon, {\n    size: \"sm\"\n  }));\n};\n\nSortBy.propTypes = {\n  direction: PropTypes.oneOf(Object.values(SortByDirection)),\n  onSortChange: PropTypes.func\n};\nSortBy.defaultProps = {\n  direction: SortByDirection.asc,\n  onSortChange: function onSortChange() {\n    return undefined;\n  }\n};\nexport default SortBy;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Toolbar } from \"@patternfly/react-core/dist/esm/components/Toolbar/Toolbar.js\";\nimport { ToolbarContent } from \"@patternfly/react-core/dist/esm/components/Toolbar/ToolbarContent.js\";\nimport { ToolbarGroup } from \"@patternfly/react-core/dist/esm/components/Toolbar/ToolbarGroup.js\";\nimport { ToolbarItem } from \"@patternfly/react-core/dist/esm/components/Toolbar/ToolbarItem.js\";\nimport { Pagination } from \"@patternfly/react-core/dist/esm/components/Pagination/Pagination.js\";\nimport { Button } from \"@patternfly/react-core/dist/esm/components/Button/Button.js\";\nimport { ToolbarExpandIconWrapper } from \"@patternfly/react-core/dist/esm/components/Toolbar/ToolbarExpandIconWrapper.js\";\nimport AngleDownIcon from \"@patternfly/react-icons/dist/esm/icons/angle-down-icon\";\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nimport React, { Component } from 'react';\nimport Actions from './Actions';\nimport { BulkSelect } from '../BulkSelect';\nimport { ConditionalFilter } from '../ConditionalFilter';\nimport { DownloadButton } from '../DownloadButton';\nimport { FilterChips } from '../FilterChips';\nimport PropTypes from 'prop-types';\nimport SortBy from './SortBy';\nimport { SortByDirection } from '@patternfly/react-table';\nimport \"../../PrimaryToolbar/./primary-toolbar.css\";\n\nvar PrimaryToolbar = /*#__PURE__*/function (_Component) {\n  _inherits(PrimaryToolbar, _Component);\n\n  var _super = _createSuper(PrimaryToolbar);\n\n  function PrimaryToolbar() {\n    _classCallCheck(this, PrimaryToolbar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PrimaryToolbar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          id = _this$props.id,\n          className = _this$props.className,\n          toggleIsExpanded = _this$props.toggleIsExpanded,\n          bulkSelect = _this$props.bulkSelect,\n          filterConfig = _this$props.filterConfig,\n          dedicatedAction = _this$props.dedicatedAction,\n          actionsConfig = _this$props.actionsConfig,\n          sortByConfig = _this$props.sortByConfig,\n          pagination = _this$props.pagination,\n          activeFiltersConfig = _this$props.activeFiltersConfig,\n          children = _this$props.children,\n          exportConfig = _this$props.exportConfig,\n          expandAll = _this$props.expandAll,\n          useMobileLayout = _this$props.useMobileLayout,\n          props = _objectWithoutProperties(_this$props, [\"id\", \"className\", \"toggleIsExpanded\", \"bulkSelect\", \"filterConfig\", \"dedicatedAction\", \"actionsConfig\", \"sortByConfig\", \"pagination\", \"activeFiltersConfig\", \"children\", \"exportConfig\", \"expandAll\", \"useMobileLayout\"]);\n\n      var overflowActions = _toConsumableArray(sortByConfig ? [{\n        label: 'Sort order ASC',\n        props: {\n          isDisabled: sortByConfig.direction === SortByDirection.asc\n        },\n        onClick: function onClick(e) {\n          return sortByConfig.onSortChange && sortByConfig.onSortChange(e, SortByDirection.asc);\n        }\n      }, {\n        label: 'Sort order DESC',\n        props: {\n          isDisabled: sortByConfig.direction === SortByDirection.desc\n        },\n        onClick: function onClick(e) {\n          return sortByConfig.onSortChange && sortByConfig.onSortChange(e, SortByDirection.desc);\n        }\n      }] : []);\n\n      return /*#__PURE__*/React.createElement(Toolbar, _extends({}, props, {\n        className: \"\".concat(className || '', \" ins-c-primary-toolbar\"),\n        toggleIsExpanded: toggleIsExpanded,\n        id: id || 'ins-primary-data-toolbar'\n      }), /*#__PURE__*/React.createElement(ToolbarContent, null, (expandAll || bulkSelect || filterConfig || dedicatedAction) && /*#__PURE__*/React.createElement(ToolbarGroup, {\n        className: \"ins-c-primary-toolbar__group-filter pf-m-spacer-md pf-m-space-items-lg\",\n        variant: \"filter-group\"\n      }, expandAll && /*#__PURE__*/React.createElement(ToolbarItem, null, /*#__PURE__*/React.isValidElement(expandAll) ? expandAll : /*#__PURE__*/React.createElement(Button, {\n        variant: \"plain\",\n        \"aria-label\": \"\".concat(expandAll.isAllExpanded ? 'Collapse' : 'Expand', \" all\"),\n        onClick: function onClick(e) {\n          return expandAll.onClick(e, !expandAll.isAllExpanded);\n        }\n      }, /*#__PURE__*/React.createElement(ToolbarExpandIconWrapper, null, expandAll.isAllExpanded ? /*#__PURE__*/React.createElement(AngleDownIcon, null) : /*#__PURE__*/React.createElement(AngleRightIcon, null)))), bulkSelect && /*#__PURE__*/React.createElement(ToolbarItem, null, /*#__PURE__*/React.isValidElement(bulkSelect) ? bulkSelect : /*#__PURE__*/React.createElement(BulkSelect, bulkSelect)), filterConfig && /*#__PURE__*/React.createElement(ToolbarItem, {\n        className: \"ins-c-primary-toolbar__filter\"\n      }, /*#__PURE__*/React.isValidElement(filterConfig) ? filterConfig : /*#__PURE__*/React.createElement(ConditionalFilter, _extends({\n        useMobileLayout: useMobileLayout\n      }, filterConfig))), dedicatedAction && /*#__PURE__*/React.createElement(ToolbarItem, null, dedicatedAction)), /*#__PURE__*/React.isValidElement(actionsConfig) ? actionsConfig : (actionsConfig && actionsConfig.actions && actionsConfig.actions.length > 0 || sortByConfig || exportConfig) && /*#__PURE__*/React.createElement(Actions, _extends({}, actionsConfig || {}, {\n        exportConfig: exportConfig,\n        overflowActions: overflowActions\n      })), sortByConfig && /*#__PURE__*/React.createElement(ToolbarItem, {\n        className: \"ins-c-primary-toolbar__sort-by\"\n      }, /*#__PURE__*/React.isValidElement(sortByConfig) ? sortByConfig : /*#__PURE__*/React.createElement(SortBy, sortByConfig)), children, pagination && /*#__PURE__*/React.createElement(ToolbarItem, {\n        className: \"ins-c-primary-toolbar__pagination\"\n      }, /*#__PURE__*/React.isValidElement(pagination) ? pagination : /*#__PURE__*/React.createElement(Pagination, _extends({\n        isCompact: true\n      }, pagination)))), activeFiltersConfig && /*#__PURE__*/React.isValidElement(activeFiltersConfig) ? /*#__PURE__*/React.createElement(ToolbarContent, null, /*#__PURE__*/React.createElement(ToolbarItem, null, activeFiltersConfig)) : activeFiltersConfig !== undefined && (activeFiltersConfig.filters.length > 0 || activeFiltersConfig.showDeleteButton === true) && /*#__PURE__*/React.createElement(ToolbarContent, null, /*#__PURE__*/React.createElement(ToolbarItem, null, /*#__PURE__*/React.createElement(FilterChips, activeFiltersConfig))));\n    }\n  }]);\n\n  return PrimaryToolbar;\n}(Component);\n\nPrimaryToolbar.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  className: PropTypes.string,\n  toggleIsExpanded: PropTypes.func,\n\n  /** @reference [BulkSelect props](/components/BulkSelect) */\n  bulkSelect: PropTypes.shape(BulkSelect.propTypes),\n\n  /** @reference [ConditionalFilter props](/components/ConditionalFilter) */\n  filterConfig: PropTypes.shape(ConditionalFilter.propTypes),\n  dedicatedAction: PropTypes.node,\n\n  /** @reference [PF pagination props](https://www.patternfly.org/v4/components/pagination#pagination) */\n  pagination: PropTypes.shape(Pagination.propTypes),\n\n  /** @reference [SortBy props](/components/SortBy) */\n  sortByConfig: PropTypes.shape(SortBy.propTypes),\n\n  /** @reference [DownloadButton props](/components/DownloadButton) */\n  exportConfig: PropTypes.shape(DownloadButton.propTypes),\n\n  /** @reference [FilterChips props](/components/FilterChips) */\n  activeFiltersConfig: PropTypes.shape(FilterChips.propTypes),\n  children: PropTypes.node,\n  actionsConfig: PropTypes.shape({\n    actions: Actions.propTypes.actions,\n    dropdownProps: Actions.propTypes.dropdownProps,\n    onSelect: Actions.propTypes.onSelect\n  }),\n  expandAll: PropTypes.oneOfType([PropTypes.node, PropTypes.shape({\n    onClick: PropTypes.func,\n    isAllExpanded: PropTypes.bool\n  })]),\n\n  /** Use PF [toolbar toggle component for conditional filter](https://www.patternfly.org/v4/components/toolbar/react/component-managed-toggle-groups/) */\n  useMobileLayout: PropTypes.bool\n};\nexport default PrimaryToolbar;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport \"../../Section/./section.css\";\n\nvar Section = function Section(_ref) {\n  var type = _ref.type,\n      children = _ref.children,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"type\", \"children\", \"className\"]);\n\n  var sectionClasses = classNames(className, _defineProperty({}, \"ins-l-\".concat(type), type !== undefined));\n  return /*#__PURE__*/React.createElement(\"section\", _extends({}, props, {\n    className: sectionClasses\n  }), \" \", children, \" \");\n};\n\nexport default Section;\nSection.propTypes = {\n  type: propTypes.string,\n  className: propTypes.string,\n  children: propTypes.any.isRequired\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React, { Fragment } from 'react';\nimport { Toolbar } from \"@patternfly/react-core/dist/esm/components/Toolbar/Toolbar.js\";\nimport { useOUIAId } from '@patternfly/react-core/';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\nimport \"../../TableToolbar/./TableToolbar.css\";\n\nfunction generateCount(results) {\n  if (results > 1 || results < 1) {\n    return \"\".concat(results, \" Results\");\n  } else {\n    return \"\".concat(results, \" Result\");\n  }\n}\n\nvar TableToolbar = function TableToolbar(_ref) {\n  var isFooter = _ref.isFooter,\n      results = _ref.results,\n      className = _ref.className,\n      selected = _ref.selected,\n      children = _ref.children,\n      ouiaId = _ref.ouiaId,\n      _ref$ouiaSafe = _ref.ouiaSafe,\n      ouiaSafe = _ref$ouiaSafe === void 0 ? true : _ref$ouiaSafe,\n      props = _objectWithoutProperties(_ref, [\"isFooter\", \"results\", \"className\", \"selected\", \"children\", \"ouiaId\", \"ouiaSafe\"]);\n\n  var tableToolbarClasses = classNames('ins-c-table__toolbar', _defineProperty({}, \"ins-m-footer\", isFooter), className);\n  var ouiaComponentType = 'RHI/TableToolbar';\n  var ouiaFinalId = useOUIAId(ouiaComponentType, ouiaId, ouiaSafe);\n  return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(Toolbar, _extends({\n    className: tableToolbarClasses,\n    \"data-ouia-component-type\": ouiaComponentType,\n    \"data-ouia-component-id\": ouiaFinalId,\n    \"data-ouia-safe\": ouiaSafe\n  }, props), children), (results >= 0 || selected >= 0) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ins-c-table__toolbar-results\"\n  }, results >= 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ins-c-table__toolbar-results-count\"\n  }, \" \", generateCount(results), \" \"), selected >= 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ins-c-table__toolbar-results-selected\"\n  }, \" \", selected, \" Selected \")));\n};\n\nexport default TableToolbar;\nTableToolbar.propTypes = {\n  isFooter: propTypes.bool,\n  results: propTypes.number,\n  children: propTypes.any,\n  className: propTypes.string,\n  selected: propTypes.number,\n  ouiaId: propTypes.string,\n  ouiaSafe: propTypes.bool\n};\nTableToolbar.defaultProps = {\n  isFooter: false\n};","\"use strict\";\n// tslint:disable\n/**\n * Role Based Access Control\n * The API for Role Based Access Control.\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar globalImportUrl = require(\"url\");\nvar axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nvar base_1 = require(\"./base\");\n/**\n    * @export\n    * @enum {string}\n    */\nvar ResourceDefinitionFilterOperationEnum;\n(function (ResourceDefinitionFilterOperationEnum) {\n    ResourceDefinitionFilterOperationEnum[\"Equal\"] = \"equal\";\n    ResourceDefinitionFilterOperationEnum[\"In\"] = \"in\";\n})(ResourceDefinitionFilterOperationEnum = exports.ResourceDefinitionFilterOperationEnum || (exports.ResourceDefinitionFilterOperationEnum = {}));\n/**\n * AccessApi - axios parameter creator\n * @export\n */\nexports.AccessApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Access responses are sorted in ascending order by an ID internal to the database\n         * @summary Get the permitted access for a principal in the tenant (defaults to principal from the identity header)\n         * @param {string} application The application name(s) to obtain access for the principal. This is an exact match. When no application is supplied, all permissions for the principal are returned. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [username] Unique username of the principal to obtain access for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalAccess: function (application, username, limit, offset, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'application' is not null or undefined\n                    if (application === null || application === undefined) {\n                        throw new base_1.RequiredError('application', 'Required parameter application was null or undefined when calling getPrincipalAccess.');\n                    }\n                    localVarPath = \"/access/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (application !== undefined) {\n                        localVarQueryParameter['application'] = application;\n                    }\n                    if (username !== undefined) {\n                        localVarQueryParameter['username'] = username;\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * AccessApi - functional programming interface\n * @export\n */\nexports.AccessApiFp = function (configuration) {\n    return {\n        /**\n         * Access responses are sorted in ascending order by an ID internal to the database\n         * @summary Get the permitted access for a principal in the tenant (defaults to principal from the identity header)\n         * @param {string} application The application name(s) to obtain access for the principal. This is an exact match. When no application is supplied, all permissions for the principal are returned. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [username] Unique username of the principal to obtain access for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalAccess: function (application, username, limit, offset, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.AccessApiAxiosParamCreator(configuration).getPrincipalAccess(application, username, limit, offset, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * AccessApi - factory interface\n * @export\n */\nexports.AccessApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Access responses are sorted in ascending order by an ID internal to the database\n         * @summary Get the permitted access for a principal in the tenant (defaults to principal from the identity header)\n         * @param {string} application The application name(s) to obtain access for the principal. This is an exact match. When no application is supplied, all permissions for the principal are returned. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [username] Unique username of the principal to obtain access for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalAccess: function (application, username, limit, offset, options) {\n            return exports.AccessApiFp(configuration).getPrincipalAccess(application, username, limit, offset, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * AccessApi - object-oriented interface\n * @export\n * @class AccessApi\n * @extends {BaseAPI}\n */\nvar AccessApi = /** @class */ (function (_super) {\n    __extends(AccessApi, _super);\n    function AccessApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Access responses are sorted in ascending order by an ID internal to the database\n     * @summary Get the permitted access for a principal in the tenant (defaults to principal from the identity header)\n     * @param {string} application The application name(s) to obtain access for the principal. This is an exact match. When no application is supplied, all permissions for the principal are returned. You may also use a comma-separated list to match on multiple applications.\n     * @param {string} [username] Unique username of the principal to obtain access for (only available for admins, and if supplied, takes precedence over the identity header).\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AccessApi\n     */\n    AccessApi.prototype.getPrincipalAccess = function (application, username, limit, offset, options) {\n        var _this = this;\n        return exports.AccessApiFp(this.configuration).getPrincipalAccess(application, username, limit, offset, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return AccessApi;\n}(base_1.BaseAPI));\nexports.AccessApi = AccessApi;\n/**\n * GroupApi - axios parameter creator\n * @export\n */\nexports.GroupApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         *\n         * @summary Add a principal to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupPrincipalIn} groupPrincipalIn Principal to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPrincipalToGroup: function (uuid, groupPrincipalIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling addPrincipalToGroup.');\n                    }\n                    // verify required parameter 'groupPrincipalIn' is not null or undefined\n                    if (groupPrincipalIn === null || groupPrincipalIn === undefined) {\n                        throw new base_1.RequiredError('groupPrincipalIn', 'Required parameter groupPrincipalIn was null or undefined when calling addPrincipalToGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/principals/\"\n                        .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof groupPrincipalIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(groupPrincipalIn !== undefined ? groupPrincipalIn : {}) : (groupPrincipalIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Add a role to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupRoleIn} groupRoleIn Role to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addRoleToGroup: function (uuid, groupRoleIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling addRoleToGroup.');\n                    }\n                    // verify required parameter 'groupRoleIn' is not null or undefined\n                    if (groupRoleIn === null || groupRoleIn === undefined) {\n                        throw new base_1.RequiredError('groupRoleIn', 'Required parameter groupRoleIn was null or undefined when calling addRoleToGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/roles/\"\n                        .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof groupRoleIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(groupRoleIn !== undefined ? groupRoleIn : {}) : (groupRoleIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Create a group in a tenant\n         * @param {Group} group Group to create in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup: function (group, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'group' is not null or undefined\n                    if (group === null || group === undefined) {\n                        throw new base_1.RequiredError('group', 'Required parameter group was null or undefined when calling createGroup.');\n                    }\n                    localVarPath = \"/groups/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof group !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(group !== undefined ? group : {}) : (group || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a group in the tenant\n         * @param {string} uuid ID of group to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteGroup: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deleteGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/\"\n                        .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Remove a principal from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} usernames A comma separated list of usernames for principals to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePrincipalFromGroup: function (uuid, usernames, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deletePrincipalFromGroup.');\n                    }\n                    // verify required parameter 'usernames' is not null or undefined\n                    if (usernames === null || usernames === undefined) {\n                        throw new base_1.RequiredError('usernames', 'Required parameter usernames was null or undefined when calling deletePrincipalFromGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/principals/\"\n                        .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (usernames !== undefined) {\n                        localVarQueryParameter['usernames'] = usernames;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Remove a role from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} roles A comma separated list of role UUIDs for roles to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRoleFromGroup: function (uuid, roles, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deleteRoleFromGroup.');\n                    }\n                    // verify required parameter 'roles' is not null or undefined\n                    if (roles === null || roles === undefined) {\n                        throw new base_1.RequiredError('roles', 'Required parameter roles was null or undefined when calling deleteRoleFromGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/roles/\"\n                        .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (roles !== undefined) {\n                        localVarQueryParameter['roles'] = roles;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a group in the tenant\n         * @param {string} uuid ID of group to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getGroup: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/\"\n                        .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary Get a list of principals from a group in the tenant\n         * @param {string} uuid ID of group from which to get principals\n         * @param {string} [principalUsername] Parameter for filtering group principals by principal &#x60;username&#x60; using string contains search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalsFromGroup: function (uuid, principalUsername, limit, offset, orderBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getPrincipalsFromGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/principals/\"\n                        .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (principalUsername !== undefined) {\n                        localVarQueryParameter['principal_username'] = principalUsername;\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by group name\n         * @summary List the groups for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [username] A username for a principal to filter for groups\n         * @param {Array<string>} [uuid] A list of UUIDs to filter listed groups.\n         * @param {Array<string>} [roleNames] List of role name to filter for groups. It is exact match but case-insensitive\n         * @param {'all' | 'any'} [roleDiscriminator] Discriminator that works with role_names to indicate matching all/any of the role names\n         * @param {'name' | 'modified' | 'principalCount' | 'policyCount'} [orderBy] Parameter for ordering groups by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listGroups: function (limit, offset, name, nameMatch, scope, username, uuid, roleNames, roleDiscriminator, orderBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/groups/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (name !== undefined) {\n                        localVarQueryParameter['name'] = name;\n                    }\n                    if (nameMatch !== undefined) {\n                        localVarQueryParameter['name_match'] = nameMatch;\n                    }\n                    if (scope !== undefined) {\n                        localVarQueryParameter['scope'] = scope;\n                    }\n                    if (username !== undefined) {\n                        localVarQueryParameter['username'] = username;\n                    }\n                    if (uuid) {\n                        localVarQueryParameter['uuid'] = uuid.join(base_1.COLLECTION_FORMATS.csv);\n                    }\n                    if (roleNames) {\n                        localVarQueryParameter['role_names'] = roleNames.join(base_1.COLLECTION_FORMATS.csv);\n                    }\n                    if (roleDiscriminator !== undefined) {\n                        localVarQueryParameter['role_discriminator'] = roleDiscriminator;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a group in the tenant\n         * @param {string} uuid ID of group\n         * @param {boolean} [exclude] If this is set to true, the result would be roles excluding the ones in the group\n         * @param {string} [roleName] Parameter for filtering group roles by role &#x60;name&#x60; using string contains search.\n         * @param {string} [roleDisplayName] Parameter for filtering group roles by role &#x60;display_name&#x60; using string contains search.\n         * @param {string} [roleDescription] Parameter for filtering group roles by role &#x60;description&#x60; using string contains search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRolesForGroup: function (uuid, exclude, roleName, roleDisplayName, roleDescription, limit, offset, orderBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling listRolesForGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/roles/\"\n                        .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (exclude !== undefined) {\n                        localVarQueryParameter['exclude'] = exclude;\n                    }\n                    if (roleName !== undefined) {\n                        localVarQueryParameter['role_name'] = roleName;\n                    }\n                    if (roleDisplayName !== undefined) {\n                        localVarQueryParameter['role_display_name'] = roleDisplayName;\n                    }\n                    if (roleDescription !== undefined) {\n                        localVarQueryParameter['role_description'] = roleDescription;\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Udate a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {Group} group Group to update in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup: function (uuid, group, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling updateGroup.');\n                    }\n                    // verify required parameter 'group' is not null or undefined\n                    if (group === null || group === undefined) {\n                        throw new base_1.RequiredError('group', 'Required parameter group was null or undefined when calling updateGroup.');\n                    }\n                    localVarPath = \"/groups/{uuid}/\"\n                        .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof group !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(group !== undefined ? group : {}) : (group || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * GroupApi - functional programming interface\n * @export\n */\nexports.GroupApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Add a principal to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupPrincipalIn} groupPrincipalIn Principal to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPrincipalToGroup: function (uuid, groupPrincipalIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.GroupApiAxiosParamCreator(configuration).addPrincipalToGroup(uuid, groupPrincipalIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Add a role to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupRoleIn} groupRoleIn Role to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addRoleToGroup: function (uuid, groupRoleIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.GroupApiAxiosParamCreator(configuration).addRoleToGroup(uuid, groupRoleIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Create a group in a tenant\n         * @param {Group} group Group to create in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup: function (group, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.GroupApiAxiosParamCreator(configuration).createGroup(group, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a group in the tenant\n         * @param {string} uuid ID of group to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteGroup: function (uuid, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.GroupApiAxiosParamCreator(configuration).deleteGroup(uuid, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Remove a principal from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} usernames A comma separated list of usernames for principals to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePrincipalFromGroup: function (uuid, usernames, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.GroupApiAxiosParamCreator(configuration).deletePrincipalFromGroup(uuid, usernames, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Remove a role from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} roles A comma separated list of role UUIDs for roles to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRoleFromGroup: function (uuid, roles, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.GroupApiAxiosParamCreator(configuration).deleteRoleFromGroup(uuid, roles, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a group in the tenant\n         * @param {string} uuid ID of group to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getGroup: function (uuid, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.GroupApiAxiosParamCreator(configuration).getGroup(uuid, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary Get a list of principals from a group in the tenant\n         * @param {string} uuid ID of group from which to get principals\n         * @param {string} [principalUsername] Parameter for filtering group principals by principal &#x60;username&#x60; using string contains search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalsFromGroup: function (uuid, principalUsername, limit, offset, orderBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.GroupApiAxiosParamCreator(configuration).getPrincipalsFromGroup(uuid, principalUsername, limit, offset, orderBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by group name\n         * @summary List the groups for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [username] A username for a principal to filter for groups\n         * @param {Array<string>} [uuid] A list of UUIDs to filter listed groups.\n         * @param {Array<string>} [roleNames] List of role name to filter for groups. It is exact match but case-insensitive\n         * @param {'all' | 'any'} [roleDiscriminator] Discriminator that works with role_names to indicate matching all/any of the role names\n         * @param {'name' | 'modified' | 'principalCount' | 'policyCount'} [orderBy] Parameter for ordering groups by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listGroups: function (limit, offset, name, nameMatch, scope, username, uuid, roleNames, roleDiscriminator, orderBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.GroupApiAxiosParamCreator(configuration).listGroups(limit, offset, name, nameMatch, scope, username, uuid, roleNames, roleDiscriminator, orderBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a group in the tenant\n         * @param {string} uuid ID of group\n         * @param {boolean} [exclude] If this is set to true, the result would be roles excluding the ones in the group\n         * @param {string} [roleName] Parameter for filtering group roles by role &#x60;name&#x60; using string contains search.\n         * @param {string} [roleDisplayName] Parameter for filtering group roles by role &#x60;display_name&#x60; using string contains search.\n         * @param {string} [roleDescription] Parameter for filtering group roles by role &#x60;description&#x60; using string contains search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRolesForGroup: function (uuid, exclude, roleName, roleDisplayName, roleDescription, limit, offset, orderBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.GroupApiAxiosParamCreator(configuration).listRolesForGroup(uuid, exclude, roleName, roleDisplayName, roleDescription, limit, offset, orderBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Udate a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {Group} group Group to update in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup: function (uuid, group, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.GroupApiAxiosParamCreator(configuration).updateGroup(uuid, group, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * GroupApi - factory interface\n * @export\n */\nexports.GroupApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Add a principal to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupPrincipalIn} groupPrincipalIn Principal to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addPrincipalToGroup: function (uuid, groupPrincipalIn, options) {\n            return exports.GroupApiFp(configuration).addPrincipalToGroup(uuid, groupPrincipalIn, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Add a role to a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {GroupRoleIn} groupRoleIn Role to add to a group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addRoleToGroup: function (uuid, groupRoleIn, options) {\n            return exports.GroupApiFp(configuration).addRoleToGroup(uuid, groupRoleIn, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Create a group in a tenant\n         * @param {Group} group Group to create in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup: function (group, options) {\n            return exports.GroupApiFp(configuration).createGroup(group, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Delete a group in the tenant\n         * @param {string} uuid ID of group to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteGroup: function (uuid, options) {\n            return exports.GroupApiFp(configuration).deleteGroup(uuid, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Remove a principal from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} usernames A comma separated list of usernames for principals to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePrincipalFromGroup: function (uuid, usernames, options) {\n            return exports.GroupApiFp(configuration).deletePrincipalFromGroup(uuid, usernames, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Remove a role from a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {string} roles A comma separated list of role UUIDs for roles to remove from the group\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRoleFromGroup: function (uuid, roles, options) {\n            return exports.GroupApiFp(configuration).deleteRoleFromGroup(uuid, roles, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Get a group in the tenant\n         * @param {string} uuid ID of group to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getGroup: function (uuid, options) {\n            return exports.GroupApiFp(configuration).getGroup(uuid, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary Get a list of principals from a group in the tenant\n         * @param {string} uuid ID of group from which to get principals\n         * @param {string} [principalUsername] Parameter for filtering group principals by principal &#x60;username&#x60; using string contains search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPrincipalsFromGroup: function (uuid, principalUsername, limit, offset, orderBy, options) {\n            return exports.GroupApiFp(configuration).getPrincipalsFromGroup(uuid, principalUsername, limit, offset, orderBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by group name\n         * @summary List the groups for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [username] A username for a principal to filter for groups\n         * @param {Array<string>} [uuid] A list of UUIDs to filter listed groups.\n         * @param {Array<string>} [roleNames] List of role name to filter for groups. It is exact match but case-insensitive\n         * @param {'all' | 'any'} [roleDiscriminator] Discriminator that works with role_names to indicate matching all/any of the role names\n         * @param {'name' | 'modified' | 'principalCount' | 'policyCount'} [orderBy] Parameter for ordering groups by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listGroups: function (limit, offset, name, nameMatch, scope, username, uuid, roleNames, roleDiscriminator, orderBy, options) {\n            return exports.GroupApiFp(configuration).listGroups(limit, offset, name, nameMatch, scope, username, uuid, roleNames, roleDiscriminator, orderBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a group in the tenant\n         * @param {string} uuid ID of group\n         * @param {boolean} [exclude] If this is set to true, the result would be roles excluding the ones in the group\n         * @param {string} [roleName] Parameter for filtering group roles by role &#x60;name&#x60; using string contains search.\n         * @param {string} [roleDisplayName] Parameter for filtering group roles by role &#x60;display_name&#x60; using string contains search.\n         * @param {string} [roleDescription] Parameter for filtering group roles by role &#x60;description&#x60; using string contains search.\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRolesForGroup: function (uuid, exclude, roleName, roleDisplayName, roleDescription, limit, offset, orderBy, options) {\n            return exports.GroupApiFp(configuration).listRolesForGroup(uuid, exclude, roleName, roleDisplayName, roleDescription, limit, offset, orderBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Udate a group in the tenant\n         * @param {string} uuid ID of group to update\n         * @param {Group} group Group to update in tenant\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup: function (uuid, group, options) {\n            return exports.GroupApiFp(configuration).updateGroup(uuid, group, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * GroupApi - object-oriented interface\n * @export\n * @class GroupApi\n * @extends {BaseAPI}\n */\nvar GroupApi = /** @class */ (function (_super) {\n    __extends(GroupApi, _super);\n    function GroupApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Add a principal to a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {GroupPrincipalIn} groupPrincipalIn Principal to add to a group\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.addPrincipalToGroup = function (uuid, groupPrincipalIn, options) {\n        var _this = this;\n        return exports.GroupApiFp(this.configuration).addPrincipalToGroup(uuid, groupPrincipalIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Add a role to a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {GroupRoleIn} groupRoleIn Role to add to a group\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.addRoleToGroup = function (uuid, groupRoleIn, options) {\n        var _this = this;\n        return exports.GroupApiFp(this.configuration).addRoleToGroup(uuid, groupRoleIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Create a group in a tenant\n     * @param {Group} group Group to create in tenant\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.createGroup = function (group, options) {\n        var _this = this;\n        return exports.GroupApiFp(this.configuration).createGroup(group, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Delete a group in the tenant\n     * @param {string} uuid ID of group to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.deleteGroup = function (uuid, options) {\n        var _this = this;\n        return exports.GroupApiFp(this.configuration).deleteGroup(uuid, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Remove a principal from a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {string} usernames A comma separated list of usernames for principals to remove from the group\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.deletePrincipalFromGroup = function (uuid, usernames, options) {\n        var _this = this;\n        return exports.GroupApiFp(this.configuration).deletePrincipalFromGroup(uuid, usernames, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Remove a role from a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {string} roles A comma separated list of role UUIDs for roles to remove from the group\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.deleteRoleFromGroup = function (uuid, roles, options) {\n        var _this = this;\n        return exports.GroupApiFp(this.configuration).deleteRoleFromGroup(uuid, roles, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Get a group in the tenant\n     * @param {string} uuid ID of group to get\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.getGroup = function (uuid, options) {\n        var _this = this;\n        return exports.GroupApiFp(this.configuration).getGroup(uuid, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by username\n     * @summary Get a list of principals from a group in the tenant\n     * @param {string} uuid ID of group from which to get principals\n     * @param {string} [principalUsername] Parameter for filtering group principals by principal &#x60;username&#x60; using string contains search.\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.getPrincipalsFromGroup = function (uuid, principalUsername, limit, offset, orderBy, options) {\n        var _this = this;\n        return exports.GroupApiFp(this.configuration).getPrincipalsFromGroup(uuid, principalUsername, limit, offset, orderBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by group name\n     * @summary List the groups for a tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {string} [name] Parameter for filtering resource by name using string contains search.\n     * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n     * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n     * @param {string} [username] A username for a principal to filter for groups\n     * @param {Array<string>} [uuid] A list of UUIDs to filter listed groups.\n     * @param {Array<string>} [roleNames] List of role name to filter for groups. It is exact match but case-insensitive\n     * @param {'all' | 'any'} [roleDiscriminator] Discriminator that works with role_names to indicate matching all/any of the role names\n     * @param {'name' | 'modified' | 'principalCount' | 'policyCount'} [orderBy] Parameter for ordering groups by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.listGroups = function (limit, offset, name, nameMatch, scope, username, uuid, roleNames, roleDiscriminator, orderBy, options) {\n        var _this = this;\n        return exports.GroupApiFp(this.configuration).listGroups(limit, offset, name, nameMatch, scope, username, uuid, roleNames, roleDiscriminator, orderBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by role name\n     * @summary List the roles for a group in the tenant\n     * @param {string} uuid ID of group\n     * @param {boolean} [exclude] If this is set to true, the result would be roles excluding the ones in the group\n     * @param {string} [roleName] Parameter for filtering group roles by role &#x60;name&#x60; using string contains search.\n     * @param {string} [roleDisplayName] Parameter for filtering group roles by role &#x60;display_name&#x60; using string contains search.\n     * @param {string} [roleDescription] Parameter for filtering group roles by role &#x60;description&#x60; using string contains search.\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.listRolesForGroup = function (uuid, exclude, roleName, roleDisplayName, roleDescription, limit, offset, orderBy, options) {\n        var _this = this;\n        return exports.GroupApiFp(this.configuration).listRolesForGroup(uuid, exclude, roleName, roleDisplayName, roleDescription, limit, offset, orderBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Udate a group in the tenant\n     * @param {string} uuid ID of group to update\n     * @param {Group} group Group to update in tenant\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    GroupApi.prototype.updateGroup = function (uuid, group, options) {\n        var _this = this;\n        return exports.GroupApiFp(this.configuration).updateGroup(uuid, group, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return GroupApi;\n}(base_1.BaseAPI));\nexports.GroupApi = GroupApi;\n/**\n * PermissionApi - axios parameter creator\n * @export\n */\nexports.PermissionApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * By default, options of application is returned. And could be resource_type or verb on demand.\n         * @summary List the available options for fields of permissions for a tenant\n         * @param {'application' | 'resource_type' | 'verb'} field specify which fields of permission to display\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [application] Filter returned options based on application. You may also use a comma-separated list to filter on multiple applications.\n         * @param {string} [resourceType] Filter returned options based on resource_type. You may also use a comma-separated list to filter on multiple resource_types.\n         * @param {string} [verb] Filter returned options based on verb. You may also use a comma-separated list to filter on multiple verbs.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissionOptions: function (field, limit, offset, application, resourceType, verb, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'field' is not null or undefined\n                    if (field === null || field === undefined) {\n                        throw new base_1.RequiredError('field', 'Required parameter field was null or undefined when calling listPermissionOptions.');\n                    }\n                    localVarPath = \"/permissions/options/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (field !== undefined) {\n                        localVarQueryParameter['field'] = field;\n                    }\n                    if (application !== undefined) {\n                        localVarQueryParameter['application'] = application;\n                    }\n                    if (resourceType !== undefined) {\n                        localVarQueryParameter['resource_type'] = resourceType;\n                    }\n                    if (verb !== undefined) {\n                        localVarQueryParameter['verb'] = verb;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by permission application.\n         * @summary List the permissions for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'application' | 'resource_type' | 'verb' | 'permission'} [orderBy] Parameter for ordering permissions by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n         * @param {string} [application] Exact match for the application name of a permission. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [resourceType] Exact match for the resource type name of a permission. You may also use a comma-separated list to match on multiple resource_types.\n         * @param {string} [verb] Exact match for the operation verb name of a permission You may also use a comma-separated list to match on multiple verbs.\n         * @param {string} [permission] Partial match for the aggregate permission value name of a permission object.\n         * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission with a global allowance on either \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissions: function (limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/permissions/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    if (application !== undefined) {\n                        localVarQueryParameter['application'] = application;\n                    }\n                    if (resourceType !== undefined) {\n                        localVarQueryParameter['resource_type'] = resourceType;\n                    }\n                    if (verb !== undefined) {\n                        localVarQueryParameter['verb'] = verb;\n                    }\n                    if (permission !== undefined) {\n                        localVarQueryParameter['permission'] = permission;\n                    }\n                    if (excludeGlobals !== undefined) {\n                        localVarQueryParameter['exclude_globals'] = excludeGlobals;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * PermissionApi - functional programming interface\n * @export\n */\nexports.PermissionApiFp = function (configuration) {\n    return {\n        /**\n         * By default, options of application is returned. And could be resource_type or verb on demand.\n         * @summary List the available options for fields of permissions for a tenant\n         * @param {'application' | 'resource_type' | 'verb'} field specify which fields of permission to display\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [application] Filter returned options based on application. You may also use a comma-separated list to filter on multiple applications.\n         * @param {string} [resourceType] Filter returned options based on resource_type. You may also use a comma-separated list to filter on multiple resource_types.\n         * @param {string} [verb] Filter returned options based on verb. You may also use a comma-separated list to filter on multiple verbs.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissionOptions: function (field, limit, offset, application, resourceType, verb, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PermissionApiAxiosParamCreator(configuration).listPermissionOptions(field, limit, offset, application, resourceType, verb, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by permission application.\n         * @summary List the permissions for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'application' | 'resource_type' | 'verb' | 'permission'} [orderBy] Parameter for ordering permissions by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n         * @param {string} [application] Exact match for the application name of a permission. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [resourceType] Exact match for the resource type name of a permission. You may also use a comma-separated list to match on multiple resource_types.\n         * @param {string} [verb] Exact match for the operation verb name of a permission You may also use a comma-separated list to match on multiple verbs.\n         * @param {string} [permission] Partial match for the aggregate permission value name of a permission object.\n         * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission with a global allowance on either \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissions: function (limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PermissionApiAxiosParamCreator(configuration).listPermissions(limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * PermissionApi - factory interface\n * @export\n */\nexports.PermissionApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * By default, options of application is returned. And could be resource_type or verb on demand.\n         * @summary List the available options for fields of permissions for a tenant\n         * @param {'application' | 'resource_type' | 'verb'} field specify which fields of permission to display\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [application] Filter returned options based on application. You may also use a comma-separated list to filter on multiple applications.\n         * @param {string} [resourceType] Filter returned options based on resource_type. You may also use a comma-separated list to filter on multiple resource_types.\n         * @param {string} [verb] Filter returned options based on verb. You may also use a comma-separated list to filter on multiple verbs.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissionOptions: function (field, limit, offset, application, resourceType, verb, options) {\n            return exports.PermissionApiFp(configuration).listPermissionOptions(field, limit, offset, application, resourceType, verb, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by permission application.\n         * @summary List the permissions for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'application' | 'resource_type' | 'verb' | 'permission'} [orderBy] Parameter for ordering permissions by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n         * @param {string} [application] Exact match for the application name of a permission. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [resourceType] Exact match for the resource type name of a permission. You may also use a comma-separated list to match on multiple resource_types.\n         * @param {string} [verb] Exact match for the operation verb name of a permission You may also use a comma-separated list to match on multiple verbs.\n         * @param {string} [permission] Partial match for the aggregate permission value name of a permission object.\n         * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission with a global allowance on either \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPermissions: function (limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, options) {\n            return exports.PermissionApiFp(configuration).listPermissions(limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * PermissionApi - object-oriented interface\n * @export\n * @class PermissionApi\n * @extends {BaseAPI}\n */\nvar PermissionApi = /** @class */ (function (_super) {\n    __extends(PermissionApi, _super);\n    function PermissionApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * By default, options of application is returned. And could be resource_type or verb on demand.\n     * @summary List the available options for fields of permissions for a tenant\n     * @param {'application' | 'resource_type' | 'verb'} field specify which fields of permission to display\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {string} [application] Filter returned options based on application. You may also use a comma-separated list to filter on multiple applications.\n     * @param {string} [resourceType] Filter returned options based on resource_type. You may also use a comma-separated list to filter on multiple resource_types.\n     * @param {string} [verb] Filter returned options based on verb. You may also use a comma-separated list to filter on multiple verbs.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PermissionApi\n     */\n    PermissionApi.prototype.listPermissionOptions = function (field, limit, offset, application, resourceType, verb, options) {\n        var _this = this;\n        return exports.PermissionApiFp(this.configuration).listPermissionOptions(field, limit, offset, application, resourceType, verb, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by permission application.\n     * @summary List the permissions for a tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {'application' | 'resource_type' | 'verb' | 'permission'} [orderBy] Parameter for ordering permissions by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-application\n     * @param {string} [application] Exact match for the application name of a permission. You may also use a comma-separated list to match on multiple applications.\n     * @param {string} [resourceType] Exact match for the resource type name of a permission. You may also use a comma-separated list to match on multiple resource_types.\n     * @param {string} [verb] Exact match for the operation verb name of a permission You may also use a comma-separated list to match on multiple verbs.\n     * @param {string} [permission] Partial match for the aggregate permission value name of a permission object.\n     * @param {'true' | 'false'} [excludeGlobals] If set to \\&#39;true\\&#39;, this will exclude any permission with a global allowance on either \\&#39;application\\&#39;, \\&#39;resource_type\\&#39; or \\&#39;verb\\&#39;. The default is \\&#39;false\\&#39;.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PermissionApi\n     */\n    PermissionApi.prototype.listPermissions = function (limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, options) {\n        var _this = this;\n        return exports.PermissionApiFp(this.configuration).listPermissions(limit, offset, orderBy, application, resourceType, verb, permission, excludeGlobals, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return PermissionApi;\n}(base_1.BaseAPI));\nexports.PermissionApi = PermissionApi;\n/**\n * PolicyApi - axios parameter creator\n * @export\n */\nexports.PolicyApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         *\n         * @summary Create a policy in a tenant\n         * @param {PolicyIn} policyIn Policy to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPolicies: function (policyIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'policyIn' is not null or undefined\n                    if (policyIn === null || policyIn === undefined) {\n                        throw new base_1.RequiredError('policyIn', 'Required parameter policyIn was null or undefined when calling createPolicies.');\n                    }\n                    localVarPath = \"/policies/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof policyIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(policyIn !== undefined ? policyIn : {}) : (policyIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a policy in the tenant\n         * @param {string} uuid ID of policy to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePolicy: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deletePolicy.');\n                    }\n                    localVarPath = \"/policies/{uuid}/\"\n                        .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a policy in the tenant\n         * @param {string} uuid ID of policy to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPolicy: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getPolicy.');\n                    }\n                    localVarPath = \"/policies/{uuid}/\"\n                        .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by policy name\n         * @summary List the policies in the tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [groupName] Parameter for filtering resource by group name using string contains search.\n         * @param {string} [groupUuid] Parameter for filtering resource by group uuid using UUID exact match.\n         * @param {'name' | 'modified'} [orderBy] Parameter for ordering policies by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPolicies: function (limit, offset, name, scope, groupName, groupUuid, orderBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/policies/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (name !== undefined) {\n                        localVarQueryParameter['name'] = name;\n                    }\n                    if (scope !== undefined) {\n                        localVarQueryParameter['scope'] = scope;\n                    }\n                    if (groupName !== undefined) {\n                        localVarQueryParameter['group_name'] = groupName;\n                    }\n                    if (groupUuid !== undefined) {\n                        localVarQueryParameter['group_uuid'] = groupUuid;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Update a policy in the tenant\n         * @param {string} uuid ID of policy to update\n         * @param {PolicyIn} policyIn Policy to update\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePolicy: function (uuid, policyIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling updatePolicy.');\n                    }\n                    // verify required parameter 'policyIn' is not null or undefined\n                    if (policyIn === null || policyIn === undefined) {\n                        throw new base_1.RequiredError('policyIn', 'Required parameter policyIn was null or undefined when calling updatePolicy.');\n                    }\n                    localVarPath = \"/policies/{uuid}/\"\n                        .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof policyIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(policyIn !== undefined ? policyIn : {}) : (policyIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * PolicyApi - functional programming interface\n * @export\n */\nexports.PolicyApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Create a policy in a tenant\n         * @param {PolicyIn} policyIn Policy to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPolicies: function (policyIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PolicyApiAxiosParamCreator(configuration).createPolicies(policyIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a policy in the tenant\n         * @param {string} uuid ID of policy to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePolicy: function (uuid, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PolicyApiAxiosParamCreator(configuration).deletePolicy(uuid, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a policy in the tenant\n         * @param {string} uuid ID of policy to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPolicy: function (uuid, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PolicyApiAxiosParamCreator(configuration).getPolicy(uuid, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by policy name\n         * @summary List the policies in the tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [groupName] Parameter for filtering resource by group name using string contains search.\n         * @param {string} [groupUuid] Parameter for filtering resource by group uuid using UUID exact match.\n         * @param {'name' | 'modified'} [orderBy] Parameter for ordering policies by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPolicies: function (limit, offset, name, scope, groupName, groupUuid, orderBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PolicyApiAxiosParamCreator(configuration).listPolicies(limit, offset, name, scope, groupName, groupUuid, orderBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Update a policy in the tenant\n         * @param {string} uuid ID of policy to update\n         * @param {PolicyIn} policyIn Policy to update\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePolicy: function (uuid, policyIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PolicyApiAxiosParamCreator(configuration).updatePolicy(uuid, policyIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * PolicyApi - factory interface\n * @export\n */\nexports.PolicyApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Create a policy in a tenant\n         * @param {PolicyIn} policyIn Policy to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createPolicies: function (policyIn, options) {\n            return exports.PolicyApiFp(configuration).createPolicies(policyIn, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Delete a policy in the tenant\n         * @param {string} uuid ID of policy to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePolicy: function (uuid, options) {\n            return exports.PolicyApiFp(configuration).deletePolicy(uuid, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Get a policy in the tenant\n         * @param {string} uuid ID of policy to get\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPolicy: function (uuid, options) {\n            return exports.PolicyApiFp(configuration).getPolicy(uuid, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by policy name\n         * @summary List the policies in the tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {string} [groupName] Parameter for filtering resource by group name using string contains search.\n         * @param {string} [groupUuid] Parameter for filtering resource by group uuid using UUID exact match.\n         * @param {'name' | 'modified'} [orderBy] Parameter for ordering policies by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPolicies: function (limit, offset, name, scope, groupName, groupUuid, orderBy, options) {\n            return exports.PolicyApiFp(configuration).listPolicies(limit, offset, name, scope, groupName, groupUuid, orderBy, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Update a policy in the tenant\n         * @param {string} uuid ID of policy to update\n         * @param {PolicyIn} policyIn Policy to update\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updatePolicy: function (uuid, policyIn, options) {\n            return exports.PolicyApiFp(configuration).updatePolicy(uuid, policyIn, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * PolicyApi - object-oriented interface\n * @export\n * @class PolicyApi\n * @extends {BaseAPI}\n */\nvar PolicyApi = /** @class */ (function (_super) {\n    __extends(PolicyApi, _super);\n    function PolicyApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Create a policy in a tenant\n     * @param {PolicyIn} policyIn Policy to create\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.createPolicies = function (policyIn, options) {\n        var _this = this;\n        return exports.PolicyApiFp(this.configuration).createPolicies(policyIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Delete a policy in the tenant\n     * @param {string} uuid ID of policy to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.deletePolicy = function (uuid, options) {\n        var _this = this;\n        return exports.PolicyApiFp(this.configuration).deletePolicy(uuid, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Get a policy in the tenant\n     * @param {string} uuid ID of policy to get\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.getPolicy = function (uuid, options) {\n        var _this = this;\n        return exports.PolicyApiFp(this.configuration).getPolicy(uuid, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by policy name\n     * @summary List the policies in the tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {string} [name] Parameter for filtering resource by name using string contains search.\n     * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n     * @param {string} [groupName] Parameter for filtering resource by group name using string contains search.\n     * @param {string} [groupUuid] Parameter for filtering resource by group uuid using UUID exact match.\n     * @param {'name' | 'modified'} [orderBy] Parameter for ordering policies by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.listPolicies = function (limit, offset, name, scope, groupName, groupUuid, orderBy, options) {\n        var _this = this;\n        return exports.PolicyApiFp(this.configuration).listPolicies(limit, offset, name, scope, groupName, groupUuid, orderBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Update a policy in the tenant\n     * @param {string} uuid ID of policy to update\n     * @param {PolicyIn} policyIn Policy to update\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PolicyApi\n     */\n    PolicyApi.prototype.updatePolicy = function (uuid, policyIn, options) {\n        var _this = this;\n        return exports.PolicyApiFp(this.configuration).updatePolicy(uuid, policyIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return PolicyApi;\n}(base_1.BaseAPI));\nexports.PolicyApi = PolicyApi;\n/**\n * PrincipalApi - axios parameter creator\n * @export\n */\nexports.PrincipalApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary List the principals for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'partial' | 'exact'} [matchCriteria] Parameter for specifying the matching criteria for an object\\&#39;s name or email.\n         * @param {string} [usernames] Comma separated usernames of principals to get. If match_criteria is specified, only the first username will be picked up for search.\n         * @param {'asc' | 'desc'} [sortOrder] The sort order of the query, either ascending or descending. Defaults to ascending.\n         * @param {string} [email] E-mail address of principal to search for. Could be combined with match_criteria for searching.\n         * @param {'enabled' | 'disabled' | 'all'} [status] Set the status of users to get back. Could not be used with: usernames, email, admin_only\n         * @param {'true' | 'false'} [adminOnly] Get only admin users within an account. Setting this would ignore the parameters: usernames, email\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPrincipals: function (limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/principals/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (matchCriteria !== undefined) {\n                        localVarQueryParameter['match_criteria'] = matchCriteria;\n                    }\n                    if (usernames !== undefined) {\n                        localVarQueryParameter['usernames'] = usernames;\n                    }\n                    if (sortOrder !== undefined) {\n                        localVarQueryParameter['sort_order'] = sortOrder;\n                    }\n                    if (email !== undefined) {\n                        localVarQueryParameter['email'] = email;\n                    }\n                    if (status !== undefined) {\n                        localVarQueryParameter['status'] = status;\n                    }\n                    if (adminOnly !== undefined) {\n                        localVarQueryParameter['admin_only'] = adminOnly;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * PrincipalApi - functional programming interface\n * @export\n */\nexports.PrincipalApiFp = function (configuration) {\n    return {\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary List the principals for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'partial' | 'exact'} [matchCriteria] Parameter for specifying the matching criteria for an object\\&#39;s name or email.\n         * @param {string} [usernames] Comma separated usernames of principals to get. If match_criteria is specified, only the first username will be picked up for search.\n         * @param {'asc' | 'desc'} [sortOrder] The sort order of the query, either ascending or descending. Defaults to ascending.\n         * @param {string} [email] E-mail address of principal to search for. Could be combined with match_criteria for searching.\n         * @param {'enabled' | 'disabled' | 'all'} [status] Set the status of users to get back. Could not be used with: usernames, email, admin_only\n         * @param {'true' | 'false'} [adminOnly] Get only admin users within an account. Setting this would ignore the parameters: usernames, email\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPrincipals: function (limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.PrincipalApiAxiosParamCreator(configuration).listPrincipals(limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * PrincipalApi - factory interface\n * @export\n */\nexports.PrincipalApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * By default, responses are sorted in ascending order by username\n         * @summary List the principals for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {'partial' | 'exact'} [matchCriteria] Parameter for specifying the matching criteria for an object\\&#39;s name or email.\n         * @param {string} [usernames] Comma separated usernames of principals to get. If match_criteria is specified, only the first username will be picked up for search.\n         * @param {'asc' | 'desc'} [sortOrder] The sort order of the query, either ascending or descending. Defaults to ascending.\n         * @param {string} [email] E-mail address of principal to search for. Could be combined with match_criteria for searching.\n         * @param {'enabled' | 'disabled' | 'all'} [status] Set the status of users to get back. Could not be used with: usernames, email, admin_only\n         * @param {'true' | 'false'} [adminOnly] Get only admin users within an account. Setting this would ignore the parameters: usernames, email\n         * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listPrincipals: function (limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, options) {\n            return exports.PrincipalApiFp(configuration).listPrincipals(limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * PrincipalApi - object-oriented interface\n * @export\n * @class PrincipalApi\n * @extends {BaseAPI}\n */\nvar PrincipalApi = /** @class */ (function (_super) {\n    __extends(PrincipalApi, _super);\n    function PrincipalApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * By default, responses are sorted in ascending order by username\n     * @summary List the principals for a tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {'partial' | 'exact'} [matchCriteria] Parameter for specifying the matching criteria for an object\\&#39;s name or email.\n     * @param {string} [usernames] Comma separated usernames of principals to get. If match_criteria is specified, only the first username will be picked up for search.\n     * @param {'asc' | 'desc'} [sortOrder] The sort order of the query, either ascending or descending. Defaults to ascending.\n     * @param {string} [email] E-mail address of principal to search for. Could be combined with match_criteria for searching.\n     * @param {'enabled' | 'disabled' | 'all'} [status] Set the status of users to get back. Could not be used with: usernames, email, admin_only\n     * @param {'true' | 'false'} [adminOnly] Get only admin users within an account. Setting this would ignore the parameters: usernames, email\n     * @param {'username'} [orderBy] Parameter for ordering principals by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-username\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PrincipalApi\n     */\n    PrincipalApi.prototype.listPrincipals = function (limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, options) {\n        var _this = this;\n        return exports.PrincipalApiFp(this.configuration).listPrincipals(limit, offset, matchCriteria, usernames, sortOrder, email, status, adminOnly, orderBy, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return PrincipalApi;\n}(base_1.BaseAPI));\nexports.PrincipalApi = PrincipalApi;\n/**\n * RoleApi - axios parameter creator\n * @export\n */\nexports.RoleApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         *\n         * @summary Create a roles for a tenant\n         * @param {RoleIn} roleIn Role to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoles: function (roleIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'roleIn' is not null or undefined\n                    if (roleIn === null || roleIn === undefined) {\n                        throw new base_1.RequiredError('roleIn', 'Required parameter roleIn was null or undefined when calling createRoles.');\n                    }\n                    localVarPath = \"/roles/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof roleIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(roleIn !== undefined ? roleIn : {}) : (roleIn || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a role in the tenant\n         * @param {string} uuid ID of role to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRole: function (uuid, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling deleteRole.');\n                    }\n                    localVarPath = \"/roles/{uuid}/\"\n                        .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a role in the tenant\n         * @param {string} uuid ID of role to get\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRole: function (uuid, scope, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getRole.');\n                    }\n                    localVarPath = \"/roles/{uuid}/\"\n                        .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (scope !== undefined) {\n                        localVarQueryParameter['scope'] = scope;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get access for a role in the tenant\n         * @param {string} uuid ID of the role\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRoleAccess: function (uuid, limit, offset, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling getRoleAccess.');\n                    }\n                    localVarPath = \"/roles/{uuid}/access/\"\n                        .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {string} [displayName] Parameter for filtering resource by display_name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {Array<'groups_in' | 'groups_in_count'>} [addFields] Parameter for add list of fields to display for roles.\n         * @param {string} [username] Unique username of the principal to obtain roles for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {string} [application] The application name(s) to filter roles by, from permissions. This is an exact match. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [permission] The permission(s) to filter roles by. This is an exact match. You may also use a comma-separated list to match on multiple permissions.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRoles: function (limit, offset, name, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/roles/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    if (limit !== undefined) {\n                        localVarQueryParameter['limit'] = limit;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (name !== undefined) {\n                        localVarQueryParameter['name'] = name;\n                    }\n                    if (displayName !== undefined) {\n                        localVarQueryParameter['display_name'] = displayName;\n                    }\n                    if (nameMatch !== undefined) {\n                        localVarQueryParameter['name_match'] = nameMatch;\n                    }\n                    if (scope !== undefined) {\n                        localVarQueryParameter['scope'] = scope;\n                    }\n                    if (orderBy !== undefined) {\n                        localVarQueryParameter['order_by'] = orderBy;\n                    }\n                    if (addFields) {\n                        localVarQueryParameter['add_fields'] = addFields.join(base_1.COLLECTION_FORMATS.csv);\n                    }\n                    if (username !== undefined) {\n                        localVarQueryParameter['username'] = username;\n                    }\n                    if (application !== undefined) {\n                        localVarQueryParameter['application'] = application;\n                    }\n                    if (permission !== undefined) {\n                        localVarQueryParameter['permission'] = permission;\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Patch a Role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RolePatch} [rolePatch] Patch to a Role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchRole: function (uuid, rolePatch, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling patchRole.');\n                    }\n                    localVarPath = \"/roles/{uuid}/\"\n                        .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof rolePatch !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(rolePatch !== undefined ? rolePatch : {}) : (rolePatch || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         *\n         * @summary Update a Role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RoleWithAccess} roleWithAccess Update to a Role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRole: function (uuid, roleWithAccess, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'uuid' is not null or undefined\n                    if (uuid === null || uuid === undefined) {\n                        throw new base_1.RequiredError('uuid', 'Required parameter uuid was null or undefined when calling updateRole.');\n                    }\n                    // verify required parameter 'roleWithAccess' is not null or undefined\n                    if (roleWithAccess === null || roleWithAccess === undefined) {\n                        throw new base_1.RequiredError('roleWithAccess', 'Required parameter roleWithAccess was null or undefined when calling updateRole.');\n                    }\n                    localVarPath = \"/roles/{uuid}/\"\n                        .replace(\"{\" + \"uuid\" + \"}\", encodeURIComponent(String(uuid)));\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    needsSerialization = (typeof roleWithAccess !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                    localVarRequestOptions.data = needsSerialization ? JSON.stringify(roleWithAccess !== undefined ? roleWithAccess : {}) : (roleWithAccess || \"\");\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * RoleApi - functional programming interface\n * @export\n */\nexports.RoleApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Create a roles for a tenant\n         * @param {RoleIn} roleIn Role to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoles: function (roleIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.RoleApiAxiosParamCreator(configuration).createRoles(roleIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Delete a role in the tenant\n         * @param {string} uuid ID of role to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRole: function (uuid, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.RoleApiAxiosParamCreator(configuration).deleteRole(uuid, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get a role in the tenant\n         * @param {string} uuid ID of role to get\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRole: function (uuid, scope, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.RoleApiAxiosParamCreator(configuration).getRole(uuid, scope, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Get access for a role in the tenant\n         * @param {string} uuid ID of the role\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRoleAccess: function (uuid, limit, offset, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.RoleApiAxiosParamCreator(configuration).getRoleAccess(uuid, limit, offset, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {string} [displayName] Parameter for filtering resource by display_name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {Array<'groups_in' | 'groups_in_count'>} [addFields] Parameter for add list of fields to display for roles.\n         * @param {string} [username] Unique username of the principal to obtain roles for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {string} [application] The application name(s) to filter roles by, from permissions. This is an exact match. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [permission] The permission(s) to filter roles by. This is an exact match. You may also use a comma-separated list to match on multiple permissions.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRoles: function (limit, offset, name, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.RoleApiAxiosParamCreator(configuration).listRoles(limit, offset, name, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Patch a Role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RolePatch} [rolePatch] Patch to a Role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchRole: function (uuid, rolePatch, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.RoleApiAxiosParamCreator(configuration).patchRole(uuid, rolePatch, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         *\n         * @summary Update a Role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RoleWithAccess} roleWithAccess Update to a Role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRole: function (uuid, roleWithAccess, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.RoleApiAxiosParamCreator(configuration).updateRole(uuid, roleWithAccess, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * RoleApi - factory interface\n * @export\n */\nexports.RoleApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Create a roles for a tenant\n         * @param {RoleIn} roleIn Role to create\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoles: function (roleIn, options) {\n            return exports.RoleApiFp(configuration).createRoles(roleIn, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Delete a role in the tenant\n         * @param {string} uuid ID of role to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRole: function (uuid, options) {\n            return exports.RoleApiFp(configuration).deleteRole(uuid, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Get a role in the tenant\n         * @param {string} uuid ID of role to get\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRole: function (uuid, scope, options) {\n            return exports.RoleApiFp(configuration).getRole(uuid, scope, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Get access for a role in the tenant\n         * @param {string} uuid ID of the role\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRoleAccess: function (uuid, limit, offset, options) {\n            return exports.RoleApiFp(configuration).getRoleAccess(uuid, limit, offset, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * By default, responses are sorted in ascending order by role name\n         * @summary List the roles for a tenant\n         * @param {number} [limit] Parameter for selecting the amount of data returned.\n         * @param {number} [offset] Parameter for selecting the offset of data.\n         * @param {string} [name] Parameter for filtering resource by name using string contains search.\n         * @param {string} [displayName] Parameter for filtering resource by display_name using string contains search.\n         * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n         * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n         * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n         * @param {Array<'groups_in' | 'groups_in_count'>} [addFields] Parameter for add list of fields to display for roles.\n         * @param {string} [username] Unique username of the principal to obtain roles for (only available for admins, and if supplied, takes precedence over the identity header).\n         * @param {string} [application] The application name(s) to filter roles by, from permissions. This is an exact match. You may also use a comma-separated list to match on multiple applications.\n         * @param {string} [permission] The permission(s) to filter roles by. This is an exact match. You may also use a comma-separated list to match on multiple permissions.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listRoles: function (limit, offset, name, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, options) {\n            return exports.RoleApiFp(configuration).listRoles(limit, offset, name, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Patch a Role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RolePatch} [rolePatch] Patch to a Role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        patchRole: function (uuid, rolePatch, options) {\n            return exports.RoleApiFp(configuration).patchRole(uuid, rolePatch, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         *\n         * @summary Update a Role in the tenant\n         * @param {string} uuid ID of role to update\n         * @param {RoleWithAccess} roleWithAccess Update to a Role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRole: function (uuid, roleWithAccess, options) {\n            return exports.RoleApiFp(configuration).updateRole(uuid, roleWithAccess, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * RoleApi - object-oriented interface\n * @export\n * @class RoleApi\n * @extends {BaseAPI}\n */\nvar RoleApi = /** @class */ (function (_super) {\n    __extends(RoleApi, _super);\n    function RoleApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Create a roles for a tenant\n     * @param {RoleIn} roleIn Role to create\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.createRoles = function (roleIn, options) {\n        var _this = this;\n        return exports.RoleApiFp(this.configuration).createRoles(roleIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Delete a role in the tenant\n     * @param {string} uuid ID of role to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.deleteRole = function (uuid, options) {\n        var _this = this;\n        return exports.RoleApiFp(this.configuration).deleteRole(uuid, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Get a role in the tenant\n     * @param {string} uuid ID of role to get\n     * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.getRole = function (uuid, scope, options) {\n        var _this = this;\n        return exports.RoleApiFp(this.configuration).getRole(uuid, scope, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Get access for a role in the tenant\n     * @param {string} uuid ID of the role\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.getRoleAccess = function (uuid, limit, offset, options) {\n        var _this = this;\n        return exports.RoleApiFp(this.configuration).getRoleAccess(uuid, limit, offset, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * By default, responses are sorted in ascending order by role name\n     * @summary List the roles for a tenant\n     * @param {number} [limit] Parameter for selecting the amount of data returned.\n     * @param {number} [offset] Parameter for selecting the offset of data.\n     * @param {string} [name] Parameter for filtering resource by name using string contains search.\n     * @param {string} [displayName] Parameter for filtering resource by display_name using string contains search.\n     * @param {'partial' | 'exact'} [nameMatch] Parameter for specifying the matching criteria for an object\\&#39;s name or display_name.\n     * @param {'account' | 'principal'} [scope] Parameter for filtering resource by scope.\n     * @param {'name' | 'display_name' | 'modified' | 'policyCount'} [orderBy] Parameter for ordering roles by value. For inverse ordering, supply \\&#39;-\\&#39; before the param value, such as: ?order_by&#x3D;-name\n     * @param {Array<'groups_in' | 'groups_in_count'>} [addFields] Parameter for add list of fields to display for roles.\n     * @param {string} [username] Unique username of the principal to obtain roles for (only available for admins, and if supplied, takes precedence over the identity header).\n     * @param {string} [application] The application name(s) to filter roles by, from permissions. This is an exact match. You may also use a comma-separated list to match on multiple applications.\n     * @param {string} [permission] The permission(s) to filter roles by. This is an exact match. You may also use a comma-separated list to match on multiple permissions.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.listRoles = function (limit, offset, name, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, options) {\n        var _this = this;\n        return exports.RoleApiFp(this.configuration).listRoles(limit, offset, name, displayName, nameMatch, scope, orderBy, addFields, username, application, permission, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Patch a Role in the tenant\n     * @param {string} uuid ID of role to update\n     * @param {RolePatch} [rolePatch] Patch to a Role\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.patchRole = function (uuid, rolePatch, options) {\n        var _this = this;\n        return exports.RoleApiFp(this.configuration).patchRole(uuid, rolePatch, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     *\n     * @summary Update a Role in the tenant\n     * @param {string} uuid ID of role to update\n     * @param {RoleWithAccess} roleWithAccess Update to a Role\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    RoleApi.prototype.updateRole = function (uuid, roleWithAccess, options) {\n        var _this = this;\n        return exports.RoleApiFp(this.configuration).updateRole(uuid, roleWithAccess, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return RoleApi;\n}(base_1.BaseAPI));\nexports.RoleApi = RoleApi;\n/**\n * StatusApi - axios parameter creator\n * @export\n */\nexports.StatusApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         *\n         * @summary Obtain server status\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getStatus: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/status/\";\n                    localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication basic_auth required\n                    // http basic authentication required\n                    if (configuration && (configuration.username || configuration.password)) {\n                        localVarRequestOptions[\"auth\"] = { username: configuration.username, password: configuration.password };\n                    }\n                    localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                    // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                    delete localVarUrlObj.search;\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: globalImportUrl.format(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * StatusApi - functional programming interface\n * @export\n */\nexports.StatusApiFp = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Obtain server status\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getStatus: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.StatusApiAxiosParamCreator(configuration).getStatus(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * StatusApi - factory interface\n * @export\n */\nexports.StatusApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         *\n         * @summary Obtain server status\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getStatus: function (options) {\n            return exports.StatusApiFp(configuration).getStatus(options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * StatusApi - object-oriented interface\n * @export\n * @class StatusApi\n * @extends {BaseAPI}\n */\nvar StatusApi = /** @class */ (function (_super) {\n    __extends(StatusApi, _super);\n    function StatusApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     *\n     * @summary Obtain server status\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof StatusApi\n     */\n    StatusApi.prototype.getStatus = function (options) {\n        var _this = this;\n        return exports.StatusApiFp(this.configuration).getStatus(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return StatusApi;\n}(base_1.BaseAPI));\nexports.StatusApi = StatusApi;\n","\"use strict\";\n// tslint:disable\n/**\n * Role Based Access Control\n * The API for Role Based Access Control.\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Some imports not used depending on template conditions\n// @ts-ignore\nvar axios_1 = require(\"axios\");\nexports.BASE_PATH = \"https://raw.githubusercontent.com/api/rbac/v1\".replace(/\\/+$/, \"\");\n/**\n *\n * @export\n */\nexports.COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n/**\n *\n * @export\n * @class BaseAPI\n */\nvar BaseAPI = /** @class */ (function () {\n    function BaseAPI(configuration, basePath, axios) {\n        if (basePath === void 0) { basePath = exports.BASE_PATH; }\n        if (axios === void 0) { axios = axios_1.default; }\n        this.basePath = basePath;\n        this.axios = axios;\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n    return BaseAPI;\n}());\nexports.BaseAPI = BaseAPI;\n;\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nvar RequiredError = /** @class */ (function (_super) {\n    __extends(RequiredError, _super);\n    function RequiredError(field, msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.field = field;\n        _this.name = \"RequiredError\";\n        return _this;\n    }\n    return RequiredError;\n}(Error));\nexports.RequiredError = RequiredError;\n","\"use strict\";\n// tslint:disable\n/**\n * Role Based Access Control\n * The API for Role Based Access Control.\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Configuration = /** @class */ (function () {\n    function Configuration(param) {\n        if (param === void 0) { param = {}; }\n        this.apiKey = param.apiKey;\n        this.username = param.username;\n        this.password = param.password;\n        this.accessToken = param.accessToken;\n        this.basePath = param.basePath;\n        this.baseOptions = param.baseOptions;\n    }\n    return Configuration;\n}());\nexports.Configuration = Configuration;\n","\"use strict\";\n// tslint:disable\n/**\n * Role Based Access Control\n * The API for Role Based Access Control.\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./api\"));\n__export(require(\"./configuration\"));\n"],"names":["extendStatics","__extends","this","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","push","defineProperty","exports","RequestDecisionEnum","RequestStateEnum","RepositionPlacementEnum","ActionOperationEnum","globalImportUrl","axios_1","base_1","ActionApiAxiosParamCreator","configuration","_this","createAction","requestId","action","options","localVarPath","localVarUrlObj","baseOptions","localVarRequestOptions","localVarHeaderParameter","localVarQueryParameter","headersFromBaseOptions","needsSerialization","_a","RequiredError","replace","encodeURIComponent","String","parse","method","query","search","headers","data","JSON","stringify","undefined","url","format","listActionsByRequest","showAction","id","ActionApiFp","localVarAxiosArgs","axios","basePath","default","BASE_PATH","axiosRequestArgs","request","ActionApiFactory","ActionApi","_super","BaseAPI","DefaultApiAxiosParamCreator","getDocumentation","DefaultApiFp","DefaultApiFactory","DefaultApi","GraphqlApiAxiosParamCreator","postGraphql","graphqlIn","GraphqlApiFp","GraphqlApiFactory","GraphqlApi","RequestApiAxiosParamCreator","createRequest","requestIn","listRequests","xRhPersona","limit","offset","filter","sortBy","listRequestsByRequest","showRequest","showRequestContent","RequestApiFp","RequestApiFactory","RequestApi","TemplateApiAxiosParamCreator","listTemplates","showTemplate","TemplateApiFp","TemplateApiFactory","TemplateApi","WorkflowApiAxiosParamCreator","addWorkflowToTemplate","templateId","workflow","destroyWorkflow","linkWorkflow","resourceObject","listWorkflows","appName","objectId","objectType","listWorkflowsByTemplate","reposition","showWorkflow","unlinkWorkflow","updateWorkflow","WorkflowApiFp","WorkflowApiFactory","WorkflowApi","COLLECTION_FORMATS","csv","ssv","tsv","pipes","field","msg","name","Error","Configuration","param","apiKey","username","password","accessToken","__export","m","UnsharePolicyPermissionsEnum","SharePolicyPermissionsEnum","ShareInfoPermissionsEnum","ProgressMessageLevelEnum","OrderProcessAssociationsToRemoveAssociationsToRemoveEnum","OrderItemStateEnum","OrderStateEnum","ApprovalRequestStateEnum","postGraphQL","graphQLRequest","IconApiAxiosParamCreator","createIcon","content","portfolioId","portfolioItemId","localVarFormParams","FormData","append","destroyIcon","IconApiFp","IconApiFactory","IconApi","OrderApiAxiosParamCreator","addToOrder","orderId","orderItem","cancelOrder","createOrder","destroyOrder","listOrderItemsFromOrder","listOrderProgressMessages","listOrders","restoreOrder","restoreKey","showOrder","showOrderItemFromOrder","submitOrder","OrderApiFp","OrderApiFactory","OrderApi","OrderItemApiAxiosParamCreator","destroyOrderItem","listApprovalRequests","orderItemId","listOrderItemProgressMessages","listOrderItems","restoreOrderItem","showOrderItem","OrderItemApiFp","OrderItemApiFactory","OrderItemApi","OrderProcessApiAxiosParamCreator","addOrderProcessAfterItem","orderProcessPortfolioItemId","addOrderProcessBeforeItem","addOrderProcessReturnItem","createOrderProcess","orderProcess","destroyOrderProcess","linkTagToOrderProcess","listOrderProcesses","removeOrderProcessAssociation","orderProcessAssociationsToRemove","showOrderProcess","unlinkTagFromOrderProcess","updateOrderProcess","OrderProcessApiFp","OrderProcessApiFactory","OrderProcessApi","PortfolioApiAxiosParamCreator","addPortfolioTag","tag","createPortfolio","portfolio","destroyPortfolio","fetchPortfolioItemsWithPortfolio","listPortfolioTags","listPortfolios","postCopyPortfolio","removePortfolioTags","shareInfo","sharePortfolio","sharePolicy","showPortfolio","showPortfolioIcon","cacheId","unDeletePortfolio","unsharePortfolio","unsharePolicy","updatePortfolio","PortfolioApiFp","PortfolioApiFactory","PortfolioApi","PortfolioItemApiAxiosParamCreator","addPortfolioItemTag","createPortfolioItem","destroyPortfolioItem","getPortfolioItemNextName","destinationPortfolioId","listPortfolioItemTags","listPortfolioItems","listProviderControlParameters","listServicePlans","postCopyPortfolioItem","copyPortfolioItem","removePortfolioItemTags","showPortfolioItem","showDiscarded","showPortfolioItemIcon","unDeletePortfolioItem","updatePortfolioItem","portfolioItem","PortfolioItemApiFp","PortfolioItemApiFactory","PortfolioItemApi","ServicePlansApiAxiosParamCreator","createServicePlan","importServicePlan","patchServicePlanModified","patchModifiedServicePlan","resetServicePlanModified","showServicePlan","showServicePlanBase","showServicePlanModified","ServicePlansApiFp","ServicePlansApiFactory","ServicePlansApi","SettingsApiAxiosParamCreator","createSetting","setting","destroySetting","listSettings","showSetting","updateSetting","SettingsApiFp","SettingsApiFactory","SettingsApi","TagsApiAxiosParamCreator","listTags","TagsApiFp","TagsApiFactory","TagsApi","TenantApiAxiosParamCreator","listTenants","showTenant","tenantId","tenantSeed","TenantApiFp","TenantApiFactory","TenantApi","Notification","_Component","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_isNativeReflectConstruct","Super","NewTarget","props","onDismiss","autoDismiss","dismissTimeout","setTimeout","handleDismiss","dismissDelay","clearTimeout","bind","setDismissTimeout","key","clearDismissTimeout","_this$props","description","dismissable","title","sentryId","rest","Alert","className","actionClose","AlertActionCloseButton","variant","onClick","onMouseEnter","onMouseLeave","TextContent","Text","component","Component","propTypes","isRequired","defaultProps","NotificationPagination","_ref","page","onSetPage","onClearAll","count","Card","CardBody","Level","LevelItem","Button","Pagination","itemCount","perPageOptions","titles","items","perPage","Function","Portal","_len","args","_key","concat","_event","setState","state","notifications","removeNotification","rootId","slicedNotifications","slice","isArray","createPortal","map","document","getElementById","connect","initialProps","dispatch","clearNotifications","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","_objectSpread","target","source","forEach","getOwnPropertyDescriptors","defineProperties","prepareErrorMessage","payload","errorTitleKey","errorDescriptionKey","titleKey","find","descriptionKey","shouldDispatchDefaultError","isRejected","hasCustomNotification","noErrorOverride","dispatchDefaultFailure","defaultOptions","pendingSuffix","fulfilledSuffix","rejectedSuffix","useStatusText","middlewareOptions","matchPending","type","match","RegExp","matchFulfilled","matchRejected","defaultNotificationOptions","_ref2","meta","pending","noError","namespaceKey","errorNamespaceKey","item","notificationsPrefix","ADD_NOTIFICATION","REMOVE_NOTIFICATION","CLEAR_NOTIFICATIONS","addNotification","notification","index","Date","getTime","Math","random","toString","findIndex","_ref3","defaultState","applyReducerHash","reducerHash","initialState","ReducerRegistry","initState","middlewares","composeEnhancersDefault","compose","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","reducers","newReducers","replaceReducer","combineReducers","entries","reducer","includes","reduce","acc","val","hour","minute","day","month","year","formatTime","number","unit","relativeTimeTable","rightBound","Infinity","date","round","second","_exact","toUTCString","split","trim","dateStringByType","exact","onlyDate","relative","now","invalid","DateFormat","_ref$type","extraTitle","_ref$tooltipProps","tooltipProps","dateObj","dateType","element","Tooltip","addTooltip","dateByType","EmptyTable","centered","children","emptyTableClasses","DownloadButton","isOpen","tooltipText","extraItems","onSelect","isDisabled","conditionallyTooltip","Dropdown","isPlain","toggle","DropdownToggle","toggleIndicator","onToggle","ouiaId","size","dropdownItems","DropdownItem","event","overflowActionsMapper","actionPropsGenerator","Actions","_this2","actions","overflowActions","_onSelect","dropdownProps","kebabToggleProps","exportConfig","_actions","firstAction","restActions","Fragment","ToolbarItem","toggleOpen","KebabToggle","DropdownSeparator","actionsType","BulkSelect","hasError","ouiaStateId","console","error","_this$state","checked","toggleProps","ouiaSafe","ouiaFinalId","splitButtonItems","DropdownToggleCheckbox","onChange","isChecked","oneItem","Checkbox","stateValue","onSubmit","icon","Icon","changeCallback","onChangeValue","TextInput","_inputValue","onKeyDown","placeholder","CheckboxFilter","isExpanded","selected","from","Set","selection","newSelection","calculateSelected","prevSelected","Select","selections","placeholderText","_onClick","SelectOption","Radio","selectedValue","checkedValue","_onChange","_value","_PropTypes$shape4","groupType","checkbox","radio","button","plain","Group","filterBy","groupKey","input","groupValue","groupLabel","groupId","group","onFilter","err","test","itemProps","tagName","preventDefault","stopPropagation","tagValue","itemKey","propSelected","activeGroup","isSelected","setNewSelection","currentSelection","values","currentItem","stateSelected","selectedGroupValues","itemValue","_selected$groupValue$","_selected$groupValue$2","_selected$groupValue$5","_selected$groupValue$6","_selected$groupValue$3","_selected$groupValue$4","_selected$groupValue$7","_selected$groupValue$8","_ref4","prevFilterBy","_this3","_this$props2","groups","isFilterable","onShowMore","showMoreTitle","showMoreOptions","filterItems","showMore","onClear","clearSelection","customFilter","isGrouped","_ref5","groupSelectable","filteredItems","mapItems","onGroupSelect","isGroupChecked","SelectGroup","hidden","itemsProps","conditionalFilterType","typeMapper","text","custom","ConditionalFilter","_props","_e","useMobileLayout","ToolbarToggleGroup","breakpoint","toggleIcon","Wrapper","getWrapper","prevProps","hideLabel","currentValue","activeItem","onChangeCallback","ActiveComponent","capitalize","string","toUpperCase","substring","ToolbarGroup","filterValues","desktop","Split","SplitItem","dropdownToggle","isHovered","isFilled","TextInputProps","FilterChips","filters","onDelete","deleteTitle","showDeleteButton","onDeleteGroup","category","groupedFilters","ChipGroup","categoryName","isClosable","_item","chips","chip","Chip","Badge","isRead","plainFilters","SortBy","direction","onSortChange","SortByDirection","flipDirection","PrimaryToolbar","toggleIsExpanded","bulkSelect","filterConfig","dedicatedAction","actionsConfig","sortByConfig","pagination","activeFiltersConfig","expandAll","Toolbar","ToolbarContent","isAllExpanded","ToolbarExpandIconWrapper","isCompact","Section","sectionClasses","TableToolbar","isFooter","results","_ref$ouiaSafe","tableToolbarClasses","ouiaComponentType","generateCount","ResourceDefinitionFilterOperationEnum","AccessApiAxiosParamCreator","getPrincipalAccess","application","AccessApiFp","AccessApiFactory","AccessApi","GroupApiAxiosParamCreator","addPrincipalToGroup","uuid","groupPrincipalIn","addRoleToGroup","groupRoleIn","createGroup","deleteGroup","deletePrincipalFromGroup","usernames","deleteRoleFromGroup","roles","getGroup","getPrincipalsFromGroup","principalUsername","orderBy","listGroups","nameMatch","scope","roleNames","roleDiscriminator","join","listRolesForGroup","exclude","roleName","roleDisplayName","roleDescription","updateGroup","GroupApiFp","GroupApiFactory","GroupApi","PermissionApiAxiosParamCreator","listPermissionOptions","resourceType","listPermissions","permission","excludeGlobals","PermissionApiFp","PermissionApiFactory","PermissionApi","PolicyApiAxiosParamCreator","createPolicies","policyIn","deletePolicy","getPolicy","listPolicies","groupName","groupUuid","updatePolicy","PolicyApiFp","PolicyApiFactory","PolicyApi","PrincipalApiAxiosParamCreator","listPrincipals","matchCriteria","sortOrder","email","status","adminOnly","PrincipalApiFp","PrincipalApiFactory","PrincipalApi","RoleApiAxiosParamCreator","createRoles","roleIn","deleteRole","getRole","getRoleAccess","listRoles","displayName","addFields","patchRole","rolePatch","updateRole","roleWithAccess","RoleApiFp","RoleApiFactory","RoleApi","StatusApiAxiosParamCreator","getStatus","StatusApiFp","StatusApiFactory","StatusApi"],"sourceRoot":""}