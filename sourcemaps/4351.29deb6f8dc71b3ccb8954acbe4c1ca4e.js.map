{"version":3,"file":"js/4351.4bda62d407cec7a9827b.js","mappings":"uJAuBA,QAd6D,SAAC,G,IAC5DA,EAAW,cACXC,EAAS,YACTC,EAAE,KACE,OACJ,kBAAC,EAAAC,SAAQ,CACPC,QAAS,SAACC,GAAU,OAAAA,EAAMC,mBAC1BL,UAAWA,EACXM,SAAUP,EAAW,aACV,gBACXE,GAAIA,M,+TCsCR,QArCmF,SAAC,GAClF,IAAAM,EAAI,OACJC,EAAW,cACXC,EAAQ,WACRC,EAAY,eACZC,EAAc,iBACdC,EAAa,gBACVC,E,yUAAK,GAP0E,mFAQ9E,OACJ,kBAAC,IAAc,KACb,kBAAC,EAAAC,YAAW,KACV,kBAAC,IAAe,CACdL,SAAUA,EACVC,aAAcA,EACdC,eAAgBA,GAEhB,kBAAC,EAAAI,KAAI,CAACC,UAAW,EAAAC,aAAA,GAAiBC,MAAOX,GACvC,kBAAC,IAAqB,KAAEA,KAG3BC,GAAe,kBAAC,EAAAO,KAAI,CAACC,UAAW,EAAAC,aAAA,OAAqBT,GACrDI,GACC,kBAAC,EAAAO,SAAQ,KACP,kBAAC,EAAAJ,KAAI,CAACK,UAAU,YAAYJ,UAAU,SAAO,aAG7C,kBAAC,EAAAD,KAAI,KAAEH,KAIb,kBAAC,KAAW,GACVS,UAAW,CAACR,EAAMS,YAAc,cAAgB,qBAC5CT","sources":["webpack:///./src/presentational-components/shared/card-checkbox.tsx","webpack:///./src/presentational-components/shared/service-offering-body.tsx"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Checkbox } from '@patternfly/react-core';\n\nexport interface CardCheckboxProps {\n  handleCheck: (value: any) => void;\n  isChecked?: boolean;\n  id: string;\n}\nconst CardCheckbox: React.ComponentType<CardCheckboxProps> = ({\n  handleCheck,\n  isChecked,\n  id\n}) => (\n  <Checkbox\n    onClick={(event) => event.stopPropagation()}\n    isChecked={isChecked}\n    onChange={handleCheck}\n    aria-label=\"card checkbox\"\n    id={id}\n  />\n);\n\nexport default CardCheckbox;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment } from 'react';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ItemDetails from './card-common';\nimport ConditionalLink from './conditional-link';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { StyledCardBody } from '../styled-components/card';\nimport { StringObject } from '../../types/common-types';\n\nexport interface ServiceOfferingCardBodyProps {\n  name?: string;\n  display_name?: string;\n  distributor?: string;\n  pathname?: string;\n  searchParams?: StringObject;\n  preserveSearch?: boolean;\n  description?: string;\n  long_description?: string;\n  portfolioName?: string;\n}\nconst ServiceOfferingCardBody: React.ComponentType<ServiceOfferingCardBodyProps> = ({\n  name,\n  distributor,\n  pathname,\n  searchParams,\n  preserveSearch,\n  portfolioName,\n  ...props\n}) => (\n  <StyledCardBody>\n    <TextContent>\n      <ConditionalLink\n        pathname={pathname}\n        searchParams={searchParams}\n        preserveSearch={preserveSearch}\n      >\n        <Text component={TextVariants.h3} title={name}>\n          <EllipsisTextContainer>{name}</EllipsisTextContainer>\n        </Text>\n      </ConditionalLink>\n      {distributor && <Text component={TextVariants.small}>{distributor}</Text>}\n      {portfolioName && (\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component=\"small\">\n            Portfolio\n          </Text>\n          <Text>{portfolioName}</Text>\n        </Fragment>\n      )}\n    </TextContent>\n    <ItemDetails\n      toDisplay={[props.description ? 'description' : 'long_description']}\n      {...props}\n    />\n  </StyledCardBody>\n);\n\nexport default ServiceOfferingCardBody;\n"],"names":["handleCheck","isChecked","id","Checkbox","onClick","event","stopPropagation","onChange","name","distributor","pathname","searchParams","preserveSearch","portfolioName","props","TextContent","Text","component","TextVariants","title","Fragment","className","toDisplay","description"],"sourceRoot":""}