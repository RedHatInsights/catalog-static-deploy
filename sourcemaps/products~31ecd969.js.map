{"version":3,"sources":["webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/messages/platforms.messages.ts","webpack:///./src/presentational-components/shared/card-checkbox.js","webpack:///./src/presentational-components/shared/service-offering-body.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/wrench-icon.js","webpack:///./src/smart-components/portfolio/portfolio-item.js","webpack:///./src/toolbar/schemas/products-toolbar.schema.js","webpack:///./src/messages/products.messages.ts","webpack:///./src/smart-components/products/products.js"],"names":["AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","options","getNewPage","request","debouncePromise","direction","propTypes","PropTypes","shape","isRequired","func","any","string","bool","defaultProps","BottomPaginationContainer","children","oneOfType","node","arrayOf","platformsMessages","workflowColumn","id","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","configureSourceTitle","connectSource","contactAdmin","title","noPlatforms","offeringTitle","offeringParameters","CardCheckbox","handleCheck","isChecked","onClick","event","stopPropagation","onChange","aria-label","ServiceOfferingCardBody","name","distributor","display_name","pathname","searchParams","preserveSearch","portfolioName","component","TextVariants","h3","small","toDisplay","description","long_description","exports","__esModule","WrenchIconConfig","height","width","svgPath","yOffset","xOffset","transform","WrenchIcon","createIcon","StyledLevel","styled","Level","PortfolioItem","isDisabled","removeInProgress","isSelected","src","CATALOG_API_BASE","sourceId","service_offering_source_ref","isSelectable","onSelect","platformId","orderUrl","portfolio_id","metadata","user_capabilities","destroy","createPortfolioToolbarSchema","fetchProducts","isLoading","filterProps","searchValue","onFilterChange","placeholder","fields","toolbarComponentTypes","TOP_TOOLBAR","key","TOP_TOOLBAR_TITLE","noData","LEVEL","TOOLBAR","groupName","FILTER_TOOLBAR_ITEM","isClearable","LEVEL_ITEM","addSource","configureSource","debouncedFilter","asyncFormValidator","value","dispatch","filteringCallback","fetchPortfolioItems","defaultSettings","then","initialState","filterValue","isOpen","isFetching","isFiltering","productsState","state","action","type","payload","Products","formatMessage","useFormatMessage","viewState","useInitialUriHash","release","useContext","AppContext","useReducer","products","filter","stateDispatch","is_org_admin","UserContext","userIdentity","identity","user","useDispatch","useSelector","portfolioReducer","portfolioItems","data","useEffect","Promise","all","fetchPlatforms","scrollToTop","insights","chrome","appNavClick","secondaryNav","handleFilterItems","galleryItems","map","item","PORTFOLIO_ITEM_ROUTE","portfolio","source","emptyStateProps","PrimaryAction","href","Button","variant","productsMessages","filteringMessages","clearFilters","noProducts","noResults","renderDescription","TextContent","Text","p","noResultsDescription","a","chunks","document","baseURI","Icon","SearchIcon","schema","createProductsToolbarSchema","filterByProduct","items","renderEmptyState","dropDirection","_e"],"mappings":"2LAQMA,EAAkB,SAAC,GAOnB,QANJC,KAAQC,EAMJ,EANIA,MAAOC,EAMX,EANWA,MAAOC,EAMlB,EANkBA,OACtBC,EAKI,EALJA,SACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,UACGC,EACC,gEAqBJ,OACE,yBAAKF,UAAWA,GACd,kBAAC,aAAD,KACEG,QAASR,GAAS,GAClBS,UAAWR,GAAS,EACpBS,gBAzBwB,SAACC,EAAQX,GAAT,OAC5BI,EAAWD,EAAU,CACnBD,SACAF,WAuBEY,KAAMC,YAAeb,EAAOE,GAC5BY,UArBgB,SAACH,EAAQI,EAAQC,GACrC,IAAMC,EAAU,CACdf,OAAQgB,YAAWH,EAAQf,GAC3BA,SAGImB,EAAU,kBAAMf,EAAWD,EAAUc,IAC3C,OAAID,EACKI,YAAgBD,EAAS,IAAzBC,GAGFD,KAWHE,UAAU,OACVf,UAAWA,GACPC,MAMZT,EAAgBwB,UAAY,CAC1BvB,KAAMwB,IAAUC,MAAM,CACpBvB,MAAOsB,IAAUR,OACjBf,MAAOuB,IAAUR,OAAOU,WACxBvB,OAAQqB,IAAUR,OAAOU,aAE3BrB,WAAYmB,IAAUG,KAAKD,WAC3BtB,SAAUoB,IAAUI,IACpBtB,UAAWkB,IAAUK,OACrBtB,UAAWiB,IAAUM,MAGvB/B,EAAgBgC,aAAe,CAC7B/B,KAAM,CACJE,MAAO,EACPD,MAAO,GACPE,OAAQ,GAEVG,UAAW,GACXC,WAAW,GAGER,O,iCC1Ef,oCAGMiC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChC,yBAAK3B,UAAU,0EACZ2B,IAILD,EAA0BT,UAAY,CACpCU,SAAUT,IAAUU,UAAU,CAC5BV,IAAUW,KACVX,IAAUY,QAAQZ,IAAUW,SAIjBH,O,iCChBf,YAEMK,EAAoB,YAAe,CACvCC,eAAgB,CACdC,GAAI,wCACJC,eAAgB,YAElBC,yBAA0B,CACxBF,GAAI,4CACJC,eAAgB,yBAElBE,+BAAgC,CAC9BH,GAAI,wCACJC,eAAgB,8CAElBG,kBAAmB,CACjBJ,GAAI,0CACJC,eAAgB,uBAElBI,gBAAiB,CACfL,GAAI,wCACJC,eAAgB,sBAElBK,iBAAkB,CAChBN,GAAI,kCACJC,eAAgB,gBAElBM,uBAAwB,CACtBP,GAAI,wCACJC,eAAgB,mCAElBO,qBAAsB,CACpBR,GAAI,kCACJC,eAAgB,8DAElBQ,cAAe,CACbT,GAAI,gCACJC,eACE,gEAEJS,aAAc,CACZV,GAAI,+BACJC,eACE,yEAEJU,MAAO,CACLX,GAAI,kBACJC,eAAgB,aAElBW,YAAa,CACXZ,GAAI,6BACJC,eAAgB,oBAElBY,cAAe,CACbb,GAAI,mCACJC,eAAgB,oBAElBa,mBAAoB,CAClBd,GAAI,0CACJC,eAAgB,sBAIL,O,iCC/Df,6CAIMc,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,UAAWjB,EAA3B,EAA2BA,GAA3B,OACnB,kBAAC,WAAD,CACEkB,QAAS,SAACC,GAAD,OAAWA,EAAMC,mBAC1BH,UAAWA,EACXI,SAAUL,EACVM,aAAW,gBACXtB,GAAIA,KAIRe,EAAa/B,UAAY,CACvBgC,YAAahC,IAAUI,KACvB6B,UAAWjC,IAAUO,KACrBS,GAAIhB,IAAUM,QAGDyB,O,4KCZTQ,EAA0B,SAAC,GAAD,IAC9BC,EAD8B,EAC9BA,KAEAC,GAH8B,EAE9BC,aAF8B,EAG9BD,aACAE,EAJ8B,EAI9BA,SACAC,EAL8B,EAK9BA,aACAC,EAN8B,EAM9BA,eACAC,EAP8B,EAO9BA,cACG7D,EAR2B,+GAU9B,kBAAC,IAAD,KACE,kBAAC,cAAD,KACE,kBAAC,IAAD,CACE0D,SAAUA,EACVC,aAAcA,EACdC,eAAgBA,GAEhB,kBAAC,OAAD,CAAME,UAAWC,eAAaC,GAAItB,MAAOa,GACvC,kBAAC,IAAD,KAAwBA,KAG3BC,GAAe,kBAAC,OAAD,CAAMM,UAAWC,eAAaE,OAAQT,GACrDK,GACC,kBAAC,WAAD,KACE,kBAAC,OAAD,CAAM/D,UAAU,YAAYgE,UAAU,SAAtC,aAGA,kBAAC,OAAD,KAAOD,KAIb,kBAAC,IAAD,KACEK,UAAW,CAAClE,EAAMmE,YAAc,cAAgB,qBAC5CnE,MAKVsD,EAAwBvC,UAAY,CAClCwC,KAAMvC,IAAUK,OAChBoC,aAAczC,IAAUK,OACxBmC,YAAaxC,IAAUK,OACvB+C,iBAAkBpD,IAAUK,OAC5B8C,YAAanD,IAAUK,OACvBqC,SAAU1C,IAAUK,OACpBuC,eAAgB5C,IAAUM,KAC1BqC,aAAc3C,IAAUC,MAAV,OAAmBD,IAAUK,OAASL,IAAUK,SAC9DwC,cAAe7C,IAAUK,QAGZiC,O,iCCzDfe,EAAQC,YAAa,EACrBD,EAAQE,iBAAmB,CACzBhB,KAAM,aACNiB,OAAQ,IACRC,MAAO,IACPC,QAAS,wcACTC,QAAS,EACTC,QAAS,EACTC,UAAW,IAEbR,EAAQS,WAAa,EAAQ,IAAiBC,WAAWV,EAAQE,kBACjEF,EAAiB,QAAIA,EAAQS,Y,+OCE7B,IAAME,EAAcC,YAAOC,QAAPD,CAAH,KAIXE,EAAgB,SAACnF,GAAD,OACpB,kBAAC,IAAD,CAAmBoF,WAAYpF,EAAMqF,kBAAoBrF,EAAMsF,YAC7D,kBAAC,IAAD,KACE,kBAAC,aAAD,KACE,kBAACN,EAAD,KACE,kBAAC,IAAD,CACEO,IAAG,UAAKC,IAAL,4BAAyCxF,EAAM+B,GAA/C,SACH0D,SAAUzF,EAAM0F,8BAEjB1F,EAAM2F,cACL,kBAAC,IAAD,CACE5C,YAAa,kBAAM/C,EAAM4F,SAAS5F,EAAM+B,KACxCiB,UAAWhD,EAAMsF,WACjBvD,GAAI/B,EAAM+B,OAKlB,kBAAC,IAA4B/B,GAC7B,kBAAC,aAAD,SAKNmF,EAAcpE,UAAY,CACxBgB,GAAIf,IAAUK,OACdwE,WAAY7E,IAAUK,OACtBqE,4BAA6B1E,IAAUK,OACvCsE,aAAc3E,IAAUM,KACxBgE,WAAYtE,IAAUM,KACtBsE,SAAU5E,IAAUG,KACpB2E,SAAU9E,IAAUK,OACpBgE,iBAAkBrE,IAAUM,KAC5ByE,aAAc/E,IAAUK,OACxB2E,SAAUhF,IAAUC,MAAM,CACxBgF,kBAAmBjF,IAAUC,MAAM,CAAEiF,QAASlF,IAAUM,OAAQJ,aAC/DA,YAGUiE,O,uMCWAgB,EAhEsB,SAAC,GAAD,IACnC3G,EADmC,EACnCA,KACA4G,EAFmC,EAEnCA,cACAC,EAHmC,EAGnCA,UAHmC,IAInCC,YAAeC,EAJoB,EAIpBA,YAAaC,EAJO,EAIPA,eAAgBC,EAJT,EAISA,YAJT,MAK9B,CACLC,OAAQ,CACN,CACE5C,UAAW6C,IAAsBC,YACjCC,IAAK,uBACLH,OAAQ,CACN,CACE5C,UAAW6C,IAAsBG,kBACjCD,IAAK,yBACLnE,MAAO,WACPyB,YAAa,8CACb4C,OAAQvH,EAAKuH,QAEf,CACEjD,UAAW6C,IAAsBK,MACjCH,IAAK,mBACLH,OAAQlH,EAAKuH,OACT,GACA,CACE,CACEjD,UAAW6C,IAAsBM,QACjCJ,IAAK,yBACLH,OAAQ,CACN,CACEQ,UAAW,eACXpD,UAAW6C,IAAsBQ,oBACjCN,IAAK,eACLN,cACAC,iBACAC,cACAW,aAAa,KAInB,CACEtD,UAAW6C,IAAsBU,WACjCR,IAAK,kBACLH,OACElH,EAAKE,MAAQ,EACT,CACE,CACEoE,UAAWvE,IACXsH,IAAK,sBACLrH,OACAI,SAAU2G,EACV1G,WAAYuG,EACZhB,WAAYiB,EACZtG,WAAW,IAGf,W,yIC1CT,EAfU,YAAe,CACtCuH,UAAW,CACTvF,GAAI,4BACJC,eAAgB,cAElBuF,gBAAiB,CACfxF,GAAI,kCACJC,eAAgB,wDAElBU,MAAO,CACLX,GAAI,yBACJC,eAAgB,c,klBCkBpB,IAAMwF,EAAkBC,aACtB,SAACC,EAAOC,EAAUC,GAChBA,GAAkB,GAClBD,EAASE,YAAoBH,EAAOI,MAAkBC,MAAK,kBACzDH,GAAkB,QAGtB,KAmBII,EAAe,CACnBC,YAAa,GACbC,QAAQ,EACRC,YAAY,EACZC,aAAa,GAGTC,EAAgB,SAACC,EAAOC,GAC5B,OAAQA,EAAOC,MACb,IAAK,cACH,cAAYF,GAAZ,IAAmBH,WAAYI,EAAOE,UACxC,IAAK,iBACH,cAAYH,GAAZ,IAAmBL,YAAaM,EAAOE,UACzC,IAAK,mBACH,cAAYH,GAAZ,IAAmBF,YAAaG,EAAOE,UAG3C,OAAOH,GA+IMI,UA5IE,WAAM,MACfC,EAAgBC,cAChBC,EAAYC,cACVC,EAAYC,qBAAWC,KAAvBF,QAHa,EAI6CG,qBAChEb,EAD0E,OAGrEL,GAHqE,IAIxEC,aAAaY,SAAA,UAAAA,EAAWM,gBAAX,eAAqBC,SAAU,MAR3B,kBAIZjB,EAJY,EAIZA,WAAYF,EAJA,EAIAA,YAAaG,EAJb,EAIaA,YAAeiB,EAJ5B,KAcPC,EAGVN,qBAAWO,KALbC,aACEC,SACEC,KAAQJ,aAIR3B,EAAWgC,wBAlBI,EAmBEC,uBACrB,qBAAGC,iBAAoBC,kBADjBC,EAnBa,EAmBbA,KAAMvK,EAnBO,EAmBPA,KAIdwK,qBAAU,WAAM,MACdC,QAAQC,IAAI,CACVvC,EACEE,YAAoBgB,SAAD,UAACA,EAAWM,gBAAZ,aAAC,EAAqBC,OAAQP,aAA9B,EAA8BA,EAAWM,WAE9DxB,EAASwC,iBACRpC,MAAK,kBAAMsB,EAAc,CAAEb,KAAM,cAAeC,SAAS,OAC5D2B,cACAC,SAASC,OAAOC,YAAY,CAAExI,GAAI,WAAYyI,cAAc,MAC3D,IAEH,IAAMC,EAAoB,SAAC/C,GACzB2B,EAAc,CAAEb,KAAM,iBAAkBC,QAASf,IACjDF,EAAgBE,EAAOC,GAAU,SAACS,GAAD,OAC/BiB,EAAc,CAAEb,KAAM,mBAAoBC,QAASL,QAIjDsC,EAAeX,EAAKY,KAAI,SAACC,GAAD,OAC5B,kBAAC,IAAD,KACE/D,IAAK+D,EAAK7I,GACV2B,SAAUkH,EAAK7E,cAAgB8E,MAhFZ9E,GAAF,EAiFC6E,GAjFC7E,aAAchE,EAAsC,EAAtCA,GAAI2D,EAAkC,EAAlCA,4BACrCK,GAAgBhE,GAAM2D,EACjB,CACLhC,SAAUqC,GAAgB8E,IAC1BlH,aAAc,CACZmH,UAAW/E,EACX,iBAAkBhE,EAClBgJ,OAAQrF,EACR,gBAAiB,SAKhB,IAqECkF,EAJN,CAKE1G,UAAW,MAnFK,IAAC,EAAE6B,EAAchE,EAAI2D,KAgInCsF,EAAkB,CACtBC,cAAezL,EAAKuH,OA1CA,kBACpBuC,GACE,uBAAG4B,KAAI,UAAKnC,EAAL,yBACL,kBAACoC,EAAA,OAAD,CAAQC,QAAQ,WACbzC,EAAc0C,EAAiB/D,cAKnB,kBACnB,kBAAC6D,EAAA,OAAD,CAAQC,QAAQ,OAAOnI,QAAS,kBAAMwH,EAAkB,MACrD9B,EAAc2C,IAAkBC,gBAgCnC7I,MAAOlD,EAAKuH,OACR4B,EAAc2C,IAAkBE,YAChC7C,EAAc2C,IAAkBG,WACpCC,kBA/BkC,kBAClC,kBAAC,WAAD,KACE,kBAACC,EAAA,YAAD,KACE,kBAACC,EAAA,KAAD,CAAM9H,UAAWC,eAAa8H,GAC3BrM,EAAKuH,OACF4B,EAAc0C,EAAiB9D,iBAC/BoB,EAAc2C,IAAkBQ,uBAErCxC,EACC,kBAACsC,EAAA,KAAD,CAAM9H,UAAWC,eAAa8H,GAC3BlD,EAAc9G,IAAkBW,cAAe,CAE9CuJ,EAAG,SAACC,GAAD,OACD,kBAAC,WAAD,KACE,uBAAGd,KAAI,UAAKe,SAASC,QAAd,qBAA0CF,QAMzD,kBAACJ,EAAA,KAAD,KAAOjD,EAAc9G,IAAkBY,kBAY7C0J,KAAM3M,EAAKuH,OAASjC,IAAasH,KAGnC,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CACEC,OAAQC,EAA4B,CAClChG,YAAa,CACXC,YAAa0B,EACbzB,eAAgBiE,EAChBhE,YAAakC,EAAc2C,IAAkBiB,kBAE/C7J,MAAOiG,EAAc0C,EAAiB3I,OACtC2D,UAAW+B,GAAeD,EAC1B3I,OACA4G,cAAe,kBAAauB,EAASE,IAAmB,WAAnB,mBAGzC,kBAAC,IAAD,CACExB,UAAW+B,GAAeD,EAC1BqE,MAAO9B,EACP+B,iBAAkB,kBAChB,kBAAC,IAA6BzB,MAGjCxL,EAAKE,MAAQ,GACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEgN,cAAc,KACdlN,KAAMA,EACNK,WAAY,SAAC8M,EAAIjM,GAAL,aACViH,EACEE,YAAoBgB,SAAD,UAACA,EAAWM,gBAAZ,aAAC,EAAqBC,OAAQ1I","file":"js/products~31ecd969.90229c5501502ae6843e.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    {children}\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","import { defineMessages } from 'react-intl';\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  configureSourceTitle: {\n    id: 'platforms.list.configure-source',\n    defaultMessage: 'Configure a source in order to add products to portfolios.'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage:\n      'To connect to a source, go to <a>Sources</a> under Settings.'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  }\n});\n\nexport default platformsMessages;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CardCheckbox = ({ handleCheck, isChecked, id }) => (\n  <Checkbox\n    onClick={(event) => event.stopPropagation()}\n    isChecked={isChecked}\n    onChange={handleCheck}\n    aria-label=\"card checkbox\"\n    id={id}\n  />\n);\n\nCardCheckbox.propTypes = {\n  handleCheck: propTypes.func,\n  isChecked: propTypes.bool,\n  id: propTypes.string\n};\n\nexport default CardCheckbox;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ItemDetails from './card-common';\nimport ConditionalLink from './conditional-link';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { StyledCardBody } from '../styled-components/card';\n\nconst ServiceOfferingCardBody = ({\n  name,\n  display_name,\n  distributor,\n  pathname,\n  searchParams,\n  preserveSearch,\n  portfolioName,\n  ...props\n}) => (\n  <StyledCardBody>\n    <TextContent>\n      <ConditionalLink\n        pathname={pathname}\n        searchParams={searchParams}\n        preserveSearch={preserveSearch}\n      >\n        <Text component={TextVariants.h3} title={name}>\n          <EllipsisTextContainer>{name}</EllipsisTextContainer>\n        </Text>\n      </ConditionalLink>\n      {distributor && <Text component={TextVariants.small}>{distributor}</Text>}\n      {portfolioName && (\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component=\"small\">\n            Portfolio\n          </Text>\n          <Text>{portfolioName}</Text>\n        </Fragment>\n      )}\n    </TextContent>\n    <ItemDetails\n      toDisplay={[props.description ? 'description' : 'long_description']}\n      {...props}\n    />\n  </StyledCardBody>\n);\n\nServiceOfferingCardBody.propTypes = {\n  name: PropTypes.string,\n  display_name: PropTypes.string,\n  distributor: PropTypes.string,\n  long_description: PropTypes.string,\n  description: PropTypes.string,\n  pathname: PropTypes.string,\n  preserveSearch: PropTypes.bool,\n  searchParams: PropTypes.shape({ [PropTypes.string]: PropTypes.string }),\n  portfolioName: PropTypes.string\n};\n\nexport default ServiceOfferingCardBody;\n","\"use strict\"\nexports.__esModule = true;\nexports.WrenchIconConfig = {\n  name: 'WrenchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.WrenchIcon = require('../createIcon').createIcon(exports.WrenchIconConfig);\nexports[\"default\"] = exports.WrenchIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level } from '@patternfly/react-core';\n\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport CardCheckbox from '../../presentational-components/shared/card-checkbox';\nimport ServiceOfferingCardBody from '../../presentational-components/shared/service-offering-body';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../../presentational-components/styled-components/styled-gallery';\nimport styled from 'styled-components';\n\nconst StyledLevel = styled(Level)`\n  flex: 1;\n`;\n\nconst PortfolioItem = (props) => (\n  <StyledGalleryItem isDisabled={props.removeInProgress && props.isSelected}>\n    <StyledCard>\n      <CardHeader>\n        <StyledLevel>\n          <CardIcon\n            src={`${CATALOG_API_BASE}/portfolio_items/${props.id}/icon`}\n            sourceId={props.service_offering_source_ref}\n          />\n          {props.isSelectable && (\n            <CardCheckbox\n              handleCheck={() => props.onSelect(props.id)}\n              isChecked={props.isSelected}\n              id={props.id}\n            />\n          )}\n        </StyledLevel>\n      </CardHeader>\n      <ServiceOfferingCardBody {...props} />\n      <CardFooter></CardFooter>\n    </StyledCard>\n  </StyledGalleryItem>\n);\n\nPortfolioItem.propTypes = {\n  id: PropTypes.string,\n  platformId: PropTypes.string,\n  service_offering_source_ref: PropTypes.string,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  orderUrl: PropTypes.string,\n  removeInProgress: PropTypes.bool,\n  portfolio_id: PropTypes.string,\n  metadata: PropTypes.shape({\n    user_capabilities: PropTypes.shape({ destroy: PropTypes.bool }).isRequired\n  }).isRequired\n};\n\nexport default PortfolioItem;\n","import { toolbarComponentTypes } from '../toolbar-mapper';\n\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nconst createPortfolioToolbarSchema = ({\n  meta,\n  fetchProducts,\n  isLoading,\n  filterProps: { searchValue, onFilterChange, placeholder }\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'products-top-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'products-toolbar-title',\n          title: 'Products',\n          description: 'All products collected from your portfolios',\n          noData: meta.noData\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'Products-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'main-portfolio-toolbar',\n                  fields: [\n                    {\n                      groupName: 'filter-group',\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      key: 'filter-input',\n                      searchValue,\n                      onFilterChange,\n                      placeholder,\n                      isClearable: true\n                    }\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            key: 'products-pagination',\n                            meta,\n                            apiProps: searchValue,\n                            apiRequest: fetchProducts,\n                            isDisabled: isLoading,\n                            isCompact: true\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","import { defineMessages } from 'react-intl';\n\nconst productsMessages = defineMessages({\n  addSource: {\n    id: 'products.empty.add-source',\n    defaultMessage: 'Add source'\n  },\n  configureSource: {\n    id: 'products.empty.configure-source',\n    defaultMessage: 'Configure a source and add products into portfolios.'\n  },\n  title: {\n    id: 'products.toolbar.title',\n    defaultMessage: 'Products'\n  }\n});\n\nexport default productsMessages;\n","import React, { useContext, useEffect, useReducer, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { WrenchIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport { fetchPortfolioItems } from '../../redux/actions/portfolio-actions';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport PortfolioItem from '../portfolio/portfolio-item';\nimport createProductsToolbarSchema from '../../toolbar/schemas/products-toolbar.schema';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport {\n  Button,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport AppContext from '../../app-context';\nimport AsyncPagination from '../common/async-pagination';\nimport { PORTFOLIO_ITEM_ROUTE } from '../../constants/routes';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport UserContext from '../../user-context';\nimport filteringMessages from '../../messages/filtering.messages';\nimport productsMessages from '../../messages/products.messages';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst debouncedFilter = asyncFormValidator(\n  (value, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(fetchPortfolioItems(value, defaultSettings)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst buildItemLink = ({ portfolio_id, id, service_offering_source_ref }) => {\n  if (portfolio_id && id && service_offering_source_ref) {\n    return {\n      pathname: portfolio_id && PORTFOLIO_ITEM_ROUTE,\n      searchParams: {\n        portfolio: portfolio_id,\n        'portfolio-item': id,\n        source: service_offering_source_ref,\n        'from-products': 'true'\n      }\n    };\n  }\n\n  return {};\n};\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst productsState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n  }\n\n  return state;\n};\n\nconst Products = () => {\n  const formatMessage = useFormatMessage();\n  const viewState = useInitialUriHash();\n  const { release } = useContext(AppContext);\n  const [{ isFetching, filterValue, isFiltering }, stateDispatch] = useReducer(\n    productsState,\n    {\n      ...initialState,\n      filterValue: viewState?.products?.filter || ''\n    }\n  );\n  const {\n    userIdentity: {\n      identity: {\n        user: { is_org_admin }\n      }\n    }\n  } = useContext(UserContext);\n  const dispatch = useDispatch();\n  const { data, meta } = useSelector(\n    ({ portfolioReducer: { portfolioItems } }) => portfolioItems\n  );\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(\n        fetchPortfolioItems(viewState?.products?.filter, viewState?.products)\n      ),\n      dispatch(fetchPlatforms())\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n    insights.chrome.appNavClick({ id: 'products', secondaryNav: true });\n  }, []);\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(value, dispatch, (isFiltering) =>\n      stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  const galleryItems = data.map((item) => (\n    <PortfolioItem\n      key={item.id}\n      pathname={item.portfolio_id && PORTFOLIO_ITEM_ROUTE}\n      {...buildItemLink(item)}\n      {...item}\n      toDisplay={[]}\n    />\n  ));\n\n  const SourcesAction = () =>\n    is_org_admin && (\n      <a href={`${release}settings/sources/new`}>\n        <Button variant=\"primary\">\n          {formatMessage(productsMessages.addSource)}\n        </Button>\n      </a>\n    );\n\n  const FilterAction = () => (\n    <Button variant=\"link\" onClick={() => handleFilterItems('')}>\n      {formatMessage(filteringMessages.clearFilters)}\n    </Button>\n  );\n\n  const renderEmptyStateDescription = () => (\n    <Fragment>\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {meta.noData\n            ? formatMessage(productsMessages.configureSource)\n            : formatMessage(filteringMessages.noResultsDescription)}\n        </Text>\n        {is_org_admin ? (\n          <Text component={TextVariants.p}>\n            {formatMessage(platformsMessages.connectSource, {\n              // eslint-disable-next-line react/display-name\n              a: (chunks) => (\n                <Fragment>\n                  <a href={`${document.baseURI}settings/sources`}>{chunks}</a>\n                </Fragment>\n              )\n            })}\n          </Text>\n        ) : (\n          <Text>{formatMessage(platformsMessages.contactAdmin)}</Text>\n        )}\n      </TextContent>\n    </Fragment>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? SourcesAction : FilterAction,\n    title: meta.noData\n      ? formatMessage(filteringMessages.noProducts)\n      : formatMessage(filteringMessages.noResults),\n    renderDescription: renderEmptyStateDescription,\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createProductsToolbarSchema({\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterItems,\n            placeholder: formatMessage(filteringMessages.filterByProduct)\n          },\n          title: formatMessage(productsMessages.title),\n          isLoading: isFiltering || isFetching,\n          meta,\n          fetchProducts: (...args) => dispatch(fetchPortfolioItems(...args))\n        })}\n      />\n      <ContentGallery\n        isLoading={isFiltering || isFetching}\n        items={galleryItems}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState {...emptyStateProps} />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiRequest={(_e, options) =>\n              dispatch(\n                fetchPortfolioItems(viewState?.products?.filter, options)\n              )\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Products;\n"],"sourceRoot":""}