{"version":3,"sources":["webpack:///./src/utilities/async-form-validator.js","webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/helpers/platform/platform-helper.js","webpack:///./src/redux/actions/platform-actions.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Checkbox/Checkbox.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/messages/platforms.messages.js","webpack:///./src/presentational-components/shared/card-checkbox.js","webpack:///./src/presentational-components/shared/service-offering-body.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/wrench-icon.js","webpack:///./src/smart-components/portfolio/portfolio-item.js","webpack:///./src/toolbar/schemas/products-toolbar.schema.js","webpack:///./src/messages/products.messages.js","webpack:///./src/smart-components/products/products.js"],"names":["asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","getNewPage","request","debouncePromise","direction","propTypes","PropTypes","shape","isRequired","func","any","string","bool","defaultProps","axiosInstance","getAxiosInstance","graphqlInstance","getGraphqlInstance","getPlatforms","post","SOURCES_API_BASE","query","then","data","application_types","sources","getPlatform","platformId","get","getPlatformItems","filter","filterQuery","TOPOLOGICAL_INVENTORY_API_BASE","getPlatformInventories","defaultSettings","getServiceOffering","serviceOfferingId","sourceId","Promise","all","source","source_type_id","icon_url","service","fetchPlatforms","dispatch","type","ActionTypes","PlatformHelper","payload","error","fetchPlatformItems","fetchSelectedPlatform","id","fetchPlatformInventories","fetchServiceOffering","Object","defineProperty","exports","value","tslib_1","React","__importStar","check_1","__importDefault","react_styles_1","defaultOnChange","Checkbox","Component","super","this","handleChange","event","onChange","currentTarget","checked","_a","ariaLabel","isValid","isDisabled","isChecked","label","defaultChecked","description","__rest","checkedProps","includes","createElement","css","default","check","assign","checkInput","disabled","ref","elem","indeterminate","checkLabel","modifiers","htmlFor","checkDescription","displayName","BottomPaginationContainer","children","oneOfType","node","arrayOf","platformsMessages","defineMessages","require","workflowColumn","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","configureSourceTitle","connectSource","contactAdmin","title","noPlatforms","offeringTitle","offeringParameters","CardCheckbox","handleCheck","onClick","stopPropagation","aria-label","ServiceOfferingCardBody","name","distributor","display_name","pathname","searchParams","preserveSearch","portfolioName","component","TextVariants","h3","small","toDisplay","long_description","__esModule","WrenchIconConfig","height","width","svgPath","yOffset","xOffset","transform","WrenchIcon","createIcon","StyledLevel","styled","Level","PortfolioItem","removeInProgress","isSelected","src","CATALOG_API_BASE","service_offering_source_ref","isSelectable","onSelect","orderUrl","portfolio_id","metadata","user_capabilities","destroy","createPortfolioToolbarSchema","fetchProducts","isLoading","filterProps","searchValue","onFilterChange","placeholder","fields","toolbarComponentTypes","TOP_TOOLBAR","key","TOP_TOOLBAR_TITLE","noData","LEVEL","TOOLBAR","groupName","FILTER_TOOLBAR_ITEM","isClearable","LEVEL_ITEM","productsMessages","addSource","configureSource","debouncedFilter","asyncFormValidator","filteringCallback","fetchPortfolioItems","initialState","filterValue","isOpen","isFetching","isFiltering","productsState","state","action","Products","formatMessage","useIntl","viewState","useInitialUriHash","release","useContext","AppContext","useReducer","products","stateDispatch","is_org_admin","UserContext","userIdentity","identity","user","useDispatch","useSelector","portfolioReducer","portfolioItems","useEffect","scrollToTop","insights","chrome","appNavClick","secondaryNav","handleFilterItems","galleryItems","map","item","PORTFOLIO_ITEM_ROUTE","portfolio","emptyStateProps","PrimaryAction","href","Button","variant","filteringMessages","clearFilters","noProducts","noResults","renderDescription","TextContent","Text","p","noResultsDescription","a","chunks","document","baseURI","Icon","SearchIcon","schema","createProductsToolbarSchema","filterByProduct","items","renderEmptyState","dropDirection","_e"],"mappings":"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","file":"js/products~31ecd969.d1aecae4765f649b2af5.js","sourcesContent":["import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (\n  asyncFunction,\n  debounceTime = 250,\n  options = { onlyResolvesLast: false }\n) => awesomeDebouncePromise(asyncFunction, debounceTime, options);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import { getAxiosInstance, getGraphqlInstance } from '../shared/user-login';\nimport {\n  TOPOLOGICAL_INVENTORY_API_BASE,\n  SOURCES_API_BASE\n} from '../../utilities/constants';\nimport { defaultSettings } from '../shared/pagination';\nconst axiosInstance = getAxiosInstance();\nconst graphqlInstance = getGraphqlInstance();\n\nconst sourcesQuery = `\nquery {\n  application_types (filter: { name: \"/insights/platform/catalog\" }) {\n    id\n    name\n    sources {\n      id\n      name\n      source_type_id\n    }\n  }\n}`;\n\nexport const getPlatforms = () => {\n  return graphqlInstance\n    .post(`${SOURCES_API_BASE}/graphql`, { query: sourcesQuery })\n    .then(({ data: { application_types } }) => application_types)\n    .then(([{ sources }]) => sources);\n};\n\nexport const getPlatform = (platformId) => {\n  return axiosInstance.get(`${SOURCES_API_BASE}/sources/${platformId}`);\n};\n\nexport const getPlatformItems = (platformId, filter, options) => {\n  const filterQuery = filter ? `&filter[name][contains_i]=${filter}` : '';\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_offerings?filter[archived_at][nil]${filterQuery}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings`\n    );\n  }\n};\n\nexport const getPlatformInventories = (\n  platformId,\n  filter = '',\n  options = defaultSettings\n) => {\n  if (platformId) {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/sources/${platformId}/service_inventories?filter[name][contains_i]=${filter}${\n        options ? `&limit=${options.limit}&offset=${options.offset}` : ''\n      }`\n    );\n  } else {\n    return axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_inventories?limit=${options.limit}&offset=${options.offset}`\n    );\n  }\n};\n\nexport const getServiceOffering = (serviceOfferingId, sourceId) =>\n  Promise.all([\n    axiosInstance.get(\n      `${TOPOLOGICAL_INVENTORY_API_BASE}/service_offerings/${serviceOfferingId}`\n    ),\n    axiosInstance\n      .get(`${SOURCES_API_BASE}/sources/${sourceId}`)\n      .then((source) => {\n        return axiosInstance\n          .get(`${SOURCES_API_BASE}/source_types/${source.source_type_id}`)\n          .then(({ icon_url }) => ({\n            ...source,\n            icon_url\n          }));\n      })\n  ]).then(([service, source]) => ({\n    service,\n    source\n  }));\n","import * as ActionTypes from '../action-types';\nimport * as PlatformHelper from '../../helpers/platform/platform-helper';\n\nexport const fetchPlatforms = () => (dispatch) => {\n  dispatch({ type: `${ActionTypes.FETCH_PLATFORMS}_PENDING` });\n  return PlatformHelper.getPlatforms()\n    .then((data) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_FULFILLED`,\n        payload: data\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: `${ActionTypes.FETCH_PLATFORMS}_REJECTED`,\n        payload: error\n      })\n    );\n};\n\nexport const fetchPlatformItems = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_ITEMS,\n  payload: PlatformHelper.getPlatformItems(platformId, filter, options),\n  meta: {\n    platformId,\n    filter,\n    ...options\n  }\n});\n\nexport const fetchMultiplePlatformItems = (platformsId) => {\n  const platformPromisses = platformsId.map((platformId) =>\n    PlatformHelper.getPlatformItems(platformId).then((data) => ({\n      [platformId]: data\n    }))\n  );\n  return {\n    type: ActionTypes.FETCH_MULTIPLE_PLATFORM_ITEMS,\n    payload: Promise.all(platformPromisses).then((data) =>\n      data.reduce(\n        (acc, curr) => ({\n          ...acc,\n          ...curr\n        }),\n        {}\n      )\n    )\n  };\n};\n\nexport const fetchSelectedPlatform = (id) => ({\n  type: ActionTypes.FETCH_PLATFORM,\n  payload: PlatformHelper.getPlatform(id)\n});\n\nexport const searchPlatformItems = (value) => ({\n  type: ActionTypes.FILTER_PLATFORM_ITEMS,\n  payload: new Promise((resolve) => {\n    resolve(value);\n  })\n});\n\nexport const fetchPlatformInventories = (platformId, filter, options) => ({\n  type: ActionTypes.FETCH_PLATFORM_INVENTORIES,\n  payload: PlatformHelper.getPlatformInventories(platformId, filter, options)\n});\n\nexport const fetchServiceOffering = (...args) => ({\n  type: ActionTypes.FETCH_SERVICE_OFFERING,\n  payload: PlatformHelper.getServiceOffering(...args)\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst check_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Check/check\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\n// tslint:disable-next-line:no-empty\nconst defaultOnChange = () => { };\nclass Checkbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event.currentTarget.checked, event);\n        };\n    }\n    render() {\n        const _a = this.props, { 'aria-label': ariaLabel, className, onChange, isValid, isDisabled, isChecked, label, checked, defaultChecked, description } = _a, props = tslib_1.__rest(_a, ['aria-label', \"className\", \"onChange\", \"isValid\", \"isDisabled\", \"isChecked\", \"label\", \"checked\", \"defaultChecked\", \"description\"]);\n        const checkedProps = {};\n        if ([true, false].includes(checked) || isChecked === true) {\n            checkedProps.checked = checked || isChecked;\n        }\n        if (onChange !== defaultOnChange) {\n            checkedProps.checked = isChecked;\n        }\n        if ([false, true].includes(defaultChecked)) {\n            checkedProps.defaultChecked = defaultChecked;\n        }\n        checkedProps.checked = checkedProps.checked === null ? false : checkedProps.checked;\n        return (React.createElement(\"div\", { className: react_styles_1.css(check_1.default.check, className) },\n            React.createElement(\"input\", Object.assign({}, props, { className: react_styles_1.css(check_1.default.checkInput), type: \"checkbox\", onChange: this.handleChange, \"aria-invalid\": !isValid, \"aria-label\": ariaLabel, disabled: isDisabled, ref: elem => elem && (elem.indeterminate = isChecked === null) }, checkedProps)),\n            label && (React.createElement(\"label\", { className: react_styles_1.css(check_1.default.checkLabel, isDisabled && check_1.default.modifiers.disabled), htmlFor: props.id }, label)),\n            description && React.createElement(\"div\", { className: react_styles_1.css(check_1.default.checkDescription) }, description)));\n    }\n}\nexports.Checkbox = Checkbox;\nCheckbox.displayName = 'Checkbox';\nCheckbox.defaultProps = {\n    className: '',\n    isValid: true,\n    isDisabled: false,\n    isChecked: false,\n    onChange: defaultOnChange\n};\n//# sourceMappingURL=Checkbox.js.map","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    {children}\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","const { defineMessages } = require('react-intl');\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  configureSourceTitle: {\n    id: 'platforms.list.configure-source',\n    defaultMessage: 'Configure a source in order to add products to portfolios.'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage:\n      'To connect to a source, go to <a>Sources</a> under Settings.'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  }\n});\n\nexport default platformsMessages;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CardCheckbox = ({ handleCheck, isChecked, id }) => (\n  <Checkbox\n    onClick={(event) => event.stopPropagation()}\n    isChecked={isChecked}\n    onChange={handleCheck}\n    aria-label=\"card checkbox\"\n    id={id}\n  />\n);\n\nCardCheckbox.propTypes = {\n  handleCheck: propTypes.func,\n  isChecked: propTypes.bool,\n  id: propTypes.string\n};\n\nexport default CardCheckbox;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ItemDetails from './card-common';\nimport ConditionalLink from './conditional-link';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { StyledCardBody } from '../styled-components/card';\n\nconst ServiceOfferingCardBody = ({\n  name,\n  display_name,\n  distributor,\n  pathname,\n  searchParams,\n  preserveSearch,\n  portfolioName,\n  ...props\n}) => (\n  <StyledCardBody>\n    <TextContent>\n      <ConditionalLink\n        pathname={pathname}\n        searchParams={searchParams}\n        preserveSearch={preserveSearch}\n      >\n        <Text component={TextVariants.h3} title={name}>\n          <EllipsisTextContainer>{name}</EllipsisTextContainer>\n        </Text>\n      </ConditionalLink>\n      {distributor && <Text component={TextVariants.small}>{distributor}</Text>}\n      {portfolioName && (\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component=\"small\">\n            Portfolio\n          </Text>\n          <Text>{portfolioName}</Text>\n        </Fragment>\n      )}\n    </TextContent>\n    <ItemDetails\n      toDisplay={[props.description ? 'description' : 'long_description']}\n      {...props}\n    />\n  </StyledCardBody>\n);\n\nServiceOfferingCardBody.propTypes = {\n  name: PropTypes.string,\n  display_name: PropTypes.string,\n  distributor: PropTypes.string,\n  long_description: PropTypes.string,\n  description: PropTypes.string,\n  pathname: PropTypes.string,\n  preserveSearch: PropTypes.bool,\n  searchParams: PropTypes.shape({ [PropTypes.string]: PropTypes.string }),\n  portfolioName: PropTypes.string\n};\n\nexport default ServiceOfferingCardBody;\n","\"use strict\"\nexports.__esModule = true;\nexports.WrenchIconConfig = {\n  name: 'WrenchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.WrenchIcon = require('../createIcon').createIcon(exports.WrenchIconConfig);\nexports[\"default\"] = exports.WrenchIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level } from '@patternfly/react-core';\n\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport CardCheckbox from '../../presentational-components/shared/card-checkbox';\nimport ServiceOfferingCardBody from '../../presentational-components/shared/service-offering-body';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../../presentational-components/styled-components/styled-gallery';\nimport styled from 'styled-components';\n\nconst StyledLevel = styled(Level)`\n  flex: 1;\n`;\n\nconst PortfolioItem = (props) => (\n  <StyledGalleryItem isDisabled={props.removeInProgress && props.isSelected}>\n    <StyledCard>\n      <CardHeader>\n        <StyledLevel>\n          <CardIcon\n            src={`${CATALOG_API_BASE}/portfolio_items/${props.id}/icon`}\n            sourceId={props.service_offering_source_ref}\n          />\n          {props.isSelectable && (\n            <CardCheckbox\n              handleCheck={() => props.onSelect(props.id)}\n              isChecked={props.isSelected}\n              id={props.id}\n            />\n          )}\n        </StyledLevel>\n      </CardHeader>\n      <ServiceOfferingCardBody {...props} />\n      <CardFooter></CardFooter>\n    </StyledCard>\n  </StyledGalleryItem>\n);\n\nPortfolioItem.propTypes = {\n  id: PropTypes.string,\n  platformId: PropTypes.string,\n  service_offering_source_ref: PropTypes.string,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  orderUrl: PropTypes.string,\n  removeInProgress: PropTypes.bool,\n  portfolio_id: PropTypes.string,\n  metadata: PropTypes.shape({\n    user_capabilities: PropTypes.shape({ destroy: PropTypes.bool }).isRequired\n  }).isRequired\n};\n\nexport default PortfolioItem;\n","import { toolbarComponentTypes } from '../toolbar-mapper';\n\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nconst createPortfolioToolbarSchema = ({\n  meta,\n  fetchProducts,\n  isLoading,\n  filterProps: { searchValue, onFilterChange, placeholder }\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'products-top-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'products-toolbar-title',\n          title: 'Products',\n          description: 'All products collected from your portfolios',\n          noData: meta.noData\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'Products-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'main-portfolio-toolbar',\n                  fields: [\n                    {\n                      groupName: 'filter-group',\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      key: 'filter-input',\n                      searchValue,\n                      onFilterChange,\n                      placeholder,\n                      isClearable: true\n                    }\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            key: 'products-pagination',\n                            meta,\n                            apiProps: searchValue,\n                            apiRequest: fetchProducts,\n                            isDisabled: isLoading,\n                            isCompact: true\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","const { defineMessages } = require('react-intl');\n\nconst productsMessages = defineMessages({\n  addSource: {\n    id: 'products.empty.add-source',\n    defaultMessage: 'Add source'\n  },\n  configureSource: {\n    id: 'products.empty.configure-source',\n    defaultMessage: 'Configure a source and add products into portfolios.'\n  },\n  title: {\n    id: 'products.toolbar.title',\n    defaultMessage: 'Products'\n  }\n});\n\nexport default productsMessages;\n","import React, { useContext, useEffect, useReducer, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { WrenchIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport { fetchPortfolioItems } from '../../redux/actions/portfolio-actions';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport PortfolioItem from '../portfolio/portfolio-item';\nimport createProductsToolbarSchema from '../../toolbar/schemas/products-toolbar.schema';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport {\n  Button,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport AppContext from '../../app-context';\nimport AsyncPagination from '../common/async-pagination';\nimport { PORTFOLIO_ITEM_ROUTE } from '../../constants/routes';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport UserContext from '../../user-context';\nimport { useIntl } from 'react-intl';\nimport filteringMessages from '../../messages/filtering.messages';\nimport productsMessages from '../../messages/products.messages';\nimport platformsMessages from '../../messages/platforms.messages';\n\nconst debouncedFilter = asyncFormValidator(\n  (value, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(fetchPortfolioItems(value, defaultSettings)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst buildItemLink = ({ portfolio_id, id, service_offering_source_ref }) => {\n  if (portfolio_id && id && service_offering_source_ref) {\n    return {\n      pathname: portfolio_id && PORTFOLIO_ITEM_ROUTE,\n      searchParams: {\n        portfolio: portfolio_id,\n        'portfolio-item': id,\n        source: service_offering_source_ref\n      }\n    };\n  }\n\n  return {};\n};\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst productsState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n  }\n\n  return state;\n};\n\nconst Products = () => {\n  const { formatMessage } = useIntl();\n  const viewState = useInitialUriHash();\n  const { release } = useContext(AppContext);\n  const [{ isFetching, filterValue, isFiltering }, stateDispatch] = useReducer(\n    productsState,\n    {\n      ...initialState,\n      filterValue: viewState?.products?.filter || ''\n    }\n  );\n  const {\n    userIdentity: {\n      identity: {\n        user: { is_org_admin }\n      }\n    }\n  } = useContext(UserContext);\n  const dispatch = useDispatch();\n  const { data, meta } = useSelector(\n    ({ portfolioReducer: { portfolioItems } }) => portfolioItems\n  );\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(\n        fetchPortfolioItems(viewState?.products?.filter, viewState?.products)\n      ),\n      dispatch(fetchPlatforms())\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n    insights.chrome.appNavClick({ id: 'products', secondaryNav: true });\n  }, []);\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(value, dispatch, (isFiltering) =>\n      stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  const galleryItems = data.map((item) => (\n    <PortfolioItem\n      key={item.id}\n      pathname={item.portfolio_id && PORTFOLIO_ITEM_ROUTE}\n      {...buildItemLink(item)}\n      {...item}\n      toDisplay={[]}\n    />\n  ));\n\n  const SourcesAction = () =>\n    is_org_admin && (\n      <a href={`${release}settings/sources/new`}>\n        <Button variant=\"primary\">\n          {formatMessage(productsMessages.addSource)}\n        </Button>\n      </a>\n    );\n\n  const FilterAction = () => (\n    <Button variant=\"link\" onClick={() => handleFilterItems('')}>\n      {formatMessage(filteringMessages.clearFilters)}\n    </Button>\n  );\n\n  const renderEmptyStateDescription = () => (\n    <Fragment>\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {meta.noData\n            ? formatMessage(productsMessages.configureSource)\n            : formatMessage(filteringMessages.noResultsDescription)}\n        </Text>\n        {is_org_admin ? (\n          <Text component={TextVariants.p}>\n            {formatMessage(platformsMessages.connectSource, {\n              // eslint-disable-next-line react/display-name\n              a: (chunks) => (\n                <Fragment>\n                  <a href={`${document.baseURI}settings/sources`}>{chunks}</a>\n                </Fragment>\n              )\n            })}\n          </Text>\n        ) : (\n          <Text>{formatMessage(platformsMessages.contactAdmin)}</Text>\n        )}\n      </TextContent>\n    </Fragment>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? SourcesAction : FilterAction,\n    title: meta.noData\n      ? formatMessage(filteringMessages.noProducts)\n      : formatMessage(filteringMessages.noResults),\n    renderDescription: renderEmptyStateDescription,\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createProductsToolbarSchema({\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterItems,\n            placeholder: formatMessage(filteringMessages.filterByProduct)\n          },\n          title: formatMessage(productsMessages.title),\n          isLoading: isFiltering || isFetching,\n          meta,\n          fetchProducts: (...args) => dispatch(fetchPortfolioItems(...args))\n        })}\n      />\n      <ContentGallery\n        isLoading={isFiltering || isFetching}\n        items={galleryItems}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState {...emptyStateProps} />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiRequest={(_e, options) =>\n              dispatch(\n                fetchPortfolioItems(viewState?.products?.filter, options)\n              )\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Products;\n"],"sourceRoot":""}