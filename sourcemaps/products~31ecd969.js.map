{"version":3,"sources":["webpack:///./src/smart-components/common/async-pagination.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.js","webpack:///./src/messages/platforms.messages.ts","webpack:///./src/presentational-components/shared/service-offering-body.tsx","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardHeader.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Checkbox/Checkbox.js","webpack:///./src/presentational-components/shared/card-checkbox.tsx","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardFooter.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/wrench-icon.js","webpack:///./src/smart-components/portfolio/portfolio-item.js","webpack:///./src/toolbar/schemas/products-toolbar.schema.js","webpack:///./src/messages/products.messages.ts","webpack:///./src/smart-components/products/products.js"],"names":["AsyncPagination","meta","limit","count","offset","apiProps","apiRequest","className","isCompact","props","perPage","itemCount","onPerPageSelect","_event","page","getCurrentPage","onSetPage","number","debounce","options","getNewPage","request","debouncePromise","direction","propTypes","PropTypes","shape","isRequired","func","any","string","bool","defaultProps","BottomPaginationContainer","children","oneOfType","node","arrayOf","platformsMessages","workflowColumn","id","defaultMessage","noInventoriesDescription","noInventoriesFilterDescription","inventoriesFilter","templatesFilter","noTemplatesTitle","noTemplatesDescription","configureSourceTitle","connectSource","contactAdmin","title","noPlatforms","offeringTitle","offeringParameters","name","distributor","pathname","searchParams","preserveSearch","portfolioName","component","h3","small","toDisplay","description","Object","defineProperty","exports","value","tslib_1","React","__importStar","react_styles_1","card_1","__importDefault","CardHeader","_a","__rest","createElement","assign","css","default","cardHeader","displayName","defaultOnChange","super","this","handleChange","event","onChange","currentTarget","checked","ariaLabel","isValid","isDisabled","isChecked","label","defaultChecked","checkedProps","includes","check","checkInput","type","disabled","ref","elem","indeterminate","checkLabel","modifiers","htmlFor","checkDescription","handleCheck","onClick","stopPropagation","CardFooter","Component","cardFooter","__esModule","WrenchIconConfig","height","width","svgPath","yOffset","xOffset","transform","WrenchIcon","createIcon","StyledLevel","styled","Level","PortfolioItem","removeInProgress","isSelected","src","CATALOG_API_BASE","sourceId","service_offering_source_ref","isSelectable","onSelect","platformId","orderUrl","portfolio_id","metadata","user_capabilities","destroy","createPortfolioToolbarSchema","fetchProducts","isLoading","filterProps","searchValue","onFilterChange","placeholder","fields","toolbarComponentTypes","TOP_TOOLBAR","key","TOP_TOOLBAR_TITLE","noData","LEVEL","TOOLBAR","groupName","FILTER_TOOLBAR_ITEM","isClearable","LEVEL_ITEM","addSource","configureSource","debouncedFilter","asyncFormValidator","dispatch","filteringCallback","fetchPortfolioItems","defaultSettings","then","initialState","filterValue","isOpen","isFetching","isFiltering","productsState","state","action","payload","Products","formatMessage","useFormatMessage","viewState","useInitialUriHash","release","useContext","AppContext","useReducer","products","filter","stateDispatch","is_org_admin","UserContext","userIdentity","identity","user","useDispatch","useSelector","portfolioReducer","portfolioItems","data","useEffect","Promise","all","fetchPlatforms","scrollToTop","insights","chrome","appNavClick","secondaryNav","handleFilterItems","galleryItems","map","item","PORTFOLIO_ITEM_ROUTE","portfolio","source","emptyStateProps","PrimaryAction","href","Button","variant","productsMessages","filteringMessages","clearFilters","noProducts","noResults","renderDescription","TextContent","Text","TextVariants","p","noResultsDescription","a","chunks","document","baseURI","Icon","SearchIcon","schema","createProductsToolbarSchema","filterByProduct","items","renderEmptyState","dropDirection","_e"],"mappings":"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","file":"js/products~31ecd969.ac30fd71627339254a4e.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport debouncePromise from 'awesome-debounce-promise';\n\nimport { Pagination } from '@patternfly/react-core';\n\nimport { getCurrentPage, getNewPage } from '../../helpers/shared/pagination';\n\nconst AsyncPagination = ({\n  meta: { limit, count, offset },\n  apiProps,\n  apiRequest,\n  className,\n  isCompact,\n  ...props\n}) => {\n  const handleOnPerPageSelect = (_event, limit) =>\n    apiRequest(apiProps, {\n      offset,\n      limit\n    });\n\n  const handleSetPage = (_event, number, debounce) => {\n    const options = {\n      offset: getNewPage(number, limit),\n      limit\n    };\n\n    const request = () => apiRequest(apiProps, options);\n    if (debounce) {\n      return debouncePromise(request, 250)();\n    }\n\n    return request();\n  };\n\n  return (\n    <div className={className}>\n      <Pagination\n        perPage={limit || 50}\n        itemCount={count || 0}\n        onPerPageSelect={handleOnPerPageSelect}\n        page={getCurrentPage(limit, offset)}\n        onSetPage={handleSetPage}\n        direction=\"down\"\n        isCompact={isCompact}\n        {...props}\n      />\n    </div>\n  );\n};\n\nAsyncPagination.propTypes = {\n  meta: PropTypes.shape({\n    count: PropTypes.number,\n    limit: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired\n  }),\n  apiRequest: PropTypes.func.isRequired,\n  apiProps: PropTypes.any,\n  className: PropTypes.string,\n  isCompact: PropTypes.bool\n};\n\nAsyncPagination.defaultProps = {\n  meta: {\n    count: 0,\n    limit: 50,\n    offset: 0\n  },\n  className: '',\n  isCompact: false\n};\n\nexport default AsyncPagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BottomPaginationContainer = ({ children }) => (\n  <div className=\"pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto\">\n    {children}\n  </div>\n);\n\nBottomPaginationContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node)\n  ])\n};\n\nexport default BottomPaginationContainer;\n","import { defineMessages } from 'react-intl';\n\nconst platformsMessages = defineMessages({\n  workflowColumn: {\n    id: 'platform.inventories.columns.workflow',\n    defaultMessage: 'Workflow'\n  },\n  noInventoriesDescription: {\n    id: 'platform.inventories.empty.no-inventories',\n    defaultMessage: 'No inventories found.'\n  },\n  noInventoriesFilterDescription: {\n    id: 'platform.inventories.empty.no-results',\n    defaultMessage: 'No inventories match your filter criteria.'\n  },\n  inventoriesFilter: {\n    id: 'platform.inventories.filter.placeholder',\n    defaultMessage: 'Filter by inventory'\n  },\n  templatesFilter: {\n    id: 'platform.templates.filter.placeholder',\n    defaultMessage: 'Filter by template'\n  },\n  noTemplatesTitle: {\n    id: 'platform.templates.no-templates',\n    defaultMessage: 'No templates'\n  },\n  noTemplatesDescription: {\n    id: 'platform.templates.empty.no-templates',\n    defaultMessage: 'This platform has no templates.'\n  },\n  configureSourceTitle: {\n    id: 'platforms.list.configure-source',\n    defaultMessage: 'Configure a source in order to add products to portfolios.'\n  },\n  connectSource: {\n    id: 'platforms.list.connect-source',\n    defaultMessage:\n      'To connect to a source, go to <a>Sources</a> under Settings.'\n  },\n  contactAdmin: {\n    id: 'platforms.list.contact-admin',\n    defaultMessage:\n      'Contact your organization administrator to setup sources for Catalog.'\n  },\n  title: {\n    id: 'platforms.title',\n    defaultMessage: 'Platforms'\n  },\n  noPlatforms: {\n    id: 'platforms.list.empty.title',\n    defaultMessage: 'No platforms yet'\n  },\n  offeringTitle: {\n    id: 'platforms.offerings.detail.title',\n    defaultMessage: 'Service offering'\n  },\n  offeringParameters: {\n    id: 'platforms.offerings.detail.extra-params',\n    defaultMessage: 'Extra parameters'\n  }\n});\n\nexport default platformsMessages;\n","/* eslint-disable react/prop-types */\nimport React, { Fragment } from 'react';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ItemDetails from './card-common';\nimport ConditionalLink from './conditional-link';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { StyledCardBody } from '../styled-components/card';\nimport { StringObject } from '../../types/common-types';\n\nexport interface ServiceOfferingCardBodyProps {\n  name?: string;\n  display_name?: string;\n  distributor?: string;\n  pathname?: string;\n  searchParams?: StringObject;\n  preserveSearch?: boolean;\n  description?: string;\n  long_description?: string;\n  portfolioName?: string;\n}\nconst ServiceOfferingCardBody: React.ComponentType<ServiceOfferingCardBodyProps> = ({\n  name,\n  distributor,\n  pathname,\n  searchParams,\n  preserveSearch,\n  portfolioName,\n  ...props\n}) => (\n  <StyledCardBody>\n    <TextContent>\n      <ConditionalLink\n        pathname={pathname}\n        searchParams={searchParams}\n        preserveSearch={preserveSearch}\n      >\n        <Text component={TextVariants.h3} title={name}>\n          <EllipsisTextContainer>{name}</EllipsisTextContainer>\n        </Text>\n      </ConditionalLink>\n      {distributor && <Text component={TextVariants.small}>{distributor}</Text>}\n      {portfolioName && (\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component=\"small\">\n            Portfolio\n          </Text>\n          <Text>{portfolioName}</Text>\n        </Fragment>\n      )}\n    </TextContent>\n    <ItemDetails\n      toDisplay={[props.description ? 'description' : 'long_description']}\n      {...props}\n    />\n  </StyledCardBody>\n);\n\nexport default ServiceOfferingCardBody;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nexports.CardHeader = (_a) => {\n    var { children = null, className = '' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: react_styles_1.css(card_1.default.cardHeader, className) }, props), children));\n};\nexports.CardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\n// tslint:disable-next-line:no-empty\nconst defaultOnChange = () => { };\nexport class Checkbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event.currentTarget.checked, event);\n        };\n    }\n    render() {\n        const _a = this.props, { 'aria-label': ariaLabel, className, onChange, isValid, isDisabled, isChecked, label, checked, defaultChecked, description } = _a, props = __rest(_a, ['aria-label', \"className\", \"onChange\", \"isValid\", \"isDisabled\", \"isChecked\", \"label\", \"checked\", \"defaultChecked\", \"description\"]);\n        const checkedProps = {};\n        if ([true, false].includes(checked) || isChecked === true) {\n            checkedProps.checked = checked || isChecked;\n        }\n        if (onChange !== defaultOnChange) {\n            checkedProps.checked = isChecked;\n        }\n        if ([false, true].includes(defaultChecked)) {\n            checkedProps.defaultChecked = defaultChecked;\n        }\n        checkedProps.checked = checkedProps.checked === null ? false : checkedProps.checked;\n        return (React.createElement(\"div\", { className: css(styles.check, className) },\n            React.createElement(\"input\", Object.assign({}, props, { className: css(styles.checkInput), type: \"checkbox\", onChange: this.handleChange, \"aria-invalid\": !isValid, \"aria-label\": ariaLabel, disabled: isDisabled, ref: elem => elem && (elem.indeterminate = isChecked === null) }, checkedProps)),\n            label && (React.createElement(\"label\", { className: css(styles.checkLabel, isDisabled && styles.modifiers.disabled), htmlFor: props.id }, label)),\n            description && React.createElement(\"div\", { className: css(styles.checkDescription) }, description)));\n    }\n}\nCheckbox.displayName = 'Checkbox';\nCheckbox.defaultProps = {\n    className: '',\n    isValid: true,\n    isDisabled: false,\n    isChecked: false,\n    onChange: defaultOnChange\n};\n//# sourceMappingURL=Checkbox.js.map","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Checkbox } from '@patternfly/react-core';\n\nexport interface CardCheckboxProps {\n  handleCheck: (value: any) => void;\n  isChecked?: boolean;\n  id: string;\n}\nconst CardCheckbox: React.ComponentType<CardCheckboxProps> = ({\n  handleCheck,\n  isChecked,\n  id\n}) => (\n  <Checkbox\n    onClick={(event) => event.stopPropagation()}\n    isChecked={isChecked}\n    onChange={handleCheck}\n    aria-label=\"card checkbox\"\n    id={id}\n  />\n);\n\nexport default CardCheckbox;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nexports.CardFooter = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: react_styles_1.css(card_1.default.cardFooter, className) }, props), children));\n};\nexports.CardFooter.displayName = 'CardFooter';\n//# sourceMappingURL=CardFooter.js.map","\"use strict\"\nexports.__esModule = true;\nexports.WrenchIconConfig = {\n  name: 'WrenchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.WrenchIcon = require('../createIcon').createIcon(exports.WrenchIconConfig);\nexports[\"default\"] = exports.WrenchIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level } from '@patternfly/react-core';\n\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport CardCheckbox from '../../presentational-components/shared/card-checkbox';\nimport ServiceOfferingCardBody from '../../presentational-components/shared/service-offering-body';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../../presentational-components/styled-components/styled-gallery';\nimport styled from 'styled-components';\n\nconst StyledLevel = styled(Level)`\n  flex: 1;\n`;\n\nconst PortfolioItem = (props) => (\n  <StyledGalleryItem isDisabled={props.removeInProgress && props.isSelected}>\n    <StyledCard>\n      <CardHeader>\n        <StyledLevel>\n          <CardIcon\n            src={`${CATALOG_API_BASE}/portfolio_items/${props.id}/icon`}\n            sourceId={props.service_offering_source_ref}\n          />\n          {props.isSelectable && (\n            <CardCheckbox\n              handleCheck={() => props.onSelect(props.id)}\n              isChecked={props.isSelected}\n              id={props.id}\n            />\n          )}\n        </StyledLevel>\n      </CardHeader>\n      <ServiceOfferingCardBody {...props} />\n      <CardFooter></CardFooter>\n    </StyledCard>\n  </StyledGalleryItem>\n);\n\nPortfolioItem.propTypes = {\n  id: PropTypes.string,\n  platformId: PropTypes.string,\n  service_offering_source_ref: PropTypes.string,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  orderUrl: PropTypes.string,\n  removeInProgress: PropTypes.bool,\n  portfolio_id: PropTypes.string,\n  metadata: PropTypes.shape({\n    user_capabilities: PropTypes.shape({ destroy: PropTypes.bool }).isRequired\n  }).isRequired\n};\n\nexport default PortfolioItem;\n","import { toolbarComponentTypes } from '../toolbar-mapper';\n\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nconst createPortfolioToolbarSchema = ({\n  meta,\n  fetchProducts,\n  isLoading,\n  filterProps: { searchValue, onFilterChange, placeholder }\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'products-top-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'products-toolbar-title',\n          title: 'Products',\n          description: 'All products collected from your portfolios',\n          noData: meta.noData\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'Products-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'main-portfolio-toolbar',\n                  fields: [\n                    {\n                      groupName: 'filter-group',\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      key: 'filter-input',\n                      searchValue,\n                      onFilterChange,\n                      placeholder,\n                      isClearable: true\n                    }\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            key: 'products-pagination',\n                            meta,\n                            apiProps: searchValue,\n                            apiRequest: fetchProducts,\n                            isDisabled: isLoading,\n                            isCompact: true\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","import { defineMessages } from 'react-intl';\n\nconst productsMessages = defineMessages({\n  addSource: {\n    id: 'products.empty.add-source',\n    defaultMessage: 'Add source'\n  },\n  configureSource: {\n    id: 'products.empty.configure-source',\n    defaultMessage: 'Configure a source and add products into portfolios.'\n  },\n  title: {\n    id: 'products.toolbar.title',\n    defaultMessage: 'Products'\n  }\n});\n\nexport default productsMessages;\n","import React, { useContext, useEffect, useReducer, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { WrenchIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport { fetchPortfolioItems } from '../../redux/actions/portfolio-actions';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport PortfolioItem from '../portfolio/portfolio-item';\nimport createProductsToolbarSchema from '../../toolbar/schemas/products-toolbar.schema';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport {\n  Button,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport AppContext from '../../app-context';\nimport AsyncPagination from '../common/async-pagination';\nimport { PORTFOLIO_ITEM_ROUTE } from '../../constants/routes';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport UserContext from '../../user-context';\nimport filteringMessages from '../../messages/filtering.messages';\nimport productsMessages from '../../messages/products.messages';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst debouncedFilter = asyncFormValidator(\n  (value, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(fetchPortfolioItems(value, defaultSettings)).then(() =>\n      filteringCallback(false)\n    );\n  },\n  1000\n);\n\nconst buildItemLink = ({ portfolio_id, id, service_offering_source_ref }) => {\n  if (portfolio_id && id && service_offering_source_ref) {\n    return {\n      pathname: portfolio_id && PORTFOLIO_ITEM_ROUTE,\n      searchParams: {\n        portfolio: portfolio_id,\n        'portfolio-item': id,\n        source: service_offering_source_ref,\n        'from-products': 'true'\n      }\n    };\n  }\n\n  return {};\n};\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst productsState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n  }\n\n  return state;\n};\n\nconst Products = () => {\n  const formatMessage = useFormatMessage();\n  const viewState = useInitialUriHash();\n  const { release } = useContext(AppContext);\n  const [{ isFetching, filterValue, isFiltering }, stateDispatch] = useReducer(\n    productsState,\n    {\n      ...initialState,\n      filterValue: viewState?.products?.filter || ''\n    }\n  );\n  const {\n    userIdentity: {\n      identity: {\n        user: { is_org_admin }\n      }\n    }\n  } = useContext(UserContext);\n  const dispatch = useDispatch();\n  const { data, meta } = useSelector(\n    ({ portfolioReducer: { portfolioItems } }) => portfolioItems\n  );\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(\n        fetchPortfolioItems(viewState?.products?.filter, viewState?.products)\n      ),\n      dispatch(fetchPlatforms())\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n    insights.chrome.appNavClick({ id: 'products', secondaryNav: true });\n  }, []);\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(value, dispatch, (isFiltering) =>\n      stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  const galleryItems = data.map((item) => (\n    <PortfolioItem\n      key={item.id}\n      pathname={item.portfolio_id && PORTFOLIO_ITEM_ROUTE}\n      {...buildItemLink(item)}\n      {...item}\n      toDisplay={[]}\n    />\n  ));\n\n  const SourcesAction = () =>\n    is_org_admin && (\n      <a href={`${release}settings/sources/new`}>\n        <Button variant=\"primary\">\n          {formatMessage(productsMessages.addSource)}\n        </Button>\n      </a>\n    );\n\n  const FilterAction = () => (\n    <Button variant=\"link\" onClick={() => handleFilterItems('')}>\n      {formatMessage(filteringMessages.clearFilters)}\n    </Button>\n  );\n\n  const renderEmptyStateDescription = () => (\n    <Fragment>\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {meta.noData\n            ? formatMessage(productsMessages.configureSource)\n            : formatMessage(filteringMessages.noResultsDescription)}\n        </Text>\n        {is_org_admin ? (\n          <Text component={TextVariants.p}>\n            {formatMessage(platformsMessages.connectSource, {\n              // eslint-disable-next-line react/display-name\n              a: (chunks) => (\n                <Fragment>\n                  <a href={`${document.baseURI}settings/sources`}>{chunks}</a>\n                </Fragment>\n              )\n            })}\n          </Text>\n        ) : (\n          <Text>{formatMessage(platformsMessages.contactAdmin)}</Text>\n        )}\n      </TextContent>\n    </Fragment>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? SourcesAction : FilterAction,\n    title: meta.noData\n      ? formatMessage(filteringMessages.noProducts)\n      : formatMessage(filteringMessages.noResults),\n    renderDescription: renderEmptyStateDescription,\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createProductsToolbarSchema({\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterItems,\n            placeholder: formatMessage(filteringMessages.filterByProduct)\n          },\n          title: formatMessage(productsMessages.title),\n          isLoading: isFiltering || isFetching,\n          meta,\n          fetchProducts: (...args) => dispatch(fetchPortfolioItems(...args))\n        })}\n      />\n      <ContentGallery\n        isLoading={isFiltering || isFetching}\n        items={galleryItems}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState {...emptyStateProps} />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiRequest={(_e, options) =>\n              dispatch(\n                fetchPortfolioItems(viewState?.products?.filter, options)\n              )\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Products;\n"],"sourceRoot":""}