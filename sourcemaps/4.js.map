{"version":3,"sources":["webpack:///./src/PresentationalComponents/Platform/PlatformCard.js","webpack:///./src/PresentationalComponents/Platform/PlatformToolbar.js","webpack:///./src/SmartComponents/Platform/Platform.js","webpack:///./src/SmartComponents/Platform/Platforms.js","webpack:///./src/assets/images/platform-amazon.png","webpack:///./src/assets/images/platform-default.svg","webpack:///./src/assets/images/platform-openshift.svg"],"names":["TO_DISPLAY","platformTypeImg","OpenshiftPlatformImg","AmazonPlatformImg","PlatformCard","name","id","props","source_type_id","DefaultPlatformImg","propTypes","history","object","imageUrl","string","PlatformToolbar","searchValue","onFilterChange","PropTypes","func","isRequired","Platform","filterValue","setState","apiProps","fetchSelectedPlatform","fetchPlatformItems","fetchData","match","params","scrollToTop","prevProps","filteredItems","items","platformItems","filter","item","filterServiceOffering","state","map","data","isLoading","isPlatformDataLoading","title","platform","handleFilterChange","Component","mapStateToProps","platformReducer","selectedPlatform","mapDispatchToProps","dispatch","bindActionCreators","bool","shape","array","defaultProps","connect","platformsRoutes","platforms","detail","Platforms","isOpen","fetchPlatforms","toLowerCase","includes","renderToolbar","TextVariants","h2","renderPlatforms","searchFilter","showModal","hideModal"],"mappings":"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","file":"js/4.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Card, CardHeader, CardBody, CardFooter } from '@patternfly/react-core';\nimport DefaultPlatformImg from '../../assets/images/platform-default.svg';\nimport OpenshiftPlatformImg from '../../assets/images/platform-openshift.svg';\nimport AmazonPlatformImg from '../../assets/images/platform-amazon.png';\nimport ImageWithDefault from '../Shared/ImageWithDefault';\nimport ItemDetails from '../Shared/CardCommon';\nimport './platformcard.scss';\n\nconst TO_DISPLAY = [ 'description', 'modified' ];\n\n// TO DO - use webpack to load all images\nconst platformTypeImg = {\n  1: OpenshiftPlatformImg,\n  2: AmazonPlatformImg\n};\n\nconst PlatformCard = ({ name, id, ...props }) => (\n  <Link to={ `/platforms/detail/${id}` } className=\"card-link\">\n    <Card key={ id } className=\"content-gallery-card\">\n      <CardHeader className=\"pcard_header\">\n        <ImageWithDefault src={ platformTypeImg[props.source_type_id] || DefaultPlatformImg } width=\"80\" height=\"40\"/>\n      </CardHeader>\n      <CardBody className=\"pcard_body\">\n        <h4>{ name }</h4>\n        <ItemDetails { ...{ name, ...props } } toDisplay={ TO_DISPLAY } />\n      </CardBody>\n      <CardFooter/>\n    </Card>\n  </Link>\n);\n\nPlatformCard.propTypes = {\n  history: propTypes.object,\n  imageUrl: propTypes.string,\n  name: propTypes.string,\n  source_type_id: propTypes.string,\n  id: propTypes.string\n};\n\nexport default PlatformCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Level, LevelItem } from '@patternfly/react-core';\nimport TopToolbar from '../Shared/top-toolbar';\nimport FilterToolbarItem from '../Shared/FilterToolbarItem';\nimport OrderToolbarItem from '../Shared/OrderToolbarItem';\n\nconst PlatformToolbar = ({ searchValue, onFilterChange }) => (\n  <TopToolbar>\n    <Level>\n      <LevelItem>\n        <FilterToolbarItem searchValue={ searchValue } onFilterChange={ onFilterChange } placeholder=\"Find a product\" />\n      </LevelItem>\n      <LevelItem>\n        <OrderToolbarItem />\n      </LevelItem>\n    </Level>\n  </TopToolbar>\n);\n\nPlatformToolbar.propTypes = {\n  searchValue: PropTypes.string,\n  onFilterChange: PropTypes.func.isRequired\n};\n\nexport default PlatformToolbar;\n","import React, { Component, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { fetchSelectedPlatform, fetchPlatformItems } from '../../redux/Actions/PlatformActions';\nimport ContentGallery from '../../SmartComponents/ContentGallery/ContentGallery';\nimport PlatformToolbar from '../../PresentationalComponents/Platform/PlatformToolbar';\nimport PlatformItem from '../../PresentationalComponents/Platform/PlatformItem';\nimport { scrollToTop, filterServiceOffering } from '../../Helpers/Shared/helpers';\nimport './platform.scss';\n\nclass Platform extends Component {\n  state = {\n    filterValue: ''\n  };\n\n  fetchData(apiProps) {\n    this.props.fetchSelectedPlatform(apiProps);\n    this.props.fetchPlatformItems(apiProps);\n  }\n\n  componentDidMount() {\n    this.fetchData(this.props.match.params.id);\n    scrollToTop();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      this.fetchData(this.props.match.params.id);\n      scrollToTop();\n    }\n  }\n\n  handleFilterChange = filterValue => this.setState({ filterValue });\n\n  render() {\n    let filteredItems = {\n      items: this.props.platformItems\n      .filter(item => filterServiceOffering(item, this.state.filterValue))\n      .map(data => <PlatformItem key={ data.id } { ...data } />),\n      isLoading: this.props.isPlatformDataLoading\n    };\n\n    let title = this.props.platform ? this.props.platform.name : '';\n\n    return (\n      <Fragment>\n        <PlatformToolbar searchValue={ this.state.filterValue } onFilterChange={ this.handleFilterChange }/>\n        <div className=\"toolbar-padding\">\n          { title &&  (<Title size={ '2xl' } > { title }</Title>) }\n        </div>\n        <ContentGallery { ...filteredItems }/>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ platformReducer: { selectedPlatform, platformItems, isPlatformDataLoading }}) => ({\n  platform: selectedPlatform,\n  platformItems: selectedPlatform && platformItems[selectedPlatform.id],\n  isPlatformDataLoading: !selectedPlatform || isPlatformDataLoading\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchSelectedPlatform,\n  fetchPlatformItems\n}, dispatch);\n\nPlatform.propTypes = {\n  filteredItems: PropTypes.object,\n  isPlatformDataLoading: PropTypes.bool,\n  match: PropTypes.object,\n  fetchPlatformItems: PropTypes.func.isRequired,\n  fetchSelectedPlatform: PropTypes.func,\n  platform: PropTypes.shape({\n    name: PropTypes.string\n  }),\n  platformItems: PropTypes.array\n};\n\nPlatform.defaultProps = {\n  platformItems: []\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Platform);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport { Section } from '@red-hat-insights/insights-frontend-components';\nimport { Text, TextContent, TextVariants, Level, LevelItem } from '@patternfly/react-core';\nimport ContentGallery from '../../SmartComponents/ContentGallery/ContentGallery';\nimport PlatformCard from '../../PresentationalComponents/Platform/PlatformCard';\nimport PlatformToolbar from '../../PresentationalComponents/Platform/PlatformToolbar';\nimport { fetchPlatforms } from '../../redux/Actions/PlatformActions';\nimport { scrollToTop } from '../../Helpers/Shared/helpers';\nimport Platform from './Platform';\n\nconst platformsRoutes = {\n  platforms: '',\n  detail: '/detail/:id'\n};\n\nclass Platforms extends Component {\n    state = {\n      filterValue: '',\n      isOpen: false\n    };\n\n    fetchData = () => this.props.fetchPlatforms();\n\n    componentDidMount() {\n      this.fetchData();\n      scrollToTop();\n    }\n\n    handleFilterChange = filterValue => this.setState({ filterValue })\n\n    renderToolbar() {\n      return (\n        <Level className=\"pf-u-pt-md pf-u-pr-xl pf-u-pl-xl\">\n          <LevelItem>\n            <TextContent>\n              <Text component={ TextVariants.h2 }>All Platforms </Text>\n            </TextContent>\n          </LevelItem>\n        </Level>\n      );\n    }\n\n    renderPlatforms = () => {\n      const filteredItems = {\n        items: this.props.platforms\n        .filter(({ name }) => name.toLowerCase().includes(this.state.filterValue.toLowerCase()))\n        .map((item) => <PlatformCard key={ item.id } { ...item } />),\n        isLoading: this.props.isLoading\n      };\n      return (\n        <Fragment>\n          <PlatformToolbar onFilterChange={ this.handleFilterChange } searchValue={ this.state.filterValue } />\n          { this.renderToolbar() }\n          <ContentGallery { ...filteredItems } />\n        </Fragment>\n      );\n    }\n\n    render() {\n      return (\n        <Section>\n          <Switch>\n            <Route path={ `/platforms${platformsRoutes.detail}` } component={ Platform } />\n            <Route path={ `/platforms${platformsRoutes.platforms}` } render={ () => this.renderPlatforms() } />\n          </Switch>\n        </Section>\n      );\n    }\n}\n\nconst mapStateToProps = ({ platformReducer: { platforms, isLoading, filterValue }}) => ({\n  platforms,\n  isLoading,\n  searchFilter: filterValue\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchPlatforms: apiProps => dispatch(fetchPlatforms(apiProps))\n  };\n};\n\nPlatforms.propTypes = {\n  filteredItems: propTypes.array,\n  platforms: propTypes.array,\n  isLoading: propTypes.bool,\n  searchFilter: propTypes.string,\n  showModal: propTypes.func,\n  hideModal: propTypes.func,\n  history: propTypes.object,\n  fetchPlatforms: propTypes.func\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Platforms);\n","module.exports = __webpack_public_path__ + \"fonts/platform-amazon.png\";","module.exports = __webpack_public_path__ + \"fonts/platform-default.svg\";","module.exports = __webpack_public_path__ + \"fonts/platform-openshift.svg\";"],"sourceRoot":""}