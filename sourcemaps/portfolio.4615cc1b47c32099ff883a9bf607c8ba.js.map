{"version":3,"file":"js/portfolio.1643332395194.513ed1c55d995ecefb24.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/angle-left-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/smart-components/portfolio/portfolio.js","webpack:///./src/helpers/shared/redux-mutators.ts","webpack:///./src/utilities/use-is-mounted.js","webpack:///./src/presentational-components/portfolio/back-to-products.tsx","webpack:///./src/presentational-components/shared/app-tabs.tsx","webpack:///./src/presentational-components/shared/filter-toolbar-item.tsx","webpack:///./src/toolbar/toolbar-mapper.tsx","webpack:///./src/toolbar/toolbar-renderer.tsx","webpack:///./src/helpers/shared/breadcrumbs-creators.ts","webpack:///./src/redux/actions/breadcrumbs-actions.ts","webpack:///./src/utilities/use-breadcrumbs.ts"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.AngleLeftIconConfig = {\n  name: 'AngleLeftIcon',\n  height: 512,\n  width: 256,\n  svgPath: 'M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.AngleLeftIcon = require('../createIcon').createIcon(exports.AngleLeftIconConfig);\nexports[\"default\"] = exports.AngleLeftIcon;","import React from 'react';\nimport classNames from 'classnames';\nimport { Title } from '@patternfly/react-core';\nvar PageHeaderTitle = function (_a) {\n    var className = _a.className, title = _a.title;\n    var pageHeaderTitleClasses = classNames(className);\n    return (React.createElement(Title, { headingLevel: \"h1\", size: \"2xl\", className: pageHeaderTitleClasses, \"widget-type\": \"InsightsPageHeaderTitle\" }, title));\n};\nexport default PageHeaderTitle;\n//# sourceMappingURL=PageHeaderTitle.js.map","import React, { useEffect, useReducer, lazy, Suspense } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useRouteMatch, Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { isStandalone, scrollToTop } from '../../helpers/shared/helpers';\nimport { toggleArraySelection } from '../../helpers/shared/redux-mutators';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport { fetchPlatforms as fetchPlatformsS } from '../../redux/actions/platform-actions-s';\nimport {\n  copyPortfolio,\n  fetchPortfolios,\n  fetchSelectedPortfolio,\n  removeProductsFromPortfolio,\n  resetSelectedPortfolio,\n  fetchPortfolioItemsWithPortfolio\n} from '../../redux/actions/portfolio-actions';\nimport {\n  copyPortfolio as copyPortfolioS,\n  fetchPortfolios as fetchPortfoliosS,\n  fetchSelectedPortfolio as fetchSelectedPortfolioS,\n  removeProductsFromPortfolio as removeProductsFromPortfolioS,\n  resetSelectedPortfolio as resetSelectedPortfolioS,\n  fetchPortfolioItemsWithPortfolio as fetchPortfolioItemsWithPortfolioS\n} from '../../redux/actions/portfolio-actions-s';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport useQuery from '../../utilities/use-query';\nimport useBreadcrumbs from '../../utilities/use-breadcrumbs';\nimport { PORTFOLIO_ROUTE } from '../../constants/routes';\nimport { UnauthorizedRedirect } from '../error-pages/error-redirects';\nimport CatalogRoute from '../../routing/catalog-route';\nimport useIsMounted from '../../utilities/use-is-mounted';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { toolbarComponentTypes } from '../../toolbar/toolbar-mapper';\nimport BackToProducts from '../../presentational-components/portfolio/back-to-products';\n\n/**\n * Fake the toolbar until the chunk is loaded\n */\nconst PortfolioSuspenseFallback = ({ fromProducts, title, description }) => (\n  <ToolbarRenderer\n    schema={{\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR,\n          breadcrumbs: !fromProducts,\n          key: 'portfolio-top-toolbar',\n          fields: [\n            {\n              component: BackToProducts,\n              key: 'back-to-products',\n              hidden: !fromProducts\n            },\n            {\n              component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n              key: 'portfolio-toolbar-title',\n              title,\n              description\n            }\n          ]\n        }\n      ]\n    }}\n  />\n);\n\nPortfolioSuspenseFallback.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  fromProducts: PropTypes.bool\n};\n\nconst PortfolioItems = lazy(() =>\n  /* webpackChunkName: \"portfolio-items\" */ import('./portfolio-items')\n);\n\nconst PortfolioItemDetail = lazy(() =>\n  import(\n    /* webpackChunkName: \"portfolio-item-detail\" */\n    './portfolio-item-detail/portfolio-item-detail'\n  )\n);\nconst AddProductsToPortfolio = lazy(() =>\n  import(\n    /* webpackChunkName: \"add-products-to-portfolio\" */\n    './add-products-to-portfolio'\n  )\n);\nconst initialState = {\n  selectedItems: [],\n  firstSelectedProduct: undefined,\n  removeInProgress: false,\n  filterValue: '',\n  copyInProgress: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst debouncedFilter = asyncFormValidator(\n  (value, dispatch, filteringCallback, meta) => {\n    filteringCallback(true);\n    dispatch(\n      isStandalone()\n        ? fetchPortfolioItemsWithPortfolioS(value, meta)\n        : fetchPortfolioItemsWithPortfolio(value, meta)\n    ).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst porftolioUiReducer = (state, { type, payload = {} }) =>\n  ({\n    selectItem: {\n      ...state,\n      selectedItems: toggleArraySelection(\n        state.selectedItems,\n        payload.selectedItem\n      ),\n      firstSelectedProduct: payload.product || state.firstSelectedProduct\n    },\n    setRemoveInProgress: { ...state, removeInProgress: payload },\n    removeSuccessful: { ...state, selectedItems: [], removeInProgress: false },\n    setFilterValue: { ...state, filterValue: payload, isFiltering: true },\n    setCopyInProgress: { ...state, copyInProgress: payload },\n    setIsFetching: { ...state, isFetching: payload },\n    setFilteringFlag: { ...state, isFiltering: payload }\n  }[type]);\n\nconst Portfolio = () => {\n  const viewState = useInitialUriHash();\n  const [state, stateDispatch] = useReducer(porftolioUiReducer, {\n    ...initialState,\n    filterValue: viewState?.portfolioItems?.filter || ''\n  });\n  const [searchParams] = useQuery(['portfolio', 'from-products']);\n  const { portfolio: id, 'from-products': fromProducts } = searchParams;\n  const { url } = useRouteMatch(PORTFOLIO_ROUTE);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isMounted = useIsMounted();\n  const { portfolio, portfolioItem, meta } = useSelector(\n    ({\n      portfolioReducer: {\n        selectedPortfolio,\n        portfolioItem,\n        portfolioItems: { meta }\n      }\n    }) => ({\n      portfolio: selectedPortfolio,\n      portfolioItem,\n      meta\n    })\n  );\n\n  const resetBreadcrumbs = useBreadcrumbs([portfolio, portfolioItem]);\n\n  const fetchData = (portfolioId) => {\n    stateDispatch({ type: 'setIsFetching', payload: true });\n    return Promise.all([\n      dispatch(isStandalone() ? fetchPlatformsS() : fetchPlatforms()),\n      dispatch(\n        isStandalone()\n          ? fetchSelectedPortfolioS(portfolioId)\n          : fetchSelectedPortfolio(portfolioId)\n      ),\n      dispatch(\n        isStandalone()\n          ? fetchPortfolioItemsWithPortfolioS(\n              portfolioId,\n              viewState?.portfolioItems\n            )\n          : fetchPortfolioItemsWithPortfolio(\n              portfolioId,\n              viewState?.portfolioItems\n            )\n      )\n    ])\n      .then((data) => {\n        if (isMounted.current) {\n          stateDispatch({ type: 'setIsFetching', payload: false });\n        }\n\n        return data;\n      })\n      .catch(() => stateDispatch({ type: 'setIsFetching', payload: false }));\n  };\n\n  useEffect(() => {\n    fetchData(id);\n    scrollToTop();\n\n    return () => {\n      resetBreadcrumbs();\n      dispatch(\n        isStandalone() ? resetSelectedPortfolioS() : resetSelectedPortfolio()\n      );\n    };\n  }, []);\n\n  useEffect(() => {\n    if (\n      isMounted.current === true &&\n      !state.isFetching &&\n      history.location.pathname === PORTFOLIO_ROUTE\n    ) {\n      fetchData(id);\n      scrollToTop();\n    }\n  }, [id, history.location.pathname]);\n\n  const handleCopyPortfolio = () => {\n    stateDispatch({ type: 'setCopyInProgress', payload: true });\n    return dispatch(isStandalone() ? copyPortfolioS(id) : copyPortfolio(id))\n      .then(({ id }) =>\n        history.push({\n          pathname: PORTFOLIO_ROUTE,\n          search: `?portfolio=${id}`\n        })\n      )\n      .then(() => stateDispatch({ type: 'setCopyInProgress', payload: false }))\n      .then(() => dispatch(isStandalone() ? fetchPortfoliosS : fetchPortfolios))\n      .catch(() =>\n        stateDispatch({ type: 'setCopyInProgress', payload: false })\n      );\n  };\n\n  const removeProducts = (products) => {\n    stateDispatch({ type: 'setRemoveInProgress', payload: true });\n    dispatch(\n      isStandalone()\n        ? removeProductsFromPortfolioS(\n            products,\n            portfolio.name,\n            state.firstSelectedProduct\n          )\n        : removeProductsFromPortfolio(\n            products,\n            portfolio.name,\n            state.firstSelectedProduct\n          )\n    )\n      .then(() => stateDispatch({ type: 'removeSucessfull' }))\n      .catch(() =>\n        stateDispatch({ type: 'setRemoveInProgress', payload: false })\n      );\n  };\n\n  const handleFilterChange = (filter) => {\n    stateDispatch({ type: 'setFilterValue', payload: filter });\n    debouncedFilter(\n      id,\n      dispatch,\n      (isFiltering) =>\n        stateDispatch({ type: 'setFilteringFlag', payload: isFiltering }),\n      {\n        ...meta,\n        offset: 0,\n        filter\n      }\n    );\n  };\n\n  const routes = {\n    portfolioRoute: url,\n    addProductsRoute: `${url}/add-products`,\n    editPortfolioRoute: `${url}/edit-portfolio`,\n    removePortfolioRoute: `${url}/remove-portfolio`,\n    sharePortfolioRoute: `${url}/share-portfolio`,\n    workflowPortfolioRoute: `${url}/edit-workflow`,\n    portfolioItemRoute: `${url}/portfolio-item`\n  };\n\n  if (portfolio.metadata?.user_capabilities?.show === false) {\n    return <UnauthorizedRedirect />;\n  }\n\n  return (\n    <Suspense\n      fallback={\n        <PortfolioSuspenseFallback\n          fromProducts={fromProducts === 'true'}\n          title={portfolio.name}\n          description={portfolio.description}\n        />\n      }\n    >\n      <Switch>\n        <CatalogRoute\n          path={routes.addProductsRoute}\n          userCapabilities={portfolio.metadata?.user_capabilities}\n          requiredCapabilities=\"update\"\n        >\n          <AddProductsToPortfolio portfolioRoute={routes.portfolioRoute} />\n        </CatalogRoute>\n        <Route path={routes.portfolioItemRoute}>\n          <PortfolioItemDetail portfolioLoaded={!state?.isFetching} />\n        </Route>\n        <Route path={routes.portfolioRoute}>\n          <PortfolioItems\n            routes={routes}\n            fromProducts={fromProducts === 'true'}\n            handleFilterChange={handleFilterChange}\n            removeProducts={(products) => removeProducts(products)}\n            copyPortfolio={handleCopyPortfolio}\n            state={state}\n            stateDispatch={stateDispatch}\n          />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Portfolio;\n","export const toggleArraySelection = (items: string[], item: string): string[] =>\n  items.includes(item)\n    ? [\n        ...items.slice(0, items.indexOf(item)),\n        ...items.slice(items.indexOf(item) + 1)\n      ]\n    : [...items, item];\n","import { useRef, useEffect } from 'react';\n\nconst useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => (isMounted.current = false);\n  }, []);\n  return isMounted;\n};\n\nexport default useIsMounted;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\n\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst BackToProducts: React.ComponentType = () => {\n  const formatMessage = useFormatMessage();\n  return (\n    <div className=\"pf-u-mb-md\">\n      <AngleLeftIcon className=\"pf-u-mr-sm\" />\n      <Button\n        variant=\"link\"\n        ouiaId={'back-to-products'}\n        component={() => (\n          <CatalogLink pathname=\"/products\">\n            {formatMessage(portfolioMessages.backToProducts)}\n          </CatalogLink>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default BackToProducts;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { useLocation } from 'react-router-dom';\nimport useEnhancedHistory from '../../utilities/use-enhanced-history';\n\nexport interface AppTabsProps {\n  tabItems: {\n    name: string;\n    eventKey: number;\n    title: string;\n    disabled?: boolean;\n  }[];\n}\nconst AppTabs: React.ComponentType<AppTabsProps> = ({ tabItems }) => {\n  const { push } = useEnhancedHistory();\n  const { pathname, search } = useLocation();\n  const activeTab = tabItems.find(({ name }) => pathname.includes(name));\n  const handleTabClick = (\n    _event: React.MouseEvent<HTMLElement, MouseEvent>,\n    tabIndex: number | string\n  ) => push({ pathname: tabItems[tabIndex as number].name, search });\n\n  return (\n    <Tabs\n      activeKey={activeTab ? activeTab.eventKey : 0}\n      onSelect={handleTabClick}\n    >\n      {tabItems.map((item) => (\n        <Tab\n          title={item.title}\n          key={item.eventKey}\n          eventKey={item.eventKey}\n          name={item.name}\n          disabled={item.disabled}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nexport default AppTabs;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport styled from 'styled-components';\nimport { SearchIcon, CloseIcon } from '@patternfly/react-icons';\nimport { ToolbarItem, TextInput } from '@patternfly/react-core';\n\nconst FilterInputGroup = styled.div`\n  position: relative;\n  width: 300px;\n  height: 36px;\n`;\n\nconst FilterInput = styled(TextInput)`\n  position: absolute;\n  width: 300px;\n  padding-right: 34px;\n  background: transparent;\n`;\n\nconst FilterIconsContainer = styled.span`\n  position: absolute;\n  right: 8px;\n  top: 8px;\n`;\n\nconst StyledCloseIcon = styled(CloseIcon)`\n  z-index: 1000;\n  fill: #72767b;\n  :hover {\n    fill: var(--pf-global--Color--100);\n    cursor: pointer;\n  }\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  z-index: 1000;\n  fill: #72767b;\n`;\n\nexport interface FilterToolbarItemProps {\n  searchValue?: string;\n  onFilterChange: (value: string) => void;\n  placeholder?: string;\n  isClearable?: boolean;\n}\nconst FilterToolbarItem: React.ComponentType<FilterToolbarItemProps> = ({\n  searchValue = '',\n  onFilterChange,\n  placeholder,\n  isClearable = false,\n  ...rest\n}) => (\n  <ToolbarItem>\n    <FilterInputGroup>\n      <FilterInput\n        id=\"toolbar-filter\"\n        placeholder={placeholder}\n        value={searchValue}\n        type=\"text\"\n        onChange={onFilterChange}\n        aria-label={placeholder}\n        {...rest}\n      />\n      <FilterIconsContainer>\n        {(isClearable && searchValue && (\n          <StyledCloseIcon\n            width=\"16\"\n            height=\"16\"\n            onClick={() => onFilterChange('')}\n          />\n        )) || <StyledSearchIcon />}\n      </FilterIconsContainer>\n    </FilterInputGroup>\n  </ToolbarItem>\n);\n\nexport default FilterToolbarItem;\n","/* eslint-disable react/prop-types */\nimport React, { ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Label,\n  Level,\n  LevelItem,\n  ToolbarItem,\n  ToolbarContent,\n  ButtonProps,\n  LabelProps\n} from '@patternfly/react-core';\n\nimport FilterToolbarItem from '../presentational-components/shared/filter-toolbar-item';\nimport TopToolbar, {\n  TopToolbarTitle\n} from '../presentational-components/shared/top-toolbar';\nimport AppTabs from '../presentational-components/shared/app-tabs';\nimport CatalogLink from '../smart-components/common/catalog-link';\nimport {\n  StyledToolbar,\n  StyledToolbarGroup,\n  StyledToolbarProps\n} from '../presentational-components/styled-components/toolbars';\n\nexport interface ToolbarButtonProps extends Omit<ButtonProps, 'title'> {\n  title: ReactNode;\n}\n\nexport interface ToolbarLabelProps extends Omit<LabelProps, 'title'> {\n  title: ReactNode;\n}\n\nconst ToolbarButton: React.ComponentType<ToolbarButtonProps> = ({\n  title,\n  ...props\n}) => <Button {...props}>{title}</Button>;\n\nToolbarButton.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst ToolbarLabel: React.ComponentType<ToolbarLabelProps> = ({\n  title,\n  ...props\n}) => <Label {...props}>{title}</Label>;\n\nToolbarLabel.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst AppToolbar: React.ComponentType<StyledToolbarProps> = ({\n  children,\n  ...props\n}) => (\n  <StyledToolbar className=\"pf-u-p-0\" {...props}>\n    <ToolbarContent className=\"pf-u-pl-0\">{children}</ToolbarContent>\n  </StyledToolbar>\n);\nconst toolbarMapper = {\n  TopToolbar,\n  TopToolbarTitle,\n  Toolbar: AppToolbar,\n  ToolbarGroup: StyledToolbarGroup,\n  ToolbarItem,\n  FilterToolbarItem,\n  Link: CatalogLink,\n  Level,\n  LevelItem,\n  Button: ToolbarButton,\n  AppTabs,\n  Label: ToolbarLabel\n};\n\nexport const toolbarComponentTypes = {\n  TOP_TOOLBAR: 'TopToolbar',\n  TOP_TOOLBAR_TITLE: 'TopToolbarTitle',\n  TOOLBAR: 'Toolbar',\n  TOOLBAR_ITEM: 'ToolbarItem',\n  TOOLBAR_GROUP: 'ToolbarGroup',\n  FILTER_TOOLBAR_ITEM: 'FilterToolbarItem',\n  LINK: 'Link',\n  BUTTON: 'Button',\n  LEVEL: 'Level',\n  LEVEL_ITEM: 'LevelItem',\n  TABS: 'AppTabs',\n  LABEL: 'Label'\n};\n\nexport default toolbarMapper;\n","/* eslint-disable react/prop-types */\nimport React, { createContext, ReactNode } from 'react';\nimport toolbarMapper, { toolbarComponentTypes } from './toolbar-mapper';\nimport { AnyObject, ValueOf } from '../types/common-types';\n\nexport interface ToolbarField extends AnyObject {\n  component:\n    | ValueOf<typeof toolbarMapper>\n    | React.ComponentType\n    | ValueOf<typeof toolbarComponentTypes>;\n  hidden?: boolean;\n  fields?: ToolbarField[];\n  key: string;\n}\n\nexport interface ToolbarSchema {\n  fields: ToolbarField[];\n}\n\nconst ToolbarContext = createContext<{\n  render?: (fields: ToolbarField[]) => ReactNode;\n  componentMapper?: typeof toolbarMapper;\n}>({});\n\ninterface ComponentProps extends AnyObject {\n  component:\n    | ValueOf<typeof toolbarMapper>\n    | React.ComponentType\n    | ValueOf<typeof toolbarComponentTypes>;\n}\nconst Component: React.ComponentType<ComponentProps> = ({\n  component,\n  ...props\n}) => (\n  <ToolbarContext.Consumer>\n    {({ componentMapper }) => {\n      const C =\n        typeof component === 'string'\n          ? componentMapper &&\n            componentMapper[component as keyof typeof toolbarMapper]\n          : (component as React.ComponentType<any>);\n      return C ? <C {...props} /> : null;\n    }}\n  </ToolbarContext.Consumer>\n);\n\nconst render = (fields: ToolbarField[]): React.ReactNode =>\n  fields.map(({ hidden, fields, key, ...field }) =>\n    hidden ? null : fields ? (\n      <Component key={key} {...field}>\n        {render(fields)}\n      </Component>\n    ) : (\n      <Component key={key} {...field} />\n    )\n  );\n\nexport interface ToolbarRendererProps {\n  schema: ToolbarSchema;\n  componentMapper?: typeof toolbarMapper;\n}\nconst ToolbarRenderer: React.ComponentType<ToolbarRendererProps> = ({\n  schema,\n  componentMapper = toolbarMapper\n}) => (\n  <ToolbarContext.Provider value={{ render, componentMapper }}>\n    {render(schema.fields)}\n  </ToolbarContext.Provider>\n);\n\nexport default ToolbarRenderer;\n","import {\n  PORTFOLIOS_ROUTE,\n  PORTFOLIO_ROUTE,\n  PORTFOLIO_ITEM_ROUTE,\n  ORDER_ROUTE,\n  PLATFORM_ROUTE,\n  PLATFORM_SERVICE_OFFERINGS_ROUTE,\n  PLATFORMS_ROUTE,\n  ORDERS_ROUTE,\n  EDIT_SURVEY_ROUTE,\n  ADD_PRODUCTS_ROUTE,\n  PORTFOLIO_ITEM_ROUTE_EDIT\n} from '../../constants/routes';\nimport { PortfolioReducerState } from '../../redux/reducers/portfolio-reducer';\nimport { ReactNode } from 'react';\nimport { PlatformReducerState } from '../../redux/reducers/platform-reducer';\nimport { OrderReducerState } from '../../redux/reducers/order-reducer';\n\nexport const BASE_PORTFOLIO_FRAGMENTS = [\n  {\n    title: 'Portfolios',\n    pathname: PORTFOLIOS_ROUTE,\n    searchParams: {}\n  }\n];\n\nexport const ENTITIES_EXTRA_PARAMS = {\n  'portfolio-item': ['source', 'portfolio'],\n  'edit-survey': ['source', 'portfolio', 'portfolio-item']\n};\n\nexport const FRAGMENT_TITLE = {\n  [PORTFOLIO_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.selectedPortfolio.name,\n  [PORTFOLIO_ITEM_ROUTE]: (\n    getState: () => { portfolioReducer: PortfolioReducerState }\n  ): ReactNode => getState().portfolioReducer.portfolioItem.portfolioItem.name,\n  [EDIT_SURVEY_ROUTE]: (): string => 'Edit survey',\n  [ADD_PRODUCTS_ROUTE]: (): string => 'Add products',\n  [PLATFORM_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.selectedPlatform.name,\n  [PLATFORM_SERVICE_OFFERINGS_ROUTE]: (\n    getState: () => { platformReducer: PlatformReducerState }\n  ): ReactNode => getState().platformReducer.serviceOffering.service.name,\n  [ORDER_ROUTE]: (\n    getState: () => { orderReducer: OrderReducerState }\n  ): ReactNode => {\n    const { portfolioItem, order } = getState().orderReducer.orderDetail;\n    return `${portfolioItem.name} # ${order.id}`;\n  },\n  [PORTFOLIO_ITEM_ROUTE_EDIT]: (): string => 'Edit product'\n};\n\nexport const FRAGMENT_PREFIX = {\n  [PORTFOLIO_ROUTE]: {\n    pathname: PORTFOLIOS_ROUTE,\n    title: 'Portfolios',\n    searchParams: {}\n  },\n  [PLATFORM_ROUTE]: {\n    pathname: PLATFORMS_ROUTE,\n    title: 'Platforms',\n    searchParams: {}\n  },\n  [ORDER_ROUTE]: {\n    pathname: ORDERS_ROUTE,\n    title: 'Orders',\n    searchParams: {}\n  }\n};\n","import { INITIALIZE_BREADCRUMBS } from '../action-types';\nimport {\n  FRAGMENT_TITLE,\n  ENTITIES_EXTRA_PARAMS,\n  FRAGMENT_PREFIX\n} from '../../helpers/shared/breadcrumbs-creators';\nimport { Dispatch } from 'redux';\nimport { BreadcrumbFragment } from '../reducers/breadcrumbs-reducer';\nimport { GetReduxState } from '../../types/redux';\nimport { AnyObject, ReduxAction } from '../../types/common-types';\n\nexport const createBreadcrumbsFromLocations = (\n  pathname = '',\n  search: AnyObject = {}\n) => (\n  dispatch: Dispatch,\n  getState: GetReduxState\n): ReduxAction<BreadcrumbFragment[]> => {\n  if (pathname.length === 0) {\n    return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: [] });\n  }\n\n  const prefix: string[] = [];\n  if (pathname === '/portfolios/portfolio') {\n    prefix.push('/portfolios');\n  }\n\n  if (pathname.startsWith('/portfolios/portfolio/portfolio-item')) {\n    prefix[0] = '/portfolios';\n    prefix[1] = '/portfolio';\n    if (pathname.startsWith('/portfolios/portfolio/portfolio-item/')) {\n      prefix[2] = '/portfolio-item';\n    }\n  }\n\n  if (pathname.startsWith('/platforms/platform')) {\n    prefix[0] = '/platforms';\n  }\n\n  pathname = pathname.replace(prefix[0], '');\n  let result = pathname\n    .replace(/^\\//, '')\n    .split('/')\n    .reduce<BreadcrumbFragment[]>((acc, curr, index) => {\n      const pathname = `${\n        index > 0 && acc[index - 1] ? acc[index - 1].pathname : ''\n      }${prefix[index]}/${curr}`;\n      const generateTitle = (FRAGMENT_TITLE[\n        pathname as keyof typeof FRAGMENT_TITLE\n      ] as unknown) as (getState: GetReduxState) => string;\n      if (!generateTitle) {\n        return acc;\n      }\n\n      const searchParams = {\n        ...(index > 0 && acc[index - 1]?.searchParams),\n        ...(search[curr] ? { [curr]: search[curr] } : {})\n      };\n      if ((ENTITIES_EXTRA_PARAMS as AnyObject)[curr]) {\n        (ENTITIES_EXTRA_PARAMS as AnyObject)[curr].forEach((key: string) => {\n          searchParams[key] = search[key];\n        });\n      }\n\n      if ((FRAGMENT_PREFIX as AnyObject)[pathname]) {\n        acc = [(FRAGMENT_PREFIX as AnyObject)[pathname]];\n      }\n\n      const currTitle = generateTitle(getState);\n\n      return !currTitle\n        ? acc\n        : [\n            ...acc,\n            {\n              pathname,\n              searchParams,\n              title: currTitle\n            }\n          ];\n    }, []);\n  if (result.length > 0 && (FRAGMENT_PREFIX as AnyObject)[result[0].pathname]) {\n    result = [(FRAGMENT_PREFIX as AnyObject)[result[0].pathname], ...result];\n  }\n\n  // if portfolio item, add the 2 breadcrumbs\n  return dispatch({ type: INITIALIZE_BREADCRUMBS, payload: result });\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createBreadcrumbsFromLocations } from '../redux/actions/breadcrumbs-actions';\nimport { INITIALIZE_BREADCRUMBS } from '../redux/action-types';\nimport { AnyObject, ReduxAction } from '../types/common-types';\nimport { AnyAction } from 'redux';\n\nconst useBreadcrumbs = (\n  updateTriggers: any[] = []\n):\n  | (() => ReduxAction<{\n      type: typeof INITIALIZE_BREADCRUMBS;\n    }>)\n  | ReduxAction<{ type: typeof INITIALIZE_BREADCRUMBS }> => {\n  const dispatch = useDispatch();\n  const { pathname, search } = useLocation();\n  if (updateTriggers.length === 0) {\n    return dispatch(\n      (createBreadcrumbsFromLocations('', {}) as unknown) as AnyAction\n    );\n  }\n\n  const searchParams = new URLSearchParams(search);\n  const searchObject: AnyObject = {};\n  searchParams.forEach((value, key) => {\n    searchObject[key] = value;\n  });\n\n  useEffect(() => {\n    dispatch(createBreadcrumbsFromLocations(pathname, searchObject));\n  }, [pathname, ...updateTriggers]);\n\n  return () =>\n    dispatch((createBreadcrumbsFromLocations('', {}) as unknown) as AnyAction);\n};\n\nexport default useBreadcrumbs;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","_a","className","title","pageHeaderTitleClasses","Title","headingLevel","size","PortfolioSuspenseFallback","fromProducts","description","schema","fields","component","toolbarComponentTypes","breadcrumbs","key","BackToProducts","hidden","propTypes","PropTypes","PortfolioItems","lazy","PortfolioItemDetail","AddProductsToPortfolio","initialState","selectedItems","firstSelectedProduct","undefined","removeInProgress","filterValue","copyInProgress","isFetching","isFiltering","debouncedFilter","asyncFormValidator","value","dispatch","filteringCallback","meta","isStandalone","fetchPortfolioItemsWithPortfolioS","fetchPortfolioItemsWithPortfolio","then","porftolioUiReducer","state","items","item","type","payload","selectItem","selectedItem","includes","slice","indexOf","product","setRemoveInProgress","removeSuccessful","setFilterValue","setCopyInProgress","setIsFetching","setFilteringFlag","viewState","useInitialUriHash","useReducer","portfolioItems","filter","stateDispatch","useQuery","searchParams","id","portfolio","url","useRouteMatch","PORTFOLIO_ROUTE","history","useHistory","useDispatch","isMounted","useIsMounted","useSelector","portfolioReducer","selectedPortfolio","portfolioItem","resetBreadcrumbs","useBreadcrumbs","fetchData","portfolioId","Promise","all","fetchPlatformsS","fetchPlatforms","fetchSelectedPortfolioS","fetchSelectedPortfolio","data","current","useEffect","scrollToTop","resetSelectedPortfolioS","resetSelectedPortfolio","location","pathname","routes","portfolioRoute","addProductsRoute","editPortfolioRoute","removePortfolioRoute","sharePortfolioRoute","workflowPortfolioRoute","portfolioItemRoute","metadata","user_capabilities","show","Suspense","fallback","Switch","path","userCapabilities","requiredCapabilities","Route","portfolioLoaded","handleFilterChange","offset","removeProducts","products","removeProductsFromPortfolioS","removeProductsFromPortfolio","copyPortfolio","copyPortfolioS","push","search","fetchPortfoliosS","fetchPortfolios","useRef","formatMessage","Button","variant","ouiaId","tabItems","useLocation","activeTab","find","Tabs","activeKey","eventKey","onSelect","_event","tabIndex","map","Tab","disabled","FilterInputGroup","FilterInput","TextInput","FilterIconsContainer","StyledCloseIcon","CloseIcon","StyledSearchIcon","SearchIcon","ToolbarButton","props","ToolbarLabel","Label","toolbarMapper","TopToolbar","TopToolbarTitle","Toolbar","children","ToolbarContent","ToolbarGroup","ToolbarItem","FilterToolbarItem","searchValue","onFilterChange","placeholder","isClearable","rest","onChange","onClick","Link","Level","LevelItem","AppTabs","TOP_TOOLBAR","TOP_TOOLBAR_TITLE","TOOLBAR","TOOLBAR_ITEM","TOOLBAR_GROUP","FILTER_TOOLBAR_ITEM","LINK","BUTTON","LEVEL","LEVEL_ITEM","TABS","LABEL","ToolbarContext","createContext","Component","Consumer","componentMapper","C","render","field","Provider","ENTITIES_EXTRA_PARAMS","FRAGMENT_TITLE","getState","platformReducer","selectedPlatform","serviceOffering","service","orderReducer","orderDetail","order","FRAGMENT_PREFIX","createBreadcrumbsFromLocations","length","prefix","startsWith","result","replace","split","reduce","acc","curr","index","generateTitle","forEach","currTitle","updateTriggers","URLSearchParams","searchObject"],"sourceRoot":""}