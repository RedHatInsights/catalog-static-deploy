{"version":3,"file":"js/products.4325037e180861de93c5.js","mappings":"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","sources":["webpack:///./src/toolbar/schemas/products-toolbar.schema.js","webpack:///./src/messages/products.messages.ts","webpack:///./src/smart-components/products/products.js"],"sourcesContent":["import { toolbarComponentTypes } from '../toolbar-mapper';\n\nimport AsyncPagination from '../../smart-components/common/async-pagination';\n\nconst createPortfolioToolbarSchema = ({\n  meta,\n  fetchProducts,\n  isLoading,\n  filterProps: { searchValue, onFilterChange, placeholder }\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      key: 'products-top-toolbar',\n      fields: [\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'products-toolbar-title',\n          title: 'Products',\n          description: 'All products collected from your portfolios',\n          noData: meta.noData\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'Products-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'main-portfolio-toolbar',\n                  fields: [\n                    {\n                      groupName: 'filter-group',\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      key: 'filter-input',\n                      searchValue,\n                      onFilterChange,\n                      placeholder,\n                      isClearable: true\n                    }\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            key: 'products-pagination',\n                            meta,\n                            apiProps: searchValue,\n                            apiRequest: fetchProducts,\n                            isDisabled: isLoading,\n                            isCompact: true\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","import { defineMessages } from 'react-intl';\n\nconst productsMessages = defineMessages({\n  addSource: {\n    id: 'products.empty.add-source',\n    defaultMessage: 'Add source'\n  },\n  configureSource: {\n    id: 'products.empty.configure-source',\n    defaultMessage: 'Configure a source and add products into portfolios.'\n  },\n  title: {\n    id: 'products.toolbar.title',\n    defaultMessage: 'Products'\n  }\n});\n\nexport default productsMessages;\n","import React, { useContext, useEffect, useReducer, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { WrenchIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport { fetchPortfolioItems } from '../../redux/actions/portfolio-actions';\nimport { fetchPortfolioItems as fetchPortfolioItemsS } from '../../redux/actions/portfolio-actions-s';\nimport { scrollToTop } from '../../helpers/shared/helpers';\nimport PortfolioItem from '../portfolio/portfolio-item';\nimport createProductsToolbarSchema from '../../toolbar/schemas/products-toolbar.schema';\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport { defaultSettings } from '../../helpers/shared/pagination';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport { fetchPlatforms } from '../../redux/actions/platform-actions';\nimport { fetchPlatforms as fetchPlatformsS } from '../../redux/actions/platform-actions-s';\nimport asyncFormValidator from '../../utilities/async-form-validator';\nimport ContentGalleryEmptyState from '../../presentational-components/shared/content-gallery-empty-state';\nimport {\n  Button,\n  TextContent,\n  Text,\n  TextVariants\n} from '@patternfly/react-core';\nimport AppContext from '../../app-context';\nimport AsyncPagination from '../common/async-pagination';\nimport { PORTFOLIO_ITEM_ROUTE } from '../../constants/routes';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useInitialUriHash from '../../routing/use-initial-uri-hash';\nimport UserContext from '../../user-context';\nimport filteringMessages from '../../messages/filtering.messages';\nimport productsMessages from '../../messages/products.messages';\nimport platformsMessages from '../../messages/platforms.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst debouncedFilter = asyncFormValidator(\n  (value, dispatch, filteringCallback) => {\n    filteringCallback(true);\n    dispatch(\n      window.catalog?.standalone\n        ? fetchPortfolioItemsS(value, defaultSettings)\n        : fetchPortfolioItems(value, defaultSettings)\n    ).then(() => filteringCallback(false));\n  },\n  1000\n);\n\nconst buildItemLink = ({ portfolio_id, id, service_offering_source_ref }) => {\n  if (portfolio_id && id && service_offering_source_ref) {\n    return {\n      pathname: portfolio_id && PORTFOLIO_ITEM_ROUTE,\n      searchParams: {\n        portfolio: portfolio_id,\n        'portfolio-item': id,\n        source: service_offering_source_ref,\n        'from-products': 'true'\n      }\n    };\n  }\n\n  return {};\n};\n\nconst initialState = {\n  filterValue: '',\n  isOpen: false,\n  isFetching: true,\n  isFiltering: false\n};\n\nconst productsState = (state, action) => {\n  switch (action.type) {\n    case 'setFetching':\n      return { ...state, isFetching: action.payload };\n    case 'setFilterValue':\n      return { ...state, filterValue: action.payload };\n    case 'setFilteringFlag':\n      return { ...state, isFiltering: action.payload };\n  }\n\n  return state;\n};\n\nconst Products = () => {\n  const formatMessage = useFormatMessage();\n  const viewState = useInitialUriHash();\n  const { release } = useContext(AppContext);\n  const [{ isFetching, filterValue, isFiltering }, stateDispatch] = useReducer(\n    productsState,\n    {\n      ...initialState,\n      filterValue: viewState?.products?.filter || ''\n    }\n  );\n  const {\n    userIdentity: {\n      identity: {\n        user: { is_org_admin }\n      }\n    }\n  } = useContext(UserContext);\n  const dispatch = useDispatch();\n  const products = useSelector(\n    ({ portfolioReducer: { portfolioItems } }) => portfolioItems\n  );\n  const meta = products.meta || { count: products.count };\n  const data = products.data || products.results;\n  useEffect(() => {\n    Promise.all([\n      dispatch(\n        window.catalog?.standalone\n          ? fetchPortfolioItemsS(\n              viewState?.products?.filter,\n              viewState?.products\n            )\n          : fetchPortfolioItems(\n              viewState?.products?.filter,\n              viewState?.products\n            )\n      ),\n      dispatch(window.catalog?.standalone ? fetchPlatformsS() : fetchPlatforms)\n    ]).then(() => stateDispatch({ type: 'setFetching', payload: false }));\n    scrollToTop();\n  }, []);\n\n  const handleFilterItems = (value) => {\n    stateDispatch({ type: 'setFilterValue', payload: value });\n    debouncedFilter(value, dispatch, (isFiltering) =>\n      stateDispatch({ type: 'setFilteringFlag', payload: isFiltering })\n    );\n  };\n\n  const galleryItems = data.map((item) => (\n    <PortfolioItem\n      key={item.id}\n      pathname={item.portfolio_id && PORTFOLIO_ITEM_ROUTE}\n      {...buildItemLink(item)}\n      {...item}\n      toDisplay={[]}\n    />\n  ));\n\n  const SourcesAction = () =>\n    is_org_admin && (\n      <a href={`${release}settings/sources/new`}>\n        <Button ouiaId={'add-source'} variant=\"primary\">\n          {formatMessage(productsMessages.addSource)}\n        </Button>\n      </a>\n    );\n\n  const FilterAction = () => (\n    <Button\n      ouiaId={'clear-filter'}\n      variant=\"link\"\n      onClick={() => handleFilterItems('')}\n    >\n      {formatMessage(filteringMessages.clearFilters)}\n    </Button>\n  );\n\n  const renderEmptyStateDescription = () => (\n    <Fragment>\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {meta.noData\n            ? formatMessage(productsMessages.configureSource)\n            : formatMessage(filteringMessages.noResultsDescription)}\n        </Text>\n        {is_org_admin ? (\n          <Text component={TextVariants.p}>\n            {formatMessage(platformsMessages.connectSource, {\n              // eslint-disable-next-line react/display-name\n              a: (chunks) => (\n                <Fragment>\n                  <a href={`${document.baseURI}settings/sources`}>{chunks}</a>\n                </Fragment>\n              )\n            })}\n          </Text>\n        ) : (\n          <Text>{formatMessage(platformsMessages.contactAdmin)}</Text>\n        )}\n      </TextContent>\n    </Fragment>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? SourcesAction : FilterAction,\n    title: meta.noData\n      ? formatMessage(filteringMessages.noProducts)\n      : formatMessage(filteringMessages.noResults),\n    renderDescription: renderEmptyStateDescription,\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createProductsToolbarSchema({\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterItems,\n            placeholder: formatMessage(filteringMessages.filterByProduct)\n          },\n          title: formatMessage(productsMessages.title),\n          isLoading: isFiltering || isFetching,\n          meta,\n          fetchProducts: window.catalog?.standalone\n            ? (...args) => dispatch(fetchPortfolioItemsS(...args))\n            : (...args) => dispatch(fetchPortfolioItems(...args))\n        })}\n      />\n      <ContentGallery\n        isLoading={isFiltering || isFetching}\n        items={galleryItems}\n        renderEmptyState={() => (\n          <ContentGalleryEmptyState {...emptyStateProps} />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiRequest={(_e, options) =>\n              dispatch(\n                window.catalog?.standalone\n                  ? fetchPortfolioItemsS(viewState?.products?.filter, options)\n                  : fetchPortfolioItems(viewState?.products?.filter, options)\n              )\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Products;\n"],"names":["meta","fetchProducts","isLoading","filterProps","searchValue","onFilterChange","placeholder","fields","component","toolbarComponentTypes","key","title","description","noData","groupName","isClearable","count","AsyncPagination","apiProps","apiRequest","isDisabled","isCompact","addSource","id","defaultMessage","configureSource","debouncedFilter","asyncFormValidator","value","dispatch","filteringCallback","window","catalog","standalone","fetchPortfolioItemsS","defaultSettings","fetchPortfolioItems","then","initialState","filterValue","isOpen","isFetching","isFiltering","productsState","state","action","type","payload","formatMessage","useFormatMessage","viewState","useInitialUriHash","release","useContext","AppContext","useReducer","products","filter","stateDispatch","is_org_admin","UserContext","userIdentity","identity","user","useDispatch","useSelector","portfolioReducer","portfolioItems","data","results","useEffect","Promise","all","fetchPlatformsS","fetchPlatforms","scrollToTop","handleFilterItems","galleryItems","map","item","pathname","portfolio_id","PORTFOLIO_ITEM_ROUTE","service_offering_source_ref","searchParams","portfolio","source","toDisplay","emptyStateProps","PrimaryAction","href","Button","ouiaId","variant","productsMessages","onClick","filteringMessages","renderDescription","Fragment","TextContent","Text","TextVariants","platformsMessages","a","chunks","document","baseURI","Icon","WrenchIcon","SearchIcon","schema","createProductsToolbarSchema","items","renderEmptyState","dropDirection","_e","options"],"sourceRoot":""}