{"version":3,"sources":["webpack:///./src/toolbar/schemas/portfolio-toolbar.schema.js","webpack:///./src/smart-components/portfolio/portfolio-empty-state.js","webpack:///./src/smart-components/portfolio/portfolio-items.js","webpack:///./src/presentational-components/shared/bottom-pagination-container.tsx","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack:///./src/presentational-components/shared/service-offering-body.tsx","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Checkbox/Checkbox.js","webpack:///./src/presentational-components/shared/card-checkbox.tsx","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardHeader.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/wrench-icon.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./src/smart-components/portfolio/portfolio-item.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Card/CardFooter.js","webpack:///./src/toolbar/helpers.js"],"names":["PortfolioActionsToolbar","editPortfolioRoute","workflowPortfolioRoute","removePortfolioRoute","copyInProgress","copyPortfolio","userCapabilities","copy","destroy","update","set_approval","canLinkOrderProcesses","useState","isOpen","setOpen","formatMessage","useFormatMessage","dropdownItems","push","DropdownItem","aria-label","key","id","component","preserveSearch","pathname","role","onClick","orderProcessAction","orderProcessesMessages","setOrderProcess","NESTED_EDIT_ORDER_PROCESS_ROUTE","className","length","Dropdown","onSelect","position","DropdownPosition","right","toggle","KebabToggle","onToggle","isDisabled","isPlain","propTypes","PropTypes","string","isRequired","func","bool","shape","createPortfolioToolbarSchema","title","addProductsRoute","sharePortfolioRoute","isLoading","removeProducts","itemsSelected","meta","fetchPortfolioItemsWithPortfolio","portfolioId","description","fromProducts","filterProps","searchValue","onFilterChange","placeholder","share","unshare","fields","toolbarComponentTypes","TOP_TOOLBAR","breadcrumbs","hidden","BackToProducts","TOP_TOOLBAR_TITLE","noData","TOOLBAR","noWrap","createLinkButton","variant","TOOLBAR_ITEM","LEVEL","groupName","FILTER_TOOLBAR_ITEM","isClearable","count","BUTTON","LEVEL_ITEM","AsyncPagination","apiRequest","apiProps","isCompact","PortfolioEmptyState","url","handleFilterChange","emptyStateProps","PrimaryAction","label","portfolioMessages","addProducts","hasPermission","Button","filteringMessages","clearFilters","noProducts","noResults","emptyNoProducts","noResultsDescription","Icon","WrenchIcon","SearchIcon","PortfolioItems","routes","stateDispatch","state","removeInProgress","isFetching","isFiltering","selectedItems","filterValue","useSelector","portfolioReducer","portfolioItems","data","selectedPortfolio","name","metadata","user_capabilities","useRouteMatch","PORTFOLIO_ROUTE","useQuery","portfolio","dispatch","useDispatch","userPermissions","useContext","UserContext","permissions","items","map","item","searchParams","source","service_offering_source_ref","isSelectable","selectedItem","type","payload","product","isSelected","includes","schema","filterByProduct","renderEmptyState","dropDirection","portfolioRoute","arrayOf","children","props","objectWithoutPropertiesLoose","module","exports","excluded","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","distributor","portfolioName","h3","small","toDisplay","defaultOnChange","super","this","handleChange","event","onChange","currentTarget","checked","_a","ariaLabel","isValid","isChecked","defaultChecked","checkedProps","check","assign","checkInput","disabled","ref","elem","indeterminate","checkLabel","modifiers","htmlFor","checkDescription","displayName","defaultProps","handleCheck","stopPropagation","defineProperty","value","CardHeader","tslib_1","React","__importStar","react_styles_1","card_1","__importDefault","__rest","createElement","css","default","cardHeader","__esModule","WrenchIconConfig","height","width","svgPath","yOffset","xOffset","createIcon","sourceKeys","keys","StyledLevel","styled","Level","PortfolioItem","src","CATALOG_API_BASE","sourceId","platformId","orderUrl","portfolio_id","CardFooter","Component","cardFooter","LINK"],"mappings":"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","file":"js/69.2f729d421862e6e0c56b.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dropdown,\n  DropdownPosition,\n  KebabToggle,\n  DropdownItem\n} from '@patternfly/react-core';\n\nimport { toolbarComponentTypes } from '../toolbar-mapper';\nimport { createLinkButton } from '../helpers';\nimport AsyncPagination from '../../smart-components/common/async-pagination';\nimport CatalogLink from '../../smart-components/common/catalog-link';\nimport BackToProducts from '../../presentational-components/portfolio/back-to-products';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport orderProcessesMessages from '../../messages/order-processes.messages';\nimport { NESTED_EDIT_ORDER_PROCESS_ROUTE } from '../../constants/routes';\n\n/**\n * Cannot be anonymous function. Requires Component.displayName to work with PF4 refs\n */\nconst PortfolioActionsToolbar = ({\n  editPortfolioRoute,\n  workflowPortfolioRoute,\n  removePortfolioRoute,\n  copyInProgress,\n  copyPortfolio,\n  userCapabilities: { copy, destroy, update, set_approval },\n  canLinkOrderProcesses\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const formatMessage = useFormatMessage();\n  const dropdownItems = [];\n\n  if (update) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Edit Portfolio\"\n        key=\"edit-portfolio\"\n        id=\"edit-portfolio\"\n        component={\n          <CatalogLink\n            id=\"edit-portfolio\"\n            preserveSearch\n            pathname={editPortfolioRoute}\n          >\n            Edit\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (copy) {\n    dropdownItems.push(\n      <DropdownItem\n        component=\"button\"\n        aria-label=\"Copy Portfolio\"\n        key=\"copy-portfolio\"\n        id=\"copy-portfolio\"\n        onClick={copyPortfolio}\n      >\n        Copy\n      </DropdownItem>\n    );\n  }\n\n  if (set_approval) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Set approval workflow\"\n        key=\"set-approval-portfolio-action\"\n        id=\"set-approval-portfolio-action\"\n        component={\n          <CatalogLink preserveSearch pathname={workflowPortfolioRoute}>\n            Set approval\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (update && canLinkOrderProcesses) {\n    const orderProcessAction = formatMessage(\n      orderProcessesMessages.setOrderProcess\n    );\n    dropdownItems.push(\n      <DropdownItem\n        aria-label={orderProcessAction}\n        key=\"attach-order-processes\"\n        id=\"attach-order-processes\"\n        component={\n          <CatalogLink\n            preserveSearch\n            pathname={NESTED_EDIT_ORDER_PROCESS_ROUTE}\n          >\n            {orderProcessAction}\n          </CatalogLink>\n        }\n        role=\"link\"\n      />\n    );\n  }\n\n  if (destroy) {\n    dropdownItems.push(\n      <DropdownItem\n        aria-label=\"Remove Portfolio\"\n        key=\"delete-portfolio\"\n        id=\"delete-portfolio\"\n        component={\n          <CatalogLink preserveSearch pathname={removePortfolioRoute}>\n            Delete\n          </CatalogLink>\n        }\n        role=\"link\"\n        className=\"pf-c-dropdown__menu-item\"\n      />\n    );\n  }\n\n  return dropdownItems.length === 0 ? null : (\n    <Dropdown\n      className=\"pf-u-ml-md\"\n      onSelect={() => setOpen(false)}\n      position={DropdownPosition.right}\n      toggle={\n        <KebabToggle\n          id=\"toggle-portfolio-actions\"\n          onToggle={setOpen}\n          isDisabled={copyInProgress}\n        />\n      }\n      isOpen={isOpen}\n      isPlain\n      dropdownItems={dropdownItems}\n    />\n  );\n};\n\nPortfolioActionsToolbar.propTypes = {\n  removePortfolioRoute: PropTypes.string.isRequired,\n  editPortfolioRoute: PropTypes.string.isRequired,\n  workflowPortfolioRoute: PropTypes.string.isRequired,\n  copyPortfolio: PropTypes.func.isRequired,\n  copyInProgress: PropTypes.bool,\n  userCapabilities: PropTypes.shape({\n    copy: PropTypes.bool,\n    update: PropTypes.bool,\n    destroy: PropTypes.bool,\n    set_approval: PropTypes.bool\n  }).isRequired,\n  canLinkOrderProcesses: PropTypes.bool\n};\n\nconst createPortfolioToolbarSchema = ({\n  title,\n  addProductsRoute,\n  copyPortfolio,\n  sharePortfolioRoute,\n  editPortfolioRoute,\n  workflowPortfolioRoute,\n  removePortfolioRoute,\n  copyInProgress,\n  isLoading,\n  removeProducts,\n  itemsSelected,\n  meta,\n  fetchPortfolioItemsWithPortfolio,\n  portfolioId,\n  description,\n  fromProducts,\n  filterProps: { searchValue, onFilterChange, placeholder },\n  userCapabilities: { share, unshare, ...userCapabilities },\n  canLinkOrderProcesses\n}) => ({\n  fields: [\n    {\n      component: toolbarComponentTypes.TOP_TOOLBAR,\n      breadcrumbs: !fromProducts,\n      key: 'portfolio-top-toolbar',\n      fields: [\n        {\n          key: 'back-to-products',\n          hidden: !fromProducts,\n          component: BackToProducts\n        },\n        {\n          component: toolbarComponentTypes.TOP_TOOLBAR_TITLE,\n          key: 'portfolio-toolbar-title',\n          noData: meta.noData,\n          title,\n          description,\n          fields: [\n            {\n              component: toolbarComponentTypes.TOOLBAR,\n              key: 'portfolio-actions',\n              noWrap: true,\n              fields: [\n                createLinkButton({\n                  pathname: sharePortfolioRoute,\n                  preserveSearch: true,\n                  variant: 'secondary',\n                  title: 'Share',\n                  isDisabled: copyInProgress,\n                  key: 'portfolio-share-button',\n                  id: 'portfolio-share-button',\n                  hidden: !share && !unshare\n                }),\n                {\n                  component: toolbarComponentTypes.TOOLBAR_ITEM,\n                  key: 'portfolio-actions-dropdown-item',\n                  fields: [\n                    {\n                      component: PortfolioActionsToolbar,\n                      editPortfolioRoute,\n                      workflowPortfolioRoute,\n                      removePortfolioRoute,\n                      copyPortfolio,\n                      copyInProgress,\n                      userCapabilities,\n                      canLinkOrderProcesses,\n                      key: 'portfolio-actions-dropdown'\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          component: toolbarComponentTypes.LEVEL,\n          key: 'portfolio-items-actions',\n          fields: meta.noData\n            ? []\n            : [\n                {\n                  component: toolbarComponentTypes.TOOLBAR,\n                  key: 'portfolio-items-actions',\n                  fields: [\n                    {\n                      groupName: 'filter-portfolio-items',\n                      component: toolbarComponentTypes.FILTER_TOOLBAR_ITEM,\n                      isClearable: true,\n                      key: 'portfolio-items-filter',\n                      searchValue,\n                      onFilterChange,\n                      placeholder\n                    },\n                    {\n                      hidden: meta.count === 0 || !userCapabilities.update,\n                      groupName: 'add-portfolio-items',\n                      key: 'portfolio-items-add-group',\n                      ...createLinkButton({\n                        preserveSearch: true,\n                        pathname: addProductsRoute,\n                        isDisabled: isLoading || copyInProgress,\n                        variant: 'primary',\n                        title: 'Add',\n                        id: 'add-products-button',\n                        key: 'add-products-button'\n                      })\n                    },\n                    {\n                      component: toolbarComponentTypes.TOOLBAR_ITEM,\n                      key: 'remove-products-item',\n                      hidden: meta.count === 0 || !userCapabilities.update,\n                      fields: [\n                        {\n                          component: toolbarComponentTypes.BUTTON,\n                          groupName: 'remove-portfolio-items',\n                          variant: 'link',\n                          title: 'Remove',\n                          key: 'remove-products-button',\n                          id: 'remove-products-button',\n                          isDisabled: !itemsSelected,\n                          onClick: removeProducts\n                        }\n                      ]\n                    }\n                  ]\n                },\n                {\n                  component: toolbarComponentTypes.LEVEL_ITEM,\n                  key: 'pagination-item',\n                  fields:\n                    meta.count > 0\n                      ? [\n                          {\n                            component: AsyncPagination,\n                            key: 'portfolio-items-pagination',\n                            meta,\n                            apiRequest: fetchPortfolioItemsWithPortfolio,\n                            apiProps: portfolioId,\n                            isCompact: true\n                          }\n                        ]\n                      : []\n                }\n              ]\n        }\n      ]\n    }\n  ]\n});\n\nexport default createPortfolioToolbarSchema;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchIcon, WrenchIcon } from '@patternfly/react-icons';\n\nimport ContentGalleryEmptyState, {\n  EmptyStatePrimaryAction\n} from '../../presentational-components/shared/content-gallery-empty-state';\nimport { Button } from '@patternfly/react-core';\nimport filteringMessages from '../../messages/filtering.messages';\nimport portfolioMessages from '../../messages/portfolio.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\n\nconst PortfolioEmptyState = ({\n  url,\n  handleFilterChange,\n  meta,\n  userCapabilities: { update }\n}) => {\n  const formatMessage = useFormatMessage();\n  const NoDataAction = () => (\n    <EmptyStatePrimaryAction\n      url={url}\n      label={formatMessage(portfolioMessages.addProducts)}\n      id=\"add-products-to-portfolio\"\n      hasPermission={update}\n    />\n  );\n\n  const FilterAction = () => (\n    <Button\n      id=\"clear-portfolio-filter\"\n      variant=\"link\"\n      onClick={() => handleFilterChange('')}\n    >\n      {formatMessage(filteringMessages.clearFilters)}\n    </Button>\n  );\n\n  const emptyStateProps = {\n    PrimaryAction: meta.noData ? NoDataAction : FilterAction,\n    title: meta.noData\n      ? formatMessage(filteringMessages.noProducts)\n      : formatMessage(filteringMessages.noResults),\n    description: meta.noData\n      ? formatMessage(portfolioMessages.emptyNoProducts)\n      : formatMessage(filteringMessages.noResultsDescription),\n    Icon: meta.noData ? WrenchIcon : SearchIcon\n  };\n  return <ContentGalleryEmptyState {...emptyStateProps} />;\n};\n\nPortfolioEmptyState.propTypes = {\n  url: PropTypes.string.isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n  meta: PropTypes.shape({\n    noData: PropTypes.bool\n  }).isRequired,\n  userCapabilities: PropTypes.shape({\n    update: PropTypes.bool\n  }).isRequired\n};\n\nexport default PortfolioEmptyState;\n","import React, { Fragment, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ToolbarRenderer from '../../toolbar/toolbar-renderer';\nimport createPortfolioToolbarSchema from '../../toolbar/schemas/portfolio-toolbar.schema';\nimport PortfolioEmptyState from './portfolio-empty-state';\nimport ContentGallery from '../content-gallery/content-gallery';\nimport PortfolioItem from './portfolio-item';\nimport { fetchPortfolioItemsWithPortfolio } from '../../redux/actions/portfolio-actions';\nimport AsyncPagination from '../common/async-pagination';\nimport BottomPaginationContainer from '../../presentational-components/shared/bottom-pagination-container';\nimport useQuery from '../../utilities/use-query';\nimport { PORTFOLIO_ROUTE } from '../../constants/routes';\nimport filteringMessages from '../../messages/filtering.messages';\nimport useFormatMessage from '../../utilities/use-format-message';\nimport UserContext from '../../user-context';\nimport { hasPermission } from '../../helpers/shared/helpers';\n\nconst PortfolioItems = ({\n  routes,\n  handleFilterChange,\n  removeProducts,\n  copyPortfolio,\n  stateDispatch,\n  fromProducts,\n  state: {\n    removeInProgress,\n    isFetching,\n    isFiltering,\n    copyInProgress,\n    selectedItems,\n    filterValue\n  }\n}) => {\n  const formatMessage = useFormatMessage();\n  const { data, meta, name, description, userCapabilities } = useSelector(\n    ({\n      portfolioReducer: {\n        portfolioItems: { data, meta },\n        selectedPortfolio: {\n          name,\n          description,\n          metadata: { user_capabilities }\n        }\n      }\n    }) => ({\n      data,\n      meta,\n      name,\n      description,\n      userCapabilities: user_capabilities\n    })\n  );\n  const { url } = useRouteMatch(PORTFOLIO_ROUTE);\n  const [{ portfolio: id }] = useQuery(['portfolio']);\n  const dispatch = useDispatch();\n  const { permissions: userPermissions } = useContext(UserContext);\n  const canLinkOrderProcesses = hasPermission(userPermissions, [\n    'catalog:order_processes:link'\n  ]);\n\n  const items = data.map((item) => (\n    <PortfolioItem\n      key={item.id}\n      {...item}\n      pathname={`${url}/portfolio-item`}\n      searchParams={{\n        source: item.service_offering_source_ref,\n        'portfolio-item': item.id\n      }}\n      preserveSearch\n      isSelectable={userCapabilities.update}\n      onSelect={(selectedItem) =>\n        stateDispatch({\n          type: 'selectItem',\n          payload: { selectedItem, product: item }\n        })\n      }\n      isSelected={selectedItems.includes(item.id)}\n      removeInProgress={removeInProgress}\n    />\n  ));\n\n  return (\n    <Fragment>\n      <ToolbarRenderer\n        schema={createPortfolioToolbarSchema({\n          fromProducts,\n          filterProps: {\n            searchValue: filterValue,\n            onFilterChange: handleFilterChange,\n            placeholder: formatMessage(filteringMessages.filterByProduct)\n          },\n          title: name,\n          description,\n          ...routes,\n          copyPortfolio,\n          isLoading: isFetching || isFiltering,\n          copyInProgress,\n          removeProducts: () => removeProducts(selectedItems),\n          itemsSelected: selectedItems.length > 0,\n          meta,\n          fetchPortfolioItemsWithPortfolio: (...args) =>\n            dispatch(fetchPortfolioItemsWithPortfolio(...args)),\n          portfolioId: id,\n          userCapabilities,\n          canLinkOrderProcesses\n        })}\n      />\n      <ContentGallery\n        items={items}\n        isLoading={isFetching || isFiltering}\n        renderEmptyState={() => (\n          <PortfolioEmptyState\n            handleFilterChange={handleFilterChange}\n            meta={meta}\n            userCapabilities={userCapabilities}\n            url={routes.addProductsRoute}\n          />\n        )}\n      />\n      {meta.count > 0 && (\n        <BottomPaginationContainer>\n          <AsyncPagination\n            dropDirection=\"up\"\n            meta={meta}\n            apiProps={id}\n            apiRequest={(...args) =>\n              dispatch(fetchPortfolioItemsWithPortfolio(...args))\n            }\n          />\n        </BottomPaginationContainer>\n      )}\n    </Fragment>\n  );\n};\n\nPortfolioItems.propTypes = {\n  routes: PropTypes.shape({\n    addProductsRoute: PropTypes.string.isRequired,\n    portfolioRoute: PropTypes.string.isRequired\n  }).isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n  removeProducts: PropTypes.func.isRequired,\n  copyPortfolio: PropTypes.func.isRequired,\n  stateDispatch: PropTypes.func.isRequired,\n  state: PropTypes.shape({\n    removeInProgress: PropTypes.bool,\n    isFetching: PropTypes.bool,\n    isFiltering: PropTypes.bool,\n    copyInProgress: PropTypes.bool,\n    selectedItems: PropTypes.arrayOf(PropTypes.string),\n    filterValue: PropTypes.string\n  }).isRequired,\n  fromProducts: PropTypes.bool\n};\n\nexport default PortfolioItems;\n","/* eslint-disable react/prop-types */\nimport React, { HTMLProps } from 'react';\nimport clsx from 'clsx';\n\nconst BottomPaginationContainer: React.ComponentType<HTMLProps<\n  HTMLDivElement\n>> = ({ children, className, ...props }) => (\n  <div\n    className={clsx(\n      'pf-u-p-lg pf-u-pt-md pf-u-pb-md global-primary-background pf-u-mt-auto',\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </div>\n);\n\nexport default BottomPaginationContainer;\n","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","/* eslint-disable react/prop-types */\nimport React, { Fragment } from 'react';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport ItemDetails from './card-common';\nimport ConditionalLink from './conditional-link';\nimport EllipsisTextContainer from '../styled-components/ellipsis-text-container';\nimport { StyledCardBody } from '../styled-components/card';\nimport { StringObject } from '../../types/common-types';\n\nexport interface ServiceOfferingCardBodyProps {\n  name?: string;\n  display_name?: string;\n  distributor?: string;\n  pathname?: string;\n  searchParams?: StringObject;\n  preserveSearch?: boolean;\n  description?: string;\n  long_description?: string;\n  portfolioName?: string;\n}\nconst ServiceOfferingCardBody: React.ComponentType<ServiceOfferingCardBodyProps> = ({\n  name,\n  distributor,\n  pathname,\n  searchParams,\n  preserveSearch,\n  portfolioName,\n  ...props\n}) => (\n  <StyledCardBody>\n    <TextContent>\n      <ConditionalLink\n        pathname={pathname}\n        searchParams={searchParams}\n        preserveSearch={preserveSearch}\n      >\n        <Text component={TextVariants.h3} title={name}>\n          <EllipsisTextContainer>{name}</EllipsisTextContainer>\n        </Text>\n      </ConditionalLink>\n      {distributor && <Text component={TextVariants.small}>{distributor}</Text>}\n      {portfolioName && (\n        <Fragment>\n          <Text className=\"pf-u-mb-0\" component=\"small\">\n            Portfolio\n          </Text>\n          <Text>{portfolioName}</Text>\n        </Fragment>\n      )}\n    </TextContent>\n    <ItemDetails\n      toDisplay={[props.description ? 'description' : 'long_description']}\n      {...props}\n    />\n  </StyledCardBody>\n);\n\nexport default ServiceOfferingCardBody;\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\n// tslint:disable-next-line:no-empty\nconst defaultOnChange = () => { };\nexport class Checkbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event.currentTarget.checked, event);\n        };\n    }\n    render() {\n        const _a = this.props, { 'aria-label': ariaLabel, className, onChange, isValid, isDisabled, isChecked, label, checked, defaultChecked, description } = _a, props = __rest(_a, ['aria-label', \"className\", \"onChange\", \"isValid\", \"isDisabled\", \"isChecked\", \"label\", \"checked\", \"defaultChecked\", \"description\"]);\n        const checkedProps = {};\n        if ([true, false].includes(checked) || isChecked === true) {\n            checkedProps.checked = checked || isChecked;\n        }\n        if (onChange !== defaultOnChange) {\n            checkedProps.checked = isChecked;\n        }\n        if ([false, true].includes(defaultChecked)) {\n            checkedProps.defaultChecked = defaultChecked;\n        }\n        checkedProps.checked = checkedProps.checked === null ? false : checkedProps.checked;\n        return (React.createElement(\"div\", { className: css(styles.check, className) },\n            React.createElement(\"input\", Object.assign({}, props, { className: css(styles.checkInput), type: \"checkbox\", onChange: this.handleChange, \"aria-invalid\": !isValid, \"aria-label\": ariaLabel, disabled: isDisabled, ref: elem => elem && (elem.indeterminate = isChecked === null) }, checkedProps)),\n            label && (React.createElement(\"label\", { className: css(styles.checkLabel, isDisabled && styles.modifiers.disabled), htmlFor: props.id }, label)),\n            description && React.createElement(\"div\", { className: css(styles.checkDescription) }, description)));\n    }\n}\nCheckbox.displayName = 'Checkbox';\nCheckbox.defaultProps = {\n    className: '',\n    isValid: true,\n    isDisabled: false,\n    isChecked: false,\n    onChange: defaultOnChange\n};\n//# sourceMappingURL=Checkbox.js.map","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Checkbox } from '@patternfly/react-core';\n\nexport interface CardCheckboxProps {\n  handleCheck: (value: any) => void;\n  isChecked?: boolean;\n  id: string;\n}\nconst CardCheckbox: React.ComponentType<CardCheckboxProps> = ({\n  handleCheck,\n  isChecked,\n  id\n}) => (\n  <Checkbox\n    onClick={(event) => event.stopPropagation()}\n    isChecked={isChecked}\n    onChange={handleCheck}\n    aria-label=\"card checkbox\"\n    id={id}\n  />\n);\n\nexport default CardCheckbox;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardHeader = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nexports.CardHeader = (_a) => {\n    var { children = null, className = '' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: react_styles_1.css(card_1.default.cardHeader, className) }, props), children));\n};\nexports.CardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","\"use strict\"\nexports.__esModule = true;\nexports.WrenchIconConfig = {\n  name: 'WrenchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.WrenchIcon = require('../createIcon').createIcon(exports.WrenchIconConfig);\nexports[\"default\"] = exports.WrenchIcon;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardHeader, CardFooter, Level } from '@patternfly/react-core';\n\nimport { CATALOG_API_BASE } from '../../utilities/constants';\nimport CardIcon from '../../presentational-components/shared/card-icon';\nimport CardCheckbox from '../../presentational-components/shared/card-checkbox';\nimport ServiceOfferingCardBody from '../../presentational-components/shared/service-offering-body';\nimport {\n  StyledCard,\n  StyledGalleryItem\n} from '../../presentational-components/styled-components/styled-gallery';\nimport styled from 'styled-components';\n\nconst StyledLevel = styled(Level)`\n  flex: 1;\n`;\n\nconst PortfolioItem = (props) => (\n  <StyledGalleryItem isDisabled={props.removeInProgress && props.isSelected}>\n    <StyledCard>\n      <CardHeader>\n        <StyledLevel>\n          <CardIcon\n            src={`${CATALOG_API_BASE}/portfolio_items/${props.id}/icon`}\n            sourceId={props.service_offering_source_ref}\n          />\n          {props.isSelectable && (\n            <CardCheckbox\n              handleCheck={() => props.onSelect(props.id)}\n              isChecked={props.isSelected}\n              id={props.id}\n            />\n          )}\n        </StyledLevel>\n      </CardHeader>\n      <ServiceOfferingCardBody {...props} />\n      <CardFooter></CardFooter>\n    </StyledCard>\n  </StyledGalleryItem>\n);\n\nPortfolioItem.propTypes = {\n  id: PropTypes.string,\n  platformId: PropTypes.string,\n  service_offering_source_ref: PropTypes.string,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  onSelect: PropTypes.func,\n  orderUrl: PropTypes.string,\n  removeInProgress: PropTypes.bool,\n  portfolio_id: PropTypes.string,\n  metadata: PropTypes.shape({\n    user_capabilities: PropTypes.shape({ destroy: PropTypes.bool }).isRequired\n  }).isRequired\n};\n\nexport default PortfolioItem;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardFooter = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst card_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Card/card\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nexports.CardFooter = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: react_styles_1.css(card_1.default.cardFooter, className) }, props), children));\n};\nexports.CardFooter.displayName = 'CardFooter';\n//# sourceMappingURL=CardFooter.js.map","import { toolbarComponentTypes } from './toolbar-mapper';\n\nexport const createLinkButton = ({\n  pathname,\n  preserveSearch,\n  id,\n  ...item\n}) => ({\n  component: toolbarComponentTypes.TOOLBAR_ITEM,\n  key: `${item.key}/button-link`,\n  fields: [\n    {\n      component: toolbarComponentTypes.LINK,\n      pathname,\n      preserveSearch,\n      key: `${item.key}/button-link`,\n      isDisabled: item.isDisabled,\n      id,\n      fields: [\n        {\n          component: toolbarComponentTypes.BUTTON,\n          ...item\n        }\n      ]\n    }\n  ]\n});\n"],"sourceRoot":""}